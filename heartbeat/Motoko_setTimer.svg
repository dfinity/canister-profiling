<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="534" onload="init(evt)" viewBox="0 0 1024 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Motoko.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="517.00"> </text><svg id="frames" x="10" width="1004" total_samples="25395"><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="0.0000%" y="453" width="0.0354%" height="15" fill="rgb(248,177,22)" fg:x="0" fg:w="9"/><text x="0.2930%" y="463.50"></text></g><g><title>@reset_cycles (3 instructions, 0.01%)</title><rect x="0.0354%" y="453" width="0.0118%" height="15" fill="rgb(215,211,37)" fg:x="9" fg:w="3"/><text x="0.3284%" y="463.50"></text></g><g><title>@reset_refund (3 instructions, 0.01%)</title><rect x="0.0473%" y="453" width="0.0118%" height="15" fill="rgb(241,128,51)" fg:x="12" fg:w="3"/><text x="0.3402%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="0.0591%" y="437" width="0.1339%" height="15" fill="rgb(227,165,31)" fg:x="15" fg:w="34"/><text x="0.3520%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="0.0591%" y="453" width="0.1418%" height="15" fill="rgb(228,167,24)" fg:x="15" fg:w="36"/><text x="0.3520%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="0.2008%" y="421" width="0.2008%" height="15" fill="rgb(228,143,12)" fg:x="51" fg:w="51"/><text x="0.4938%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="0.4017%" y="421" width="0.1339%" height="15" fill="rgb(249,149,8)" fg:x="102" fg:w="34"/><text x="0.6946%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="0.5355%" y="421" width="0.2008%" height="15" fill="rgb(243,35,44)" fg:x="136" fg:w="51"/><text x="0.8285%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="0.7364%" y="421" width="0.2678%" height="15" fill="rgb(246,89,9)" fg:x="187" fg:w="68"/><text x="1.0293%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.14%)</title><rect x="0.2008%" y="437" width="1.1420%" height="15" fill="rgb(233,213,13)" fg:x="51" fg:w="290"/><text x="0.4938%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="1.3428%" y="437" width="0.0354%" height="15" fill="rgb(233,141,41)" fg:x="341" fg:w="9"/><text x="1.6358%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="1.3782%" y="421" width="0.0158%" height="15" fill="rgb(239,167,4)" fg:x="350" fg:w="4"/><text x="1.6712%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.07%)</title><rect x="1.3782%" y="437" width="0.0748%" height="15" fill="rgb(209,217,16)" fg:x="350" fg:w="19"/><text x="1.6712%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="1.4530%" y="437" width="0.2008%" height="15" fill="rgb(219,88,35)" fg:x="369" fg:w="51"/><text x="1.7460%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="1.6539%" y="437" width="0.2678%" height="15" fill="rgb(220,193,23)" fg:x="420" fg:w="68"/><text x="1.9468%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="1.9216%" y="437" width="0.0118%" height="15" fill="rgb(230,90,52)" fg:x="488" fg:w="3"/><text x="2.2146%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="1.9335%" y="437" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="491" fg:w="3"/><text x="2.2264%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="1.9453%" y="437" width="0.0118%" height="15" fill="rgb(206,74,20)" fg:x="494" fg:w="3"/><text x="2.2382%" y="447.50"></text></g><g><title>bigint_leb128_decode_word64 (36 instructions, 0.14%)</title><rect x="1.9571%" y="421" width="0.1418%" height="15" fill="rgb(230,138,44)" fg:x="497" fg:w="36"/><text x="2.2500%" y="431.50"></text></g><g><title>@deserialize_go&lt;N&gt; (80 instructions, 0.32%)</title><rect x="1.9571%" y="437" width="0.3150%" height="15" fill="rgb(235,182,43)" fg:x="497" fg:w="80"/><text x="2.2500%" y="447.50"></text></g><g><title>@deserialize&lt;N&gt; (730 instructions, 2.87%)</title><rect x="0.2008%" y="453" width="2.8746%" height="15" fill="rgb(242,16,51)" fg:x="51" fg:w="730"/><text x="0.4938%" y="463.50">@d..</text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="3.0754%" y="453" width="0.1024%" height="15" fill="rgb(248,9,4)" fg:x="781" fg:w="26"/><text x="3.3684%" y="463.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="3.1778%" y="437" width="0.1024%" height="15" fill="rgb(210,31,22)" fg:x="807" fg:w="26"/><text x="3.4708%" y="447.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="3.2802%" y="389" width="0.0315%" height="15" fill="rgb(239,54,39)" fg:x="833" fg:w="8"/><text x="3.5731%" y="399.50"></text></g><g><title>B_mul (27 instructions, 0.11%)</title><rect x="3.2802%" y="405" width="0.1063%" height="15" fill="rgb(230,99,41)" fg:x="833" fg:w="27"/><text x="3.5731%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="3.3865%" y="389" width="0.0315%" height="15" fill="rgb(253,106,12)" fg:x="860" fg:w="8"/><text x="3.6795%" y="399.50"></text></g><g><title>box_i64 (15 instructions, 0.06%)</title><rect x="3.3865%" y="405" width="0.0591%" height="15" fill="rgb(213,46,41)" fg:x="860" fg:w="15"/><text x="3.6795%" y="415.50"></text></g><g><title>toNanos (67 instructions, 0.26%)</title><rect x="3.2802%" y="421" width="0.2638%" height="15" fill="rgb(215,133,35)" fg:x="833" fg:w="67"/><text x="3.5731%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="3.5440%" y="405" width="0.1024%" height="15" fill="rgb(213,28,5)" fg:x="900" fg:w="26"/><text x="3.8370%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="3.6464%" y="389" width="0.0315%" height="15" fill="rgb(215,77,49)" fg:x="926" fg:w="8"/><text x="3.9394%" y="399.50"></text></g><g><title>B_add (25 instructions, 0.10%)</title><rect x="3.6464%" y="405" width="0.0984%" height="15" fill="rgb(248,100,22)" fg:x="926" fg:w="25"/><text x="3.9394%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="3.7448%" y="405" width="0.0276%" height="15" fill="rgb(208,67,9)" fg:x="951" fg:w="7"/><text x="4.0378%" y="415.50"></text></g><g><title>add&lt;Nat64&gt; (12 instructions, 0.05%)</title><rect x="3.7724%" y="405" width="0.0473%" height="15" fill="rgb(219,133,21)" fg:x="958" fg:w="12"/><text x="4.0654%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="3.8196%" y="405" width="0.1024%" height="15" fill="rgb(246,46,29)" fg:x="970" fg:w="26"/><text x="4.1126%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="3.9220%" y="389" width="0.0315%" height="15" fill="rgb(246,185,52)" fg:x="996" fg:w="8"/><text x="4.2150%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="3.9535%" y="389" width="0.1024%" height="15" fill="rgb(252,136,11)" fg:x="1004" fg:w="26"/><text x="4.2465%" y="399.50"></text></g><g><title>box_i64 (46 instructions, 0.18%)</title><rect x="3.9220%" y="405" width="0.1811%" height="15" fill="rgb(219,138,53)" fg:x="996" fg:w="46"/><text x="4.2150%" y="415.50"></text></g><g><title>@prune (15 instructions, 0.06%)</title><rect x="4.1032%" y="405" width="0.0591%" height="15" fill="rgb(211,51,23)" fg:x="1042" fg:w="15"/><text x="4.3961%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="4.1622%" y="389" width="0.1024%" height="15" fill="rgb(247,221,28)" fg:x="1057" fg:w="26"/><text x="4.4552%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="4.2646%" y="389" width="0.1024%" height="15" fill="rgb(251,222,45)" fg:x="1083" fg:w="26"/><text x="4.5576%" y="399.50"></text></g><g><title>insert (125 instructions, 0.49%)</title><rect x="4.1622%" y="405" width="0.4922%" height="15" fill="rgb(217,162,53)" fg:x="1057" fg:w="125"/><text x="4.4552%" y="415.50"></text></g><g><title>opt_inject (14 instructions, 0.06%)</title><rect x="4.6545%" y="405" width="0.0551%" height="15" fill="rgb(229,93,14)" fg:x="1182" fg:w="14"/><text x="4.9474%" y="415.50"></text></g><g><title>opt_project (14 instructions, 0.06%)</title><rect x="4.7096%" y="389" width="0.0551%" height="15" fill="rgb(209,67,49)" fg:x="1196" fg:w="14"/><text x="5.0026%" y="399.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.06%)</title><rect x="4.7647%" y="389" width="0.0630%" height="15" fill="rgb(213,87,29)" fg:x="1210" fg:w="16"/><text x="5.0577%" y="399.50"></text></g><g><title>@nextExpiration (10 instructions, 0.04%)</title><rect x="4.8277%" y="389" width="0.0394%" height="15" fill="rgb(205,151,52)" fg:x="1226" fg:w="10"/><text x="5.1207%" y="399.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="4.8671%" y="389" width="0.0276%" height="15" fill="rgb(253,215,39)" fg:x="1236" fg:w="7"/><text x="5.1601%" y="399.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.06%)</title><rect x="4.8947%" y="389" width="0.0630%" height="15" fill="rgb(221,220,41)" fg:x="1243" fg:w="16"/><text x="5.1876%" y="399.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="4.9577%" y="373" width="0.0473%" height="15" fill="rgb(218,133,21)" fg:x="1259" fg:w="12"/><text x="5.2506%" y="383.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="4.9577%" y="389" width="0.0906%" height="15" fill="rgb(221,193,43)" fg:x="1259" fg:w="23"/><text x="5.2506%" y="399.50"></text></g><g><title>unbox_i64 (5 instructions, 0.02%)</title><rect x="5.0482%" y="389" width="0.0197%" height="15" fill="rgb(240,128,52)" fg:x="1282" fg:w="5"/><text x="5.3412%" y="399.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="5.0679%" y="373" width="0.0315%" height="15" fill="rgb(253,114,12)" fg:x="1287" fg:w="8"/><text x="5.3609%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="5.0994%" y="373" width="0.1024%" height="15" fill="rgb(215,223,47)" fg:x="1295" fg:w="26"/><text x="5.3924%" y="383.50"></text></g><g><title>box_i64 (46 instructions, 0.18%)</title><rect x="5.0679%" y="389" width="0.1811%" height="15" fill="rgb(248,225,23)" fg:x="1287" fg:w="46"/><text x="5.3609%" y="399.50"></text></g><g><title>@nextExpiration (181 instructions, 0.71%)</title><rect x="4.7096%" y="405" width="0.7127%" height="15" fill="rgb(250,108,0)" fg:x="1196" fg:w="181"/><text x="5.0026%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.02%)</title><rect x="5.4223%" y="405" width="0.0197%" height="15" fill="rgb(228,208,7)" fg:x="1377" fg:w="5"/><text x="5.7153%" y="415.50"></text></g><g><title>@setTimer (566 instructions, 2.23%)</title><rect x="3.5440%" y="421" width="2.2288%" height="15" fill="rgb(244,45,10)" fg:x="900" fg:w="566"/><text x="3.8370%" y="431.50">@..</text></g><g><title>setTimer (640 instructions, 2.52%)</title><rect x="3.2802%" y="437" width="2.5202%" height="15" fill="rgb(207,125,25)" fg:x="833" fg:w="640"/><text x="3.5731%" y="447.50">s..</text></g><g><title>@buffer_size&lt;N&gt; (32 instructions, 0.13%)</title><rect x="5.8004%" y="405" width="0.1260%" height="15" fill="rgb(210,195,18)" fg:x="1473" fg:w="32"/><text x="6.0933%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="5.9264%" y="389" width="0.1339%" height="15" fill="rgb(249,80,12)" fg:x="1505" fg:w="34"/><text x="6.2193%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="5.9264%" y="405" width="0.1418%" height="15" fill="rgb(221,65,9)" fg:x="1505" fg:w="36"/><text x="6.2193%" y="415.50"></text></g><g><title>memcpy (66 instructions, 0.26%)</title><rect x="6.0681%" y="405" width="0.2599%" height="15" fill="rgb(235,49,36)" fg:x="1541" fg:w="66"/><text x="6.3611%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="6.3280%" y="389" width="0.1339%" height="15" fill="rgb(225,32,20)" fg:x="1607" fg:w="34"/><text x="6.6210%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="6.3280%" y="405" width="0.1418%" height="15" fill="rgb(215,141,46)" fg:x="1607" fg:w="36"/><text x="6.6210%" y="415.50"></text></g><g><title>leb128_encode (12 instructions, 0.05%)</title><rect x="6.4698%" y="389" width="0.0473%" height="15" fill="rgb(250,160,47)" fg:x="1643" fg:w="12"/><text x="6.7627%" y="399.50"></text></g><g><title>@serialize_go&lt;N&gt; (40 instructions, 0.16%)</title><rect x="6.4698%" y="405" width="0.1575%" height="15" fill="rgb(216,222,40)" fg:x="1643" fg:w="40"/><text x="6.7627%" y="415.50"></text></g><g><title>@serialize&lt;N&gt; (273 instructions, 1.08%)</title><rect x="5.8004%" y="421" width="1.0750%" height="15" fill="rgb(234,217,39)" fg:x="1473" fg:w="273"/><text x="6.0933%" y="431.50"></text></g><g><title>reply_with_data (32 instructions, 0.13%)</title><rect x="6.8754%" y="421" width="0.1260%" height="15" fill="rgb(207,178,40)" fg:x="1746" fg:w="32"/><text x="7.1683%" y="431.50"></text></g><g><title>$lambda (310 instructions, 1.22%)</title><rect x="5.8004%" y="437" width="1.2207%" height="15" fill="rgb(221,136,13)" fg:x="1473" fg:w="310"/><text x="6.0933%" y="447.50"></text></g><g><title>$lambda (999 instructions, 3.93%)</title><rect x="3.1778%" y="453" width="3.9338%" height="15" fill="rgb(249,199,10)" fg:x="807" fg:w="999"/><text x="3.4708%" y="463.50">$la..</text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="7.1116%" y="453" width="0.1969%" height="15" fill="rgb(249,222,13)" fg:x="1806" fg:w="50"/><text x="7.4046%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="7.3085%" y="453" width="0.0551%" height="15" fill="rgb(244,185,38)" fg:x="1856" fg:w="14"/><text x="7.6015%" y="463.50"></text></g><g><title>setTimer (2,347 instructions, 9.24%)</title><rect x="0.0000%" y="469" width="9.2420%" height="15" fill="rgb(236,202,9)" fg:x="0" fg:w="2347"/><text x="0.2930%" y="479.50">setTimer</text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.2420%" y="405" width="0.1024%" height="15" fill="rgb(250,229,37)" fg:x="2347" fg:w="26"/><text x="9.5349%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.3444%" y="405" width="0.1024%" height="15" fill="rgb(206,174,23)" fg:x="2373" fg:w="26"/><text x="9.6373%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.4467%" y="405" width="0.1024%" height="15" fill="rgb(211,33,43)" fg:x="2399" fg:w="26"/><text x="9.7397%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.5491%" y="405" width="0.1024%" height="15" fill="rgb(245,58,50)" fg:x="2425" fg:w="26"/><text x="9.8421%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.6515%" y="405" width="0.1024%" height="15" fill="rgb(244,68,36)" fg:x="2451" fg:w="26"/><text x="9.9445%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="9.7539%" y="405" width="0.1024%" height="15" fill="rgb(232,229,15)" fg:x="2477" fg:w="26"/><text x="10.0469%" y="415.50"></text></g><g><title>@new_async (266 instructions, 1.05%)</title><rect x="9.2420%" y="421" width="1.0475%" height="15" fill="rgb(254,30,23)" fg:x="2347" fg:w="266"/><text x="9.5349%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="10.2894%" y="421" width="0.1024%" height="15" fill="rgb(235,160,14)" fg:x="2613" fg:w="26"/><text x="10.5824%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="10.3918%" y="421" width="0.1024%" height="15" fill="rgb(212,155,44)" fg:x="2639" fg:w="26"/><text x="10.6848%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="10.4942%" y="389" width="0.1339%" height="15" fill="rgb(226,2,50)" fg:x="2665" fg:w="34"/><text x="10.7872%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="10.4942%" y="405" width="0.1418%" height="15" fill="rgb(234,177,6)" fg:x="2665" fg:w="36"/><text x="10.7872%" y="415.50"></text></g><g><title>canister_self (46 instructions, 0.18%)</title><rect x="10.4942%" y="421" width="0.1811%" height="15" fill="rgb(217,24,9)" fg:x="2665" fg:w="46"/><text x="10.7872%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="10.6753%" y="405" width="0.1024%" height="15" fill="rgb(220,13,46)" fg:x="2711" fg:w="26"/><text x="10.9683%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="10.6753%" y="421" width="0.1614%" height="15" fill="rgb(239,221,27)" fg:x="2711" fg:w="41"/><text x="10.9683%" y="431.50"></text></g><g><title>as_ptr_size (7 instructions, 0.03%)</title><rect x="10.8368%" y="421" width="0.0276%" height="15" fill="rgb(222,198,25)" fg:x="2752" fg:w="7"/><text x="11.1297%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="10.8643%" y="389" width="0.1339%" height="15" fill="rgb(211,99,13)" fg:x="2759" fg:w="34"/><text x="11.1573%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="10.8643%" y="405" width="0.1418%" height="15" fill="rgb(232,111,31)" fg:x="2759" fg:w="36"/><text x="11.1573%" y="415.50"></text></g><g><title>canister_self (46 instructions, 0.18%)</title><rect x="10.8643%" y="421" width="0.1811%" height="15" fill="rgb(245,82,37)" fg:x="2759" fg:w="46"/><text x="11.1573%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="11.0455%" y="405" width="0.1024%" height="15" fill="rgb(227,149,46)" fg:x="2805" fg:w="26"/><text x="11.3385%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="11.0455%" y="421" width="0.1614%" height="15" fill="rgb(218,36,50)" fg:x="2805" fg:w="41"/><text x="11.3385%" y="431.50"></text></g><g><title>as_ptr_size (7 instructions, 0.03%)</title><rect x="11.2069%" y="421" width="0.0276%" height="15" fill="rgb(226,80,48)" fg:x="2846" fg:w="7"/><text x="11.4999%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="11.2345%" y="421" width="0.1024%" height="15" fill="rgb(238,224,15)" fg:x="2853" fg:w="26"/><text x="11.5275%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_array::h46eb48fb0843db64 (39 instructions, 0.15%)</title><rect x="11.3369%" y="405" width="0.1536%" height="15" fill="rgb(241,136,10)" fg:x="2879" fg:w="39"/><text x="11.6298%" y="415.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::write_barrier::h280e65fb17d8d8df (9 instructions, 0.04%)</title><rect x="11.4905%" y="405" width="0.0354%" height="15" fill="rgb(208,32,45)" fg:x="2918" fg:w="9"/><text x="11.7834%" y="415.50"></text></g><g><title>remember_continuation (3,725 instructions, 14.67%)</title><rect x="11.3369%" y="421" width="14.6682%" height="15" fill="rgb(207,135,9)" fg:x="2879" fg:w="3725"/><text x="11.6298%" y="431.50">remember_continuati..</text></g><g><title>box_i32 (9 instructions, 0.04%)</title><rect x="26.0051%" y="421" width="0.0354%" height="15" fill="rgb(206,86,44)" fg:x="6604" fg:w="9"/><text x="26.2981%" y="431.50"></text></g><g><title>@buffer_size&lt;n32&gt; (18 instructions, 0.07%)</title><rect x="26.0406%" y="405" width="0.0709%" height="15" fill="rgb(245,177,15)" fg:x="6613" fg:w="18"/><text x="26.3335%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="26.1114%" y="389" width="0.1339%" height="15" fill="rgb(206,64,50)" fg:x="6631" fg:w="34"/><text x="26.4044%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="26.1114%" y="405" width="0.1418%" height="15" fill="rgb(234,36,40)" fg:x="6631" fg:w="36"/><text x="26.4044%" y="415.50"></text></g><g><title>memcpy (66 instructions, 0.26%)</title><rect x="26.2532%" y="405" width="0.2599%" height="15" fill="rgb(213,64,8)" fg:x="6667" fg:w="66"/><text x="26.5462%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="26.5131%" y="389" width="0.1339%" height="15" fill="rgb(210,75,36)" fg:x="6733" fg:w="34"/><text x="26.8061%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="26.5131%" y="405" width="0.1418%" height="15" fill="rgb(229,88,21)" fg:x="6733" fg:w="36"/><text x="26.8061%" y="415.50"></text></g><g><title>unbox_i32 (6 instructions, 0.02%)</title><rect x="26.6549%" y="389" width="0.0236%" height="15" fill="rgb(252,204,47)" fg:x="6769" fg:w="6"/><text x="26.9478%" y="399.50"></text></g><g><title>@serialize_go&lt;n32&gt; (17 instructions, 0.07%)</title><rect x="26.6549%" y="405" width="0.0669%" height="15" fill="rgb(208,77,27)" fg:x="6769" fg:w="17"/><text x="26.9478%" y="415.50"></text></g><g><title>@serialize&lt;n32&gt; (236 instructions, 0.93%)</title><rect x="26.0406%" y="421" width="0.9293%" height="15" fill="rgb(221,76,26)" fg:x="6613" fg:w="236"/><text x="26.3335%" y="431.50"></text></g><g><title>@reset_cycles (3 instructions, 0.01%)</title><rect x="26.9699%" y="405" width="0.0118%" height="15" fill="rgb(225,139,18)" fg:x="6849" fg:w="3"/><text x="27.2628%" y="415.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="26.9817%" y="325" width="0.1496%" height="15" fill="rgb(230,137,11)" fg:x="6852" fg:w="38"/><text x="27.2747%" y="335.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="27.1313%" y="325" width="0.9608%" height="15" fill="rgb(212,28,1)" fg:x="6890" fg:w="244"/><text x="27.4243%" y="335.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="26.9817%" y="341" width="1.2128%" height="15" fill="rgb(248,164,17)" fg:x="6852" fg:w="308"/><text x="27.2747%" y="351.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="26.9817%" y="357" width="1.2719%" height="15" fill="rgb(222,171,42)" fg:x="6852" fg:w="323"/><text x="27.2747%" y="367.50"></text></g><g><title>mp_set_u64 (480 instructions, 1.89%)</title><rect x="28.2536%" y="341" width="1.8901%" height="15" fill="rgb(243,84,45)" fg:x="7175" fg:w="480"/><text x="28.5466%" y="351.50"></text></g><g><title>mp_set_i64 (494 instructions, 1.95%)</title><rect x="28.2536%" y="357" width="1.9453%" height="15" fill="rgb(252,49,23)" fg:x="7175" fg:w="494"/><text x="28.5466%" y="367.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="30.1989%" y="357" width="0.1221%" height="15" fill="rgb(215,19,7)" fg:x="7669" fg:w="31"/><text x="30.4918%" y="367.50"></text></g><g><title>bigint_of_int64 (891 instructions, 3.51%)</title><rect x="26.9817%" y="373" width="3.5086%" height="15" fill="rgb(238,81,41)" fg:x="6852" fg:w="891"/><text x="27.2747%" y="383.50">big..</text></g><g><title>mp_cmp_mag (17 instructions, 0.07%)</title><rect x="30.4903%" y="341" width="0.0669%" height="15" fill="rgb(210,199,37)" fg:x="7743" fg:w="17"/><text x="30.7832%" y="351.50"></text></g><g><title>mp_cmp (31 instructions, 0.12%)</title><rect x="30.4903%" y="357" width="0.1221%" height="15" fill="rgb(244,192,49)" fg:x="7743" fg:w="31"/><text x="30.7832%" y="367.50"></text></g><g><title>bigint_lt (54 instructions, 0.21%)</title><rect x="30.4903%" y="373" width="0.2126%" height="15" fill="rgb(226,211,11)" fg:x="7743" fg:w="54"/><text x="30.7832%" y="383.50"></text></g><g><title>B_lt (963 instructions, 3.79%)</title><rect x="26.9817%" y="389" width="3.7921%" height="15" fill="rgb(236,162,54)" fg:x="6852" fg:w="963"/><text x="27.2747%" y="399.50">B_lt</text></g><g><title>B_rsh (12 instructions, 0.05%)</title><rect x="30.7738%" y="389" width="0.0473%" height="15" fill="rgb(220,229,9)" fg:x="7815" fg:w="12"/><text x="31.0667%" y="399.50"></text></g><g><title>cycle_add (999 instructions, 3.93%)</title><rect x="26.9817%" y="405" width="3.9338%" height="15" fill="rgb(250,87,22)" fg:x="6852" fg:w="999"/><text x="27.2747%" y="415.50">cyc..</text></g><g><title>@add_cycles (1,009 instructions, 3.97%)</title><rect x="26.9699%" y="421" width="3.9732%" height="15" fill="rgb(239,43,17)" fg:x="6849" fg:w="1009"/><text x="27.2628%" y="431.50">@ad..</text></g><g><title>@timer_helper (5,648 instructions, 22.24%)</title><rect x="9.2420%" y="437" width="22.2406%" height="15" fill="rgb(231,177,25)" fg:x="2347" fg:w="5648"/><text x="9.5349%" y="447.50">@timer_helper</text></g><g><title>timer_exp (5,656 instructions, 22.27%)</title><rect x="9.2420%" y="453" width="22.2721%" height="15" fill="rgb(219,179,1)" fg:x="2347" fg:w="5656"/><text x="9.5349%" y="463.50">timer_exp</text></g><g><title>canister_global_timer (5,860 instructions, 23.08%)</title><rect x="9.2420%" y="469" width="23.0754%" height="15" fill="rgb(238,219,53)" fg:x="2347" fg:w="5860"/><text x="9.5349%" y="479.50">canister_global_timer</text></g><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="32.3174%" y="453" width="0.0354%" height="15" fill="rgb(232,167,36)" fg:x="8207" fg:w="9"/><text x="32.6104%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="32.3528%" y="437" width="0.1339%" height="15" fill="rgb(244,19,51)" fg:x="8216" fg:w="34"/><text x="32.6458%" y="447.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="32.4946%" y="437" width="0.1339%" height="15" fill="rgb(224,6,22)" fg:x="8252" fg:w="34"/><text x="32.7876%" y="447.50"></text></g><g><title>alloc_blob (72 instructions, 0.28%)</title><rect x="32.3528%" y="453" width="0.2835%" height="15" fill="rgb(224,145,5)" fg:x="8216" fg:w="72"/><text x="32.6458%" y="463.50"></text></g><g><title>memcmp (217 instructions, 0.85%)</title><rect x="32.6363%" y="453" width="0.8545%" height="15" fill="rgb(234,130,49)" fg:x="8288" fg:w="217"/><text x="32.9293%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="33.4908%" y="437" width="0.1339%" height="15" fill="rgb(254,6,2)" fg:x="8505" fg:w="34"/><text x="33.7838%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="33.4908%" y="453" width="0.1418%" height="15" fill="rgb(208,96,46)" fg:x="8505" fg:w="36"/><text x="33.7838%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="33.6326%" y="421" width="0.2008%" height="15" fill="rgb(239,3,39)" fg:x="8541" fg:w="51"/><text x="33.9256%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="33.8334%" y="421" width="0.1339%" height="15" fill="rgb(233,210,1)" fg:x="8592" fg:w="34"/><text x="34.1264%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="33.9673%" y="421" width="0.2008%" height="15" fill="rgb(244,137,37)" fg:x="8626" fg:w="51"/><text x="34.2603%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="34.1681%" y="421" width="0.2678%" height="15" fill="rgb(240,136,2)" fg:x="8677" fg:w="68"/><text x="34.4611%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.14%)</title><rect x="33.6326%" y="437" width="1.1420%" height="15" fill="rgb(239,18,37)" fg:x="8541" fg:w="290"/><text x="33.9256%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="34.7746%" y="437" width="0.0354%" height="15" fill="rgb(218,185,22)" fg:x="8831" fg:w="9"/><text x="35.0675%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="34.8100%" y="421" width="0.0158%" height="15" fill="rgb(225,218,4)" fg:x="8840" fg:w="4"/><text x="35.1030%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.07%)</title><rect x="34.8100%" y="437" width="0.0748%" height="15" fill="rgb(230,182,32)" fg:x="8840" fg:w="19"/><text x="35.1030%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="34.8848%" y="437" width="0.2008%" height="15" fill="rgb(242,56,43)" fg:x="8859" fg:w="51"/><text x="35.1778%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="35.0856%" y="437" width="0.2678%" height="15" fill="rgb(233,99,24)" fg:x="8910" fg:w="68"/><text x="35.3786%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="35.3534%" y="437" width="0.0118%" height="15" fill="rgb(234,209,42)" fg:x="8978" fg:w="3"/><text x="35.6464%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="35.3652%" y="437" width="0.0118%" height="15" fill="rgb(227,7,12)" fg:x="8981" fg:w="3"/><text x="35.6582%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="35.3770%" y="437" width="0.0118%" height="15" fill="rgb(245,203,43)" fg:x="8984" fg:w="3"/><text x="35.6700%" y="447.50"></text></g><g><title>box_i32 (9 instructions, 0.04%)</title><rect x="35.3889%" y="421" width="0.0354%" height="15" fill="rgb(238,205,33)" fg:x="8987" fg:w="9"/><text x="35.6818%" y="431.50"></text></g><g><title>@deserialize_go&lt;n32&gt; (46 instructions, 0.18%)</title><rect x="35.3889%" y="437" width="0.1811%" height="15" fill="rgb(231,56,7)" fg:x="8987" fg:w="46"/><text x="35.6818%" y="447.50"></text></g><g><title>@deserialize&lt;n32&gt; (696 instructions, 2.74%)</title><rect x="33.6326%" y="453" width="2.7407%" height="15" fill="rgb(244,186,29)" fg:x="8541" fg:w="696"/><text x="33.9256%" y="463.50">@..</text></g><g><title>unbox_i32 (6 instructions, 0.02%)</title><rect x="36.3733%" y="453" width="0.0236%" height="15" fill="rgb(234,111,31)" fg:x="9237" fg:w="6"/><text x="36.6663%" y="463.50"></text></g><g><title>peek_future_continuation (36 instructions, 0.14%)</title><rect x="36.3969%" y="453" width="0.1418%" height="15" fill="rgb(241,149,10)" fg:x="9243" fg:w="36"/><text x="36.6899%" y="463.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="36.5387%" y="421" width="0.1024%" height="15" fill="rgb(249,206,44)" fg:x="9279" fg:w="26"/><text x="36.8317%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="36.6411%" y="421" width="0.1024%" height="15" fill="rgb(251,153,30)" fg:x="9305" fg:w="26"/><text x="36.9340%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="36.7435%" y="421" width="0.1024%" height="15" fill="rgb(239,152,38)" fg:x="9331" fg:w="26"/><text x="37.0364%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="36.8458%" y="421" width="0.1024%" height="15" fill="rgb(249,139,47)" fg:x="9357" fg:w="26"/><text x="37.1388%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="36.9482%" y="421" width="0.1024%" height="15" fill="rgb(244,64,35)" fg:x="9383" fg:w="26"/><text x="37.2412%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="37.0506%" y="421" width="0.1024%" height="15" fill="rgb(216,46,15)" fg:x="9409" fg:w="26"/><text x="37.3436%" y="431.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="37.1530%" y="405" width="0.0315%" height="15" fill="rgb(250,74,19)" fg:x="9435" fg:w="8"/><text x="37.4460%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="37.1845%" y="405" width="0.1024%" height="15" fill="rgb(249,42,33)" fg:x="9443" fg:w="26"/><text x="37.4775%" y="415.50"></text></g><g><title>box_i64 (46 instructions, 0.18%)</title><rect x="37.1530%" y="421" width="0.1811%" height="15" fill="rgb(242,149,17)" fg:x="9435" fg:w="46"/><text x="37.4460%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_array::h46eb48fb0843db64 (39 instructions, 0.15%)</title><rect x="37.3341%" y="389" width="0.1536%" height="15" fill="rgb(244,29,21)" fg:x="9481" fg:w="39"/><text x="37.6271%" y="399.50"></text></g><g><title>alloc_array (41 instructions, 0.16%)</title><rect x="37.3341%" y="405" width="0.1614%" height="15" fill="rgb(220,130,37)" fg:x="9481" fg:w="41"/><text x="37.6271%" y="415.50"></text></g><g><title>Array_init (190 instructions, 0.75%)</title><rect x="37.3341%" y="421" width="0.7482%" height="15" fill="rgb(211,67,2)" fg:x="9481" fg:w="190"/><text x="37.6271%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="38.0823%" y="421" width="0.1024%" height="15" fill="rgb(235,68,52)" fg:x="9671" fg:w="26"/><text x="38.3753%" y="431.50"></text></g><g><title>opt_project (14 instructions, 0.06%)</title><rect x="38.1847%" y="405" width="0.0551%" height="15" fill="rgb(246,142,3)" fg:x="9697" fg:w="14"/><text x="38.4777%" y="415.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.06%)</title><rect x="38.2398%" y="405" width="0.0630%" height="15" fill="rgb(241,25,7)" fg:x="9711" fg:w="16"/><text x="38.5328%" y="415.50"></text></g><g><title>gatherExpired (20 instructions, 0.08%)</title><rect x="38.3028%" y="405" width="0.0788%" height="15" fill="rgb(242,119,39)" fg:x="9727" fg:w="20"/><text x="38.5958%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.06%)</title><rect x="38.3816%" y="405" width="0.0630%" height="15" fill="rgb(241,98,45)" fg:x="9747" fg:w="16"/><text x="38.6745%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="38.4446%" y="389" width="0.0473%" height="15" fill="rgb(254,28,30)" fg:x="9763" fg:w="12"/><text x="38.7375%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="38.4446%" y="405" width="0.0906%" height="15" fill="rgb(241,142,54)" fg:x="9763" fg:w="23"/><text x="38.7375%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.02%)</title><rect x="38.5351%" y="405" width="0.0197%" height="15" fill="rgb(222,85,15)" fg:x="9786" fg:w="5"/><text x="38.8281%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.06%)</title><rect x="38.5548%" y="405" width="0.0630%" height="15" fill="rgb(210,85,47)" fg:x="9791" fg:w="16"/><text x="38.8478%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="38.6178%" y="389" width="0.0473%" height="15" fill="rgb(224,206,25)" fg:x="9807" fg:w="12"/><text x="38.9108%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="38.6178%" y="405" width="0.0906%" height="15" fill="rgb(243,201,19)" fg:x="9807" fg:w="23"/><text x="38.9108%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.02%)</title><rect x="38.7084%" y="405" width="0.0197%" height="15" fill="rgb(236,59,4)" fg:x="9830" fg:w="5"/><text x="39.0014%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.02%)</title><rect x="38.7281%" y="405" width="0.0197%" height="15" fill="rgb(254,179,45)" fg:x="9835" fg:w="5"/><text x="39.0211%" y="415.50"></text></g><g><title>B_lt (10 instructions, 0.04%)</title><rect x="38.7478%" y="405" width="0.0394%" height="15" fill="rgb(226,14,10)" fg:x="9840" fg:w="10"/><text x="39.0408%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="38.7872%" y="389" width="0.0473%" height="15" fill="rgb(244,27,41)" fg:x="9850" fg:w="12"/><text x="39.0801%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="38.7872%" y="405" width="0.0906%" height="15" fill="rgb(235,35,32)" fg:x="9850" fg:w="23"/><text x="39.0801%" y="415.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.06%)</title><rect x="38.8777%" y="405" width="0.0630%" height="15" fill="rgb(218,68,31)" fg:x="9873" fg:w="16"/><text x="39.1707%" y="415.50"></text></g><g><title>opt_inject (14 instructions, 0.06%)</title><rect x="38.9407%" y="405" width="0.0551%" height="15" fill="rgb(207,120,37)" fg:x="9889" fg:w="14"/><text x="39.2337%" y="415.50"></text></g><g><title>obj_idx&lt;5&gt; (16 instructions, 0.06%)</title><rect x="38.9959%" y="405" width="0.0630%" height="15" fill="rgb(227,98,0)" fg:x="9903" fg:w="16"/><text x="39.2888%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.06%)</title><rect x="39.0589%" y="405" width="0.0630%" height="15" fill="rgb(207,7,3)" fg:x="9919" fg:w="16"/><text x="39.3518%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="39.1219%" y="389" width="0.0473%" height="15" fill="rgb(206,98,19)" fg:x="9935" fg:w="12"/><text x="39.4148%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="39.1219%" y="405" width="0.0906%" height="15" fill="rgb(217,5,26)" fg:x="9935" fg:w="23"/><text x="39.4148%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="39.2124%" y="389" width="0.0315%" height="15" fill="rgb(235,190,38)" fg:x="9958" fg:w="8"/><text x="39.5054%" y="399.50"></text></g><g><title>B_add (25 instructions, 0.10%)</title><rect x="39.2124%" y="405" width="0.0984%" height="15" fill="rgb(247,86,24)" fg:x="9958" fg:w="25"/><text x="39.5054%" y="415.50"></text></g><g><title>obj_idx&lt;4&gt; (16 instructions, 0.06%)</title><rect x="39.3109%" y="405" width="0.0630%" height="15" fill="rgb(205,101,16)" fg:x="9983" fg:w="16"/><text x="39.6039%" y="415.50"></text></g><g><title>gatherExpired (20 instructions, 0.08%)</title><rect x="39.3739%" y="405" width="0.0788%" height="15" fill="rgb(246,168,33)" fg:x="9999" fg:w="20"/><text x="39.6669%" y="415.50"></text></g><g><title>gatherExpired (447 instructions, 1.76%)</title><rect x="38.1847%" y="421" width="1.7602%" height="15" fill="rgb(231,114,1)" fg:x="9697" fg:w="447"/><text x="38.4777%" y="431.50"></text></g><g><title>opt_project (14 instructions, 0.06%)</title><rect x="39.9449%" y="405" width="0.0551%" height="15" fill="rgb(207,184,53)" fg:x="10144" fg:w="14"/><text x="40.2378%" y="415.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.06%)</title><rect x="40.0000%" y="405" width="0.0630%" height="15" fill="rgb(224,95,51)" fg:x="10158" fg:w="16"/><text x="40.2930%" y="415.50"></text></g><g><title>@nextExpiration (10 instructions, 0.04%)</title><rect x="40.0630%" y="405" width="0.0394%" height="15" fill="rgb(212,188,45)" fg:x="10174" fg:w="10"/><text x="40.3560%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.1024%" y="405" width="0.0276%" height="15" fill="rgb(223,154,38)" fg:x="10184" fg:w="7"/><text x="40.3954%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.06%)</title><rect x="40.1299%" y="405" width="0.0630%" height="15" fill="rgb(251,22,52)" fg:x="10191" fg:w="16"/><text x="40.4229%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.05%)</title><rect x="40.1930%" y="389" width="0.0473%" height="15" fill="rgb(229,209,22)" fg:x="10207" fg:w="12"/><text x="40.4859%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.09%)</title><rect x="40.1930%" y="405" width="0.0906%" height="15" fill="rgb(234,138,34)" fg:x="10207" fg:w="23"/><text x="40.4859%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.2835%" y="405" width="0.0276%" height="15" fill="rgb(212,95,11)" fg:x="10230" fg:w="7"/><text x="40.5765%" y="415.50"></text></g><g><title>obj_idx&lt;4&gt; (16 instructions, 0.06%)</title><rect x="40.3111%" y="405" width="0.0630%" height="15" fill="rgb(240,179,47)" fg:x="10237" fg:w="16"/><text x="40.6041%" y="415.50"></text></g><g><title>@nextExpiration (10 instructions, 0.04%)</title><rect x="40.3741%" y="405" width="0.0394%" height="15" fill="rgb(240,163,11)" fg:x="10253" fg:w="10"/><text x="40.6671%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.4135%" y="405" width="0.0276%" height="15" fill="rgb(236,37,12)" fg:x="10263" fg:w="7"/><text x="40.7064%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="40.4410%" y="389" width="0.0315%" height="15" fill="rgb(232,164,16)" fg:x="10270" fg:w="8"/><text x="40.7340%" y="399.50"></text></g><g><title>box_i64 (15 instructions, 0.06%)</title><rect x="40.4410%" y="405" width="0.0591%" height="15" fill="rgb(244,205,15)" fg:x="10270" fg:w="15"/><text x="40.7340%" y="415.50"></text></g><g><title>@nextExpiration (193 instructions, 0.76%)</title><rect x="39.9449%" y="421" width="0.7600%" height="15" fill="rgb(223,117,47)" fg:x="10144" fg:w="193"/><text x="40.2378%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.7049%" y="421" width="0.0276%" height="15" fill="rgb(244,107,35)" fg:x="10337" fg:w="7"/><text x="40.9978%" y="431.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.03%)</title><rect x="40.7324%" y="405" width="0.0315%" height="15" fill="rgb(205,140,8)" fg:x="10344" fg:w="8"/><text x="41.0254%" y="415.50"></text></g><g><title>box_i64 (15 instructions, 0.06%)</title><rect x="40.7324%" y="421" width="0.0591%" height="15" fill="rgb(228,84,46)" fg:x="10344" fg:w="15"/><text x="41.0254%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.7915%" y="421" width="0.0276%" height="15" fill="rgb(254,188,9)" fg:x="10359" fg:w="7"/><text x="41.0845%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.03%)</title><rect x="40.8191%" y="421" width="0.0276%" height="15" fill="rgb(206,112,54)" fg:x="10366" fg:w="7"/><text x="41.1120%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="40.8466%" y="421" width="0.1024%" height="15" fill="rgb(216,84,49)" fg:x="10373" fg:w="26"/><text x="41.1396%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="40.9490%" y="421" width="0.1024%" height="15" fill="rgb(214,194,35)" fg:x="10399" fg:w="26"/><text x="41.2420%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.0514%" y="421" width="0.1024%" height="15" fill="rgb(249,28,3)" fg:x="10425" fg:w="26"/><text x="41.3444%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.1538%" y="421" width="0.1024%" height="15" fill="rgb(222,56,52)" fg:x="10451" fg:w="26"/><text x="41.4467%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.2562%" y="421" width="0.1024%" height="15" fill="rgb(245,217,50)" fg:x="10477" fg:w="26"/><text x="41.5491%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.3585%" y="405" width="0.1024%" height="15" fill="rgb(213,201,24)" fg:x="10503" fg:w="26"/><text x="41.6515%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.4609%" y="405" width="0.1024%" height="15" fill="rgb(248,116,28)" fg:x="10529" fg:w="26"/><text x="41.7539%" y="415.50"></text></g><g><title>opt_project (14 instructions, 0.06%)</title><rect x="41.5633%" y="405" width="0.0551%" height="15" fill="rgb(219,72,43)" fg:x="10555" fg:w="14"/><text x="41.8563%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.6184%" y="373" width="0.1024%" height="15" fill="rgb(209,138,14)" fg:x="10569" fg:w="26"/><text x="41.9114%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.7208%" y="373" width="0.1024%" height="15" fill="rgb(222,18,33)" fg:x="10595" fg:w="26"/><text x="42.0138%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.8232%" y="373" width="0.1024%" height="15" fill="rgb(213,199,7)" fg:x="10621" fg:w="26"/><text x="42.1162%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="41.9256%" y="373" width="0.1024%" height="15" fill="rgb(250,110,10)" fg:x="10647" fg:w="26"/><text x="42.2185%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="42.0280%" y="373" width="0.1024%" height="15" fill="rgb(248,123,6)" fg:x="10673" fg:w="26"/><text x="42.3209%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="42.1303%" y="373" width="0.1024%" height="15" fill="rgb(206,91,31)" fg:x="10699" fg:w="26"/><text x="42.4233%" y="383.50"></text></g><g><title>@new_async (266 instructions, 1.05%)</title><rect x="41.6184%" y="389" width="1.0475%" height="15" fill="rgb(211,154,13)" fg:x="10569" fg:w="266"/><text x="41.9114%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="42.6659%" y="389" width="0.1024%" height="15" fill="rgb(225,148,7)" fg:x="10835" fg:w="26"/><text x="42.9588%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="42.7683%" y="389" width="0.1024%" height="15" fill="rgb(220,160,43)" fg:x="10861" fg:w="26"/><text x="43.0612%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="42.8706%" y="357" width="0.1339%" height="15" fill="rgb(213,52,39)" fg:x="10887" fg:w="34"/><text x="43.1636%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="42.8706%" y="373" width="0.1418%" height="15" fill="rgb(243,137,7)" fg:x="10887" fg:w="36"/><text x="43.1636%" y="383.50"></text></g><g><title>canister_self (46 instructions, 0.18%)</title><rect x="42.8706%" y="389" width="0.1811%" height="15" fill="rgb(230,79,13)" fg:x="10887" fg:w="46"/><text x="43.1636%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="43.0518%" y="373" width="0.1024%" height="15" fill="rgb(247,105,23)" fg:x="10933" fg:w="26"/><text x="43.3448%" y="383.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="43.0518%" y="389" width="0.1614%" height="15" fill="rgb(223,179,41)" fg:x="10933" fg:w="41"/><text x="43.3448%" y="399.50"></text></g><g><title>as_ptr_size (7 instructions, 0.03%)</title><rect x="43.2132%" y="389" width="0.0276%" height="15" fill="rgb(218,9,34)" fg:x="10974" fg:w="7"/><text x="43.5062%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="43.2408%" y="357" width="0.1339%" height="15" fill="rgb(222,106,8)" fg:x="10981" fg:w="34"/><text x="43.5338%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="43.2408%" y="373" width="0.1418%" height="15" fill="rgb(211,220,0)" fg:x="10981" fg:w="36"/><text x="43.5338%" y="383.50"></text></g><g><title>canister_self (46 instructions, 0.18%)</title><rect x="43.2408%" y="389" width="0.1811%" height="15" fill="rgb(229,52,16)" fg:x="10981" fg:w="46"/><text x="43.5338%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="43.4219%" y="373" width="0.1024%" height="15" fill="rgb(212,155,18)" fg:x="11027" fg:w="26"/><text x="43.7149%" y="383.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="43.4219%" y="389" width="0.1614%" height="15" fill="rgb(242,21,14)" fg:x="11027" fg:w="41"/><text x="43.7149%" y="399.50"></text></g><g><title>as_ptr_size (7 instructions, 0.03%)</title><rect x="43.5834%" y="389" width="0.0276%" height="15" fill="rgb(222,19,48)" fg:x="11068" fg:w="7"/><text x="43.8764%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="43.6109%" y="389" width="0.1024%" height="15" fill="rgb(232,45,27)" fg:x="11075" fg:w="26"/><text x="43.9039%" y="399.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::write_barrier::h280e65fb17d8d8df (9 instructions, 0.04%)</title><rect x="43.7133%" y="373" width="0.0354%" height="15" fill="rgb(249,103,42)" fg:x="11101" fg:w="9"/><text x="44.0063%" y="383.50"></text></g><g><title>remember_continuation (71 instructions, 0.28%)</title><rect x="43.7133%" y="389" width="0.2796%" height="15" fill="rgb(246,81,33)" fg:x="11101" fg:w="71"/><text x="44.0063%" y="399.50"></text></g><g><title>box_i32 (9 instructions, 0.04%)</title><rect x="43.9929%" y="389" width="0.0354%" height="15" fill="rgb(252,33,42)" fg:x="11172" fg:w="9"/><text x="44.2859%" y="399.50"></text></g><g><title>@buffer_size&lt;n32&gt; (18 instructions, 0.07%)</title><rect x="44.0284%" y="373" width="0.0709%" height="15" fill="rgb(209,212,41)" fg:x="11181" fg:w="18"/><text x="44.3213%" y="383.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="44.0992%" y="357" width="0.1339%" height="15" fill="rgb(207,154,6)" fg:x="11199" fg:w="34"/><text x="44.3922%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="44.0992%" y="373" width="0.1418%" height="15" fill="rgb(223,64,47)" fg:x="11199" fg:w="36"/><text x="44.3922%" y="383.50"></text></g><g><title>memcpy (66 instructions, 0.26%)</title><rect x="44.2410%" y="373" width="0.2599%" height="15" fill="rgb(211,161,38)" fg:x="11235" fg:w="66"/><text x="44.5340%" y="383.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="44.5009%" y="357" width="0.1339%" height="15" fill="rgb(219,138,40)" fg:x="11301" fg:w="34"/><text x="44.7939%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="44.5009%" y="373" width="0.1418%" height="15" fill="rgb(241,228,46)" fg:x="11301" fg:w="36"/><text x="44.7939%" y="383.50"></text></g><g><title>unbox_i32 (6 instructions, 0.02%)</title><rect x="44.6426%" y="357" width="0.0236%" height="15" fill="rgb(223,209,38)" fg:x="11337" fg:w="6"/><text x="44.9356%" y="367.50"></text></g><g><title>@serialize_go&lt;n32&gt; (17 instructions, 0.07%)</title><rect x="44.6426%" y="373" width="0.0669%" height="15" fill="rgb(236,164,45)" fg:x="11337" fg:w="17"/><text x="44.9356%" y="383.50"></text></g><g><title>@serialize&lt;n32&gt; (236 instructions, 0.93%)</title><rect x="44.0284%" y="389" width="0.9293%" height="15" fill="rgb(231,15,5)" fg:x="11181" fg:w="236"/><text x="44.3213%" y="399.50"></text></g><g><title>@reset_cycles (3 instructions, 0.01%)</title><rect x="44.9577%" y="373" width="0.0118%" height="15" fill="rgb(252,35,15)" fg:x="11417" fg:w="3"/><text x="45.2506%" y="383.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="44.9695%" y="293" width="0.1496%" height="15" fill="rgb(248,181,18)" fg:x="11420" fg:w="38"/><text x="45.2625%" y="303.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="45.1191%" y="293" width="0.9608%" height="15" fill="rgb(233,39,42)" fg:x="11458" fg:w="244"/><text x="45.4121%" y="303.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="44.9695%" y="309" width="1.2128%" height="15" fill="rgb(238,110,33)" fg:x="11420" fg:w="308"/><text x="45.2625%" y="319.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="44.9695%" y="325" width="1.2719%" height="15" fill="rgb(233,195,10)" fg:x="11420" fg:w="323"/><text x="45.2625%" y="335.50"></text></g><g><title>mp_set_u64 (480 instructions, 1.89%)</title><rect x="46.2414%" y="309" width="1.8901%" height="15" fill="rgb(254,105,3)" fg:x="11743" fg:w="480"/><text x="46.5344%" y="319.50"></text></g><g><title>mp_set_i64 (494 instructions, 1.95%)</title><rect x="46.2414%" y="325" width="1.9453%" height="15" fill="rgb(221,225,9)" fg:x="11743" fg:w="494"/><text x="46.5344%" y="335.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="48.1867%" y="325" width="0.1221%" height="15" fill="rgb(224,227,45)" fg:x="12237" fg:w="31"/><text x="48.4796%" y="335.50"></text></g><g><title>bigint_of_int64 (891 instructions, 3.51%)</title><rect x="44.9695%" y="341" width="3.5086%" height="15" fill="rgb(229,198,43)" fg:x="11420" fg:w="891"/><text x="45.2625%" y="351.50">big..</text></g><g><title>mp_cmp_mag (17 instructions, 0.07%)</title><rect x="48.4780%" y="309" width="0.0669%" height="15" fill="rgb(206,209,35)" fg:x="12311" fg:w="17"/><text x="48.7710%" y="319.50"></text></g><g><title>mp_cmp (31 instructions, 0.12%)</title><rect x="48.4780%" y="325" width="0.1221%" height="15" fill="rgb(245,195,53)" fg:x="12311" fg:w="31"/><text x="48.7710%" y="335.50"></text></g><g><title>bigint_lt (54 instructions, 0.21%)</title><rect x="48.4780%" y="341" width="0.2126%" height="15" fill="rgb(240,92,26)" fg:x="12311" fg:w="54"/><text x="48.7710%" y="351.50"></text></g><g><title>B_lt (963 instructions, 3.79%)</title><rect x="44.9695%" y="357" width="3.7921%" height="15" fill="rgb(207,40,23)" fg:x="11420" fg:w="963"/><text x="45.2625%" y="367.50">B_lt</text></g><g><title>B_rsh (12 instructions, 0.05%)</title><rect x="48.7616%" y="357" width="0.0473%" height="15" fill="rgb(223,111,35)" fg:x="12383" fg:w="12"/><text x="49.0545%" y="367.50"></text></g><g><title>cycle_add (999 instructions, 3.93%)</title><rect x="44.9695%" y="373" width="3.9338%" height="15" fill="rgb(229,147,28)" fg:x="11420" fg:w="999"/><text x="45.2625%" y="383.50">cyc..</text></g><g><title>@add_cycles (1,009 instructions, 3.97%)</title><rect x="44.9577%" y="389" width="3.9732%" height="15" fill="rgb(211,29,28)" fg:x="11417" fg:w="1009"/><text x="45.2506%" y="399.50">@ad..</text></g><g><title>anon-func-5.34 (1,994 instructions, 7.85%)</title><rect x="41.6184%" y="405" width="7.8519%" height="15" fill="rgb(228,72,33)" fg:x="10569" fg:w="1994"/><text x="41.9114%" y="415.50">anon-func..</text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.4782%" y="373" width="0.1024%" height="15" fill="rgb(205,214,31)" fg:x="12565" fg:w="26"/><text x="49.7712%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.5806%" y="373" width="0.1024%" height="15" fill="rgb(224,111,15)" fg:x="12591" fg:w="26"/><text x="49.8736%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.6830%" y="341" width="0.1024%" height="15" fill="rgb(253,21,26)" fg:x="12617" fg:w="26"/><text x="49.9760%" y="351.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.7854%" y="341" width="0.1024%" height="15" fill="rgb(245,139,43)" fg:x="12643" fg:w="26"/><text x="50.0784%" y="351.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.8878%" y="309" width="0.1024%" height="15" fill="rgb(252,170,7)" fg:x="12669" fg:w="26"/><text x="50.1807%" y="319.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="49.9902%" y="309" width="0.1024%" height="15" fill="rgb(231,118,14)" fg:x="12695" fg:w="26"/><text x="50.2831%" y="319.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.0925%" y="277" width="0.1024%" height="15" fill="rgb(238,83,0)" fg:x="12721" fg:w="26"/><text x="50.3855%" y="287.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.1949%" y="277" width="0.1024%" height="15" fill="rgb(221,39,39)" fg:x="12747" fg:w="26"/><text x="50.4879%" y="287.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.2973%" y="245" width="0.1024%" height="15" fill="rgb(222,119,46)" fg:x="12773" fg:w="26"/><text x="50.5903%" y="255.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.3997%" y="245" width="0.1024%" height="15" fill="rgb(222,165,49)" fg:x="12799" fg:w="26"/><text x="50.6927%" y="255.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.5021%" y="213" width="0.1024%" height="15" fill="rgb(219,113,52)" fg:x="12825" fg:w="26"/><text x="50.7950%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.6044%" y="213" width="0.1024%" height="15" fill="rgb(214,7,15)" fg:x="12851" fg:w="26"/><text x="50.8974%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.7068%" y="181" width="0.1024%" height="15" fill="rgb(235,32,4)" fg:x="12877" fg:w="26"/><text x="50.9998%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.8092%" y="181" width="0.1024%" height="15" fill="rgb(238,90,54)" fg:x="12903" fg:w="26"/><text x="51.1022%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="50.9116%" y="149" width="0.1024%" height="15" fill="rgb(213,208,19)" fg:x="12929" fg:w="26"/><text x="51.2046%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="51.0140%" y="149" width="0.1024%" height="15" fill="rgb(233,156,4)" fg:x="12955" fg:w="26"/><text x="51.3069%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="51.1164%" y="117" width="0.1024%" height="15" fill="rgb(207,194,5)" fg:x="12981" fg:w="26"/><text x="51.4093%" y="127.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="51.2187%" y="117" width="0.1024%" height="15" fill="rgb(206,111,30)" fg:x="13007" fg:w="26"/><text x="51.5117%" y="127.50"></text></g><g><title>@buffer_size&lt;u&gt; (14 instructions, 0.06%)</title><rect x="51.3211%" y="53" width="0.0551%" height="15" fill="rgb(243,70,54)" fg:x="13033" fg:w="14"/><text x="51.6141%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="51.3763%" y="37" width="0.1339%" height="15" fill="rgb(242,28,8)" fg:x="13047" fg:w="34"/><text x="51.6692%" y="47.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="51.3763%" y="53" width="0.1418%" height="15" fill="rgb(219,106,18)" fg:x="13047" fg:w="36"/><text x="51.6692%" y="63.50"></text></g><g><title>memcpy (63 instructions, 0.25%)</title><rect x="51.5180%" y="53" width="0.2481%" height="15" fill="rgb(244,222,10)" fg:x="13083" fg:w="63"/><text x="51.8110%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="51.7661%" y="37" width="0.1339%" height="15" fill="rgb(236,179,52)" fg:x="13146" fg:w="34"/><text x="52.0591%" y="47.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="51.7661%" y="53" width="0.1418%" height="15" fill="rgb(213,23,39)" fg:x="13146" fg:w="36"/><text x="52.0591%" y="63.50"></text></g><g><title>@serialize_go&lt;u&gt; (4 instructions, 0.02%)</title><rect x="51.9079%" y="53" width="0.0158%" height="15" fill="rgb(238,48,10)" fg:x="13182" fg:w="4"/><text x="52.2008%" y="63.50"></text></g><g><title>@serialize&lt;&gt; (216 instructions, 0.85%)</title><rect x="51.3211%" y="69" width="0.8506%" height="15" fill="rgb(251,196,23)" fg:x="13033" fg:w="216"/><text x="51.6141%" y="79.50"></text></g><g><title>reply_with_data (30 instructions, 0.12%)</title><rect x="52.1717%" y="69" width="0.1181%" height="15" fill="rgb(250,152,24)" fg:x="13249" fg:w="30"/><text x="52.4647%" y="79.50"></text></g><g><title>$lambda (251 instructions, 0.99%)</title><rect x="51.3211%" y="85" width="0.9884%" height="15" fill="rgb(209,150,17)" fg:x="13033" fg:w="251"/><text x="51.6141%" y="95.50"></text></g><g><title>$loop/0 (282 instructions, 1.11%)</title><rect x="51.3211%" y="101" width="1.1105%" height="15" fill="rgb(234,202,34)" fg:x="13033" fg:w="282"/><text x="51.6141%" y="111.50"></text></g><g><title>$k/9 (299 instructions, 1.18%)</title><rect x="51.3211%" y="117" width="1.1774%" height="15" fill="rgb(253,148,53)" fg:x="13033" fg:w="299"/><text x="51.6141%" y="127.50"></text></g><g><title>$loop/0 (434 instructions, 1.71%)</title><rect x="51.1164%" y="133" width="1.7090%" height="15" fill="rgb(218,129,16)" fg:x="12981" fg:w="434"/><text x="51.4093%" y="143.50"></text></g><g><title>$k/9 (451 instructions, 1.78%)</title><rect x="51.1164%" y="149" width="1.7759%" height="15" fill="rgb(216,85,19)" fg:x="12981" fg:w="451"/><text x="51.4093%" y="159.50"></text></g><g><title>$loop/0 (586 instructions, 2.31%)</title><rect x="50.9116%" y="165" width="2.3075%" height="15" fill="rgb(235,228,7)" fg:x="12929" fg:w="586"/><text x="51.2046%" y="175.50">$..</text></g><g><title>$k/9 (603 instructions, 2.37%)</title><rect x="50.9116%" y="181" width="2.3745%" height="15" fill="rgb(245,175,0)" fg:x="12929" fg:w="603"/><text x="51.2046%" y="191.50">$..</text></g><g><title>$loop/0 (738 instructions, 2.91%)</title><rect x="50.7068%" y="197" width="2.9061%" height="15" fill="rgb(208,168,36)" fg:x="12877" fg:w="738"/><text x="50.9998%" y="207.50">$l..</text></g><g><title>$k/9 (755 instructions, 2.97%)</title><rect x="50.7068%" y="213" width="2.9730%" height="15" fill="rgb(246,171,24)" fg:x="12877" fg:w="755"/><text x="50.9998%" y="223.50">$k..</text></g><g><title>$loop/0 (890 instructions, 3.50%)</title><rect x="50.5021%" y="229" width="3.5046%" height="15" fill="rgb(215,142,24)" fg:x="12825" fg:w="890"/><text x="50.7950%" y="239.50">$lo..</text></g><g><title>$k/9 (907 instructions, 3.57%)</title><rect x="50.5021%" y="245" width="3.5716%" height="15" fill="rgb(250,187,7)" fg:x="12825" fg:w="907"/><text x="50.7950%" y="255.50">$k/9</text></g><g><title>$loop/0 (1,042 instructions, 4.10%)</title><rect x="50.2973%" y="261" width="4.1032%" height="15" fill="rgb(228,66,33)" fg:x="12773" fg:w="1042"/><text x="50.5903%" y="271.50">$lo..</text></g><g><title>$k/9 (1,059 instructions, 4.17%)</title><rect x="50.2973%" y="277" width="4.1701%" height="15" fill="rgb(234,215,21)" fg:x="12773" fg:w="1059"/><text x="50.5903%" y="287.50">$k/9</text></g><g><title>$loop/0 (1,194 instructions, 4.70%)</title><rect x="50.0925%" y="293" width="4.7017%" height="15" fill="rgb(222,191,20)" fg:x="12721" fg:w="1194"/><text x="50.3855%" y="303.50">$loo..</text></g><g><title>$k/9 (1,211 instructions, 4.77%)</title><rect x="50.0925%" y="309" width="4.7687%" height="15" fill="rgb(245,79,54)" fg:x="12721" fg:w="1211"/><text x="50.3855%" y="319.50">$k/9</text></g><g><title>$loop/0 (1,346 instructions, 5.30%)</title><rect x="49.8878%" y="325" width="5.3003%" height="15" fill="rgb(240,10,37)" fg:x="12669" fg:w="1346"/><text x="50.1807%" y="335.50">$loop..</text></g><g><title>$k/9 (1,363 instructions, 5.37%)</title><rect x="49.8878%" y="341" width="5.3672%" height="15" fill="rgb(214,192,32)" fg:x="12669" fg:w="1363"/><text x="50.1807%" y="351.50">$k/9</text></g><g><title>$loop/0 (1,498 instructions, 5.90%)</title><rect x="49.6830%" y="357" width="5.8988%" height="15" fill="rgb(209,36,54)" fg:x="12617" fg:w="1498"/><text x="49.9760%" y="367.50">$loop/0</text></g><g><title>$k/9 (1,515 instructions, 5.97%)</title><rect x="49.6830%" y="373" width="5.9657%" height="15" fill="rgb(220,10,11)" fg:x="12617" fg:w="1515"/><text x="49.9760%" y="383.50">$k/9</text></g><g><title>$loop/0 (1,650 instructions, 6.50%)</title><rect x="49.4782%" y="389" width="6.4973%" height="15" fill="rgb(221,106,17)" fg:x="12565" fg:w="1650"/><text x="49.7712%" y="399.50">$loop/0</text></g><g><title>$k/9 (1,667 instructions, 6.56%)</title><rect x="49.4782%" y="405" width="6.5643%" height="15" fill="rgb(251,142,44)" fg:x="12565" fg:w="1667"/><text x="49.7712%" y="415.50">$k/9</text></g><g><title>$loop/0 (3,822 instructions, 15.05%)</title><rect x="41.3585%" y="421" width="15.0502%" height="15" fill="rgb(238,13,15)" fg:x="10503" fg:w="3822"/><text x="41.6515%" y="431.50">$loop/0</text></g><g><title>$lambda (5,288 instructions, 20.82%)</title><rect x="36.5387%" y="437" width="20.8230%" height="15" fill="rgb(208,107,27)" fg:x="9279" fg:w="5288"/><text x="36.8317%" y="447.50">$lambda</text></g><g><title>anon_async (5,292 instructions, 20.84%)</title><rect x="36.5387%" y="453" width="20.8387%" height="15" fill="rgb(205,136,37)" fg:x="9279" fg:w="5292"/><text x="36.8317%" y="463.50">anon_async</text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="57.3774%" y="453" width="0.1969%" height="15" fill="rgb(250,205,27)" fg:x="14571" fg:w="50"/><text x="57.6704%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="57.5743%" y="453" width="0.0551%" height="15" fill="rgb(210,80,43)" fg:x="14621" fg:w="14"/><text x="57.8673%" y="463.50"></text></g><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="59.5550%" y="453" width="0.0354%" height="15" fill="rgb(247,160,36)" fg:x="15124" fg:w="9"/><text x="59.8480%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="59.5905%" y="437" width="0.1339%" height="15" fill="rgb(234,13,49)" fg:x="15133" fg:w="34"/><text x="59.8834%" y="447.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="59.7322%" y="437" width="0.1339%" height="15" fill="rgb(234,122,0)" fg:x="15169" fg:w="34"/><text x="60.0252%" y="447.50"></text></g><g><title>alloc_blob (72 instructions, 0.28%)</title><rect x="59.5905%" y="453" width="0.2835%" height="15" fill="rgb(207,146,38)" fg:x="15133" fg:w="72"/><text x="59.8834%" y="463.50"></text></g><g><title>memcmp (217 instructions, 0.85%)</title><rect x="59.8740%" y="453" width="0.8545%" height="15" fill="rgb(207,177,25)" fg:x="15205" fg:w="217"/><text x="60.1670%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="60.7285%" y="437" width="0.1339%" height="15" fill="rgb(211,178,42)" fg:x="15422" fg:w="34"/><text x="61.0215%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="60.7285%" y="453" width="0.1418%" height="15" fill="rgb(230,69,54)" fg:x="15422" fg:w="36"/><text x="61.0215%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="60.8703%" y="421" width="0.2008%" height="15" fill="rgb(214,135,41)" fg:x="15458" fg:w="51"/><text x="61.1632%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="61.0711%" y="421" width="0.1339%" height="15" fill="rgb(237,67,25)" fg:x="15509" fg:w="34"/><text x="61.3640%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="61.2050%" y="421" width="0.2008%" height="15" fill="rgb(222,189,50)" fg:x="15543" fg:w="51"/><text x="61.4979%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="61.4058%" y="421" width="0.2678%" height="15" fill="rgb(245,148,34)" fg:x="15594" fg:w="68"/><text x="61.6988%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.14%)</title><rect x="60.8703%" y="437" width="1.1420%" height="15" fill="rgb(222,29,6)" fg:x="15458" fg:w="290"/><text x="61.1632%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="62.0122%" y="437" width="0.0354%" height="15" fill="rgb(221,189,43)" fg:x="15748" fg:w="9"/><text x="62.3052%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="62.0476%" y="421" width="0.0158%" height="15" fill="rgb(207,36,27)" fg:x="15757" fg:w="4"/><text x="62.3406%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.07%)</title><rect x="62.0476%" y="437" width="0.0748%" height="15" fill="rgb(217,90,24)" fg:x="15757" fg:w="19"/><text x="62.3406%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="62.1225%" y="437" width="0.2008%" height="15" fill="rgb(224,66,35)" fg:x="15776" fg:w="51"/><text x="62.4154%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.27%)</title><rect x="62.3233%" y="437" width="0.2678%" height="15" fill="rgb(221,13,50)" fg:x="15827" fg:w="68"/><text x="62.6163%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.01%)</title><rect x="62.5911%" y="437" width="0.0118%" height="15" fill="rgb(236,68,49)" fg:x="15895" fg:w="3"/><text x="62.8840%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.01%)</title><rect x="62.6029%" y="437" width="0.0118%" height="15" fill="rgb(229,146,28)" fg:x="15898" fg:w="3"/><text x="62.8958%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.01%)</title><rect x="62.6147%" y="437" width="0.0118%" height="15" fill="rgb(225,31,38)" fg:x="15901" fg:w="3"/><text x="62.9077%" y="447.50"></text></g><g><title>box_i32 (9 instructions, 0.04%)</title><rect x="62.6265%" y="421" width="0.0354%" height="15" fill="rgb(250,208,3)" fg:x="15904" fg:w="9"/><text x="62.9195%" y="431.50"></text></g><g><title>@deserialize_go&lt;n32&gt; (46 instructions, 0.18%)</title><rect x="62.6265%" y="437" width="0.1811%" height="15" fill="rgb(246,54,23)" fg:x="15904" fg:w="46"/><text x="62.9195%" y="447.50"></text></g><g><title>@deserialize&lt;n32&gt; (696 instructions, 2.74%)</title><rect x="60.8703%" y="453" width="2.7407%" height="15" fill="rgb(243,76,11)" fg:x="15458" fg:w="696"/><text x="61.1632%" y="463.50">@..</text></g><g><title>unbox_i32 (6 instructions, 0.02%)</title><rect x="63.6109%" y="453" width="0.0236%" height="15" fill="rgb(245,21,50)" fg:x="16154" fg:w="6"/><text x="63.9039%" y="463.50"></text></g><g><title>peek_future_continuation (36 instructions, 0.14%)</title><rect x="63.6346%" y="453" width="0.1418%" height="15" fill="rgb(228,9,43)" fg:x="16160" fg:w="36"/><text x="63.9275%" y="463.50"></text></g><g><title>@buffer_size&lt;u&gt; (14 instructions, 0.06%)</title><rect x="63.7763%" y="389" width="0.0551%" height="15" fill="rgb(208,100,47)" fg:x="16196" fg:w="14"/><text x="64.0693%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="63.8315%" y="373" width="0.1339%" height="15" fill="rgb(232,26,8)" fg:x="16210" fg:w="34"/><text x="64.1244%" y="383.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="63.8315%" y="389" width="0.1418%" height="15" fill="rgb(216,166,38)" fg:x="16210" fg:w="36"/><text x="64.1244%" y="399.50"></text></g><g><title>memcpy (63 instructions, 0.25%)</title><rect x="63.9732%" y="389" width="0.2481%" height="15" fill="rgb(251,202,51)" fg:x="16246" fg:w="63"/><text x="64.2662%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="64.2213%" y="373" width="0.1339%" height="15" fill="rgb(254,216,34)" fg:x="16309" fg:w="34"/><text x="64.5143%" y="383.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="64.2213%" y="389" width="0.1418%" height="15" fill="rgb(251,32,27)" fg:x="16309" fg:w="36"/><text x="64.5143%" y="399.50"></text></g><g><title>@serialize_go&lt;u&gt; (4 instructions, 0.02%)</title><rect x="64.3631%" y="389" width="0.0158%" height="15" fill="rgb(208,127,28)" fg:x="16345" fg:w="4"/><text x="64.6560%" y="399.50"></text></g><g><title>@serialize&lt;&gt; (216 instructions, 0.85%)</title><rect x="63.7763%" y="405" width="0.8506%" height="15" fill="rgb(224,137,22)" fg:x="16196" fg:w="216"/><text x="64.0693%" y="415.50"></text></g><g><title>reply_with_data (30 instructions, 0.12%)</title><rect x="64.6269%" y="405" width="0.1181%" height="15" fill="rgb(254,70,32)" fg:x="16412" fg:w="30"/><text x="64.9199%" y="415.50"></text></g><g><title>$lambda (251 instructions, 0.99%)</title><rect x="63.7763%" y="421" width="0.9884%" height="15" fill="rgb(229,75,37)" fg:x="16196" fg:w="251"/><text x="64.0693%" y="431.50"></text></g><g><title>$lambda (256 instructions, 1.01%)</title><rect x="63.7763%" y="437" width="1.0081%" height="15" fill="rgb(252,64,23)" fg:x="16196" fg:w="256"/><text x="64.0693%" y="447.50"></text></g><g><title>anon_async (260 instructions, 1.02%)</title><rect x="63.7763%" y="453" width="1.0238%" height="15" fill="rgb(232,162,48)" fg:x="16196" fg:w="260"/><text x="64.0693%" y="463.50"></text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="64.8002%" y="453" width="0.1969%" height="15" fill="rgb(246,160,12)" fg:x="16456" fg:w="50"/><text x="65.0931%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="64.9970%" y="453" width="0.0551%" height="15" fill="rgb(247,166,0)" fg:x="16506" fg:w="14"/><text x="65.2900%" y="463.50"></text></g><g><title>__motoko_async_helper (8,802 instructions, 34.66%)</title><rect x="32.3174%" y="469" width="34.6604%" height="15" fill="rgb(249,219,21)" fg:x="8207" fg:w="8802"/><text x="32.6104%" y="479.50">__motoko_async_helper</text></g><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="66.9778%" y="453" width="0.0354%" height="15" fill="rgb(205,209,3)" fg:x="17009" fg:w="9"/><text x="67.2707%" y="463.50"></text></g><g><title>recall_continuation (57 instructions, 0.22%)</title><rect x="67.0132%" y="453" width="0.2245%" height="15" fill="rgb(243,44,1)" fg:x="17018" fg:w="57"/><text x="67.3062%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="67.2376%" y="437" width="0.1339%" height="15" fill="rgb(206,159,16)" fg:x="17075" fg:w="34"/><text x="67.5306%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="67.2376%" y="453" width="0.1418%" height="15" fill="rgb(244,77,30)" fg:x="17075" fg:w="36"/><text x="67.5306%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="67.3794%" y="421" width="0.2008%" height="15" fill="rgb(218,69,12)" fg:x="17111" fg:w="51"/><text x="67.6724%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="67.5802%" y="421" width="0.1339%" height="15" fill="rgb(212,87,7)" fg:x="17162" fg:w="34"/><text x="67.8732%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="67.7141%" y="421" width="0.2008%" height="15" fill="rgb(245,114,25)" fg:x="17196" fg:w="51"/><text x="68.0071%" y="431.50"></text></g><g><title>parse_idl_header (207 instructions, 0.82%)</title><rect x="67.3794%" y="437" width="0.8151%" height="15" fill="rgb(210,61,42)" fg:x="17111" fg:w="207"/><text x="67.6724%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="68.1945%" y="437" width="0.0354%" height="15" fill="rgb(211,52,33)" fg:x="17318" fg:w="9"/><text x="68.4875%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="68.2300%" y="421" width="0.0158%" height="15" fill="rgb(234,58,33)" fg:x="17327" fg:w="4"/><text x="68.5229%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.07%)</title><rect x="68.2300%" y="437" width="0.0748%" height="15" fill="rgb(220,115,36)" fg:x="17327" fg:w="19"/><text x="68.5229%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="68.3048%" y="437" width="0.2008%" height="15" fill="rgb(243,153,54)" fg:x="17346" fg:w="51"/><text x="68.5978%" y="447.50"></text></g><g><title>@deserialize&lt;&gt; (436 instructions, 1.72%)</title><rect x="67.3794%" y="453" width="1.7169%" height="15" fill="rgb(251,47,18)" fg:x="17111" fg:w="436"/><text x="67.6724%" y="463.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="69.0963%" y="309" width="0.1496%" height="15" fill="rgb(242,102,42)" fg:x="17547" fg:w="38"/><text x="69.3892%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="69.2459%" y="309" width="0.9608%" height="15" fill="rgb(234,31,38)" fg:x="17585" fg:w="244"/><text x="69.5389%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="69.0963%" y="325" width="1.2128%" height="15" fill="rgb(221,117,51)" fg:x="17547" fg:w="308"/><text x="69.3892%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="69.0963%" y="341" width="1.2719%" height="15" fill="rgb(212,20,18)" fg:x="17547" fg:w="323"/><text x="69.3892%" y="351.50"></text></g><g><title>mp_set_u32 (480 instructions, 1.89%)</title><rect x="70.3682%" y="341" width="1.8901%" height="15" fill="rgb(245,133,36)" fg:x="17870" fg:w="480"/><text x="70.6612%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="72.2583%" y="341" width="0.1221%" height="15" fill="rgb(212,6,19)" fg:x="18350" fg:w="31"/><text x="72.5513%" y="351.50"></text></g><g><title>bigint_of_word32 (877 instructions, 3.45%)</title><rect x="69.0963%" y="357" width="3.4534%" height="15" fill="rgb(218,1,36)" fg:x="17547" fg:w="877"/><text x="69.3892%" y="367.50">bi..</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="72.5497%" y="309" width="0.1496%" height="15" fill="rgb(246,84,54)" fg:x="18424" fg:w="38"/><text x="72.8427%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="72.6994%" y="309" width="0.9608%" height="15" fill="rgb(242,110,6)" fg:x="18462" fg:w="244"/><text x="72.9923%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="72.5497%" y="325" width="1.2128%" height="15" fill="rgb(214,47,5)" fg:x="18424" fg:w="308"/><text x="72.8427%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="72.5497%" y="341" width="1.2719%" height="15" fill="rgb(218,159,25)" fg:x="18424" fg:w="323"/><text x="72.8427%" y="351.50"></text></g><g><title>mp_copy (39 instructions, 0.15%)</title><rect x="73.8216%" y="325" width="0.1536%" height="15" fill="rgb(215,211,28)" fg:x="18747" fg:w="39"/><text x="74.1146%" y="335.50"></text></g><g><title>mp_lshd (12 instructions, 0.05%)</title><rect x="73.9752%" y="325" width="0.0473%" height="15" fill="rgb(238,59,32)" fg:x="18786" fg:w="12"/><text x="74.2682%" y="335.50"></text></g><g><title>mp_clamp (11 instructions, 0.04%)</title><rect x="74.0224%" y="325" width="0.0433%" height="15" fill="rgb(226,82,3)" fg:x="18798" fg:w="11"/><text x="74.3154%" y="335.50"></text></g><g><title>mp_mul_2d (110 instructions, 0.43%)</title><rect x="73.8216%" y="341" width="0.4332%" height="15" fill="rgb(240,164,32)" fg:x="18747" fg:w="110"/><text x="74.1146%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="74.2548%" y="341" width="0.1221%" height="15" fill="rgb(232,46,7)" fg:x="18857" fg:w="31"/><text x="74.5477%" y="351.50"></text></g><g><title>bigint_lsh (519 instructions, 2.04%)</title><rect x="72.5497%" y="357" width="2.0437%" height="15" fill="rgb(229,129,53)" fg:x="18424" fg:w="519"/><text x="72.8427%" y="367.50"></text></g><g><title>B_lsh (1,421 instructions, 5.60%)</title><rect x="69.0963%" y="373" width="5.5956%" height="15" fill="rgb(234,188,29)" fg:x="17547" fg:w="1421"/><text x="69.3892%" y="383.50">B_lsh</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="74.6919%" y="309" width="0.1496%" height="15" fill="rgb(246,141,4)" fg:x="18968" fg:w="38"/><text x="74.9848%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="74.8415%" y="309" width="0.9608%" height="15" fill="rgb(229,23,39)" fg:x="19006" fg:w="244"/><text x="75.1345%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="74.6919%" y="325" width="1.2128%" height="15" fill="rgb(206,12,3)" fg:x="18968" fg:w="308"/><text x="74.9848%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="74.6919%" y="341" width="1.2719%" height="15" fill="rgb(252,226,20)" fg:x="18968" fg:w="323"/><text x="74.9848%" y="351.50"></text></g><g><title>mp_set_u64 (480 instructions, 1.89%)</title><rect x="75.9638%" y="325" width="1.8901%" height="15" fill="rgb(216,123,35)" fg:x="19291" fg:w="480"/><text x="76.2567%" y="335.50"></text></g><g><title>mp_set_i64 (494 instructions, 1.95%)</title><rect x="75.9638%" y="341" width="1.9453%" height="15" fill="rgb(212,68,40)" fg:x="19291" fg:w="494"/><text x="76.2567%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="77.9090%" y="341" width="0.1221%" height="15" fill="rgb(254,125,32)" fg:x="19785" fg:w="31"/><text x="78.2020%" y="351.50"></text></g><g><title>bigint_of_int64 (891 instructions, 3.51%)</title><rect x="74.6919%" y="357" width="3.5086%" height="15" fill="rgb(253,97,22)" fg:x="18968" fg:w="891"/><text x="74.9848%" y="367.50">big..</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="78.2004%" y="309" width="0.1496%" height="15" fill="rgb(241,101,14)" fg:x="19859" fg:w="38"/><text x="78.4934%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="78.3501%" y="309" width="0.9608%" height="15" fill="rgb(238,103,29)" fg:x="19897" fg:w="244"/><text x="78.6430%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="78.2004%" y="325" width="1.2128%" height="15" fill="rgb(233,195,47)" fg:x="19859" fg:w="308"/><text x="78.4934%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="78.2004%" y="341" width="1.2719%" height="15" fill="rgb(246,218,30)" fg:x="19859" fg:w="323"/><text x="78.4934%" y="351.50"></text></g><g><title>mp_clamp (42 instructions, 0.17%)</title><rect x="79.4723%" y="309" width="0.1654%" height="15" fill="rgb(219,145,47)" fg:x="20182" fg:w="42"/><text x="79.7653%" y="319.50"></text></g><g><title>s_mp_add (104 instructions, 0.41%)</title><rect x="79.4723%" y="325" width="0.4095%" height="15" fill="rgb(243,12,26)" fg:x="20182" fg:w="104"/><text x="79.7653%" y="335.50"></text></g><g><title>mp_add (120 instructions, 0.47%)</title><rect x="79.4723%" y="341" width="0.4725%" height="15" fill="rgb(214,87,16)" fg:x="20182" fg:w="120"/><text x="79.7653%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="79.9449%" y="341" width="0.1221%" height="15" fill="rgb(208,99,42)" fg:x="20302" fg:w="31"/><text x="80.2378%" y="351.50"></text></g><g><title>bigint_add (538 instructions, 2.12%)</title><rect x="78.2004%" y="357" width="2.1185%" height="15" fill="rgb(253,99,2)" fg:x="19859" fg:w="538"/><text x="78.4934%" y="367.50">b..</text></g><g><title>mp_count_bits (6 instructions, 0.02%)</title><rect x="80.3190%" y="341" width="0.0236%" height="15" fill="rgb(220,168,23)" fg:x="20397" fg:w="6"/><text x="80.6119%" y="351.50"></text></g><g><title>bigint_2complement_bits (39 instructions, 0.15%)</title><rect x="80.3190%" y="357" width="0.1536%" height="15" fill="rgb(242,38,24)" fg:x="20397" fg:w="39"/><text x="80.6119%" y="367.50"></text></g><g><title>mp_get_mag_u32 (12 instructions, 0.05%)</title><rect x="80.4725%" y="325" width="0.0473%" height="15" fill="rgb(225,182,9)" fg:x="20436" fg:w="12"/><text x="80.7655%" y="335.50"></text></g><g><title>mp_get_i32 (23 instructions, 0.09%)</title><rect x="80.4725%" y="341" width="0.0906%" height="15" fill="rgb(243,178,37)" fg:x="20436" fg:w="23"/><text x="80.7655%" y="351.50"></text></g><g><title>bigint_to_word32_wrap (34 instructions, 0.13%)</title><rect x="80.4725%" y="357" width="0.1339%" height="15" fill="rgb(232,139,19)" fg:x="20436" fg:w="34"/><text x="80.7655%" y="367.50"></text></g><g><title>B_add (1,529 instructions, 6.02%)</title><rect x="74.6919%" y="373" width="6.0209%" height="15" fill="rgb(225,201,24)" fg:x="18968" fg:w="1529"/><text x="74.9848%" y="383.50">B_add</text></g><g><title>from_word128_ptr (2,977 instructions, 11.72%)</title><rect x="69.0963%" y="389" width="11.7228%" height="15" fill="rgb(221,47,46)" fg:x="17547" fg:w="2977"/><text x="69.3892%" y="399.50">from_word128_p..</text></g><g><title>cycle_refunded (2,990 instructions, 11.77%)</title><rect x="69.0963%" y="405" width="11.7740%" height="15" fill="rgb(249,23,13)" fg:x="17547" fg:w="2990"/><text x="69.3892%" y="415.50">cycle_refunded</text></g><g><title>@getSystemRefund (2,992 instructions, 11.78%)</title><rect x="69.0963%" y="421" width="11.7818%" height="15" fill="rgb(219,9,5)" fg:x="17547" fg:w="2992"/><text x="69.3892%" y="431.50">@getSystemRefund</text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="80.8781%" y="421" width="0.1024%" height="15" fill="rgb(254,171,16)" fg:x="20539" fg:w="26"/><text x="81.1711%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="80.9805%" y="405" width="0.1024%" height="15" fill="rgb(230,171,20)" fg:x="20565" fg:w="26"/><text x="81.2735%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="80.9805%" y="421" width="0.1614%" height="15" fill="rgb(210,71,41)" fg:x="20565" fg:w="41"/><text x="81.2735%" y="431.50"></text></g><g><title>opt_inject (14 instructions, 0.06%)</title><rect x="81.1420%" y="421" width="0.0551%" height="15" fill="rgb(206,173,20)" fg:x="20606" fg:w="14"/><text x="81.4349%" y="431.50"></text></g><g><title>fulfill (3,127 instructions, 12.31%)</title><rect x="69.0963%" y="437" width="12.3134%" height="15" fill="rgb(233,88,34)" fg:x="17547" fg:w="3127"/><text x="69.3892%" y="447.50">fulfill</text></g><g><title>$lambda (3,135 instructions, 12.34%)</title><rect x="69.0963%" y="453" width="12.3449%" height="15" fill="rgb(223,209,46)" fg:x="17547" fg:w="3135"/><text x="69.3892%" y="463.50">$lambda</text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="81.4412%" y="453" width="0.1969%" height="15" fill="rgb(250,43,18)" fg:x="20682" fg:w="50"/><text x="81.7342%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="81.6381%" y="453" width="0.0551%" height="15" fill="rgb(208,13,10)" fg:x="20732" fg:w="14"/><text x="81.9311%" y="463.50"></text></g><g><title>trans_state5 (9 instructions, 0.04%)</title><rect x="83.4889%" y="453" width="0.0354%" height="15" fill="rgb(212,200,36)" fg:x="21202" fg:w="9"/><text x="83.7818%" y="463.50"></text></g><g><title>recall_continuation (57 instructions, 0.22%)</title><rect x="83.5243%" y="453" width="0.2245%" height="15" fill="rgb(225,90,30)" fg:x="21211" fg:w="57"/><text x="83.8173%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="83.7488%" y="437" width="0.1339%" height="15" fill="rgb(236,182,39)" fg:x="21268" fg:w="34"/><text x="84.0417%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.14%)</title><rect x="83.7488%" y="453" width="0.1418%" height="15" fill="rgb(212,144,35)" fg:x="21268" fg:w="36"/><text x="84.0417%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="83.8905%" y="421" width="0.2008%" height="15" fill="rgb(228,63,44)" fg:x="21304" fg:w="51"/><text x="84.1835%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.13%)</title><rect x="84.0914%" y="421" width="0.1339%" height="15" fill="rgb(228,109,6)" fg:x="21355" fg:w="34"/><text x="84.3843%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="84.2252%" y="421" width="0.2008%" height="15" fill="rgb(238,117,24)" fg:x="21389" fg:w="51"/><text x="84.5182%" y="431.50"></text></g><g><title>parse_idl_header (207 instructions, 0.82%)</title><rect x="83.8905%" y="437" width="0.8151%" height="15" fill="rgb(242,26,26)" fg:x="21304" fg:w="207"/><text x="84.1835%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.04%)</title><rect x="84.7057%" y="437" width="0.0354%" height="15" fill="rgb(221,92,48)" fg:x="21511" fg:w="9"/><text x="84.9986%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="84.7411%" y="421" width="0.0158%" height="15" fill="rgb(209,209,32)" fg:x="21520" fg:w="4"/><text x="85.0341%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.07%)</title><rect x="84.7411%" y="437" width="0.0748%" height="15" fill="rgb(221,70,22)" fg:x="21520" fg:w="19"/><text x="85.0341%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.20%)</title><rect x="84.8159%" y="437" width="0.2008%" height="15" fill="rgb(248,145,5)" fg:x="21539" fg:w="51"/><text x="85.1089%" y="447.50"></text></g><g><title>@deserialize&lt;&gt; (436 instructions, 1.72%)</title><rect x="83.8905%" y="453" width="1.7169%" height="15" fill="rgb(226,116,26)" fg:x="21304" fg:w="436"/><text x="84.1835%" y="463.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="85.6074%" y="309" width="0.1496%" height="15" fill="rgb(244,5,17)" fg:x="21740" fg:w="38"/><text x="85.9004%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="85.7570%" y="309" width="0.9608%" height="15" fill="rgb(252,159,33)" fg:x="21778" fg:w="244"/><text x="86.0500%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="85.6074%" y="325" width="1.2128%" height="15" fill="rgb(206,71,0)" fg:x="21740" fg:w="308"/><text x="85.9004%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="85.6074%" y="341" width="1.2719%" height="15" fill="rgb(233,118,54)" fg:x="21740" fg:w="323"/><text x="85.9004%" y="351.50"></text></g><g><title>mp_set_u32 (480 instructions, 1.89%)</title><rect x="86.8793%" y="341" width="1.8901%" height="15" fill="rgb(234,83,48)" fg:x="22063" fg:w="480"/><text x="87.1723%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="88.7694%" y="341" width="0.1221%" height="15" fill="rgb(228,3,54)" fg:x="22543" fg:w="31"/><text x="89.0624%" y="351.50"></text></g><g><title>bigint_of_word32 (877 instructions, 3.45%)</title><rect x="85.6074%" y="357" width="3.4534%" height="15" fill="rgb(226,155,13)" fg:x="21740" fg:w="877"/><text x="85.9004%" y="367.50">bi..</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="89.0608%" y="309" width="0.1496%" height="15" fill="rgb(241,28,37)" fg:x="22617" fg:w="38"/><text x="89.3538%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="89.2105%" y="309" width="0.9608%" height="15" fill="rgb(233,93,10)" fg:x="22655" fg:w="244"/><text x="89.5034%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="89.0608%" y="325" width="1.2128%" height="15" fill="rgb(225,113,19)" fg:x="22617" fg:w="308"/><text x="89.3538%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="89.0608%" y="341" width="1.2719%" height="15" fill="rgb(241,2,18)" fg:x="22617" fg:w="323"/><text x="89.3538%" y="351.50"></text></g><g><title>mp_copy (39 instructions, 0.15%)</title><rect x="90.3327%" y="325" width="0.1536%" height="15" fill="rgb(228,207,21)" fg:x="22940" fg:w="39"/><text x="90.6257%" y="335.50"></text></g><g><title>mp_lshd (12 instructions, 0.05%)</title><rect x="90.4863%" y="325" width="0.0473%" height="15" fill="rgb(213,211,35)" fg:x="22979" fg:w="12"/><text x="90.7793%" y="335.50"></text></g><g><title>mp_clamp (11 instructions, 0.04%)</title><rect x="90.5336%" y="325" width="0.0433%" height="15" fill="rgb(209,83,10)" fg:x="22991" fg:w="11"/><text x="90.8265%" y="335.50"></text></g><g><title>mp_mul_2d (110 instructions, 0.43%)</title><rect x="90.3327%" y="341" width="0.4332%" height="15" fill="rgb(209,164,1)" fg:x="22940" fg:w="110"/><text x="90.6257%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="90.7659%" y="341" width="0.1221%" height="15" fill="rgb(213,184,43)" fg:x="23050" fg:w="31"/><text x="91.0589%" y="351.50"></text></g><g><title>bigint_lsh (519 instructions, 2.04%)</title><rect x="89.0608%" y="357" width="2.0437%" height="15" fill="rgb(231,61,34)" fg:x="22617" fg:w="519"/><text x="89.3538%" y="367.50"></text></g><g><title>B_lsh (1,421 instructions, 5.60%)</title><rect x="85.6074%" y="373" width="5.5956%" height="15" fill="rgb(235,75,3)" fg:x="21740" fg:w="1421"/><text x="85.9004%" y="383.50">B_lsh</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="91.2030%" y="309" width="0.1496%" height="15" fill="rgb(220,106,47)" fg:x="23161" fg:w="38"/><text x="91.4960%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="91.3526%" y="309" width="0.9608%" height="15" fill="rgb(210,196,33)" fg:x="23199" fg:w="244"/><text x="91.6456%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="91.2030%" y="325" width="1.2128%" height="15" fill="rgb(229,154,42)" fg:x="23161" fg:w="308"/><text x="91.4960%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="91.2030%" y="341" width="1.2719%" height="15" fill="rgb(228,114,26)" fg:x="23161" fg:w="323"/><text x="91.4960%" y="351.50"></text></g><g><title>mp_set_u64 (480 instructions, 1.89%)</title><rect x="92.4749%" y="325" width="1.8901%" height="15" fill="rgb(208,144,1)" fg:x="23484" fg:w="480"/><text x="92.7679%" y="335.50"></text></g><g><title>mp_set_i64 (494 instructions, 1.95%)</title><rect x="92.4749%" y="341" width="1.9453%" height="15" fill="rgb(239,112,37)" fg:x="23484" fg:w="494"/><text x="92.7679%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="94.4202%" y="341" width="0.1221%" height="15" fill="rgb(210,96,50)" fg:x="23978" fg:w="31"/><text x="94.7131%" y="351.50"></text></g><g><title>bigint_of_int64 (891 instructions, 3.51%)</title><rect x="91.2030%" y="357" width="3.5086%" height="15" fill="rgb(222,178,2)" fg:x="23161" fg:w="891"/><text x="91.4960%" y="367.50">big..</text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.15%)</title><rect x="94.7116%" y="309" width="0.1496%" height="15" fill="rgb(226,74,18)" fg:x="24052" fg:w="38"/><text x="95.0045%" y="319.50"></text></g><g><title>memset (244 instructions, 0.96%)</title><rect x="94.8612%" y="309" width="0.9608%" height="15" fill="rgb(225,67,54)" fg:x="24090" fg:w="244"/><text x="95.1542%" y="319.50"></text></g><g><title>mp_calloc (308 instructions, 1.21%)</title><rect x="94.7116%" y="325" width="1.2128%" height="15" fill="rgb(251,92,32)" fg:x="24052" fg:w="308"/><text x="95.0045%" y="335.50"></text></g><g><title>mp_init (323 instructions, 1.27%)</title><rect x="94.7116%" y="341" width="1.2719%" height="15" fill="rgb(228,149,22)" fg:x="24052" fg:w="323"/><text x="95.0045%" y="351.50"></text></g><g><title>mp_clamp (42 instructions, 0.17%)</title><rect x="95.9835%" y="309" width="0.1654%" height="15" fill="rgb(243,54,13)" fg:x="24375" fg:w="42"/><text x="96.2764%" y="319.50"></text></g><g><title>s_mp_add (104 instructions, 0.41%)</title><rect x="95.9835%" y="325" width="0.4095%" height="15" fill="rgb(243,180,28)" fg:x="24375" fg:w="104"/><text x="96.2764%" y="335.50"></text></g><g><title>mp_add (120 instructions, 0.47%)</title><rect x="95.9835%" y="341" width="0.4725%" height="15" fill="rgb(208,167,24)" fg:x="24375" fg:w="120"/><text x="96.2764%" y="351.50"></text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.12%)</title><rect x="96.4560%" y="341" width="0.1221%" height="15" fill="rgb(245,73,45)" fg:x="24495" fg:w="31"/><text x="96.7490%" y="351.50"></text></g><g><title>bigint_add (538 instructions, 2.12%)</title><rect x="94.7116%" y="357" width="2.1185%" height="15" fill="rgb(237,203,48)" fg:x="24052" fg:w="538"/><text x="95.0045%" y="367.50">b..</text></g><g><title>mp_count_bits (6 instructions, 0.02%)</title><rect x="96.8301%" y="341" width="0.0236%" height="15" fill="rgb(211,197,16)" fg:x="24590" fg:w="6"/><text x="97.1231%" y="351.50"></text></g><g><title>bigint_2complement_bits (39 instructions, 0.15%)</title><rect x="96.8301%" y="357" width="0.1536%" height="15" fill="rgb(243,99,51)" fg:x="24590" fg:w="39"/><text x="97.1231%" y="367.50"></text></g><g><title>mp_get_mag_u32 (12 instructions, 0.05%)</title><rect x="96.9837%" y="325" width="0.0473%" height="15" fill="rgb(215,123,29)" fg:x="24629" fg:w="12"/><text x="97.2766%" y="335.50"></text></g><g><title>mp_get_i32 (23 instructions, 0.09%)</title><rect x="96.9837%" y="341" width="0.0906%" height="15" fill="rgb(239,186,37)" fg:x="24629" fg:w="23"/><text x="97.2766%" y="351.50"></text></g><g><title>bigint_to_word32_wrap (34 instructions, 0.13%)</title><rect x="96.9837%" y="357" width="0.1339%" height="15" fill="rgb(252,136,39)" fg:x="24629" fg:w="34"/><text x="97.2766%" y="367.50"></text></g><g><title>B_add (1,529 instructions, 6.02%)</title><rect x="91.2030%" y="373" width="6.0209%" height="15" fill="rgb(223,213,32)" fg:x="23161" fg:w="1529"/><text x="91.4960%" y="383.50">B_add</text></g><g><title>from_word128_ptr (2,977 instructions, 11.72%)</title><rect x="85.6074%" y="389" width="11.7228%" height="15" fill="rgb(233,115,5)" fg:x="21740" fg:w="2977"/><text x="85.9004%" y="399.50">from_word128_p..</text></g><g><title>cycle_refunded (2,990 instructions, 11.77%)</title><rect x="85.6074%" y="405" width="11.7740%" height="15" fill="rgb(207,226,44)" fg:x="21740" fg:w="2990"/><text x="85.9004%" y="415.50">cycle_refunded</text></g><g><title>@getSystemRefund (2,992 instructions, 11.78%)</title><rect x="85.6074%" y="421" width="11.7818%" height="15" fill="rgb(208,126,0)" fg:x="21740" fg:w="2992"/><text x="85.9004%" y="431.50">@getSystemRefund</text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="97.3892%" y="421" width="0.1024%" height="15" fill="rgb(244,66,21)" fg:x="24732" fg:w="26"/><text x="97.6822%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.10%)</title><rect x="97.4916%" y="405" width="0.1024%" height="15" fill="rgb(222,97,12)" fg:x="24758" fg:w="26"/><text x="97.7846%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.16%)</title><rect x="97.4916%" y="421" width="0.1614%" height="15" fill="rgb(219,213,19)" fg:x="24758" fg:w="41"/><text x="97.7846%" y="431.50"></text></g><g><title>opt_inject (14 instructions, 0.06%)</title><rect x="97.6531%" y="421" width="0.0551%" height="15" fill="rgb(252,169,30)" fg:x="24799" fg:w="14"/><text x="97.9461%" y="431.50"></text></g><g><title>fulfill (3,127 instructions, 12.31%)</title><rect x="85.6074%" y="437" width="12.3134%" height="15" fill="rgb(206,32,51)" fg:x="21740" fg:w="3127"/><text x="85.9004%" y="447.50">fulfill</text></g><g><title>$lambda (3,135 instructions, 12.34%)</title><rect x="85.6074%" y="453" width="12.3449%" height="15" fill="rgb(250,172,42)" fg:x="21740" fg:w="3135"/><text x="85.9004%" y="463.50">$lambda</text></g><g><title>schedule_copying_gc (50 instructions, 0.20%)</title><rect x="97.9524%" y="453" width="0.1969%" height="15" fill="rgb(209,34,43)" fg:x="24875" fg:w="50"/><text x="98.2453%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.06%)</title><rect x="98.1492%" y="453" width="0.0551%" height="15" fill="rgb(223,11,35)" fg:x="24925" fg:w="14"/><text x="98.4422%" y="463.50"></text></g><g><title>all (25,395 instructions, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(251,219,26)" fg:x="0" fg:w="25395"/><text x="0.2930%" y="495.50"></text></g><g><title>@callback&lt;u&gt; (8,386 instructions, 33.02%)</title><rect x="66.9778%" y="469" width="33.0222%" height="15" fill="rgb(231,119,3)" fg:x="17009" fg:w="8386"/><text x="67.2707%" y="479.50">@callback&lt;u&gt;</text></g></svg></svg>