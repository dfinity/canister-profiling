<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="534" onload="init(evt)" viewBox="0 0 1024 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Motoko.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="517.00"> </text><svg id="frames" x="10" width="1004" total_samples="19475"><g><title>trans_state5 (9 instructions, 0.05%)</title><rect x="0.0000%" y="453" width="0.0462%" height="15" fill="rgb(228,22,38)" fg:x="0" fg:w="9"/><text x="0.2930%" y="463.50"></text></g><g><title>@reset_cycles (3 instructions, 0.02%)</title><rect x="0.0462%" y="453" width="0.0154%" height="15" fill="rgb(235,168,5)" fg:x="9" fg:w="3"/><text x="0.3392%" y="463.50"></text></g><g><title>@reset_refund (3 instructions, 0.02%)</title><rect x="0.0616%" y="453" width="0.0154%" height="15" fill="rgb(221,155,16)" fg:x="12" fg:w="3"/><text x="0.3546%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="0.0770%" y="437" width="0.1746%" height="15" fill="rgb(215,215,53)" fg:x="15" fg:w="34"/><text x="0.3700%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="0.0770%" y="453" width="0.1849%" height="15" fill="rgb(223,4,10)" fg:x="15" fg:w="36"/><text x="0.3700%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="0.2619%" y="421" width="0.2619%" height="15" fill="rgb(234,103,6)" fg:x="51" fg:w="51"/><text x="0.5548%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="0.5237%" y="421" width="0.1746%" height="15" fill="rgb(227,97,0)" fg:x="102" fg:w="34"/><text x="0.8167%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="0.6983%" y="421" width="0.2619%" height="15" fill="rgb(234,150,53)" fg:x="136" fg:w="51"/><text x="0.9913%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="0.9602%" y="421" width="0.3492%" height="15" fill="rgb(228,201,54)" fg:x="187" fg:w="68"/><text x="1.2532%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.49%)</title><rect x="0.2619%" y="437" width="1.4891%" height="15" fill="rgb(222,22,37)" fg:x="51" fg:w="290"/><text x="0.5548%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.05%)</title><rect x="1.7510%" y="437" width="0.0462%" height="15" fill="rgb(237,53,32)" fg:x="341" fg:w="9"/><text x="2.0439%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="1.7972%" y="421" width="0.0205%" height="15" fill="rgb(233,25,53)" fg:x="350" fg:w="4"/><text x="2.0901%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.10%)</title><rect x="1.7972%" y="437" width="0.0976%" height="15" fill="rgb(210,40,34)" fg:x="350" fg:w="19"/><text x="2.0901%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="1.8947%" y="437" width="0.2619%" height="15" fill="rgb(241,220,44)" fg:x="369" fg:w="51"/><text x="2.1877%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="2.1566%" y="437" width="0.3492%" height="15" fill="rgb(235,28,35)" fg:x="420" fg:w="68"/><text x="2.4496%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="2.5058%" y="437" width="0.0154%" height="15" fill="rgb(210,56,17)" fg:x="488" fg:w="3"/><text x="2.7987%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="2.5212%" y="437" width="0.0154%" height="15" fill="rgb(224,130,29)" fg:x="491" fg:w="3"/><text x="2.8141%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="2.5366%" y="437" width="0.0154%" height="15" fill="rgb(235,212,8)" fg:x="494" fg:w="3"/><text x="2.8296%" y="447.50"></text></g><g><title>bigint_leb128_decode_word64 (36 instructions, 0.18%)</title><rect x="2.5520%" y="421" width="0.1849%" height="15" fill="rgb(223,33,50)" fg:x="497" fg:w="36"/><text x="2.8450%" y="431.50"></text></g><g><title>@deserialize_go&lt;N&gt; (80 instructions, 0.41%)</title><rect x="2.5520%" y="437" width="0.4108%" height="15" fill="rgb(219,149,13)" fg:x="497" fg:w="80"/><text x="2.8450%" y="447.50"></text></g><g><title>@deserialize&lt;N&gt; (730 instructions, 3.75%)</title><rect x="0.2619%" y="453" width="3.7484%" height="15" fill="rgb(250,156,29)" fg:x="51" fg:w="730"/><text x="0.5548%" y="463.50">@de..</text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="4.0103%" y="453" width="0.1335%" height="15" fill="rgb(216,193,19)" fg:x="781" fg:w="26"/><text x="4.3032%" y="463.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="4.1438%" y="437" width="0.1335%" height="15" fill="rgb(216,135,14)" fg:x="807" fg:w="26"/><text x="4.4367%" y="447.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="4.2773%" y="389" width="0.0411%" height="15" fill="rgb(241,47,5)" fg:x="833" fg:w="8"/><text x="4.5702%" y="399.50"></text></g><g><title>B_mul (27 instructions, 0.14%)</title><rect x="4.2773%" y="405" width="0.1386%" height="15" fill="rgb(233,42,35)" fg:x="833" fg:w="27"/><text x="4.5702%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="4.4159%" y="389" width="0.0411%" height="15" fill="rgb(231,13,6)" fg:x="860" fg:w="8"/><text x="4.7089%" y="399.50"></text></g><g><title>box_i64 (15 instructions, 0.08%)</title><rect x="4.4159%" y="405" width="0.0770%" height="15" fill="rgb(207,181,40)" fg:x="860" fg:w="15"/><text x="4.7089%" y="415.50"></text></g><g><title>toNanos (67 instructions, 0.34%)</title><rect x="4.2773%" y="421" width="0.3440%" height="15" fill="rgb(254,173,49)" fg:x="833" fg:w="67"/><text x="4.5702%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="4.6213%" y="405" width="0.1335%" height="15" fill="rgb(221,1,38)" fg:x="900" fg:w="26"/><text x="4.9143%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="4.7548%" y="389" width="0.0411%" height="15" fill="rgb(206,124,46)" fg:x="926" fg:w="8"/><text x="5.0478%" y="399.50"></text></g><g><title>B_add (25 instructions, 0.13%)</title><rect x="4.7548%" y="405" width="0.1284%" height="15" fill="rgb(249,21,11)" fg:x="926" fg:w="25"/><text x="5.0478%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="4.8832%" y="405" width="0.0359%" height="15" fill="rgb(222,201,40)" fg:x="951" fg:w="7"/><text x="5.1762%" y="415.50"></text></g><g><title>add&lt;Nat64&gt; (12 instructions, 0.06%)</title><rect x="4.9191%" y="405" width="0.0616%" height="15" fill="rgb(235,61,29)" fg:x="958" fg:w="12"/><text x="5.2121%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="4.9807%" y="405" width="0.1335%" height="15" fill="rgb(219,207,3)" fg:x="970" fg:w="26"/><text x="5.2737%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="5.1142%" y="389" width="0.0411%" height="15" fill="rgb(222,56,46)" fg:x="996" fg:w="8"/><text x="5.4072%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="5.1553%" y="389" width="0.1335%" height="15" fill="rgb(239,76,54)" fg:x="1004" fg:w="26"/><text x="5.4483%" y="399.50"></text></g><g><title>box_i64 (46 instructions, 0.24%)</title><rect x="5.1142%" y="405" width="0.2362%" height="15" fill="rgb(231,124,27)" fg:x="996" fg:w="46"/><text x="5.4072%" y="415.50"></text></g><g><title>@prune (15 instructions, 0.08%)</title><rect x="5.3504%" y="405" width="0.0770%" height="15" fill="rgb(249,195,6)" fg:x="1042" fg:w="15"/><text x="5.6434%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="5.4275%" y="389" width="0.1335%" height="15" fill="rgb(237,174,47)" fg:x="1057" fg:w="26"/><text x="5.7204%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="5.5610%" y="389" width="0.1335%" height="15" fill="rgb(206,201,31)" fg:x="1083" fg:w="26"/><text x="5.8539%" y="399.50"></text></g><g><title>insert (125 instructions, 0.64%)</title><rect x="5.4275%" y="405" width="0.6418%" height="15" fill="rgb(231,57,52)" fg:x="1057" fg:w="125"/><text x="5.7204%" y="415.50"></text></g><g><title>opt_inject (14 instructions, 0.07%)</title><rect x="6.0693%" y="405" width="0.0719%" height="15" fill="rgb(248,177,22)" fg:x="1182" fg:w="14"/><text x="6.3623%" y="415.50"></text></g><g><title>opt_project (14 instructions, 0.07%)</title><rect x="6.1412%" y="389" width="0.0719%" height="15" fill="rgb(215,211,37)" fg:x="1196" fg:w="14"/><text x="6.4342%" y="399.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.08%)</title><rect x="6.2131%" y="389" width="0.0822%" height="15" fill="rgb(241,128,51)" fg:x="1210" fg:w="16"/><text x="6.5061%" y="399.50"></text></g><g><title>@nextExpiration (10 instructions, 0.05%)</title><rect x="6.2953%" y="389" width="0.0513%" height="15" fill="rgb(227,165,31)" fg:x="1226" fg:w="10"/><text x="6.5882%" y="399.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="6.3466%" y="389" width="0.0359%" height="15" fill="rgb(228,167,24)" fg:x="1236" fg:w="7"/><text x="6.6396%" y="399.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.08%)</title><rect x="6.3825%" y="389" width="0.0822%" height="15" fill="rgb(228,143,12)" fg:x="1243" fg:w="16"/><text x="6.6755%" y="399.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="6.4647%" y="373" width="0.0616%" height="15" fill="rgb(249,149,8)" fg:x="1259" fg:w="12"/><text x="6.7577%" y="383.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="6.4647%" y="389" width="0.1181%" height="15" fill="rgb(243,35,44)" fg:x="1259" fg:w="23"/><text x="6.7577%" y="399.50"></text></g><g><title>unbox_i64 (5 instructions, 0.03%)</title><rect x="6.5828%" y="389" width="0.0257%" height="15" fill="rgb(246,89,9)" fg:x="1282" fg:w="5"/><text x="6.8758%" y="399.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="6.6085%" y="373" width="0.0411%" height="15" fill="rgb(233,213,13)" fg:x="1287" fg:w="8"/><text x="6.9014%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="6.6496%" y="373" width="0.1335%" height="15" fill="rgb(233,141,41)" fg:x="1295" fg:w="26"/><text x="6.9425%" y="383.50"></text></g><g><title>box_i64 (46 instructions, 0.24%)</title><rect x="6.6085%" y="389" width="0.2362%" height="15" fill="rgb(239,167,4)" fg:x="1287" fg:w="46"/><text x="6.9014%" y="399.50"></text></g><g><title>@nextExpiration (181 instructions, 0.93%)</title><rect x="6.1412%" y="405" width="0.9294%" height="15" fill="rgb(209,217,16)" fg:x="1196" fg:w="181"/><text x="6.4342%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.03%)</title><rect x="7.0706%" y="405" width="0.0257%" height="15" fill="rgb(219,88,35)" fg:x="1377" fg:w="5"/><text x="7.3636%" y="415.50"></text></g><g><title>@setTimer (566 instructions, 2.91%)</title><rect x="4.6213%" y="421" width="2.9063%" height="15" fill="rgb(220,193,23)" fg:x="900" fg:w="566"/><text x="4.9143%" y="431.50">@s..</text></g><g><title>setTimer (640 instructions, 3.29%)</title><rect x="4.2773%" y="437" width="3.2863%" height="15" fill="rgb(230,90,52)" fg:x="833" fg:w="640"/><text x="4.5702%" y="447.50">se..</text></g><g><title>@buffer_size&lt;N&gt; (32 instructions, 0.16%)</title><rect x="7.5635%" y="405" width="0.1643%" height="15" fill="rgb(252,106,19)" fg:x="1473" fg:w="32"/><text x="7.8565%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="7.7279%" y="389" width="0.1746%" height="15" fill="rgb(206,74,20)" fg:x="1505" fg:w="34"/><text x="8.0208%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="7.7279%" y="405" width="0.1849%" height="15" fill="rgb(230,138,44)" fg:x="1505" fg:w="36"/><text x="8.0208%" y="415.50"></text></g><g><title>memcpy (66 instructions, 0.34%)</title><rect x="7.9127%" y="405" width="0.3389%" height="15" fill="rgb(235,182,43)" fg:x="1541" fg:w="66"/><text x="8.2057%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="8.2516%" y="389" width="0.1746%" height="15" fill="rgb(242,16,51)" fg:x="1607" fg:w="34"/><text x="8.5446%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="8.2516%" y="405" width="0.1849%" height="15" fill="rgb(248,9,4)" fg:x="1607" fg:w="36"/><text x="8.5446%" y="415.50"></text></g><g><title>leb128_encode (12 instructions, 0.06%)</title><rect x="8.4365%" y="389" width="0.0616%" height="15" fill="rgb(210,31,22)" fg:x="1643" fg:w="12"/><text x="8.7294%" y="399.50"></text></g><g><title>@serialize_go&lt;N&gt; (40 instructions, 0.21%)</title><rect x="8.4365%" y="405" width="0.2054%" height="15" fill="rgb(239,54,39)" fg:x="1643" fg:w="40"/><text x="8.7294%" y="415.50"></text></g><g><title>@serialize&lt;N&gt; (273 instructions, 1.40%)</title><rect x="7.5635%" y="421" width="1.4018%" height="15" fill="rgb(230,99,41)" fg:x="1473" fg:w="273"/><text x="7.8565%" y="431.50"></text></g><g><title>reply_with_data (32 instructions, 0.16%)</title><rect x="8.9653%" y="421" width="0.1643%" height="15" fill="rgb(253,106,12)" fg:x="1746" fg:w="32"/><text x="9.2583%" y="431.50"></text></g><g><title>$lambda (310 instructions, 1.59%)</title><rect x="7.5635%" y="437" width="1.5918%" height="15" fill="rgb(213,46,41)" fg:x="1473" fg:w="310"/><text x="7.8565%" y="447.50"></text></g><g><title>$lambda (999 instructions, 5.13%)</title><rect x="4.1438%" y="453" width="5.1297%" height="15" fill="rgb(215,133,35)" fg:x="807" fg:w="999"/><text x="4.4367%" y="463.50">$lamb..</text></g><g><title>schedule_copying_gc (50 instructions, 0.26%)</title><rect x="9.2734%" y="453" width="0.2567%" height="15" fill="rgb(213,28,5)" fg:x="1806" fg:w="50"/><text x="9.5664%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.07%)</title><rect x="9.5302%" y="453" width="0.0719%" height="15" fill="rgb(215,77,49)" fg:x="1856" fg:w="14"/><text x="9.8231%" y="463.50"></text></g><g><title>setTimer (2,347 instructions, 12.05%)</title><rect x="0.0000%" y="469" width="12.0513%" height="15" fill="rgb(248,100,22)" fg:x="0" fg:w="2347"/><text x="0.2930%" y="479.50">setTimer</text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.0513%" y="405" width="0.1335%" height="15" fill="rgb(208,67,9)" fg:x="2347" fg:w="26"/><text x="12.3443%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.1849%" y="405" width="0.1335%" height="15" fill="rgb(219,133,21)" fg:x="2373" fg:w="26"/><text x="12.4778%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.3184%" y="405" width="0.1335%" height="15" fill="rgb(246,46,29)" fg:x="2399" fg:w="26"/><text x="12.6113%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.4519%" y="405" width="0.1335%" height="15" fill="rgb(246,185,52)" fg:x="2425" fg:w="26"/><text x="12.7448%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.5854%" y="405" width="0.1335%" height="15" fill="rgb(252,136,11)" fg:x="2451" fg:w="26"/><text x="12.8783%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="12.7189%" y="405" width="0.1335%" height="15" fill="rgb(219,138,53)" fg:x="2477" fg:w="26"/><text x="13.0118%" y="415.50"></text></g><g><title>@new_async (266 instructions, 1.37%)</title><rect x="12.0513%" y="421" width="1.3659%" height="15" fill="rgb(211,51,23)" fg:x="2347" fg:w="266"/><text x="12.3443%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="13.4172%" y="421" width="0.1335%" height="15" fill="rgb(247,221,28)" fg:x="2613" fg:w="26"/><text x="13.7102%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="13.5507%" y="421" width="0.1335%" height="15" fill="rgb(251,222,45)" fg:x="2639" fg:w="26"/><text x="13.8437%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="13.6842%" y="389" width="0.1746%" height="15" fill="rgb(217,162,53)" fg:x="2665" fg:w="34"/><text x="13.9772%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="13.6842%" y="405" width="0.1849%" height="15" fill="rgb(229,93,14)" fg:x="2665" fg:w="36"/><text x="13.9772%" y="415.50"></text></g><g><title>canister_self (46 instructions, 0.24%)</title><rect x="13.6842%" y="421" width="0.2362%" height="15" fill="rgb(209,67,49)" fg:x="2665" fg:w="46"/><text x="13.9772%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="13.9204%" y="405" width="0.1335%" height="15" fill="rgb(213,87,29)" fg:x="2711" fg:w="26"/><text x="14.2134%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="13.9204%" y="421" width="0.2105%" height="15" fill="rgb(205,151,52)" fg:x="2711" fg:w="41"/><text x="14.2134%" y="431.50"></text></g><g><title>as_ptr_size (7 instructions, 0.04%)</title><rect x="14.1309%" y="421" width="0.0359%" height="15" fill="rgb(253,215,39)" fg:x="2752" fg:w="7"/><text x="14.4239%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="14.1669%" y="389" width="0.1746%" height="15" fill="rgb(221,220,41)" fg:x="2759" fg:w="34"/><text x="14.4598%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="14.1669%" y="405" width="0.1849%" height="15" fill="rgb(218,133,21)" fg:x="2759" fg:w="36"/><text x="14.4598%" y="415.50"></text></g><g><title>canister_self (46 instructions, 0.24%)</title><rect x="14.1669%" y="421" width="0.2362%" height="15" fill="rgb(221,193,43)" fg:x="2759" fg:w="46"/><text x="14.4598%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="14.4031%" y="405" width="0.1335%" height="15" fill="rgb(240,128,52)" fg:x="2805" fg:w="26"/><text x="14.6960%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="14.4031%" y="421" width="0.2105%" height="15" fill="rgb(253,114,12)" fg:x="2805" fg:w="41"/><text x="14.6960%" y="431.50"></text></g><g><title>as_ptr_size (7 instructions, 0.04%)</title><rect x="14.6136%" y="421" width="0.0359%" height="15" fill="rgb(215,223,47)" fg:x="2846" fg:w="7"/><text x="14.9066%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="14.6496%" y="421" width="0.1335%" height="15" fill="rgb(248,225,23)" fg:x="2853" fg:w="26"/><text x="14.9425%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_array::h46eb48fb0843db64 (39 instructions, 0.20%)</title><rect x="14.7831%" y="405" width="0.2003%" height="15" fill="rgb(250,108,0)" fg:x="2879" fg:w="39"/><text x="15.0760%" y="415.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::write_barrier::h280e65fb17d8d8df (9 instructions, 0.05%)</title><rect x="14.9833%" y="405" width="0.0462%" height="15" fill="rgb(228,208,7)" fg:x="2918" fg:w="9"/><text x="15.2763%" y="415.50"></text></g><g><title>remember_continuation (3,725 instructions, 19.13%)</title><rect x="14.7831%" y="421" width="19.1271%" height="15" fill="rgb(244,45,10)" fg:x="2879" fg:w="3725"/><text x="15.0760%" y="431.50">remember_continuation</text></g><g><title>box_i32 (9 instructions, 0.05%)</title><rect x="33.9101%" y="421" width="0.0462%" height="15" fill="rgb(207,125,25)" fg:x="6604" fg:w="9"/><text x="34.2031%" y="431.50"></text></g><g><title>@buffer_size&lt;n32&gt; (18 instructions, 0.09%)</title><rect x="33.9564%" y="405" width="0.0924%" height="15" fill="rgb(210,195,18)" fg:x="6613" fg:w="18"/><text x="34.2493%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="34.0488%" y="389" width="0.1746%" height="15" fill="rgb(249,80,12)" fg:x="6631" fg:w="34"/><text x="34.3417%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="34.0488%" y="405" width="0.1849%" height="15" fill="rgb(221,65,9)" fg:x="6631" fg:w="36"/><text x="34.3417%" y="415.50"></text></g><g><title>memcpy (66 instructions, 0.34%)</title><rect x="34.2336%" y="405" width="0.3389%" height="15" fill="rgb(235,49,36)" fg:x="6667" fg:w="66"/><text x="34.5266%" y="415.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="34.5725%" y="389" width="0.1746%" height="15" fill="rgb(225,32,20)" fg:x="6733" fg:w="34"/><text x="34.8655%" y="399.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="34.5725%" y="405" width="0.1849%" height="15" fill="rgb(215,141,46)" fg:x="6733" fg:w="36"/><text x="34.8655%" y="415.50"></text></g><g><title>unbox_i32 (6 instructions, 0.03%)</title><rect x="34.7574%" y="389" width="0.0308%" height="15" fill="rgb(250,160,47)" fg:x="6769" fg:w="6"/><text x="35.0504%" y="399.50"></text></g><g><title>@serialize_go&lt;n32&gt; (17 instructions, 0.09%)</title><rect x="34.7574%" y="405" width="0.0873%" height="15" fill="rgb(216,222,40)" fg:x="6769" fg:w="17"/><text x="35.0504%" y="415.50"></text></g><g><title>@serialize&lt;n32&gt; (236 instructions, 1.21%)</title><rect x="33.9564%" y="421" width="1.2118%" height="15" fill="rgb(234,217,39)" fg:x="6613" fg:w="236"/><text x="34.2493%" y="431.50"></text></g><g><title>@reset_cycles (3 instructions, 0.02%)</title><rect x="35.1682%" y="405" width="0.0154%" height="15" fill="rgb(207,178,40)" fg:x="6849" fg:w="3"/><text x="35.4611%" y="415.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.20%)</title><rect x="35.1836%" y="325" width="0.1951%" height="15" fill="rgb(221,136,13)" fg:x="6852" fg:w="38"/><text x="35.4765%" y="335.50"></text></g><g><title>memset (244 instructions, 1.25%)</title><rect x="35.3787%" y="325" width="1.2529%" height="15" fill="rgb(249,199,10)" fg:x="6890" fg:w="244"/><text x="35.6717%" y="335.50"></text></g><g><title>mp_calloc (308 instructions, 1.58%)</title><rect x="35.1836%" y="341" width="1.5815%" height="15" fill="rgb(249,222,13)" fg:x="6852" fg:w="308"/><text x="35.4765%" y="351.50"></text></g><g><title>mp_init (323 instructions, 1.66%)</title><rect x="35.1836%" y="357" width="1.6585%" height="15" fill="rgb(244,185,38)" fg:x="6852" fg:w="323"/><text x="35.4765%" y="367.50"></text></g><g><title>mp_set_u64 (480 instructions, 2.46%)</title><rect x="36.8421%" y="341" width="2.4647%" height="15" fill="rgb(236,202,9)" fg:x="7175" fg:w="480"/><text x="37.1351%" y="351.50">m..</text></g><g><title>mp_set_i64 (494 instructions, 2.54%)</title><rect x="36.8421%" y="357" width="2.5366%" height="15" fill="rgb(250,229,37)" fg:x="7175" fg:w="494"/><text x="37.1351%" y="367.50">m..</text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.16%)</title><rect x="39.3787%" y="357" width="0.1592%" height="15" fill="rgb(206,174,23)" fg:x="7669" fg:w="31"/><text x="39.6717%" y="367.50"></text></g><g><title>bigint_of_int64 (891 instructions, 4.58%)</title><rect x="35.1836%" y="373" width="4.5751%" height="15" fill="rgb(211,33,43)" fg:x="6852" fg:w="891"/><text x="35.4765%" y="383.50">bigi..</text></g><g><title>mp_cmp_mag (17 instructions, 0.09%)</title><rect x="39.7587%" y="341" width="0.0873%" height="15" fill="rgb(245,58,50)" fg:x="7743" fg:w="17"/><text x="40.0516%" y="351.50"></text></g><g><title>mp_cmp (31 instructions, 0.16%)</title><rect x="39.7587%" y="357" width="0.1592%" height="15" fill="rgb(244,68,36)" fg:x="7743" fg:w="31"/><text x="40.0516%" y="367.50"></text></g><g><title>bigint_lt (54 instructions, 0.28%)</title><rect x="39.7587%" y="373" width="0.2773%" height="15" fill="rgb(232,229,15)" fg:x="7743" fg:w="54"/><text x="40.0516%" y="383.50"></text></g><g><title>B_lt (963 instructions, 4.94%)</title><rect x="35.1836%" y="389" width="4.9448%" height="15" fill="rgb(254,30,23)" fg:x="6852" fg:w="963"/><text x="35.4765%" y="399.50">B_lt</text></g><g><title>B_rsh (12 instructions, 0.06%)</title><rect x="40.1284%" y="389" width="0.0616%" height="15" fill="rgb(235,160,14)" fg:x="7815" fg:w="12"/><text x="40.4213%" y="399.50"></text></g><g><title>cycle_add (999 instructions, 5.13%)</title><rect x="35.1836%" y="405" width="5.1297%" height="15" fill="rgb(212,155,44)" fg:x="6852" fg:w="999"/><text x="35.4765%" y="415.50">cycle..</text></g><g><title>@add_cycles (1,009 instructions, 5.18%)</title><rect x="35.1682%" y="421" width="5.1810%" height="15" fill="rgb(226,2,50)" fg:x="6849" fg:w="1009"/><text x="35.4611%" y="431.50">@add_..</text></g><g><title>@timer_helper (5,648 instructions, 29.00%)</title><rect x="12.0513%" y="437" width="29.0013%" height="15" fill="rgb(234,177,6)" fg:x="2347" fg:w="5648"/><text x="12.3443%" y="447.50">@timer_helper</text></g><g><title>@call_succeeded (2 instructions, 0.01%)</title><rect x="41.0526%" y="437" width="0.0103%" height="15" fill="rgb(217,24,9)" fg:x="7995" fg:w="2"/><text x="41.3456%" y="447.50"></text></g><g><title>timer_exp (5,656 instructions, 29.04%)</title><rect x="12.0513%" y="453" width="29.0424%" height="15" fill="rgb(220,13,46)" fg:x="2347" fg:w="5656"/><text x="12.3443%" y="463.50">timer_exp</text></g><g><title>canister_global_timer (5,860 instructions, 30.09%)</title><rect x="12.0513%" y="469" width="30.0899%" height="15" fill="rgb(239,221,27)" fg:x="2347" fg:w="5860"/><text x="12.3443%" y="479.50">canister_global_timer</text></g><g><title>trans_state5 (9 instructions, 0.05%)</title><rect x="42.1412%" y="453" width="0.0462%" height="15" fill="rgb(222,198,25)" fg:x="8207" fg:w="9"/><text x="42.4342%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="42.1874%" y="437" width="0.1746%" height="15" fill="rgb(211,99,13)" fg:x="8216" fg:w="34"/><text x="42.4804%" y="447.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="42.3723%" y="437" width="0.1746%" height="15" fill="rgb(232,111,31)" fg:x="8252" fg:w="34"/><text x="42.6652%" y="447.50"></text></g><g><title>alloc_blob (72 instructions, 0.37%)</title><rect x="42.1874%" y="453" width="0.3697%" height="15" fill="rgb(245,82,37)" fg:x="8216" fg:w="72"/><text x="42.4804%" y="463.50"></text></g><g><title>memcmp (217 instructions, 1.11%)</title><rect x="42.5571%" y="453" width="1.1142%" height="15" fill="rgb(227,149,46)" fg:x="8288" fg:w="217"/><text x="42.8501%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="43.6714%" y="437" width="0.1746%" height="15" fill="rgb(218,36,50)" fg:x="8505" fg:w="34"/><text x="43.9643%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="43.6714%" y="453" width="0.1849%" height="15" fill="rgb(226,80,48)" fg:x="8505" fg:w="36"/><text x="43.9643%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="43.8562%" y="421" width="0.2619%" height="15" fill="rgb(238,224,15)" fg:x="8541" fg:w="51"/><text x="44.1492%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="44.1181%" y="421" width="0.1746%" height="15" fill="rgb(241,136,10)" fg:x="8592" fg:w="34"/><text x="44.4111%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="44.2927%" y="421" width="0.2619%" height="15" fill="rgb(208,32,45)" fg:x="8626" fg:w="51"/><text x="44.5857%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="44.5546%" y="421" width="0.3492%" height="15" fill="rgb(207,135,9)" fg:x="8677" fg:w="68"/><text x="44.8475%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.49%)</title><rect x="43.8562%" y="437" width="1.4891%" height="15" fill="rgb(206,86,44)" fg:x="8541" fg:w="290"/><text x="44.1492%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.05%)</title><rect x="45.3453%" y="437" width="0.0462%" height="15" fill="rgb(245,177,15)" fg:x="8831" fg:w="9"/><text x="45.6383%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="45.3915%" y="421" width="0.0205%" height="15" fill="rgb(206,64,50)" fg:x="8840" fg:w="4"/><text x="45.6845%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.10%)</title><rect x="45.3915%" y="437" width="0.0976%" height="15" fill="rgb(234,36,40)" fg:x="8840" fg:w="19"/><text x="45.6845%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="45.4891%" y="437" width="0.2619%" height="15" fill="rgb(213,64,8)" fg:x="8859" fg:w="51"/><text x="45.7821%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="45.7510%" y="437" width="0.3492%" height="15" fill="rgb(210,75,36)" fg:x="8910" fg:w="68"/><text x="46.0439%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="46.1001%" y="437" width="0.0154%" height="15" fill="rgb(229,88,21)" fg:x="8978" fg:w="3"/><text x="46.3931%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="46.1155%" y="437" width="0.0154%" height="15" fill="rgb(252,204,47)" fg:x="8981" fg:w="3"/><text x="46.4085%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="46.1309%" y="437" width="0.0154%" height="15" fill="rgb(208,77,27)" fg:x="8984" fg:w="3"/><text x="46.4239%" y="447.50"></text></g><g><title>box_i32 (9 instructions, 0.05%)</title><rect x="46.1463%" y="421" width="0.0462%" height="15" fill="rgb(221,76,26)" fg:x="8987" fg:w="9"/><text x="46.4393%" y="431.50"></text></g><g><title>@deserialize_go&lt;n32&gt; (46 instructions, 0.24%)</title><rect x="46.1463%" y="437" width="0.2362%" height="15" fill="rgb(225,139,18)" fg:x="8987" fg:w="46"/><text x="46.4393%" y="447.50"></text></g><g><title>@deserialize&lt;n32&gt; (696 instructions, 3.57%)</title><rect x="43.8562%" y="453" width="3.5738%" height="15" fill="rgb(230,137,11)" fg:x="8541" fg:w="696"/><text x="44.1492%" y="463.50">@de..</text></g><g><title>unbox_i32 (6 instructions, 0.03%)</title><rect x="47.4300%" y="453" width="0.0308%" height="15" fill="rgb(212,28,1)" fg:x="9237" fg:w="6"/><text x="47.7230%" y="463.50"></text></g><g><title>peek_future_continuation (36 instructions, 0.18%)</title><rect x="47.4608%" y="453" width="0.1849%" height="15" fill="rgb(248,164,17)" fg:x="9243" fg:w="36"/><text x="47.7538%" y="463.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="47.6457%" y="421" width="0.1335%" height="15" fill="rgb(222,171,42)" fg:x="9279" fg:w="26"/><text x="47.9387%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="47.7792%" y="421" width="0.1335%" height="15" fill="rgb(243,84,45)" fg:x="9305" fg:w="26"/><text x="48.0722%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="47.9127%" y="421" width="0.1335%" height="15" fill="rgb(252,49,23)" fg:x="9331" fg:w="26"/><text x="48.2057%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="48.0462%" y="421" width="0.1335%" height="15" fill="rgb(215,19,7)" fg:x="9357" fg:w="26"/><text x="48.3392%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="48.1797%" y="421" width="0.1335%" height="15" fill="rgb(238,81,41)" fg:x="9383" fg:w="26"/><text x="48.4727%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="48.3132%" y="421" width="0.1335%" height="15" fill="rgb(210,199,37)" fg:x="9409" fg:w="26"/><text x="48.6062%" y="431.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="48.4467%" y="405" width="0.0411%" height="15" fill="rgb(244,192,49)" fg:x="9435" fg:w="8"/><text x="48.7397%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="48.4878%" y="405" width="0.1335%" height="15" fill="rgb(226,211,11)" fg:x="9443" fg:w="26"/><text x="48.7808%" y="415.50"></text></g><g><title>box_i64 (46 instructions, 0.24%)</title><rect x="48.4467%" y="421" width="0.2362%" height="15" fill="rgb(236,162,54)" fg:x="9435" fg:w="46"/><text x="48.7397%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_array::h46eb48fb0843db64 (39 instructions, 0.20%)</title><rect x="48.6829%" y="389" width="0.2003%" height="15" fill="rgb(220,229,9)" fg:x="9481" fg:w="39"/><text x="48.9759%" y="399.50"></text></g><g><title>alloc_array (41 instructions, 0.21%)</title><rect x="48.6829%" y="405" width="0.2105%" height="15" fill="rgb(250,87,22)" fg:x="9481" fg:w="41"/><text x="48.9759%" y="415.50"></text></g><g><title>Array_init (190 instructions, 0.98%)</title><rect x="48.6829%" y="421" width="0.9756%" height="15" fill="rgb(239,43,17)" fg:x="9481" fg:w="190"/><text x="48.9759%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="49.6585%" y="421" width="0.1335%" height="15" fill="rgb(231,177,25)" fg:x="9671" fg:w="26"/><text x="49.9515%" y="431.50"></text></g><g><title>opt_project (14 instructions, 0.07%)</title><rect x="49.7920%" y="405" width="0.0719%" height="15" fill="rgb(219,179,1)" fg:x="9697" fg:w="14"/><text x="50.0850%" y="415.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.08%)</title><rect x="49.8639%" y="405" width="0.0822%" height="15" fill="rgb(238,219,53)" fg:x="9711" fg:w="16"/><text x="50.1569%" y="415.50"></text></g><g><title>gatherExpired (20 instructions, 0.10%)</title><rect x="49.9461%" y="405" width="0.1027%" height="15" fill="rgb(232,167,36)" fg:x="9727" fg:w="20"/><text x="50.2391%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.08%)</title><rect x="50.0488%" y="405" width="0.0822%" height="15" fill="rgb(244,19,51)" fg:x="9747" fg:w="16"/><text x="50.3417%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="50.1309%" y="389" width="0.0616%" height="15" fill="rgb(224,6,22)" fg:x="9763" fg:w="12"/><text x="50.4239%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="50.1309%" y="405" width="0.1181%" height="15" fill="rgb(224,145,5)" fg:x="9763" fg:w="23"/><text x="50.4239%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.03%)</title><rect x="50.2490%" y="405" width="0.0257%" height="15" fill="rgb(234,130,49)" fg:x="9786" fg:w="5"/><text x="50.5420%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.08%)</title><rect x="50.2747%" y="405" width="0.0822%" height="15" fill="rgb(254,6,2)" fg:x="9791" fg:w="16"/><text x="50.5677%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="50.3569%" y="389" width="0.0616%" height="15" fill="rgb(208,96,46)" fg:x="9807" fg:w="12"/><text x="50.6498%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="50.3569%" y="405" width="0.1181%" height="15" fill="rgb(239,3,39)" fg:x="9807" fg:w="23"/><text x="50.6498%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.03%)</title><rect x="50.4750%" y="405" width="0.0257%" height="15" fill="rgb(233,210,1)" fg:x="9830" fg:w="5"/><text x="50.7679%" y="415.50"></text></g><g><title>unbox_i64 (5 instructions, 0.03%)</title><rect x="50.5006%" y="405" width="0.0257%" height="15" fill="rgb(244,137,37)" fg:x="9835" fg:w="5"/><text x="50.7936%" y="415.50"></text></g><g><title>B_lt (10 instructions, 0.05%)</title><rect x="50.5263%" y="405" width="0.0513%" height="15" fill="rgb(240,136,2)" fg:x="9840" fg:w="10"/><text x="50.8193%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="50.5777%" y="389" width="0.0616%" height="15" fill="rgb(239,18,37)" fg:x="9850" fg:w="12"/><text x="50.8706%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="50.5777%" y="405" width="0.1181%" height="15" fill="rgb(218,185,22)" fg:x="9850" fg:w="23"/><text x="50.8706%" y="415.50"></text></g><g><title>obj_idx&lt;1&gt; (16 instructions, 0.08%)</title><rect x="50.6958%" y="405" width="0.0822%" height="15" fill="rgb(225,218,4)" fg:x="9873" fg:w="16"/><text x="50.9887%" y="415.50"></text></g><g><title>opt_inject (14 instructions, 0.07%)</title><rect x="50.7779%" y="405" width="0.0719%" height="15" fill="rgb(230,182,32)" fg:x="9889" fg:w="14"/><text x="51.0709%" y="415.50"></text></g><g><title>obj_idx&lt;5&gt; (16 instructions, 0.08%)</title><rect x="50.8498%" y="405" width="0.0822%" height="15" fill="rgb(242,56,43)" fg:x="9903" fg:w="16"/><text x="51.1428%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.08%)</title><rect x="50.9320%" y="405" width="0.0822%" height="15" fill="rgb(233,99,24)" fg:x="9919" fg:w="16"/><text x="51.2249%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="51.0141%" y="389" width="0.0616%" height="15" fill="rgb(234,209,42)" fg:x="9935" fg:w="12"/><text x="51.3071%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="51.0141%" y="405" width="0.1181%" height="15" fill="rgb(227,7,12)" fg:x="9935" fg:w="23"/><text x="51.3071%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="51.1322%" y="389" width="0.0411%" height="15" fill="rgb(245,203,43)" fg:x="9958" fg:w="8"/><text x="51.4252%" y="399.50"></text></g><g><title>B_add (25 instructions, 0.13%)</title><rect x="51.1322%" y="405" width="0.1284%" height="15" fill="rgb(238,205,33)" fg:x="9958" fg:w="25"/><text x="51.4252%" y="415.50"></text></g><g><title>obj_idx&lt;4&gt; (16 instructions, 0.08%)</title><rect x="51.2606%" y="405" width="0.0822%" height="15" fill="rgb(231,56,7)" fg:x="9983" fg:w="16"/><text x="51.5536%" y="415.50"></text></g><g><title>gatherExpired (20 instructions, 0.10%)</title><rect x="51.3427%" y="405" width="0.1027%" height="15" fill="rgb(244,186,29)" fg:x="9999" fg:w="20"/><text x="51.6357%" y="415.50"></text></g><g><title>gatherExpired (447 instructions, 2.30%)</title><rect x="49.7920%" y="421" width="2.2953%" height="15" fill="rgb(234,111,31)" fg:x="9697" fg:w="447"/><text x="50.0850%" y="431.50">g..</text></g><g><title>opt_project (14 instructions, 0.07%)</title><rect x="52.0873%" y="405" width="0.0719%" height="15" fill="rgb(241,149,10)" fg:x="10144" fg:w="14"/><text x="52.3803%" y="415.50"></text></g><g><title>obj_idx&lt;2&gt; (16 instructions, 0.08%)</title><rect x="52.1592%" y="405" width="0.0822%" height="15" fill="rgb(249,206,44)" fg:x="10158" fg:w="16"/><text x="52.4521%" y="415.50"></text></g><g><title>@nextExpiration (10 instructions, 0.05%)</title><rect x="52.2413%" y="405" width="0.0513%" height="15" fill="rgb(251,153,30)" fg:x="10174" fg:w="10"/><text x="52.5343%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="52.2927%" y="405" width="0.0359%" height="15" fill="rgb(239,152,38)" fg:x="10184" fg:w="7"/><text x="52.5857%" y="415.50"></text></g><g><title>obj_idx&lt;3&gt; (16 instructions, 0.08%)</title><rect x="52.3286%" y="405" width="0.0822%" height="15" fill="rgb(249,139,47)" fg:x="10191" fg:w="16"/><text x="52.6216%" y="415.50"></text></g><g><title>Array.idx (12 instructions, 0.06%)</title><rect x="52.4108%" y="389" width="0.0616%" height="15" fill="rgb(244,64,35)" fg:x="10207" fg:w="12"/><text x="52.7038%" y="399.50"></text></g><g><title>Array.idx_bigint (23 instructions, 0.12%)</title><rect x="52.4108%" y="405" width="0.1181%" height="15" fill="rgb(216,46,15)" fg:x="10207" fg:w="23"/><text x="52.7038%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="52.5289%" y="405" width="0.0359%" height="15" fill="rgb(250,74,19)" fg:x="10230" fg:w="7"/><text x="52.8219%" y="415.50"></text></g><g><title>obj_idx&lt;4&gt; (16 instructions, 0.08%)</title><rect x="52.5648%" y="405" width="0.0822%" height="15" fill="rgb(249,42,33)" fg:x="10237" fg:w="16"/><text x="52.8578%" y="415.50"></text></g><g><title>@nextExpiration (10 instructions, 0.05%)</title><rect x="52.6470%" y="405" width="0.0513%" height="15" fill="rgb(242,149,17)" fg:x="10253" fg:w="10"/><text x="52.9400%" y="415.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="52.6983%" y="405" width="0.0359%" height="15" fill="rgb(244,29,21)" fg:x="10263" fg:w="7"/><text x="52.9913%" y="415.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="52.7343%" y="389" width="0.0411%" height="15" fill="rgb(220,130,37)" fg:x="10270" fg:w="8"/><text x="53.0272%" y="399.50"></text></g><g><title>box_i64 (15 instructions, 0.08%)</title><rect x="52.7343%" y="405" width="0.0770%" height="15" fill="rgb(211,67,2)" fg:x="10270" fg:w="15"/><text x="53.0272%" y="415.50"></text></g><g><title>@nextExpiration (193 instructions, 0.99%)</title><rect x="52.0873%" y="421" width="0.9910%" height="15" fill="rgb(235,68,52)" fg:x="10144" fg:w="193"/><text x="52.3803%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="53.0783%" y="421" width="0.0359%" height="15" fill="rgb(246,142,3)" fg:x="10337" fg:w="7"/><text x="53.3713%" y="431.50"></text></g><g><title>can_tag_i64 (8 instructions, 0.04%)</title><rect x="53.1142%" y="405" width="0.0411%" height="15" fill="rgb(241,25,7)" fg:x="10344" fg:w="8"/><text x="53.4072%" y="415.50"></text></g><g><title>box_i64 (15 instructions, 0.08%)</title><rect x="53.1142%" y="421" width="0.0770%" height="15" fill="rgb(242,119,39)" fg:x="10344" fg:w="15"/><text x="53.4072%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="53.1913%" y="421" width="0.0359%" height="15" fill="rgb(241,98,45)" fg:x="10359" fg:w="7"/><text x="53.4842%" y="431.50"></text></g><g><title>unbox_i64 (7 instructions, 0.04%)</title><rect x="53.2272%" y="421" width="0.0359%" height="15" fill="rgb(254,28,30)" fg:x="10366" fg:w="7"/><text x="53.5202%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.2632%" y="421" width="0.1335%" height="15" fill="rgb(241,142,54)" fg:x="10373" fg:w="26"/><text x="53.5561%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.3967%" y="421" width="0.1335%" height="15" fill="rgb(222,85,15)" fg:x="10399" fg:w="26"/><text x="53.6896%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.5302%" y="421" width="0.1335%" height="15" fill="rgb(210,85,47)" fg:x="10425" fg:w="26"/><text x="53.8231%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.6637%" y="421" width="0.1335%" height="15" fill="rgb(224,206,25)" fg:x="10451" fg:w="26"/><text x="53.9566%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.7972%" y="421" width="0.1335%" height="15" fill="rgb(243,201,19)" fg:x="10477" fg:w="26"/><text x="54.0901%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="53.9307%" y="405" width="0.1335%" height="15" fill="rgb(236,59,4)" fg:x="10503" fg:w="26"/><text x="54.2236%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.0642%" y="405" width="0.1335%" height="15" fill="rgb(254,179,45)" fg:x="10529" fg:w="26"/><text x="54.3572%" y="415.50"></text></g><g><title>opt_project (14 instructions, 0.07%)</title><rect x="54.1977%" y="405" width="0.0719%" height="15" fill="rgb(226,14,10)" fg:x="10555" fg:w="14"/><text x="54.4907%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.2696%" y="373" width="0.1335%" height="15" fill="rgb(244,27,41)" fg:x="10569" fg:w="26"/><text x="54.5625%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.4031%" y="373" width="0.1335%" height="15" fill="rgb(235,35,32)" fg:x="10595" fg:w="26"/><text x="54.6960%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.5366%" y="373" width="0.1335%" height="15" fill="rgb(218,68,31)" fg:x="10621" fg:w="26"/><text x="54.8296%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.6701%" y="373" width="0.1335%" height="15" fill="rgb(207,120,37)" fg:x="10647" fg:w="26"/><text x="54.9631%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.8036%" y="373" width="0.1335%" height="15" fill="rgb(227,98,0)" fg:x="10673" fg:w="26"/><text x="55.0966%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="54.9371%" y="373" width="0.1335%" height="15" fill="rgb(207,7,3)" fg:x="10699" fg:w="26"/><text x="55.2301%" y="383.50"></text></g><g><title>@new_async (266 instructions, 1.37%)</title><rect x="54.2696%" y="389" width="1.3659%" height="15" fill="rgb(206,98,19)" fg:x="10569" fg:w="266"/><text x="54.5625%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="55.6354%" y="389" width="0.1335%" height="15" fill="rgb(217,5,26)" fg:x="10835" fg:w="26"/><text x="55.9284%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="55.7689%" y="389" width="0.1335%" height="15" fill="rgb(235,190,38)" fg:x="10861" fg:w="26"/><text x="56.0619%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="55.9024%" y="357" width="0.1746%" height="15" fill="rgb(247,86,24)" fg:x="10887" fg:w="34"/><text x="56.1954%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="55.9024%" y="373" width="0.1849%" height="15" fill="rgb(205,101,16)" fg:x="10887" fg:w="36"/><text x="56.1954%" y="383.50"></text></g><g><title>canister_self (46 instructions, 0.24%)</title><rect x="55.9024%" y="389" width="0.2362%" height="15" fill="rgb(246,168,33)" fg:x="10887" fg:w="46"/><text x="56.1954%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="56.1386%" y="373" width="0.1335%" height="15" fill="rgb(231,114,1)" fg:x="10933" fg:w="26"/><text x="56.4316%" y="383.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="56.1386%" y="389" width="0.2105%" height="15" fill="rgb(207,184,53)" fg:x="10933" fg:w="41"/><text x="56.4316%" y="399.50"></text></g><g><title>as_ptr_size (7 instructions, 0.04%)</title><rect x="56.3492%" y="389" width="0.0359%" height="15" fill="rgb(224,95,51)" fg:x="10974" fg:w="7"/><text x="56.6421%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="56.3851%" y="357" width="0.1746%" height="15" fill="rgb(212,188,45)" fg:x="10981" fg:w="34"/><text x="56.6781%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="56.3851%" y="373" width="0.1849%" height="15" fill="rgb(223,154,38)" fg:x="10981" fg:w="36"/><text x="56.6781%" y="383.50"></text></g><g><title>canister_self (46 instructions, 0.24%)</title><rect x="56.3851%" y="389" width="0.2362%" height="15" fill="rgb(251,22,52)" fg:x="10981" fg:w="46"/><text x="56.6781%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="56.6213%" y="373" width="0.1335%" height="15" fill="rgb(229,209,22)" fg:x="11027" fg:w="26"/><text x="56.9143%" y="383.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="56.6213%" y="389" width="0.2105%" height="15" fill="rgb(234,138,34)" fg:x="11027" fg:w="41"/><text x="56.9143%" y="399.50"></text></g><g><title>as_ptr_size (7 instructions, 0.04%)</title><rect x="56.8318%" y="389" width="0.0359%" height="15" fill="rgb(212,95,11)" fg:x="11068" fg:w="7"/><text x="57.1248%" y="399.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="56.8678%" y="389" width="0.1335%" height="15" fill="rgb(240,179,47)" fg:x="11075" fg:w="26"/><text x="57.1607%" y="399.50"></text></g><g><title>motoko_rts::gc::generational::write_barrier::write_barrier::h280e65fb17d8d8df (9 instructions, 0.05%)</title><rect x="57.0013%" y="373" width="0.0462%" height="15" fill="rgb(240,163,11)" fg:x="11101" fg:w="9"/><text x="57.2943%" y="383.50"></text></g><g><title>remember_continuation (71 instructions, 0.36%)</title><rect x="57.0013%" y="389" width="0.3646%" height="15" fill="rgb(236,37,12)" fg:x="11101" fg:w="71"/><text x="57.2943%" y="399.50"></text></g><g><title>box_i32 (9 instructions, 0.05%)</title><rect x="57.3659%" y="389" width="0.0462%" height="15" fill="rgb(232,164,16)" fg:x="11172" fg:w="9"/><text x="57.6588%" y="399.50"></text></g><g><title>@buffer_size&lt;n32&gt; (18 instructions, 0.09%)</title><rect x="57.4121%" y="373" width="0.0924%" height="15" fill="rgb(244,205,15)" fg:x="11181" fg:w="18"/><text x="57.7050%" y="383.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="57.5045%" y="357" width="0.1746%" height="15" fill="rgb(223,117,47)" fg:x="11199" fg:w="34"/><text x="57.7975%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="57.5045%" y="373" width="0.1849%" height="15" fill="rgb(244,107,35)" fg:x="11199" fg:w="36"/><text x="57.7975%" y="383.50"></text></g><g><title>memcpy (66 instructions, 0.34%)</title><rect x="57.6893%" y="373" width="0.3389%" height="15" fill="rgb(205,140,8)" fg:x="11235" fg:w="66"/><text x="57.9823%" y="383.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="58.0282%" y="357" width="0.1746%" height="15" fill="rgb(228,84,46)" fg:x="11301" fg:w="34"/><text x="58.3212%" y="367.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="58.0282%" y="373" width="0.1849%" height="15" fill="rgb(254,188,9)" fg:x="11301" fg:w="36"/><text x="58.3212%" y="383.50"></text></g><g><title>unbox_i32 (6 instructions, 0.03%)</title><rect x="58.2131%" y="357" width="0.0308%" height="15" fill="rgb(206,112,54)" fg:x="11337" fg:w="6"/><text x="58.5061%" y="367.50"></text></g><g><title>@serialize_go&lt;n32&gt; (17 instructions, 0.09%)</title><rect x="58.2131%" y="373" width="0.0873%" height="15" fill="rgb(216,84,49)" fg:x="11337" fg:w="17"/><text x="58.5061%" y="383.50"></text></g><g><title>@serialize&lt;n32&gt; (236 instructions, 1.21%)</title><rect x="57.4121%" y="389" width="1.2118%" height="15" fill="rgb(214,194,35)" fg:x="11181" fg:w="236"/><text x="57.7050%" y="399.50"></text></g><g><title>@reset_cycles (3 instructions, 0.02%)</title><rect x="58.6239%" y="373" width="0.0154%" height="15" fill="rgb(249,28,3)" fg:x="11417" fg:w="3"/><text x="58.9168%" y="383.50"></text></g><g><title>motoko_rts::bigint::mp_alloc::haee2a49bad03caef (38 instructions, 0.20%)</title><rect x="58.6393%" y="293" width="0.1951%" height="15" fill="rgb(222,56,52)" fg:x="11420" fg:w="38"/><text x="58.9322%" y="303.50"></text></g><g><title>memset (244 instructions, 1.25%)</title><rect x="58.8344%" y="293" width="1.2529%" height="15" fill="rgb(245,217,50)" fg:x="11458" fg:w="244"/><text x="59.1274%" y="303.50"></text></g><g><title>mp_calloc (308 instructions, 1.58%)</title><rect x="58.6393%" y="309" width="1.5815%" height="15" fill="rgb(213,201,24)" fg:x="11420" fg:w="308"/><text x="58.9322%" y="319.50"></text></g><g><title>mp_init (323 instructions, 1.66%)</title><rect x="58.6393%" y="325" width="1.6585%" height="15" fill="rgb(248,116,28)" fg:x="11420" fg:w="323"/><text x="58.9322%" y="335.50"></text></g><g><title>mp_set_u64 (480 instructions, 2.46%)</title><rect x="60.2978%" y="309" width="2.4647%" height="15" fill="rgb(219,72,43)" fg:x="11743" fg:w="480"/><text x="60.5908%" y="319.50">m..</text></g><g><title>mp_set_i64 (494 instructions, 2.54%)</title><rect x="60.2978%" y="325" width="2.5366%" height="15" fill="rgb(209,138,14)" fg:x="11743" fg:w="494"/><text x="60.5908%" y="335.50">m..</text></g><g><title>motoko_rts::bigint::persist_bigint::h53a854e22755d6fd (31 instructions, 0.16%)</title><rect x="62.8344%" y="325" width="0.1592%" height="15" fill="rgb(222,18,33)" fg:x="12237" fg:w="31"/><text x="63.1274%" y="335.50"></text></g><g><title>bigint_of_int64 (891 instructions, 4.58%)</title><rect x="58.6393%" y="341" width="4.5751%" height="15" fill="rgb(213,199,7)" fg:x="11420" fg:w="891"/><text x="58.9322%" y="351.50">bigi..</text></g><g><title>mp_cmp_mag (17 instructions, 0.09%)</title><rect x="63.2144%" y="309" width="0.0873%" height="15" fill="rgb(250,110,10)" fg:x="12311" fg:w="17"/><text x="63.5073%" y="319.50"></text></g><g><title>mp_cmp (31 instructions, 0.16%)</title><rect x="63.2144%" y="325" width="0.1592%" height="15" fill="rgb(248,123,6)" fg:x="12311" fg:w="31"/><text x="63.5073%" y="335.50"></text></g><g><title>bigint_lt (54 instructions, 0.28%)</title><rect x="63.2144%" y="341" width="0.2773%" height="15" fill="rgb(206,91,31)" fg:x="12311" fg:w="54"/><text x="63.5073%" y="351.50"></text></g><g><title>B_lt (963 instructions, 4.94%)</title><rect x="58.6393%" y="357" width="4.9448%" height="15" fill="rgb(211,154,13)" fg:x="11420" fg:w="963"/><text x="58.9322%" y="367.50">B_lt</text></g><g><title>B_rsh (12 instructions, 0.06%)</title><rect x="63.5841%" y="357" width="0.0616%" height="15" fill="rgb(225,148,7)" fg:x="12383" fg:w="12"/><text x="63.8771%" y="367.50"></text></g><g><title>cycle_add (999 instructions, 5.13%)</title><rect x="58.6393%" y="373" width="5.1297%" height="15" fill="rgb(220,160,43)" fg:x="11420" fg:w="999"/><text x="58.9322%" y="383.50">cycle..</text></g><g><title>@add_cycles (1,009 instructions, 5.18%)</title><rect x="58.6239%" y="389" width="5.1810%" height="15" fill="rgb(213,52,39)" fg:x="11417" fg:w="1009"/><text x="58.9168%" y="399.50">@add_..</text></g><g><title>anon-func-5.34 (1,994 instructions, 10.24%)</title><rect x="54.2696%" y="405" width="10.2388%" height="15" fill="rgb(243,137,7)" fg:x="10569" fg:w="1994"/><text x="54.5625%" y="415.50">anon-func-5...</text></g><g><title>@call_succeeded (2 instructions, 0.01%)</title><rect x="64.5083%" y="405" width="0.0103%" height="15" fill="rgb(230,79,13)" fg:x="12563" fg:w="2"/><text x="64.8013%" y="415.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="64.5186%" y="373" width="0.1335%" height="15" fill="rgb(247,105,23)" fg:x="12565" fg:w="26"/><text x="64.8116%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="64.6521%" y="373" width="0.1335%" height="15" fill="rgb(223,179,41)" fg:x="12591" fg:w="26"/><text x="64.9451%" y="383.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="64.7856%" y="341" width="0.1335%" height="15" fill="rgb(218,9,34)" fg:x="12617" fg:w="26"/><text x="65.0786%" y="351.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="64.9191%" y="341" width="0.1335%" height="15" fill="rgb(222,106,8)" fg:x="12643" fg:w="26"/><text x="65.2121%" y="351.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.0526%" y="309" width="0.1335%" height="15" fill="rgb(211,220,0)" fg:x="12669" fg:w="26"/><text x="65.3456%" y="319.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.1861%" y="309" width="0.1335%" height="15" fill="rgb(229,52,16)" fg:x="12695" fg:w="26"/><text x="65.4791%" y="319.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.3196%" y="277" width="0.1335%" height="15" fill="rgb(212,155,18)" fg:x="12721" fg:w="26"/><text x="65.6126%" y="287.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.4531%" y="277" width="0.1335%" height="15" fill="rgb(242,21,14)" fg:x="12747" fg:w="26"/><text x="65.7461%" y="287.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.5866%" y="245" width="0.1335%" height="15" fill="rgb(222,19,48)" fg:x="12773" fg:w="26"/><text x="65.8796%" y="255.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.7202%" y="245" width="0.1335%" height="15" fill="rgb(232,45,27)" fg:x="12799" fg:w="26"/><text x="66.0131%" y="255.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.8537%" y="213" width="0.1335%" height="15" fill="rgb(249,103,42)" fg:x="12825" fg:w="26"/><text x="66.1466%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="65.9872%" y="213" width="0.1335%" height="15" fill="rgb(246,81,33)" fg:x="12851" fg:w="26"/><text x="66.2801%" y="223.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.1207%" y="181" width="0.1335%" height="15" fill="rgb(252,33,42)" fg:x="12877" fg:w="26"/><text x="66.4136%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.2542%" y="181" width="0.1335%" height="15" fill="rgb(209,212,41)" fg:x="12903" fg:w="26"/><text x="66.5471%" y="191.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.3877%" y="149" width="0.1335%" height="15" fill="rgb(207,154,6)" fg:x="12929" fg:w="26"/><text x="66.6806%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.5212%" y="149" width="0.1335%" height="15" fill="rgb(223,64,47)" fg:x="12955" fg:w="26"/><text x="66.8141%" y="159.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.6547%" y="117" width="0.1335%" height="15" fill="rgb(211,161,38)" fg:x="12981" fg:w="26"/><text x="66.9477%" y="127.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="66.7882%" y="117" width="0.1335%" height="15" fill="rgb(219,138,40)" fg:x="13007" fg:w="26"/><text x="67.0812%" y="127.50"></text></g><g><title>@buffer_size&lt;u&gt; (14 instructions, 0.07%)</title><rect x="66.9217%" y="53" width="0.0719%" height="15" fill="rgb(241,228,46)" fg:x="13033" fg:w="14"/><text x="67.2147%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="66.9936%" y="37" width="0.1746%" height="15" fill="rgb(223,209,38)" fg:x="13047" fg:w="34"/><text x="67.2866%" y="47.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="66.9936%" y="53" width="0.1849%" height="15" fill="rgb(236,164,45)" fg:x="13047" fg:w="36"/><text x="67.2866%" y="63.50"></text></g><g><title>memcpy (63 instructions, 0.32%)</title><rect x="67.1784%" y="53" width="0.3235%" height="15" fill="rgb(231,15,5)" fg:x="13083" fg:w="63"/><text x="67.4714%" y="63.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="67.5019%" y="37" width="0.1746%" height="15" fill="rgb(252,35,15)" fg:x="13146" fg:w="34"/><text x="67.7949%" y="47.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="67.5019%" y="53" width="0.1849%" height="15" fill="rgb(248,181,18)" fg:x="13146" fg:w="36"/><text x="67.7949%" y="63.50"></text></g><g><title>@serialize_go&lt;u&gt; (4 instructions, 0.02%)</title><rect x="67.6868%" y="53" width="0.0205%" height="15" fill="rgb(233,39,42)" fg:x="13182" fg:w="4"/><text x="67.9797%" y="63.50"></text></g><g><title>@serialize&lt;&gt; (216 instructions, 1.11%)</title><rect x="66.9217%" y="69" width="1.1091%" height="15" fill="rgb(238,110,33)" fg:x="13033" fg:w="216"/><text x="67.2147%" y="79.50"></text></g><g><title>reply_with_data (30 instructions, 0.15%)</title><rect x="68.0308%" y="69" width="0.1540%" height="15" fill="rgb(233,195,10)" fg:x="13249" fg:w="30"/><text x="68.3238%" y="79.50"></text></g><g><title>$lambda (251 instructions, 1.29%)</title><rect x="66.9217%" y="85" width="1.2888%" height="15" fill="rgb(254,105,3)" fg:x="13033" fg:w="251"/><text x="67.2147%" y="95.50"></text></g><g><title>$loop/0 (282 instructions, 1.45%)</title><rect x="66.9217%" y="101" width="1.4480%" height="15" fill="rgb(221,225,9)" fg:x="13033" fg:w="282"/><text x="67.2147%" y="111.50"></text></g><g><title>$k/9 (299 instructions, 1.54%)</title><rect x="66.9217%" y="117" width="1.5353%" height="15" fill="rgb(224,227,45)" fg:x="13033" fg:w="299"/><text x="67.2147%" y="127.50"></text></g><g><title>$loop/0 (434 instructions, 2.23%)</title><rect x="66.6547%" y="133" width="2.2285%" height="15" fill="rgb(229,198,43)" fg:x="12981" fg:w="434"/><text x="66.9477%" y="143.50">$..</text></g><g><title>$k/9 (451 instructions, 2.32%)</title><rect x="66.6547%" y="149" width="2.3158%" height="15" fill="rgb(206,209,35)" fg:x="12981" fg:w="451"/><text x="66.9477%" y="159.50">$..</text></g><g><title>$loop/0 (586 instructions, 3.01%)</title><rect x="66.3877%" y="165" width="3.0090%" height="15" fill="rgb(245,195,53)" fg:x="12929" fg:w="586"/><text x="66.6806%" y="175.50">$l..</text></g><g><title>$k/9 (603 instructions, 3.10%)</title><rect x="66.3877%" y="181" width="3.0963%" height="15" fill="rgb(240,92,26)" fg:x="12929" fg:w="603"/><text x="66.6806%" y="191.50">$k..</text></g><g><title>$loop/0 (738 instructions, 3.79%)</title><rect x="66.1207%" y="197" width="3.7895%" height="15" fill="rgb(207,40,23)" fg:x="12877" fg:w="738"/><text x="66.4136%" y="207.50">$lo..</text></g><g><title>$k/9 (755 instructions, 3.88%)</title><rect x="66.1207%" y="213" width="3.8768%" height="15" fill="rgb(223,111,35)" fg:x="12877" fg:w="755"/><text x="66.4136%" y="223.50">$k/9</text></g><g><title>$loop/0 (890 instructions, 4.57%)</title><rect x="65.8537%" y="229" width="4.5700%" height="15" fill="rgb(229,147,28)" fg:x="12825" fg:w="890"/><text x="66.1466%" y="239.50">$loo..</text></g><g><title>$k/9 (907 instructions, 4.66%)</title><rect x="65.8537%" y="245" width="4.6573%" height="15" fill="rgb(211,29,28)" fg:x="12825" fg:w="907"/><text x="66.1466%" y="255.50">$k/9</text></g><g><title>$loop/0 (1,042 instructions, 5.35%)</title><rect x="65.5866%" y="261" width="5.3504%" height="15" fill="rgb(228,72,33)" fg:x="12773" fg:w="1042"/><text x="65.8796%" y="271.50">$loop..</text></g><g><title>$k/9 (1,059 instructions, 5.44%)</title><rect x="65.5866%" y="277" width="5.4377%" height="15" fill="rgb(205,214,31)" fg:x="12773" fg:w="1059"/><text x="65.8796%" y="287.50">$k/9</text></g><g><title>$loop/0 (1,194 instructions, 6.13%)</title><rect x="65.3196%" y="293" width="6.1309%" height="15" fill="rgb(224,111,15)" fg:x="12721" fg:w="1194"/><text x="65.6126%" y="303.50">$loop/0</text></g><g><title>$k/9 (1,211 instructions, 6.22%)</title><rect x="65.3196%" y="309" width="6.2182%" height="15" fill="rgb(253,21,26)" fg:x="12721" fg:w="1211"/><text x="65.6126%" y="319.50">$k/9</text></g><g><title>$loop/0 (1,346 instructions, 6.91%)</title><rect x="65.0526%" y="325" width="6.9114%" height="15" fill="rgb(245,139,43)" fg:x="12669" fg:w="1346"/><text x="65.3456%" y="335.50">$loop/0</text></g><g><title>$k/9 (1,363 instructions, 7.00%)</title><rect x="65.0526%" y="341" width="6.9987%" height="15" fill="rgb(252,170,7)" fg:x="12669" fg:w="1363"/><text x="65.3456%" y="351.50">$k/9</text></g><g><title>$loop/0 (1,498 instructions, 7.69%)</title><rect x="64.7856%" y="357" width="7.6919%" height="15" fill="rgb(231,118,14)" fg:x="12617" fg:w="1498"/><text x="65.0786%" y="367.50">$loop/0</text></g><g><title>$k/9 (1,515 instructions, 7.78%)</title><rect x="64.7856%" y="373" width="7.7792%" height="15" fill="rgb(238,83,0)" fg:x="12617" fg:w="1515"/><text x="65.0786%" y="383.50">$k/9</text></g><g><title>$loop/0 (1,650 instructions, 8.47%)</title><rect x="64.5186%" y="389" width="8.4724%" height="15" fill="rgb(221,39,39)" fg:x="12565" fg:w="1650"/><text x="64.8116%" y="399.50">$loop/0</text></g><g><title>$k/9 (1,667 instructions, 8.56%)</title><rect x="64.5186%" y="405" width="8.5597%" height="15" fill="rgb(222,119,46)" fg:x="12565" fg:w="1667"/><text x="64.8116%" y="415.50">$k/9</text></g><g><title>$loop/0 (3,822 instructions, 19.63%)</title><rect x="53.9307%" y="421" width="19.6252%" height="15" fill="rgb(222,165,49)" fg:x="10503" fg:w="3822"/><text x="54.2236%" y="431.50">$loop/0</text></g><g><title>$lambda (5,288 instructions, 27.15%)</title><rect x="47.6457%" y="437" width="27.1528%" height="15" fill="rgb(219,113,52)" fg:x="9279" fg:w="5288"/><text x="47.9387%" y="447.50">$lambda</text></g><g><title>anon_async (5,292 instructions, 27.17%)</title><rect x="47.6457%" y="453" width="27.1733%" height="15" fill="rgb(214,7,15)" fg:x="9279" fg:w="5292"/><text x="47.9387%" y="463.50">anon_async</text></g><g><title>schedule_copying_gc (50 instructions, 0.26%)</title><rect x="74.8190%" y="453" width="0.2567%" height="15" fill="rgb(235,32,4)" fg:x="14571" fg:w="50"/><text x="75.1120%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.07%)</title><rect x="75.0757%" y="453" width="0.0719%" height="15" fill="rgb(238,90,54)" fg:x="14621" fg:w="14"/><text x="75.3687%" y="463.50"></text></g><g><title>trans_state5 (9 instructions, 0.05%)</title><rect x="77.6585%" y="453" width="0.0462%" height="15" fill="rgb(213,208,19)" fg:x="15124" fg:w="9"/><text x="77.9515%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="77.7047%" y="437" width="0.1746%" height="15" fill="rgb(233,156,4)" fg:x="15133" fg:w="34"/><text x="77.9977%" y="447.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="77.8896%" y="437" width="0.1746%" height="15" fill="rgb(207,194,5)" fg:x="15169" fg:w="34"/><text x="78.1826%" y="447.50"></text></g><g><title>alloc_blob (72 instructions, 0.37%)</title><rect x="77.7047%" y="453" width="0.3697%" height="15" fill="rgb(206,111,30)" fg:x="15133" fg:w="72"/><text x="77.9977%" y="463.50"></text></g><g><title>memcmp (217 instructions, 1.11%)</title><rect x="78.0745%" y="453" width="1.1142%" height="15" fill="rgb(243,70,54)" fg:x="15205" fg:w="217"/><text x="78.3674%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="79.1887%" y="437" width="0.1746%" height="15" fill="rgb(242,28,8)" fg:x="15422" fg:w="34"/><text x="79.4817%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="79.1887%" y="453" width="0.1849%" height="15" fill="rgb(219,106,18)" fg:x="15422" fg:w="36"/><text x="79.4817%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="79.3736%" y="421" width="0.2619%" height="15" fill="rgb(244,222,10)" fg:x="15458" fg:w="51"/><text x="79.6665%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="79.6354%" y="421" width="0.1746%" height="15" fill="rgb(236,179,52)" fg:x="15509" fg:w="34"/><text x="79.9284%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="79.8100%" y="421" width="0.2619%" height="15" fill="rgb(213,23,39)" fg:x="15543" fg:w="51"/><text x="80.1030%" y="431.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="80.0719%" y="421" width="0.3492%" height="15" fill="rgb(238,48,10)" fg:x="15594" fg:w="68"/><text x="80.3649%" y="431.50"></text></g><g><title>parse_idl_header (290 instructions, 1.49%)</title><rect x="79.3736%" y="437" width="1.4891%" height="15" fill="rgb(251,196,23)" fg:x="15458" fg:w="290"/><text x="79.6665%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.05%)</title><rect x="80.8626%" y="437" width="0.0462%" height="15" fill="rgb(250,152,24)" fg:x="15748" fg:w="9"/><text x="81.1556%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="80.9089%" y="421" width="0.0205%" height="15" fill="rgb(209,150,17)" fg:x="15757" fg:w="4"/><text x="81.2018%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.10%)</title><rect x="80.9089%" y="437" width="0.0976%" height="15" fill="rgb(234,202,34)" fg:x="15757" fg:w="19"/><text x="81.2018%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="81.0064%" y="437" width="0.2619%" height="15" fill="rgb(253,148,53)" fg:x="15776" fg:w="51"/><text x="81.2994%" y="447.50"></text></g><g><title>sleb128_decode (68 instructions, 0.35%)</title><rect x="81.2683%" y="437" width="0.3492%" height="15" fill="rgb(218,129,16)" fg:x="15827" fg:w="68"/><text x="81.5613%" y="447.50"></text></g><g><title>set_local %i0 (3 instructions, 0.02%)</title><rect x="81.6175%" y="437" width="0.0154%" height="15" fill="rgb(216,85,19)" fg:x="15895" fg:w="3"/><text x="81.9104%" y="447.50"></text></g><g><title>set_local %i1 (3 instructions, 0.02%)</title><rect x="81.6329%" y="437" width="0.0154%" height="15" fill="rgb(235,228,7)" fg:x="15898" fg:w="3"/><text x="81.9258%" y="447.50"></text></g><g><title>set_local %i2 (3 instructions, 0.02%)</title><rect x="81.6483%" y="437" width="0.0154%" height="15" fill="rgb(245,175,0)" fg:x="15901" fg:w="3"/><text x="81.9412%" y="447.50"></text></g><g><title>box_i32 (9 instructions, 0.05%)</title><rect x="81.6637%" y="421" width="0.0462%" height="15" fill="rgb(208,168,36)" fg:x="15904" fg:w="9"/><text x="81.9566%" y="431.50"></text></g><g><title>@deserialize_go&lt;n32&gt; (46 instructions, 0.24%)</title><rect x="81.6637%" y="437" width="0.2362%" height="15" fill="rgb(246,171,24)" fg:x="15904" fg:w="46"/><text x="81.9566%" y="447.50"></text></g><g><title>@deserialize&lt;n32&gt; (696 instructions, 3.57%)</title><rect x="79.3736%" y="453" width="3.5738%" height="15" fill="rgb(215,142,24)" fg:x="15458" fg:w="696"/><text x="79.6665%" y="463.50">@de..</text></g><g><title>unbox_i32 (6 instructions, 0.03%)</title><rect x="82.9474%" y="453" width="0.0308%" height="15" fill="rgb(250,187,7)" fg:x="16154" fg:w="6"/><text x="83.2403%" y="463.50"></text></g><g><title>peek_future_continuation (36 instructions, 0.18%)</title><rect x="82.9782%" y="453" width="0.1849%" height="15" fill="rgb(228,66,33)" fg:x="16160" fg:w="36"/><text x="83.2711%" y="463.50"></text></g><g><title>@buffer_size&lt;u&gt; (14 instructions, 0.07%)</title><rect x="83.1630%" y="389" width="0.0719%" height="15" fill="rgb(234,215,21)" fg:x="16196" fg:w="14"/><text x="83.4560%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="83.2349%" y="373" width="0.1746%" height="15" fill="rgb(222,191,20)" fg:x="16210" fg:w="34"/><text x="83.5279%" y="383.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="83.2349%" y="389" width="0.1849%" height="15" fill="rgb(245,79,54)" fg:x="16210" fg:w="36"/><text x="83.5279%" y="399.50"></text></g><g><title>memcpy (63 instructions, 0.32%)</title><rect x="83.4198%" y="389" width="0.3235%" height="15" fill="rgb(240,10,37)" fg:x="16246" fg:w="63"/><text x="83.7127%" y="399.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="83.7433%" y="373" width="0.1746%" height="15" fill="rgb(214,192,32)" fg:x="16309" fg:w="34"/><text x="84.0362%" y="383.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="83.7433%" y="389" width="0.1849%" height="15" fill="rgb(209,36,54)" fg:x="16309" fg:w="36"/><text x="84.0362%" y="399.50"></text></g><g><title>@serialize_go&lt;u&gt; (4 instructions, 0.02%)</title><rect x="83.9281%" y="389" width="0.0205%" height="15" fill="rgb(220,10,11)" fg:x="16345" fg:w="4"/><text x="84.2211%" y="399.50"></text></g><g><title>@serialize&lt;&gt; (216 instructions, 1.11%)</title><rect x="83.1630%" y="405" width="1.1091%" height="15" fill="rgb(221,106,17)" fg:x="16196" fg:w="216"/><text x="83.4560%" y="415.50"></text></g><g><title>reply_with_data (30 instructions, 0.15%)</title><rect x="84.2721%" y="405" width="0.1540%" height="15" fill="rgb(251,142,44)" fg:x="16412" fg:w="30"/><text x="84.5651%" y="415.50"></text></g><g><title>$lambda (251 instructions, 1.29%)</title><rect x="83.1630%" y="421" width="1.2888%" height="15" fill="rgb(238,13,15)" fg:x="16196" fg:w="251"/><text x="83.4560%" y="431.50"></text></g><g><title>$lambda (256 instructions, 1.31%)</title><rect x="83.1630%" y="437" width="1.3145%" height="15" fill="rgb(208,107,27)" fg:x="16196" fg:w="256"/><text x="83.4560%" y="447.50"></text></g><g><title>anon_async (260 instructions, 1.34%)</title><rect x="83.1630%" y="453" width="1.3350%" height="15" fill="rgb(205,136,37)" fg:x="16196" fg:w="260"/><text x="83.4560%" y="463.50"></text></g><g><title>schedule_copying_gc (50 instructions, 0.26%)</title><rect x="84.4981%" y="453" width="0.2567%" height="15" fill="rgb(250,205,27)" fg:x="16456" fg:w="50"/><text x="84.7910%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.07%)</title><rect x="84.7548%" y="453" width="0.0719%" height="15" fill="rgb(210,80,43)" fg:x="16506" fg:w="14"/><text x="85.0478%" y="463.50"></text></g><g><title>__motoko_async_helper (8,802 instructions, 45.20%)</title><rect x="42.1412%" y="469" width="45.1964%" height="15" fill="rgb(247,160,36)" fg:x="8207" fg:w="8802"/><text x="42.4342%" y="479.50">__motoko_async_helper</text></g><g><title>trans_state5 (9 instructions, 0.05%)</title><rect x="87.3376%" y="453" width="0.0462%" height="15" fill="rgb(234,13,49)" fg:x="17009" fg:w="9"/><text x="87.6306%" y="463.50"></text></g><g><title>recall_continuation (57 instructions, 0.29%)</title><rect x="87.3838%" y="453" width="0.2927%" height="15" fill="rgb(234,122,0)" fg:x="17018" fg:w="57"/><text x="87.6768%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="87.6765%" y="437" width="0.1746%" height="15" fill="rgb(207,146,38)" fg:x="17075" fg:w="34"/><text x="87.9695%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="87.6765%" y="453" width="0.1849%" height="15" fill="rgb(207,177,25)" fg:x="17075" fg:w="36"/><text x="87.9695%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="87.8614%" y="421" width="0.2619%" height="15" fill="rgb(211,178,42)" fg:x="17111" fg:w="51"/><text x="88.1543%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="88.1232%" y="421" width="0.1746%" height="15" fill="rgb(230,69,54)" fg:x="17162" fg:w="34"/><text x="88.4162%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="88.2978%" y="421" width="0.2619%" height="15" fill="rgb(214,135,41)" fg:x="17196" fg:w="51"/><text x="88.5908%" y="431.50"></text></g><g><title>parse_idl_header (207 instructions, 1.06%)</title><rect x="87.8614%" y="437" width="1.0629%" height="15" fill="rgb(237,67,25)" fg:x="17111" fg:w="207"/><text x="88.1543%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.05%)</title><rect x="88.9243%" y="437" width="0.0462%" height="15" fill="rgb(222,189,50)" fg:x="17318" fg:w="9"/><text x="89.2172%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="88.9705%" y="421" width="0.0205%" height="15" fill="rgb(245,148,34)" fg:x="17327" fg:w="4"/><text x="89.2634%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.10%)</title><rect x="88.9705%" y="437" width="0.0976%" height="15" fill="rgb(222,29,6)" fg:x="17327" fg:w="19"/><text x="89.2634%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="89.0680%" y="437" width="0.2619%" height="15" fill="rgb(221,189,43)" fg:x="17346" fg:w="51"/><text x="89.3610%" y="447.50"></text></g><g><title>@deserialize&lt;&gt; (436 instructions, 2.24%)</title><rect x="87.8614%" y="453" width="2.2388%" height="15" fill="rgb(207,36,27)" fg:x="17111" fg:w="436"/><text x="88.1543%" y="463.50">@..</text></g><g><title>from_word128_ptr (17 instructions, 0.09%)</title><rect x="90.1001%" y="389" width="0.0873%" height="15" fill="rgb(217,90,24)" fg:x="17547" fg:w="17"/><text x="90.3931%" y="399.50"></text></g><g><title>cycle_refunded (30 instructions, 0.15%)</title><rect x="90.1001%" y="405" width="0.1540%" height="15" fill="rgb(224,66,35)" fg:x="17547" fg:w="30"/><text x="90.3931%" y="415.50"></text></g><g><title>@getSystemRefund (32 instructions, 0.16%)</title><rect x="90.1001%" y="421" width="0.1643%" height="15" fill="rgb(221,13,50)" fg:x="17547" fg:w="32"/><text x="90.3931%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="90.2644%" y="421" width="0.1335%" height="15" fill="rgb(236,68,49)" fg:x="17579" fg:w="26"/><text x="90.5574%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="90.3979%" y="405" width="0.1335%" height="15" fill="rgb(229,146,28)" fg:x="17605" fg:w="26"/><text x="90.6909%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="90.3979%" y="421" width="0.2105%" height="15" fill="rgb(225,31,38)" fg:x="17605" fg:w="41"/><text x="90.6909%" y="431.50"></text></g><g><title>opt_inject (14 instructions, 0.07%)</title><rect x="90.6085%" y="421" width="0.0719%" height="15" fill="rgb(250,208,3)" fg:x="17646" fg:w="14"/><text x="90.9014%" y="431.50"></text></g><g><title>fulfill (167 instructions, 0.86%)</title><rect x="90.1001%" y="437" width="0.8575%" height="15" fill="rgb(246,54,23)" fg:x="17547" fg:w="167"/><text x="90.3931%" y="447.50"></text></g><g><title>$lambda (175 instructions, 0.90%)</title><rect x="90.1001%" y="453" width="0.8986%" height="15" fill="rgb(243,76,11)" fg:x="17547" fg:w="175"/><text x="90.3931%" y="463.50"></text></g><g><title>schedule_copying_gc (50 instructions, 0.26%)</title><rect x="90.9987%" y="453" width="0.2567%" height="15" fill="rgb(245,21,50)" fg:x="17722" fg:w="50"/><text x="91.2917%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.07%)</title><rect x="91.2555%" y="453" width="0.0719%" height="15" fill="rgb(228,9,43)" fg:x="17772" fg:w="14"/><text x="91.5484%" y="463.50"></text></g><g><title>trans_state5 (9 instructions, 0.05%)</title><rect x="93.6688%" y="453" width="0.0462%" height="15" fill="rgb(208,100,47)" fg:x="18242" fg:w="9"/><text x="93.9618%" y="463.50"></text></g><g><title>recall_continuation (57 instructions, 0.29%)</title><rect x="93.7150%" y="453" width="0.2927%" height="15" fill="rgb(232,26,8)" fg:x="18251" fg:w="57"/><text x="94.0080%" y="463.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="94.0077%" y="437" width="0.1746%" height="15" fill="rgb(216,166,38)" fg:x="18308" fg:w="34"/><text x="94.3007%" y="447.50"></text></g><g><title>alloc_blob (36 instructions, 0.18%)</title><rect x="94.0077%" y="453" width="0.1849%" height="15" fill="rgb(251,202,51)" fg:x="18308" fg:w="36"/><text x="94.3007%" y="463.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="94.1926%" y="421" width="0.2619%" height="15" fill="rgb(254,216,34)" fg:x="18344" fg:w="51"/><text x="94.4855%" y="431.50"></text></g><g><title>motoko_rts::memory::alloc_blob::hcfef0ac48a3e71ee (34 instructions, 0.17%)</title><rect x="94.4544%" y="421" width="0.1746%" height="15" fill="rgb(251,32,27)" fg:x="18395" fg:w="34"/><text x="94.7474%" y="431.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="94.6290%" y="421" width="0.2619%" height="15" fill="rgb(208,127,28)" fg:x="18429" fg:w="51"/><text x="94.9220%" y="431.50"></text></g><g><title>parse_idl_header (207 instructions, 1.06%)</title><rect x="94.1926%" y="437" width="1.0629%" height="15" fill="rgb(224,137,22)" fg:x="18344" fg:w="207"/><text x="94.4855%" y="447.50"></text></g><g><title>idl_sub_buf_words (9 instructions, 0.05%)</title><rect x="95.2555%" y="437" width="0.0462%" height="15" fill="rgb(254,70,32)" fg:x="18551" fg:w="9"/><text x="95.5484%" y="447.50"></text></g><g><title>memset (4 instructions, 0.02%)</title><rect x="95.3017%" y="421" width="0.0205%" height="15" fill="rgb(229,75,37)" fg:x="18560" fg:w="4"/><text x="95.5946%" y="431.50"></text></g><g><title>idl_sub_buf_init (19 instructions, 0.10%)</title><rect x="95.3017%" y="437" width="0.0976%" height="15" fill="rgb(252,64,23)" fg:x="18560" fg:w="19"/><text x="95.5946%" y="447.50"></text></g><g><title>leb128_decode (51 instructions, 0.26%)</title><rect x="95.3992%" y="437" width="0.2619%" height="15" fill="rgb(232,162,48)" fg:x="18579" fg:w="51"/><text x="95.6922%" y="447.50"></text></g><g><title>@deserialize&lt;&gt; (436 instructions, 2.24%)</title><rect x="94.1926%" y="453" width="2.2388%" height="15" fill="rgb(246,160,12)" fg:x="18344" fg:w="436"/><text x="94.4855%" y="463.50">@..</text></g><g><title>from_word128_ptr (17 instructions, 0.09%)</title><rect x="96.4313%" y="389" width="0.0873%" height="15" fill="rgb(247,166,0)" fg:x="18780" fg:w="17"/><text x="96.7243%" y="399.50"></text></g><g><title>cycle_refunded (30 instructions, 0.15%)</title><rect x="96.4313%" y="405" width="0.1540%" height="15" fill="rgb(249,219,21)" fg:x="18780" fg:w="30"/><text x="96.7243%" y="415.50"></text></g><g><title>@getSystemRefund (32 instructions, 0.16%)</title><rect x="96.4313%" y="421" width="0.1643%" height="15" fill="rgb(205,209,3)" fg:x="18780" fg:w="32"/><text x="96.7243%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="96.5956%" y="421" width="0.1335%" height="15" fill="rgb(243,44,1)" fg:x="18812" fg:w="26"/><text x="96.8886%" y="431.50"></text></g><g><title>alloc_words (26 instructions, 0.13%)</title><rect x="96.7291%" y="405" width="0.1335%" height="15" fill="rgb(206,159,16)" fg:x="18838" fg:w="26"/><text x="97.0221%" y="415.50"></text></g><g><title>to_2_tuple (41 instructions, 0.21%)</title><rect x="96.7291%" y="421" width="0.2105%" height="15" fill="rgb(244,77,30)" fg:x="18838" fg:w="41"/><text x="97.0221%" y="431.50"></text></g><g><title>opt_inject (14 instructions, 0.07%)</title><rect x="96.9397%" y="421" width="0.0719%" height="15" fill="rgb(218,69,12)" fg:x="18879" fg:w="14"/><text x="97.2326%" y="431.50"></text></g><g><title>fulfill (167 instructions, 0.86%)</title><rect x="96.4313%" y="437" width="0.8575%" height="15" fill="rgb(212,87,7)" fg:x="18780" fg:w="167"/><text x="96.7243%" y="447.50"></text></g><g><title>$lambda (175 instructions, 0.90%)</title><rect x="96.4313%" y="453" width="0.8986%" height="15" fill="rgb(245,114,25)" fg:x="18780" fg:w="175"/><text x="96.7243%" y="463.50"></text></g><g><title>schedule_copying_gc (50 instructions, 0.26%)</title><rect x="97.3299%" y="453" width="0.2567%" height="15" fill="rgb(210,61,42)" fg:x="18955" fg:w="50"/><text x="97.6229%" y="463.50"></text></g><g><title>trans_state4 (14 instructions, 0.07%)</title><rect x="97.5866%" y="453" width="0.0719%" height="15" fill="rgb(211,52,33)" fg:x="19005" fg:w="14"/><text x="97.8796%" y="463.50"></text></g><g><title>all (19,475 instructions, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(234,58,33)" fg:x="0" fg:w="19475"/><text x="0.2930%" y="495.50"></text></g><g><title>@callback&lt;u&gt; (2,466 instructions, 12.66%)</title><rect x="87.3376%" y="469" width="12.6624%" height="15" fill="rgb(220,115,36)" fg:x="17009" fg:w="2466"/><text x="87.6306%" y="479.50">@callback&lt;u&gt;</text></g></svg></svg>