<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="68338"><g><title>ic_cdk::setup (58 instructions, 0.08%)</title><rect x="0.0000%" y="213" width="0.0849%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="58"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.01%)</title><rect x="0.0849%" y="213" width="1.0082%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="689"/><text x="0.3778%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.0931%" y="213" width="0.1332%" height="15" fill="rgb(209,67,49)" fg:x="747" fg:w="91"/><text x="1.3861%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.2263%" y="197" width="0.1332%" height="15" fill="rgb(213,87,29)" fg:x="838" fg:w="91"/><text x="1.5192%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.08%)</title><rect x="1.3594%" y="165" width="0.0834%" height="15" fill="rgb(205,151,52)" fg:x="929" fg:w="57"/><text x="1.6524%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.23%)</title><rect x="1.3594%" y="181" width="0.2268%" height="15" fill="rgb(253,215,39)" fg:x="929" fg:w="155"/><text x="1.6524%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="1.5862%" y="181" width="0.6482%" height="15" fill="rgb(221,220,41)" fg:x="1084" fg:w="443"/><text x="1.8792%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="2.2345%" y="181" width="0.1390%" height="15" fill="rgb(218,133,21)" fg:x="1527" fg:w="95"/><text x="2.5275%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.3735%" y="181" width="0.0878%" height="15" fill="rgb(221,193,43)" fg:x="1622" fg:w="60"/><text x="2.6665%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.4613%" y="181" width="0.0878%" height="15" fill="rgb(240,128,52)" fg:x="1682" fg:w="60"/><text x="2.7543%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5491%" y="181" width="0.0878%" height="15" fill="rgb(253,114,12)" fg:x="1742" fg:w="60"/><text x="2.8421%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.6369%" y="181" width="0.0878%" height="15" fill="rgb(215,223,47)" fg:x="1802" fg:w="60"/><text x="2.9299%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="2.7247%" y="181" width="0.1200%" height="15" fill="rgb(248,225,23)" fg:x="1862" fg:w="82"/><text x="3.0177%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="2.8447%" y="181" width="0.1024%" height="15" fill="rgb(250,108,0)" fg:x="1944" fg:w="70"/><text x="3.1377%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="2.9471%" y="181" width="0.6482%" height="15" fill="rgb(228,208,7)" fg:x="2014" fg:w="443"/><text x="3.2401%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.5954%" y="181" width="0.0278%" height="15" fill="rgb(244,45,10)" fg:x="2457" fg:w="19"/><text x="3.8883%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="3.6232%" y="165" width="0.1332%" height="15" fill="rgb(207,125,25)" fg:x="2476" fg:w="91"/><text x="3.9161%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="3.7563%" y="133" width="0.0980%" height="15" fill="rgb(210,195,18)" fg:x="2567" fg:w="67"/><text x="4.0493%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="3.7563%" y="149" width="0.1405%" height="15" fill="rgb(249,80,12)" fg:x="2567" fg:w="96"/><text x="4.0493%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8968%" y="101" width="0.0161%" height="15" fill="rgb(221,65,9)" fg:x="2663" fg:w="11"/><text x="4.1898%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="3.9129%" y="85" width="0.0512%" height="15" fill="rgb(235,49,36)" fg:x="2674" fg:w="35"/><text x="4.2059%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="3.9129%" y="101" width="0.0937%" height="15" fill="rgb(225,32,20)" fg:x="2674" fg:w="64"/><text x="4.2059%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="3.8968%" y="117" width="0.2107%" height="15" fill="rgb(215,141,46)" fg:x="2663" fg:w="144"/><text x="4.1898%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="3.8968%" y="133" width="0.3058%" height="15" fill="rgb(250,160,47)" fg:x="2663" fg:w="209"/><text x="4.1898%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="3.8968%" y="149" width="0.3205%" height="15" fill="rgb(216,222,40)" fg:x="2663" fg:w="219"/><text x="4.1898%" y="159.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="3.7563%" y="165" width="0.6687%" height="15" fill="rgb(234,217,39)" fg:x="2567" fg:w="457"/><text x="4.0493%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.00%)</title><rect x="3.6232%" y="181" width="1.0038%" height="15" fill="rgb(207,178,40)" fg:x="2476" fg:w="686"/><text x="3.9161%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="4.6270%" y="181" width="0.1390%" height="15" fill="rgb(221,136,13)" fg:x="3162" fg:w="95"/><text x="4.9200%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="4.7660%" y="181" width="0.0922%" height="15" fill="rgb(249,199,10)" fg:x="3257" fg:w="63"/><text x="5.0590%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="4.8582%" y="181" width="0.1112%" height="15" fill="rgb(249,222,13)" fg:x="3320" fg:w="76"/><text x="5.1512%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="4.9694%" y="181" width="0.1024%" height="15" fill="rgb(244,185,38)" fg:x="3396" fg:w="70"/><text x="5.2624%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="5.0718%" y="165" width="0.6482%" height="15" fill="rgb(236,202,9)" fg:x="3466" fg:w="443"/><text x="5.3648%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.7201%" y="165" width="0.0278%" height="15" fill="rgb(250,229,37)" fg:x="3909" fg:w="19"/><text x="6.0131%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="5.7479%" y="149" width="0.1332%" height="15" fill="rgb(206,174,23)" fg:x="3928" fg:w="91"/><text x="6.0409%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.8811%" y="117" width="0.0980%" height="15" fill="rgb(211,33,43)" fg:x="4019" fg:w="67"/><text x="6.1740%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="5.8811%" y="133" width="0.1405%" height="15" fill="rgb(245,58,50)" fg:x="4019" fg:w="96"/><text x="6.1740%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.0215%" y="85" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="4115" fg:w="11"/><text x="6.3145%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="6.0376%" y="69" width="0.0512%" height="15" fill="rgb(232,229,15)" fg:x="4126" fg:w="35"/><text x="6.3306%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="6.0376%" y="85" width="0.0937%" height="15" fill="rgb(254,30,23)" fg:x="4126" fg:w="64"/><text x="6.3306%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="6.0215%" y="101" width="0.2107%" height="15" fill="rgb(235,160,14)" fg:x="4115" fg:w="144"/><text x="6.3145%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="6.0215%" y="117" width="0.3058%" height="15" fill="rgb(212,155,44)" fg:x="4115" fg:w="209"/><text x="6.3145%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="6.0215%" y="133" width="0.3205%" height="15" fill="rgb(226,2,50)" fg:x="4115" fg:w="219"/><text x="6.3145%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="5.8811%" y="149" width="0.6687%" height="15" fill="rgb(234,177,6)" fg:x="4019" fg:w="457"/><text x="6.1740%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.00%)</title><rect x="5.7479%" y="165" width="1.0038%" height="15" fill="rgb(217,24,9)" fg:x="3928" fg:w="686"/><text x="6.0409%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="6.7517%" y="165" width="0.1390%" height="15" fill="rgb(220,13,46)" fg:x="4614" fg:w="95"/><text x="7.0447%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="6.8907%" y="165" width="0.0922%" height="15" fill="rgb(239,221,27)" fg:x="4709" fg:w="63"/><text x="7.1837%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="6.9829%" y="149" width="0.1200%" height="15" fill="rgb(222,198,25)" fg:x="4772" fg:w="82"/><text x="7.2759%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.1029%" y="149" width="0.1390%" height="15" fill="rgb(211,99,13)" fg:x="4854" fg:w="95"/><text x="7.3959%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.2419%" y="149" width="0.1112%" height="15" fill="rgb(232,111,31)" fg:x="4949" fg:w="76"/><text x="7.5349%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="6.9829%" y="165" width="0.4829%" height="15" fill="rgb(245,82,37)" fg:x="4772" fg:w="330"/><text x="7.2759%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="7.4658%" y="165" width="0.1332%" height="15" fill="rgb(227,149,46)" fg:x="5102" fg:w="91"/><text x="7.7588%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,967 instructions, 2.88%)</title><rect x="5.0718%" y="181" width="2.8783%" height="15" fill="rgb(218,36,50)" fg:x="3466" fg:w="1967"/><text x="5.3648%" y="191.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.9502%" y="181" width="0.1112%" height="15" fill="rgb(226,80,48)" fg:x="5433" fg:w="76"/><text x="8.2432%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.0614%" y="181" width="0.0219%" height="15" fill="rgb(238,224,15)" fg:x="5509" fg:w="15"/><text x="8.3544%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.0834%" y="181" width="0.0219%" height="15" fill="rgb(241,136,10)" fg:x="5524" fg:w="15"/><text x="8.3763%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.1053%" y="181" width="0.0219%" height="15" fill="rgb(208,32,45)" fg:x="5539" fg:w="15"/><text x="8.3983%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="8.1272%" y="181" width="0.0102%" height="15" fill="rgb(207,135,9)" fg:x="5554" fg:w="7"/><text x="8.4202%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.1375%" y="165" width="0.1332%" height="15" fill="rgb(206,86,44)" fg:x="5561" fg:w="91"/><text x="8.4305%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="8.1375%" y="181" width="0.2736%" height="15" fill="rgb(245,177,15)" fg:x="5561" fg:w="187"/><text x="8.4305%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.4111%" y="149" width="0.1332%" height="15" fill="rgb(206,64,50)" fg:x="5748" fg:w="91"/><text x="8.7041%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="8.4111%" y="165" width="0.1961%" height="15" fill="rgb(234,36,40)" fg:x="5748" fg:w="134"/><text x="8.7041%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.32%)</title><rect x="8.4111%" y="181" width="0.3205%" height="15" fill="rgb(213,64,8)" fg:x="5748" fg:w="219"/><text x="8.7041%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.7316%" y="181" width="0.1332%" height="15" fill="rgb(210,75,36)" fg:x="5967" fg:w="91"/><text x="9.0246%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="8.8648%" y="181" width="0.1302%" height="15" fill="rgb(229,88,21)" fg:x="6058" fg:w="89"/><text x="9.1577%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.9950%" y="181" width="0.1332%" height="15" fill="rgb(252,204,47)" fg:x="6147" fg:w="91"/><text x="9.2880%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.1282%" y="181" width="0.1332%" height="15" fill="rgb(208,77,27)" fg:x="6238" fg:w="91"/><text x="9.4211%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="9.2672%" y="181" width="0.1302%" height="15" fill="rgb(221,76,26)" fg:x="6333" fg:w="89"/><text x="9.5601%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="9.3974%" y="181" width="0.5736%" height="15" fill="rgb(225,139,18)" fg:x="6422" fg:w="392"/><text x="9.6904%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="9.9710%" y="181" width="0.5736%" height="15" fill="rgb(230,137,11)" fg:x="6814" fg:w="392"/><text x="10.2640%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.74%)</title><rect x="10.5446%" y="181" width="0.7375%" height="15" fill="rgb(212,28,1)" fg:x="7206" fg:w="504"/><text x="10.8376%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,990 instructions, 11.69%)</title><rect x="1.3594%" y="197" width="11.6919%" height="15" fill="rgb(248,164,17)" fg:x="929" fg:w="7990"/><text x="1.6524%" y="207.50">candid::de::ID..</text></g><g><title>memcpy (344 instructions, 0.50%)</title><rect x="13.0513%" y="197" width="0.5034%" height="15" fill="rgb(222,171,42)" fg:x="8919" fg:w="344"/><text x="13.3443%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (69 instructions, 0.10%)</title><rect x="13.5547%" y="181" width="0.1010%" height="15" fill="rgb(243,84,45)" fg:x="9263" fg:w="69"/><text x="13.8477%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (101 instructions, 0.15%)</title><rect x="13.5547%" y="197" width="0.1478%" height="15" fill="rgb(252,49,23)" fg:x="9263" fg:w="101"/><text x="13.8477%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="13.7025%" y="197" width="0.1332%" height="15" fill="rgb(215,19,7)" fg:x="9364" fg:w="91"/><text x="13.9954%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="13.8356%" y="181" width="0.0102%" height="15" fill="rgb(238,81,41)" fg:x="9455" fg:w="7"/><text x="14.1286%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="13.8459%" y="165" width="0.0863%" height="15" fill="rgb(210,199,37)" fg:x="9462" fg:w="59"/><text x="14.1389%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="13.9322%" y="165" width="0.1376%" height="15" fill="rgb(244,192,49)" fg:x="9521" fg:w="94"/><text x="14.2252%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="14.0698%" y="165" width="0.2532%" height="15" fill="rgb(226,211,11)" fg:x="9615" fg:w="173"/><text x="14.3627%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="13.8459%" y="181" width="0.8473%" height="15" fill="rgb(236,162,54)" fg:x="9462" fg:w="579"/><text x="14.1389%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="14.6931%" y="181" width="0.1332%" height="15" fill="rgb(220,229,9)" fg:x="10041" fg:w="91"/><text x="14.9861%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="14.8263%" y="181" width="0.2224%" height="15" fill="rgb(250,87,22)" fg:x="10132" fg:w="152"/><text x="15.1193%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,194 instructions, 1.75%)</title><rect x="13.8356%" y="197" width="1.7472%" height="15" fill="rgb(239,43,17)" fg:x="9455" fg:w="1194"/><text x="14.1286%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.5828%" y="197" width="0.1332%" height="15" fill="rgb(231,177,25)" fg:x="10649" fg:w="91"/><text x="15.8758%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="15.7160%" y="181" width="0.0102%" height="15" fill="rgb(219,179,1)" fg:x="10740" fg:w="7"/><text x="16.0090%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="15.7262%" y="165" width="0.0863%" height="15" fill="rgb(238,219,53)" fg:x="10747" fg:w="59"/><text x="16.0192%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="15.8126%" y="165" width="0.1376%" height="15" fill="rgb(232,167,36)" fg:x="10806" fg:w="94"/><text x="16.1055%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="15.9501%" y="165" width="0.2532%" height="15" fill="rgb(244,19,51)" fg:x="10900" fg:w="173"/><text x="16.2431%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="15.7262%" y="181" width="0.8473%" height="15" fill="rgb(224,6,22)" fg:x="10747" fg:w="579"/><text x="16.0192%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="16.5735%" y="181" width="0.1127%" height="15" fill="rgb(224,145,5)" fg:x="11326" fg:w="77"/><text x="16.8665%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="16.6862%" y="165" width="0.1302%" height="15" fill="rgb(234,130,49)" fg:x="11403" fg:w="89"/><text x="16.9791%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="16.6862%" y="181" width="0.1946%" height="15" fill="rgb(254,6,2)" fg:x="11403" fg:w="133"/><text x="16.9791%" y="191.50"></text></g><g><title>candid::types::internal::env_add (975 instructions, 1.43%)</title><rect x="15.7160%" y="197" width="1.4267%" height="15" fill="rgb(208,96,46)" fg:x="10740" fg:w="975"/><text x="16.0090%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="17.1427%" y="149" width="0.0863%" height="15" fill="rgb(239,3,39)" fg:x="11715" fg:w="59"/><text x="17.4357%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.15%)</title><rect x="17.1427%" y="165" width="0.1493%" height="15" fill="rgb(233,210,1)" fg:x="11715" fg:w="102"/><text x="17.4357%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.47%)</title><rect x="17.1427%" y="181" width="0.4727%" height="15" fill="rgb(244,137,37)" fg:x="11715" fg:w="323"/><text x="17.4357%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="17.6154%" y="181" width="0.1332%" height="15" fill="rgb(240,136,2)" fg:x="12038" fg:w="91"/><text x="17.9084%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="17.7485%" y="181" width="0.2224%" height="15" fill="rgb(239,18,37)" fg:x="12129" fg:w="152"/><text x="18.0415%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,011 instructions, 1.48%)</title><rect x="17.1427%" y="197" width="1.4794%" height="15" fill="rgb(218,185,22)" fg:x="11715" fg:w="1011"/><text x="17.4357%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="18.6221%" y="197" width="0.0717%" height="15" fill="rgb(225,218,4)" fg:x="12726" fg:w="49"/><text x="18.9151%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.6938%" y="165" width="0.0395%" height="15" fill="rgb(230,182,32)" fg:x="12775" fg:w="27"/><text x="18.9868%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.21%)</title><rect x="18.6938%" y="181" width="0.2078%" height="15" fill="rgb(242,56,43)" fg:x="12775" fg:w="142"/><text x="18.9868%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.9660%" y="165" width="0.0395%" height="15" fill="rgb(233,99,24)" fg:x="12961" fg:w="27"/><text x="19.2590%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.21%)</title><rect x="18.9660%" y="181" width="0.2078%" height="15" fill="rgb(234,209,42)" fg:x="12961" fg:w="142"/><text x="19.2590%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.54%)</title><rect x="18.6938%" y="197" width="0.5444%" height="15" fill="rgb(227,7,12)" fg:x="12775" fg:w="372"/><text x="18.9868%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="19.2382%" y="181" width="0.0512%" height="15" fill="rgb(245,203,43)" fg:x="13147" fg:w="35"/><text x="19.5312%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.05%)</title><rect x="19.2894%" y="181" width="0.0483%" height="15" fill="rgb(238,205,33)" fg:x="13182" fg:w="33"/><text x="19.5824%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (170 instructions, 0.25%)</title><rect x="19.2382%" y="197" width="0.2488%" height="15" fill="rgb(231,56,7)" fg:x="13147" fg:w="170"/><text x="19.5312%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="19.4870%" y="197" width="0.0190%" height="15" fill="rgb(244,186,29)" fg:x="13317" fg:w="13"/><text x="19.7799%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="19.5060%" y="197" width="0.0190%" height="15" fill="rgb(234,111,31)" fg:x="13330" fg:w="13"/><text x="19.7990%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="19.5250%" y="197" width="0.0190%" height="15" fill="rgb(241,149,10)" fg:x="13343" fg:w="13"/><text x="19.8180%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.06%)</title><rect x="19.5440%" y="197" width="0.0629%" height="15" fill="rgb(249,206,44)" fg:x="13356" fg:w="43"/><text x="19.8370%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="19.6070%" y="181" width="0.0102%" height="15" fill="rgb(251,153,30)" fg:x="13399" fg:w="7"/><text x="19.8999%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.6172%" y="165" width="0.0395%" height="15" fill="rgb(239,152,38)" fg:x="13406" fg:w="27"/><text x="19.9102%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.6567%" y="165" width="0.0395%" height="15" fill="rgb(249,139,47)" fg:x="13433" fg:w="27"/><text x="19.9497%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.29%)</title><rect x="19.6172%" y="181" width="0.2883%" height="15" fill="rgb(244,64,35)" fg:x="13406" fg:w="197"/><text x="19.9102%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.9055%" y="149" width="0.0395%" height="15" fill="rgb(216,46,15)" fg:x="13603" fg:w="27"/><text x="20.1984%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.9450%" y="149" width="0.0395%" height="15" fill="rgb(250,74,19)" fg:x="13630" fg:w="27"/><text x="20.2379%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="19.9845%" y="149" width="0.0995%" height="15" fill="rgb(249,42,33)" fg:x="13657" fg:w="68"/><text x="20.2775%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.36%)</title><rect x="19.9055%" y="165" width="0.3570%" height="15" fill="rgb(242,149,17)" fg:x="13603" fg:w="244"/><text x="20.1984%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 instructions, 0.42%)</title><rect x="19.9055%" y="181" width="0.4214%" height="15" fill="rgb(244,29,21)" fg:x="13603" fg:w="288"/><text x="20.1984%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="20.3269%" y="181" width="0.0190%" height="15" fill="rgb(220,130,37)" fg:x="13891" fg:w="13"/><text x="20.6199%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (565 instructions, 0.83%)</title><rect x="19.6070%" y="197" width="0.8268%" height="15" fill="rgb(211,67,2)" fg:x="13399" fg:w="565"/><text x="19.8999%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.10%)</title><rect x="20.4337%" y="181" width="0.1010%" height="15" fill="rgb(235,68,52)" fg:x="13964" fg:w="69"/><text x="20.7267%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="20.5347%" y="181" width="0.0995%" height="15" fill="rgb(246,142,3)" fg:x="14033" fg:w="68"/><text x="20.8277%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.34%)</title><rect x="20.4337%" y="197" width="0.3380%" height="15" fill="rgb(241,25,7)" fg:x="13964" fg:w="231"/><text x="20.7267%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.25%)</title><rect x="20.7718%" y="197" width="0.2532%" height="15" fill="rgb(242,119,39)" fg:x="14195" fg:w="173"/><text x="21.0647%" y="207.50"></text></g><g><title>__rust_realloc (111 instructions, 0.16%)</title><rect x="21.0249%" y="165" width="0.1624%" height="15" fill="rgb(241,98,45)" fg:x="14368" fg:w="111"/><text x="21.3179%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.23%)</title><rect x="21.0249%" y="181" width="0.2283%" height="15" fill="rgb(254,28,30)" fg:x="14368" fg:w="156"/><text x="21.3179%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="21.3878%" y="165" width="0.1215%" height="15" fill="rgb(241,142,54)" fg:x="14616" fg:w="83"/><text x="21.6808%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="21.3878%" y="181" width="0.1844%" height="15" fill="rgb(222,85,15)" fg:x="14616" fg:w="126"/><text x="21.6808%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (459 instructions, 0.67%)</title><rect x="21.0249%" y="197" width="0.6717%" height="15" fill="rgb(210,85,47)" fg:x="14368" fg:w="459"/><text x="21.3179%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (578 instructions, 0.85%)</title><rect x="21.6966%" y="197" width="0.8458%" height="15" fill="rgb(224,206,25)" fg:x="14827" fg:w="578"/><text x="21.9895%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="22.5424%" y="165" width="0.0102%" height="15" fill="rgb(243,201,19)" fg:x="15405" fg:w="7"/><text x="22.8353%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="22.5526%" y="165" width="0.0190%" height="15" fill="rgb(236,59,4)" fg:x="15412" fg:w="13"/><text x="22.8456%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="22.5716%" y="165" width="0.2224%" height="15" fill="rgb(254,179,45)" fg:x="15425" fg:w="152"/><text x="22.8646%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (346 instructions, 0.51%)</title><rect x="22.5424%" y="181" width="0.5063%" height="15" fill="rgb(226,14,10)" fg:x="15405" fg:w="346"/><text x="22.8353%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="23.0487%" y="181" width="0.7580%" height="15" fill="rgb(244,27,41)" fg:x="15751" fg:w="518"/><text x="23.3416%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="23.8067%" y="133" width="0.1215%" height="15" fill="rgb(235,35,32)" fg:x="16269" fg:w="83"/><text x="24.0996%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="23.8067%" y="149" width="0.1844%" height="15" fill="rgb(218,68,31)" fg:x="16269" fg:w="126"/><text x="24.0996%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.30%)</title><rect x="23.8067%" y="165" width="0.3044%" height="15" fill="rgb(207,120,37)" fg:x="16269" fg:w="208"/><text x="24.0996%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1110%" y="165" width="0.0219%" height="15" fill="rgb(227,98,0)" fg:x="16477" fg:w="15"/><text x="24.4040%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1330%" y="165" width="0.0219%" height="15" fill="rgb(207,7,3)" fg:x="16492" fg:w="15"/><text x="24.4260%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.62%)</title><rect x="23.8067%" y="181" width="0.6234%" height="15" fill="rgb(206,98,19)" fg:x="16269" fg:w="426"/><text x="24.0996%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="24.4300%" y="181" width="0.7551%" height="15" fill="rgb(217,5,26)" fg:x="16695" fg:w="516"/><text x="24.7230%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="25.1851%" y="181" width="0.0102%" height="15" fill="rgb(235,190,38)" fg:x="17211" fg:w="7"/><text x="25.4781%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="25.1954%" y="181" width="0.0102%" height="15" fill="rgb(247,86,24)" fg:x="17218" fg:w="7"/><text x="25.4883%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="25.2056%" y="181" width="0.0878%" height="15" fill="rgb(205,101,16)" fg:x="17225" fg:w="60"/><text x="25.4986%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,561 instructions, 3.75%)</title><rect x="22.5424%" y="197" width="3.7475%" height="15" fill="rgb(246,168,33)" fg:x="15405" fg:w="2561"/><text x="22.8353%" y="207.50">ic_..</text></g><g><title>timer::__canister_method_setTimer::{{closure}} (19,423 instructions, 28.42%)</title><rect x="1.2263%" y="213" width="28.4220%" height="15" fill="rgb(231,114,1)" fg:x="838" fg:w="19423"/><text x="1.5192%" y="223.50">timer::__canister_method_setTimer::{{cl..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="29.6482%" y="213" width="0.0205%" height="15" fill="rgb(207,184,53)" fg:x="20261" fg:w="14"/><text x="29.9412%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="29.8004%" y="197" width="0.0395%" height="15" fill="rgb(224,95,51)" fg:x="20365" fg:w="27"/><text x="30.0934%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.34%)</title><rect x="29.6702%" y="213" width="0.3410%" height="15" fill="rgb(212,188,45)" fg:x="20276" fg:w="233"/><text x="29.9631%" y="223.50"></text></g><g><title>canister_update setTimer (20,653 instructions, 30.22%)</title><rect x="0.0000%" y="229" width="30.2218%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="20653"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="30.2218%" y="213" width="0.0351%" height="15" fill="rgb(251,22,52)" fg:x="20653" fg:w="24"/><text x="30.5148%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.2570%" y="213" width="0.1215%" height="15" fill="rgb(229,209,22)" fg:x="20677" fg:w="83"/><text x="30.5499%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.3784%" y="213" width="0.1215%" height="15" fill="rgb(234,138,34)" fg:x="20760" fg:w="83"/><text x="30.6714%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.4999%" y="197" width="0.1332%" height="15" fill="rgb(212,95,11)" fg:x="20843" fg:w="91"/><text x="30.7928%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.6330%" y="197" width="0.1215%" height="15" fill="rgb(240,179,47)" fg:x="20934" fg:w="83"/><text x="30.9260%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.7545%" y="197" width="0.1332%" height="15" fill="rgb(240,163,11)" fg:x="21017" fg:w="91"/><text x="31.0475%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="30.8876%" y="197" width="0.0307%" height="15" fill="rgb(236,37,12)" fg:x="21108" fg:w="21"/><text x="31.1806%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="30.9184%" y="181" width="0.1185%" height="15" fill="rgb(232,164,16)" fg:x="21129" fg:w="81"/><text x="31.2113%" y="191.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="31.0369%" y="181" width="0.1902%" height="15" fill="rgb(244,205,15)" fg:x="21210" fg:w="130"/><text x="31.3299%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="31.2271%" y="181" width="0.2619%" height="15" fill="rgb(223,117,47)" fg:x="21340" fg:w="179"/><text x="31.5201%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="31.4891%" y="181" width="0.1302%" height="15" fill="rgb(244,107,35)" fg:x="21519" fg:w="89"/><text x="31.7820%" y="191.50"></text></g><g><title>ic_cdk::api::id (1,619 instructions, 2.37%)</title><rect x="30.9184%" y="197" width="2.3691%" height="15" fill="rgb(205,140,8)" fg:x="21129" fg:w="1619"/><text x="31.2113%" y="207.50">i..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.2875%" y="181" width="0.0102%" height="15" fill="rgb(228,84,46)" fg:x="22748" fg:w="7"/><text x="33.5805%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.14%)</title><rect x="33.2875%" y="197" width="0.1376%" height="15" fill="rgb(254,188,9)" fg:x="22748" fg:w="94"/><text x="33.5805%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.4250%" y="165" width="0.0102%" height="15" fill="rgb(206,112,54)" fg:x="22842" fg:w="7"/><text x="33.7180%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.06%)</title><rect x="33.4250%" y="181" width="0.0571%" height="15" fill="rgb(216,84,49)" fg:x="22842" fg:w="39"/><text x="33.7180%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="33.4821%" y="181" width="0.1332%" height="15" fill="rgb(214,194,35)" fg:x="22881" fg:w="91"/><text x="33.7751%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.6153%" y="165" width="0.0102%" height="15" fill="rgb(249,28,3)" fg:x="22972" fg:w="7"/><text x="33.9082%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.6255%" y="149" width="0.0863%" height="15" fill="rgb(222,56,52)" fg:x="22979" fg:w="59"/><text x="33.9185%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="33.7118%" y="149" width="0.1376%" height="15" fill="rgb(245,217,50)" fg:x="23038" fg:w="94"/><text x="34.0048%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="33.8494%" y="149" width="0.2532%" height="15" fill="rgb(213,201,24)" fg:x="23132" fg:w="173"/><text x="34.1424%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="33.6255%" y="165" width="0.8473%" height="15" fill="rgb(248,116,28)" fg:x="22979" fg:w="579"/><text x="33.9185%" y="175.50"></text></g><g><title>candid::types::internal::env_add (797 instructions, 1.17%)</title><rect x="33.6153%" y="181" width="1.1663%" height="15" fill="rgb(219,72,43)" fg:x="22972" fg:w="797"/><text x="33.9082%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="34.7815%" y="181" width="0.1332%" height="15" fill="rgb(209,138,14)" fg:x="23769" fg:w="91"/><text x="35.0745%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="34.9147%" y="165" width="0.0102%" height="15" fill="rgb(222,18,33)" fg:x="23860" fg:w="7"/><text x="35.2077%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="34.9249%" y="149" width="0.0863%" height="15" fill="rgb(213,199,7)" fg:x="23867" fg:w="59"/><text x="35.2179%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="35.0113%" y="149" width="0.1376%" height="15" fill="rgb(250,110,10)" fg:x="23926" fg:w="94"/><text x="35.3042%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="35.1488%" y="149" width="0.2532%" height="15" fill="rgb(248,123,6)" fg:x="24020" fg:w="173"/><text x="35.4418%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="34.9249%" y="165" width="0.8473%" height="15" fill="rgb(206,91,31)" fg:x="23867" fg:w="579"/><text x="35.2179%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="35.7722%" y="165" width="0.1127%" height="15" fill="rgb(211,154,13)" fg:x="24446" fg:w="77"/><text x="36.0652%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="35.8849%" y="149" width="0.1302%" height="15" fill="rgb(225,148,7)" fg:x="24523" fg:w="89"/><text x="36.1778%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="35.8849%" y="165" width="0.1946%" height="15" fill="rgb(220,160,43)" fg:x="24523" fg:w="133"/><text x="36.1778%" y="175.50"></text></g><g><title>candid::types::internal::env_add (975 instructions, 1.43%)</title><rect x="34.9147%" y="181" width="1.4267%" height="15" fill="rgb(213,52,39)" fg:x="23860" fg:w="975"/><text x="35.2077%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="36.3414%" y="133" width="0.0863%" height="15" fill="rgb(243,137,7)" fg:x="24835" fg:w="59"/><text x="36.6344%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.15%)</title><rect x="36.3414%" y="149" width="0.1493%" height="15" fill="rgb(230,79,13)" fg:x="24835" fg:w="102"/><text x="36.6344%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.47%)</title><rect x="36.3414%" y="165" width="0.4727%" height="15" fill="rgb(247,105,23)" fg:x="24835" fg:w="323"/><text x="36.6344%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.304 (34 instructions, 0.05%)</title><rect x="36.8141%" y="165" width="0.0498%" height="15" fill="rgb(223,179,41)" fg:x="25158" fg:w="34"/><text x="37.1070%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.8638%" y="165" width="0.0190%" height="15" fill="rgb(218,9,34)" fg:x="25192" fg:w="13"/><text x="37.1568%" y="175.50"></text></g><g><title>candid::types::internal::env_id (555 instructions, 0.81%)</title><rect x="36.3414%" y="181" width="0.8121%" height="15" fill="rgb(222,106,8)" fg:x="24835" fg:w="555"/><text x="36.6344%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,677 instructions, 3.92%)</title><rect x="33.4250%" y="197" width="3.9173%" height="15" fill="rgb(211,220,0)" fg:x="22842" fg:w="2677"/><text x="33.7180%" y="207.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.17%)</title><rect x="37.3423%" y="165" width="0.1668%" height="15" fill="rgb(229,52,16)" fg:x="25519" fg:w="114"/><text x="37.6353%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.23%)</title><rect x="37.3423%" y="181" width="0.2297%" height="15" fill="rgb(212,155,18)" fg:x="25519" fg:w="157"/><text x="37.6353%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (242 instructions, 0.35%)</title><rect x="37.3423%" y="197" width="0.3541%" height="15" fill="rgb(242,21,14)" fg:x="25519" fg:w="242"/><text x="37.6353%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.05%)</title><rect x="37.6964%" y="181" width="0.0454%" height="15" fill="rgb(222,19,48)" fg:x="25761" fg:w="31"/><text x="37.9894%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.7418%" y="181" width="0.0190%" height="15" fill="rgb(232,45,27)" fg:x="25792" fg:w="13"/><text x="38.0348%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (113 instructions, 0.17%)</title><rect x="37.6964%" y="197" width="0.1654%" height="15" fill="rgb(249,103,42)" fg:x="25761" fg:w="113"/><text x="37.9894%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.8618%" y="197" width="0.0190%" height="15" fill="rgb(246,81,33)" fg:x="25874" fg:w="13"/><text x="38.1548%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="37.8808%" y="165" width="0.1215%" height="15" fill="rgb(252,33,42)" fg:x="25887" fg:w="83"/><text x="38.1738%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="37.8808%" y="181" width="0.1844%" height="15" fill="rgb(209,212,41)" fg:x="25887" fg:w="126"/><text x="38.1738%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="38.1852%" y="165" width="0.1185%" height="15" fill="rgb(207,154,6)" fg:x="26095" fg:w="81"/><text x="38.4782%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.18%)</title><rect x="38.1852%" y="181" width="0.1815%" height="15" fill="rgb(223,64,47)" fg:x="26095" fg:w="124"/><text x="38.4782%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (414 instructions, 0.61%)</title><rect x="37.8808%" y="197" width="0.6058%" height="15" fill="rgb(211,161,38)" fg:x="25887" fg:w="414"/><text x="38.1738%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="38.4866%" y="149" width="0.1332%" height="15" fill="rgb(219,138,40)" fg:x="26301" fg:w="91"/><text x="38.7796%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="38.4866%" y="165" width="0.1961%" height="15" fill="rgb(241,228,46)" fg:x="26301" fg:w="134"/><text x="38.7796%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.32%)</title><rect x="38.4866%" y="181" width="0.3161%" height="15" fill="rgb(223,209,38)" fg:x="26301" fg:w="216"/><text x="38.7796%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="38.8027%" y="181" width="0.0219%" height="15" fill="rgb(236,164,45)" fg:x="26517" fg:w="15"/><text x="39.0957%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="38.8247%" y="133" width="0.1332%" height="15" fill="rgb(231,15,5)" fg:x="26532" fg:w="91"/><text x="39.1176%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="38.8247%" y="149" width="0.1961%" height="15" fill="rgb(252,35,15)" fg:x="26532" fg:w="134"/><text x="39.1176%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.32%)</title><rect x="38.8247%" y="165" width="0.3161%" height="15" fill="rgb(248,181,18)" fg:x="26532" fg:w="216"/><text x="39.1176%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (291 instructions, 0.43%)</title><rect x="38.8247%" y="181" width="0.4258%" height="15" fill="rgb(233,39,42)" fg:x="26532" fg:w="291"/><text x="39.1176%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="39.2505%" y="181" width="0.0512%" height="15" fill="rgb(238,110,33)" fg:x="26823" fg:w="35"/><text x="39.5435%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="39.3017%" y="181" width="0.0922%" height="15" fill="rgb(233,195,10)" fg:x="26858" fg:w="63"/><text x="39.5947%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (864 instructions, 1.26%)</title><rect x="38.4866%" y="197" width="1.2643%" height="15" fill="rgb(254,105,3)" fg:x="26301" fg:w="864"/><text x="38.7796%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="39.7509%" y="197" width="0.0980%" height="15" fill="rgb(221,225,9)" fg:x="27165" fg:w="67"/><text x="40.0439%" y="207.50"></text></g><g><title>__rust_realloc (55 instructions, 0.08%)</title><rect x="39.8490%" y="165" width="0.0805%" height="15" fill="rgb(224,227,45)" fg:x="27232" fg:w="55"/><text x="40.1420%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.15%)</title><rect x="39.8490%" y="181" width="0.1463%" height="15" fill="rgb(229,198,43)" fg:x="27232" fg:w="100"/><text x="40.1420%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.27%)</title><rect x="39.8490%" y="197" width="0.2736%" height="15" fill="rgb(206,209,35)" fg:x="27232" fg:w="187"/><text x="40.1420%" y="207.50"></text></g><g><title>memcpy (147 instructions, 0.22%)</title><rect x="40.1226%" y="197" width="0.2151%" height="15" fill="rgb(245,195,53)" fg:x="27419" fg:w="147"/><text x="40.4156%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="40.3377%" y="181" width="0.0102%" height="15" fill="rgb(240,92,26)" fg:x="27566" fg:w="7"/><text x="40.6307%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="40.3480%" y="181" width="0.0190%" height="15" fill="rgb(207,40,23)" fg:x="27573" fg:w="13"/><text x="40.6409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="40.3670%" y="181" width="0.1302%" height="15" fill="rgb(223,111,35)" fg:x="27586" fg:w="89"/><text x="40.6600%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="40.4972%" y="181" width="0.0922%" height="15" fill="rgb(229,147,28)" fg:x="27675" fg:w="63"/><text x="40.7902%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="40.5894%" y="181" width="0.1302%" height="15" fill="rgb(211,29,28)" fg:x="27738" fg:w="89"/><text x="40.8824%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (358 instructions, 0.52%)</title><rect x="40.3377%" y="197" width="0.5239%" height="15" fill="rgb(228,72,33)" fg:x="27566" fg:w="358"/><text x="40.6307%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="40.8616%" y="197" width="0.1332%" height="15" fill="rgb(205,214,31)" fg:x="27924" fg:w="91"/><text x="41.1546%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="40.9948%" y="197" width="0.1332%" height="15" fill="rgb(224,111,15)" fg:x="28015" fg:w="91"/><text x="41.2877%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="41.1279%" y="197" width="0.0322%" height="15" fill="rgb(253,21,26)" fg:x="28106" fg:w="22"/><text x="41.4209%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (62 instructions, 0.09%)</title><rect x="41.1601%" y="181" width="0.0907%" height="15" fill="rgb(245,139,43)" fg:x="28128" fg:w="62"/><text x="41.4531%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (83 instructions, 0.12%)</title><rect x="41.1601%" y="197" width="0.1215%" height="15" fill="rgb(252,170,7)" fg:x="28128" fg:w="83"/><text x="41.4531%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.03%)</title><rect x="41.2816%" y="197" width="0.0337%" height="15" fill="rgb(231,118,14)" fg:x="28211" fg:w="23"/><text x="41.5745%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (16,876 instructions, 24.69%)</title><rect x="30.4999%" y="213" width="24.6949%" height="15" fill="rgb(238,83,0)" fg:x="20843" fg:w="16876"/><text x="30.7928%" y="223.50">ic_cdk_timers::global_timer::{{cl..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="55.1948%" y="213" width="0.0205%" height="15" fill="rgb(221,39,39)" fg:x="37719" fg:w="14"/><text x="55.4877%" y="223.50"></text></g><g><title>canister_global_timer (17,200 instructions, 25.17%)</title><rect x="30.2218%" y="229" width="25.1690%" height="15" fill="rgb(222,119,46)" fg:x="20653" fg:w="17200"/><text x="30.5148%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="55.3909%" y="213" width="0.1215%" height="15" fill="rgb(222,165,49)" fg:x="37853" fg:w="83"/><text x="55.6838%" y="223.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="55.5123%" y="213" width="0.1902%" height="15" fill="rgb(219,113,52)" fg:x="37936" fg:w="130"/><text x="55.8053%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="55.7025%" y="213" width="0.2619%" height="15" fill="rgb(214,7,15)" fg:x="38066" fg:w="179"/><text x="55.9955%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="55.9645%" y="213" width="0.1302%" height="15" fill="rgb(235,32,4)" fg:x="38245" fg:w="89"/><text x="56.2574%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="56.0947%" y="197" width="0.1215%" height="15" fill="rgb(238,90,54)" fg:x="38334" fg:w="83"/><text x="56.3877%" y="207.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="56.2162%" y="197" width="0.1902%" height="15" fill="rgb(213,208,19)" fg:x="38417" fg:w="130"/><text x="56.5091%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="56.4064%" y="197" width="0.2619%" height="15" fill="rgb(233,156,4)" fg:x="38547" fg:w="179"/><text x="56.6994%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="56.6683%" y="197" width="0.1302%" height="15" fill="rgb(207,194,5)" fg:x="38726" fg:w="89"/><text x="56.9613%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,621 instructions, 2.37%)</title><rect x="56.0947%" y="213" width="2.3720%" height="15" fill="rgb(206,111,30)" fg:x="38334" fg:w="1621"/><text x="56.3877%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 0.99%)</title><rect x="58.4667%" y="213" width="0.9877%" height="15" fill="rgb(243,70,54)" fg:x="39955" fg:w="675"/><text x="58.7597%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="59.4545%" y="213" width="0.1215%" height="15" fill="rgb(242,28,8)" fg:x="40630" fg:w="83"/><text x="59.7474%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="59.5759%" y="197" width="0.1200%" height="15" fill="rgb(219,106,18)" fg:x="40713" fg:w="82"/><text x="59.8689%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="59.6959%" y="197" width="0.6482%" height="15" fill="rgb(244,222,10)" fg:x="40795" fg:w="443"/><text x="59.9889%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="60.3442%" y="197" width="0.1390%" height="15" fill="rgb(236,179,52)" fg:x="41238" fg:w="95"/><text x="60.6371%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="60.4832%" y="197" width="0.0878%" height="15" fill="rgb(213,23,39)" fg:x="41333" fg:w="60"/><text x="60.7762%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="60.5710%" y="197" width="0.0878%" height="15" fill="rgb(238,48,10)" fg:x="41393" fg:w="60"/><text x="60.8640%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="60.6588%" y="197" width="0.0878%" height="15" fill="rgb(251,196,23)" fg:x="41453" fg:w="60"/><text x="60.9518%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="60.7466%" y="197" width="0.0878%" height="15" fill="rgb(250,152,24)" fg:x="41513" fg:w="60"/><text x="61.0396%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="60.8344%" y="197" width="0.1200%" height="15" fill="rgb(209,150,17)" fg:x="41573" fg:w="82"/><text x="61.1274%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="60.9544%" y="197" width="0.1024%" height="15" fill="rgb(234,202,34)" fg:x="41655" fg:w="70"/><text x="61.2473%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="61.0568%" y="197" width="0.6482%" height="15" fill="rgb(253,148,53)" fg:x="41725" fg:w="443"/><text x="61.3498%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="61.7051%" y="197" width="0.0278%" height="15" fill="rgb(218,129,16)" fg:x="42168" fg:w="19"/><text x="61.9980%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="61.7329%" y="181" width="0.1215%" height="15" fill="rgb(216,85,19)" fg:x="42187" fg:w="83"/><text x="62.0258%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="61.8543%" y="149" width="0.0980%" height="15" fill="rgb(235,228,7)" fg:x="42270" fg:w="67"/><text x="62.1473%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="61.8543%" y="165" width="0.1405%" height="15" fill="rgb(245,175,0)" fg:x="42270" fg:w="96"/><text x="62.1473%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="61.9948%" y="117" width="0.0161%" height="15" fill="rgb(208,168,36)" fg:x="42366" fg:w="11"/><text x="62.2878%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="62.0109%" y="101" width="0.0512%" height="15" fill="rgb(246,171,24)" fg:x="42377" fg:w="35"/><text x="62.3039%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="62.0109%" y="117" width="0.0937%" height="15" fill="rgb(215,142,24)" fg:x="42377" fg:w="64"/><text x="62.3039%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="61.9948%" y="133" width="0.2107%" height="15" fill="rgb(250,187,7)" fg:x="42366" fg:w="144"/><text x="62.2878%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="61.9948%" y="149" width="0.3058%" height="15" fill="rgb(228,66,33)" fg:x="42366" fg:w="209"/><text x="62.2878%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="61.9948%" y="165" width="0.3205%" height="15" fill="rgb(234,215,21)" fg:x="42366" fg:w="219"/><text x="62.2878%" y="175.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="61.8543%" y="181" width="0.6687%" height="15" fill="rgb(222,191,20)" fg:x="42270" fg:w="457"/><text x="62.1473%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 0.99%)</title><rect x="61.7329%" y="197" width="0.9921%" height="15" fill="rgb(245,79,54)" fg:x="42187" fg:w="678"/><text x="62.0258%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="62.7250%" y="197" width="0.1390%" height="15" fill="rgb(240,10,37)" fg:x="42865" fg:w="95"/><text x="63.0180%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="62.8640%" y="197" width="0.1302%" height="15" fill="rgb(214,192,32)" fg:x="42960" fg:w="89"/><text x="63.1570%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="62.9942%" y="197" width="0.1112%" height="15" fill="rgb(209,36,54)" fg:x="43049" fg:w="76"/><text x="63.2872%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="63.1054%" y="197" width="0.1024%" height="15" fill="rgb(220,10,11)" fg:x="43125" fg:w="70"/><text x="63.3984%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="63.2079%" y="181" width="0.6482%" height="15" fill="rgb(221,106,17)" fg:x="43195" fg:w="443"/><text x="63.5008%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="63.8561%" y="181" width="0.0278%" height="15" fill="rgb(251,142,44)" fg:x="43638" fg:w="19"/><text x="64.1491%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="63.8839%" y="165" width="0.1215%" height="15" fill="rgb(238,13,15)" fg:x="43657" fg:w="83"/><text x="64.1769%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="64.0054%" y="133" width="0.0980%" height="15" fill="rgb(208,107,27)" fg:x="43740" fg:w="67"/><text x="64.2984%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="64.0054%" y="149" width="0.1405%" height="15" fill="rgb(205,136,37)" fg:x="43740" fg:w="96"/><text x="64.2984%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="64.1459%" y="101" width="0.0161%" height="15" fill="rgb(250,205,27)" fg:x="43836" fg:w="11"/><text x="64.4388%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="64.1620%" y="85" width="0.0512%" height="15" fill="rgb(210,80,43)" fg:x="43847" fg:w="35"/><text x="64.4549%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="64.1620%" y="101" width="0.0937%" height="15" fill="rgb(247,160,36)" fg:x="43847" fg:w="64"/><text x="64.4549%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="64.1459%" y="117" width="0.2107%" height="15" fill="rgb(234,13,49)" fg:x="43836" fg:w="144"/><text x="64.4388%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="64.1459%" y="133" width="0.3058%" height="15" fill="rgb(234,122,0)" fg:x="43836" fg:w="209"/><text x="64.4388%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="64.1459%" y="149" width="0.3205%" height="15" fill="rgb(207,146,38)" fg:x="43836" fg:w="219"/><text x="64.4388%" y="159.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="64.0054%" y="165" width="0.6687%" height="15" fill="rgb(207,177,25)" fg:x="43740" fg:w="457"/><text x="64.2984%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 0.99%)</title><rect x="63.8839%" y="181" width="0.9921%" height="15" fill="rgb(211,178,42)" fg:x="43657" fg:w="678"/><text x="64.1769%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="64.8761%" y="181" width="0.1390%" height="15" fill="rgb(230,69,54)" fg:x="44335" fg:w="95"/><text x="65.1690%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="65.0151%" y="181" width="0.1302%" height="15" fill="rgb(214,135,41)" fg:x="44430" fg:w="89"/><text x="65.3080%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="65.1453%" y="165" width="0.1200%" height="15" fill="rgb(237,67,25)" fg:x="44519" fg:w="82"/><text x="65.4383%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="65.2653%" y="165" width="0.1390%" height="15" fill="rgb(222,189,50)" fg:x="44601" fg:w="95"/><text x="65.5583%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="65.4043%" y="165" width="0.1112%" height="15" fill="rgb(245,148,34)" fg:x="44696" fg:w="76"/><text x="65.6973%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="65.1453%" y="181" width="0.4829%" height="15" fill="rgb(222,29,6)" fg:x="44519" fg:w="330"/><text x="65.4383%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="65.6282%" y="181" width="0.1332%" height="15" fill="rgb(221,189,43)" fg:x="44849" fg:w="91"/><text x="65.9212%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,985 instructions, 2.90%)</title><rect x="63.2079%" y="197" width="2.9047%" height="15" fill="rgb(207,36,27)" fg:x="43195" fg:w="1985"/><text x="63.5008%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.1126%" y="197" width="0.1112%" height="15" fill="rgb(217,90,24)" fg:x="45180" fg:w="76"/><text x="66.4055%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="66.2238%" y="197" width="0.0219%" height="15" fill="rgb(224,66,35)" fg:x="45256" fg:w="15"/><text x="66.5167%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="66.2457%" y="197" width="0.0219%" height="15" fill="rgb(221,13,50)" fg:x="45271" fg:w="15"/><text x="66.5387%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="66.2677%" y="197" width="0.0219%" height="15" fill="rgb(236,68,49)" fg:x="45286" fg:w="15"/><text x="66.5606%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="66.2896%" y="197" width="0.0102%" height="15" fill="rgb(229,146,28)" fg:x="45301" fg:w="7"/><text x="66.5826%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.2999%" y="181" width="0.1332%" height="15" fill="rgb(225,31,38)" fg:x="45308" fg:w="91"/><text x="66.5928%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="66.2999%" y="197" width="0.2736%" height="15" fill="rgb(250,208,3)" fg:x="45308" fg:w="187"/><text x="66.5928%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.5735%" y="165" width="0.1332%" height="15" fill="rgb(246,54,23)" fg:x="45495" fg:w="91"/><text x="66.8665%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="66.5735%" y="181" width="0.1961%" height="15" fill="rgb(243,76,11)" fg:x="45495" fg:w="134"/><text x="66.8665%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.32%)</title><rect x="66.5735%" y="197" width="0.3205%" height="15" fill="rgb(245,21,50)" fg:x="45495" fg:w="219"/><text x="66.8665%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="66.8940%" y="197" width="0.1215%" height="15" fill="rgb(228,9,43)" fg:x="45714" fg:w="83"/><text x="67.1869%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="67.0154%" y="197" width="0.0922%" height="15" fill="rgb(208,100,47)" fg:x="45797" fg:w="63"/><text x="67.3084%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.1076%" y="197" width="0.1332%" height="15" fill="rgb(232,26,8)" fg:x="45860" fg:w="91"/><text x="67.4006%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.2408%" y="197" width="0.1332%" height="15" fill="rgb(216,166,38)" fg:x="45951" fg:w="91"/><text x="67.5337%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="67.3798%" y="197" width="0.1302%" height="15" fill="rgb(251,202,51)" fg:x="46046" fg:w="89"/><text x="67.6728%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="67.5100%" y="197" width="0.5736%" height="15" fill="rgb(254,216,34)" fg:x="46135" fg:w="392"/><text x="67.8030%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="68.0836%" y="197" width="0.5736%" height="15" fill="rgb(251,32,27)" fg:x="46527" fg:w="392"/><text x="68.3766%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.74%)</title><rect x="68.6573%" y="197" width="0.7375%" height="15" fill="rgb(208,127,28)" fg:x="46919" fg:w="504"/><text x="68.9502%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,939 instructions, 11.62%)</title><rect x="59.5759%" y="213" width="11.6173%" height="15" fill="rgb(224,137,22)" fg:x="40713" fg:w="7939"/><text x="59.8689%" y="223.50">candid::de::ID..</text></g><g><title>memcpy (344 instructions, 0.50%)</title><rect x="71.1932%" y="213" width="0.5034%" height="15" fill="rgb(254,70,32)" fg:x="48652" fg:w="344"/><text x="71.4862%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="71.6966%" y="181" width="0.0102%" height="15" fill="rgb(229,75,37)" fg:x="48996" fg:w="7"/><text x="71.9895%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="71.7068%" y="165" width="0.0863%" height="15" fill="rgb(252,64,23)" fg:x="49003" fg:w="59"/><text x="71.9998%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="71.7931%" y="165" width="0.1376%" height="15" fill="rgb(232,162,48)" fg:x="49062" fg:w="94"/><text x="72.0861%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="71.9307%" y="165" width="0.2532%" height="15" fill="rgb(246,160,12)" fg:x="49156" fg:w="173"/><text x="72.2237%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="71.7068%" y="181" width="0.8473%" height="15" fill="rgb(247,166,0)" fg:x="49003" fg:w="579"/><text x="71.9998%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="72.5541%" y="181" width="0.1127%" height="15" fill="rgb(249,219,21)" fg:x="49582" fg:w="77"/><text x="72.8470%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (832 instructions, 1.22%)</title><rect x="71.6966%" y="197" width="1.2175%" height="15" fill="rgb(205,209,3)" fg:x="48996" fg:w="832"/><text x="71.9895%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (876 instructions, 1.28%)</title><rect x="71.6966%" y="213" width="1.2819%" height="15" fill="rgb(243,44,1)" fg:x="48996" fg:w="876"/><text x="71.9895%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.07%)</title><rect x="72.9784%" y="213" width="0.0717%" height="15" fill="rgb(206,159,16)" fg:x="49872" fg:w="49"/><text x="73.2714%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.0501%" y="197" width="0.0922%" height="15" fill="rgb(244,77,30)" fg:x="49921" fg:w="63"/><text x="73.3431%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.2067%" y="197" width="0.0922%" height="15" fill="rgb(218,69,12)" fg:x="50028" fg:w="63"/><text x="73.4997%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.31%)</title><rect x="73.0501%" y="213" width="0.3131%" height="15" fill="rgb(212,87,7)" fg:x="49921" fg:w="214"/><text x="73.3431%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.05%)</title><rect x="73.3633%" y="197" width="0.0512%" height="15" fill="rgb(245,114,25)" fg:x="50135" fg:w="35"/><text x="73.6563%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (55 instructions, 0.08%)</title><rect x="73.4145%" y="197" width="0.0805%" height="15" fill="rgb(210,61,42)" fg:x="50170" fg:w="55"/><text x="73.7075%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (192 instructions, 0.28%)</title><rect x="73.3633%" y="213" width="0.2810%" height="15" fill="rgb(211,52,33)" fg:x="50135" fg:w="192"/><text x="73.6563%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.6442%" y="213" width="0.0190%" height="15" fill="rgb(234,58,33)" fg:x="50327" fg:w="13"/><text x="73.9372%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.6633%" y="213" width="0.0190%" height="15" fill="rgb(220,115,36)" fg:x="50340" fg:w="13"/><text x="73.9562%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.6823%" y="213" width="0.0190%" height="15" fill="rgb(243,153,54)" fg:x="50353" fg:w="13"/><text x="73.9753%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.06%)</title><rect x="73.7013%" y="213" width="0.0629%" height="15" fill="rgb(251,47,18)" fg:x="50366" fg:w="43"/><text x="73.9943%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="73.7642%" y="197" width="0.0102%" height="15" fill="rgb(242,102,42)" fg:x="50409" fg:w="7"/><text x="74.0572%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="73.7745%" y="197" width="0.1302%" height="15" fill="rgb(234,31,38)" fg:x="50416" fg:w="89"/><text x="74.0674%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="73.9047%" y="165" width="0.0395%" height="15" fill="rgb(221,117,51)" fg:x="50505" fg:w="27"/><text x="74.1977%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.17%)</title><rect x="73.9047%" y="181" width="0.1727%" height="15" fill="rgb(212,20,18)" fg:x="50505" fg:w="118"/><text x="74.1977%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 instructions, 0.24%)</title><rect x="73.9047%" y="197" width="0.2371%" height="15" fill="rgb(245,133,36)" fg:x="50505" fg:w="162"/><text x="74.1977%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="74.1418%" y="197" width="0.0190%" height="15" fill="rgb(212,6,19)" fg:x="50667" fg:w="13"/><text x="74.4347%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (331 instructions, 0.48%)</title><rect x="73.7642%" y="213" width="0.4844%" height="15" fill="rgb(218,1,36)" fg:x="50409" fg:w="331"/><text x="74.0572%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="74.2486%" y="213" width="0.1302%" height="15" fill="rgb(246,84,54)" fg:x="50740" fg:w="89"/><text x="74.5416%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="74.3817%" y="197" width="0.0102%" height="15" fill="rgb(242,110,6)" fg:x="50831" fg:w="7"/><text x="74.6747%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="74.3920%" y="181" width="0.1302%" height="15" fill="rgb(214,47,5)" fg:x="50838" fg:w="89"/><text x="74.6850%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.19%)</title><rect x="74.3920%" y="197" width="0.1946%" height="15" fill="rgb(218,159,25)" fg:x="50838" fg:w="133"/><text x="74.6850%" y="207.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="74.5866%" y="197" width="0.2224%" height="15" fill="rgb(215,211,28)" fg:x="50971" fg:w="152"/><text x="74.8796%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (466 instructions, 0.68%)</title><rect x="74.3817%" y="213" width="0.6819%" height="15" fill="rgb(238,59,32)" fg:x="50831" fg:w="466"/><text x="74.6747%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="75.0637%" y="213" width="0.7580%" height="15" fill="rgb(226,82,3)" fg:x="51297" fg:w="518"/><text x="75.3566%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="75.8217%" y="165" width="0.1215%" height="15" fill="rgb(240,164,32)" fg:x="51815" fg:w="83"/><text x="76.1146%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="75.8217%" y="181" width="0.1844%" height="15" fill="rgb(232,46,7)" fg:x="51815" fg:w="126"/><text x="76.1146%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.30%)</title><rect x="75.8217%" y="197" width="0.3044%" height="15" fill="rgb(229,129,53)" fg:x="51815" fg:w="208"/><text x="76.1146%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.1260%" y="197" width="0.0219%" height="15" fill="rgb(234,188,29)" fg:x="52023" fg:w="15"/><text x="76.4190%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.1480%" y="197" width="0.0219%" height="15" fill="rgb(246,141,4)" fg:x="52038" fg:w="15"/><text x="76.4409%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.62%)</title><rect x="75.8217%" y="213" width="0.6234%" height="15" fill="rgb(229,23,39)" fg:x="51815" fg:w="426"/><text x="76.1146%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="76.4450%" y="213" width="0.7551%" height="15" fill="rgb(206,12,3)" fg:x="52241" fg:w="516"/><text x="76.7380%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="77.2001%" y="213" width="0.0102%" height="15" fill="rgb(252,226,20)" fg:x="52757" fg:w="7"/><text x="77.4931%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="77.2103%" y="197" width="0.0102%" height="15" fill="rgb(216,123,35)" fg:x="52764" fg:w="7"/><text x="77.5033%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="77.2206%" y="197" width="0.1302%" height="15" fill="rgb(212,68,40)" fg:x="52771" fg:w="89"/><text x="77.5135%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (160 instructions, 0.23%)</title><rect x="77.2103%" y="213" width="0.2341%" height="15" fill="rgb(254,125,32)" fg:x="52764" fg:w="160"/><text x="77.5033%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (18,406 instructions, 26.93%)</title><rect x="55.3909%" y="229" width="26.9338%" height="15" fill="rgb(253,97,22)" fg:x="37853" fg:w="18406"/><text x="55.6838%" y="239.50">canister_update &lt;ic-cdk internal&gt; ti..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="82.3246%" y="213" width="0.1215%" height="15" fill="rgb(241,101,14)" fg:x="56259" fg:w="83"/><text x="82.6176%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="82.4461%" y="165" width="0.0307%" height="15" fill="rgb(238,103,29)" fg:x="56342" fg:w="21"/><text x="82.7390%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="82.4768%" y="149" width="0.1200%" height="15" fill="rgb(233,195,47)" fg:x="56363" fg:w="82"/><text x="82.7698%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="82.5968%" y="149" width="0.6482%" height="15" fill="rgb(246,218,30)" fg:x="56445" fg:w="443"/><text x="82.8898%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="83.2450%" y="149" width="0.1390%" height="15" fill="rgb(219,145,47)" fg:x="56888" fg:w="95"/><text x="83.5380%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.3841%" y="149" width="0.0878%" height="15" fill="rgb(243,12,26)" fg:x="56983" fg:w="60"/><text x="83.6770%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.4719%" y="149" width="0.0878%" height="15" fill="rgb(214,87,16)" fg:x="57043" fg:w="60"/><text x="83.7648%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.5597%" y="149" width="0.0878%" height="15" fill="rgb(208,99,42)" fg:x="57103" fg:w="60"/><text x="83.8526%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.6475%" y="149" width="0.0878%" height="15" fill="rgb(253,99,2)" fg:x="57163" fg:w="60"/><text x="83.9404%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="83.7353%" y="149" width="0.1200%" height="15" fill="rgb(220,168,23)" fg:x="57223" fg:w="82"/><text x="84.0282%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="83.8552%" y="149" width="0.1024%" height="15" fill="rgb(242,38,24)" fg:x="57305" fg:w="70"/><text x="84.1482%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="83.9577%" y="149" width="0.6482%" height="15" fill="rgb(225,182,9)" fg:x="57375" fg:w="443"/><text x="84.2506%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="84.6059%" y="149" width="0.0278%" height="15" fill="rgb(243,178,37)" fg:x="57818" fg:w="19"/><text x="84.8989%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="84.6337%" y="133" width="0.1215%" height="15" fill="rgb(232,139,19)" fg:x="57837" fg:w="83"/><text x="84.9267%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="84.7552%" y="101" width="0.0980%" height="15" fill="rgb(225,201,24)" fg:x="57920" fg:w="67"/><text x="85.0482%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="84.7552%" y="117" width="0.1405%" height="15" fill="rgb(221,47,46)" fg:x="57920" fg:w="96"/><text x="85.0482%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="84.8957%" y="69" width="0.0161%" height="15" fill="rgb(249,23,13)" fg:x="58016" fg:w="11"/><text x="85.1886%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="84.9118%" y="53" width="0.0512%" height="15" fill="rgb(219,9,5)" fg:x="58027" fg:w="35"/><text x="85.2047%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="84.9118%" y="69" width="0.0937%" height="15" fill="rgb(254,171,16)" fg:x="58027" fg:w="64"/><text x="85.2047%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="84.8957%" y="85" width="0.2107%" height="15" fill="rgb(230,171,20)" fg:x="58016" fg:w="144"/><text x="85.1886%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="84.8957%" y="101" width="0.3058%" height="15" fill="rgb(210,71,41)" fg:x="58016" fg:w="209"/><text x="85.1886%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="84.8957%" y="117" width="0.3205%" height="15" fill="rgb(206,173,20)" fg:x="58016" fg:w="219"/><text x="85.1886%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="84.7552%" y="133" width="0.6687%" height="15" fill="rgb(233,88,34)" fg:x="57920" fg:w="457"/><text x="85.0482%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 0.99%)</title><rect x="84.6337%" y="149" width="0.9921%" height="15" fill="rgb(223,209,46)" fg:x="57837" fg:w="678"/><text x="84.9267%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="85.6259%" y="149" width="0.1390%" height="15" fill="rgb(250,43,18)" fg:x="58515" fg:w="95"/><text x="85.9188%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="85.7649%" y="149" width="0.1302%" height="15" fill="rgb(208,13,10)" fg:x="58610" fg:w="89"/><text x="86.0578%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="85.8951%" y="149" width="0.1112%" height="15" fill="rgb(212,200,36)" fg:x="58699" fg:w="76"/><text x="86.1881%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="86.0063%" y="149" width="0.1024%" height="15" fill="rgb(225,90,30)" fg:x="58775" fg:w="70"/><text x="86.2993%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="86.1088%" y="133" width="0.6482%" height="15" fill="rgb(236,182,39)" fg:x="58845" fg:w="443"/><text x="86.4017%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="86.7570%" y="133" width="0.0278%" height="15" fill="rgb(212,144,35)" fg:x="59288" fg:w="19"/><text x="87.0500%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="86.7848%" y="117" width="0.1215%" height="15" fill="rgb(228,63,44)" fg:x="59307" fg:w="83"/><text x="87.0778%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="86.9063%" y="85" width="0.0980%" height="15" fill="rgb(228,109,6)" fg:x="59390" fg:w="67"/><text x="87.1992%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="86.9063%" y="101" width="0.1405%" height="15" fill="rgb(238,117,24)" fg:x="59390" fg:w="96"/><text x="87.1992%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="87.0467%" y="53" width="0.0161%" height="15" fill="rgb(242,26,26)" fg:x="59486" fg:w="11"/><text x="87.3397%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="87.0628%" y="37" width="0.0512%" height="15" fill="rgb(221,92,48)" fg:x="59497" fg:w="35"/><text x="87.3558%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="87.0628%" y="53" width="0.0937%" height="15" fill="rgb(209,209,32)" fg:x="59497" fg:w="64"/><text x="87.3558%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="87.0467%" y="69" width="0.2107%" height="15" fill="rgb(221,70,22)" fg:x="59486" fg:w="144"/><text x="87.3397%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="87.0467%" y="85" width="0.3058%" height="15" fill="rgb(248,145,5)" fg:x="59486" fg:w="209"/><text x="87.3397%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="87.0467%" y="101" width="0.3205%" height="15" fill="rgb(226,116,26)" fg:x="59486" fg:w="219"/><text x="87.3397%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.67%)</title><rect x="86.9063%" y="117" width="0.6687%" height="15" fill="rgb(244,5,17)" fg:x="59390" fg:w="457"/><text x="87.1992%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 0.99%)</title><rect x="86.7848%" y="133" width="0.9921%" height="15" fill="rgb(252,159,33)" fg:x="59307" fg:w="678"/><text x="87.0778%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="87.7769%" y="133" width="0.1390%" height="15" fill="rgb(206,71,0)" fg:x="59985" fg:w="95"/><text x="88.0699%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="87.9159%" y="133" width="0.1302%" height="15" fill="rgb(233,118,54)" fg:x="60080" fg:w="89"/><text x="88.2089%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,511 instructions, 2.21%)</title><rect x="86.1088%" y="149" width="2.2111%" height="15" fill="rgb(234,83,48)" fg:x="58845" fg:w="1511"/><text x="86.4017%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="88.3198%" y="149" width="0.1112%" height="15" fill="rgb(228,3,54)" fg:x="60356" fg:w="76"/><text x="88.6128%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="88.4310%" y="149" width="0.0219%" height="15" fill="rgb(226,155,13)" fg:x="60432" fg:w="15"/><text x="88.7240%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="88.4530%" y="149" width="0.0219%" height="15" fill="rgb(241,28,37)" fg:x="60447" fg:w="15"/><text x="88.7460%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="88.4749%" y="149" width="0.0219%" height="15" fill="rgb(233,93,10)" fg:x="60462" fg:w="15"/><text x="88.7679%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="88.4969%" y="149" width="0.0102%" height="15" fill="rgb(225,113,19)" fg:x="60477" fg:w="7"/><text x="88.7899%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="88.5071%" y="149" width="0.1215%" height="15" fill="rgb(241,2,18)" fg:x="60484" fg:w="83"/><text x="88.8001%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="88.6286%" y="149" width="0.1332%" height="15" fill="rgb(228,207,21)" fg:x="60567" fg:w="91"/><text x="88.9216%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="88.7676%" y="149" width="0.5736%" height="15" fill="rgb(213,211,35)" fg:x="60662" fg:w="392"/><text x="89.0606%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.57%)</title><rect x="89.3412%" y="149" width="0.5736%" height="15" fill="rgb(209,83,10)" fg:x="61054" fg:w="392"/><text x="89.6342%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.74%)</title><rect x="89.9148%" y="149" width="0.7375%" height="15" fill="rgb(209,164,1)" fg:x="61446" fg:w="504"/><text x="90.2078%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,626 instructions, 9.70%)</title><rect x="82.4768%" y="165" width="9.6959%" height="15" fill="rgb(213,184,43)" fg:x="56363" fg:w="6626"/><text x="82.7698%" y="175.50">candid::de::..</text></g><g><title>memcpy (344 instructions, 0.50%)</title><rect x="92.1727%" y="165" width="0.5034%" height="15" fill="rgb(231,61,34)" fg:x="62989" fg:w="344"/><text x="92.4657%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.06%)</title><rect x="92.6761%" y="165" width="0.0629%" height="15" fill="rgb(235,75,3)" fg:x="63333" fg:w="43"/><text x="92.9691%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="92.7390%" y="149" width="0.0102%" height="15" fill="rgb(220,106,47)" fg:x="63376" fg:w="7"/><text x="93.0320%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="92.7493%" y="133" width="0.1302%" height="15" fill="rgb(210,196,33)" fg:x="63383" fg:w="89"/><text x="93.0422%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="92.9439%" y="133" width="0.0922%" height="15" fill="rgb(229,154,42)" fg:x="63516" fg:w="63"/><text x="93.2369%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 instructions, 0.35%)</title><rect x="92.7493%" y="149" width="0.3512%" height="15" fill="rgb(228,114,26)" fg:x="63383" fg:w="240"/><text x="93.0422%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (298 instructions, 0.44%)</title><rect x="92.7390%" y="165" width="0.4361%" height="15" fill="rgb(208,144,1)" fg:x="63376" fg:w="298"/><text x="93.0320%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="93.1751%" y="165" width="0.1302%" height="15" fill="rgb(239,112,37)" fg:x="63674" fg:w="89"/><text x="93.4681%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (143 instructions, 0.21%)</title><rect x="93.3053%" y="165" width="0.2093%" height="15" fill="rgb(210,96,50)" fg:x="63763" fg:w="143"/><text x="93.5983%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (41 instructions, 0.06%)</title><rect x="93.5146%" y="165" width="0.0600%" height="15" fill="rgb(222,178,2)" fg:x="63906" fg:w="41"/><text x="93.8076%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="93.5746%" y="165" width="0.0263%" height="15" fill="rgb(226,74,18)" fg:x="63947" fg:w="18"/><text x="93.8676%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,554 instructions, 12.52%)</title><rect x="82.4461%" y="181" width="12.5172%" height="15" fill="rgb(225,67,54)" fg:x="56342" fg:w="8554"/><text x="82.7390%" y="191.50">ic_cdk_timers::g..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="94.9633%" y="181" width="0.0205%" height="15" fill="rgb(251,92,32)" fg:x="64896" fg:w="14"/><text x="95.2562%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,680 instructions, 12.70%)</title><rect x="82.4461%" y="197" width="12.7016%" height="15" fill="rgb(228,149,22)" fg:x="56342" fg:w="8680"/><text x="82.7390%" y="207.50">ic_cdk::futures:..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="95.1476%" y="165" width="0.0102%" height="15" fill="rgb(243,54,13)" fg:x="65022" fg:w="7"/><text x="95.4406%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="95.1579%" y="165" width="0.1215%" height="15" fill="rgb(243,180,28)" fg:x="65029" fg:w="83"/><text x="95.4509%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="95.2793%" y="165" width="0.1302%" height="15" fill="rgb(208,167,24)" fg:x="65112" fg:w="89"/><text x="95.5723%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (239 instructions, 0.35%)</title><rect x="95.1476%" y="181" width="0.3497%" height="15" fill="rgb(245,73,45)" fg:x="65022" fg:w="239"/><text x="95.4406%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="95.4974%" y="165" width="0.1302%" height="15" fill="rgb(237,203,48)" fg:x="65261" fg:w="89"/><text x="95.7903%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 instructions, 0.20%)</title><rect x="95.4974%" y="181" width="0.1975%" height="15" fill="rgb(211,197,16)" fg:x="65261" fg:w="135"/><text x="95.7903%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="95.8413%" y="165" width="0.0395%" height="15" fill="rgb(243,99,51)" fg:x="65496" fg:w="27"/><text x="96.1342%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="95.8808%" y="165" width="0.0395%" height="15" fill="rgb(215,123,29)" fg:x="65523" fg:w="27"/><text x="96.1737%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.1295%" y="165" width="0.0395%" height="15" fill="rgb(239,186,37)" fg:x="65693" fg:w="27"/><text x="96.4225%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.1690%" y="165" width="0.0395%" height="15" fill="rgb(252,136,39)" fg:x="65720" fg:w="27"/><text x="96.4620%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (394 instructions, 0.58%)</title><rect x="95.8413%" y="181" width="0.5765%" height="15" fill="rgb(223,213,32)" fg:x="65496" fg:w="394"/><text x="96.1342%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (933 instructions, 1.37%)</title><rect x="95.1476%" y="197" width="1.3653%" height="15" fill="rgb(233,115,5)" fg:x="65022" fg:w="933"/><text x="95.4406%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,787 instructions, 14.32%)</title><rect x="82.4461%" y="213" width="14.3215%" height="15" fill="rgb(207,226,44)" fg:x="56342" fg:w="9787"/><text x="82.7390%" y="223.50">futures_task::wake..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="96.7675%" y="181" width="0.0337%" height="15" fill="rgb(208,126,0)" fg:x="66129" fg:w="23"/><text x="97.0605%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.9636%" y="181" width="0.0395%" height="15" fill="rgb(244,66,21)" fg:x="66263" fg:w="27"/><text x="97.2566%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="97.0031%" y="181" width="0.0337%" height="15" fill="rgb(222,97,12)" fg:x="66290" fg:w="23"/><text x="97.2961%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="97.0368%" y="181" width="0.0995%" height="15" fill="rgb(219,213,19)" fg:x="66313" fg:w="68"/><text x="97.3298%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (374 instructions, 0.55%)</title><rect x="96.7675%" y="197" width="0.5473%" height="15" fill="rgb(252,169,30)" fg:x="66129" fg:w="374"/><text x="97.0605%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (437 instructions, 0.64%)</title><rect x="96.7675%" y="213" width="0.6395%" height="15" fill="rgb(206,32,51)" fg:x="66129" fg:w="437"/><text x="97.0605%" y="223.50"></text></g><g><title>all (68,338 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(250,172,42)" fg:x="0" fg:w="68338"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (12,079 instructions, 17.68%)</title><rect x="82.3246%" y="229" width="17.6754%" height="15" fill="rgb(209,34,43)" fg:x="56259" fg:w="12079"/><text x="82.6176%" y="239.50">ic_cdk::api::call::call..</text></g></svg></svg>