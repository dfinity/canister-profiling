<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="68153"><g><title>ic_cdk::setup (58 instructions, 0.09%)</title><rect x="0.0000%" y="213" width="0.0851%" height="15" fill="rgb(218,133,21)" fg:x="0" fg:w="58"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (683 instructions, 1.00%)</title><rect x="0.0851%" y="213" width="1.0022%" height="15" fill="rgb(221,193,43)" fg:x="58" fg:w="683"/><text x="0.3781%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.0873%" y="213" width="0.1335%" height="15" fill="rgb(240,128,52)" fg:x="741" fg:w="91"/><text x="1.3802%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.2208%" y="197" width="0.1335%" height="15" fill="rgb(253,114,12)" fg:x="832" fg:w="91"/><text x="1.5138%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.08%)</title><rect x="1.3543%" y="165" width="0.0836%" height="15" fill="rgb(215,223,47)" fg:x="923" fg:w="57"/><text x="1.6473%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.23%)</title><rect x="1.3543%" y="181" width="0.2274%" height="15" fill="rgb(248,225,23)" fg:x="923" fg:w="155"/><text x="1.6473%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="1.5817%" y="181" width="0.6456%" height="15" fill="rgb(250,108,0)" fg:x="1078" fg:w="440"/><text x="1.8747%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="2.2273%" y="181" width="0.1394%" height="15" fill="rgb(228,208,7)" fg:x="1518" fg:w="95"/><text x="2.5203%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.3667%" y="181" width="0.0880%" height="15" fill="rgb(244,45,10)" fg:x="1613" fg:w="60"/><text x="2.6597%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.4548%" y="181" width="0.0880%" height="15" fill="rgb(207,125,25)" fg:x="1673" fg:w="60"/><text x="2.7477%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5428%" y="181" width="0.0880%" height="15" fill="rgb(210,195,18)" fg:x="1733" fg:w="60"/><text x="2.8358%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.6308%" y="181" width="0.0880%" height="15" fill="rgb(249,80,12)" fg:x="1793" fg:w="60"/><text x="2.9238%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="2.7189%" y="181" width="0.1203%" height="15" fill="rgb(221,65,9)" fg:x="1853" fg:w="82"/><text x="3.0119%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="2.8392%" y="181" width="0.1027%" height="15" fill="rgb(235,49,36)" fg:x="1935" fg:w="70"/><text x="3.1322%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="2.9419%" y="181" width="0.6456%" height="15" fill="rgb(225,32,20)" fg:x="2005" fg:w="440"/><text x="3.2349%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.5875%" y="181" width="0.0279%" height="15" fill="rgb(215,141,46)" fg:x="2445" fg:w="19"/><text x="3.8805%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="3.6154%" y="165" width="0.1335%" height="15" fill="rgb(250,160,47)" fg:x="2464" fg:w="91"/><text x="3.9084%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="3.7489%" y="133" width="0.0983%" height="15" fill="rgb(216,222,40)" fg:x="2555" fg:w="67"/><text x="4.0419%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="3.7489%" y="149" width="0.1438%" height="15" fill="rgb(234,217,39)" fg:x="2555" fg:w="98"/><text x="4.0419%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8927%" y="101" width="0.0161%" height="15" fill="rgb(207,178,40)" fg:x="2653" fg:w="11"/><text x="4.1857%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="3.9089%" y="85" width="0.0514%" height="15" fill="rgb(221,136,13)" fg:x="2664" fg:w="35"/><text x="4.2018%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="3.9089%" y="101" width="0.0968%" height="15" fill="rgb(249,199,10)" fg:x="2664" fg:w="66"/><text x="4.2018%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="3.8927%" y="117" width="0.2157%" height="15" fill="rgb(249,222,13)" fg:x="2653" fg:w="147"/><text x="4.1857%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="3.8927%" y="133" width="0.3111%" height="15" fill="rgb(244,185,38)" fg:x="2653" fg:w="212"/><text x="4.1857%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="3.8927%" y="149" width="0.3257%" height="15" fill="rgb(236,202,9)" fg:x="2653" fg:w="222"/><text x="4.1857%" y="159.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="3.7489%" y="165" width="0.6764%" height="15" fill="rgb(250,229,37)" fg:x="2555" fg:w="461"/><text x="4.0419%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="3.6154%" y="181" width="1.0227%" height="15" fill="rgb(206,174,23)" fg:x="2464" fg:w="697"/><text x="3.9084%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="4.6381%" y="181" width="0.1394%" height="15" fill="rgb(211,33,43)" fg:x="3161" fg:w="95"/><text x="4.9311%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="4.7775%" y="181" width="0.0924%" height="15" fill="rgb(245,58,50)" fg:x="3256" fg:w="63"/><text x="5.0705%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="4.8699%" y="181" width="0.1115%" height="15" fill="rgb(244,68,36)" fg:x="3319" fg:w="76"/><text x="5.1629%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="4.9814%" y="181" width="0.1027%" height="15" fill="rgb(232,229,15)" fg:x="3395" fg:w="70"/><text x="5.2744%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="5.0841%" y="165" width="0.6456%" height="15" fill="rgb(254,30,23)" fg:x="3465" fg:w="440"/><text x="5.3771%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.7298%" y="165" width="0.0279%" height="15" fill="rgb(235,160,14)" fg:x="3905" fg:w="19"/><text x="6.0227%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="5.7576%" y="149" width="0.1335%" height="15" fill="rgb(212,155,44)" fg:x="3924" fg:w="91"/><text x="6.0506%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.8912%" y="117" width="0.0983%" height="15" fill="rgb(226,2,50)" fg:x="4015" fg:w="67"/><text x="6.1841%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="5.8912%" y="133" width="0.1438%" height="15" fill="rgb(234,177,6)" fg:x="4015" fg:w="98"/><text x="6.1841%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.0350%" y="85" width="0.0161%" height="15" fill="rgb(217,24,9)" fg:x="4113" fg:w="11"/><text x="6.3279%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="6.0511%" y="69" width="0.0514%" height="15" fill="rgb(220,13,46)" fg:x="4124" fg:w="35"/><text x="6.3441%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="6.0511%" y="85" width="0.0968%" height="15" fill="rgb(239,221,27)" fg:x="4124" fg:w="66"/><text x="6.3441%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="6.0350%" y="101" width="0.2157%" height="15" fill="rgb(222,198,25)" fg:x="4113" fg:w="147"/><text x="6.3279%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="6.0350%" y="117" width="0.3111%" height="15" fill="rgb(211,99,13)" fg:x="4113" fg:w="212"/><text x="6.3279%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="6.0350%" y="133" width="0.3257%" height="15" fill="rgb(232,111,31)" fg:x="4113" fg:w="222"/><text x="6.3279%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="5.8912%" y="149" width="0.6764%" height="15" fill="rgb(245,82,37)" fg:x="4015" fg:w="461"/><text x="6.1841%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="5.7576%" y="165" width="1.0227%" height="15" fill="rgb(227,149,46)" fg:x="3924" fg:w="697"/><text x="6.0506%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="6.7803%" y="165" width="0.1394%" height="15" fill="rgb(218,36,50)" fg:x="4621" fg:w="95"/><text x="7.0733%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="6.9197%" y="165" width="0.0924%" height="15" fill="rgb(226,80,48)" fg:x="4716" fg:w="63"/><text x="7.2127%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="7.0122%" y="149" width="0.1203%" height="15" fill="rgb(238,224,15)" fg:x="4779" fg:w="82"/><text x="7.3051%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.1325%" y="149" width="0.1394%" height="15" fill="rgb(241,136,10)" fg:x="4861" fg:w="95"/><text x="7.4255%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.2719%" y="149" width="0.1115%" height="15" fill="rgb(208,32,45)" fg:x="4956" fg:w="76"/><text x="7.5648%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="7.0122%" y="165" width="0.4842%" height="15" fill="rgb(207,135,9)" fg:x="4779" fg:w="330"/><text x="7.3051%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="7.4964%" y="165" width="0.1335%" height="15" fill="rgb(206,86,44)" fg:x="5109" fg:w="91"/><text x="7.7893%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,980 instructions, 2.91%)</title><rect x="5.0841%" y="181" width="2.9052%" height="15" fill="rgb(245,177,15)" fg:x="3465" fg:w="1980"/><text x="5.3771%" y="191.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.9894%" y="181" width="0.1115%" height="15" fill="rgb(206,64,50)" fg:x="5445" fg:w="76"/><text x="8.2823%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.1009%" y="181" width="0.0220%" height="15" fill="rgb(234,36,40)" fg:x="5521" fg:w="15"/><text x="8.3939%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.1229%" y="181" width="0.0220%" height="15" fill="rgb(213,64,8)" fg:x="5536" fg:w="15"/><text x="8.4159%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="8.1449%" y="181" width="0.0132%" height="15" fill="rgb(210,75,36)" fg:x="5551" fg:w="9"/><text x="8.4379%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="8.1581%" y="181" width="0.0264%" height="15" fill="rgb(229,88,21)" fg:x="5560" fg:w="18"/><text x="8.4511%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.1845%" y="165" width="0.1335%" height="15" fill="rgb(252,204,47)" fg:x="5578" fg:w="91"/><text x="8.4775%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="8.1845%" y="181" width="0.2744%" height="15" fill="rgb(208,77,27)" fg:x="5578" fg:w="187"/><text x="8.4775%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.4589%" y="149" width="0.1335%" height="15" fill="rgb(221,76,26)" fg:x="5765" fg:w="91"/><text x="8.7519%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="8.4589%" y="165" width="0.1966%" height="15" fill="rgb(225,139,18)" fg:x="5765" fg:w="134"/><text x="8.7519%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.32%)</title><rect x="8.4589%" y="181" width="0.3169%" height="15" fill="rgb(230,137,11)" fg:x="5765" fg:w="216"/><text x="8.7519%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.7758%" y="181" width="0.1335%" height="15" fill="rgb(212,28,1)" fg:x="5981" fg:w="91"/><text x="9.0688%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="8.9094%" y="181" width="0.1262%" height="15" fill="rgb(248,164,17)" fg:x="6072" fg:w="86"/><text x="9.2023%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.0356%" y="181" width="0.1335%" height="15" fill="rgb(222,171,42)" fg:x="6158" fg:w="91"/><text x="9.3285%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.1691%" y="181" width="0.1335%" height="15" fill="rgb(243,84,45)" fg:x="6249" fg:w="91"/><text x="9.4620%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="9.3085%" y="181" width="0.1262%" height="15" fill="rgb(252,49,23)" fg:x="6344" fg:w="86"/><text x="9.6014%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="9.4347%" y="181" width="0.6280%" height="15" fill="rgb(215,19,7)" fg:x="6430" fg:w="428"/><text x="9.7276%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="10.0627%" y="181" width="0.6280%" height="15" fill="rgb(238,81,41)" fg:x="6858" fg:w="428"/><text x="10.3556%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,518 instructions, 11.03%)</title><rect x="1.3543%" y="197" width="11.0311%" height="15" fill="rgb(210,199,37)" fg:x="923" fg:w="7518"/><text x="1.6473%" y="207.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="12.3854%" y="197" width="0.5576%" height="15" fill="rgb(244,192,49)" fg:x="8441" fg:w="380"/><text x="12.6783%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (51 instructions, 0.07%)</title><rect x="12.9429%" y="181" width="0.0748%" height="15" fill="rgb(226,211,11)" fg:x="8821" fg:w="51"/><text x="13.2359%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (100 instructions, 0.15%)</title><rect x="12.9429%" y="197" width="0.1467%" height="15" fill="rgb(236,162,54)" fg:x="8821" fg:w="100"/><text x="13.2359%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="13.0897%" y="197" width="0.1335%" height="15" fill="rgb(220,229,9)" fg:x="8921" fg:w="91"/><text x="13.3826%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="13.2232%" y="181" width="0.0205%" height="15" fill="rgb(250,87,22)" fg:x="9012" fg:w="14"/><text x="13.5162%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="13.2437%" y="165" width="0.0866%" height="15" fill="rgb(239,43,17)" fg:x="9026" fg:w="59"/><text x="13.5367%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="13.3303%" y="165" width="0.1379%" height="15" fill="rgb(231,177,25)" fg:x="9085" fg:w="94"/><text x="13.6233%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="13.4682%" y="165" width="0.2538%" height="15" fill="rgb(219,179,1)" fg:x="9179" fg:w="173"/><text x="13.7612%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="13.2437%" y="181" width="0.8496%" height="15" fill="rgb(238,219,53)" fg:x="9026" fg:w="579"/><text x="13.5367%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="14.0933%" y="181" width="0.1335%" height="15" fill="rgb(232,167,36)" fg:x="9605" fg:w="91"/><text x="14.3863%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="14.2268%" y="181" width="0.2230%" height="15" fill="rgb(244,19,51)" fg:x="9696" fg:w="152"/><text x="14.5198%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,233 instructions, 1.81%)</title><rect x="13.2232%" y="197" width="1.8092%" height="15" fill="rgb(224,6,22)" fg:x="9012" fg:w="1233"/><text x="13.5162%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.0324%" y="197" width="0.1335%" height="15" fill="rgb(224,145,5)" fg:x="10245" fg:w="91"/><text x="15.3253%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="15.1659%" y="181" width="0.0205%" height="15" fill="rgb(234,130,49)" fg:x="10336" fg:w="14"/><text x="15.4588%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="15.1864%" y="165" width="0.0866%" height="15" fill="rgb(254,6,2)" fg:x="10350" fg:w="59"/><text x="15.4794%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="15.2730%" y="165" width="0.1379%" height="15" fill="rgb(208,96,46)" fg:x="10409" fg:w="94"/><text x="15.5660%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="15.4109%" y="165" width="0.2538%" height="15" fill="rgb(239,3,39)" fg:x="10503" fg:w="173"/><text x="15.7039%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="15.1864%" y="181" width="0.8496%" height="15" fill="rgb(233,210,1)" fg:x="10350" fg:w="579"/><text x="15.4794%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="16.0360%" y="181" width="0.1130%" height="15" fill="rgb(244,137,37)" fg:x="10929" fg:w="77"/><text x="16.3289%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="16.1490%" y="165" width="0.1262%" height="15" fill="rgb(240,136,2)" fg:x="11006" fg:w="86"/><text x="16.4419%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="16.1490%" y="181" width="0.1775%" height="15" fill="rgb(239,18,37)" fg:x="11006" fg:w="121"/><text x="16.4419%" y="191.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 1.45%)</title><rect x="15.1659%" y="197" width="1.4467%" height="15" fill="rgb(218,185,22)" fg:x="10336" fg:w="986"/><text x="15.4588%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="16.6126%" y="149" width="0.0866%" height="15" fill="rgb(225,218,4)" fg:x="11322" fg:w="59"/><text x="16.9056%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="16.6126%" y="165" width="0.1379%" height="15" fill="rgb(230,182,32)" fg:x="11322" fg:w="94"/><text x="16.9056%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="16.6126%" y="181" width="0.4622%" height="15" fill="rgb(242,56,43)" fg:x="11322" fg:w="315"/><text x="16.9056%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="17.0748%" y="181" width="0.1335%" height="15" fill="rgb(233,99,24)" fg:x="11637" fg:w="91"/><text x="17.3678%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="17.2083%" y="181" width="0.2230%" height="15" fill="rgb(234,209,42)" fg:x="11728" fg:w="152"/><text x="17.5013%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,017 instructions, 1.49%)</title><rect x="16.6126%" y="197" width="1.4922%" height="15" fill="rgb(227,7,12)" fg:x="11322" fg:w="1017"/><text x="16.9056%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="18.1049%" y="197" width="0.0778%" height="15" fill="rgb(245,203,43)" fg:x="12339" fg:w="53"/><text x="18.3978%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="18.1826%" y="181" width="0.1937%" height="15" fill="rgb(238,205,33)" fg:x="12392" fg:w="132"/><text x="18.4756%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="18.4277%" y="181" width="0.1937%" height="15" fill="rgb(231,56,7)" fg:x="12559" fg:w="132"/><text x="18.7206%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.49%)</title><rect x="18.1826%" y="197" width="0.4901%" height="15" fill="rgb(244,186,29)" fg:x="12392" fg:w="334"/><text x="18.4756%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="18.6727%" y="181" width="0.0499%" height="15" fill="rgb(234,111,31)" fg:x="12726" fg:w="34"/><text x="18.9657%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="18.6727%" y="197" width="0.1775%" height="15" fill="rgb(241,149,10)" fg:x="12726" fg:w="121"/><text x="18.9657%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8502%" y="197" width="0.0191%" height="15" fill="rgb(249,206,44)" fg:x="12847" fg:w="13"/><text x="19.1432%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8693%" y="197" width="0.0191%" height="15" fill="rgb(251,153,30)" fg:x="12860" fg:w="13"/><text x="19.1623%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8884%" y="197" width="0.0191%" height="15" fill="rgb(239,152,38)" fg:x="12873" fg:w="13"/><text x="19.1814%" y="207.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="18.9075%" y="197" width="0.6456%" height="15" fill="rgb(249,139,47)" fg:x="12886" fg:w="440"/><text x="19.2004%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="19.5531%" y="165" width="0.0279%" height="15" fill="rgb(244,64,35)" fg:x="13326" fg:w="19"/><text x="19.8460%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.27%)</title><rect x="19.5809%" y="165" width="0.2656%" height="15" fill="rgb(216,46,15)" fg:x="13345" fg:w="181"/><text x="19.8739%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="19.8465%" y="133" width="0.0983%" height="15" fill="rgb(250,74,19)" fg:x="13526" fg:w="67"/><text x="20.1395%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.34%)</title><rect x="19.8465%" y="149" width="0.3375%" height="15" fill="rgb(249,42,33)" fg:x="13526" fg:w="230"/><text x="20.1395%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (265 instructions, 0.39%)</title><rect x="19.8465%" y="165" width="0.3888%" height="15" fill="rgb(242,149,17)" fg:x="13526" fg:w="265"/><text x="20.1395%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="20.2354%" y="165" width="0.0191%" height="15" fill="rgb(244,29,21)" fg:x="13791" fg:w="13"/><text x="20.5283%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (540 instructions, 0.79%)</title><rect x="19.5531%" y="181" width="0.7923%" height="15" fill="rgb(220,130,37)" fg:x="13326" fg:w="540"/><text x="19.8460%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (589 instructions, 0.86%)</title><rect x="19.5531%" y="197" width="0.8642%" height="15" fill="rgb(211,67,2)" fg:x="13326" fg:w="589"/><text x="19.8460%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="20.4173%" y="181" width="0.0910%" height="15" fill="rgb(235,68,52)" fg:x="13915" fg:w="62"/><text x="20.7103%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="20.5083%" y="181" width="0.0983%" height="15" fill="rgb(246,142,3)" fg:x="13977" fg:w="67"/><text x="20.8012%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.33%)</title><rect x="20.4173%" y="197" width="0.3345%" height="15" fill="rgb(241,25,7)" fg:x="13915" fg:w="228"/><text x="20.7103%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="20.7518%" y="181" width="0.0910%" height="15" fill="rgb(242,119,39)" fg:x="14143" fg:w="62"/><text x="21.0448%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.27%)</title><rect x="20.7518%" y="197" width="0.2670%" height="15" fill="rgb(241,98,45)" fg:x="14143" fg:w="182"/><text x="21.0448%" y="207.50"></text></g><g><title>__rust_realloc (110 instructions, 0.16%)</title><rect x="21.0189%" y="165" width="0.1614%" height="15" fill="rgb(254,28,30)" fg:x="14325" fg:w="110"/><text x="21.3119%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.23%)</title><rect x="21.0189%" y="181" width="0.2274%" height="15" fill="rgb(241,142,54)" fg:x="14325" fg:w="155"/><text x="21.3119%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="21.3828%" y="165" width="0.1218%" height="15" fill="rgb(222,85,15)" fg:x="14573" fg:w="83"/><text x="21.6757%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="21.3828%" y="181" width="0.1849%" height="15" fill="rgb(210,85,47)" fg:x="14573" fg:w="126"/><text x="21.6757%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (456 instructions, 0.67%)</title><rect x="21.0189%" y="197" width="0.6691%" height="15" fill="rgb(224,206,25)" fg:x="14325" fg:w="456"/><text x="21.3119%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (591 instructions, 0.87%)</title><rect x="21.6880%" y="197" width="0.8672%" height="15" fill="rgb(243,201,19)" fg:x="14781" fg:w="591"/><text x="21.9809%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="22.5551%" y="165" width="0.0205%" height="15" fill="rgb(236,59,4)" fg:x="15372" fg:w="14"/><text x="22.8481%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="22.5757%" y="165" width="0.0191%" height="15" fill="rgb(254,179,45)" fg:x="15386" fg:w="13"/><text x="22.8686%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="22.5948%" y="165" width="0.2230%" height="15" fill="rgb(226,14,10)" fg:x="15399" fg:w="152"/><text x="22.8877%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (359 instructions, 0.53%)</title><rect x="22.5551%" y="181" width="0.5268%" height="15" fill="rgb(244,27,41)" fg:x="15372" fg:w="359"/><text x="22.8481%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="23.0819%" y="181" width="0.7601%" height="15" fill="rgb(235,35,32)" fg:x="15731" fg:w="518"/><text x="23.3749%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="23.8419%" y="133" width="0.1218%" height="15" fill="rgb(218,68,31)" fg:x="16249" fg:w="83"/><text x="24.1349%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="23.8419%" y="149" width="0.1849%" height="15" fill="rgb(207,120,37)" fg:x="16249" fg:w="126"/><text x="24.1349%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="23.8419%" y="165" width="0.3008%" height="15" fill="rgb(227,98,0)" fg:x="16249" fg:w="205"/><text x="24.1349%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1427%" y="165" width="0.0220%" height="15" fill="rgb(207,7,3)" fg:x="16454" fg:w="15"/><text x="24.4357%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1647%" y="165" width="0.0220%" height="15" fill="rgb(206,98,19)" fg:x="16469" fg:w="15"/><text x="24.4577%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (423 instructions, 0.62%)</title><rect x="23.8419%" y="181" width="0.6207%" height="15" fill="rgb(217,5,26)" fg:x="16249" fg:w="423"/><text x="24.1349%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="24.4626%" y="181" width="0.7571%" height="15" fill="rgb(235,190,38)" fg:x="16672" fg:w="516"/><text x="24.7556%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="25.2197%" y="181" width="0.0103%" height="15" fill="rgb(247,86,24)" fg:x="17188" fg:w="7"/><text x="25.5127%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="25.2300%" y="165" width="0.0103%" height="15" fill="rgb(205,101,16)" fg:x="17195" fg:w="7"/><text x="25.5230%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="25.2403%" y="165" width="0.0880%" height="15" fill="rgb(246,168,33)" fg:x="17202" fg:w="60"/><text x="25.5332%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (133 instructions, 0.20%)</title><rect x="25.2300%" y="181" width="0.1951%" height="15" fill="rgb(231,114,1)" fg:x="17195" fg:w="133"/><text x="25.5230%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,564 instructions, 3.76%)</title><rect x="22.5551%" y="197" width="3.7621%" height="15" fill="rgb(207,184,53)" fg:x="15372" fg:w="2564"/><text x="22.8481%" y="207.50">ic_..</text></g><g><title>timer::__canister_method_setTimer::{{closure}} (19,384 instructions, 28.44%)</title><rect x="1.2208%" y="213" width="28.4419%" height="15" fill="rgb(224,95,51)" fg:x="832" fg:w="19384"/><text x="1.5138%" y="223.50">timer::__canister_method_setTimer::{{cl..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="29.6627%" y="213" width="0.0205%" height="15" fill="rgb(212,188,45)" fg:x="20216" fg:w="14"/><text x="29.9556%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="29.6847%" y="213" width="0.1262%" height="15" fill="rgb(223,154,38)" fg:x="20231" fg:w="86"/><text x="29.9776%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="29.8109%" y="213" width="0.1981%" height="15" fill="rgb(251,22,52)" fg:x="20317" fg:w="135"/><text x="30.1038%" y="223.50"></text></g><g><title>canister_update setTimer (20,596 instructions, 30.22%)</title><rect x="0.0000%" y="229" width="30.2202%" height="15" fill="rgb(229,209,22)" fg:x="0" fg:w="20596"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="30.2202%" y="213" width="0.0352%" height="15" fill="rgb(234,138,34)" fg:x="20596" fg:w="24"/><text x="30.5132%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="30.2555%" y="213" width="0.1203%" height="15" fill="rgb(212,95,11)" fg:x="20620" fg:w="82"/><text x="30.5484%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.3758%" y="213" width="0.1218%" height="15" fill="rgb(240,179,47)" fg:x="20702" fg:w="83"/><text x="30.6687%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.4976%" y="197" width="0.1335%" height="15" fill="rgb(240,163,11)" fg:x="20785" fg:w="91"/><text x="30.7905%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.6311%" y="197" width="0.1218%" height="15" fill="rgb(236,37,12)" fg:x="20876" fg:w="83"/><text x="30.9240%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.7529%" y="197" width="0.1335%" height="15" fill="rgb(232,164,16)" fg:x="20959" fg:w="91"/><text x="31.0458%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="30.8864%" y="197" width="0.0308%" height="15" fill="rgb(244,205,15)" fg:x="21050" fg:w="21"/><text x="31.1794%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.9172%" y="181" width="0.1218%" height="15" fill="rgb(223,117,47)" fg:x="21071" fg:w="83"/><text x="31.2102%" y="191.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="31.0390%" y="181" width="0.1907%" height="15" fill="rgb(244,107,35)" fg:x="21154" fg:w="130"/><text x="31.3320%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="31.2297%" y="181" width="0.2626%" height="15" fill="rgb(205,140,8)" fg:x="21284" fg:w="179"/><text x="31.5227%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="31.4924%" y="181" width="0.0880%" height="15" fill="rgb(228,84,46)" fg:x="21463" fg:w="60"/><text x="31.7853%" y="191.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.34%)</title><rect x="30.9172%" y="197" width="2.3359%" height="15" fill="rgb(254,188,9)" fg:x="21071" fg:w="1592"/><text x="31.2102%" y="207.50">i..</text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.2531%" y="181" width="0.0205%" height="15" fill="rgb(206,112,54)" fg:x="22663" fg:w="14"/><text x="33.5461%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (107 instructions, 0.16%)</title><rect x="33.2531%" y="197" width="0.1570%" height="15" fill="rgb(216,84,49)" fg:x="22663" fg:w="107"/><text x="33.5461%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.4101%" y="165" width="0.0205%" height="15" fill="rgb(214,194,35)" fg:x="22770" fg:w="14"/><text x="33.7031%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.09%)</title><rect x="33.4101%" y="181" width="0.0924%" height="15" fill="rgb(249,28,3)" fg:x="22770" fg:w="63"/><text x="33.7031%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="33.5026%" y="181" width="0.1335%" height="15" fill="rgb(222,56,52)" fg:x="22833" fg:w="91"/><text x="33.7955%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.6361%" y="165" width="0.0205%" height="15" fill="rgb(245,217,50)" fg:x="22924" fg:w="14"/><text x="33.9291%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.6566%" y="149" width="0.0866%" height="15" fill="rgb(213,201,24)" fg:x="22938" fg:w="59"/><text x="33.9496%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="33.7432%" y="149" width="0.1379%" height="15" fill="rgb(248,116,28)" fg:x="22997" fg:w="94"/><text x="34.0362%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="33.8811%" y="149" width="0.2538%" height="15" fill="rgb(219,72,43)" fg:x="23091" fg:w="173"/><text x="34.1741%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="33.6566%" y="165" width="0.8496%" height="15" fill="rgb(209,138,14)" fg:x="22938" fg:w="579"/><text x="33.9496%" y="175.50"></text></g><g><title>candid::types::internal::env_add (821 instructions, 1.20%)</title><rect x="33.6361%" y="181" width="1.2046%" height="15" fill="rgb(222,18,33)" fg:x="22924" fg:w="821"/><text x="33.9291%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="34.8407%" y="181" width="0.1335%" height="15" fill="rgb(213,199,7)" fg:x="23745" fg:w="91"/><text x="35.1337%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="34.9742%" y="165" width="0.0205%" height="15" fill="rgb(250,110,10)" fg:x="23836" fg:w="14"/><text x="35.2672%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="34.9948%" y="149" width="0.0866%" height="15" fill="rgb(248,123,6)" fg:x="23850" fg:w="59"/><text x="35.2878%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="35.0814%" y="149" width="0.1379%" height="15" fill="rgb(206,91,31)" fg:x="23909" fg:w="94"/><text x="35.3743%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="35.2193%" y="149" width="0.2538%" height="15" fill="rgb(211,154,13)" fg:x="24003" fg:w="173"/><text x="35.5123%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="34.9948%" y="165" width="0.8496%" height="15" fill="rgb(225,148,7)" fg:x="23850" fg:w="579"/><text x="35.2878%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="35.8444%" y="165" width="0.1130%" height="15" fill="rgb(220,160,43)" fg:x="24429" fg:w="77"/><text x="36.1373%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="35.9573%" y="149" width="0.1262%" height="15" fill="rgb(213,52,39)" fg:x="24506" fg:w="86"/><text x="36.2503%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="35.9573%" y="165" width="0.1775%" height="15" fill="rgb(243,137,7)" fg:x="24506" fg:w="121"/><text x="36.2503%" y="175.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 1.45%)</title><rect x="34.9742%" y="181" width="1.4467%" height="15" fill="rgb(230,79,13)" fg:x="23836" fg:w="986"/><text x="35.2672%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="36.4210%" y="133" width="0.0866%" height="15" fill="rgb(247,105,23)" fg:x="24822" fg:w="59"/><text x="36.7140%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="36.4210%" y="149" width="0.1379%" height="15" fill="rgb(223,179,41)" fg:x="24822" fg:w="94"/><text x="36.7140%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="36.4210%" y="165" width="0.4622%" height="15" fill="rgb(218,9,34)" fg:x="24822" fg:w="315"/><text x="36.7140%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.328 (18 instructions, 0.03%)</title><rect x="36.8832%" y="165" width="0.0264%" height="15" fill="rgb(222,106,8)" fg:x="25137" fg:w="18"/><text x="37.1762%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.9096%" y="165" width="0.0191%" height="15" fill="rgb(211,220,0)" fg:x="25155" fg:w="13"/><text x="37.2026%" y="175.50"></text></g><g><title>candid::types::internal::env_id (551 instructions, 0.81%)</title><rect x="36.4210%" y="181" width="0.8085%" height="15" fill="rgb(229,52,16)" fg:x="24822" fg:w="551"/><text x="36.7140%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,732 instructions, 4.01%)</title><rect x="33.4101%" y="197" width="4.0086%" height="15" fill="rgb(212,155,18)" fg:x="22770" fg:w="2732"/><text x="33.7031%" y="207.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="37.4187%" y="165" width="0.1218%" height="15" fill="rgb(242,21,14)" fg:x="25502" fg:w="83"/><text x="37.7117%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="37.4187%" y="181" width="0.1849%" height="15" fill="rgb(222,19,48)" fg:x="25502" fg:w="126"/><text x="37.7117%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.31%)</title><rect x="37.4187%" y="197" width="0.3052%" height="15" fill="rgb(232,45,27)" fg:x="25502" fg:w="208"/><text x="37.7117%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.03%)</title><rect x="37.7239%" y="181" width="0.0337%" height="15" fill="rgb(249,103,42)" fg:x="25710" fg:w="23"/><text x="38.0169%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.7577%" y="181" width="0.0191%" height="15" fill="rgb(246,81,33)" fg:x="25733" fg:w="13"/><text x="38.0507%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (105 instructions, 0.15%)</title><rect x="37.7239%" y="197" width="0.1541%" height="15" fill="rgb(252,33,42)" fg:x="25710" fg:w="105"/><text x="38.0169%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.8780%" y="197" width="0.0191%" height="15" fill="rgb(209,212,41)" fg:x="25815" fg:w="13"/><text x="38.1710%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="37.8971%" y="165" width="0.1130%" height="15" fill="rgb(207,154,6)" fg:x="25828" fg:w="77"/><text x="38.1901%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.18%)</title><rect x="37.8971%" y="181" width="0.1761%" height="15" fill="rgb(223,64,47)" fg:x="25828" fg:w="120"/><text x="38.1901%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="38.1891%" y="165" width="0.1775%" height="15" fill="rgb(211,161,38)" fg:x="26027" fg:w="121"/><text x="38.4820%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.24%)</title><rect x="38.1891%" y="181" width="0.2406%" height="15" fill="rgb(219,138,40)" fg:x="26027" fg:w="164"/><text x="38.4820%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (442 instructions, 0.65%)</title><rect x="37.8971%" y="197" width="0.6485%" height="15" fill="rgb(241,228,46)" fg:x="25828" fg:w="442"/><text x="38.1901%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="38.5456%" y="149" width="0.1218%" height="15" fill="rgb(223,209,38)" fg:x="26270" fg:w="83"/><text x="38.8386%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="38.5456%" y="165" width="0.1849%" height="15" fill="rgb(236,164,45)" fg:x="26270" fg:w="126"/><text x="38.8386%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="38.5456%" y="181" width="0.3008%" height="15" fill="rgb(231,15,5)" fg:x="26270" fg:w="205"/><text x="38.8386%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="38.8464%" y="181" width="0.0220%" height="15" fill="rgb(252,35,15)" fg:x="26475" fg:w="15"/><text x="39.1394%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="38.8684%" y="133" width="0.1130%" height="15" fill="rgb(248,181,18)" fg:x="26490" fg:w="77"/><text x="39.1614%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.18%)</title><rect x="38.8684%" y="149" width="0.1761%" height="15" fill="rgb(233,39,42)" fg:x="26490" fg:w="120"/><text x="39.1614%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (199 instructions, 0.29%)</title><rect x="38.8684%" y="165" width="0.2920%" height="15" fill="rgb(238,110,33)" fg:x="26490" fg:w="199"/><text x="39.1614%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (270 instructions, 0.40%)</title><rect x="38.8684%" y="181" width="0.3962%" height="15" fill="rgb(233,195,10)" fg:x="26490" fg:w="270"/><text x="39.1614%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="39.2646%" y="181" width="0.0514%" height="15" fill="rgb(254,105,3)" fg:x="26760" fg:w="35"/><text x="39.5576%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="39.3160%" y="181" width="0.1262%" height="15" fill="rgb(221,225,9)" fg:x="26795" fg:w="86"/><text x="39.6089%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (853 instructions, 1.25%)</title><rect x="38.5456%" y="197" width="1.2516%" height="15" fill="rgb(224,227,45)" fg:x="26270" fg:w="853"/><text x="38.8386%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="39.7972%" y="197" width="0.0983%" height="15" fill="rgb(229,198,43)" fg:x="27123" fg:w="67"/><text x="40.0902%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="39.8955%" y="149" width="0.1203%" height="15" fill="rgb(206,209,35)" fg:x="27190" fg:w="82"/><text x="40.1885%" y="159.50"></text></g><g><title>memcpy (211 instructions, 0.31%)</title><rect x="40.0158%" y="149" width="0.3096%" height="15" fill="rgb(245,195,53)" fg:x="27272" fg:w="211"/><text x="40.3088%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="40.3254%" y="149" width="0.1262%" height="15" fill="rgb(240,92,26)" fg:x="27483" fg:w="86"/><text x="40.6184%" y="159.50"></text></g><g><title>__rust_realloc (485 instructions, 0.71%)</title><rect x="39.8955%" y="165" width="0.7116%" height="15" fill="rgb(207,40,23)" fg:x="27190" fg:w="485"/><text x="40.1885%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (530 instructions, 0.78%)</title><rect x="39.8955%" y="181" width="0.7777%" height="15" fill="rgb(223,111,35)" fg:x="27190" fg:w="530"/><text x="40.1885%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (618 instructions, 0.91%)</title><rect x="39.8955%" y="197" width="0.9068%" height="15" fill="rgb(229,147,28)" fg:x="27190" fg:w="618"/><text x="40.1885%" y="207.50"></text></g><g><title>memcpy (147 instructions, 0.22%)</title><rect x="40.8023%" y="197" width="0.2157%" height="15" fill="rgb(211,29,28)" fg:x="27808" fg:w="147"/><text x="41.0953%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="41.0268%" y="181" width="0.0191%" height="15" fill="rgb(228,72,33)" fg:x="27961" fg:w="13"/><text x="41.3198%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="41.0459%" y="181" width="0.1262%" height="15" fill="rgb(205,214,31)" fg:x="27974" fg:w="86"/><text x="41.3389%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="41.1721%" y="181" width="0.1981%" height="15" fill="rgb(224,111,15)" fg:x="28060" fg:w="135"/><text x="41.4650%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="41.3702%" y="181" width="0.1981%" height="15" fill="rgb(253,21,26)" fg:x="28195" fg:w="135"/><text x="41.6631%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (472 instructions, 0.69%)</title><rect x="41.0180%" y="197" width="0.6926%" height="15" fill="rgb(245,139,43)" fg:x="27955" fg:w="472"/><text x="41.3110%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="41.7106%" y="197" width="0.1203%" height="15" fill="rgb(252,170,7)" fg:x="28427" fg:w="82"/><text x="42.0035%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="41.8309%" y="197" width="0.1335%" height="15" fill="rgb(231,118,14)" fg:x="28509" fg:w="91"/><text x="42.1238%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="41.9644%" y="197" width="0.0323%" height="15" fill="rgb(238,83,0)" fg:x="28600" fg:w="22"/><text x="42.2574%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (62 instructions, 0.09%)</title><rect x="41.9967%" y="181" width="0.0910%" height="15" fill="rgb(221,39,39)" fg:x="28622" fg:w="62"/><text x="42.2897%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (83 instructions, 0.12%)</title><rect x="41.9967%" y="197" width="0.1218%" height="15" fill="rgb(222,119,46)" fg:x="28622" fg:w="83"/><text x="42.2897%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.03%)</title><rect x="42.1185%" y="197" width="0.0337%" height="15" fill="rgb(222,165,49)" fg:x="28705" fg:w="23"/><text x="42.4114%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (17,423 instructions, 25.56%)</title><rect x="30.4976%" y="213" width="25.5645%" height="15" fill="rgb(219,113,52)" fg:x="20785" fg:w="17423"/><text x="30.7905%" y="223.50">ic_cdk_timers::global_timer::{{clo..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="56.0621%" y="213" width="0.0205%" height="15" fill="rgb(214,7,15)" fg:x="38208" fg:w="14"/><text x="56.3551%" y="223.50"></text></g><g><title>canister_global_timer (17,746 instructions, 26.04%)</title><rect x="30.2202%" y="229" width="26.0385%" height="15" fill="rgb(235,32,4)" fg:x="20596" fg:w="17746"/><text x="30.5132%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="56.2587%" y="213" width="0.1775%" height="15" fill="rgb(238,90,54)" fg:x="38342" fg:w="121"/><text x="56.5517%" y="223.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="56.4363%" y="213" width="0.1907%" height="15" fill="rgb(213,208,19)" fg:x="38463" fg:w="130"/><text x="56.7292%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="56.6270%" y="213" width="0.2626%" height="15" fill="rgb(233,156,4)" fg:x="38593" fg:w="179"/><text x="56.9200%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="56.8896%" y="213" width="0.0880%" height="15" fill="rgb(207,194,5)" fg:x="38772" fg:w="60"/><text x="57.1826%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="56.9777%" y="197" width="0.1218%" height="15" fill="rgb(206,111,30)" fg:x="38832" fg:w="83"/><text x="57.2707%" y="207.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="57.0995%" y="197" width="0.1907%" height="15" fill="rgb(243,70,54)" fg:x="38915" fg:w="130"/><text x="57.3924%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="57.2902%" y="197" width="0.2626%" height="15" fill="rgb(242,28,8)" fg:x="39045" fg:w="179"/><text x="57.5832%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="57.5529%" y="197" width="0.0880%" height="15" fill="rgb(219,106,18)" fg:x="39224" fg:w="60"/><text x="57.8458%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.34%)</title><rect x="56.9777%" y="213" width="2.3359%" height="15" fill="rgb(244,222,10)" fg:x="38832" fg:w="1592"/><text x="57.2707%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 0.99%)</title><rect x="59.3136%" y="213" width="0.9904%" height="15" fill="rgb(236,179,52)" fg:x="40424" fg:w="675"/><text x="59.6066%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="60.3040%" y="213" width="0.1130%" height="15" fill="rgb(213,23,39)" fg:x="41099" fg:w="77"/><text x="60.5970%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="60.4170%" y="197" width="0.1203%" height="15" fill="rgb(238,48,10)" fg:x="41176" fg:w="82"/><text x="60.7100%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="60.5373%" y="197" width="0.6456%" height="15" fill="rgb(251,196,23)" fg:x="41258" fg:w="440"/><text x="60.8303%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="61.1829%" y="197" width="0.1394%" height="15" fill="rgb(250,152,24)" fg:x="41698" fg:w="95"/><text x="61.4759%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.3223%" y="197" width="0.0880%" height="15" fill="rgb(209,150,17)" fg:x="41793" fg:w="60"/><text x="61.6153%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.4104%" y="197" width="0.0880%" height="15" fill="rgb(234,202,34)" fg:x="41853" fg:w="60"/><text x="61.7033%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.4984%" y="197" width="0.0880%" height="15" fill="rgb(253,148,53)" fg:x="41913" fg:w="60"/><text x="61.7914%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.5864%" y="197" width="0.0880%" height="15" fill="rgb(218,129,16)" fg:x="41973" fg:w="60"/><text x="61.8794%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="61.6745%" y="197" width="0.1203%" height="15" fill="rgb(216,85,19)" fg:x="42033" fg:w="82"/><text x="61.9674%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="61.7948%" y="197" width="0.1027%" height="15" fill="rgb(235,228,7)" fg:x="42115" fg:w="70"/><text x="62.0878%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="61.8975%" y="197" width="0.6456%" height="15" fill="rgb(245,175,0)" fg:x="42185" fg:w="440"/><text x="62.1905%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="62.5431%" y="197" width="0.0279%" height="15" fill="rgb(208,168,36)" fg:x="42625" fg:w="19"/><text x="62.8361%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="62.5710%" y="181" width="0.1335%" height="15" fill="rgb(246,171,24)" fg:x="42644" fg:w="91"/><text x="62.8639%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="62.7045%" y="149" width="0.0983%" height="15" fill="rgb(215,142,24)" fg:x="42735" fg:w="67"/><text x="62.9975%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="62.7045%" y="165" width="0.1438%" height="15" fill="rgb(250,187,7)" fg:x="42735" fg:w="98"/><text x="62.9975%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="62.8483%" y="117" width="0.0161%" height="15" fill="rgb(228,66,33)" fg:x="42833" fg:w="11"/><text x="63.1413%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="62.8644%" y="101" width="0.0514%" height="15" fill="rgb(234,215,21)" fg:x="42844" fg:w="35"/><text x="63.1574%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="62.8644%" y="117" width="0.0968%" height="15" fill="rgb(222,191,20)" fg:x="42844" fg:w="66"/><text x="63.1574%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="62.8483%" y="133" width="0.2157%" height="15" fill="rgb(245,79,54)" fg:x="42833" fg:w="147"/><text x="63.1413%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="62.8483%" y="149" width="0.3111%" height="15" fill="rgb(240,10,37)" fg:x="42833" fg:w="212"/><text x="63.1413%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="62.8483%" y="165" width="0.3257%" height="15" fill="rgb(214,192,32)" fg:x="42833" fg:w="222"/><text x="63.1413%" y="175.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="62.7045%" y="181" width="0.6764%" height="15" fill="rgb(209,36,54)" fg:x="42735" fg:w="461"/><text x="62.9975%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="62.5710%" y="197" width="1.0227%" height="15" fill="rgb(220,10,11)" fg:x="42644" fg:w="697"/><text x="62.8639%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="63.5937%" y="197" width="0.1394%" height="15" fill="rgb(221,106,17)" fg:x="43341" fg:w="95"/><text x="63.8866%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="63.7331%" y="197" width="0.0924%" height="15" fill="rgb(251,142,44)" fg:x="43436" fg:w="63"/><text x="64.0260%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="63.8255%" y="197" width="0.1115%" height="15" fill="rgb(238,13,15)" fg:x="43499" fg:w="76"/><text x="64.1185%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="63.9370%" y="197" width="0.1027%" height="15" fill="rgb(208,107,27)" fg:x="43575" fg:w="70"/><text x="64.2300%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="64.0397%" y="181" width="0.6456%" height="15" fill="rgb(205,136,37)" fg:x="43645" fg:w="440"/><text x="64.3327%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.6853%" y="181" width="0.0279%" height="15" fill="rgb(250,205,27)" fg:x="44085" fg:w="19"/><text x="64.9783%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="64.7132%" y="165" width="0.1335%" height="15" fill="rgb(210,80,43)" fg:x="44104" fg:w="91"/><text x="65.0062%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="64.8467%" y="133" width="0.0983%" height="15" fill="rgb(247,160,36)" fg:x="44195" fg:w="67"/><text x="65.1397%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="64.8467%" y="149" width="0.1438%" height="15" fill="rgb(234,13,49)" fg:x="44195" fg:w="98"/><text x="65.1397%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="64.9905%" y="101" width="0.0161%" height="15" fill="rgb(234,122,0)" fg:x="44293" fg:w="11"/><text x="65.2835%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="65.0067%" y="85" width="0.0514%" height="15" fill="rgb(207,146,38)" fg:x="44304" fg:w="35"/><text x="65.2996%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="65.0067%" y="101" width="0.0968%" height="15" fill="rgb(207,177,25)" fg:x="44304" fg:w="66"/><text x="65.2996%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="64.9905%" y="117" width="0.2157%" height="15" fill="rgb(211,178,42)" fg:x="44293" fg:w="147"/><text x="65.2835%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="64.9905%" y="133" width="0.3111%" height="15" fill="rgb(230,69,54)" fg:x="44293" fg:w="212"/><text x="65.2835%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="64.9905%" y="149" width="0.3257%" height="15" fill="rgb(214,135,41)" fg:x="44293" fg:w="222"/><text x="65.2835%" y="159.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="64.8467%" y="165" width="0.6764%" height="15" fill="rgb(237,67,25)" fg:x="44195" fg:w="461"/><text x="65.1397%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="64.7132%" y="181" width="1.0227%" height="15" fill="rgb(222,189,50)" fg:x="44104" fg:w="697"/><text x="65.0062%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="65.7359%" y="181" width="0.1394%" height="15" fill="rgb(245,148,34)" fg:x="44801" fg:w="95"/><text x="66.0289%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="65.8753%" y="181" width="0.0924%" height="15" fill="rgb(222,29,6)" fg:x="44896" fg:w="63"/><text x="66.1683%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="65.9677%" y="165" width="0.1203%" height="15" fill="rgb(221,189,43)" fg:x="44959" fg:w="82"/><text x="66.2607%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="66.0881%" y="165" width="0.1394%" height="15" fill="rgb(207,36,27)" fg:x="45041" fg:w="95"/><text x="66.3810%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.2275%" y="165" width="0.1115%" height="15" fill="rgb(217,90,24)" fg:x="45136" fg:w="76"/><text x="66.5204%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="65.9677%" y="181" width="0.4842%" height="15" fill="rgb(224,66,35)" fg:x="44959" fg:w="330"/><text x="66.2607%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.4520%" y="181" width="0.1335%" height="15" fill="rgb(221,13,50)" fg:x="45289" fg:w="91"/><text x="66.7449%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,980 instructions, 2.91%)</title><rect x="64.0397%" y="197" width="2.9052%" height="15" fill="rgb(236,68,49)" fg:x="43645" fg:w="1980"/><text x="64.3327%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.9450%" y="197" width="0.1115%" height="15" fill="rgb(229,146,28)" fg:x="45625" fg:w="76"/><text x="67.2379%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="67.0565%" y="197" width="0.0220%" height="15" fill="rgb(225,31,38)" fg:x="45701" fg:w="15"/><text x="67.3494%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="67.0785%" y="197" width="0.0220%" height="15" fill="rgb(250,208,3)" fg:x="45716" fg:w="15"/><text x="67.3715%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="67.1005%" y="197" width="0.0132%" height="15" fill="rgb(246,54,23)" fg:x="45731" fg:w="9"/><text x="67.3935%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="67.1137%" y="197" width="0.0264%" height="15" fill="rgb(243,76,11)" fg:x="45740" fg:w="18"/><text x="67.4067%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.1401%" y="181" width="0.1335%" height="15" fill="rgb(245,21,50)" fg:x="45758" fg:w="91"/><text x="67.4331%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="67.1401%" y="197" width="0.2744%" height="15" fill="rgb(228,9,43)" fg:x="45758" fg:w="187"/><text x="67.4331%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.4145%" y="165" width="0.1335%" height="15" fill="rgb(208,100,47)" fg:x="45945" fg:w="91"/><text x="67.7075%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="67.4145%" y="181" width="0.1966%" height="15" fill="rgb(232,26,8)" fg:x="45945" fg:w="134"/><text x="67.7075%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.32%)</title><rect x="67.4145%" y="197" width="0.3169%" height="15" fill="rgb(216,166,38)" fg:x="45945" fg:w="216"/><text x="67.7075%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.7314%" y="197" width="0.1335%" height="15" fill="rgb(251,202,51)" fg:x="46161" fg:w="91"/><text x="68.0244%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="67.8650%" y="197" width="0.1262%" height="15" fill="rgb(254,216,34)" fg:x="46252" fg:w="86"/><text x="68.1579%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.9911%" y="197" width="0.1335%" height="15" fill="rgb(251,32,27)" fg:x="46338" fg:w="91"/><text x="68.2841%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="68.1247%" y="197" width="0.1335%" height="15" fill="rgb(208,127,28)" fg:x="46429" fg:w="91"/><text x="68.4176%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="68.2641%" y="197" width="0.1262%" height="15" fill="rgb(224,137,22)" fg:x="46524" fg:w="86"/><text x="68.5570%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="68.3902%" y="197" width="0.6280%" height="15" fill="rgb(254,70,32)" fg:x="46610" fg:w="428"/><text x="68.6832%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="69.0182%" y="197" width="0.6280%" height="15" fill="rgb(229,75,37)" fg:x="47038" fg:w="428"/><text x="69.3112%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,436 instructions, 10.91%)</title><rect x="60.4170%" y="213" width="10.9107%" height="15" fill="rgb(252,64,23)" fg:x="41176" fg:w="7436"/><text x="60.7100%" y="223.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="71.3277%" y="213" width="0.5576%" height="15" fill="rgb(232,162,48)" fg:x="48612" fg:w="380"/><text x="71.6207%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="71.8853%" y="181" width="0.0205%" height="15" fill="rgb(246,160,12)" fg:x="48992" fg:w="14"/><text x="72.1783%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="71.9059%" y="165" width="0.0866%" height="15" fill="rgb(247,166,0)" fg:x="49006" fg:w="59"/><text x="72.1988%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="71.9924%" y="165" width="0.1379%" height="15" fill="rgb(249,219,21)" fg:x="49065" fg:w="94"/><text x="72.2854%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="72.1304%" y="165" width="0.2538%" height="15" fill="rgb(205,209,3)" fg:x="49159" fg:w="173"/><text x="72.4233%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="71.9059%" y="181" width="0.8496%" height="15" fill="rgb(243,44,1)" fg:x="49006" fg:w="579"/><text x="72.1988%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="72.7554%" y="181" width="0.1130%" height="15" fill="rgb(206,159,16)" fg:x="49585" fg:w="77"/><text x="73.0484%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.25%)</title><rect x="71.8853%" y="197" width="1.2531%" height="15" fill="rgb(244,77,30)" fg:x="48992" fg:w="854"/><text x="72.1783%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (898 instructions, 1.32%)</title><rect x="71.8853%" y="213" width="1.3176%" height="15" fill="rgb(218,69,12)" fg:x="48992" fg:w="898"/><text x="72.1783%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="73.2029%" y="213" width="0.0778%" height="15" fill="rgb(212,87,7)" fg:x="49890" fg:w="53"/><text x="73.4959%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.2807%" y="197" width="0.0924%" height="15" fill="rgb(245,114,25)" fg:x="49943" fg:w="63"/><text x="73.5737%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.4245%" y="197" width="0.0924%" height="15" fill="rgb(210,61,42)" fg:x="50041" fg:w="63"/><text x="73.7175%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.29%)</title><rect x="73.2807%" y="213" width="0.2876%" height="15" fill="rgb(211,52,33)" fg:x="49943" fg:w="196"/><text x="73.5737%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="73.5683%" y="197" width="0.0499%" height="15" fill="rgb(234,58,33)" fg:x="50139" fg:w="34"/><text x="73.8613%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="73.5683%" y="213" width="0.1775%" height="15" fill="rgb(220,115,36)" fg:x="50139" fg:w="121"/><text x="73.8613%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.7458%" y="213" width="0.0191%" height="15" fill="rgb(243,153,54)" fg:x="50260" fg:w="13"/><text x="74.0388%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.7649%" y="213" width="0.0191%" height="15" fill="rgb(251,47,18)" fg:x="50273" fg:w="13"/><text x="74.0579%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.7840%" y="213" width="0.0191%" height="15" fill="rgb(242,102,42)" fg:x="50286" fg:w="13"/><text x="74.0770%" y="223.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="73.8031%" y="213" width="0.6456%" height="15" fill="rgb(234,31,38)" fg:x="50299" fg:w="440"/><text x="74.0960%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="74.4487%" y="181" width="0.0279%" height="15" fill="rgb(221,117,51)" fg:x="50739" fg:w="19"/><text x="74.7416%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.16%)</title><rect x="74.4765%" y="181" width="0.1643%" height="15" fill="rgb(212,20,18)" fg:x="50758" fg:w="112"/><text x="74.7695%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.16%)</title><rect x="74.6409%" y="165" width="0.1643%" height="15" fill="rgb(245,133,36)" fg:x="50870" fg:w="112"/><text x="74.9339%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 instructions, 0.22%)</title><rect x="74.6409%" y="181" width="0.2157%" height="15" fill="rgb(212,6,19)" fg:x="50870" fg:w="147"/><text x="74.9339%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="74.8566%" y="181" width="0.0191%" height="15" fill="rgb(218,1,36)" fg:x="51017" fg:w="13"/><text x="75.1495%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (353 instructions, 0.52%)</title><rect x="74.4487%" y="197" width="0.5180%" height="15" fill="rgb(246,84,54)" fg:x="50739" fg:w="353"/><text x="74.7416%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (402 instructions, 0.59%)</title><rect x="74.4487%" y="213" width="0.5898%" height="15" fill="rgb(242,110,6)" fg:x="50739" fg:w="402"/><text x="74.7416%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="75.0385%" y="213" width="0.1262%" height="15" fill="rgb(214,47,5)" fg:x="51141" fg:w="86"/><text x="75.3315%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="75.1676%" y="197" width="0.0205%" height="15" fill="rgb(218,159,25)" fg:x="51229" fg:w="14"/><text x="75.4606%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="75.1882%" y="181" width="0.1262%" height="15" fill="rgb(215,211,28)" fg:x="51243" fg:w="86"/><text x="75.4811%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="75.1882%" y="197" width="0.1775%" height="15" fill="rgb(238,59,32)" fg:x="51243" fg:w="121"/><text x="75.4811%" y="207.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="75.3657%" y="197" width="0.2230%" height="15" fill="rgb(226,82,3)" fg:x="51364" fg:w="152"/><text x="75.6587%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (467 instructions, 0.69%)</title><rect x="75.1676%" y="213" width="0.6852%" height="15" fill="rgb(240,164,32)" fg:x="51229" fg:w="467"/><text x="75.4606%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="75.8529%" y="213" width="0.7601%" height="15" fill="rgb(232,46,7)" fg:x="51696" fg:w="518"/><text x="76.1458%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="76.6129%" y="165" width="0.1775%" height="15" fill="rgb(229,129,53)" fg:x="52214" fg:w="121"/><text x="76.9059%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.24%)</title><rect x="76.6129%" y="181" width="0.2406%" height="15" fill="rgb(234,188,29)" fg:x="52214" fg:w="164"/><text x="76.9059%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.36%)</title><rect x="76.6129%" y="197" width="0.3566%" height="15" fill="rgb(246,141,4)" fg:x="52214" fg:w="243"/><text x="76.9059%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.9695%" y="197" width="0.0220%" height="15" fill="rgb(229,23,39)" fg:x="52457" fg:w="15"/><text x="77.2624%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.9915%" y="197" width="0.0220%" height="15" fill="rgb(206,12,3)" fg:x="52472" fg:w="15"/><text x="77.2844%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (461 instructions, 0.68%)</title><rect x="76.6129%" y="213" width="0.6764%" height="15" fill="rgb(252,226,20)" fg:x="52214" fg:w="461"/><text x="76.9059%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="77.2893%" y="213" width="0.7571%" height="15" fill="rgb(216,123,35)" fg:x="52675" fg:w="516"/><text x="77.5823%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="78.0465%" y="213" width="0.0103%" height="15" fill="rgb(212,68,40)" fg:x="53191" fg:w="7"/><text x="78.3394%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="78.0655%" y="197" width="0.0880%" height="15" fill="rgb(254,125,32)" fg:x="53204" fg:w="60"/><text x="78.3585%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (132 instructions, 0.19%)</title><rect x="78.0567%" y="213" width="0.1937%" height="15" fill="rgb(253,97,22)" fg:x="53198" fg:w="132"/><text x="78.3497%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (18,289 instructions, 26.84%)</title><rect x="56.2587%" y="229" width="26.8352%" height="15" fill="rgb(241,101,14)" fg:x="38342" fg:w="18289"/><text x="56.5517%" y="239.50">canister_update &lt;ic-cdk internal&gt; ti..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="83.0939%" y="213" width="0.1218%" height="15" fill="rgb(238,103,29)" fg:x="56631" fg:w="83"/><text x="83.3869%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="83.2157%" y="165" width="0.0308%" height="15" fill="rgb(233,195,47)" fg:x="56714" fg:w="21"/><text x="83.5087%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="83.2465%" y="149" width="0.1203%" height="15" fill="rgb(246,218,30)" fg:x="56735" fg:w="82"/><text x="83.5395%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="83.3668%" y="149" width="0.6456%" height="15" fill="rgb(219,145,47)" fg:x="56817" fg:w="440"/><text x="83.6598%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="84.0124%" y="149" width="0.1394%" height="15" fill="rgb(243,12,26)" fg:x="57257" fg:w="95"/><text x="84.3054%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.1518%" y="149" width="0.0880%" height="15" fill="rgb(214,87,16)" fg:x="57352" fg:w="60"/><text x="84.4448%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.2399%" y="149" width="0.0880%" height="15" fill="rgb(208,99,42)" fg:x="57412" fg:w="60"/><text x="84.5328%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.3279%" y="149" width="0.0880%" height="15" fill="rgb(253,99,2)" fg:x="57472" fg:w="60"/><text x="84.6209%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.4159%" y="149" width="0.0880%" height="15" fill="rgb(220,168,23)" fg:x="57532" fg:w="60"/><text x="84.7089%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="84.5040%" y="149" width="0.1203%" height="15" fill="rgb(242,38,24)" fg:x="57592" fg:w="82"/><text x="84.7970%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="84.6243%" y="149" width="0.1027%" height="15" fill="rgb(225,182,9)" fg:x="57674" fg:w="70"/><text x="84.9173%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="84.7270%" y="149" width="0.6456%" height="15" fill="rgb(243,178,37)" fg:x="57744" fg:w="440"/><text x="85.0200%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="85.3726%" y="149" width="0.0279%" height="15" fill="rgb(232,139,19)" fg:x="58184" fg:w="19"/><text x="85.6656%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="85.4005%" y="133" width="0.1130%" height="15" fill="rgb(225,201,24)" fg:x="58203" fg:w="77"/><text x="85.6935%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="85.5135%" y="101" width="0.0983%" height="15" fill="rgb(221,47,46)" fg:x="58280" fg:w="67"/><text x="85.8064%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="85.5135%" y="117" width="0.1438%" height="15" fill="rgb(249,23,13)" fg:x="58280" fg:w="98"/><text x="85.8064%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="85.6573%" y="69" width="0.0161%" height="15" fill="rgb(219,9,5)" fg:x="58378" fg:w="11"/><text x="85.9502%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="85.6734%" y="53" width="0.0514%" height="15" fill="rgb(254,171,16)" fg:x="58389" fg:w="35"/><text x="85.9664%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="85.6734%" y="69" width="0.0968%" height="15" fill="rgb(230,171,20)" fg:x="58389" fg:w="66"/><text x="85.9664%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="85.6573%" y="85" width="0.2157%" height="15" fill="rgb(210,71,41)" fg:x="58378" fg:w="147"/><text x="85.9502%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="85.6573%" y="101" width="0.3111%" height="15" fill="rgb(206,173,20)" fg:x="58378" fg:w="212"/><text x="85.9502%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="85.6573%" y="117" width="0.3257%" height="15" fill="rgb(233,88,34)" fg:x="58378" fg:w="222"/><text x="85.9502%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="85.5135%" y="133" width="0.6764%" height="15" fill="rgb(223,209,46)" fg:x="58280" fg:w="461"/><text x="85.8064%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (683 instructions, 1.00%)</title><rect x="85.4005%" y="149" width="1.0022%" height="15" fill="rgb(250,43,18)" fg:x="58203" fg:w="683"/><text x="85.6935%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="86.4027%" y="149" width="0.1394%" height="15" fill="rgb(208,13,10)" fg:x="58886" fg:w="95"/><text x="86.6956%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="86.5420%" y="149" width="0.1262%" height="15" fill="rgb(212,200,36)" fg:x="58981" fg:w="86"/><text x="86.8350%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="86.6682%" y="149" width="0.1115%" height="15" fill="rgb(225,90,30)" fg:x="59067" fg:w="76"/><text x="86.9612%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="86.7797%" y="149" width="0.1027%" height="15" fill="rgb(236,182,39)" fg:x="59143" fg:w="70"/><text x="87.0727%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="86.8825%" y="133" width="0.6456%" height="15" fill="rgb(212,144,35)" fg:x="59213" fg:w="440"/><text x="87.1754%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="87.5281%" y="133" width="0.0279%" height="15" fill="rgb(228,63,44)" fg:x="59653" fg:w="19"/><text x="87.8210%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="87.5559%" y="117" width="0.1203%" height="15" fill="rgb(228,109,6)" fg:x="59672" fg:w="82"/><text x="87.8489%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="87.6763%" y="85" width="0.0983%" height="15" fill="rgb(238,117,24)" fg:x="59754" fg:w="67"/><text x="87.9692%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="87.6763%" y="101" width="0.1438%" height="15" fill="rgb(242,26,26)" fg:x="59754" fg:w="98"/><text x="87.9692%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="87.8201%" y="53" width="0.0161%" height="15" fill="rgb(221,92,48)" fg:x="59852" fg:w="11"/><text x="88.1130%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="87.8362%" y="37" width="0.0514%" height="15" fill="rgb(209,209,32)" fg:x="59863" fg:w="35"/><text x="88.1292%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="87.8362%" y="53" width="0.0968%" height="15" fill="rgb(221,70,22)" fg:x="59863" fg:w="66"/><text x="88.1292%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="87.8201%" y="69" width="0.2157%" height="15" fill="rgb(248,145,5)" fg:x="59852" fg:w="147"/><text x="88.1130%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="87.8201%" y="85" width="0.3111%" height="15" fill="rgb(226,116,26)" fg:x="59852" fg:w="212"/><text x="88.1130%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="87.8201%" y="101" width="0.3257%" height="15" fill="rgb(244,5,17)" fg:x="59852" fg:w="222"/><text x="88.1130%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="87.6763%" y="117" width="0.6764%" height="15" fill="rgb(252,159,33)" fg:x="59754" fg:w="461"/><text x="87.9692%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 1.01%)</title><rect x="87.5559%" y="133" width="1.0095%" height="15" fill="rgb(206,71,0)" fg:x="59672" fg:w="688"/><text x="87.8489%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="88.5654%" y="133" width="0.1394%" height="15" fill="rgb(233,118,54)" fg:x="60360" fg:w="95"/><text x="88.8584%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="88.7048%" y="133" width="0.1262%" height="15" fill="rgb(234,83,48)" fg:x="60455" fg:w="86"/><text x="88.9978%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,517 instructions, 2.23%)</title><rect x="86.8825%" y="149" width="2.2259%" height="15" fill="rgb(228,3,54)" fg:x="59213" fg:w="1517"/><text x="87.1754%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="89.1083%" y="149" width="0.1115%" height="15" fill="rgb(226,155,13)" fg:x="60730" fg:w="76"/><text x="89.4013%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.2198%" y="149" width="0.0220%" height="15" fill="rgb(241,28,37)" fg:x="60806" fg:w="15"/><text x="89.5128%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.2419%" y="149" width="0.0220%" height="15" fill="rgb(233,93,10)" fg:x="60821" fg:w="15"/><text x="89.5348%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="89.2639%" y="149" width="0.0132%" height="15" fill="rgb(225,113,19)" fg:x="60836" fg:w="9"/><text x="89.5568%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="89.2771%" y="149" width="0.0264%" height="15" fill="rgb(241,2,18)" fg:x="60845" fg:w="18"/><text x="89.5700%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="89.3035%" y="149" width="0.1203%" height="15" fill="rgb(228,207,21)" fg:x="60863" fg:w="82"/><text x="89.5964%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="89.4238%" y="149" width="0.1335%" height="15" fill="rgb(213,211,35)" fg:x="60945" fg:w="91"/><text x="89.7168%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="89.5632%" y="149" width="0.6280%" height="15" fill="rgb(209,83,10)" fg:x="61040" fg:w="428"/><text x="89.8562%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="90.1912%" y="149" width="0.6280%" height="15" fill="rgb(209,164,1)" fg:x="61468" fg:w="428"/><text x="90.4842%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,132 instructions, 9.00%)</title><rect x="83.2465%" y="165" width="8.9974%" height="15" fill="rgb(213,184,43)" fg:x="56735" fg:w="6132"/><text x="83.5395%" y="175.50">candid::de:..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="92.2439%" y="165" width="0.5576%" height="15" fill="rgb(231,61,34)" fg:x="62867" fg:w="380"/><text x="92.5369%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="92.8015%" y="133" width="0.0279%" height="15" fill="rgb(235,75,3)" fg:x="63247" fg:w="19"/><text x="93.0945%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="92.8294%" y="117" width="0.1262%" height="15" fill="rgb(220,106,47)" fg:x="63266" fg:w="86"/><text x="93.1223%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="93.0069%" y="117" width="0.0924%" height="15" fill="rgb(210,196,33)" fg:x="63387" fg:w="63"/><text x="93.2999%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (219 instructions, 0.32%)</title><rect x="92.8294%" y="133" width="0.3213%" height="15" fill="rgb(229,154,42)" fg:x="63266" fg:w="219"/><text x="93.1223%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (293 instructions, 0.43%)</title><rect x="92.8015%" y="149" width="0.4299%" height="15" fill="rgb(228,114,26)" fg:x="63247" fg:w="293"/><text x="93.0945%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (342 instructions, 0.50%)</title><rect x="92.8015%" y="165" width="0.5018%" height="15" fill="rgb(208,144,1)" fg:x="63247" fg:w="342"/><text x="93.0945%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="93.3033%" y="165" width="0.1937%" height="15" fill="rgb(239,112,37)" fg:x="63589" fg:w="132"/><text x="93.5963%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (143 instructions, 0.21%)</title><rect x="93.4970%" y="165" width="0.2098%" height="15" fill="rgb(210,96,50)" fg:x="63721" fg:w="143"/><text x="93.7900%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (56 instructions, 0.08%)</title><rect x="93.7068%" y="165" width="0.0822%" height="15" fill="rgb(222,178,2)" fg:x="63864" fg:w="56"/><text x="93.9998%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="93.7890%" y="165" width="0.0264%" height="15" fill="rgb(226,74,18)" fg:x="63920" fg:w="18"/><text x="94.0819%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,090 instructions, 11.87%)</title><rect x="83.2157%" y="181" width="11.8704%" height="15" fill="rgb(225,67,54)" fg:x="56714" fg:w="8090"/><text x="83.5087%" y="191.50">ic_cdk_timers::..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="95.0861%" y="181" width="0.0205%" height="15" fill="rgb(251,92,32)" fg:x="64804" fg:w="14"/><text x="95.3790%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,216 instructions, 12.06%)</title><rect x="83.2157%" y="197" width="12.0552%" height="15" fill="rgb(228,149,22)" fg:x="56714" fg:w="8216"/><text x="83.5087%" y="207.50">ic_cdk::futures..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="95.2709%" y="165" width="0.0103%" height="15" fill="rgb(243,54,13)" fg:x="64930" fg:w="7"/><text x="95.5639%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="95.2812%" y="165" width="0.1262%" height="15" fill="rgb(243,180,28)" fg:x="64937" fg:w="86"/><text x="95.5742%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="95.4074%" y="165" width="0.1233%" height="15" fill="rgb(208,167,24)" fg:x="65023" fg:w="84"/><text x="95.7004%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (237 instructions, 0.35%)</title><rect x="95.2709%" y="181" width="0.3477%" height="15" fill="rgb(245,73,45)" fg:x="64930" fg:w="237"/><text x="95.5639%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="95.6187%" y="165" width="0.1262%" height="15" fill="rgb(237,203,48)" fg:x="65167" fg:w="86"/><text x="95.9117%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (132 instructions, 0.19%)</title><rect x="95.6187%" y="181" width="0.1937%" height="15" fill="rgb(211,197,16)" fg:x="65167" fg:w="132"/><text x="95.9117%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (133 instructions, 0.20%)</title><rect x="95.9591%" y="181" width="0.1951%" height="15" fill="rgb(243,99,51)" fg:x="65399" fg:w="133"/><text x="96.2521%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.27%)</title><rect x="96.1542%" y="181" width="0.2656%" height="15" fill="rgb(215,123,29)" fg:x="65532" fg:w="181"/><text x="96.4472%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (848 instructions, 1.24%)</title><rect x="95.2709%" y="197" width="1.2443%" height="15" fill="rgb(239,186,37)" fg:x="64930" fg:w="848"/><text x="95.5639%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,239 instructions, 13.56%)</title><rect x="83.2157%" y="213" width="13.5563%" height="15" fill="rgb(252,136,39)" fg:x="56714" fg:w="9239"/><text x="83.5087%" y="223.50">futures_task::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="96.9701%" y="181" width="0.0983%" height="15" fill="rgb(223,213,32)" fg:x="66088" fg:w="67"/><text x="97.2630%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (365 instructions, 0.54%)</title><rect x="96.7720%" y="197" width="0.5356%" height="15" fill="rgb(233,115,5)" fg:x="65953" fg:w="365"/><text x="97.0649%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (428 instructions, 0.63%)</title><rect x="96.7720%" y="213" width="0.6280%" height="15" fill="rgb(207,226,44)" fg:x="65953" fg:w="428"/><text x="97.0649%" y="223.50"></text></g><g><title>all (68,153 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(208,126,0)" fg:x="0" fg:w="68153"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (11,522 instructions, 16.91%)</title><rect x="83.0939%" y="229" width="16.9061%" height="15" fill="rgb(244,66,21)" fg:x="56631" fg:w="11522"/><text x="83.3869%" y="239.50">ic_cdk::api::call::cal..</text></g></svg></svg>