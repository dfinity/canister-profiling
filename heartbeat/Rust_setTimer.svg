<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="68210"><g><title>ic_cdk::setup (58 instructions, 0.09%)</title><rect x="0.0000%" y="213" width="0.0850%" height="15" fill="rgb(241,25,7)" fg:x="0" fg:w="58"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (683 instructions, 1.00%)</title><rect x="0.0850%" y="213" width="1.0013%" height="15" fill="rgb(242,119,39)" fg:x="58" fg:w="683"/><text x="0.3780%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.0864%" y="213" width="0.1334%" height="15" fill="rgb(241,98,45)" fg:x="741" fg:w="91"/><text x="1.3793%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.2198%" y="197" width="0.1334%" height="15" fill="rgb(254,28,30)" fg:x="832" fg:w="91"/><text x="1.5127%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.08%)</title><rect x="1.3532%" y="165" width="0.0836%" height="15" fill="rgb(241,142,54)" fg:x="923" fg:w="57"/><text x="1.6461%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.23%)</title><rect x="1.3532%" y="181" width="0.2272%" height="15" fill="rgb(222,85,15)" fg:x="923" fg:w="155"/><text x="1.6461%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="1.5804%" y="181" width="0.6451%" height="15" fill="rgb(210,85,47)" fg:x="1078" fg:w="440"/><text x="1.8734%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="2.2255%" y="181" width="0.1393%" height="15" fill="rgb(224,206,25)" fg:x="1518" fg:w="95"/><text x="2.5184%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.3648%" y="181" width="0.0880%" height="15" fill="rgb(243,201,19)" fg:x="1613" fg:w="60"/><text x="2.6577%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.4527%" y="181" width="0.0880%" height="15" fill="rgb(236,59,4)" fg:x="1673" fg:w="60"/><text x="2.7457%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5407%" y="181" width="0.0880%" height="15" fill="rgb(254,179,45)" fg:x="1733" fg:w="60"/><text x="2.8337%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.6286%" y="181" width="0.0880%" height="15" fill="rgb(226,14,10)" fg:x="1793" fg:w="60"/><text x="2.9216%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="2.7166%" y="181" width="0.1202%" height="15" fill="rgb(244,27,41)" fg:x="1853" fg:w="82"/><text x="3.0096%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="2.8368%" y="181" width="0.1026%" height="15" fill="rgb(235,35,32)" fg:x="1935" fg:w="70"/><text x="3.1298%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="2.9395%" y="181" width="0.6451%" height="15" fill="rgb(218,68,31)" fg:x="2005" fg:w="440"/><text x="3.2324%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.5845%" y="181" width="0.0279%" height="15" fill="rgb(207,120,37)" fg:x="2445" fg:w="19"/><text x="3.8775%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="3.6124%" y="165" width="0.1334%" height="15" fill="rgb(227,98,0)" fg:x="2464" fg:w="91"/><text x="3.9053%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="3.7458%" y="133" width="0.0982%" height="15" fill="rgb(207,7,3)" fg:x="2555" fg:w="67"/><text x="4.0388%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="3.7458%" y="149" width="0.1437%" height="15" fill="rgb(206,98,19)" fg:x="2555" fg:w="98"/><text x="4.0388%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8895%" y="101" width="0.0161%" height="15" fill="rgb(217,5,26)" fg:x="2653" fg:w="11"/><text x="4.1824%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="3.9056%" y="85" width="0.0513%" height="15" fill="rgb(235,190,38)" fg:x="2664" fg:w="35"/><text x="4.1986%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="3.9056%" y="101" width="0.0968%" height="15" fill="rgb(247,86,24)" fg:x="2664" fg:w="66"/><text x="4.1986%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="3.8895%" y="117" width="0.2155%" height="15" fill="rgb(205,101,16)" fg:x="2653" fg:w="147"/><text x="4.1824%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="3.8895%" y="133" width="0.3108%" height="15" fill="rgb(246,168,33)" fg:x="2653" fg:w="212"/><text x="4.1824%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="3.8895%" y="149" width="0.3255%" height="15" fill="rgb(231,114,1)" fg:x="2653" fg:w="222"/><text x="4.1824%" y="159.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="3.7458%" y="165" width="0.6759%" height="15" fill="rgb(207,184,53)" fg:x="2555" fg:w="461"/><text x="4.0388%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="3.6124%" y="181" width="1.0218%" height="15" fill="rgb(224,95,51)" fg:x="2464" fg:w="697"/><text x="3.9053%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="4.6342%" y="181" width="0.1393%" height="15" fill="rgb(212,188,45)" fg:x="3161" fg:w="95"/><text x="4.9272%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="4.7735%" y="181" width="0.0924%" height="15" fill="rgb(223,154,38)" fg:x="3256" fg:w="63"/><text x="5.0665%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="4.8659%" y="181" width="0.1114%" height="15" fill="rgb(251,22,52)" fg:x="3319" fg:w="76"/><text x="5.1588%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="4.9773%" y="181" width="0.1026%" height="15" fill="rgb(229,209,22)" fg:x="3395" fg:w="70"/><text x="5.2702%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="5.0799%" y="165" width="0.6451%" height="15" fill="rgb(234,138,34)" fg:x="3465" fg:w="440"/><text x="5.3729%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.7250%" y="165" width="0.0279%" height="15" fill="rgb(212,95,11)" fg:x="3905" fg:w="19"/><text x="6.0179%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="5.7528%" y="149" width="0.1334%" height="15" fill="rgb(240,179,47)" fg:x="3924" fg:w="91"/><text x="6.0458%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.8862%" y="117" width="0.0982%" height="15" fill="rgb(240,163,11)" fg:x="4015" fg:w="67"/><text x="6.1792%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="5.8862%" y="133" width="0.1437%" height="15" fill="rgb(236,37,12)" fg:x="4015" fg:w="98"/><text x="6.1792%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.0299%" y="85" width="0.0161%" height="15" fill="rgb(232,164,16)" fg:x="4113" fg:w="11"/><text x="6.3229%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="6.0460%" y="69" width="0.0513%" height="15" fill="rgb(244,205,15)" fg:x="4124" fg:w="35"/><text x="6.3390%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="6.0460%" y="85" width="0.0968%" height="15" fill="rgb(223,117,47)" fg:x="4124" fg:w="66"/><text x="6.3390%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="6.0299%" y="101" width="0.2155%" height="15" fill="rgb(244,107,35)" fg:x="4113" fg:w="147"/><text x="6.3229%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="6.0299%" y="117" width="0.3108%" height="15" fill="rgb(205,140,8)" fg:x="4113" fg:w="212"/><text x="6.3229%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="6.0299%" y="133" width="0.3255%" height="15" fill="rgb(228,84,46)" fg:x="4113" fg:w="222"/><text x="6.3229%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="5.8862%" y="149" width="0.6759%" height="15" fill="rgb(254,188,9)" fg:x="4015" fg:w="461"/><text x="6.1792%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="5.7528%" y="165" width="1.0218%" height="15" fill="rgb(206,112,54)" fg:x="3924" fg:w="697"/><text x="6.0458%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="6.7747%" y="165" width="0.1393%" height="15" fill="rgb(216,84,49)" fg:x="4621" fg:w="95"/><text x="7.0676%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="6.9139%" y="165" width="0.0924%" height="15" fill="rgb(214,194,35)" fg:x="4716" fg:w="63"/><text x="7.2069%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="7.0063%" y="149" width="0.1202%" height="15" fill="rgb(249,28,3)" fg:x="4779" fg:w="82"/><text x="7.2993%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.1265%" y="149" width="0.1393%" height="15" fill="rgb(222,56,52)" fg:x="4861" fg:w="95"/><text x="7.4195%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.2658%" y="149" width="0.1114%" height="15" fill="rgb(245,217,50)" fg:x="4956" fg:w="76"/><text x="7.5588%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="7.0063%" y="165" width="0.4838%" height="15" fill="rgb(213,201,24)" fg:x="4779" fg:w="330"/><text x="7.2993%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="7.4901%" y="165" width="0.1334%" height="15" fill="rgb(248,116,28)" fg:x="5109" fg:w="91"/><text x="7.7831%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,980 instructions, 2.90%)</title><rect x="5.0799%" y="181" width="2.9028%" height="15" fill="rgb(219,72,43)" fg:x="3465" fg:w="1980"/><text x="5.3729%" y="191.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.9827%" y="181" width="0.1114%" height="15" fill="rgb(209,138,14)" fg:x="5445" fg:w="76"/><text x="8.2757%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.0941%" y="181" width="0.0220%" height="15" fill="rgb(222,18,33)" fg:x="5521" fg:w="15"/><text x="8.3871%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.1161%" y="181" width="0.0220%" height="15" fill="rgb(213,199,7)" fg:x="5536" fg:w="15"/><text x="8.4091%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="8.1381%" y="181" width="0.0132%" height="15" fill="rgb(250,110,10)" fg:x="5551" fg:w="9"/><text x="8.4311%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="8.1513%" y="181" width="0.0264%" height="15" fill="rgb(248,123,6)" fg:x="5560" fg:w="18"/><text x="8.4443%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.1777%" y="165" width="0.1334%" height="15" fill="rgb(206,91,31)" fg:x="5578" fg:w="91"/><text x="8.4707%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="8.1777%" y="181" width="0.2742%" height="15" fill="rgb(211,154,13)" fg:x="5578" fg:w="187"/><text x="8.4707%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.4518%" y="149" width="0.1334%" height="15" fill="rgb(225,148,7)" fg:x="5765" fg:w="91"/><text x="8.7448%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="8.4518%" y="165" width="0.1965%" height="15" fill="rgb(220,160,43)" fg:x="5765" fg:w="134"/><text x="8.7448%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.32%)</title><rect x="8.4518%" y="181" width="0.3167%" height="15" fill="rgb(213,52,39)" fg:x="5765" fg:w="216"/><text x="8.7448%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.7685%" y="181" width="0.1334%" height="15" fill="rgb(243,137,7)" fg:x="5981" fg:w="91"/><text x="9.0615%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="8.9019%" y="181" width="0.1261%" height="15" fill="rgb(230,79,13)" fg:x="6072" fg:w="86"/><text x="9.1949%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.0280%" y="181" width="0.1334%" height="15" fill="rgb(247,105,23)" fg:x="6158" fg:w="91"/><text x="9.3210%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.1614%" y="181" width="0.1334%" height="15" fill="rgb(223,179,41)" fg:x="6249" fg:w="91"/><text x="9.4544%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="9.3007%" y="181" width="0.1261%" height="15" fill="rgb(218,9,34)" fg:x="6344" fg:w="86"/><text x="9.5937%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="9.4268%" y="181" width="0.6275%" height="15" fill="rgb(222,106,8)" fg:x="6430" fg:w="428"/><text x="9.7197%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="10.0542%" y="181" width="0.6275%" height="15" fill="rgb(211,220,0)" fg:x="6858" fg:w="428"/><text x="10.3472%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,519 instructions, 11.02%)</title><rect x="1.3532%" y="197" width="11.0233%" height="15" fill="rgb(229,52,16)" fg:x="923" fg:w="7519"/><text x="1.6461%" y="207.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="12.3765%" y="197" width="0.5571%" height="15" fill="rgb(212,155,18)" fg:x="8442" fg:w="380"/><text x="12.6695%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (51 instructions, 0.07%)</title><rect x="12.9336%" y="181" width="0.0748%" height="15" fill="rgb(242,21,14)" fg:x="8822" fg:w="51"/><text x="13.2266%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (100 instructions, 0.15%)</title><rect x="12.9336%" y="197" width="0.1466%" height="15" fill="rgb(222,19,48)" fg:x="8822" fg:w="100"/><text x="13.2266%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="13.0802%" y="197" width="0.1334%" height="15" fill="rgb(232,45,27)" fg:x="8922" fg:w="91"/><text x="13.3732%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="13.2136%" y="181" width="0.0205%" height="15" fill="rgb(249,103,42)" fg:x="9013" fg:w="14"/><text x="13.5066%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="13.2341%" y="165" width="0.0865%" height="15" fill="rgb(246,81,33)" fg:x="9027" fg:w="59"/><text x="13.5271%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="13.3206%" y="165" width="0.1378%" height="15" fill="rgb(252,33,42)" fg:x="9086" fg:w="94"/><text x="13.6136%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="13.4584%" y="165" width="0.2536%" height="15" fill="rgb(209,212,41)" fg:x="9180" fg:w="173"/><text x="13.7514%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="13.2341%" y="181" width="0.8488%" height="15" fill="rgb(207,154,6)" fg:x="9027" fg:w="579"/><text x="13.5271%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="14.0830%" y="181" width="0.1334%" height="15" fill="rgb(223,64,47)" fg:x="9606" fg:w="91"/><text x="14.3759%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="14.2164%" y="181" width="0.2228%" height="15" fill="rgb(211,161,38)" fg:x="9697" fg:w="152"/><text x="14.5094%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,233 instructions, 1.81%)</title><rect x="13.2136%" y="197" width="1.8077%" height="15" fill="rgb(219,138,40)" fg:x="9013" fg:w="1233"/><text x="13.5066%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.0213%" y="197" width="0.1334%" height="15" fill="rgb(241,228,46)" fg:x="10246" fg:w="91"/><text x="15.3142%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="15.1547%" y="181" width="0.0205%" height="15" fill="rgb(223,209,38)" fg:x="10337" fg:w="14"/><text x="15.4476%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="15.1752%" y="165" width="0.0865%" height="15" fill="rgb(236,164,45)" fg:x="10351" fg:w="59"/><text x="15.4682%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="15.2617%" y="165" width="0.1378%" height="15" fill="rgb(231,15,5)" fg:x="10410" fg:w="94"/><text x="15.5547%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="15.3995%" y="165" width="0.2536%" height="15" fill="rgb(252,35,15)" fg:x="10504" fg:w="173"/><text x="15.6925%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="15.1752%" y="181" width="0.8488%" height="15" fill="rgb(248,181,18)" fg:x="10351" fg:w="579"/><text x="15.4682%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="16.0240%" y="181" width="0.1129%" height="15" fill="rgb(233,39,42)" fg:x="10930" fg:w="77"/><text x="16.3170%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="16.1369%" y="165" width="0.1261%" height="15" fill="rgb(238,110,33)" fg:x="11007" fg:w="86"/><text x="16.4299%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="16.1369%" y="181" width="0.1774%" height="15" fill="rgb(233,195,10)" fg:x="11007" fg:w="121"/><text x="16.4299%" y="191.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 1.45%)</title><rect x="15.1547%" y="197" width="1.4455%" height="15" fill="rgb(254,105,3)" fg:x="10337" fg:w="986"/><text x="15.4476%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="16.6002%" y="149" width="0.0865%" height="15" fill="rgb(221,225,9)" fg:x="11323" fg:w="59"/><text x="16.8932%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="16.6002%" y="165" width="0.1378%" height="15" fill="rgb(224,227,45)" fg:x="11323" fg:w="94"/><text x="16.8932%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="16.6002%" y="181" width="0.4618%" height="15" fill="rgb(229,198,43)" fg:x="11323" fg:w="315"/><text x="16.8932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="17.0620%" y="181" width="0.1334%" height="15" fill="rgb(206,209,35)" fg:x="11638" fg:w="91"/><text x="17.3550%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="17.1954%" y="181" width="0.2228%" height="15" fill="rgb(245,195,53)" fg:x="11729" fg:w="152"/><text x="17.4884%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,017 instructions, 1.49%)</title><rect x="16.6002%" y="197" width="1.4910%" height="15" fill="rgb(240,92,26)" fg:x="11323" fg:w="1017"/><text x="16.8932%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="18.0912%" y="197" width="0.0777%" height="15" fill="rgb(207,40,23)" fg:x="12340" fg:w="53"/><text x="18.3842%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="18.1689%" y="181" width="0.1935%" height="15" fill="rgb(223,111,35)" fg:x="12393" fg:w="132"/><text x="18.4619%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="18.4137%" y="181" width="0.1935%" height="15" fill="rgb(229,147,28)" fg:x="12560" fg:w="132"/><text x="18.7067%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.49%)</title><rect x="18.1689%" y="197" width="0.4897%" height="15" fill="rgb(211,29,28)" fg:x="12393" fg:w="334"/><text x="18.4619%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="18.6586%" y="181" width="0.0498%" height="15" fill="rgb(228,72,33)" fg:x="12727" fg:w="34"/><text x="18.9515%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="18.6586%" y="197" width="0.1774%" height="15" fill="rgb(205,214,31)" fg:x="12727" fg:w="121"/><text x="18.9515%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8359%" y="197" width="0.0191%" height="15" fill="rgb(224,111,15)" fg:x="12848" fg:w="13"/><text x="19.1289%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8550%" y="197" width="0.0191%" height="15" fill="rgb(253,21,26)" fg:x="12861" fg:w="13"/><text x="19.1480%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8741%" y="197" width="0.0191%" height="15" fill="rgb(245,139,43)" fg:x="12874" fg:w="13"/><text x="19.1670%" y="207.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="18.8931%" y="197" width="0.6451%" height="15" fill="rgb(252,170,7)" fg:x="12887" fg:w="440"/><text x="19.1861%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="19.5382%" y="165" width="0.0279%" height="15" fill="rgb(231,118,14)" fg:x="13327" fg:w="19"/><text x="19.8312%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.27%)</title><rect x="19.5660%" y="165" width="0.2654%" height="15" fill="rgb(238,83,0)" fg:x="13346" fg:w="181"/><text x="19.8590%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="19.8314%" y="133" width="0.0982%" height="15" fill="rgb(221,39,39)" fg:x="13527" fg:w="67"/><text x="20.1244%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.34%)</title><rect x="19.8314%" y="149" width="0.3372%" height="15" fill="rgb(222,119,46)" fg:x="13527" fg:w="230"/><text x="20.1244%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (265 instructions, 0.39%)</title><rect x="19.8314%" y="165" width="0.3885%" height="15" fill="rgb(222,165,49)" fg:x="13527" fg:w="265"/><text x="20.1244%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="20.2199%" y="165" width="0.0191%" height="15" fill="rgb(219,113,52)" fg:x="13792" fg:w="13"/><text x="20.5129%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (540 instructions, 0.79%)</title><rect x="19.5382%" y="181" width="0.7917%" height="15" fill="rgb(214,7,15)" fg:x="13327" fg:w="540"/><text x="19.8312%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (589 instructions, 0.86%)</title><rect x="19.5382%" y="197" width="0.8635%" height="15" fill="rgb(235,32,4)" fg:x="13327" fg:w="589"/><text x="19.8312%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="20.4017%" y="181" width="0.0909%" height="15" fill="rgb(238,90,54)" fg:x="13916" fg:w="62"/><text x="20.6947%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="20.4926%" y="181" width="0.0982%" height="15" fill="rgb(213,208,19)" fg:x="13978" fg:w="67"/><text x="20.7856%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.33%)</title><rect x="20.4017%" y="197" width="0.3343%" height="15" fill="rgb(233,156,4)" fg:x="13916" fg:w="228"/><text x="20.6947%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="20.7360%" y="181" width="0.0909%" height="15" fill="rgb(207,194,5)" fg:x="14144" fg:w="62"/><text x="21.0289%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.27%)</title><rect x="20.7360%" y="197" width="0.2668%" height="15" fill="rgb(206,111,30)" fg:x="14144" fg:w="182"/><text x="21.0289%" y="207.50"></text></g><g><title>__rust_realloc (110 instructions, 0.16%)</title><rect x="21.0028%" y="165" width="0.1613%" height="15" fill="rgb(243,70,54)" fg:x="14326" fg:w="110"/><text x="21.2958%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.23%)</title><rect x="21.0028%" y="181" width="0.2272%" height="15" fill="rgb(242,28,8)" fg:x="14326" fg:w="155"/><text x="21.2958%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="21.3664%" y="165" width="0.1217%" height="15" fill="rgb(219,106,18)" fg:x="14574" fg:w="83"/><text x="21.6593%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="21.3664%" y="181" width="0.1847%" height="15" fill="rgb(244,222,10)" fg:x="14574" fg:w="126"/><text x="21.6593%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (456 instructions, 0.67%)</title><rect x="21.0028%" y="197" width="0.6685%" height="15" fill="rgb(236,179,52)" fg:x="14326" fg:w="456"/><text x="21.2958%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (591 instructions, 0.87%)</title><rect x="21.6713%" y="197" width="0.8664%" height="15" fill="rgb(213,23,39)" fg:x="14782" fg:w="591"/><text x="21.9643%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="22.5378%" y="165" width="0.0205%" height="15" fill="rgb(238,48,10)" fg:x="15373" fg:w="14"/><text x="22.8307%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="22.5583%" y="165" width="0.0191%" height="15" fill="rgb(251,196,23)" fg:x="15387" fg:w="13"/><text x="22.8512%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="22.5773%" y="165" width="0.2228%" height="15" fill="rgb(250,152,24)" fg:x="15400" fg:w="152"/><text x="22.8703%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (359 instructions, 0.53%)</title><rect x="22.5378%" y="181" width="0.5263%" height="15" fill="rgb(209,150,17)" fg:x="15373" fg:w="359"/><text x="22.8307%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="23.0641%" y="181" width="0.7594%" height="15" fill="rgb(234,202,34)" fg:x="15732" fg:w="518"/><text x="23.3570%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="23.8235%" y="133" width="0.1217%" height="15" fill="rgb(253,148,53)" fg:x="16250" fg:w="83"/><text x="24.1165%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="23.8235%" y="149" width="0.1847%" height="15" fill="rgb(218,129,16)" fg:x="16250" fg:w="126"/><text x="24.1165%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="23.8235%" y="165" width="0.3005%" height="15" fill="rgb(216,85,19)" fg:x="16250" fg:w="205"/><text x="24.1165%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1240%" y="165" width="0.0220%" height="15" fill="rgb(235,228,7)" fg:x="16455" fg:w="15"/><text x="24.4170%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1460%" y="165" width="0.0220%" height="15" fill="rgb(245,175,0)" fg:x="16470" fg:w="15"/><text x="24.4390%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (423 instructions, 0.62%)</title><rect x="23.8235%" y="181" width="0.6201%" height="15" fill="rgb(208,168,36)" fg:x="16250" fg:w="423"/><text x="24.1165%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="24.4436%" y="181" width="0.7565%" height="15" fill="rgb(246,171,24)" fg:x="16673" fg:w="516"/><text x="24.7366%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="25.2001%" y="181" width="0.0103%" height="15" fill="rgb(215,142,24)" fg:x="17189" fg:w="7"/><text x="25.4931%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="25.2104%" y="181" width="0.0103%" height="15" fill="rgb(250,187,7)" fg:x="17196" fg:w="7"/><text x="25.5033%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="25.2206%" y="181" width="0.0880%" height="15" fill="rgb(228,66,33)" fg:x="17203" fg:w="60"/><text x="25.5136%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,569 instructions, 3.77%)</title><rect x="22.5378%" y="197" width="3.7663%" height="15" fill="rgb(234,215,21)" fg:x="15373" fg:w="2569"/><text x="22.8307%" y="207.50">ic_..</text></g><g><title>timer::setTimer_0_::{{closure}} (19,390 instructions, 28.43%)</title><rect x="1.2198%" y="213" width="28.4269%" height="15" fill="rgb(222,191,20)" fg:x="832" fg:w="19390"/><text x="1.5127%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="29.6467%" y="213" width="0.0205%" height="15" fill="rgb(245,79,54)" fg:x="20222" fg:w="14"/><text x="29.9396%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="29.6687%" y="213" width="0.1261%" height="15" fill="rgb(240,10,37)" fg:x="20237" fg:w="86"/><text x="29.9616%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="29.7948%" y="213" width="0.1979%" height="15" fill="rgb(214,192,32)" fg:x="20323" fg:w="135"/><text x="30.0877%" y="223.50"></text></g><g><title>canister_update setTimer (20,602 instructions, 30.20%)</title><rect x="0.0000%" y="229" width="30.2038%" height="15" fill="rgb(209,36,54)" fg:x="0" fg:w="20602"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="30.2038%" y="213" width="0.0352%" height="15" fill="rgb(220,10,11)" fg:x="20602" fg:w="24"/><text x="30.4968%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="30.2390%" y="213" width="0.1202%" height="15" fill="rgb(221,106,17)" fg:x="20626" fg:w="82"/><text x="30.5319%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.3592%" y="213" width="0.1217%" height="15" fill="rgb(251,142,44)" fg:x="20708" fg:w="83"/><text x="30.6522%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.4809%" y="197" width="0.1334%" height="15" fill="rgb(238,13,15)" fg:x="20791" fg:w="91"/><text x="30.7738%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.6143%" y="197" width="0.1217%" height="15" fill="rgb(208,107,27)" fg:x="20882" fg:w="83"/><text x="30.9072%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.7360%" y="197" width="0.1334%" height="15" fill="rgb(205,136,37)" fg:x="20965" fg:w="91"/><text x="31.0289%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="30.8694%" y="197" width="0.0308%" height="15" fill="rgb(250,205,27)" fg:x="21056" fg:w="21"/><text x="31.1623%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.9002%" y="181" width="0.1217%" height="15" fill="rgb(210,80,43)" fg:x="21077" fg:w="83"/><text x="31.1931%" y="191.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="31.0218%" y="181" width="0.1906%" height="15" fill="rgb(247,160,36)" fg:x="21160" fg:w="130"/><text x="31.3148%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="31.2124%" y="181" width="0.2624%" height="15" fill="rgb(234,13,49)" fg:x="21290" fg:w="179"/><text x="31.5054%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="31.4749%" y="181" width="0.0880%" height="15" fill="rgb(234,122,0)" fg:x="21469" fg:w="60"/><text x="31.7678%" y="191.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.33%)</title><rect x="30.9002%" y="197" width="2.3340%" height="15" fill="rgb(207,146,38)" fg:x="21077" fg:w="1592"/><text x="31.1931%" y="207.50">i..</text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.2341%" y="181" width="0.0205%" height="15" fill="rgb(207,177,25)" fg:x="22669" fg:w="14"/><text x="33.5271%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (107 instructions, 0.16%)</title><rect x="33.2341%" y="197" width="0.1569%" height="15" fill="rgb(211,178,42)" fg:x="22669" fg:w="107"/><text x="33.5271%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.3910%" y="165" width="0.0205%" height="15" fill="rgb(230,69,54)" fg:x="22776" fg:w="14"/><text x="33.6840%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.09%)</title><rect x="33.3910%" y="181" width="0.0924%" height="15" fill="rgb(214,135,41)" fg:x="22776" fg:w="63"/><text x="33.6840%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="33.4834%" y="181" width="0.1334%" height="15" fill="rgb(237,67,25)" fg:x="22839" fg:w="91"/><text x="33.7763%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="33.6168%" y="165" width="0.0205%" height="15" fill="rgb(222,189,50)" fg:x="22930" fg:w="14"/><text x="33.9097%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.6373%" y="149" width="0.0865%" height="15" fill="rgb(245,148,34)" fg:x="22944" fg:w="59"/><text x="33.9303%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="33.7238%" y="149" width="0.1378%" height="15" fill="rgb(222,29,6)" fg:x="23003" fg:w="94"/><text x="34.0168%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="33.8616%" y="149" width="0.2536%" height="15" fill="rgb(221,189,43)" fg:x="23097" fg:w="173"/><text x="34.1546%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="33.6373%" y="165" width="0.8488%" height="15" fill="rgb(207,36,27)" fg:x="22944" fg:w="579"/><text x="33.9303%" y="175.50"></text></g><g><title>candid::types::internal::env_add (821 instructions, 1.20%)</title><rect x="33.6168%" y="181" width="1.2036%" height="15" fill="rgb(217,90,24)" fg:x="22930" fg:w="821"/><text x="33.9097%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="34.8204%" y="181" width="0.1334%" height="15" fill="rgb(224,66,35)" fg:x="23751" fg:w="91"/><text x="35.1134%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="34.9538%" y="165" width="0.0205%" height="15" fill="rgb(221,13,50)" fg:x="23842" fg:w="14"/><text x="35.2468%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="34.9743%" y="149" width="0.0865%" height="15" fill="rgb(236,68,49)" fg:x="23856" fg:w="59"/><text x="35.2673%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="35.0608%" y="149" width="0.1378%" height="15" fill="rgb(229,146,28)" fg:x="23915" fg:w="94"/><text x="35.3538%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="35.1987%" y="149" width="0.2536%" height="15" fill="rgb(225,31,38)" fg:x="24009" fg:w="173"/><text x="35.4916%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="34.9743%" y="165" width="0.8488%" height="15" fill="rgb(250,208,3)" fg:x="23856" fg:w="579"/><text x="35.2673%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="35.8232%" y="165" width="0.1129%" height="15" fill="rgb(246,54,23)" fg:x="24435" fg:w="77"/><text x="36.1162%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="35.9361%" y="149" width="0.1261%" height="15" fill="rgb(243,76,11)" fg:x="24512" fg:w="86"/><text x="36.2290%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="35.9361%" y="165" width="0.1774%" height="15" fill="rgb(245,21,50)" fg:x="24512" fg:w="121"/><text x="36.2290%" y="175.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 1.45%)</title><rect x="34.9538%" y="181" width="1.4455%" height="15" fill="rgb(228,9,43)" fg:x="23842" fg:w="986"/><text x="35.2468%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="36.3994%" y="133" width="0.0865%" height="15" fill="rgb(208,100,47)" fg:x="24828" fg:w="59"/><text x="36.6923%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="36.3994%" y="149" width="0.1378%" height="15" fill="rgb(232,26,8)" fg:x="24828" fg:w="94"/><text x="36.6923%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="36.3994%" y="165" width="0.4618%" height="15" fill="rgb(216,166,38)" fg:x="24828" fg:w="315"/><text x="36.6923%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.851 (18 instructions, 0.03%)</title><rect x="36.8612%" y="165" width="0.0264%" height="15" fill="rgb(251,202,51)" fg:x="25143" fg:w="18"/><text x="37.1541%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.8876%" y="165" width="0.0191%" height="15" fill="rgb(254,216,34)" fg:x="25161" fg:w="13"/><text x="37.1805%" y="175.50"></text></g><g><title>candid::types::internal::env_id (551 instructions, 0.81%)</title><rect x="36.3994%" y="181" width="0.8078%" height="15" fill="rgb(251,32,27)" fg:x="24828" fg:w="551"/><text x="36.6923%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,732 instructions, 4.01%)</title><rect x="33.3910%" y="197" width="4.0053%" height="15" fill="rgb(208,127,28)" fg:x="22776" fg:w="2732"/><text x="33.6840%" y="207.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="37.3963%" y="165" width="0.1217%" height="15" fill="rgb(224,137,22)" fg:x="25508" fg:w="83"/><text x="37.6892%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="37.3963%" y="181" width="0.1847%" height="15" fill="rgb(254,70,32)" fg:x="25508" fg:w="126"/><text x="37.6892%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.30%)</title><rect x="37.3963%" y="197" width="0.3049%" height="15" fill="rgb(229,75,37)" fg:x="25508" fg:w="208"/><text x="37.6892%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.03%)</title><rect x="37.7012%" y="181" width="0.0337%" height="15" fill="rgb(252,64,23)" fg:x="25716" fg:w="23"/><text x="37.9942%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.7349%" y="181" width="0.0191%" height="15" fill="rgb(232,162,48)" fg:x="25739" fg:w="13"/><text x="38.0279%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (105 instructions, 0.15%)</title><rect x="37.7012%" y="197" width="0.1539%" height="15" fill="rgb(246,160,12)" fg:x="25716" fg:w="105"/><text x="37.9942%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.8552%" y="197" width="0.0191%" height="15" fill="rgb(247,166,0)" fg:x="25821" fg:w="13"/><text x="38.1481%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="37.8742%" y="165" width="0.1129%" height="15" fill="rgb(249,219,21)" fg:x="25834" fg:w="77"/><text x="38.1672%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.18%)</title><rect x="37.8742%" y="181" width="0.1759%" height="15" fill="rgb(205,209,3)" fg:x="25834" fg:w="120"/><text x="38.1672%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="38.1660%" y="165" width="0.1774%" height="15" fill="rgb(243,44,1)" fg:x="26033" fg:w="121"/><text x="38.4589%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.24%)</title><rect x="38.1660%" y="181" width="0.2404%" height="15" fill="rgb(206,159,16)" fg:x="26033" fg:w="164"/><text x="38.4589%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (442 instructions, 0.65%)</title><rect x="37.8742%" y="197" width="0.6480%" height="15" fill="rgb(244,77,30)" fg:x="25834" fg:w="442"/><text x="38.1672%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="38.5222%" y="149" width="0.1217%" height="15" fill="rgb(218,69,12)" fg:x="26276" fg:w="83"/><text x="38.8152%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="38.5222%" y="165" width="0.1847%" height="15" fill="rgb(212,87,7)" fg:x="26276" fg:w="126"/><text x="38.8152%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="38.5222%" y="181" width="0.3005%" height="15" fill="rgb(245,114,25)" fg:x="26276" fg:w="205"/><text x="38.8152%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="38.8228%" y="181" width="0.0220%" height="15" fill="rgb(210,61,42)" fg:x="26481" fg:w="15"/><text x="39.1157%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="38.8447%" y="117" width="0.1129%" height="15" fill="rgb(211,52,33)" fg:x="26496" fg:w="77"/><text x="39.1377%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.18%)</title><rect x="38.8447%" y="133" width="0.1759%" height="15" fill="rgb(234,58,33)" fg:x="26496" fg:w="120"/><text x="39.1377%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (199 instructions, 0.29%)</title><rect x="38.8447%" y="149" width="0.2917%" height="15" fill="rgb(220,115,36)" fg:x="26496" fg:w="199"/><text x="39.1377%" y="159.50"></text></g><g><title>leb128::write::signed (258 instructions, 0.38%)</title><rect x="38.8447%" y="165" width="0.3782%" height="15" fill="rgb(243,153,54)" fg:x="26496" fg:w="258"/><text x="39.1377%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (319 instructions, 0.47%)</title><rect x="38.8447%" y="181" width="0.4677%" height="15" fill="rgb(251,47,18)" fg:x="26496" fg:w="319"/><text x="39.1377%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="39.3124%" y="181" width="0.0513%" height="15" fill="rgb(242,102,42)" fg:x="26815" fg:w="35"/><text x="39.6054%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="39.3637%" y="181" width="0.1261%" height="15" fill="rgb(234,31,38)" fg:x="26850" fg:w="86"/><text x="39.6567%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (902 instructions, 1.32%)</title><rect x="38.5222%" y="197" width="1.3224%" height="15" fill="rgb(221,117,51)" fg:x="26276" fg:w="902"/><text x="38.8152%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="39.8446%" y="197" width="0.0982%" height="15" fill="rgb(212,20,18)" fg:x="27178" fg:w="67"/><text x="40.1376%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="39.9428%" y="149" width="0.1202%" height="15" fill="rgb(245,133,36)" fg:x="27245" fg:w="82"/><text x="40.2358%" y="159.50"></text></g><g><title>memcpy (211 instructions, 0.31%)</title><rect x="40.0630%" y="149" width="0.3093%" height="15" fill="rgb(212,6,19)" fg:x="27327" fg:w="211"/><text x="40.3560%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="40.3724%" y="149" width="0.1261%" height="15" fill="rgb(218,1,36)" fg:x="27538" fg:w="86"/><text x="40.6653%" y="159.50"></text></g><g><title>__rust_realloc (485 instructions, 0.71%)</title><rect x="39.9428%" y="165" width="0.7110%" height="15" fill="rgb(246,84,54)" fg:x="27245" fg:w="485"/><text x="40.2358%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (530 instructions, 0.78%)</title><rect x="39.9428%" y="181" width="0.7770%" height="15" fill="rgb(242,110,6)" fg:x="27245" fg:w="530"/><text x="40.2358%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (618 instructions, 0.91%)</title><rect x="39.9428%" y="197" width="0.9060%" height="15" fill="rgb(214,47,5)" fg:x="27245" fg:w="618"/><text x="40.2358%" y="207.50"></text></g><g><title>memcpy (147 instructions, 0.22%)</title><rect x="40.8488%" y="197" width="0.2155%" height="15" fill="rgb(218,159,25)" fg:x="27863" fg:w="147"/><text x="41.1418%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="41.0732%" y="181" width="0.0191%" height="15" fill="rgb(215,211,28)" fg:x="28016" fg:w="13"/><text x="41.3661%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="41.0922%" y="181" width="0.1261%" height="15" fill="rgb(238,59,32)" fg:x="28029" fg:w="86"/><text x="41.3852%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="41.2183%" y="181" width="0.1979%" height="15" fill="rgb(226,82,3)" fg:x="28115" fg:w="135"/><text x="41.5113%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="41.4162%" y="181" width="0.1979%" height="15" fill="rgb(240,164,32)" fg:x="28250" fg:w="135"/><text x="41.7092%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (472 instructions, 0.69%)</title><rect x="41.0644%" y="197" width="0.6920%" height="15" fill="rgb(232,46,7)" fg:x="28010" fg:w="472"/><text x="41.3573%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="41.7563%" y="197" width="0.1202%" height="15" fill="rgb(229,129,53)" fg:x="28482" fg:w="82"/><text x="42.0493%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="41.8766%" y="197" width="0.1334%" height="15" fill="rgb(234,188,29)" fg:x="28564" fg:w="91"/><text x="42.1695%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="42.0100%" y="197" width="0.0323%" height="15" fill="rgb(246,141,4)" fg:x="28655" fg:w="22"/><text x="42.3029%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (62 instructions, 0.09%)</title><rect x="42.0422%" y="181" width="0.0909%" height="15" fill="rgb(229,23,39)" fg:x="28677" fg:w="62"/><text x="42.3352%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (83 instructions, 0.12%)</title><rect x="42.0422%" y="197" width="0.1217%" height="15" fill="rgb(206,12,3)" fg:x="28677" fg:w="83"/><text x="42.3352%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.03%)</title><rect x="42.1639%" y="197" width="0.0337%" height="15" fill="rgb(252,226,20)" fg:x="28760" fg:w="23"/><text x="42.4569%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (17,472 instructions, 25.62%)</title><rect x="30.4809%" y="213" width="25.6150%" height="15" fill="rgb(216,123,35)" fg:x="20791" fg:w="17472"/><text x="30.7738%" y="223.50">ic_cdk_timers::global_timer::{{clos..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="56.0959%" y="213" width="0.0205%" height="15" fill="rgb(212,68,40)" fg:x="38263" fg:w="14"/><text x="56.3888%" y="223.50"></text></g><g><title>canister_global_timer (17,795 instructions, 26.09%)</title><rect x="30.2038%" y="229" width="26.0886%" height="15" fill="rgb(254,125,32)" fg:x="20602" fg:w="17795"/><text x="30.4968%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="56.2923%" y="213" width="0.1774%" height="15" fill="rgb(253,97,22)" fg:x="38397" fg:w="121"/><text x="56.5853%" y="223.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="56.4697%" y="213" width="0.1906%" height="15" fill="rgb(241,101,14)" fg:x="38518" fg:w="130"/><text x="56.7627%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="56.6603%" y="213" width="0.2624%" height="15" fill="rgb(238,103,29)" fg:x="38648" fg:w="179"/><text x="56.9533%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="56.9227%" y="213" width="0.0880%" height="15" fill="rgb(233,195,47)" fg:x="38827" fg:w="60"/><text x="57.2157%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="57.0107%" y="197" width="0.1217%" height="15" fill="rgb(246,218,30)" fg:x="38887" fg:w="83"/><text x="57.3037%" y="207.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="57.1324%" y="197" width="0.1906%" height="15" fill="rgb(219,145,47)" fg:x="38970" fg:w="130"/><text x="57.4254%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="57.3230%" y="197" width="0.2624%" height="15" fill="rgb(243,12,26)" fg:x="39100" fg:w="179"/><text x="57.6159%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="57.5854%" y="197" width="0.0880%" height="15" fill="rgb(214,87,16)" fg:x="39279" fg:w="60"/><text x="57.8784%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.33%)</title><rect x="57.0107%" y="213" width="2.3340%" height="15" fill="rgb(208,99,42)" fg:x="38887" fg:w="1592"/><text x="57.3037%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 0.99%)</title><rect x="59.3447%" y="213" width="0.9896%" height="15" fill="rgb(253,99,2)" fg:x="40479" fg:w="675"/><text x="59.6376%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="60.3343%" y="213" width="0.1129%" height="15" fill="rgb(220,168,23)" fg:x="41154" fg:w="77"/><text x="60.6272%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="60.4471%" y="197" width="0.1202%" height="15" fill="rgb(242,38,24)" fg:x="41231" fg:w="82"/><text x="60.7401%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="60.5674%" y="197" width="0.6451%" height="15" fill="rgb(225,182,9)" fg:x="41313" fg:w="440"/><text x="60.8603%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="61.2124%" y="197" width="0.1393%" height="15" fill="rgb(243,178,37)" fg:x="41753" fg:w="95"/><text x="61.5054%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.3517%" y="197" width="0.0880%" height="15" fill="rgb(232,139,19)" fg:x="41848" fg:w="60"/><text x="61.6447%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.4397%" y="197" width="0.0880%" height="15" fill="rgb(225,201,24)" fg:x="41908" fg:w="60"/><text x="61.7326%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.5276%" y="197" width="0.0880%" height="15" fill="rgb(221,47,46)" fg:x="41968" fg:w="60"/><text x="61.8206%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.6156%" y="197" width="0.0880%" height="15" fill="rgb(249,23,13)" fg:x="42028" fg:w="60"/><text x="61.9086%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="61.7036%" y="197" width="0.1202%" height="15" fill="rgb(219,9,5)" fg:x="42088" fg:w="82"/><text x="61.9965%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="61.8238%" y="197" width="0.1026%" height="15" fill="rgb(254,171,16)" fg:x="42170" fg:w="70"/><text x="62.1167%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="61.9264%" y="197" width="0.6451%" height="15" fill="rgb(230,171,20)" fg:x="42240" fg:w="440"/><text x="62.2194%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="62.5715%" y="197" width="0.0279%" height="15" fill="rgb(210,71,41)" fg:x="42680" fg:w="19"/><text x="62.8644%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="62.5993%" y="181" width="0.1334%" height="15" fill="rgb(206,173,20)" fg:x="42699" fg:w="91"/><text x="62.8923%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="62.7327%" y="149" width="0.0982%" height="15" fill="rgb(233,88,34)" fg:x="42790" fg:w="67"/><text x="63.0257%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="62.7327%" y="165" width="0.1437%" height="15" fill="rgb(223,209,46)" fg:x="42790" fg:w="98"/><text x="63.0257%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="62.8764%" y="117" width="0.0161%" height="15" fill="rgb(250,43,18)" fg:x="42888" fg:w="11"/><text x="63.1694%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="62.8925%" y="101" width="0.0513%" height="15" fill="rgb(208,13,10)" fg:x="42899" fg:w="35"/><text x="63.1855%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="62.8925%" y="117" width="0.0968%" height="15" fill="rgb(212,200,36)" fg:x="42899" fg:w="66"/><text x="63.1855%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="62.8764%" y="133" width="0.2155%" height="15" fill="rgb(225,90,30)" fg:x="42888" fg:w="147"/><text x="63.1694%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="62.8764%" y="149" width="0.3108%" height="15" fill="rgb(236,182,39)" fg:x="42888" fg:w="212"/><text x="63.1694%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="62.8764%" y="165" width="0.3255%" height="15" fill="rgb(212,144,35)" fg:x="42888" fg:w="222"/><text x="63.1694%" y="175.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="62.7327%" y="181" width="0.6759%" height="15" fill="rgb(228,63,44)" fg:x="42790" fg:w="461"/><text x="63.0257%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="62.5993%" y="197" width="1.0218%" height="15" fill="rgb(228,109,6)" fg:x="42699" fg:w="697"/><text x="62.8923%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="63.6212%" y="197" width="0.1393%" height="15" fill="rgb(238,117,24)" fg:x="43396" fg:w="95"/><text x="63.9141%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="63.7604%" y="197" width="0.0924%" height="15" fill="rgb(242,26,26)" fg:x="43491" fg:w="63"/><text x="64.0534%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="63.8528%" y="197" width="0.1114%" height="15" fill="rgb(221,92,48)" fg:x="43554" fg:w="76"/><text x="64.1458%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="63.9642%" y="197" width="0.1026%" height="15" fill="rgb(209,209,32)" fg:x="43630" fg:w="70"/><text x="64.2572%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="64.0669%" y="181" width="0.6451%" height="15" fill="rgb(221,70,22)" fg:x="43700" fg:w="440"/><text x="64.3598%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.7119%" y="181" width="0.0279%" height="15" fill="rgb(248,145,5)" fg:x="44140" fg:w="19"/><text x="65.0049%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="64.7398%" y="165" width="0.1334%" height="15" fill="rgb(226,116,26)" fg:x="44159" fg:w="91"/><text x="65.0327%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="64.8732%" y="133" width="0.0982%" height="15" fill="rgb(244,5,17)" fg:x="44250" fg:w="67"/><text x="65.1662%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="64.8732%" y="149" width="0.1437%" height="15" fill="rgb(252,159,33)" fg:x="44250" fg:w="98"/><text x="65.1662%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="65.0169%" y="101" width="0.0161%" height="15" fill="rgb(206,71,0)" fg:x="44348" fg:w="11"/><text x="65.3098%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="65.0330%" y="85" width="0.0513%" height="15" fill="rgb(233,118,54)" fg:x="44359" fg:w="35"/><text x="65.3260%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="65.0330%" y="101" width="0.0968%" height="15" fill="rgb(234,83,48)" fg:x="44359" fg:w="66"/><text x="65.3260%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="65.0169%" y="117" width="0.2155%" height="15" fill="rgb(228,3,54)" fg:x="44348" fg:w="147"/><text x="65.3098%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="65.0169%" y="133" width="0.3108%" height="15" fill="rgb(226,155,13)" fg:x="44348" fg:w="212"/><text x="65.3098%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="65.0169%" y="149" width="0.3255%" height="15" fill="rgb(241,28,37)" fg:x="44348" fg:w="222"/><text x="65.3098%" y="159.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="64.8732%" y="165" width="0.6759%" height="15" fill="rgb(233,93,10)" fg:x="44250" fg:w="461"/><text x="65.1662%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.02%)</title><rect x="64.7398%" y="181" width="1.0218%" height="15" fill="rgb(225,113,19)" fg:x="44159" fg:w="697"/><text x="65.0327%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="65.7616%" y="181" width="0.1393%" height="15" fill="rgb(241,2,18)" fg:x="44856" fg:w="95"/><text x="66.0546%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="65.9009%" y="181" width="0.0924%" height="15" fill="rgb(228,207,21)" fg:x="44951" fg:w="63"/><text x="66.1939%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="65.9933%" y="165" width="0.1202%" height="15" fill="rgb(213,211,35)" fg:x="45014" fg:w="82"/><text x="66.2862%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="66.1135%" y="165" width="0.1393%" height="15" fill="rgb(209,83,10)" fg:x="45096" fg:w="95"/><text x="66.4064%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.2527%" y="165" width="0.1114%" height="15" fill="rgb(209,164,1)" fg:x="45191" fg:w="76"/><text x="66.5457%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="65.9933%" y="181" width="0.4838%" height="15" fill="rgb(213,184,43)" fg:x="45014" fg:w="330"/><text x="66.2862%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.4771%" y="181" width="0.1334%" height="15" fill="rgb(231,61,34)" fg:x="45344" fg:w="91"/><text x="66.7700%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,980 instructions, 2.90%)</title><rect x="64.0669%" y="197" width="2.9028%" height="15" fill="rgb(235,75,3)" fg:x="43700" fg:w="1980"/><text x="64.3598%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.9697%" y="197" width="0.1114%" height="15" fill="rgb(220,106,47)" fg:x="45680" fg:w="76"/><text x="67.2626%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="67.0811%" y="197" width="0.0220%" height="15" fill="rgb(210,196,33)" fg:x="45756" fg:w="15"/><text x="67.3740%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="67.1031%" y="197" width="0.0220%" height="15" fill="rgb(229,154,42)" fg:x="45771" fg:w="15"/><text x="67.3960%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="67.1251%" y="197" width="0.0132%" height="15" fill="rgb(228,114,26)" fg:x="45786" fg:w="9"/><text x="67.4180%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="67.1382%" y="197" width="0.0264%" height="15" fill="rgb(208,144,1)" fg:x="45795" fg:w="18"/><text x="67.4312%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.1646%" y="181" width="0.1334%" height="15" fill="rgb(239,112,37)" fg:x="45813" fg:w="91"/><text x="67.4576%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="67.1646%" y="197" width="0.2742%" height="15" fill="rgb(210,96,50)" fg:x="45813" fg:w="187"/><text x="67.4576%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.4388%" y="165" width="0.1334%" height="15" fill="rgb(222,178,2)" fg:x="46000" fg:w="91"/><text x="67.7318%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="67.4388%" y="181" width="0.1965%" height="15" fill="rgb(226,74,18)" fg:x="46000" fg:w="134"/><text x="67.7318%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.32%)</title><rect x="67.4388%" y="197" width="0.3167%" height="15" fill="rgb(225,67,54)" fg:x="46000" fg:w="216"/><text x="67.7318%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.7555%" y="197" width="0.1334%" height="15" fill="rgb(251,92,32)" fg:x="46216" fg:w="91"/><text x="68.0484%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="67.8889%" y="197" width="0.1261%" height="15" fill="rgb(228,149,22)" fg:x="46307" fg:w="86"/><text x="68.1818%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="68.0150%" y="197" width="0.1334%" height="15" fill="rgb(243,54,13)" fg:x="46393" fg:w="91"/><text x="68.3079%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="68.1484%" y="197" width="0.1334%" height="15" fill="rgb(243,180,28)" fg:x="46484" fg:w="91"/><text x="68.4413%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="68.2876%" y="197" width="0.1261%" height="15" fill="rgb(208,167,24)" fg:x="46579" fg:w="86"/><text x="68.5806%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="68.4137%" y="197" width="0.6275%" height="15" fill="rgb(245,73,45)" fg:x="46665" fg:w="428"/><text x="68.7067%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="69.0412%" y="197" width="0.6275%" height="15" fill="rgb(237,203,48)" fg:x="47093" fg:w="428"/><text x="69.3342%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,437 instructions, 10.90%)</title><rect x="60.4471%" y="213" width="10.9031%" height="15" fill="rgb(211,197,16)" fg:x="41231" fg:w="7437"/><text x="60.7401%" y="223.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="71.3502%" y="213" width="0.5571%" height="15" fill="rgb(243,99,51)" fg:x="48668" fg:w="380"/><text x="71.6432%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="71.9073%" y="181" width="0.0205%" height="15" fill="rgb(215,123,29)" fg:x="49048" fg:w="14"/><text x="72.2003%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="71.9279%" y="165" width="0.0865%" height="15" fill="rgb(239,186,37)" fg:x="49062" fg:w="59"/><text x="72.2208%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="72.0144%" y="165" width="0.1378%" height="15" fill="rgb(252,136,39)" fg:x="49121" fg:w="94"/><text x="72.3073%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="72.1522%" y="165" width="0.2536%" height="15" fill="rgb(223,213,32)" fg:x="49215" fg:w="173"/><text x="72.4451%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="71.9279%" y="181" width="0.8488%" height="15" fill="rgb(233,115,5)" fg:x="49062" fg:w="579"/><text x="72.2208%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="72.7767%" y="181" width="0.1129%" height="15" fill="rgb(207,226,44)" fg:x="49641" fg:w="77"/><text x="73.0697%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.25%)</title><rect x="71.9073%" y="197" width="1.2520%" height="15" fill="rgb(208,126,0)" fg:x="49048" fg:w="854"/><text x="72.2003%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (898 instructions, 1.32%)</title><rect x="71.9073%" y="213" width="1.3165%" height="15" fill="rgb(244,66,21)" fg:x="49048" fg:w="898"/><text x="72.2003%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="73.2239%" y="213" width="0.0777%" height="15" fill="rgb(222,97,12)" fg:x="49946" fg:w="53"/><text x="73.5168%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.3016%" y="197" width="0.0924%" height="15" fill="rgb(219,213,19)" fg:x="49999" fg:w="63"/><text x="73.5945%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.4452%" y="197" width="0.0924%" height="15" fill="rgb(252,169,30)" fg:x="50097" fg:w="63"/><text x="73.7382%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.29%)</title><rect x="73.3016%" y="213" width="0.2873%" height="15" fill="rgb(206,32,51)" fg:x="49999" fg:w="196"/><text x="73.5945%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="73.5889%" y="197" width="0.0498%" height="15" fill="rgb(250,172,42)" fg:x="50195" fg:w="34"/><text x="73.8819%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="73.5889%" y="213" width="0.1774%" height="15" fill="rgb(209,34,43)" fg:x="50195" fg:w="121"/><text x="73.8819%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.7663%" y="213" width="0.0191%" height="15" fill="rgb(223,11,35)" fg:x="50316" fg:w="13"/><text x="74.0593%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.7854%" y="213" width="0.0191%" height="15" fill="rgb(251,219,26)" fg:x="50329" fg:w="13"/><text x="74.0783%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.8044%" y="213" width="0.0191%" height="15" fill="rgb(231,119,3)" fg:x="50342" fg:w="13"/><text x="74.0974%" y="223.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="73.8235%" y="213" width="0.6451%" height="15" fill="rgb(216,97,11)" fg:x="50355" fg:w="440"/><text x="74.1165%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="74.4686%" y="181" width="0.0279%" height="15" fill="rgb(223,59,9)" fg:x="50795" fg:w="19"/><text x="74.7615%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.16%)</title><rect x="74.4964%" y="181" width="0.1642%" height="15" fill="rgb(233,93,31)" fg:x="50814" fg:w="112"/><text x="74.7894%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.16%)</title><rect x="74.6606%" y="165" width="0.1642%" height="15" fill="rgb(239,81,33)" fg:x="50926" fg:w="112"/><text x="74.9536%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (147 instructions, 0.22%)</title><rect x="74.6606%" y="181" width="0.2155%" height="15" fill="rgb(213,120,34)" fg:x="50926" fg:w="147"/><text x="74.9536%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="74.8761%" y="181" width="0.0191%" height="15" fill="rgb(243,49,53)" fg:x="51073" fg:w="13"/><text x="75.1691%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (353 instructions, 0.52%)</title><rect x="74.4686%" y="197" width="0.5175%" height="15" fill="rgb(247,216,33)" fg:x="50795" fg:w="353"/><text x="74.7615%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (402 instructions, 0.59%)</title><rect x="74.4686%" y="213" width="0.5894%" height="15" fill="rgb(226,26,14)" fg:x="50795" fg:w="402"/><text x="74.7615%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="75.0579%" y="213" width="0.1261%" height="15" fill="rgb(215,49,53)" fg:x="51197" fg:w="86"/><text x="75.3509%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="75.1869%" y="197" width="0.0205%" height="15" fill="rgb(245,162,40)" fg:x="51285" fg:w="14"/><text x="75.4799%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="75.2074%" y="181" width="0.1261%" height="15" fill="rgb(229,68,17)" fg:x="51299" fg:w="86"/><text x="75.5004%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.18%)</title><rect x="75.2074%" y="197" width="0.1774%" height="15" fill="rgb(213,182,10)" fg:x="51299" fg:w="121"/><text x="75.5004%" y="207.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="75.3848%" y="197" width="0.2228%" height="15" fill="rgb(245,125,30)" fg:x="51420" fg:w="152"/><text x="75.6778%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (467 instructions, 0.68%)</title><rect x="75.1869%" y="213" width="0.6847%" height="15" fill="rgb(232,202,2)" fg:x="51285" fg:w="467"/><text x="75.4799%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="75.8716%" y="213" width="0.7594%" height="15" fill="rgb(237,140,51)" fg:x="51752" fg:w="518"/><text x="76.1645%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.18%)</title><rect x="76.6310%" y="165" width="0.1774%" height="15" fill="rgb(236,157,25)" fg:x="52270" fg:w="121"/><text x="76.9240%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.24%)</title><rect x="76.6310%" y="181" width="0.2404%" height="15" fill="rgb(219,209,0)" fg:x="52270" fg:w="164"/><text x="76.9240%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.36%)</title><rect x="76.6310%" y="197" width="0.3563%" height="15" fill="rgb(240,116,54)" fg:x="52270" fg:w="243"/><text x="76.9240%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.9872%" y="197" width="0.0220%" height="15" fill="rgb(216,10,36)" fg:x="52513" fg:w="15"/><text x="77.2802%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="77.0092%" y="197" width="0.0220%" height="15" fill="rgb(222,72,44)" fg:x="52528" fg:w="15"/><text x="77.3022%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (461 instructions, 0.68%)</title><rect x="76.6310%" y="213" width="0.6759%" height="15" fill="rgb(232,159,9)" fg:x="52270" fg:w="461"/><text x="76.9240%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="77.3068%" y="213" width="0.7565%" height="15" fill="rgb(210,39,32)" fg:x="52731" fg:w="516"/><text x="77.5998%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="78.0633%" y="213" width="0.0103%" height="15" fill="rgb(216,194,45)" fg:x="53247" fg:w="7"/><text x="78.3563%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="78.0824%" y="197" width="0.0880%" height="15" fill="rgb(218,18,35)" fg:x="53260" fg:w="60"/><text x="78.3754%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (132 instructions, 0.19%)</title><rect x="78.0736%" y="213" width="0.1935%" height="15" fill="rgb(207,83,51)" fg:x="53254" fg:w="132"/><text x="78.3666%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (18,290 instructions, 26.81%)</title><rect x="56.2923%" y="229" width="26.8143%" height="15" fill="rgb(225,63,43)" fg:x="38397" fg:w="18290"/><text x="56.5853%" y="239.50">canister_update &lt;ic-cdk internal&gt; ti..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="83.1066%" y="213" width="0.1217%" height="15" fill="rgb(207,57,36)" fg:x="56687" fg:w="83"/><text x="83.3996%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="83.2283%" y="165" width="0.0308%" height="15" fill="rgb(216,99,33)" fg:x="56770" fg:w="21"/><text x="83.5212%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="83.2591%" y="149" width="0.1202%" height="15" fill="rgb(225,42,16)" fg:x="56791" fg:w="82"/><text x="83.5520%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="83.3793%" y="149" width="0.6451%" height="15" fill="rgb(220,201,45)" fg:x="56873" fg:w="440"/><text x="83.6722%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="84.0243%" y="149" width="0.1393%" height="15" fill="rgb(225,33,4)" fg:x="57313" fg:w="95"/><text x="84.3173%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.1636%" y="149" width="0.0880%" height="15" fill="rgb(224,33,50)" fg:x="57408" fg:w="60"/><text x="84.4566%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.2516%" y="149" width="0.0880%" height="15" fill="rgb(246,198,51)" fg:x="57468" fg:w="60"/><text x="84.5445%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.3395%" y="149" width="0.0880%" height="15" fill="rgb(205,22,4)" fg:x="57528" fg:w="60"/><text x="84.6325%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.4275%" y="149" width="0.0880%" height="15" fill="rgb(206,3,8)" fg:x="57588" fg:w="60"/><text x="84.7205%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="84.5155%" y="149" width="0.1202%" height="15" fill="rgb(251,23,15)" fg:x="57648" fg:w="82"/><text x="84.8084%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="84.6357%" y="149" width="0.1026%" height="15" fill="rgb(252,88,28)" fg:x="57730" fg:w="70"/><text x="84.9287%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="84.7383%" y="149" width="0.6451%" height="15" fill="rgb(212,127,14)" fg:x="57800" fg:w="440"/><text x="85.0313%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="85.3834%" y="149" width="0.0279%" height="15" fill="rgb(247,145,37)" fg:x="58240" fg:w="19"/><text x="85.6763%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="85.4112%" y="133" width="0.1129%" height="15" fill="rgb(209,117,53)" fg:x="58259" fg:w="77"/><text x="85.7042%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="85.5241%" y="101" width="0.0982%" height="15" fill="rgb(212,90,42)" fg:x="58336" fg:w="67"/><text x="85.8171%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="85.5241%" y="117" width="0.1437%" height="15" fill="rgb(218,164,37)" fg:x="58336" fg:w="98"/><text x="85.8171%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="85.6678%" y="69" width="0.0161%" height="15" fill="rgb(246,65,34)" fg:x="58434" fg:w="11"/><text x="85.9608%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="85.6839%" y="53" width="0.0513%" height="15" fill="rgb(231,100,33)" fg:x="58445" fg:w="35"/><text x="85.9769%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="85.6839%" y="69" width="0.0968%" height="15" fill="rgb(228,126,14)" fg:x="58445" fg:w="66"/><text x="85.9769%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="85.6678%" y="85" width="0.2155%" height="15" fill="rgb(215,173,21)" fg:x="58434" fg:w="147"/><text x="85.9608%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="85.6678%" y="101" width="0.3108%" height="15" fill="rgb(210,6,40)" fg:x="58434" fg:w="212"/><text x="85.9608%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="85.6678%" y="117" width="0.3255%" height="15" fill="rgb(212,48,18)" fg:x="58434" fg:w="222"/><text x="85.9608%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="85.5241%" y="133" width="0.6759%" height="15" fill="rgb(230,214,11)" fg:x="58336" fg:w="461"/><text x="85.8171%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (683 instructions, 1.00%)</title><rect x="85.4112%" y="149" width="1.0013%" height="15" fill="rgb(254,105,39)" fg:x="58259" fg:w="683"/><text x="85.7042%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="86.4125%" y="149" width="0.1393%" height="15" fill="rgb(245,158,5)" fg:x="58942" fg:w="95"/><text x="86.7055%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="86.5518%" y="149" width="0.1261%" height="15" fill="rgb(249,208,11)" fg:x="59037" fg:w="86"/><text x="86.8448%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="86.6779%" y="149" width="0.1114%" height="15" fill="rgb(210,39,28)" fg:x="59123" fg:w="76"/><text x="86.9709%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="86.7893%" y="149" width="0.1026%" height="15" fill="rgb(211,56,53)" fg:x="59199" fg:w="70"/><text x="87.0823%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.65%)</title><rect x="86.8920%" y="133" width="0.6451%" height="15" fill="rgb(226,201,30)" fg:x="59269" fg:w="440"/><text x="87.1849%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="87.5370%" y="133" width="0.0279%" height="15" fill="rgb(239,101,34)" fg:x="59709" fg:w="19"/><text x="87.8300%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="87.5649%" y="117" width="0.1202%" height="15" fill="rgb(226,209,5)" fg:x="59728" fg:w="82"/><text x="87.8578%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="87.6851%" y="85" width="0.0982%" height="15" fill="rgb(250,105,47)" fg:x="59810" fg:w="67"/><text x="87.9781%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="87.6851%" y="101" width="0.1437%" height="15" fill="rgb(230,72,3)" fg:x="59810" fg:w="98"/><text x="87.9781%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="87.8288%" y="53" width="0.0161%" height="15" fill="rgb(232,218,39)" fg:x="59908" fg:w="11"/><text x="88.1217%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="87.8449%" y="37" width="0.0513%" height="15" fill="rgb(248,166,6)" fg:x="59919" fg:w="35"/><text x="88.1379%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="87.8449%" y="53" width="0.0968%" height="15" fill="rgb(247,89,20)" fg:x="59919" fg:w="66"/><text x="88.1379%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.22%)</title><rect x="87.8288%" y="69" width="0.2155%" height="15" fill="rgb(248,130,54)" fg:x="59908" fg:w="147"/><text x="88.1217%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="87.8288%" y="85" width="0.3108%" height="15" fill="rgb(234,196,4)" fg:x="59908" fg:w="212"/><text x="88.1217%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.33%)</title><rect x="87.8288%" y="101" width="0.3255%" height="15" fill="rgb(250,143,31)" fg:x="59908" fg:w="222"/><text x="88.1217%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.68%)</title><rect x="87.6851%" y="117" width="0.6759%" height="15" fill="rgb(211,110,34)" fg:x="59810" fg:w="461"/><text x="87.9781%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 1.01%)</title><rect x="87.5649%" y="133" width="1.0086%" height="15" fill="rgb(215,124,48)" fg:x="59728" fg:w="688"/><text x="87.8578%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="88.5735%" y="133" width="0.1393%" height="15" fill="rgb(216,46,13)" fg:x="60416" fg:w="95"/><text x="88.8665%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="88.7128%" y="133" width="0.1261%" height="15" fill="rgb(205,184,25)" fg:x="60511" fg:w="86"/><text x="89.0058%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,517 instructions, 2.22%)</title><rect x="86.8920%" y="149" width="2.2240%" height="15" fill="rgb(228,1,10)" fg:x="59269" fg:w="1517"/><text x="87.1849%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="89.1160%" y="149" width="0.1114%" height="15" fill="rgb(213,116,27)" fg:x="60786" fg:w="76"/><text x="89.4089%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.2274%" y="149" width="0.0220%" height="15" fill="rgb(241,95,50)" fg:x="60862" fg:w="15"/><text x="89.5204%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.2494%" y="149" width="0.0220%" height="15" fill="rgb(238,48,32)" fg:x="60877" fg:w="15"/><text x="89.5423%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="89.2714%" y="149" width="0.0132%" height="15" fill="rgb(235,113,49)" fg:x="60892" fg:w="9"/><text x="89.5643%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="89.2846%" y="149" width="0.0264%" height="15" fill="rgb(205,127,43)" fg:x="60901" fg:w="18"/><text x="89.5775%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="89.3110%" y="149" width="0.1202%" height="15" fill="rgb(250,162,2)" fg:x="60919" fg:w="82"/><text x="89.6039%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="89.4312%" y="149" width="0.1334%" height="15" fill="rgb(220,13,41)" fg:x="61001" fg:w="91"/><text x="89.7241%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="89.5704%" y="149" width="0.6275%" height="15" fill="rgb(249,221,25)" fg:x="61096" fg:w="428"/><text x="89.8634%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="90.1979%" y="149" width="0.6275%" height="15" fill="rgb(215,208,19)" fg:x="61524" fg:w="428"/><text x="90.4909%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,133 instructions, 8.99%)</title><rect x="83.2591%" y="165" width="8.9914%" height="15" fill="rgb(236,175,2)" fg:x="56791" fg:w="6133"/><text x="83.5520%" y="175.50">candid::de:..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="92.2504%" y="165" width="0.5571%" height="15" fill="rgb(241,52,2)" fg:x="62924" fg:w="380"/><text x="92.5434%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="92.8075%" y="133" width="0.0279%" height="15" fill="rgb(248,140,14)" fg:x="63304" fg:w="19"/><text x="93.1005%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="92.8354%" y="117" width="0.1261%" height="15" fill="rgb(253,22,42)" fg:x="63323" fg:w="86"/><text x="93.1283%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="93.0128%" y="117" width="0.0924%" height="15" fill="rgb(234,61,47)" fg:x="63444" fg:w="63"/><text x="93.3057%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (219 instructions, 0.32%)</title><rect x="92.8354%" y="133" width="0.3211%" height="15" fill="rgb(208,226,15)" fg:x="63323" fg:w="219"/><text x="93.1283%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (293 instructions, 0.43%)</title><rect x="92.8075%" y="149" width="0.4296%" height="15" fill="rgb(217,221,4)" fg:x="63304" fg:w="293"/><text x="93.1005%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (342 instructions, 0.50%)</title><rect x="92.8075%" y="165" width="0.5014%" height="15" fill="rgb(212,174,34)" fg:x="63304" fg:w="342"/><text x="93.1005%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="93.3089%" y="165" width="0.1935%" height="15" fill="rgb(253,83,4)" fg:x="63646" fg:w="132"/><text x="93.6019%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (143 instructions, 0.21%)</title><rect x="93.5024%" y="165" width="0.2096%" height="15" fill="rgb(250,195,49)" fg:x="63778" fg:w="143"/><text x="93.7954%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (56 instructions, 0.08%)</title><rect x="93.7121%" y="165" width="0.0821%" height="15" fill="rgb(241,192,25)" fg:x="63921" fg:w="56"/><text x="94.0050%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="93.7942%" y="165" width="0.0264%" height="15" fill="rgb(208,124,10)" fg:x="63977" fg:w="18"/><text x="94.0871%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,091 instructions, 11.86%)</title><rect x="83.2283%" y="181" width="11.8619%" height="15" fill="rgb(222,33,0)" fg:x="56770" fg:w="8091"/><text x="83.5212%" y="191.50">ic_cdk_timers::..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="95.0902%" y="181" width="0.0205%" height="15" fill="rgb(234,209,28)" fg:x="64861" fg:w="14"/><text x="95.3831%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,217 instructions, 12.05%)</title><rect x="83.2283%" y="197" width="12.0466%" height="15" fill="rgb(224,11,23)" fg:x="56770" fg:w="8217"/><text x="83.5212%" y="207.50">ic_cdk::futures..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="95.2749%" y="165" width="0.0103%" height="15" fill="rgb(232,99,1)" fg:x="64987" fg:w="7"/><text x="95.5679%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="95.2851%" y="165" width="0.1261%" height="15" fill="rgb(237,95,45)" fg:x="64994" fg:w="86"/><text x="95.5781%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="95.4112%" y="165" width="0.1231%" height="15" fill="rgb(208,109,11)" fg:x="65080" fg:w="84"/><text x="95.7042%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (237 instructions, 0.35%)</title><rect x="95.2749%" y="181" width="0.3475%" height="15" fill="rgb(216,190,48)" fg:x="64987" fg:w="237"/><text x="95.5679%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.13%)</title><rect x="95.6223%" y="165" width="0.1261%" height="15" fill="rgb(251,171,36)" fg:x="65224" fg:w="86"/><text x="95.9153%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (132 instructions, 0.19%)</title><rect x="95.6223%" y="181" width="0.1935%" height="15" fill="rgb(230,62,22)" fg:x="65224" fg:w="132"/><text x="95.9153%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (133 instructions, 0.19%)</title><rect x="95.9625%" y="181" width="0.1950%" height="15" fill="rgb(225,114,35)" fg:x="65456" fg:w="133"/><text x="96.2554%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.27%)</title><rect x="96.1575%" y="181" width="0.2654%" height="15" fill="rgb(215,118,42)" fg:x="65589" fg:w="181"/><text x="96.4504%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (848 instructions, 1.24%)</title><rect x="95.2749%" y="197" width="1.2432%" height="15" fill="rgb(243,119,21)" fg:x="64987" fg:w="848"/><text x="95.5679%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,240 instructions, 13.55%)</title><rect x="83.2283%" y="213" width="13.5464%" height="15" fill="rgb(252,177,53)" fg:x="56770" fg:w="9240"/><text x="83.5212%" y="223.50">futures_task::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="96.9726%" y="181" width="0.0982%" height="15" fill="rgb(237,209,29)" fg:x="66145" fg:w="67"/><text x="97.2656%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (365 instructions, 0.54%)</title><rect x="96.7747%" y="197" width="0.5351%" height="15" fill="rgb(212,65,23)" fg:x="66010" fg:w="365"/><text x="97.0676%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (428 instructions, 0.63%)</title><rect x="96.7747%" y="213" width="0.6275%" height="15" fill="rgb(230,222,46)" fg:x="66010" fg:w="428"/><text x="97.0676%" y="223.50"></text></g><g><title>all (68,210 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(215,135,32)" fg:x="0" fg:w="68210"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (11,523 instructions, 16.89%)</title><rect x="83.1066%" y="229" width="16.8934%" height="15" fill="rgb(246,101,22)" fg:x="56687" fg:w="11523"/><text x="83.3996%" y="239.50">ic_cdk::api::call::cal..</text></g></svg></svg>