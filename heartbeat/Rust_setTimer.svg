<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="64790"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (688 instructions, 1.06%)</title><rect x="0.0000%" y="229" width="1.0619%" height="15" fill="rgb(230,62,22)" fg:x="0" fg:w="688"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="1.0619%" y="229" width="0.1405%" height="15" fill="rgb(225,114,35)" fg:x="688" fg:w="91"/><text x="1.3549%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="1.2023%" y="197" width="0.1405%" height="15" fill="rgb(215,118,42)" fg:x="779" fg:w="91"/><text x="1.4953%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,152 instructions, 1.78%)</title><rect x="1.2023%" y="213" width="1.7781%" height="15" fill="rgb(243,119,21)" fg:x="779" fg:w="1152"/><text x="1.4953%" y="223.50"></text></g><g><title>std::sys::sync::once::no_threads::Once::call (44 instructions, 0.07%)</title><rect x="2.9804%" y="181" width="0.0679%" height="15" fill="rgb(252,177,53)" fg:x="1931" fg:w="44"/><text x="3.2734%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (111 instructions, 0.17%)</title><rect x="2.9804%" y="197" width="0.1713%" height="15" fill="rgb(237,209,29)" fg:x="1931" fg:w="111"/><text x="3.2734%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="3.1517%" y="197" width="0.6745%" height="15" fill="rgb(212,65,23)" fg:x="2042" fg:w="437"/><text x="3.4447%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="3.8262%" y="197" width="0.0988%" height="15" fill="rgb(230,222,46)" fg:x="2479" fg:w="64"/><text x="4.1192%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="3.9250%" y="197" width="0.1173%" height="15" fill="rgb(215,135,32)" fg:x="2543" fg:w="76"/><text x="4.2180%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="4.0423%" y="197" width="0.1173%" height="15" fill="rgb(246,101,22)" fg:x="2619" fg:w="76"/><text x="4.3353%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="4.1596%" y="197" width="0.1173%" height="15" fill="rgb(206,107,13)" fg:x="2695" fg:w="76"/><text x="4.4526%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="4.2769%" y="197" width="0.1173%" height="15" fill="rgb(250,100,44)" fg:x="2771" fg:w="76"/><text x="4.5699%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="4.3942%" y="197" width="0.0787%" height="15" fill="rgb(231,147,38)" fg:x="2847" fg:w="51"/><text x="4.6872%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="4.4729%" y="197" width="0.1466%" height="15" fill="rgb(229,8,40)" fg:x="2898" fg:w="95"/><text x="4.7659%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="4.6195%" y="197" width="0.6745%" height="15" fill="rgb(221,135,30)" fg:x="2993" fg:w="437"/><text x="4.9125%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.2940%" y="197" width="0.0293%" height="15" fill="rgb(249,193,18)" fg:x="3430" fg:w="19"/><text x="5.5870%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="5.3234%" y="165" width="0.1405%" height="15" fill="rgb(209,133,39)" fg:x="3449" fg:w="91"/><text x="5.6163%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.4638%" y="133" width="0.1034%" height="15" fill="rgb(232,100,14)" fg:x="3540" fg:w="67"/><text x="5.7568%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="5.4638%" y="149" width="0.1482%" height="15" fill="rgb(224,185,1)" fg:x="3540" fg:w="96"/><text x="5.7568%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="5.6120%" y="101" width="0.0170%" height="15" fill="rgb(223,139,8)" fg:x="3636" fg:w="11"/><text x="5.9049%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="5.6290%" y="85" width="0.0540%" height="15" fill="rgb(232,213,38)" fg:x="3647" fg:w="35"/><text x="5.9219%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="5.6290%" y="101" width="0.0988%" height="15" fill="rgb(207,94,22)" fg:x="3647" fg:w="64"/><text x="5.9219%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="5.6120%" y="117" width="0.2223%" height="15" fill="rgb(219,183,54)" fg:x="3636" fg:w="144"/><text x="5.9049%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="5.6120%" y="133" width="0.3241%" height="15" fill="rgb(216,185,54)" fg:x="3636" fg:w="210"/><text x="5.9049%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="5.6120%" y="149" width="0.3396%" height="15" fill="rgb(254,217,39)" fg:x="3636" fg:w="220"/><text x="5.9049%" y="159.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="5.4638%" y="165" width="0.6930%" height="15" fill="rgb(240,178,23)" fg:x="3540" fg:w="449"/><text x="5.7568%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.04%)</title><rect x="5.3234%" y="181" width="1.0434%" height="15" fill="rgb(218,11,47)" fg:x="3449" fg:w="676"/><text x="5.6163%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="6.3667%" y="181" width="0.0988%" height="15" fill="rgb(218,51,51)" fg:x="4125" fg:w="64"/><text x="6.6597%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="6.4655%" y="181" width="0.0957%" height="15" fill="rgb(238,126,27)" fg:x="4189" fg:w="62"/><text x="6.7585%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 1.41%)</title><rect x="5.3234%" y="197" width="1.4092%" height="15" fill="rgb(249,202,22)" fg:x="3449" fg:w="913"/><text x="5.6163%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.04%)</title><rect x="6.7325%" y="197" width="0.0417%" height="15" fill="rgb(254,195,49)" fg:x="4362" fg:w="27"/><text x="7.0255%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="6.7742%" y="197" width="0.0710%" height="15" fill="rgb(208,123,14)" fg:x="4389" fg:w="46"/><text x="7.0672%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="6.8452%" y="197" width="0.1466%" height="15" fill="rgb(224,200,8)" fg:x="4435" fg:w="95"/><text x="7.1382%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="6.9918%" y="181" width="0.6745%" height="15" fill="rgb(217,61,36)" fg:x="4530" fg:w="437"/><text x="7.2848%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="7.6663%" y="181" width="0.0293%" height="15" fill="rgb(206,35,45)" fg:x="4967" fg:w="19"/><text x="7.9593%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="7.6956%" y="149" width="0.1405%" height="15" fill="rgb(217,65,33)" fg:x="4986" fg:w="91"/><text x="7.9886%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="7.8361%" y="117" width="0.1034%" height="15" fill="rgb(222,158,48)" fg:x="5077" fg:w="67"/><text x="8.1291%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="7.8361%" y="133" width="0.1482%" height="15" fill="rgb(254,2,54)" fg:x="5077" fg:w="96"/><text x="8.1291%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="7.9843%" y="85" width="0.0170%" height="15" fill="rgb(250,143,38)" fg:x="5173" fg:w="11"/><text x="8.2772%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="8.0012%" y="69" width="0.0540%" height="15" fill="rgb(248,25,0)" fg:x="5184" fg:w="35"/><text x="8.2942%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="8.0012%" y="85" width="0.0988%" height="15" fill="rgb(206,152,27)" fg:x="5184" fg:w="64"/><text x="8.2942%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="7.9843%" y="101" width="0.2223%" height="15" fill="rgb(240,77,30)" fg:x="5173" fg:w="144"/><text x="8.2772%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="7.9843%" y="117" width="0.3241%" height="15" fill="rgb(231,5,3)" fg:x="5173" fg:w="210"/><text x="8.2772%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="7.9843%" y="133" width="0.3396%" height="15" fill="rgb(207,226,32)" fg:x="5173" fg:w="220"/><text x="8.2772%" y="143.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="7.8361%" y="149" width="0.6930%" height="15" fill="rgb(222,207,47)" fg:x="5077" fg:w="449"/><text x="8.1291%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.04%)</title><rect x="7.6956%" y="165" width="1.0434%" height="15" fill="rgb(229,115,45)" fg:x="4986" fg:w="676"/><text x="7.9886%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="8.7390%" y="165" width="0.0988%" height="15" fill="rgb(224,191,6)" fg:x="5662" fg:w="64"/><text x="9.0320%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="8.8378%" y="165" width="0.0957%" height="15" fill="rgb(230,227,24)" fg:x="5726" fg:w="62"/><text x="9.1308%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 1.41%)</title><rect x="7.6956%" y="181" width="1.4092%" height="15" fill="rgb(228,80,19)" fg:x="4986" fg:w="913"/><text x="7.9886%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="9.1048%" y="165" width="0.0787%" height="15" fill="rgb(247,229,0)" fg:x="5899" fg:w="51"/><text x="9.3978%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.18%)</title><rect x="9.1835%" y="165" width="0.1821%" height="15" fill="rgb(237,194,15)" fg:x="5950" fg:w="118"/><text x="9.4765%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="9.3656%" y="165" width="0.0710%" height="15" fill="rgb(219,203,20)" fg:x="6068" fg:w="46"/><text x="9.6586%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.44%)</title><rect x="9.1048%" y="181" width="0.4368%" height="15" fill="rgb(234,128,8)" fg:x="5899" fg:w="283"/><text x="9.3978%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="9.5416%" y="181" width="0.1405%" height="15" fill="rgb(248,202,8)" fg:x="6182" fg:w="91"/><text x="9.8346%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,929 instructions, 2.98%)</title><rect x="6.9918%" y="197" width="2.9773%" height="15" fill="rgb(206,104,37)" fg:x="4530" fg:w="1929"/><text x="7.2848%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="9.9691%" y="197" width="0.0710%" height="15" fill="rgb(223,8,27)" fg:x="6459" fg:w="46"/><text x="10.2621%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="10.0401%" y="197" width="0.0232%" height="15" fill="rgb(216,217,28)" fg:x="6505" fg:w="15"/><text x="10.3331%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="10.0633%" y="197" width="0.0123%" height="15" fill="rgb(249,199,1)" fg:x="6520" fg:w="8"/><text x="10.3563%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="10.0756%" y="181" width="0.1405%" height="15" fill="rgb(240,85,17)" fg:x="6528" fg:w="91"/><text x="10.3686%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.29%)</title><rect x="10.0756%" y="197" width="0.2886%" height="15" fill="rgb(206,108,45)" fg:x="6528" fg:w="187"/><text x="10.3686%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="10.3643%" y="165" width="0.1405%" height="15" fill="rgb(245,210,41)" fg:x="6715" fg:w="91"/><text x="10.6572%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.20%)</title><rect x="10.3643%" y="181" width="0.2037%" height="15" fill="rgb(206,13,37)" fg:x="6715" fg:w="132"/><text x="10.6572%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (219 instructions, 0.34%)</title><rect x="10.3643%" y="197" width="0.3380%" height="15" fill="rgb(250,61,18)" fg:x="6715" fg:w="219"/><text x="10.6572%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="10.7023%" y="197" width="0.1405%" height="15" fill="rgb(235,172,48)" fg:x="6934" fg:w="91"/><text x="10.9952%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="10.8427%" y="197" width="0.1374%" height="15" fill="rgb(249,201,17)" fg:x="7025" fg:w="89"/><text x="11.1357%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="10.9801%" y="197" width="0.1405%" height="15" fill="rgb(219,208,6)" fg:x="7114" fg:w="91"/><text x="11.2731%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="11.1205%" y="197" width="0.1405%" height="15" fill="rgb(248,31,23)" fg:x="7205" fg:w="91"/><text x="11.4135%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="11.2687%" y="197" width="0.1374%" height="15" fill="rgb(245,15,42)" fg:x="7301" fg:w="89"/><text x="11.5617%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="11.4061%" y="197" width="0.6050%" height="15" fill="rgb(222,217,39)" fg:x="7390" fg:w="392"/><text x="11.6990%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="12.0111%" y="197" width="0.6050%" height="15" fill="rgb(210,219,27)" fg:x="7782" fg:w="392"/><text x="12.3041%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.78%)</title><rect x="12.6161%" y="197" width="0.7779%" height="15" fill="rgb(252,166,36)" fg:x="8174" fg:w="504"/><text x="12.9091%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,992 instructions, 12.34%)</title><rect x="2.9804%" y="213" width="12.3352%" height="15" fill="rgb(245,132,34)" fg:x="1931" fg:w="7992"/><text x="3.2734%" y="223.50">candid::de::IDL..</text></g><g><title>memcpy (344 instructions, 0.53%)</title><rect x="15.3156%" y="213" width="0.5309%" height="15" fill="rgb(236,54,3)" fg:x="9923" fg:w="344"/><text x="15.6086%" y="223.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.04%)</title><rect x="15.8466%" y="213" width="0.0370%" height="15" fill="rgb(241,173,43)" fg:x="10267" fg:w="24"/><text x="16.1396%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="15.8836%" y="213" width="0.1405%" height="15" fill="rgb(215,190,9)" fg:x="10291" fg:w="91"/><text x="16.1766%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="16.0241%" y="197" width="0.1405%" height="15" fill="rgb(242,101,16)" fg:x="10382" fg:w="91"/><text x="16.3170%" y="207.50"></text></g><g><title>candid::types::internal::env_add (175 instructions, 0.27%)</title><rect x="16.0241%" y="213" width="0.2701%" height="15" fill="rgb(223,190,21)" fg:x="10382" fg:w="175"/><text x="16.3170%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="16.2942%" y="213" width="0.1405%" height="15" fill="rgb(215,228,25)" fg:x="10557" fg:w="91"/><text x="16.5871%" y="223.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="16.4346%" y="197" width="0.1188%" height="15" fill="rgb(225,36,22)" fg:x="10648" fg:w="77"/><text x="16.7276%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="16.5535%" y="181" width="0.1374%" height="15" fill="rgb(251,106,46)" fg:x="10725" fg:w="89"/><text x="16.8464%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.25%)</title><rect x="16.5535%" y="197" width="0.2470%" height="15" fill="rgb(208,90,1)" fg:x="10725" fg:w="160"/><text x="16.8464%" y="207.50"></text></g><g><title>candid::types::internal::env_add (416 instructions, 0.64%)</title><rect x="16.4346%" y="213" width="0.6421%" height="15" fill="rgb(243,10,4)" fg:x="10648" fg:w="416"/><text x="16.7276%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="17.0767%" y="197" width="0.1405%" height="15" fill="rgb(212,137,27)" fg:x="11064" fg:w="91"/><text x="17.3697%" y="207.50"></text></g><g><title>candid::types::internal::env_id (211 instructions, 0.33%)</title><rect x="17.0767%" y="213" width="0.3257%" height="15" fill="rgb(231,220,49)" fg:x="11064" fg:w="211"/><text x="17.3697%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="17.4024%" y="213" width="0.0756%" height="15" fill="rgb(237,96,20)" fg:x="11275" fg:w="49"/><text x="17.6953%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.4780%" y="181" width="0.0417%" height="15" fill="rgb(239,229,30)" fg:x="11324" fg:w="27"/><text x="17.7710%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="17.4780%" y="197" width="0.2192%" height="15" fill="rgb(219,65,33)" fg:x="11324" fg:w="142"/><text x="17.7710%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.8068%" y="181" width="0.0417%" height="15" fill="rgb(243,134,7)" fg:x="11537" fg:w="27"/><text x="18.0997%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="17.8068%" y="197" width="0.2192%" height="15" fill="rgb(216,177,54)" fg:x="11537" fg:w="142"/><text x="18.0997%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (426 instructions, 0.66%)</title><rect x="17.4780%" y="213" width="0.6575%" height="15" fill="rgb(211,160,20)" fg:x="11324" fg:w="426"/><text x="17.7710%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.06%)</title><rect x="18.1355%" y="197" width="0.0571%" height="15" fill="rgb(239,85,39)" fg:x="11750" fg:w="37"/><text x="18.4285%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.05%)</title><rect x="18.1926%" y="197" width="0.0478%" height="15" fill="rgb(232,125,22)" fg:x="11787" fg:w="31"/><text x="18.4856%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (183 instructions, 0.28%)</title><rect x="18.1355%" y="213" width="0.2825%" height="15" fill="rgb(244,57,34)" fg:x="11750" fg:w="183"/><text x="18.4285%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="18.4180%" y="213" width="0.0216%" height="15" fill="rgb(214,203,32)" fg:x="11933" fg:w="14"/><text x="18.7109%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="18.4396%" y="213" width="0.0216%" height="15" fill="rgb(207,58,43)" fg:x="11947" fg:w="14"/><text x="18.7325%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="18.4612%" y="213" width="0.0216%" height="15" fill="rgb(215,193,15)" fg:x="11961" fg:w="14"/><text x="18.7542%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.06%)</title><rect x="18.4828%" y="213" width="0.0571%" height="15" fill="rgb(232,15,44)" fg:x="11975" fg:w="37"/><text x="18.7758%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="18.5399%" y="197" width="0.0123%" height="15" fill="rgb(212,3,48)" fg:x="12012" fg:w="8"/><text x="18.8329%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.5522%" y="181" width="0.0417%" height="15" fill="rgb(218,128,7)" fg:x="12020" fg:w="27"/><text x="18.8452%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.5939%" y="181" width="0.0417%" height="15" fill="rgb(226,216,39)" fg:x="12047" fg:w="27"/><text x="18.8869%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.30%)</title><rect x="18.5522%" y="197" width="0.3041%" height="15" fill="rgb(243,47,51)" fg:x="12020" fg:w="197"/><text x="18.8452%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.8563%" y="165" width="0.0417%" height="15" fill="rgb(241,183,40)" fg:x="12217" fg:w="27"/><text x="19.1493%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.8980%" y="165" width="0.0417%" height="15" fill="rgb(231,217,32)" fg:x="12244" fg:w="27"/><text x="19.1909%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="18.9397%" y="165" width="0.1034%" height="15" fill="rgb(229,61,38)" fg:x="12271" fg:w="67"/><text x="19.2326%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (242 instructions, 0.37%)</title><rect x="18.8563%" y="181" width="0.3735%" height="15" fill="rgb(225,210,5)" fg:x="12217" fg:w="242"/><text x="19.1493%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (313 instructions, 0.48%)</title><rect x="18.8563%" y="197" width="0.4831%" height="15" fill="rgb(231,79,45)" fg:x="12217" fg:w="313"/><text x="19.1493%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="19.3394%" y="197" width="0.0216%" height="15" fill="rgb(224,100,7)" fg:x="12530" fg:w="14"/><text x="19.6324%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (623 instructions, 0.96%)</title><rect x="18.5399%" y="213" width="0.9616%" height="15" fill="rgb(241,198,18)" fg:x="12012" fg:w="623"/><text x="18.8329%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.10%)</title><rect x="19.5015%" y="197" width="0.1019%" height="15" fill="rgb(252,97,53)" fg:x="12635" fg:w="66"/><text x="19.7944%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="19.6033%" y="197" width="0.1034%" height="15" fill="rgb(220,88,7)" fg:x="12701" fg:w="67"/><text x="19.8963%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (226 instructions, 0.35%)</title><rect x="19.5015%" y="213" width="0.3488%" height="15" fill="rgb(213,176,14)" fg:x="12635" fg:w="226"/><text x="19.7944%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (169 instructions, 0.26%)</title><rect x="19.8503%" y="197" width="0.2608%" height="15" fill="rgb(246,73,7)" fg:x="12861" fg:w="169"/><text x="20.1433%" y="207.50"></text></g><g><title>std::sys::thread_local::statik::LazyStorage&lt;T&gt;::initialize (226 instructions, 0.35%)</title><rect x="19.8503%" y="213" width="0.3488%" height="15" fill="rgb(245,64,36)" fg:x="12861" fg:w="226"/><text x="20.1433%" y="223.50"></text></g><g><title>__rust_realloc (133 instructions, 0.21%)</title><rect x="20.1991%" y="181" width="0.2053%" height="15" fill="rgb(245,80,10)" fg:x="13087" fg:w="133"/><text x="20.4921%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.27%)</title><rect x="20.1991%" y="197" width="0.2716%" height="15" fill="rgb(232,107,50)" fg:x="13087" fg:w="176"/><text x="20.4921%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (261 instructions, 0.40%)</title><rect x="20.1991%" y="213" width="0.4028%" height="15" fill="rgb(253,3,0)" fg:x="13087" fg:w="261"/><text x="20.4921%" y="223.50"></text></g><g><title>std::sys::thread_local::statik::LazyStorage&lt;T&gt;::initialize (30 instructions, 0.05%)</title><rect x="20.6019%" y="213" width="0.0463%" height="15" fill="rgb(212,99,53)" fg:x="13348" fg:w="30"/><text x="20.8949%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="20.6482%" y="181" width="0.1266%" height="15" fill="rgb(249,111,54)" fg:x="13378" fg:w="82"/><text x="20.9412%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.19%)</title><rect x="20.6482%" y="197" width="0.1898%" height="15" fill="rgb(249,55,30)" fg:x="13378" fg:w="123"/><text x="20.9412%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (199 instructions, 0.31%)</title><rect x="20.6482%" y="213" width="0.3071%" height="15" fill="rgb(237,47,42)" fg:x="13378" fg:w="199"/><text x="20.9412%" y="223.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (576 instructions, 0.89%)</title><rect x="20.9554%" y="213" width="0.8890%" height="15" fill="rgb(211,20,18)" fg:x="13577" fg:w="576"/><text x="21.2484%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="21.8444%" y="181" width="0.0216%" height="15" fill="rgb(231,203,46)" fg:x="14153" fg:w="14"/><text x="22.1374%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.10%)</title><rect x="21.8660%" y="181" width="0.1034%" height="15" fill="rgb(237,142,3)" fg:x="14167" fg:w="67"/><text x="22.1590%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (257 instructions, 0.40%)</title><rect x="21.8444%" y="197" width="0.3967%" height="15" fill="rgb(241,107,1)" fg:x="14153" fg:w="257"/><text x="22.1374%" y="207.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.80%)</title><rect x="22.2411%" y="197" width="0.7995%" height="15" fill="rgb(229,83,13)" fg:x="14410" fg:w="518"/><text x="22.5341%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="23.0406%" y="149" width="0.1266%" height="15" fill="rgb(241,91,40)" fg:x="14928" fg:w="82"/><text x="23.3336%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.19%)</title><rect x="23.0406%" y="165" width="0.1898%" height="15" fill="rgb(225,3,45)" fg:x="14928" fg:w="123"/><text x="23.3336%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.32%)</title><rect x="23.0406%" y="181" width="0.3180%" height="15" fill="rgb(244,223,14)" fg:x="14928" fg:w="206"/><text x="23.3336%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="23.3585%" y="181" width="0.0232%" height="15" fill="rgb(224,124,37)" fg:x="15134" fg:w="15"/><text x="23.6515%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="23.3817%" y="181" width="0.0232%" height="15" fill="rgb(251,171,30)" fg:x="15149" fg:w="15"/><text x="23.6747%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 0.66%)</title><rect x="23.0406%" y="197" width="0.6606%" height="15" fill="rgb(236,46,54)" fg:x="14928" fg:w="428"/><text x="23.3336%" y="207.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.80%)</title><rect x="23.7012%" y="197" width="0.7964%" height="15" fill="rgb(245,213,5)" fg:x="15356" fg:w="516"/><text x="23.9942%" y="207.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="24.4976%" y="197" width="0.0108%" height="15" fill="rgb(230,144,27)" fg:x="15872" fg:w="7"/><text x="24.7906%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="24.5084%" y="197" width="0.0123%" height="15" fill="rgb(220,86,6)" fg:x="15879" fg:w="8"/><text x="24.8014%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.09%)</title><rect x="24.5208%" y="197" width="0.0942%" height="15" fill="rgb(240,20,13)" fg:x="15887" fg:w="61"/><text x="24.8137%" y="207.50"></text></g><g><title>candid::utils::write_args (1,973 instructions, 3.05%)</title><rect x="21.8444%" y="213" width="3.0452%" height="15" fill="rgb(217,89,34)" fg:x="14153" fg:w="1973"/><text x="22.1374%" y="223.50">ca..</text></g><g><title>timer::__canister_method_setTimer::{{closure}} (17,055 instructions, 26.32%)</title><rect x="1.2023%" y="229" width="26.3235%" height="15" fill="rgb(229,13,5)" fg:x="779" fg:w="17055"/><text x="1.4953%" y="239.50">timer::__canister_method_setTimer::{..</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.02%)</title><rect x="27.5259%" y="229" width="0.0232%" height="15" fill="rgb(244,67,35)" fg:x="17834" fg:w="15"/><text x="27.8188%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="27.6879%" y="197" width="0.0417%" height="15" fill="rgb(221,40,2)" fg:x="17939" fg:w="27"/><text x="27.9809%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.36%)</title><rect x="27.5505%" y="213" width="0.3596%" height="15" fill="rgb(237,157,21)" fg:x="17850" fg:w="233"/><text x="27.8435%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (351 instructions, 0.54%)</title><rect x="27.5490%" y="229" width="0.5418%" height="15" fill="rgb(222,94,11)" fg:x="17849" fg:w="351"/><text x="27.8420%" y="239.50"></text></g><g><title>canister_update setTimer (18,312 instructions, 28.26%)</title><rect x="0.0000%" y="245" width="28.2636%" height="15" fill="rgb(249,113,6)" fg:x="0" fg:w="18312"/><text x="0.2930%" y="255.50">canister_update setTimer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="28.2636%" y="229" width="0.1266%" height="15" fill="rgb(238,137,36)" fg:x="18312" fg:w="82"/><text x="28.5566%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="28.3902%" y="229" width="0.1266%" height="15" fill="rgb(210,102,26)" fg:x="18394" fg:w="82"/><text x="28.6832%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="28.5167%" y="213" width="0.1266%" height="15" fill="rgb(218,30,30)" fg:x="18476" fg:w="82"/><text x="28.8097%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="28.6433%" y="213" width="0.1266%" height="15" fill="rgb(214,67,26)" fg:x="18558" fg:w="82"/><text x="28.9363%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="28.7699%" y="213" width="0.1266%" height="15" fill="rgb(251,9,53)" fg:x="18640" fg:w="82"/><text x="29.0628%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="28.8964%" y="213" width="0.0324%" height="15" fill="rgb(228,204,25)" fg:x="18722" fg:w="21"/><text x="29.1894%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.12%)</title><rect x="28.9288%" y="197" width="0.1235%" height="15" fill="rgb(207,153,8)" fg:x="18743" fg:w="80"/><text x="29.2218%" y="207.50"></text></g><g><title>memset (130 instructions, 0.20%)</title><rect x="29.0523%" y="197" width="0.2006%" height="15" fill="rgb(242,9,16)" fg:x="18823" fg:w="130"/><text x="29.3453%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="29.2530%" y="197" width="0.2763%" height="15" fill="rgb(217,211,10)" fg:x="18953" fg:w="179"/><text x="29.5459%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="29.5292%" y="197" width="0.1374%" height="15" fill="rgb(219,228,52)" fg:x="19132" fg:w="89"/><text x="29.8222%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,648 instructions, 2.54%)</title><rect x="28.9288%" y="213" width="2.5436%" height="15" fill="rgb(231,92,29)" fg:x="18743" fg:w="1648"/><text x="29.2218%" y="223.50">i..</text></g><g><title>candid::ser::IDLBuilder::new (53 instructions, 0.08%)</title><rect x="31.4724%" y="213" width="0.0818%" height="15" fill="rgb(232,8,23)" fg:x="20391" fg:w="53"/><text x="31.7654%" y="223.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.04%)</title><rect x="31.5543%" y="197" width="0.0370%" height="15" fill="rgb(216,211,34)" fg:x="20444" fg:w="24"/><text x="31.8472%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="31.5913%" y="197" width="0.1405%" height="15" fill="rgb(236,151,0)" fg:x="20468" fg:w="91"/><text x="31.8843%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="31.7317%" y="181" width="0.1405%" height="15" fill="rgb(209,168,3)" fg:x="20559" fg:w="91"/><text x="32.0247%" y="191.50"></text></g><g><title>candid::types::internal::env_add (175 instructions, 0.27%)</title><rect x="31.7317%" y="197" width="0.2701%" height="15" fill="rgb(208,129,28)" fg:x="20559" fg:w="175"/><text x="32.0247%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="32.0019%" y="197" width="0.1405%" height="15" fill="rgb(229,78,22)" fg:x="20734" fg:w="91"/><text x="32.2948%" y="207.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="32.1423%" y="181" width="0.1188%" height="15" fill="rgb(228,187,13)" fg:x="20825" fg:w="77"/><text x="32.4353%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="32.2612%" y="165" width="0.1374%" height="15" fill="rgb(240,119,24)" fg:x="20902" fg:w="89"/><text x="32.5541%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.25%)</title><rect x="32.2612%" y="181" width="0.2470%" height="15" fill="rgb(209,194,42)" fg:x="20902" fg:w="160"/><text x="32.5541%" y="191.50"></text></g><g><title>candid::types::internal::env_add (416 instructions, 0.64%)</title><rect x="32.1423%" y="197" width="0.6421%" height="15" fill="rgb(247,200,46)" fg:x="20825" fg:w="416"/><text x="32.4353%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.08%)</title><rect x="32.7844%" y="181" width="0.0756%" height="15" fill="rgb(218,76,16)" fg:x="21241" fg:w="49"/><text x="33.0773%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="32.8600%" y="181" width="0.0216%" height="15" fill="rgb(225,21,48)" fg:x="21290" fg:w="14"/><text x="33.1530%" y="191.50"></text></g><g><title>candid::types::internal::env_id (200 instructions, 0.31%)</title><rect x="32.7844%" y="197" width="0.3087%" height="15" fill="rgb(239,223,50)" fg:x="21241" fg:w="200"/><text x="33.0773%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (1,116 instructions, 1.72%)</title><rect x="31.5543%" y="213" width="1.7225%" height="15" fill="rgb(244,45,21)" fg:x="20444" fg:w="1116"/><text x="31.8472%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.18%)</title><rect x="33.2767%" y="181" width="0.1775%" height="15" fill="rgb(232,33,43)" fg:x="21560" fg:w="115"/><text x="33.5697%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.24%)</title><rect x="33.2767%" y="197" width="0.2408%" height="15" fill="rgb(209,8,3)" fg:x="21560" fg:w="156"/><text x="33.5697%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (243 instructions, 0.38%)</title><rect x="33.2767%" y="213" width="0.3751%" height="15" fill="rgb(214,25,53)" fg:x="21560" fg:w="243"/><text x="33.5697%" y="223.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.05%)</title><rect x="33.6518%" y="197" width="0.0478%" height="15" fill="rgb(254,186,54)" fg:x="21803" fg:w="31"/><text x="33.9448%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="33.6996%" y="197" width="0.0216%" height="15" fill="rgb(208,174,49)" fg:x="21834" fg:w="14"/><text x="33.9926%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (112 instructions, 0.17%)</title><rect x="33.6518%" y="213" width="0.1729%" height="15" fill="rgb(233,191,51)" fg:x="21803" fg:w="112"/><text x="33.9448%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="33.8247%" y="213" width="0.0216%" height="15" fill="rgb(222,134,10)" fg:x="21915" fg:w="14"/><text x="34.1176%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="33.8463%" y="181" width="0.1266%" height="15" fill="rgb(230,226,20)" fg:x="21929" fg:w="82"/><text x="34.1392%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.19%)</title><rect x="33.8463%" y="197" width="0.1898%" height="15" fill="rgb(251,111,25)" fg:x="21929" fg:w="123"/><text x="34.1392%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.12%)</title><rect x="34.1642%" y="181" width="0.1235%" height="15" fill="rgb(224,40,46)" fg:x="22135" fg:w="80"/><text x="34.4572%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 instructions, 0.19%)</title><rect x="34.1642%" y="197" width="0.1868%" height="15" fill="rgb(236,108,47)" fg:x="22135" fg:w="121"/><text x="34.4572%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (410 instructions, 0.63%)</title><rect x="33.8463%" y="213" width="0.6328%" height="15" fill="rgb(234,93,0)" fg:x="21929" fg:w="410"/><text x="34.1392%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="34.4791%" y="165" width="0.1405%" height="15" fill="rgb(224,213,32)" fg:x="22339" fg:w="91"/><text x="34.7721%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.20%)</title><rect x="34.4791%" y="181" width="0.2037%" height="15" fill="rgb(251,11,48)" fg:x="22339" fg:w="132"/><text x="34.7721%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.33%)</title><rect x="34.4791%" y="197" width="0.3318%" height="15" fill="rgb(236,173,5)" fg:x="22339" fg:w="215"/><text x="34.7721%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="34.8109%" y="197" width="0.0232%" height="15" fill="rgb(230,95,12)" fg:x="22554" fg:w="15"/><text x="35.1039%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="34.8341%" y="149" width="0.1405%" height="15" fill="rgb(232,209,1)" fg:x="22569" fg:w="91"/><text x="35.1270%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.20%)</title><rect x="34.8341%" y="165" width="0.2037%" height="15" fill="rgb(232,6,1)" fg:x="22569" fg:w="132"/><text x="35.1270%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.33%)</title><rect x="34.8341%" y="181" width="0.3318%" height="15" fill="rgb(210,224,50)" fg:x="22569" fg:w="215"/><text x="35.1270%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (292 instructions, 0.45%)</title><rect x="34.8341%" y="197" width="0.4507%" height="15" fill="rgb(228,127,35)" fg:x="22569" fg:w="292"/><text x="35.1270%" y="207.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="35.2848%" y="197" width="0.0540%" height="15" fill="rgb(245,102,45)" fg:x="22861" fg:w="35"/><text x="35.5777%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="35.3388%" y="197" width="0.0957%" height="15" fill="rgb(214,1,49)" fg:x="22896" fg:w="62"/><text x="35.6318%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (894 instructions, 1.38%)</title><rect x="34.4791%" y="213" width="1.3798%" height="15" fill="rgb(226,163,40)" fg:x="22339" fg:w="894"/><text x="34.7721%" y="223.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="35.8589%" y="213" width="0.1034%" height="15" fill="rgb(239,212,28)" fg:x="23233" fg:w="67"/><text x="36.1519%" y="223.50"></text></g><g><title>__rust_realloc (77 instructions, 0.12%)</title><rect x="35.9623%" y="181" width="0.1188%" height="15" fill="rgb(220,20,13)" fg:x="23300" fg:w="77"/><text x="36.2553%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.19%)</title><rect x="35.9623%" y="197" width="0.1852%" height="15" fill="rgb(210,164,35)" fg:x="23300" fg:w="120"/><text x="36.2553%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.32%)</title><rect x="35.9623%" y="213" width="0.3180%" height="15" fill="rgb(248,109,41)" fg:x="23300" fg:w="206"/><text x="36.2553%" y="223.50"></text></g><g><title>memcpy (147 instructions, 0.23%)</title><rect x="36.2803%" y="213" width="0.2269%" height="15" fill="rgb(238,23,50)" fg:x="23506" fg:w="147"/><text x="36.5733%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="36.5072%" y="213" width="0.0108%" height="15" fill="rgb(211,48,49)" fg:x="23653" fg:w="7"/><text x="36.8001%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="36.5180%" y="213" width="0.0108%" height="15" fill="rgb(223,36,21)" fg:x="23660" fg:w="7"/><text x="36.8109%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="36.5288%" y="213" width="0.0216%" height="15" fill="rgb(207,123,46)" fg:x="23667" fg:w="14"/><text x="36.8218%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="36.5504%" y="213" width="0.1374%" height="15" fill="rgb(240,218,32)" fg:x="23681" fg:w="89"/><text x="36.8434%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="36.6878%" y="213" width="0.0957%" height="15" fill="rgb(252,5,43)" fg:x="23770" fg:w="62"/><text x="36.9807%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="36.7835%" y="213" width="0.1374%" height="15" fill="rgb(252,84,19)" fg:x="23832" fg:w="89"/><text x="37.0764%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="36.9208%" y="213" width="0.1405%" height="15" fill="rgb(243,152,39)" fg:x="23921" fg:w="91"/><text x="37.2138%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="37.0613%" y="213" width="0.1405%" height="15" fill="rgb(234,160,15)" fg:x="24012" fg:w="91"/><text x="37.3542%" y="223.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="37.2017%" y="213" width="0.0340%" height="15" fill="rgb(237,34,20)" fg:x="24103" fg:w="22"/><text x="37.4947%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::wake (59 instructions, 0.09%)</title><rect x="37.2357%" y="197" width="0.0911%" height="15" fill="rgb(229,97,13)" fg:x="24125" fg:w="59"/><text x="37.5287%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (80 instructions, 0.12%)</title><rect x="37.2357%" y="213" width="0.1235%" height="15" fill="rgb(234,71,50)" fg:x="24125" fg:w="80"/><text x="37.5287%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.04%)</title><rect x="37.3592%" y="213" width="0.0355%" height="15" fill="rgb(253,155,4)" fg:x="24205" fg:w="23"/><text x="37.6521%" y="223.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (15,342 instructions, 23.68%)</title><rect x="28.5167%" y="229" width="23.6796%" height="15" fill="rgb(222,185,37)" fg:x="18476" fg:w="15342"/><text x="28.8097%" y="239.50">ic_cdk_timers::global_timer::{{c..</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.02%)</title><rect x="52.1963%" y="229" width="0.0232%" height="15" fill="rgb(251,177,13)" fg:x="33818" fg:w="15"/><text x="52.4893%" y="239.50"></text></g><g><title>canister_global_timer (15,651 instructions, 24.16%)</title><rect x="28.2636%" y="245" width="24.1565%" height="15" fill="rgb(250,179,40)" fg:x="18312" fg:w="15651"/><text x="28.5566%" y="255.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="52.4201%" y="229" width="0.1266%" height="15" fill="rgb(242,44,2)" fg:x="33963" fg:w="82"/><text x="52.7131%" y="239.50"></text></g><g><title>memset (130 instructions, 0.20%)</title><rect x="52.5467%" y="229" width="0.2006%" height="15" fill="rgb(216,177,13)" fg:x="34045" fg:w="130"/><text x="52.8397%" y="239.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="52.7473%" y="229" width="0.2763%" height="15" fill="rgb(216,106,43)" fg:x="34175" fg:w="179"/><text x="53.0403%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="53.0236%" y="229" width="0.1374%" height="15" fill="rgb(216,183,2)" fg:x="34354" fg:w="89"/><text x="53.3166%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="53.1610%" y="213" width="0.1266%" height="15" fill="rgb(249,75,3)" fg:x="34443" fg:w="82"/><text x="53.4540%" y="223.50"></text></g><g><title>memset (130 instructions, 0.20%)</title><rect x="53.2875%" y="213" width="0.2006%" height="15" fill="rgb(219,67,39)" fg:x="34525" fg:w="130"/><text x="53.5805%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="53.4882%" y="213" width="0.2763%" height="15" fill="rgb(253,228,2)" fg:x="34655" fg:w="179"/><text x="53.7812%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="53.7645%" y="213" width="0.1374%" height="15" fill="rgb(235,138,27)" fg:x="34834" fg:w="89"/><text x="54.0574%" y="223.50"></text></g><g><title>ic_cdk::api::id (1,650 instructions, 2.55%)</title><rect x="53.1610%" y="229" width="2.5467%" height="15" fill="rgb(236,97,51)" fg:x="34443" fg:w="1650"/><text x="53.4540%" y="239.50">i..</text></g><g><title>memcmp (675 instructions, 1.04%)</title><rect x="55.7077%" y="229" width="1.0418%" height="15" fill="rgb(240,80,30)" fg:x="36093" fg:w="675"/><text x="56.0006%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="56.7495%" y="213" width="0.1266%" height="15" fill="rgb(230,178,19)" fg:x="36768" fg:w="82"/><text x="57.0425%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,143 instructions, 1.76%)</title><rect x="56.7495%" y="229" width="1.7642%" height="15" fill="rgb(210,190,27)" fg:x="36768" fg:w="1143"/><text x="57.0425%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="58.5137%" y="213" width="0.0787%" height="15" fill="rgb(222,107,31)" fg:x="37911" fg:w="51"/><text x="58.8066%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="58.5924%" y="213" width="0.6745%" height="15" fill="rgb(216,127,34)" fg:x="37962" fg:w="437"/><text x="58.8853%" y="223.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="59.2669%" y="213" width="0.0988%" height="15" fill="rgb(234,116,52)" fg:x="38399" fg:w="64"/><text x="59.5598%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="59.3656%" y="213" width="0.1173%" height="15" fill="rgb(222,124,15)" fg:x="38463" fg:w="76"/><text x="59.6586%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="59.4829%" y="213" width="0.1173%" height="15" fill="rgb(231,179,28)" fg:x="38539" fg:w="76"/><text x="59.7759%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="59.6002%" y="213" width="0.1173%" height="15" fill="rgb(226,93,45)" fg:x="38615" fg:w="76"/><text x="59.8932%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="59.7175%" y="213" width="0.1173%" height="15" fill="rgb(215,8,51)" fg:x="38691" fg:w="76"/><text x="60.0105%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="59.8349%" y="213" width="0.0787%" height="15" fill="rgb(223,106,5)" fg:x="38767" fg:w="51"/><text x="60.1278%" y="223.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="59.9136%" y="213" width="0.1466%" height="15" fill="rgb(250,191,5)" fg:x="38818" fg:w="95"/><text x="60.2065%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="60.0602%" y="213" width="0.6745%" height="15" fill="rgb(242,132,44)" fg:x="38913" fg:w="437"/><text x="60.3532%" y="223.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="60.7347%" y="213" width="0.0293%" height="15" fill="rgb(251,152,29)" fg:x="39350" fg:w="19"/><text x="61.0277%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="60.7640%" y="181" width="0.1266%" height="15" fill="rgb(218,179,5)" fg:x="39369" fg:w="82"/><text x="61.0570%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="60.8906%" y="149" width="0.1034%" height="15" fill="rgb(227,67,19)" fg:x="39451" fg:w="67"/><text x="61.1835%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="60.8906%" y="165" width="0.1482%" height="15" fill="rgb(233,119,31)" fg:x="39451" fg:w="96"/><text x="61.1835%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="61.0387%" y="117" width="0.0170%" height="15" fill="rgb(241,120,22)" fg:x="39547" fg:w="11"/><text x="61.3317%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="61.0557%" y="101" width="0.0540%" height="15" fill="rgb(224,102,30)" fg:x="39558" fg:w="35"/><text x="61.3487%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="61.0557%" y="117" width="0.0988%" height="15" fill="rgb(210,164,37)" fg:x="39558" fg:w="64"/><text x="61.3487%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="61.0387%" y="133" width="0.2223%" height="15" fill="rgb(226,191,16)" fg:x="39547" fg:w="144"/><text x="61.3317%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="61.0387%" y="149" width="0.3241%" height="15" fill="rgb(214,40,45)" fg:x="39547" fg:w="210"/><text x="61.3317%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="61.0387%" y="165" width="0.3396%" height="15" fill="rgb(244,29,26)" fg:x="39547" fg:w="220"/><text x="61.3317%" y="175.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="60.8906%" y="181" width="0.6930%" height="15" fill="rgb(216,16,5)" fg:x="39451" fg:w="449"/><text x="61.1835%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.03%)</title><rect x="60.7640%" y="197" width="1.0295%" height="15" fill="rgb(249,76,35)" fg:x="39369" fg:w="667"/><text x="61.0570%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="61.7935%" y="197" width="0.0988%" height="15" fill="rgb(207,11,44)" fg:x="40036" fg:w="64"/><text x="62.0865%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="61.8923%" y="197" width="0.1374%" height="15" fill="rgb(228,190,49)" fg:x="40100" fg:w="89"/><text x="62.1852%" y="207.50"></text></g><g><title>binread::binary_template::write_vec (931 instructions, 1.44%)</title><rect x="60.7640%" y="213" width="1.4370%" height="15" fill="rgb(214,173,12)" fg:x="39369" fg:w="931"/><text x="61.0570%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.04%)</title><rect x="62.2010%" y="213" width="0.0417%" height="15" fill="rgb(218,26,35)" fg:x="40300" fg:w="27"/><text x="62.4939%" y="223.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="62.2426%" y="213" width="0.0710%" height="15" fill="rgb(220,200,19)" fg:x="40327" fg:w="46"/><text x="62.5356%" y="223.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="62.3136%" y="213" width="0.1466%" height="15" fill="rgb(239,95,49)" fg:x="40373" fg:w="95"/><text x="62.6066%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="62.4603%" y="197" width="0.6745%" height="15" fill="rgb(235,85,53)" fg:x="40468" fg:w="437"/><text x="62.7532%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="63.1347%" y="197" width="0.0293%" height="15" fill="rgb(233,133,31)" fg:x="40905" fg:w="19"/><text x="63.4277%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="63.1641%" y="165" width="0.1266%" height="15" fill="rgb(218,25,20)" fg:x="40924" fg:w="82"/><text x="63.4570%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="63.2906%" y="133" width="0.1034%" height="15" fill="rgb(252,210,38)" fg:x="41006" fg:w="67"/><text x="63.5836%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="63.2906%" y="149" width="0.1482%" height="15" fill="rgb(242,134,21)" fg:x="41006" fg:w="96"/><text x="63.5836%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="63.4388%" y="101" width="0.0170%" height="15" fill="rgb(213,28,48)" fg:x="41102" fg:w="11"/><text x="63.7318%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="63.4558%" y="85" width="0.0540%" height="15" fill="rgb(250,196,2)" fg:x="41113" fg:w="35"/><text x="63.7487%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="63.4558%" y="101" width="0.0988%" height="15" fill="rgb(227,5,17)" fg:x="41113" fg:w="64"/><text x="63.7487%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="63.4388%" y="117" width="0.2223%" height="15" fill="rgb(221,226,24)" fg:x="41102" fg:w="144"/><text x="63.7318%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="63.4388%" y="133" width="0.3241%" height="15" fill="rgb(211,5,48)" fg:x="41102" fg:w="210"/><text x="63.7318%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="63.4388%" y="149" width="0.3396%" height="15" fill="rgb(219,150,6)" fg:x="41102" fg:w="220"/><text x="63.7318%" y="159.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="63.2906%" y="165" width="0.6930%" height="15" fill="rgb(251,46,16)" fg:x="41006" fg:w="449"/><text x="63.5836%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.03%)</title><rect x="63.1641%" y="181" width="1.0295%" height="15" fill="rgb(220,204,40)" fg:x="40924" fg:w="667"/><text x="63.4570%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="64.1935%" y="181" width="0.0988%" height="15" fill="rgb(211,85,2)" fg:x="41591" fg:w="64"/><text x="64.4865%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="64.2923%" y="181" width="0.1374%" height="15" fill="rgb(229,17,7)" fg:x="41655" fg:w="89"/><text x="64.5853%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (931 instructions, 1.44%)</title><rect x="63.1641%" y="197" width="1.4370%" height="15" fill="rgb(239,72,28)" fg:x="40924" fg:w="931"/><text x="63.4570%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="64.6010%" y="181" width="0.0787%" height="15" fill="rgb(230,47,54)" fg:x="41855" fg:w="51"/><text x="64.8940%" y="191.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.18%)</title><rect x="64.6797%" y="181" width="0.1821%" height="15" fill="rgb(214,50,8)" fg:x="41906" fg:w="118"/><text x="64.9727%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="64.8619%" y="181" width="0.0710%" height="15" fill="rgb(216,198,43)" fg:x="42024" fg:w="46"/><text x="65.1548%" y="191.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.44%)</title><rect x="64.6010%" y="197" width="0.4368%" height="15" fill="rgb(234,20,35)" fg:x="41855" fg:w="283"/><text x="64.8940%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.0378%" y="197" width="0.1405%" height="15" fill="rgb(254,45,19)" fg:x="42138" fg:w="91"/><text x="65.3308%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,947 instructions, 3.01%)</title><rect x="62.4603%" y="213" width="3.0051%" height="15" fill="rgb(219,14,44)" fg:x="40468" fg:w="1947"/><text x="62.7532%" y="223.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="65.4653%" y="213" width="0.0710%" height="15" fill="rgb(217,220,26)" fg:x="42415" fg:w="46"/><text x="65.7583%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="65.5363%" y="213" width="0.0232%" height="15" fill="rgb(213,158,28)" fg:x="42461" fg:w="15"/><text x="65.8293%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="65.5595%" y="213" width="0.0123%" height="15" fill="rgb(252,51,52)" fg:x="42476" fg:w="8"/><text x="65.8525%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.5718%" y="197" width="0.1405%" height="15" fill="rgb(246,89,16)" fg:x="42484" fg:w="91"/><text x="65.8648%" y="207.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.29%)</title><rect x="65.5718%" y="213" width="0.2886%" height="15" fill="rgb(216,158,49)" fg:x="42484" fg:w="187"/><text x="65.8648%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.8605%" y="181" width="0.1405%" height="15" fill="rgb(236,107,19)" fg:x="42671" fg:w="91"/><text x="66.1534%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.20%)</title><rect x="65.8605%" y="197" width="0.2037%" height="15" fill="rgb(228,185,30)" fg:x="42671" fg:w="132"/><text x="66.1534%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (219 instructions, 0.34%)</title><rect x="65.8605%" y="213" width="0.3380%" height="15" fill="rgb(246,134,8)" fg:x="42671" fg:w="219"/><text x="66.1534%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="66.1985%" y="213" width="0.1266%" height="15" fill="rgb(214,143,50)" fg:x="42890" fg:w="82"/><text x="66.4915%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="66.3251%" y="213" width="0.0957%" height="15" fill="rgb(228,75,8)" fg:x="42972" fg:w="62"/><text x="66.6180%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="66.4207%" y="213" width="0.1405%" height="15" fill="rgb(207,175,4)" fg:x="43034" fg:w="91"/><text x="66.7137%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="66.5612%" y="213" width="0.1405%" height="15" fill="rgb(205,108,24)" fg:x="43125" fg:w="91"/><text x="66.8542%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="66.7094%" y="213" width="0.1374%" height="15" fill="rgb(244,120,49)" fg:x="43221" fg:w="89"/><text x="67.0023%" y="223.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="66.8467%" y="213" width="0.6050%" height="15" fill="rgb(223,47,38)" fg:x="43310" fg:w="392"/><text x="67.1397%" y="223.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="67.4518%" y="213" width="0.6050%" height="15" fill="rgb(229,179,11)" fg:x="43702" fg:w="392"/><text x="67.7447%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.78%)</title><rect x="68.0568%" y="213" width="0.7779%" height="15" fill="rgb(231,122,1)" fg:x="44094" fg:w="504"/><text x="68.3498%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,949 instructions, 12.27%)</title><rect x="58.5137%" y="229" width="12.2689%" height="15" fill="rgb(245,119,9)" fg:x="37911" fg:w="7949"/><text x="58.8066%" y="239.50">candid::de::IDL..</text></g><g><title>memcpy (408 instructions, 0.63%)</title><rect x="70.7825%" y="229" width="0.6297%" height="15" fill="rgb(241,163,25)" fg:x="45860" fg:w="408"/><text x="71.0755%" y="239.50"></text></g><g><title>memcpy (408 instructions, 0.63%)</title><rect x="71.4123%" y="229" width="0.6297%" height="15" fill="rgb(217,214,3)" fg:x="46268" fg:w="408"/><text x="71.7052%" y="239.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="72.0420%" y="197" width="0.1188%" height="15" fill="rgb(240,86,28)" fg:x="46676" fg:w="77"/><text x="72.3350%" y="207.50"></text></g><g><title>candid::types::internal::find_type (231 instructions, 0.36%)</title><rect x="72.0420%" y="213" width="0.3565%" height="15" fill="rgb(215,47,9)" fg:x="46676" fg:w="231"/><text x="72.3350%" y="223.50"></text></g><g><title>candid::types::CandidType::ty (275 instructions, 0.42%)</title><rect x="72.0420%" y="229" width="0.4244%" height="15" fill="rgb(252,25,45)" fg:x="46676" fg:w="275"/><text x="72.3350%" y="239.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="72.4664%" y="229" width="0.0756%" height="15" fill="rgb(251,164,9)" fg:x="46951" fg:w="49"/><text x="72.7594%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="72.5421%" y="213" width="0.0957%" height="15" fill="rgb(233,194,0)" fg:x="47000" fg:w="62"/><text x="72.8350%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="72.7473%" y="213" width="0.0957%" height="15" fill="rgb(249,111,24)" fg:x="47133" fg:w="62"/><text x="73.0403%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (266 instructions, 0.41%)</title><rect x="72.5421%" y="229" width="0.4106%" height="15" fill="rgb(250,223,3)" fg:x="47000" fg:w="266"/><text x="72.8350%" y="239.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.06%)</title><rect x="72.9526%" y="213" width="0.0571%" height="15" fill="rgb(236,178,37)" fg:x="47266" fg:w="37"/><text x="73.2456%" y="223.50"></text></g><g><title>candid::de::Deserializer::add_cost (50 instructions, 0.08%)</title><rect x="73.0097%" y="213" width="0.0772%" height="15" fill="rgb(241,158,50)" fg:x="47303" fg:w="50"/><text x="73.3027%" y="223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (202 instructions, 0.31%)</title><rect x="72.9526%" y="229" width="0.3118%" height="15" fill="rgb(213,121,41)" fg:x="47266" fg:w="202"/><text x="73.2456%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="73.2644%" y="229" width="0.0216%" height="15" fill="rgb(240,92,3)" fg:x="47468" fg:w="14"/><text x="73.5574%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="73.2860%" y="229" width="0.0216%" height="15" fill="rgb(205,123,3)" fg:x="47482" fg:w="14"/><text x="73.5790%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="73.3076%" y="229" width="0.0216%" height="15" fill="rgb(205,97,47)" fg:x="47496" fg:w="14"/><text x="73.6006%" y="239.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.06%)</title><rect x="73.3292%" y="229" width="0.0571%" height="15" fill="rgb(247,152,14)" fg:x="47510" fg:w="37"/><text x="73.6222%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="73.3863%" y="213" width="0.0108%" height="15" fill="rgb(248,195,53)" fg:x="47547" fg:w="7"/><text x="73.6793%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="73.3971%" y="213" width="0.1374%" height="15" fill="rgb(226,201,16)" fg:x="47554" fg:w="89"/><text x="73.6901%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="73.5345%" y="181" width="0.0417%" height="15" fill="rgb(205,98,0)" fg:x="47643" fg:w="27"/><text x="73.8275%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (117 instructions, 0.18%)</title><rect x="73.5345%" y="197" width="0.1806%" height="15" fill="rgb(214,191,48)" fg:x="47643" fg:w="117"/><text x="73.8275%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188 instructions, 0.29%)</title><rect x="73.5345%" y="213" width="0.2902%" height="15" fill="rgb(237,112,39)" fg:x="47643" fg:w="188"/><text x="73.8275%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="73.8247%" y="213" width="0.0216%" height="15" fill="rgb(247,203,27)" fg:x="47831" fg:w="14"/><text x="74.1176%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (388 instructions, 0.60%)</title><rect x="73.3863%" y="229" width="0.5989%" height="15" fill="rgb(235,124,28)" fg:x="47547" fg:w="388"/><text x="73.6793%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="73.9852%" y="229" width="0.1374%" height="15" fill="rgb(208,207,46)" fg:x="47935" fg:w="89"/><text x="74.2782%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="74.1241%" y="197" width="0.1374%" height="15" fill="rgb(234,176,4)" fg:x="48025" fg:w="89"/><text x="74.4171%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.25%)</title><rect x="74.1241%" y="213" width="0.2470%" height="15" fill="rgb(230,133,28)" fg:x="48025" fg:w="160"/><text x="74.4171%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="74.3710%" y="197" width="0.0417%" height="15" fill="rgb(211,137,40)" fg:x="48185" fg:w="27"/><text x="74.6640%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="74.3710%" y="213" width="0.2192%" height="15" fill="rgb(254,35,13)" fg:x="48185" fg:w="142"/><text x="74.6640%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (478 instructions, 0.74%)</title><rect x="74.1241%" y="229" width="0.7378%" height="15" fill="rgb(225,49,51)" fg:x="48025" fg:w="478"/><text x="74.4171%" y="239.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.80%)</title><rect x="74.8619%" y="229" width="0.7995%" height="15" fill="rgb(251,10,15)" fg:x="48503" fg:w="518"/><text x="75.1548%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="75.6614%" y="181" width="0.1266%" height="15" fill="rgb(228,207,15)" fg:x="49021" fg:w="82"/><text x="75.9543%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.19%)</title><rect x="75.6614%" y="197" width="0.1898%" height="15" fill="rgb(241,99,19)" fg:x="49021" fg:w="123"/><text x="75.9543%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.32%)</title><rect x="75.6614%" y="213" width="0.3180%" height="15" fill="rgb(207,104,49)" fg:x="49021" fg:w="206"/><text x="75.9543%" y="223.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="75.9793%" y="213" width="0.0232%" height="15" fill="rgb(234,99,18)" fg:x="49227" fg:w="15"/><text x="76.2723%" y="223.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.0025%" y="213" width="0.0232%" height="15" fill="rgb(213,191,49)" fg:x="49242" fg:w="15"/><text x="76.2954%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 0.66%)</title><rect x="75.6614%" y="229" width="0.6606%" height="15" fill="rgb(210,226,19)" fg:x="49021" fg:w="428"/><text x="75.9543%" y="239.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.80%)</title><rect x="76.3220%" y="229" width="0.7964%" height="15" fill="rgb(229,97,18)" fg:x="49449" fg:w="516"/><text x="76.6149%" y="239.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="77.1184%" y="229" width="0.0108%" height="15" fill="rgb(211,167,15)" fg:x="49965" fg:w="7"/><text x="77.4114%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="77.1292%" y="229" width="0.0108%" height="15" fill="rgb(210,169,34)" fg:x="49972" fg:w="7"/><text x="77.4222%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="77.1400%" y="229" width="0.0108%" height="15" fill="rgb(241,121,31)" fg:x="49979" fg:w="7"/><text x="77.4330%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="77.1508%" y="229" width="0.1374%" height="15" fill="rgb(232,40,11)" fg:x="49986" fg:w="89"/><text x="77.4438%" y="239.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (18,584 instructions, 28.68%)</title><rect x="52.4201%" y="245" width="28.6834%" height="15" fill="rgb(205,86,26)" fg:x="33963" fg:w="18584"/><text x="52.7131%" y="255.50">canister_update &lt;ic-cdk internal&gt; timer..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="81.1036%" y="213" width="0.1266%" height="15" fill="rgb(231,126,28)" fg:x="52547" fg:w="82"/><text x="81.3965%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,134 instructions, 1.75%)</title><rect x="81.1036%" y="229" width="1.7503%" height="15" fill="rgb(219,221,18)" fg:x="52547" fg:w="1134"/><text x="81.3965%" y="239.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="82.8538%" y="181" width="0.0324%" height="15" fill="rgb(211,40,0)" fg:x="53681" fg:w="21"/><text x="83.1468%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="82.8862%" y="165" width="0.0787%" height="15" fill="rgb(239,85,43)" fg:x="53702" fg:w="51"/><text x="83.1792%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="82.9650%" y="165" width="0.6745%" height="15" fill="rgb(231,55,21)" fg:x="53753" fg:w="437"/><text x="83.2579%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="83.6395%" y="165" width="0.0988%" height="15" fill="rgb(225,184,43)" fg:x="54190" fg:w="64"/><text x="83.9324%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="83.7382%" y="165" width="0.1173%" height="15" fill="rgb(251,158,41)" fg:x="54254" fg:w="76"/><text x="84.0312%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="83.8555%" y="165" width="0.1173%" height="15" fill="rgb(234,159,37)" fg:x="54330" fg:w="76"/><text x="84.1485%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="83.9728%" y="165" width="0.1173%" height="15" fill="rgb(216,204,22)" fg:x="54406" fg:w="76"/><text x="84.2658%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.12%)</title><rect x="84.0901%" y="165" width="0.1173%" height="15" fill="rgb(214,17,3)" fg:x="54482" fg:w="76"/><text x="84.3831%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.08%)</title><rect x="84.2074%" y="165" width="0.0787%" height="15" fill="rgb(212,111,17)" fg:x="54558" fg:w="51"/><text x="84.5004%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="84.2862%" y="165" width="0.1466%" height="15" fill="rgb(221,157,24)" fg:x="54609" fg:w="95"/><text x="84.5791%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="84.4328%" y="165" width="0.6745%" height="15" fill="rgb(252,16,13)" fg:x="54704" fg:w="437"/><text x="84.7258%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="85.1073%" y="165" width="0.0293%" height="15" fill="rgb(221,62,2)" fg:x="55141" fg:w="19"/><text x="85.4002%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="85.1366%" y="133" width="0.1266%" height="15" fill="rgb(247,87,22)" fg:x="55160" fg:w="82"/><text x="85.4296%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="85.2632%" y="101" width="0.1034%" height="15" fill="rgb(215,73,9)" fg:x="55242" fg:w="67"/><text x="85.5561%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="85.2632%" y="117" width="0.1482%" height="15" fill="rgb(207,175,33)" fg:x="55242" fg:w="96"/><text x="85.5561%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="85.4113%" y="69" width="0.0170%" height="15" fill="rgb(243,129,54)" fg:x="55338" fg:w="11"/><text x="85.7043%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="85.4283%" y="53" width="0.0540%" height="15" fill="rgb(227,119,45)" fg:x="55349" fg:w="35"/><text x="85.7213%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="85.4283%" y="69" width="0.0988%" height="15" fill="rgb(205,109,36)" fg:x="55349" fg:w="64"/><text x="85.7213%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="85.4113%" y="85" width="0.2223%" height="15" fill="rgb(205,6,39)" fg:x="55338" fg:w="144"/><text x="85.7043%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="85.4113%" y="101" width="0.3241%" height="15" fill="rgb(221,32,16)" fg:x="55338" fg:w="210"/><text x="85.7043%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="85.4113%" y="117" width="0.3396%" height="15" fill="rgb(228,144,50)" fg:x="55338" fg:w="220"/><text x="85.7043%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="85.2632%" y="133" width="0.6930%" height="15" fill="rgb(229,201,53)" fg:x="55242" fg:w="449"/><text x="85.5561%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.03%)</title><rect x="85.1366%" y="149" width="1.0295%" height="15" fill="rgb(249,153,27)" fg:x="55160" fg:w="667"/><text x="85.4296%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="86.1661%" y="149" width="0.0988%" height="15" fill="rgb(227,106,25)" fg:x="55827" fg:w="64"/><text x="86.4590%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="86.2649%" y="149" width="0.1374%" height="15" fill="rgb(230,65,29)" fg:x="55891" fg:w="89"/><text x="86.5578%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (931 instructions, 1.44%)</title><rect x="85.1366%" y="165" width="1.4370%" height="15" fill="rgb(221,57,46)" fg:x="55160" fg:w="931"/><text x="85.4296%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.04%)</title><rect x="86.5735%" y="165" width="0.0417%" height="15" fill="rgb(229,161,17)" fg:x="56091" fg:w="27"/><text x="86.8665%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="86.6152%" y="165" width="0.0710%" height="15" fill="rgb(222,213,11)" fg:x="56118" fg:w="46"/><text x="86.9082%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.15%)</title><rect x="86.6862%" y="165" width="0.1466%" height="15" fill="rgb(235,35,13)" fg:x="56164" fg:w="95"/><text x="86.9792%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.67%)</title><rect x="86.8328%" y="149" width="0.6745%" height="15" fill="rgb(233,158,34)" fg:x="56259" fg:w="437"/><text x="87.1258%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="87.5073%" y="149" width="0.0293%" height="15" fill="rgb(215,151,48)" fg:x="56696" fg:w="19"/><text x="87.8003%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="87.5367%" y="117" width="0.1266%" height="15" fill="rgb(229,84,14)" fg:x="56715" fg:w="82"/><text x="87.8296%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="87.6632%" y="85" width="0.1034%" height="15" fill="rgb(229,68,14)" fg:x="56797" fg:w="67"/><text x="87.9562%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="87.6632%" y="101" width="0.1482%" height="15" fill="rgb(243,106,26)" fg:x="56797" fg:w="96"/><text x="87.9562%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="87.8114%" y="53" width="0.0170%" height="15" fill="rgb(206,45,38)" fg:x="56893" fg:w="11"/><text x="88.1044%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="87.8284%" y="37" width="0.0540%" height="15" fill="rgb(226,6,15)" fg:x="56904" fg:w="35"/><text x="88.1213%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="87.8284%" y="53" width="0.0988%" height="15" fill="rgb(232,22,54)" fg:x="56904" fg:w="64"/><text x="88.1213%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.22%)</title><rect x="87.8114%" y="69" width="0.2223%" height="15" fill="rgb(229,222,32)" fg:x="56893" fg:w="144"/><text x="88.1044%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.32%)</title><rect x="87.8114%" y="85" width="0.3241%" height="15" fill="rgb(228,62,29)" fg:x="56893" fg:w="210"/><text x="88.1044%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.34%)</title><rect x="87.8114%" y="101" width="0.3396%" height="15" fill="rgb(251,103,34)" fg:x="56893" fg:w="220"/><text x="88.1044%" y="111.50"></text></g><g><title>core::fmt::write (449 instructions, 0.69%)</title><rect x="87.6632%" y="117" width="0.6930%" height="15" fill="rgb(233,12,30)" fg:x="56797" fg:w="449"/><text x="87.9562%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.03%)</title><rect x="87.5367%" y="133" width="1.0295%" height="15" fill="rgb(238,52,0)" fg:x="56715" fg:w="667"/><text x="87.8296%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.10%)</title><rect x="88.5661%" y="133" width="0.0988%" height="15" fill="rgb(223,98,5)" fg:x="57382" fg:w="64"/><text x="88.8591%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="88.6649%" y="133" width="0.1374%" height="15" fill="rgb(228,75,37)" fg:x="57446" fg:w="89"/><text x="88.9579%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (931 instructions, 1.44%)</title><rect x="87.5367%" y="149" width="1.4370%" height="15" fill="rgb(205,115,49)" fg:x="56715" fg:w="931"/><text x="87.8296%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,514 instructions, 2.34%)</title><rect x="86.8328%" y="165" width="2.3368%" height="15" fill="rgb(250,154,43)" fg:x="56259" fg:w="1514"/><text x="87.1258%" y="175.50">b..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.07%)</title><rect x="89.1696%" y="165" width="0.0710%" height="15" fill="rgb(226,43,29)" fg:x="57773" fg:w="46"/><text x="89.4626%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.2406%" y="165" width="0.0232%" height="15" fill="rgb(249,228,39)" fg:x="57819" fg:w="15"/><text x="89.5336%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="89.2638%" y="165" width="0.0123%" height="15" fill="rgb(216,79,43)" fg:x="57834" fg:w="8"/><text x="89.5567%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.18%)</title><rect x="89.2761%" y="165" width="0.1775%" height="15" fill="rgb(228,95,12)" fg:x="57842" fg:w="115"/><text x="89.5691%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.13%)</title><rect x="89.4536%" y="165" width="0.1266%" height="15" fill="rgb(249,221,15)" fg:x="57957" fg:w="82"/><text x="89.7466%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="89.5879%" y="165" width="0.6050%" height="15" fill="rgb(233,34,13)" fg:x="58044" fg:w="392"/><text x="89.8809%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.61%)</title><rect x="90.1929%" y="165" width="0.6050%" height="15" fill="rgb(214,103,39)" fg:x="58436" fg:w="392"/><text x="90.4859%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.78%)</title><rect x="90.7980%" y="165" width="0.7779%" height="15" fill="rgb(251,126,39)" fg:x="58828" fg:w="504"/><text x="91.0909%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,623 instructions, 10.22%)</title><rect x="82.8862%" y="181" width="10.2223%" height="15" fill="rgb(214,216,36)" fg:x="53702" fg:w="6623"/><text x="83.1792%" y="191.50">candid::de::..</text></g><g><title>memcpy (344 instructions, 0.53%)</title><rect x="93.1085%" y="181" width="0.5309%" height="15" fill="rgb(220,221,8)" fg:x="60325" fg:w="344"/><text x="93.4015%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.06%)</title><rect x="93.6395%" y="181" width="0.0571%" height="15" fill="rgb(240,216,3)" fg:x="60669" fg:w="37"/><text x="93.9324%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="93.6966%" y="165" width="0.0108%" height="15" fill="rgb(232,218,17)" fg:x="60706" fg:w="7"/><text x="93.9895%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="93.7074%" y="149" width="0.1374%" height="15" fill="rgb(229,163,45)" fg:x="60713" fg:w="89"/><text x="94.0003%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="93.9543%" y="133" width="0.0417%" height="15" fill="rgb(231,110,42)" fg:x="60873" fg:w="27"/><text x="94.2473%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (116 instructions, 0.18%)</title><rect x="93.9543%" y="149" width="0.1790%" height="15" fill="rgb(208,170,48)" fg:x="60873" fg:w="116"/><text x="94.2473%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (347 instructions, 0.54%)</title><rect x="93.7074%" y="165" width="0.5356%" height="15" fill="rgb(239,116,25)" fg:x="60713" fg:w="347"/><text x="94.0003%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (403 instructions, 0.62%)</title><rect x="93.6966%" y="181" width="0.6220%" height="15" fill="rgb(219,200,50)" fg:x="60706" fg:w="403"/><text x="93.9895%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="94.3186%" y="181" width="0.1374%" height="15" fill="rgb(245,200,0)" fg:x="61109" fg:w="89"/><text x="94.6115%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (136 instructions, 0.21%)</title><rect x="94.4559%" y="181" width="0.2099%" height="15" fill="rgb(245,119,33)" fg:x="61198" fg:w="136"/><text x="94.7489%" y="191.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (39 instructions, 0.06%)</title><rect x="94.6658%" y="181" width="0.0602%" height="15" fill="rgb(231,125,12)" fg:x="61334" fg:w="39"/><text x="94.9588%" y="191.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="94.7260%" y="181" width="0.0278%" height="15" fill="rgb(216,96,41)" fg:x="61373" fg:w="18"/><text x="95.0190%" y="191.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,583 instructions, 13.25%)</title><rect x="82.8538%" y="197" width="13.2474%" height="15" fill="rgb(248,43,45)" fg:x="53681" fg:w="8583"/><text x="83.1468%" y="207.50">ic_cdk_timers::gl..</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.02%)</title><rect x="96.1013%" y="197" width="0.0232%" height="15" fill="rgb(217,222,7)" fg:x="62264" fg:w="15"/><text x="96.3942%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,717 instructions, 13.45%)</title><rect x="82.8538%" y="213" width="13.4542%" height="15" fill="rgb(233,28,6)" fg:x="53681" fg:w="8717"/><text x="83.1468%" y="223.50">ic_cdk::futures::..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="96.3081%" y="181" width="0.0108%" height="15" fill="rgb(231,218,15)" fg:x="62398" fg:w="7"/><text x="96.6010%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="96.3189%" y="181" width="0.1374%" height="15" fill="rgb(226,171,48)" fg:x="62405" fg:w="89"/><text x="96.6118%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="96.4562%" y="181" width="0.1374%" height="15" fill="rgb(235,201,9)" fg:x="62494" fg:w="89"/><text x="96.7492%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::drop (308 instructions, 0.48%)</title><rect x="96.3081%" y="197" width="0.4754%" height="15" fill="rgb(217,80,15)" fg:x="62398" fg:w="308"/><text x="96.6010%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.7835%" y="165" width="0.0417%" height="15" fill="rgb(219,152,8)" fg:x="62706" fg:w="27"/><text x="97.0764%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.22%)</title><rect x="96.7835%" y="181" width="0.2223%" height="15" fill="rgb(243,107,38)" fg:x="62706" fg:w="144"/><text x="97.0764%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (212 instructions, 0.33%)</title><rect x="96.7835%" y="197" width="0.3272%" height="15" fill="rgb(231,17,5)" fg:x="62706" fg:w="212"/><text x="97.0764%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.2588%" y="181" width="0.0417%" height="15" fill="rgb(209,25,54)" fg:x="63014" fg:w="27"/><text x="97.5518%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.4811%" y="181" width="0.0417%" height="15" fill="rgb(219,0,2)" fg:x="63158" fg:w="27"/><text x="97.7741%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="97.5228%" y="181" width="0.0417%" height="15" fill="rgb(246,9,5)" fg:x="63185" fg:w="27"/><text x="97.8157%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="97.5644%" y="181" width="0.1034%" height="15" fill="rgb(226,159,4)" fg:x="63212" fg:w="67"/><text x="97.8574%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (386 instructions, 0.60%)</title><rect x="97.2588%" y="197" width="0.5958%" height="15" fill="rgb(219,175,34)" fg:x="63014" fg:w="386"/><text x="97.5518%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,114 instructions, 1.72%)</title><rect x="96.3081%" y="213" width="1.7194%" height="15" fill="rgb(236,10,46)" fg:x="62398" fg:w="1114"/><text x="96.6010%" y="223.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,994 instructions, 15.43%)</title><rect x="82.8538%" y="229" width="15.4252%" height="15" fill="rgb(240,211,16)" fg:x="53681" fg:w="9994"/><text x="83.1468%" y="239.50">futures_task::waker:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="98.3825%" y="197" width="0.0417%" height="15" fill="rgb(205,3,43)" fg:x="63742" fg:w="27"/><text x="98.6754%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (183 instructions, 0.28%)</title><rect x="98.2791%" y="213" width="0.2825%" height="15" fill="rgb(245,7,22)" fg:x="63675" fg:w="183"/><text x="98.5720%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (299 instructions, 0.46%)</title><rect x="98.2791%" y="229" width="0.4615%" height="15" fill="rgb(239,132,32)" fg:x="63675" fg:w="299"/><text x="98.5720%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.15%)</title><rect x="98.7405%" y="229" width="0.1497%" height="15" fill="rgb(228,202,34)" fg:x="63974" fg:w="97"/><text x="99.0335%" y="239.50"></text></g><g><title>all (64,790 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(254,200,22)" fg:x="0" fg:w="64790"/><text x="0.2930%" y="271.50"></text></g><g><title>ic_cdk::api::call::callback (12,243 instructions, 18.90%)</title><rect x="81.1036%" y="245" width="18.8964%" height="15" fill="rgb(219,10,39)" fg:x="52547" fg:w="12243"/><text x="81.3965%" y="255.50">ic_cdk::api::call::callba..</text></g></svg></svg>