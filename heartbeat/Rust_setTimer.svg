<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="63379"><g><title>ic_cdk::setup (58 instructions, 0.09%)</title><rect x="0.0000%" y="213" width="0.0915%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="58"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.09%)</title><rect x="0.0915%" y="213" width="1.0871%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="689"/><text x="0.3845%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="1.1786%" y="213" width="0.1436%" height="15" fill="rgb(209,67,49)" fg:x="747" fg:w="91"/><text x="1.4716%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="1.3222%" y="197" width="0.1436%" height="15" fill="rgb(213,87,29)" fg:x="838" fg:w="91"/><text x="1.6152%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.09%)</title><rect x="1.4658%" y="165" width="0.0899%" height="15" fill="rgb(205,151,52)" fg:x="929" fg:w="57"/><text x="1.7588%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.24%)</title><rect x="1.4658%" y="181" width="0.2446%" height="15" fill="rgb(253,215,39)" fg:x="929" fg:w="155"/><text x="1.7588%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="1.7103%" y="181" width="0.6990%" height="15" fill="rgb(221,220,41)" fg:x="1084" fg:w="443"/><text x="2.0033%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="2.4093%" y="181" width="0.1499%" height="15" fill="rgb(218,133,21)" fg:x="1527" fg:w="95"/><text x="2.7023%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5592%" y="181" width="0.0947%" height="15" fill="rgb(221,193,43)" fg:x="1622" fg:w="60"/><text x="2.8522%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.6539%" y="181" width="0.0947%" height="15" fill="rgb(240,128,52)" fg:x="1682" fg:w="60"/><text x="2.9468%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.7485%" y="181" width="0.0947%" height="15" fill="rgb(253,114,12)" fg:x="1742" fg:w="60"/><text x="3.0415%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.8432%" y="181" width="0.0947%" height="15" fill="rgb(215,223,47)" fg:x="1802" fg:w="60"/><text x="3.1362%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="2.9379%" y="181" width="0.1294%" height="15" fill="rgb(248,225,23)" fg:x="1862" fg:w="82"/><text x="3.2309%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="3.0673%" y="181" width="0.1104%" height="15" fill="rgb(250,108,0)" fg:x="1944" fg:w="70"/><text x="3.3602%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="3.1777%" y="181" width="0.6990%" height="15" fill="rgb(228,208,7)" fg:x="2014" fg:w="443"/><text x="3.4707%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.8767%" y="181" width="0.0300%" height="15" fill="rgb(244,45,10)" fg:x="2457" fg:w="19"/><text x="4.1696%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="3.9067%" y="165" width="0.1436%" height="15" fill="rgb(207,125,25)" fg:x="2476" fg:w="91"/><text x="4.1996%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="4.0502%" y="133" width="0.1057%" height="15" fill="rgb(210,195,18)" fg:x="2567" fg:w="67"/><text x="4.3432%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="4.0502%" y="149" width="0.1515%" height="15" fill="rgb(249,80,12)" fg:x="2567" fg:w="96"/><text x="4.3432%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="4.2017%" y="101" width="0.0174%" height="15" fill="rgb(221,65,9)" fg:x="2663" fg:w="11"/><text x="4.4947%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="4.2191%" y="85" width="0.0552%" height="15" fill="rgb(235,49,36)" fg:x="2674" fg:w="35"/><text x="4.5120%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="4.2191%" y="101" width="0.1010%" height="15" fill="rgb(225,32,20)" fg:x="2674" fg:w="64"/><text x="4.5120%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="4.2017%" y="117" width="0.2272%" height="15" fill="rgb(215,141,46)" fg:x="2663" fg:w="144"/><text x="4.4947%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="4.2017%" y="133" width="0.3298%" height="15" fill="rgb(250,160,47)" fg:x="2663" fg:w="209"/><text x="4.4947%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="4.2017%" y="149" width="0.3455%" height="15" fill="rgb(216,222,40)" fg:x="2663" fg:w="219"/><text x="4.4947%" y="159.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="4.0502%" y="165" width="0.7211%" height="15" fill="rgb(234,217,39)" fg:x="2567" fg:w="457"/><text x="4.3432%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.08%)</title><rect x="3.9067%" y="181" width="1.0824%" height="15" fill="rgb(207,178,40)" fg:x="2476" fg:w="686"/><text x="4.1996%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="4.9890%" y="181" width="0.1499%" height="15" fill="rgb(221,136,13)" fg:x="3162" fg:w="95"/><text x="5.2820%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="5.1389%" y="181" width="0.0994%" height="15" fill="rgb(249,199,10)" fg:x="3257" fg:w="63"/><text x="5.4319%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="5.2383%" y="181" width="0.1199%" height="15" fill="rgb(249,222,13)" fg:x="3320" fg:w="76"/><text x="5.5313%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="5.3582%" y="181" width="0.1104%" height="15" fill="rgb(244,185,38)" fg:x="3396" fg:w="70"/><text x="5.6512%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="5.4687%" y="165" width="0.6990%" height="15" fill="rgb(236,202,9)" fg:x="3466" fg:w="443"/><text x="5.7617%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="6.1677%" y="165" width="0.0300%" height="15" fill="rgb(250,229,37)" fg:x="3909" fg:w="19"/><text x="6.4606%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="6.1976%" y="149" width="0.1436%" height="15" fill="rgb(206,174,23)" fg:x="3928" fg:w="91"/><text x="6.4906%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="6.3412%" y="117" width="0.1057%" height="15" fill="rgb(211,33,43)" fg:x="4019" fg:w="67"/><text x="6.6342%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="6.3412%" y="133" width="0.1515%" height="15" fill="rgb(245,58,50)" fg:x="4019" fg:w="96"/><text x="6.6342%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.4927%" y="85" width="0.0174%" height="15" fill="rgb(244,68,36)" fg:x="4115" fg:w="11"/><text x="6.7857%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="6.5100%" y="69" width="0.0552%" height="15" fill="rgb(232,229,15)" fg:x="4126" fg:w="35"/><text x="6.8030%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="6.5100%" y="85" width="0.1010%" height="15" fill="rgb(254,30,23)" fg:x="4126" fg:w="64"/><text x="6.8030%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="6.4927%" y="101" width="0.2272%" height="15" fill="rgb(235,160,14)" fg:x="4115" fg:w="144"/><text x="6.7857%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="6.4927%" y="117" width="0.3298%" height="15" fill="rgb(212,155,44)" fg:x="4115" fg:w="209"/><text x="6.7857%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="6.4927%" y="133" width="0.3455%" height="15" fill="rgb(226,2,50)" fg:x="4115" fg:w="219"/><text x="6.7857%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="6.3412%" y="149" width="0.7211%" height="15" fill="rgb(234,177,6)" fg:x="4019" fg:w="457"/><text x="6.6342%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.08%)</title><rect x="6.1976%" y="165" width="1.0824%" height="15" fill="rgb(217,24,9)" fg:x="3928" fg:w="686"/><text x="6.4906%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="7.2800%" y="165" width="0.1499%" height="15" fill="rgb(220,13,46)" fg:x="4614" fg:w="95"/><text x="7.5730%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="7.4299%" y="165" width="0.0994%" height="15" fill="rgb(239,221,27)" fg:x="4709" fg:w="63"/><text x="7.7229%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="7.5293%" y="149" width="0.1294%" height="15" fill="rgb(222,198,25)" fg:x="4772" fg:w="82"/><text x="7.8223%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.15%)</title><rect x="7.6587%" y="149" width="0.1499%" height="15" fill="rgb(211,99,13)" fg:x="4854" fg:w="95"/><text x="7.9517%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="7.8086%" y="149" width="0.1199%" height="15" fill="rgb(232,111,31)" fg:x="4949" fg:w="76"/><text x="8.1015%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.52%)</title><rect x="7.5293%" y="165" width="0.5207%" height="15" fill="rgb(245,82,37)" fg:x="4772" fg:w="330"/><text x="7.8223%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="8.0500%" y="165" width="0.1436%" height="15" fill="rgb(227,149,46)" fg:x="5102" fg:w="91"/><text x="8.3430%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,973 instructions, 3.11%)</title><rect x="5.4687%" y="181" width="3.1130%" height="15" fill="rgb(218,36,50)" fg:x="3466" fg:w="1973"/><text x="5.7617%" y="191.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="8.5817%" y="181" width="0.1199%" height="15" fill="rgb(226,80,48)" fg:x="5439" fg:w="76"/><text x="8.8747%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.7016%" y="181" width="0.0237%" height="15" fill="rgb(238,224,15)" fg:x="5515" fg:w="15"/><text x="8.9946%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.7253%" y="181" width="0.0237%" height="15" fill="rgb(241,136,10)" fg:x="5530" fg:w="15"/><text x="9.0183%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.7490%" y="181" width="0.0237%" height="15" fill="rgb(208,32,45)" fg:x="5545" fg:w="15"/><text x="9.0419%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="8.7821%" y="165" width="0.1436%" height="15" fill="rgb(207,135,9)" fg:x="5566" fg:w="91"/><text x="9.0751%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.30%)</title><rect x="8.7821%" y="181" width="0.2951%" height="15" fill="rgb(206,86,44)" fg:x="5566" fg:w="187"/><text x="9.0751%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="9.0771%" y="149" width="0.1436%" height="15" fill="rgb(245,177,15)" fg:x="5753" fg:w="91"/><text x="9.3701%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.21%)</title><rect x="9.0771%" y="165" width="0.2114%" height="15" fill="rgb(206,64,50)" fg:x="5753" fg:w="134"/><text x="9.3701%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.35%)</title><rect x="9.0771%" y="181" width="0.3455%" height="15" fill="rgb(234,36,40)" fg:x="5753" fg:w="219"/><text x="9.3701%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="9.4227%" y="181" width="0.1436%" height="15" fill="rgb(213,64,8)" fg:x="5972" fg:w="91"/><text x="9.7156%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="9.5663%" y="181" width="0.1404%" height="15" fill="rgb(210,75,36)" fg:x="6063" fg:w="89"/><text x="9.8592%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="9.7067%" y="181" width="0.1436%" height="15" fill="rgb(229,88,21)" fg:x="6152" fg:w="91"/><text x="9.9997%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="9.8503%" y="181" width="0.1436%" height="15" fill="rgb(252,204,47)" fg:x="6243" fg:w="91"/><text x="10.1432%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="10.0002%" y="181" width="0.1404%" height="15" fill="rgb(208,77,27)" fg:x="6338" fg:w="89"/><text x="10.2931%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="10.1406%" y="181" width="0.6185%" height="15" fill="rgb(221,76,26)" fg:x="6427" fg:w="392"/><text x="10.4336%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="10.7591%" y="181" width="0.6185%" height="15" fill="rgb(225,139,18)" fg:x="6819" fg:w="392"/><text x="11.0521%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.80%)</title><rect x="11.3776%" y="181" width="0.7952%" height="15" fill="rgb(230,137,11)" fg:x="7211" fg:w="504"/><text x="11.6706%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (8,000 instructions, 12.62%)</title><rect x="1.4658%" y="197" width="12.6225%" height="15" fill="rgb(212,28,1)" fg:x="929" fg:w="8000"/><text x="1.7588%" y="207.50">candid::de::IDLD..</text></g><g><title>memcpy (344 instructions, 0.54%)</title><rect x="14.0883%" y="197" width="0.5428%" height="15" fill="rgb(248,164,17)" fg:x="8929" fg:w="344"/><text x="14.3812%" y="207.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.04%)</title><rect x="14.6310%" y="197" width="0.0363%" height="15" fill="rgb(222,171,42)" fg:x="9273" fg:w="23"/><text x="14.9240%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="14.6673%" y="197" width="0.1436%" height="15" fill="rgb(243,84,45)" fg:x="9296" fg:w="91"/><text x="14.9603%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="14.8109%" y="181" width="0.1436%" height="15" fill="rgb(252,49,23)" fg:x="9387" fg:w="91"/><text x="15.1039%" y="191.50"></text></g><g><title>candid::types::internal::env_add (174 instructions, 0.27%)</title><rect x="14.8109%" y="197" width="0.2745%" height="15" fill="rgb(215,19,7)" fg:x="9387" fg:w="174"/><text x="15.1039%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="15.0854%" y="197" width="0.1436%" height="15" fill="rgb(238,81,41)" fg:x="9561" fg:w="91"/><text x="15.3784%" y="207.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="15.2290%" y="181" width="0.1215%" height="15" fill="rgb(210,199,37)" fg:x="9652" fg:w="77"/><text x="15.5220%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="15.3505%" y="165" width="0.1404%" height="15" fill="rgb(244,192,49)" fg:x="9729" fg:w="89"/><text x="15.6435%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.21%)</title><rect x="15.3505%" y="181" width="0.2098%" height="15" fill="rgb(226,211,11)" fg:x="9729" fg:w="133"/><text x="15.6435%" y="191.50"></text></g><g><title>candid::types::internal::env_add (382 instructions, 0.60%)</title><rect x="15.2290%" y="197" width="0.6027%" height="15" fill="rgb(236,162,54)" fg:x="9652" fg:w="382"/><text x="15.5220%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="15.8317%" y="181" width="0.1436%" height="15" fill="rgb(220,229,9)" fg:x="10034" fg:w="91"/><text x="16.1247%" y="191.50"></text></g><g><title>candid::types::internal::env_id (202 instructions, 0.32%)</title><rect x="15.8317%" y="197" width="0.3187%" height="15" fill="rgb(250,87,22)" fg:x="10034" fg:w="202"/><text x="16.1247%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="16.1505%" y="197" width="0.0773%" height="15" fill="rgb(239,43,17)" fg:x="10236" fg:w="49"/><text x="16.4434%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="16.2278%" y="165" width="0.0426%" height="15" fill="rgb(231,177,25)" fg:x="10285" fg:w="27"/><text x="16.5207%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="16.2278%" y="181" width="0.2240%" height="15" fill="rgb(219,179,1)" fg:x="10285" fg:w="142"/><text x="16.5207%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="16.5212%" y="165" width="0.0426%" height="15" fill="rgb(238,219,53)" fg:x="10471" fg:w="27"/><text x="16.8142%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="16.5212%" y="181" width="0.2240%" height="15" fill="rgb(232,167,36)" fg:x="10471" fg:w="142"/><text x="16.8142%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.59%)</title><rect x="16.2278%" y="197" width="0.5869%" height="15" fill="rgb(244,19,51)" fg:x="10285" fg:w="372"/><text x="16.5207%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.06%)</title><rect x="16.8147%" y="181" width="0.0552%" height="15" fill="rgb(224,6,22)" fg:x="10657" fg:w="35"/><text x="17.1077%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.05%)</title><rect x="16.8699%" y="181" width="0.0521%" height="15" fill="rgb(224,145,5)" fg:x="10692" fg:w="33"/><text x="17.1629%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (170 instructions, 0.27%)</title><rect x="16.8147%" y="197" width="0.2682%" height="15" fill="rgb(234,130,49)" fg:x="10657" fg:w="170"/><text x="17.1077%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="17.0829%" y="197" width="0.0205%" height="15" fill="rgb(254,6,2)" fg:x="10827" fg:w="13"/><text x="17.3759%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="17.1035%" y="197" width="0.0205%" height="15" fill="rgb(208,96,46)" fg:x="10840" fg:w="13"/><text x="17.3964%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="17.1240%" y="197" width="0.0205%" height="15" fill="rgb(239,3,39)" fg:x="10853" fg:w="13"/><text x="17.4169%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.07%)</title><rect x="17.1445%" y="197" width="0.0678%" height="15" fill="rgb(233,210,1)" fg:x="10866" fg:w="43"/><text x="17.4374%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="17.2123%" y="181" width="0.0110%" height="15" fill="rgb(244,137,37)" fg:x="10909" fg:w="7"/><text x="17.5053%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.2234%" y="165" width="0.0426%" height="15" fill="rgb(240,136,2)" fg:x="10916" fg:w="27"/><text x="17.5163%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.2660%" y="165" width="0.0426%" height="15" fill="rgb(239,18,37)" fg:x="10943" fg:w="27"/><text x="17.5589%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.31%)</title><rect x="17.2234%" y="181" width="0.3108%" height="15" fill="rgb(218,185,22)" fg:x="10916" fg:w="197"/><text x="17.5163%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.5342%" y="149" width="0.0426%" height="15" fill="rgb(225,218,4)" fg:x="11113" fg:w="27"/><text x="17.8272%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="17.5768%" y="149" width="0.0426%" height="15" fill="rgb(230,182,32)" fg:x="11140" fg:w="27"/><text x="17.8698%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.11%)</title><rect x="17.6194%" y="149" width="0.1073%" height="15" fill="rgb(242,56,43)" fg:x="11167" fg:w="68"/><text x="17.9124%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.38%)</title><rect x="17.5342%" y="165" width="0.3850%" height="15" fill="rgb(233,99,24)" fg:x="11113" fg:w="244"/><text x="17.8272%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 instructions, 0.45%)</title><rect x="17.5342%" y="181" width="0.4544%" height="15" fill="rgb(234,209,42)" fg:x="11113" fg:w="288"/><text x="17.8272%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="17.9886%" y="181" width="0.0205%" height="15" fill="rgb(227,7,12)" fg:x="11401" fg:w="13"/><text x="18.2816%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (565 instructions, 0.89%)</title><rect x="17.2123%" y="197" width="0.8915%" height="15" fill="rgb(245,203,43)" fg:x="10909" fg:w="565"/><text x="17.5053%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.11%)</title><rect x="18.1038%" y="181" width="0.1089%" height="15" fill="rgb(238,205,33)" fg:x="11474" fg:w="69"/><text x="18.3968%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.11%)</title><rect x="18.2127%" y="181" width="0.1073%" height="15" fill="rgb(231,56,7)" fg:x="11543" fg:w="68"/><text x="18.5056%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.36%)</title><rect x="18.1038%" y="197" width="0.3645%" height="15" fill="rgb(244,186,29)" fg:x="11474" fg:w="231"/><text x="18.3968%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.27%)</title><rect x="18.4683%" y="181" width="0.2730%" height="15" fill="rgb(234,111,31)" fg:x="11705" fg:w="173"/><text x="18.7612%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (234 instructions, 0.37%)</title><rect x="18.4683%" y="197" width="0.3692%" height="15" fill="rgb(241,149,10)" fg:x="11705" fg:w="234"/><text x="18.7612%" y="207.50"></text></g><g><title>__rust_realloc (111 instructions, 0.18%)</title><rect x="18.8375%" y="165" width="0.1751%" height="15" fill="rgb(249,206,44)" fg:x="11939" fg:w="111"/><text x="19.1304%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.25%)</title><rect x="18.8375%" y="181" width="0.2461%" height="15" fill="rgb(251,153,30)" fg:x="11939" fg:w="156"/><text x="19.1304%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="19.2288%" y="165" width="0.1310%" height="15" fill="rgb(239,152,38)" fg:x="12187" fg:w="83"/><text x="19.5217%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.20%)</title><rect x="19.2288%" y="181" width="0.1988%" height="15" fill="rgb(249,139,47)" fg:x="12187" fg:w="126"/><text x="19.5217%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (459 instructions, 0.72%)</title><rect x="18.8375%" y="197" width="0.7242%" height="15" fill="rgb(244,64,35)" fg:x="11939" fg:w="459"/><text x="19.1304%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (578 instructions, 0.91%)</title><rect x="19.5617%" y="197" width="0.9120%" height="15" fill="rgb(216,46,15)" fg:x="12398" fg:w="578"/><text x="19.8547%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="20.4737%" y="165" width="0.0205%" height="15" fill="rgb(250,74,19)" fg:x="12976" fg:w="13"/><text x="20.7666%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.11%)</title><rect x="20.4942%" y="165" width="0.1057%" height="15" fill="rgb(249,42,33)" fg:x="12989" fg:w="67"/><text x="20.7871%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (204 instructions, 0.32%)</title><rect x="20.4737%" y="181" width="0.3219%" height="15" fill="rgb(242,149,17)" fg:x="12976" fg:w="204"/><text x="20.7666%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.82%)</title><rect x="20.7955%" y="181" width="0.8173%" height="15" fill="rgb(244,29,21)" fg:x="13180" fg:w="518"/><text x="21.0885%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="21.6128%" y="133" width="0.1310%" height="15" fill="rgb(220,130,37)" fg:x="13698" fg:w="83"/><text x="21.9058%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.20%)</title><rect x="21.6128%" y="149" width="0.1988%" height="15" fill="rgb(211,67,2)" fg:x="13698" fg:w="126"/><text x="21.9058%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.33%)</title><rect x="21.6128%" y="165" width="0.3282%" height="15" fill="rgb(235,68,52)" fg:x="13698" fg:w="208"/><text x="21.9058%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="21.9410%" y="165" width="0.0237%" height="15" fill="rgb(246,142,3)" fg:x="13906" fg:w="15"/><text x="22.2340%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="21.9647%" y="165" width="0.0237%" height="15" fill="rgb(241,25,7)" fg:x="13921" fg:w="15"/><text x="22.2577%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (424 instructions, 0.67%)</title><rect x="21.6128%" y="181" width="0.6690%" height="15" fill="rgb(242,119,39)" fg:x="13698" fg:w="424"/><text x="21.9058%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.81%)</title><rect x="22.2818%" y="181" width="0.8141%" height="15" fill="rgb(241,98,45)" fg:x="14122" fg:w="516"/><text x="22.5748%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="23.0960%" y="181" width="0.0110%" height="15" fill="rgb(254,28,30)" fg:x="14638" fg:w="7"/><text x="23.3889%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (7 instructions, 0.01%)</title><rect x="23.1070%" y="181" width="0.0110%" height="15" fill="rgb(241,142,54)" fg:x="14645" fg:w="7"/><text x="23.4000%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="23.1181%" y="181" width="0.0947%" height="15" fill="rgb(222,85,15)" fg:x="14652" fg:w="60"/><text x="23.4110%" y="191.50"></text></g><g><title>candid::utils::write_args (1,898 instructions, 2.99%)</title><rect x="20.4737%" y="197" width="2.9947%" height="15" fill="rgb(210,85,47)" fg:x="12976" fg:w="1898"/><text x="20.7666%" y="207.50">ca..</text></g><g><title>timer::__canister_method_setTimer::{{closure}} (16,790 instructions, 26.49%)</title><rect x="1.3222%" y="213" width="26.4914%" height="15" fill="rgb(224,206,25)" fg:x="838" fg:w="16790"/><text x="1.6152%" y="223.50">timer::__canister_method_setTimer::{..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="27.8136%" y="213" width="0.0221%" height="15" fill="rgb(243,201,19)" fg:x="17628" fg:w="14"/><text x="28.1066%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="27.9777%" y="197" width="0.0426%" height="15" fill="rgb(236,59,4)" fg:x="17732" fg:w="27"/><text x="28.2707%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.37%)</title><rect x="27.8373%" y="213" width="0.3676%" height="15" fill="rgb(254,179,45)" fg:x="17643" fg:w="233"/><text x="28.1303%" y="223.50"></text></g><g><title>canister_update setTimer (18,020 instructions, 28.43%)</title><rect x="0.0000%" y="229" width="28.4321%" height="15" fill="rgb(226,14,10)" fg:x="0" fg:w="18020"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="28.4321%" y="213" width="0.0379%" height="15" fill="rgb(244,27,41)" fg:x="18020" fg:w="24"/><text x="28.7251%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="28.4700%" y="213" width="0.1310%" height="15" fill="rgb(235,35,32)" fg:x="18044" fg:w="83"/><text x="28.7630%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="28.6010%" y="213" width="0.1310%" height="15" fill="rgb(218,68,31)" fg:x="18127" fg:w="83"/><text x="28.8939%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="28.7319%" y="197" width="0.1310%" height="15" fill="rgb(207,120,37)" fg:x="18210" fg:w="83"/><text x="29.0249%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="28.8629%" y="197" width="0.1310%" height="15" fill="rgb(227,98,0)" fg:x="18293" fg:w="83"/><text x="29.1558%" y="207.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="28.9938%" y="197" width="0.0110%" height="15" fill="rgb(207,7,3)" fg:x="18376" fg:w="7"/><text x="29.2868%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="29.0049%" y="197" width="0.1310%" height="15" fill="rgb(206,98,19)" fg:x="18383" fg:w="83"/><text x="29.2978%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="29.1358%" y="197" width="0.0331%" height="15" fill="rgb(217,5,26)" fg:x="18466" fg:w="21"/><text x="29.4288%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.13%)</title><rect x="29.1690%" y="181" width="0.1278%" height="15" fill="rgb(235,190,38)" fg:x="18487" fg:w="81"/><text x="29.4619%" y="191.50"></text></g><g><title>memset (130 instructions, 0.21%)</title><rect x="29.2968%" y="181" width="0.2051%" height="15" fill="rgb(247,86,24)" fg:x="18568" fg:w="130"/><text x="29.5897%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="29.5019%" y="181" width="0.2824%" height="15" fill="rgb(205,101,16)" fg:x="18698" fg:w="179"/><text x="29.7949%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="29.7843%" y="181" width="0.1404%" height="15" fill="rgb(246,168,33)" fg:x="18877" fg:w="89"/><text x="30.0773%" y="191.50"></text></g><g><title>ic_cdk::api::id (1,619 instructions, 2.55%)</title><rect x="29.1690%" y="197" width="2.5545%" height="15" fill="rgb(231,114,1)" fg:x="18487" fg:w="1619"/><text x="29.4619%" y="207.50">i..</text></g><g><title>candid::ser::IDLBuilder::new (54 instructions, 0.09%)</title><rect x="31.7234%" y="197" width="0.0852%" height="15" fill="rgb(207,184,53)" fg:x="20106" fg:w="54"/><text x="32.0164%" y="207.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.04%)</title><rect x="31.8086%" y="181" width="0.0363%" height="15" fill="rgb(224,95,51)" fg:x="20160" fg:w="23"/><text x="32.1016%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="31.8449%" y="181" width="0.1436%" height="15" fill="rgb(212,188,45)" fg:x="20183" fg:w="91"/><text x="32.1379%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="31.9885%" y="165" width="0.1436%" height="15" fill="rgb(223,154,38)" fg:x="20274" fg:w="91"/><text x="32.2815%" y="175.50"></text></g><g><title>candid::types::internal::env_add (174 instructions, 0.27%)</title><rect x="31.9885%" y="181" width="0.2745%" height="15" fill="rgb(251,22,52)" fg:x="20274" fg:w="174"/><text x="32.2815%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="32.2631%" y="181" width="0.1436%" height="15" fill="rgb(229,209,22)" fg:x="20448" fg:w="91"/><text x="32.5560%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="32.4066%" y="165" width="0.1215%" height="15" fill="rgb(234,138,34)" fg:x="20539" fg:w="77"/><text x="32.6996%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="32.5281%" y="149" width="0.1404%" height="15" fill="rgb(212,95,11)" fg:x="20616" fg:w="89"/><text x="32.8211%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.21%)</title><rect x="32.5281%" y="165" width="0.2098%" height="15" fill="rgb(240,179,47)" fg:x="20616" fg:w="133"/><text x="32.8211%" y="175.50"></text></g><g><title>candid::types::internal::env_add (382 instructions, 0.60%)</title><rect x="32.4066%" y="181" width="0.6027%" height="15" fill="rgb(240,163,11)" fg:x="20539" fg:w="382"/><text x="32.6996%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.08%)</title><rect x="33.0094%" y="165" width="0.0805%" height="15" fill="rgb(236,37,12)" fg:x="20921" fg:w="51"/><text x="33.3023%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="33.0898%" y="165" width="0.0205%" height="15" fill="rgb(232,164,16)" fg:x="20972" fg:w="13"/><text x="33.3828%" y="175.50"></text></g><g><title>candid::types::internal::env_id (198 instructions, 0.31%)</title><rect x="33.0094%" y="181" width="0.3124%" height="15" fill="rgb(244,205,15)" fg:x="20921" fg:w="198"/><text x="33.3023%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (1,088 instructions, 1.72%)</title><rect x="31.8086%" y="197" width="1.7167%" height="15" fill="rgb(223,117,47)" fg:x="20160" fg:w="1088"/><text x="32.1016%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.18%)</title><rect x="33.5253%" y="165" width="0.1799%" height="15" fill="rgb(244,107,35)" fg:x="21248" fg:w="114"/><text x="33.8183%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.25%)</title><rect x="33.5253%" y="181" width="0.2477%" height="15" fill="rgb(205,140,8)" fg:x="21248" fg:w="157"/><text x="33.8183%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (242 instructions, 0.38%)</title><rect x="33.5253%" y="197" width="0.3818%" height="15" fill="rgb(228,84,46)" fg:x="21248" fg:w="242"/><text x="33.8183%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.05%)</title><rect x="33.9071%" y="181" width="0.0489%" height="15" fill="rgb(254,188,9)" fg:x="21490" fg:w="31"/><text x="34.2001%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="33.9560%" y="181" width="0.0205%" height="15" fill="rgb(206,112,54)" fg:x="21521" fg:w="13"/><text x="34.2490%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (114 instructions, 0.18%)</title><rect x="33.9071%" y="197" width="0.1799%" height="15" fill="rgb(216,84,49)" fg:x="21490" fg:w="114"/><text x="34.2001%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="34.0870%" y="197" width="0.0205%" height="15" fill="rgb(214,194,35)" fg:x="21604" fg:w="13"/><text x="34.3800%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="34.1075%" y="165" width="0.1310%" height="15" fill="rgb(249,28,3)" fg:x="21617" fg:w="83"/><text x="34.4005%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.20%)</title><rect x="34.1075%" y="181" width="0.1988%" height="15" fill="rgb(222,56,52)" fg:x="21617" fg:w="126"/><text x="34.4005%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.13%)</title><rect x="34.4357%" y="165" width="0.1278%" height="15" fill="rgb(245,217,50)" fg:x="21825" fg:w="81"/><text x="34.7287%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.20%)</title><rect x="34.4357%" y="181" width="0.1956%" height="15" fill="rgb(213,201,24)" fg:x="21825" fg:w="124"/><text x="34.7287%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (414 instructions, 0.65%)</title><rect x="34.1075%" y="197" width="0.6532%" height="15" fill="rgb(248,116,28)" fg:x="21617" fg:w="414"/><text x="34.4005%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="34.7607%" y="149" width="0.1436%" height="15" fill="rgb(219,72,43)" fg:x="22031" fg:w="91"/><text x="35.0537%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.21%)</title><rect x="34.7607%" y="165" width="0.2114%" height="15" fill="rgb(209,138,14)" fg:x="22031" fg:w="134"/><text x="35.0537%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.34%)</title><rect x="34.7607%" y="181" width="0.3408%" height="15" fill="rgb(222,18,33)" fg:x="22031" fg:w="216"/><text x="35.0537%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="35.1015%" y="181" width="0.0237%" height="15" fill="rgb(213,199,7)" fg:x="22247" fg:w="15"/><text x="35.3945%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="35.1252%" y="133" width="0.1436%" height="15" fill="rgb(250,110,10)" fg:x="22262" fg:w="91"/><text x="35.4182%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.21%)</title><rect x="35.1252%" y="149" width="0.2114%" height="15" fill="rgb(248,123,6)" fg:x="22262" fg:w="134"/><text x="35.4182%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.34%)</title><rect x="35.1252%" y="165" width="0.3408%" height="15" fill="rgb(206,91,31)" fg:x="22262" fg:w="216"/><text x="35.4182%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (291 instructions, 0.46%)</title><rect x="35.1252%" y="181" width="0.4591%" height="15" fill="rgb(211,154,13)" fg:x="22262" fg:w="291"/><text x="35.4182%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="35.5843%" y="181" width="0.0552%" height="15" fill="rgb(225,148,7)" fg:x="22553" fg:w="35"/><text x="35.8773%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="35.6396%" y="181" width="0.0994%" height="15" fill="rgb(220,160,43)" fg:x="22588" fg:w="63"/><text x="35.9325%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (862 instructions, 1.36%)</title><rect x="34.7607%" y="197" width="1.3601%" height="15" fill="rgb(213,52,39)" fg:x="22031" fg:w="862"/><text x="35.0537%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="36.1208%" y="197" width="0.1057%" height="15" fill="rgb(243,137,7)" fg:x="22893" fg:w="67"/><text x="36.4138%" y="207.50"></text></g><g><title>__rust_realloc (55 instructions, 0.09%)</title><rect x="36.2265%" y="165" width="0.0868%" height="15" fill="rgb(230,79,13)" fg:x="22960" fg:w="55"/><text x="36.5195%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.16%)</title><rect x="36.2265%" y="181" width="0.1578%" height="15" fill="rgb(247,105,23)" fg:x="22960" fg:w="100"/><text x="36.5195%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.30%)</title><rect x="36.2265%" y="197" width="0.2951%" height="15" fill="rgb(223,179,41)" fg:x="22960" fg:w="187"/><text x="36.5195%" y="207.50"></text></g><g><title>memcpy (147 instructions, 0.23%)</title><rect x="36.5216%" y="197" width="0.2319%" height="15" fill="rgb(218,9,34)" fg:x="23147" fg:w="147"/><text x="36.8145%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="36.7535%" y="181" width="0.0110%" height="15" fill="rgb(222,106,8)" fg:x="23294" fg:w="7"/><text x="37.0465%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.7645%" y="181" width="0.0205%" height="15" fill="rgb(211,220,0)" fg:x="23301" fg:w="13"/><text x="37.0575%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="36.7851%" y="181" width="0.1404%" height="15" fill="rgb(229,52,16)" fg:x="23314" fg:w="89"/><text x="37.0780%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="36.9255%" y="181" width="0.0994%" height="15" fill="rgb(212,155,18)" fg:x="23403" fg:w="63"/><text x="37.2184%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="37.0249%" y="181" width="0.1404%" height="15" fill="rgb(242,21,14)" fg:x="23466" fg:w="89"/><text x="37.3179%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (354 instructions, 0.56%)</title><rect x="36.7535%" y="197" width="0.5585%" height="15" fill="rgb(222,19,48)" fg:x="23294" fg:w="354"/><text x="37.0465%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="37.3120%" y="197" width="0.1436%" height="15" fill="rgb(232,45,27)" fg:x="23648" fg:w="91"/><text x="37.6050%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="37.4556%" y="197" width="0.1436%" height="15" fill="rgb(249,103,42)" fg:x="23739" fg:w="91"/><text x="37.7486%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="37.5992%" y="197" width="0.0347%" height="15" fill="rgb(246,81,33)" fg:x="23830" fg:w="22"/><text x="37.8922%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (62 instructions, 0.10%)</title><rect x="37.6339%" y="181" width="0.0978%" height="15" fill="rgb(252,33,42)" fg:x="23852" fg:w="62"/><text x="37.9269%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (83 instructions, 0.13%)</title><rect x="37.6339%" y="197" width="0.1310%" height="15" fill="rgb(209,212,41)" fg:x="23852" fg:w="83"/><text x="37.9269%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.04%)</title><rect x="37.7649%" y="197" width="0.0363%" height="15" fill="rgb(207,154,6)" fg:x="23935" fg:w="23"/><text x="38.0578%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (15,237 instructions, 24.04%)</title><rect x="28.7319%" y="213" width="24.0411%" height="15" fill="rgb(223,64,47)" fg:x="18210" fg:w="15237"/><text x="29.0249%" y="223.50">ic_cdk_timers::global_timer::{{c..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="52.7730%" y="213" width="0.0221%" height="15" fill="rgb(211,161,38)" fg:x="33447" fg:w="14"/><text x="53.0660%" y="223.50"></text></g><g><title>canister_global_timer (15,561 instructions, 24.55%)</title><rect x="28.4321%" y="229" width="24.5523%" height="15" fill="rgb(219,138,40)" fg:x="18020" fg:w="15561"/><text x="28.7251%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="52.9844%" y="213" width="0.1310%" height="15" fill="rgb(241,228,46)" fg:x="33581" fg:w="83"/><text x="53.2774%" y="223.50"></text></g><g><title>memset (130 instructions, 0.21%)</title><rect x="53.1154%" y="213" width="0.2051%" height="15" fill="rgb(223,209,38)" fg:x="33664" fg:w="130"/><text x="53.4084%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="53.3205%" y="213" width="0.2824%" height="15" fill="rgb(236,164,45)" fg:x="33794" fg:w="179"/><text x="53.6135%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="53.6029%" y="213" width="0.1404%" height="15" fill="rgb(231,15,5)" fg:x="33973" fg:w="89"/><text x="53.8959%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="53.7434%" y="197" width="0.1310%" height="15" fill="rgb(252,35,15)" fg:x="34062" fg:w="83"/><text x="54.0363%" y="207.50"></text></g><g><title>memset (130 instructions, 0.21%)</title><rect x="53.8743%" y="197" width="0.2051%" height="15" fill="rgb(248,181,18)" fg:x="34145" fg:w="130"/><text x="54.1673%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.28%)</title><rect x="54.0794%" y="197" width="0.2824%" height="15" fill="rgb(233,39,42)" fg:x="34275" fg:w="179"/><text x="54.3724%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="54.3619%" y="197" width="0.1404%" height="15" fill="rgb(238,110,33)" fg:x="34454" fg:w="89"/><text x="54.6548%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,621 instructions, 2.56%)</title><rect x="53.7434%" y="213" width="2.5576%" height="15" fill="rgb(233,195,10)" fg:x="34062" fg:w="1621"/><text x="54.0363%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 1.07%)</title><rect x="56.3010%" y="213" width="1.0650%" height="15" fill="rgb(254,105,3)" fg:x="35683" fg:w="675"/><text x="56.5940%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="57.3660%" y="213" width="0.1310%" height="15" fill="rgb(221,225,9)" fg:x="36358" fg:w="83"/><text x="57.6590%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="57.4970%" y="197" width="0.1294%" height="15" fill="rgb(224,227,45)" fg:x="36441" fg:w="82"/><text x="57.7899%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="57.6263%" y="197" width="0.6990%" height="15" fill="rgb(229,198,43)" fg:x="36523" fg:w="443"/><text x="57.9193%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="58.3253%" y="197" width="0.1499%" height="15" fill="rgb(206,209,35)" fg:x="36966" fg:w="95"/><text x="58.6183%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="58.4752%" y="197" width="0.0947%" height="15" fill="rgb(245,195,53)" fg:x="37061" fg:w="60"/><text x="58.7682%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="58.5699%" y="197" width="0.0947%" height="15" fill="rgb(240,92,26)" fg:x="37121" fg:w="60"/><text x="58.8628%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="58.6645%" y="197" width="0.0947%" height="15" fill="rgb(207,40,23)" fg:x="37181" fg:w="60"/><text x="58.9575%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="58.7592%" y="197" width="0.0947%" height="15" fill="rgb(223,111,35)" fg:x="37241" fg:w="60"/><text x="59.0522%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="58.8539%" y="197" width="0.1294%" height="15" fill="rgb(229,147,28)" fg:x="37301" fg:w="82"/><text x="59.1468%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="58.9833%" y="197" width="0.1104%" height="15" fill="rgb(211,29,28)" fg:x="37383" fg:w="70"/><text x="59.2762%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="59.0937%" y="197" width="0.6990%" height="15" fill="rgb(228,72,33)" fg:x="37453" fg:w="443"/><text x="59.3867%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="59.7927%" y="197" width="0.0300%" height="15" fill="rgb(205,214,31)" fg:x="37896" fg:w="19"/><text x="60.0856%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="59.8227%" y="181" width="0.1310%" height="15" fill="rgb(224,111,15)" fg:x="37915" fg:w="83"/><text x="60.1156%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="59.9536%" y="149" width="0.1057%" height="15" fill="rgb(253,21,26)" fg:x="37998" fg:w="67"/><text x="60.2466%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="59.9536%" y="165" width="0.1515%" height="15" fill="rgb(245,139,43)" fg:x="37998" fg:w="96"/><text x="60.2466%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="60.1051%" y="117" width="0.0174%" height="15" fill="rgb(252,170,7)" fg:x="38094" fg:w="11"/><text x="60.3981%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="60.1224%" y="101" width="0.0552%" height="15" fill="rgb(231,118,14)" fg:x="38105" fg:w="35"/><text x="60.4154%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="60.1224%" y="117" width="0.1010%" height="15" fill="rgb(238,83,0)" fg:x="38105" fg:w="64"/><text x="60.4154%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="60.1051%" y="133" width="0.2272%" height="15" fill="rgb(221,39,39)" fg:x="38094" fg:w="144"/><text x="60.3981%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="60.1051%" y="149" width="0.3298%" height="15" fill="rgb(222,119,46)" fg:x="38094" fg:w="209"/><text x="60.3981%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="60.1051%" y="165" width="0.3455%" height="15" fill="rgb(222,165,49)" fg:x="38094" fg:w="219"/><text x="60.3981%" y="175.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="59.9536%" y="181" width="0.7211%" height="15" fill="rgb(219,113,52)" fg:x="37998" fg:w="457"/><text x="60.2466%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.07%)</title><rect x="59.8227%" y="197" width="1.0698%" height="15" fill="rgb(214,7,15)" fg:x="37915" fg:w="678"/><text x="60.1156%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="60.8924%" y="197" width="0.1499%" height="15" fill="rgb(235,32,4)" fg:x="38593" fg:w="95"/><text x="61.1854%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="61.0423%" y="197" width="0.1404%" height="15" fill="rgb(238,90,54)" fg:x="38688" fg:w="89"/><text x="61.3353%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="61.1827%" y="197" width="0.1199%" height="15" fill="rgb(213,208,19)" fg:x="38777" fg:w="76"/><text x="61.4757%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="61.3026%" y="197" width="0.1104%" height="15" fill="rgb(233,156,4)" fg:x="38853" fg:w="70"/><text x="61.5956%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="61.4131%" y="181" width="0.6990%" height="15" fill="rgb(207,194,5)" fg:x="38923" fg:w="443"/><text x="61.7061%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="62.1121%" y="181" width="0.0300%" height="15" fill="rgb(206,111,30)" fg:x="39366" fg:w="19"/><text x="62.4050%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="62.1420%" y="165" width="0.1310%" height="15" fill="rgb(243,70,54)" fg:x="39385" fg:w="83"/><text x="62.4350%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="62.2730%" y="133" width="0.1057%" height="15" fill="rgb(242,28,8)" fg:x="39468" fg:w="67"/><text x="62.5660%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="62.2730%" y="149" width="0.1515%" height="15" fill="rgb(219,106,18)" fg:x="39468" fg:w="96"/><text x="62.5660%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="62.4245%" y="101" width="0.0174%" height="15" fill="rgb(244,222,10)" fg:x="39564" fg:w="11"/><text x="62.7174%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="62.4418%" y="85" width="0.0552%" height="15" fill="rgb(236,179,52)" fg:x="39575" fg:w="35"/><text x="62.7348%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="62.4418%" y="101" width="0.1010%" height="15" fill="rgb(213,23,39)" fg:x="39575" fg:w="64"/><text x="62.7348%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="62.4245%" y="117" width="0.2272%" height="15" fill="rgb(238,48,10)" fg:x="39564" fg:w="144"/><text x="62.7174%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="62.4245%" y="133" width="0.3298%" height="15" fill="rgb(251,196,23)" fg:x="39564" fg:w="209"/><text x="62.7174%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="62.4245%" y="149" width="0.3455%" height="15" fill="rgb(250,152,24)" fg:x="39564" fg:w="219"/><text x="62.7174%" y="159.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="62.2730%" y="165" width="0.7211%" height="15" fill="rgb(209,150,17)" fg:x="39468" fg:w="457"/><text x="62.5660%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.07%)</title><rect x="62.1420%" y="181" width="1.0698%" height="15" fill="rgb(234,202,34)" fg:x="39385" fg:w="678"/><text x="62.4350%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="63.2118%" y="181" width="0.1499%" height="15" fill="rgb(253,148,53)" fg:x="40063" fg:w="95"/><text x="63.5048%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="63.3617%" y="181" width="0.1404%" height="15" fill="rgb(218,129,16)" fg:x="40158" fg:w="89"/><text x="63.6547%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="63.5021%" y="165" width="0.1294%" height="15" fill="rgb(216,85,19)" fg:x="40247" fg:w="82"/><text x="63.7951%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.15%)</title><rect x="63.6315%" y="165" width="0.1499%" height="15" fill="rgb(235,228,7)" fg:x="40329" fg:w="95"/><text x="63.9245%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="63.7814%" y="165" width="0.1199%" height="15" fill="rgb(245,175,0)" fg:x="40424" fg:w="76"/><text x="64.0743%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.52%)</title><rect x="63.5021%" y="181" width="0.5207%" height="15" fill="rgb(208,168,36)" fg:x="40247" fg:w="330"/><text x="63.7951%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="64.0228%" y="181" width="0.1436%" height="15" fill="rgb(246,171,24)" fg:x="40577" fg:w="91"/><text x="64.3158%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,991 instructions, 3.14%)</title><rect x="61.4131%" y="197" width="3.1414%" height="15" fill="rgb(215,142,24)" fg:x="38923" fg:w="1991"/><text x="61.7061%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="64.5545%" y="197" width="0.1199%" height="15" fill="rgb(250,187,7)" fg:x="40914" fg:w="76"/><text x="64.8475%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="64.6744%" y="197" width="0.0237%" height="15" fill="rgb(228,66,33)" fg:x="40990" fg:w="15"/><text x="64.9674%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="64.6981%" y="197" width="0.0237%" height="15" fill="rgb(234,215,21)" fg:x="41005" fg:w="15"/><text x="64.9911%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="64.7218%" y="197" width="0.0237%" height="15" fill="rgb(222,191,20)" fg:x="41020" fg:w="15"/><text x="65.0147%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="64.7549%" y="181" width="0.1436%" height="15" fill="rgb(245,79,54)" fg:x="41041" fg:w="91"/><text x="65.0479%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.30%)</title><rect x="64.7549%" y="197" width="0.2951%" height="15" fill="rgb(240,10,37)" fg:x="41041" fg:w="187"/><text x="65.0479%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.0499%" y="165" width="0.1436%" height="15" fill="rgb(214,192,32)" fg:x="41228" fg:w="91"/><text x="65.3429%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.21%)</title><rect x="65.0499%" y="181" width="0.2114%" height="15" fill="rgb(209,36,54)" fg:x="41228" fg:w="134"/><text x="65.3429%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.35%)</title><rect x="65.0499%" y="197" width="0.3455%" height="15" fill="rgb(220,10,11)" fg:x="41228" fg:w="219"/><text x="65.3429%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="65.3955%" y="197" width="0.1310%" height="15" fill="rgb(221,106,17)" fg:x="41447" fg:w="83"/><text x="65.6884%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="65.5264%" y="197" width="0.0994%" height="15" fill="rgb(251,142,44)" fg:x="41530" fg:w="63"/><text x="65.8194%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.6258%" y="197" width="0.1436%" height="15" fill="rgb(238,13,15)" fg:x="41593" fg:w="91"/><text x="65.9188%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.14%)</title><rect x="65.7694%" y="197" width="0.1436%" height="15" fill="rgb(208,107,27)" fg:x="41684" fg:w="91"/><text x="66.0624%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="65.9193%" y="197" width="0.1404%" height="15" fill="rgb(205,136,37)" fg:x="41779" fg:w="89"/><text x="66.2123%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="66.0597%" y="197" width="0.6185%" height="15" fill="rgb(250,205,27)" fg:x="41868" fg:w="392"/><text x="66.3527%" y="207.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="66.6782%" y="197" width="0.6185%" height="15" fill="rgb(210,80,43)" fg:x="42260" fg:w="392"/><text x="66.9712%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.80%)</title><rect x="67.2967%" y="197" width="0.7952%" height="15" fill="rgb(247,160,36)" fg:x="42652" fg:w="504"/><text x="67.5897%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,949 instructions, 12.54%)</title><rect x="57.4970%" y="213" width="12.5420%" height="15" fill="rgb(234,13,49)" fg:x="36441" fg:w="7949"/><text x="57.7899%" y="223.50">candid::de::IDLD..</text></g><g><title>memcpy (344 instructions, 0.54%)</title><rect x="70.0390%" y="213" width="0.5428%" height="15" fill="rgb(234,122,0)" fg:x="44390" fg:w="344"/><text x="70.3319%" y="223.50"></text></g><g><title>memcmp (77 instructions, 0.12%)</title><rect x="70.5817%" y="181" width="0.1215%" height="15" fill="rgb(207,146,38)" fg:x="44734" fg:w="77"/><text x="70.8747%" y="191.50"></text></g><g><title>candid::types::internal::find_type (224 instructions, 0.35%)</title><rect x="70.5817%" y="197" width="0.3534%" height="15" fill="rgb(207,177,25)" fg:x="44734" fg:w="224"/><text x="70.8747%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (268 instructions, 0.42%)</title><rect x="70.5817%" y="213" width="0.4229%" height="15" fill="rgb(211,178,42)" fg:x="44734" fg:w="268"/><text x="70.8747%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="71.0046%" y="213" width="0.0773%" height="15" fill="rgb(230,69,54)" fg:x="45002" fg:w="49"/><text x="71.2976%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="71.0819%" y="197" width="0.0994%" height="15" fill="rgb(214,135,41)" fg:x="45051" fg:w="63"/><text x="71.3749%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.10%)</title><rect x="71.2507%" y="197" width="0.0994%" height="15" fill="rgb(237,67,25)" fg:x="45158" fg:w="63"/><text x="71.5437%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.34%)</title><rect x="71.0819%" y="213" width="0.3377%" height="15" fill="rgb(222,189,50)" fg:x="45051" fg:w="214"/><text x="71.3749%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.06%)</title><rect x="71.4196%" y="197" width="0.0552%" height="15" fill="rgb(245,148,34)" fg:x="45265" fg:w="35"/><text x="71.7125%" y="207.50"></text></g><g><title>candid::de::Deserializer::add_cost (54 instructions, 0.09%)</title><rect x="71.4748%" y="197" width="0.0852%" height="15" fill="rgb(222,29,6)" fg:x="45300" fg:w="54"/><text x="71.7677%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (191 instructions, 0.30%)</title><rect x="71.4196%" y="213" width="0.3014%" height="15" fill="rgb(221,189,43)" fg:x="45265" fg:w="191"/><text x="71.7125%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="71.7209%" y="213" width="0.0205%" height="15" fill="rgb(207,36,27)" fg:x="45456" fg:w="13"/><text x="72.0139%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="71.7414%" y="213" width="0.0205%" height="15" fill="rgb(217,90,24)" fg:x="45469" fg:w="13"/><text x="72.0344%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="71.7619%" y="213" width="0.0205%" height="15" fill="rgb(224,66,35)" fg:x="45482" fg:w="13"/><text x="72.0549%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.07%)</title><rect x="71.7825%" y="213" width="0.0678%" height="15" fill="rgb(221,13,50)" fg:x="45495" fg:w="43"/><text x="72.0754%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="71.8503%" y="197" width="0.0110%" height="15" fill="rgb(236,68,49)" fg:x="45538" fg:w="7"/><text x="72.1433%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="71.8613%" y="197" width="0.1404%" height="15" fill="rgb(229,146,28)" fg:x="45545" fg:w="89"/><text x="72.1543%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="72.0018%" y="165" width="0.0426%" height="15" fill="rgb(225,31,38)" fg:x="45634" fg:w="27"/><text x="72.2947%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.19%)</title><rect x="72.0018%" y="181" width="0.1862%" height="15" fill="rgb(250,208,3)" fg:x="45634" fg:w="118"/><text x="72.2947%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (162 instructions, 0.26%)</title><rect x="72.0018%" y="197" width="0.2556%" height="15" fill="rgb(246,54,23)" fg:x="45634" fg:w="162"/><text x="72.2947%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="72.2574%" y="197" width="0.0205%" height="15" fill="rgb(243,76,11)" fg:x="45796" fg:w="13"/><text x="72.5503%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (331 instructions, 0.52%)</title><rect x="71.8503%" y="213" width="0.5223%" height="15" fill="rgb(245,21,50)" fg:x="45538" fg:w="331"/><text x="72.1433%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="72.3726%" y="213" width="0.1404%" height="15" fill="rgb(228,9,43)" fg:x="45869" fg:w="89"/><text x="72.6655%" y="223.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="72.5130%" y="213" width="0.0110%" height="15" fill="rgb(208,100,47)" fg:x="45958" fg:w="7"/><text x="72.8059%" y="223.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="72.5256%" y="213" width="0.0110%" height="15" fill="rgb(232,26,8)" fg:x="45966" fg:w="7"/><text x="72.8186%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="72.5382%" y="181" width="0.1404%" height="15" fill="rgb(216,166,38)" fg:x="45974" fg:w="89"/><text x="72.8312%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.21%)</title><rect x="72.5382%" y="197" width="0.2098%" height="15" fill="rgb(251,202,51)" fg:x="45974" fg:w="133"/><text x="72.8312%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="72.7481%" y="181" width="0.0426%" height="15" fill="rgb(254,216,34)" fg:x="46107" fg:w="27"/><text x="73.0410%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.22%)</title><rect x="72.7481%" y="197" width="0.2240%" height="15" fill="rgb(251,32,27)" fg:x="46107" fg:w="142"/><text x="73.0410%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (399 instructions, 0.63%)</title><rect x="72.5382%" y="213" width="0.6295%" height="15" fill="rgb(208,127,28)" fg:x="45974" fg:w="399"/><text x="72.8312%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.82%)</title><rect x="73.1678%" y="213" width="0.8173%" height="15" fill="rgb(224,137,22)" fg:x="46373" fg:w="518"/><text x="73.4607%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="73.9851%" y="165" width="0.1310%" height="15" fill="rgb(254,70,32)" fg:x="46891" fg:w="83"/><text x="74.2780%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.20%)</title><rect x="73.9851%" y="181" width="0.1988%" height="15" fill="rgb(229,75,37)" fg:x="46891" fg:w="126"/><text x="74.2780%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.33%)</title><rect x="73.9851%" y="197" width="0.3282%" height="15" fill="rgb(252,64,23)" fg:x="46891" fg:w="208"/><text x="74.2780%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="74.3133%" y="197" width="0.0237%" height="15" fill="rgb(232,162,48)" fg:x="47099" fg:w="15"/><text x="74.6062%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="74.3369%" y="197" width="0.0237%" height="15" fill="rgb(246,160,12)" fg:x="47114" fg:w="15"/><text x="74.6299%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (424 instructions, 0.67%)</title><rect x="73.9851%" y="213" width="0.6690%" height="15" fill="rgb(247,166,0)" fg:x="46891" fg:w="424"/><text x="74.2780%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.81%)</title><rect x="74.6541%" y="213" width="0.8141%" height="15" fill="rgb(249,219,21)" fg:x="47315" fg:w="516"/><text x="74.9470%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="75.4682%" y="213" width="0.0110%" height="15" fill="rgb(205,209,3)" fg:x="47831" fg:w="7"/><text x="75.7612%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="75.4793%" y="197" width="0.0110%" height="15" fill="rgb(243,44,1)" fg:x="47838" fg:w="7"/><text x="75.7722%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="75.4903%" y="197" width="0.1404%" height="15" fill="rgb(206,159,16)" fg:x="47845" fg:w="89"/><text x="75.7833%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (156 instructions, 0.25%)</title><rect x="75.4793%" y="213" width="0.2461%" height="15" fill="rgb(244,77,30)" fg:x="47838" fg:w="156"/><text x="75.7722%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (17,762 instructions, 28.03%)</title><rect x="52.9844%" y="229" width="28.0251%" height="15" fill="rgb(218,69,12)" fg:x="33581" fg:w="17762"/><text x="53.2774%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="81.0095%" y="213" width="0.1310%" height="15" fill="rgb(212,87,7)" fg:x="51343" fg:w="83"/><text x="81.3025%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="81.1404%" y="165" width="0.0331%" height="15" fill="rgb(245,114,25)" fg:x="51426" fg:w="21"/><text x="81.4334%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="81.1736%" y="149" width="0.1294%" height="15" fill="rgb(210,61,42)" fg:x="51447" fg:w="82"/><text x="81.4665%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="81.3030%" y="149" width="0.6990%" height="15" fill="rgb(211,52,33)" fg:x="51529" fg:w="443"/><text x="81.5959%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="82.0019%" y="149" width="0.1499%" height="15" fill="rgb(234,58,33)" fg:x="51972" fg:w="95"/><text x="82.2949%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="82.1518%" y="149" width="0.0947%" height="15" fill="rgb(220,115,36)" fg:x="52067" fg:w="60"/><text x="82.4448%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="82.2465%" y="149" width="0.0947%" height="15" fill="rgb(243,153,54)" fg:x="52127" fg:w="60"/><text x="82.5395%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="82.3412%" y="149" width="0.0947%" height="15" fill="rgb(251,47,18)" fg:x="52187" fg:w="60"/><text x="82.6341%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="82.4358%" y="149" width="0.0947%" height="15" fill="rgb(242,102,42)" fg:x="52247" fg:w="60"/><text x="82.7288%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.13%)</title><rect x="82.5305%" y="149" width="0.1294%" height="15" fill="rgb(234,31,38)" fg:x="52307" fg:w="82"/><text x="82.8235%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="82.6599%" y="149" width="0.1104%" height="15" fill="rgb(221,117,51)" fg:x="52389" fg:w="70"/><text x="82.9528%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="82.7703%" y="149" width="0.6990%" height="15" fill="rgb(212,20,18)" fg:x="52459" fg:w="443"/><text x="83.0633%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="83.4693%" y="149" width="0.0300%" height="15" fill="rgb(245,133,36)" fg:x="52902" fg:w="19"/><text x="83.7623%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="83.4993%" y="133" width="0.1310%" height="15" fill="rgb(212,6,19)" fg:x="52921" fg:w="83"/><text x="83.7922%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="83.6302%" y="101" width="0.1057%" height="15" fill="rgb(218,1,36)" fg:x="53004" fg:w="67"/><text x="83.9232%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="83.6302%" y="117" width="0.1515%" height="15" fill="rgb(246,84,54)" fg:x="53004" fg:w="96"/><text x="83.9232%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="83.7817%" y="69" width="0.0174%" height="15" fill="rgb(242,110,6)" fg:x="53100" fg:w="11"/><text x="84.0747%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="83.7991%" y="53" width="0.0552%" height="15" fill="rgb(214,47,5)" fg:x="53111" fg:w="35"/><text x="84.0920%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="83.7991%" y="69" width="0.1010%" height="15" fill="rgb(218,159,25)" fg:x="53111" fg:w="64"/><text x="84.0920%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="83.7817%" y="85" width="0.2272%" height="15" fill="rgb(215,211,28)" fg:x="53100" fg:w="144"/><text x="84.0747%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="83.7817%" y="101" width="0.3298%" height="15" fill="rgb(238,59,32)" fg:x="53100" fg:w="209"/><text x="84.0747%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="83.7817%" y="117" width="0.3455%" height="15" fill="rgb(226,82,3)" fg:x="53100" fg:w="219"/><text x="84.0747%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="83.6302%" y="133" width="0.7211%" height="15" fill="rgb(240,164,32)" fg:x="53004" fg:w="457"/><text x="83.9232%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.07%)</title><rect x="83.4993%" y="149" width="1.0698%" height="15" fill="rgb(232,46,7)" fg:x="52921" fg:w="678"/><text x="83.7922%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="84.5690%" y="149" width="0.1499%" height="15" fill="rgb(229,129,53)" fg:x="53599" fg:w="95"/><text x="84.8620%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="84.7189%" y="149" width="0.1404%" height="15" fill="rgb(234,188,29)" fg:x="53694" fg:w="89"/><text x="85.0119%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="84.8593%" y="149" width="0.1199%" height="15" fill="rgb(246,141,4)" fg:x="53783" fg:w="76"/><text x="85.1523%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.11%)</title><rect x="84.9793%" y="149" width="0.1104%" height="15" fill="rgb(229,23,39)" fg:x="53859" fg:w="70"/><text x="85.2722%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.70%)</title><rect x="85.0897%" y="133" width="0.6990%" height="15" fill="rgb(206,12,3)" fg:x="53929" fg:w="443"/><text x="85.3827%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="85.7887%" y="133" width="0.0300%" height="15" fill="rgb(252,226,20)" fg:x="54372" fg:w="19"/><text x="86.0816%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="85.8186%" y="117" width="0.1310%" height="15" fill="rgb(216,123,35)" fg:x="54391" fg:w="83"/><text x="86.1116%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="85.9496%" y="85" width="0.1057%" height="15" fill="rgb(212,68,40)" fg:x="54474" fg:w="67"/><text x="86.2426%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.15%)</title><rect x="85.9496%" y="101" width="0.1515%" height="15" fill="rgb(254,125,32)" fg:x="54474" fg:w="96"/><text x="86.2426%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="86.1011%" y="53" width="0.0174%" height="15" fill="rgb(253,97,22)" fg:x="54570" fg:w="11"/><text x="86.3940%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="86.1184%" y="37" width="0.0552%" height="15" fill="rgb(241,101,14)" fg:x="54581" fg:w="35"/><text x="86.4114%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.10%)</title><rect x="86.1184%" y="53" width="0.1010%" height="15" fill="rgb(238,103,29)" fg:x="54581" fg:w="64"/><text x="86.4114%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.23%)</title><rect x="86.1011%" y="69" width="0.2272%" height="15" fill="rgb(233,195,47)" fg:x="54570" fg:w="144"/><text x="86.3940%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.33%)</title><rect x="86.1011%" y="85" width="0.3298%" height="15" fill="rgb(246,218,30)" fg:x="54570" fg:w="209"/><text x="86.3940%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.35%)</title><rect x="86.1011%" y="101" width="0.3455%" height="15" fill="rgb(219,145,47)" fg:x="54570" fg:w="219"/><text x="86.3940%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.72%)</title><rect x="85.9496%" y="117" width="0.7211%" height="15" fill="rgb(243,12,26)" fg:x="54474" fg:w="457"/><text x="86.2426%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.07%)</title><rect x="85.8186%" y="133" width="1.0698%" height="15" fill="rgb(214,87,16)" fg:x="54391" fg:w="678"/><text x="86.1116%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.15%)</title><rect x="86.8884%" y="133" width="0.1499%" height="15" fill="rgb(208,99,42)" fg:x="55069" fg:w="95"/><text x="87.1814%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="87.0383%" y="133" width="0.1404%" height="15" fill="rgb(253,99,2)" fg:x="55164" fg:w="89"/><text x="87.3313%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,513 instructions, 2.39%)</title><rect x="85.0897%" y="149" width="2.3872%" height="15" fill="rgb(220,168,23)" fg:x="53929" fg:w="1513"/><text x="85.3827%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.12%)</title><rect x="87.4769%" y="149" width="0.1199%" height="15" fill="rgb(242,38,24)" fg:x="55442" fg:w="76"/><text x="87.7699%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="87.5968%" y="149" width="0.0237%" height="15" fill="rgb(225,182,9)" fg:x="55518" fg:w="15"/><text x="87.8898%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="87.6205%" y="149" width="0.0237%" height="15" fill="rgb(243,178,37)" fg:x="55533" fg:w="15"/><text x="87.9135%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="87.6442%" y="149" width="0.0237%" height="15" fill="rgb(232,139,19)" fg:x="55548" fg:w="15"/><text x="87.9371%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.18%)</title><rect x="87.6773%" y="149" width="0.1799%" height="15" fill="rgb(225,201,24)" fg:x="55569" fg:w="114"/><text x="87.9703%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.13%)</title><rect x="87.8572%" y="149" width="0.1310%" height="15" fill="rgb(221,47,46)" fg:x="55683" fg:w="83"/><text x="88.1501%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="87.9944%" y="149" width="0.6185%" height="15" fill="rgb(249,23,13)" fg:x="55770" fg:w="392"/><text x="88.2874%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.62%)</title><rect x="88.6129%" y="149" width="0.6185%" height="15" fill="rgb(219,9,5)" fg:x="56162" fg:w="392"/><text x="88.9059%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.80%)</title><rect x="89.2314%" y="149" width="0.7952%" height="15" fill="rgb(254,171,16)" fg:x="56554" fg:w="504"/><text x="89.5244%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,657 instructions, 10.50%)</title><rect x="81.1736%" y="165" width="10.5035%" height="15" fill="rgb(230,171,20)" fg:x="51447" fg:w="6657"/><text x="81.4665%" y="175.50">candid::de::I..</text></g><g><title>memcpy (344 instructions, 0.54%)</title><rect x="91.6771%" y="165" width="0.5428%" height="15" fill="rgb(210,71,41)" fg:x="58104" fg:w="344"/><text x="91.9700%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.07%)</title><rect x="92.2198%" y="165" width="0.0678%" height="15" fill="rgb(206,173,20)" fg:x="58448" fg:w="43"/><text x="92.5128%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="92.2877%" y="149" width="0.0110%" height="15" fill="rgb(233,88,34)" fg:x="58491" fg:w="7"/><text x="92.5806%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="92.2987%" y="133" width="0.1404%" height="15" fill="rgb(223,209,46)" fg:x="58498" fg:w="89"/><text x="92.5917%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="92.5086%" y="117" width="0.0426%" height="15" fill="rgb(250,43,18)" fg:x="58631" fg:w="27"/><text x="92.8015%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (115 instructions, 0.18%)</title><rect x="92.5086%" y="133" width="0.1814%" height="15" fill="rgb(208,13,10)" fg:x="58631" fg:w="115"/><text x="92.8015%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (292 instructions, 0.46%)</title><rect x="92.2987%" y="149" width="0.4607%" height="15" fill="rgb(212,200,36)" fg:x="58498" fg:w="292"/><text x="92.5917%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (350 instructions, 0.55%)</title><rect x="92.2877%" y="165" width="0.5522%" height="15" fill="rgb(225,90,30)" fg:x="58491" fg:w="350"/><text x="92.5806%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="92.8399%" y="165" width="0.1404%" height="15" fill="rgb(236,182,39)" fg:x="58841" fg:w="89"/><text x="93.1329%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (143 instructions, 0.23%)</title><rect x="92.9803%" y="165" width="0.2256%" height="15" fill="rgb(212,144,35)" fg:x="58930" fg:w="143"/><text x="93.2733%" y="175.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="93.2060%" y="165" width="0.0110%" height="15" fill="rgb(228,63,44)" fg:x="59073" fg:w="7"/><text x="93.4989%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (41 instructions, 0.06%)</title><rect x="93.2170%" y="165" width="0.0647%" height="15" fill="rgb(228,109,6)" fg:x="59080" fg:w="41"/><text x="93.5100%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="93.2817%" y="165" width="0.0284%" height="15" fill="rgb(238,117,24)" fg:x="59121" fg:w="18"/><text x="93.5747%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,648 instructions, 13.64%)</title><rect x="81.1404%" y="181" width="13.6449%" height="15" fill="rgb(242,26,26)" fg:x="51426" fg:w="8648"/><text x="81.4334%" y="191.50">ic_cdk_timers::gl..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="94.7853%" y="181" width="0.0221%" height="15" fill="rgb(221,92,48)" fg:x="60074" fg:w="14"/><text x="95.0783%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,774 instructions, 13.84%)</title><rect x="81.1404%" y="197" width="13.8437%" height="15" fill="rgb(209,209,32)" fg:x="51426" fg:w="8774"/><text x="81.4334%" y="207.50">ic_cdk::futures::w..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="94.9841%" y="165" width="0.0110%" height="15" fill="rgb(221,70,22)" fg:x="60200" fg:w="7"/><text x="95.2771%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="94.9952%" y="165" width="0.1404%" height="15" fill="rgb(248,145,5)" fg:x="60207" fg:w="89"/><text x="95.2882%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.14%)</title><rect x="95.1356%" y="165" width="0.1404%" height="15" fill="rgb(226,116,26)" fg:x="60296" fg:w="89"/><text x="95.4286%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (245 instructions, 0.39%)</title><rect x="94.9841%" y="181" width="0.3866%" height="15" fill="rgb(244,5,17)" fg:x="60200" fg:w="245"/><text x="95.2771%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="95.3707%" y="149" width="0.0426%" height="15" fill="rgb(252,159,33)" fg:x="60445" fg:w="27"/><text x="95.6637%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.23%)</title><rect x="95.3707%" y="165" width="0.2272%" height="15" fill="rgb(206,71,0)" fg:x="60445" fg:w="144"/><text x="95.6637%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (190 instructions, 0.30%)</title><rect x="95.3707%" y="181" width="0.2998%" height="15" fill="rgb(233,118,54)" fg:x="60445" fg:w="190"/><text x="95.6637%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="95.8283%" y="165" width="0.0426%" height="15" fill="rgb(234,83,48)" fg:x="60735" fg:w="27"/><text x="96.1212%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.0555%" y="165" width="0.0426%" height="15" fill="rgb(228,3,54)" fg:x="60879" fg:w="27"/><text x="96.3484%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.0981%" y="165" width="0.0426%" height="15" fill="rgb(226,155,13)" fg:x="60906" fg:w="27"/><text x="96.3910%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.11%)</title><rect x="96.1407%" y="165" width="0.1073%" height="15" fill="rgb(241,28,37)" fg:x="60933" fg:w="68"/><text x="96.4336%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (388 instructions, 0.61%)</title><rect x="95.8283%" y="181" width="0.6122%" height="15" fill="rgb(233,93,10)" fg:x="60735" fg:w="388"/><text x="96.1212%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (988 instructions, 1.56%)</title><rect x="94.9841%" y="197" width="1.5589%" height="15" fill="rgb(225,113,19)" fg:x="60200" fg:w="988"/><text x="95.2771%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,936 instructions, 15.68%)</title><rect x="81.1404%" y="213" width="15.6771%" height="15" fill="rgb(241,2,18)" fg:x="51426" fg:w="9936"/><text x="81.4334%" y="223.50">futures_task::waker:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.9233%" y="181" width="0.0426%" height="15" fill="rgb(228,207,21)" fg:x="61429" fg:w="27"/><text x="97.2162%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (182 instructions, 0.29%)</title><rect x="96.8176%" y="197" width="0.2872%" height="15" fill="rgb(213,211,35)" fg:x="61362" fg:w="182"/><text x="97.1105%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (245 instructions, 0.39%)</title><rect x="96.8176%" y="213" width="0.3866%" height="15" fill="rgb(209,83,10)" fg:x="61362" fg:w="245"/><text x="97.1105%" y="223.50"></text></g><g><title>all (63,379 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(209,164,1)" fg:x="0" fg:w="63379"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (12,036 instructions, 18.99%)</title><rect x="81.0095%" y="229" width="18.9905%" height="15" fill="rgb(213,184,43)" fg:x="51343" fg:w="12036"/><text x="81.3025%" y="239.50">ic_cdk::api::call::callba..</text></g></svg></svg>