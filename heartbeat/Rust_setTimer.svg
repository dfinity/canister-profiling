<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43483"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1104%" height="15" fill="rgb(249,42,33)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 0.85%)</title><rect x="0.1104%" y="213" width="0.8509%" height="15" fill="rgb(242,149,17)" fg:x="48" fg:w="370"/><text x="0.4034%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9613%" y="213" width="0.1886%" height="15" fill="rgb(244,29,21)" fg:x="418" fg:w="82"/><text x="1.2543%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1499%" y="197" width="0.1886%" height="15" fill="rgb(220,130,37)" fg:x="500" fg:w="82"/><text x="1.4428%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.11%)</title><rect x="1.3385%" y="165" width="0.1150%" height="15" fill="rgb(211,67,2)" fg:x="582" fg:w="50"/><text x="1.6314%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.31%)</title><rect x="1.3385%" y="181" width="0.3059%" height="15" fill="rgb(235,68,52)" fg:x="582" fg:w="133"/><text x="1.6314%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="1.6443%" y="181" width="0.9199%" height="15" fill="rgb(246,142,3)" fg:x="715" fg:w="400"/><text x="1.9373%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="2.5642%" y="181" width="0.1955%" height="15" fill="rgb(241,25,7)" fg:x="1115" fg:w="85"/><text x="2.8572%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="2.7597%" y="181" width="0.1288%" height="15" fill="rgb(242,119,39)" fg:x="1200" fg:w="56"/><text x="3.0527%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="2.8885%" y="181" width="0.1288%" height="15" fill="rgb(241,98,45)" fg:x="1256" fg:w="56"/><text x="3.1815%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="3.0173%" y="181" width="0.1288%" height="15" fill="rgb(254,28,30)" fg:x="1312" fg:w="56"/><text x="3.3102%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="3.1461%" y="181" width="0.1288%" height="15" fill="rgb(241,142,54)" fg:x="1368" fg:w="56"/><text x="3.4390%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="3.2748%" y="181" width="0.1633%" height="15" fill="rgb(222,85,15)" fg:x="1424" fg:w="71"/><text x="3.5678%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="3.4381%" y="181" width="0.1587%" height="15" fill="rgb(210,85,47)" fg:x="1495" fg:w="69"/><text x="3.7311%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="3.5968%" y="181" width="0.9199%" height="15" fill="rgb(224,206,25)" fg:x="1564" fg:w="400"/><text x="3.8898%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.5167%" y="181" width="0.0368%" height="15" fill="rgb(243,201,19)" fg:x="1964" fg:w="16"/><text x="4.8097%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5535%" y="165" width="0.1886%" height="15" fill="rgb(236,59,4)" fg:x="1980" fg:w="82"/><text x="4.8465%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7421%" y="133" width="0.1380%" height="15" fill="rgb(254,179,45)" fg:x="2062" fg:w="60"/><text x="5.0351%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7421%" y="149" width="0.1955%" height="15" fill="rgb(226,14,10)" fg:x="2062" fg:w="85"/><text x="5.0351%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9376%" y="101" width="0.0207%" height="15" fill="rgb(244,27,41)" fg:x="2147" fg:w="9"/><text x="5.2305%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9583%" y="85" width="0.0690%" height="15" fill="rgb(235,35,32)" fg:x="2156" fg:w="30"/><text x="5.2512%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9583%" y="101" width="0.1265%" height="15" fill="rgb(218,68,31)" fg:x="2156" fg:w="55"/><text x="5.2512%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="4.9376%" y="117" width="0.2714%" height="15" fill="rgb(207,120,37)" fg:x="2147" fg:w="118"/><text x="5.2305%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="4.9376%" y="133" width="0.3933%" height="15" fill="rgb(227,98,0)" fg:x="2147" fg:w="171"/><text x="5.2305%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="4.9376%" y="149" width="0.4048%" height="15" fill="rgb(207,7,3)" fg:x="2147" fg:w="176"/><text x="5.2305%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="4.7421%" y="165" width="0.8555%" height="15" fill="rgb(206,98,19)" fg:x="2062" fg:w="372"/><text x="5.0351%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="4.5535%" y="181" width="1.3798%" height="15" fill="rgb(217,5,26)" fg:x="1980" fg:w="600"/><text x="4.8465%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.9334%" y="181" width="0.1955%" height="15" fill="rgb(235,190,38)" fg:x="2580" fg:w="85"/><text x="6.2263%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="6.1288%" y="181" width="0.1311%" height="15" fill="rgb(247,86,24)" fg:x="2665" fg:w="57"/><text x="6.4218%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="6.2599%" y="181" width="0.1518%" height="15" fill="rgb(205,101,16)" fg:x="2722" fg:w="66"/><text x="6.5529%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="6.4117%" y="181" width="0.1587%" height="15" fill="rgb(246,168,33)" fg:x="2788" fg:w="69"/><text x="6.7047%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="6.5704%" y="165" width="0.9199%" height="15" fill="rgb(231,114,1)" fg:x="2857" fg:w="400"/><text x="6.8634%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.4903%" y="165" width="0.0368%" height="15" fill="rgb(207,184,53)" fg:x="3257" fg:w="16"/><text x="7.7833%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.5271%" y="149" width="0.1886%" height="15" fill="rgb(224,95,51)" fg:x="3273" fg:w="82"/><text x="7.8200%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.7157%" y="117" width="0.1380%" height="15" fill="rgb(212,188,45)" fg:x="3355" fg:w="60"/><text x="8.0086%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.7157%" y="133" width="0.1955%" height="15" fill="rgb(223,154,38)" fg:x="3355" fg:w="85"/><text x="8.0086%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.9111%" y="85" width="0.0207%" height="15" fill="rgb(251,22,52)" fg:x="3440" fg:w="9"/><text x="8.2041%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.9318%" y="69" width="0.0690%" height="15" fill="rgb(229,209,22)" fg:x="3449" fg:w="30"/><text x="8.2248%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.9318%" y="85" width="0.1265%" height="15" fill="rgb(234,138,34)" fg:x="3449" fg:w="55"/><text x="8.2248%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.9111%" y="101" width="0.2714%" height="15" fill="rgb(212,95,11)" fg:x="3440" fg:w="118"/><text x="8.2041%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="7.9111%" y="117" width="0.3933%" height="15" fill="rgb(240,179,47)" fg:x="3440" fg:w="171"/><text x="8.2041%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="7.9111%" y="133" width="0.4048%" height="15" fill="rgb(240,163,11)" fg:x="3440" fg:w="176"/><text x="8.2041%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="7.7157%" y="149" width="0.8555%" height="15" fill="rgb(236,37,12)" fg:x="3355" fg:w="372"/><text x="8.0086%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="7.5271%" y="165" width="1.3798%" height="15" fill="rgb(232,164,16)" fg:x="3273" fg:w="600"/><text x="7.8200%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="8.9069%" y="165" width="0.1955%" height="15" fill="rgb(244,205,15)" fg:x="3873" fg:w="85"/><text x="9.1999%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="9.1024%" y="165" width="0.1311%" height="15" fill="rgb(223,117,47)" fg:x="3958" fg:w="57"/><text x="9.3954%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="9.2335%" y="149" width="0.1633%" height="15" fill="rgb(244,107,35)" fg:x="4015" fg:w="71"/><text x="9.5265%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="9.3968%" y="149" width="0.2185%" height="15" fill="rgb(205,140,8)" fg:x="4086" fg:w="95"/><text x="9.6897%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="9.6153%" y="149" width="0.1518%" height="15" fill="rgb(228,84,46)" fg:x="4181" fg:w="66"/><text x="9.9082%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.65%)</title><rect x="9.2335%" y="165" width="0.6508%" height="15" fill="rgb(254,188,9)" fg:x="4015" fg:w="283"/><text x="9.5265%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8843%" y="165" width="0.1886%" height="15" fill="rgb(206,112,54)" fg:x="4298" fg:w="82"/><text x="10.1773%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,692 instructions, 3.89%)</title><rect x="6.5704%" y="181" width="3.8912%" height="15" fill="rgb(216,84,49)" fg:x="2857" fg:w="1692"/><text x="6.8634%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="10.4616%" y="181" width="0.1518%" height="15" fill="rgb(214,194,35)" fg:x="4549" fg:w="66"/><text x="10.7545%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6133%" y="181" width="0.0299%" height="15" fill="rgb(249,28,3)" fg:x="4615" fg:w="13"/><text x="10.9063%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6432%" y="181" width="0.0299%" height="15" fill="rgb(222,56,52)" fg:x="4628" fg:w="13"/><text x="10.9362%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.6731%" y="181" width="0.0161%" height="15" fill="rgb(245,217,50)" fg:x="4641" fg:w="7"/><text x="10.9661%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="10.6892%" y="181" width="0.0276%" height="15" fill="rgb(213,201,24)" fg:x="4648" fg:w="12"/><text x="10.9822%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.7168%" y="165" width="0.1886%" height="15" fill="rgb(248,116,28)" fg:x="4660" fg:w="82"/><text x="11.0098%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.7168%" y="181" width="0.3795%" height="15" fill="rgb(219,72,43)" fg:x="4660" fg:w="165"/><text x="11.0098%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.0963%" y="149" width="0.1886%" height="15" fill="rgb(209,138,14)" fg:x="4825" fg:w="82"/><text x="11.3893%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.27%)</title><rect x="11.0963%" y="165" width="0.2691%" height="15" fill="rgb(222,18,33)" fg:x="4825" fg:w="117"/><text x="11.3893%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.43%)</title><rect x="11.0963%" y="181" width="0.4347%" height="15" fill="rgb(213,199,7)" fg:x="4825" fg:w="189"/><text x="11.3893%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.5309%" y="181" width="0.1886%" height="15" fill="rgb(250,110,10)" fg:x="5014" fg:w="82"/><text x="11.8239%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.7195%" y="181" width="0.1863%" height="15" fill="rgb(248,123,6)" fg:x="5096" fg:w="81"/><text x="12.0125%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9058%" y="181" width="0.1886%" height="15" fill="rgb(206,91,31)" fg:x="5177" fg:w="82"/><text x="12.1988%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="12.0944%" y="181" width="0.1886%" height="15" fill="rgb(211,154,13)" fg:x="5259" fg:w="82"/><text x="12.3874%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.2876%" y="181" width="0.1863%" height="15" fill="rgb(225,148,7)" fg:x="5343" fg:w="81"/><text x="12.5805%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="12.4738%" y="181" width="0.8762%" height="15" fill="rgb(220,160,43)" fg:x="5424" fg:w="381"/><text x="12.7668%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="13.3500%" y="181" width="0.8762%" height="15" fill="rgb(213,52,39)" fg:x="5805" fg:w="381"/><text x="13.6430%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,507 instructions, 14.96%)</title><rect x="1.3385%" y="197" width="14.9645%" height="15" fill="rgb(243,137,7)" fg:x="582" fg:w="6507"/><text x="1.6314%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="16.3029%" y="197" width="0.7727%" height="15" fill="rgb(230,79,13)" fg:x="7089" fg:w="336"/><text x="16.5959%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.11%)</title><rect x="17.0756%" y="181" width="0.1150%" height="15" fill="rgb(247,105,23)" fg:x="7425" fg:w="50"/><text x="17.3686%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.19%)</title><rect x="17.0756%" y="197" width="0.1932%" height="15" fill="rgb(223,179,41)" fg:x="7425" fg:w="84"/><text x="17.3686%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.2688%" y="197" width="0.1886%" height="15" fill="rgb(218,9,34)" fg:x="7509" fg:w="82"/><text x="17.5618%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.4574%" y="181" width="0.0115%" height="15" fill="rgb(222,106,8)" fg:x="7591" fg:w="5"/><text x="17.7504%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.4689%" y="165" width="0.1219%" height="15" fill="rgb(211,220,0)" fg:x="7596" fg:w="53"/><text x="17.7619%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="17.5908%" y="165" width="0.2047%" height="15" fill="rgb(229,52,16)" fg:x="7649" fg:w="89"/><text x="17.8838%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="17.7955%" y="165" width="0.3703%" height="15" fill="rgb(212,155,18)" fg:x="7738" fg:w="161"/><text x="18.0884%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="17.4689%" y="181" width="1.2419%" height="15" fill="rgb(242,21,14)" fg:x="7596" fg:w="540"/><text x="17.7619%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.7108%" y="181" width="0.1886%" height="15" fill="rgb(222,19,48)" fg:x="8136" fg:w="82"/><text x="19.0037%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="18.8993%" y="181" width="0.3128%" height="15" fill="rgb(232,45,27)" fg:x="8218" fg:w="136"/><text x="19.1923%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,173 instructions, 2.70%)</title><rect x="17.4574%" y="197" width="2.6976%" height="15" fill="rgb(249,103,42)" fg:x="7591" fg:w="1173"/><text x="17.7504%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.1550%" y="197" width="0.1886%" height="15" fill="rgb(246,81,33)" fg:x="8764" fg:w="82"/><text x="20.4480%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="20.3436%" y="181" width="0.0115%" height="15" fill="rgb(252,33,42)" fg:x="8846" fg:w="5"/><text x="20.6366%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.3551%" y="165" width="0.1219%" height="15" fill="rgb(209,212,41)" fg:x="8851" fg:w="53"/><text x="20.6481%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="20.4770%" y="165" width="0.2047%" height="15" fill="rgb(207,154,6)" fg:x="8904" fg:w="89"/><text x="20.7699%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="20.6816%" y="165" width="0.3703%" height="15" fill="rgb(223,64,47)" fg:x="8993" fg:w="161"/><text x="20.9746%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="20.3551%" y="181" width="1.2419%" height="15" fill="rgb(211,161,38)" fg:x="8851" fg:w="540"/><text x="20.6481%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.5969%" y="181" width="0.1564%" height="15" fill="rgb(219,138,40)" fg:x="9391" fg:w="68"/><text x="21.8899%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.7533%" y="165" width="0.1863%" height="15" fill="rgb(241,228,46)" fg:x="9459" fg:w="81"/><text x="22.0463%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.26%)</title><rect x="21.7533%" y="181" width="0.2553%" height="15" fill="rgb(223,209,38)" fg:x="9459" fg:w="111"/><text x="22.0463%" y="191.50"></text></g><g><title>candid::types::internal::env_add (893 instructions, 2.05%)</title><rect x="20.3436%" y="197" width="2.0537%" height="15" fill="rgb(236,164,45)" fg:x="8846" fg:w="893"/><text x="20.6366%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.3973%" y="149" width="0.1219%" height="15" fill="rgb(231,15,5)" fg:x="9739" fg:w="53"/><text x="22.6902%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="22.3973%" y="165" width="0.1817%" height="15" fill="rgb(252,35,15)" fg:x="9739" fg:w="79"/><text x="22.6902%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="22.3973%" y="181" width="0.6715%" height="15" fill="rgb(248,181,18)" fg:x="9739" fg:w="292"/><text x="22.6902%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.0688%" y="181" width="0.1886%" height="15" fill="rgb(233,39,42)" fg:x="10031" fg:w="82"/><text x="23.3618%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.2574%" y="181" width="0.3128%" height="15" fill="rgb(238,110,33)" fg:x="10113" fg:w="136"/><text x="23.5503%" y="191.50"></text></g><g><title>candid::types::internal::env_id (964 instructions, 2.22%)</title><rect x="22.3973%" y="197" width="2.2170%" height="15" fill="rgb(233,195,10)" fg:x="9739" fg:w="964"/><text x="22.6902%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="24.6142%" y="197" width="0.0759%" height="15" fill="rgb(254,105,3)" fg:x="10703" fg:w="33"/><text x="24.9072%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.29%)</title><rect x="24.6901%" y="181" width="0.2852%" height="15" fill="rgb(221,225,9)" fg:x="10736" fg:w="124"/><text x="24.9831%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.29%)</title><rect x="25.0443%" y="181" width="0.2852%" height="15" fill="rgb(224,227,45)" fg:x="10890" fg:w="124"/><text x="25.3372%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (308 instructions, 0.71%)</title><rect x="24.6901%" y="197" width="0.7083%" height="15" fill="rgb(229,198,43)" fg:x="10736" fg:w="308"/><text x="24.9831%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (83 instructions, 0.19%)</title><rect x="25.3984%" y="197" width="0.1909%" height="15" fill="rgb(206,209,35)" fg:x="11044" fg:w="83"/><text x="25.6914%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.5893%" y="197" width="0.0253%" height="15" fill="rgb(245,195,53)" fg:x="11127" fg:w="11"/><text x="25.8823%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6146%" y="197" width="0.0253%" height="15" fill="rgb(240,92,26)" fg:x="11138" fg:w="11"/><text x="25.9076%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6399%" y="197" width="0.0253%" height="15" fill="rgb(207,40,23)" fg:x="11149" fg:w="11"/><text x="25.9329%" y="207.50"></text></g><g><title>memcpy (411 instructions, 0.95%)</title><rect x="25.6652%" y="197" width="0.9452%" height="15" fill="rgb(223,111,35)" fg:x="11160" fg:w="411"/><text x="25.9582%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="26.6104%" y="181" width="0.0115%" height="15" fill="rgb(229,147,28)" fg:x="11571" fg:w="5"/><text x="26.9034%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (170 instructions, 0.39%)</title><rect x="26.6219%" y="181" width="0.3910%" height="15" fill="rgb(211,29,28)" fg:x="11576" fg:w="170"/><text x="26.9149%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.0129%" y="149" width="0.1449%" height="15" fill="rgb(228,72,33)" fg:x="11746" fg:w="63"/><text x="27.3058%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (211 instructions, 0.49%)</title><rect x="27.0129%" y="165" width="0.4852%" height="15" fill="rgb(205,214,31)" fg:x="11746" fg:w="211"/><text x="27.3058%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (241 instructions, 0.55%)</title><rect x="27.0129%" y="181" width="0.5542%" height="15" fill="rgb(224,111,15)" fg:x="11746" fg:w="241"/><text x="27.3058%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.5671%" y="181" width="0.0253%" height="15" fill="rgb(253,21,26)" fg:x="11987" fg:w="11"/><text x="27.8601%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (494 instructions, 1.14%)</title><rect x="26.6104%" y="197" width="1.1361%" height="15" fill="rgb(245,139,43)" fg:x="11571" fg:w="494"/><text x="26.9034%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.7465%" y="181" width="0.1449%" height="15" fill="rgb(252,170,7)" fg:x="12065" fg:w="63"/><text x="28.0394%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.45%)</title><rect x="27.7465%" y="197" width="0.4531%" height="15" fill="rgb(231,118,14)" fg:x="12065" fg:w="197"/><text x="28.0394%" y="207.50"></text></g><g><title>__multi3 (56 instructions, 0.13%)</title><rect x="28.1995%" y="197" width="0.1288%" height="15" fill="rgb(238,83,0)" fg:x="12262" fg:w="56"/><text x="28.4925%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (161 instructions, 0.37%)</title><rect x="28.3283%" y="197" width="0.3703%" height="15" fill="rgb(221,39,39)" fg:x="12318" fg:w="161"/><text x="28.6213%" y="207.50"></text></g><g><title>__rust_realloc (104 instructions, 0.24%)</title><rect x="28.6986%" y="165" width="0.2392%" height="15" fill="rgb(222,119,46)" fg:x="12479" fg:w="104"/><text x="28.9915%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.32%)</title><rect x="28.6986%" y="181" width="0.3197%" height="15" fill="rgb(222,165,49)" fg:x="12479" fg:w="139"/><text x="28.9915%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="29.2068%" y="165" width="0.1748%" height="15" fill="rgb(219,113,52)" fg:x="12700" fg:w="76"/><text x="29.4998%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="29.2068%" y="181" width="0.2553%" height="15" fill="rgb(214,7,15)" fg:x="12700" fg:w="111"/><text x="29.4998%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (400 instructions, 0.92%)</title><rect x="28.6986%" y="197" width="0.9199%" height="15" fill="rgb(235,32,4)" fg:x="12479" fg:w="400"/><text x="28.9915%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (80 instructions, 0.18%)</title><rect x="29.6185%" y="197" width="0.1840%" height="15" fill="rgb(238,90,54)" fg:x="12879" fg:w="80"/><text x="29.9114%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="29.8025%" y="165" width="0.0115%" height="15" fill="rgb(213,208,19)" fg:x="12959" fg:w="5"/><text x="30.0954%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.8140%" y="165" width="0.0253%" height="15" fill="rgb(233,156,4)" fg:x="12964" fg:w="11"/><text x="30.1069%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.8392%" y="165" width="0.3128%" height="15" fill="rgb(207,194,5)" fg:x="12975" fg:w="136"/><text x="30.1322%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (311 instructions, 0.72%)</title><rect x="29.8025%" y="181" width="0.7152%" height="15" fill="rgb(206,111,30)" fg:x="12959" fg:w="311"/><text x="30.0954%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.5177%" y="181" width="0.0736%" height="15" fill="rgb(243,70,54)" fg:x="13270" fg:w="32"/><text x="30.8106%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.5913%" y="133" width="0.1748%" height="15" fill="rgb(242,28,8)" fg:x="13302" fg:w="76"/><text x="30.8842%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="30.5913%" y="149" width="0.2553%" height="15" fill="rgb(219,106,18)" fg:x="13302" fg:w="111"/><text x="30.8842%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 instructions, 0.41%)</title><rect x="30.5913%" y="165" width="0.4140%" height="15" fill="rgb(244,222,10)" fg:x="13302" fg:w="180"/><text x="30.8842%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0052%" y="165" width="0.0253%" height="15" fill="rgb(236,179,52)" fg:x="13482" fg:w="11"/><text x="31.2982%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0305%" y="165" width="0.0253%" height="15" fill="rgb(213,23,39)" fg:x="13493" fg:w="11"/><text x="31.3235%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (367 instructions, 0.84%)</title><rect x="30.5913%" y="181" width="0.8440%" height="15" fill="rgb(238,48,10)" fg:x="13302" fg:w="367"/><text x="30.8842%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.4353%" y="181" width="0.0690%" height="15" fill="rgb(251,196,23)" fg:x="13669" fg:w="30"/><text x="31.7282%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.5043%" y="181" width="0.0115%" height="15" fill="rgb(250,152,24)" fg:x="13699" fg:w="5"/><text x="31.7972%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="31.5158%" y="165" width="0.0115%" height="15" fill="rgb(209,150,17)" fg:x="13704" fg:w="5"/><text x="31.8087%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.5273%" y="165" width="0.1265%" height="15" fill="rgb(234,202,34)" fg:x="13709" fg:w="55"/><text x="31.8202%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (114 instructions, 0.26%)</title><rect x="31.5158%" y="181" width="0.2622%" height="15" fill="rgb(253,148,53)" fg:x="13704" fg:w="114"/><text x="31.8087%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (930 instructions, 2.14%)</title><rect x="29.8025%" y="197" width="2.1388%" height="15" fill="rgb(218,129,16)" fg:x="12959" fg:w="930"/><text x="30.0954%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,040 instructions, 32.29%)</title><rect x="1.1499%" y="213" width="32.2885%" height="15" fill="rgb(216,85,19)" fg:x="500" fg:w="14040"/><text x="1.4428%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.4384%" y="213" width="0.0276%" height="15" fill="rgb(235,228,7)" fg:x="14540" fg:w="12"/><text x="33.7313%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.4660%" y="213" width="0.1863%" height="15" fill="rgb(245,175,0)" fg:x="14552" fg:w="81"/><text x="33.7589%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.29%)</title><rect x="33.6522%" y="213" width="0.2921%" height="15" fill="rgb(208,168,36)" fg:x="14633" fg:w="127"/><text x="33.9452%" y="223.50"></text></g><g><title>canister_update setTimer (14,863 instructions, 34.18%)</title><rect x="0.0000%" y="229" width="34.1812%" height="15" fill="rgb(246,171,24)" fg:x="0" fg:w="14863"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.1812%" y="213" width="0.0437%" height="15" fill="rgb(215,142,24)" fg:x="14863" fg:w="19"/><text x="34.4741%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="34.2249%" y="213" width="0.1817%" height="15" fill="rgb(250,187,7)" fg:x="14882" fg:w="79"/><text x="34.5178%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.4065%" y="213" width="0.1748%" height="15" fill="rgb(228,66,33)" fg:x="14961" fg:w="76"/><text x="34.6995%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.5813%" y="197" width="0.1886%" height="15" fill="rgb(234,215,21)" fg:x="15037" fg:w="82"/><text x="34.8743%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.7699%" y="197" width="0.1748%" height="15" fill="rgb(222,191,20)" fg:x="15119" fg:w="76"/><text x="35.0629%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.9539%" y="197" width="0.1886%" height="15" fill="rgb(245,79,54)" fg:x="15199" fg:w="82"/><text x="35.2469%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.1425%" y="197" width="0.0437%" height="15" fill="rgb(240,10,37)" fg:x="15281" fg:w="19"/><text x="35.4354%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="35.1862%" y="181" width="0.1748%" height="15" fill="rgb(214,192,32)" fg:x="15300" fg:w="76"/><text x="35.4791%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.3609%" y="181" width="0.2668%" height="15" fill="rgb(209,36,54)" fg:x="15376" fg:w="116"/><text x="35.6539%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.6277%" y="181" width="0.3795%" height="15" fill="rgb(220,10,11)" fg:x="15492" fg:w="165"/><text x="35.9207%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="36.0072%" y="181" width="0.1265%" height="15" fill="rgb(221,106,17)" fg:x="15657" fg:w="55"/><text x="36.3001%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.1862%" y="197" width="1.1683%" height="15" fill="rgb(251,142,44)" fg:x="15300" fg:w="508"/><text x="35.4791%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.3544%" y="181" width="0.0115%" height="15" fill="rgb(238,13,15)" fg:x="15808" fg:w="5"/><text x="36.6474%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="36.3659%" y="181" width="0.3128%" height="15" fill="rgb(208,107,27)" fg:x="15813" fg:w="136"/><text x="36.6589%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (261 instructions, 0.60%)</title><rect x="36.3544%" y="197" width="0.6002%" height="15" fill="rgb(205,136,37)" fg:x="15808" fg:w="261"/><text x="36.6474%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.9547%" y="165" width="0.0115%" height="15" fill="rgb(250,205,27)" fg:x="16069" fg:w="5"/><text x="37.2476%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="36.9547%" y="181" width="0.0897%" height="15" fill="rgb(210,80,43)" fg:x="16069" fg:w="39"/><text x="37.2476%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="37.0444%" y="181" width="0.1886%" height="15" fill="rgb(247,160,36)" fg:x="16108" fg:w="82"/><text x="37.3373%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="37.2329%" y="165" width="0.0115%" height="15" fill="rgb(234,13,49)" fg:x="16190" fg:w="5"/><text x="37.5259%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="37.2444%" y="149" width="0.1219%" height="15" fill="rgb(234,122,0)" fg:x="16195" fg:w="53"/><text x="37.5374%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="37.3663%" y="149" width="0.2047%" height="15" fill="rgb(207,146,38)" fg:x="16248" fg:w="89"/><text x="37.6593%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="37.5710%" y="149" width="0.3703%" height="15" fill="rgb(207,177,25)" fg:x="16337" fg:w="161"/><text x="37.8640%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="37.2444%" y="165" width="1.2419%" height="15" fill="rgb(211,178,42)" fg:x="16195" fg:w="540"/><text x="37.5374%" y="175.50"></text></g><g><title>candid::types::internal::env_add (759 instructions, 1.75%)</title><rect x="37.2329%" y="181" width="1.7455%" height="15" fill="rgb(230,69,54)" fg:x="16190" fg:w="759"/><text x="37.5259%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.9785%" y="181" width="0.1886%" height="15" fill="rgb(214,135,41)" fg:x="16949" fg:w="82"/><text x="39.2714%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="39.1670%" y="165" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="17031" fg:w="5"/><text x="39.4600%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="39.1785%" y="149" width="0.1219%" height="15" fill="rgb(222,189,50)" fg:x="17036" fg:w="53"/><text x="39.4715%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="39.3004%" y="149" width="0.2047%" height="15" fill="rgb(245,148,34)" fg:x="17089" fg:w="89"/><text x="39.5934%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="39.5051%" y="149" width="0.3703%" height="15" fill="rgb(222,29,6)" fg:x="17178" fg:w="161"/><text x="39.7981%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="39.1785%" y="165" width="1.2419%" height="15" fill="rgb(221,189,43)" fg:x="17036" fg:w="540"/><text x="39.4715%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.4204%" y="165" width="0.1564%" height="15" fill="rgb(207,36,27)" fg:x="17576" fg:w="68"/><text x="40.7134%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.5768%" y="149" width="0.1863%" height="15" fill="rgb(217,90,24)" fg:x="17644" fg:w="81"/><text x="40.8697%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.26%)</title><rect x="40.5768%" y="165" width="0.2553%" height="15" fill="rgb(224,66,35)" fg:x="17644" fg:w="111"/><text x="40.8697%" y="175.50"></text></g><g><title>candid::types::internal::env_add (893 instructions, 2.05%)</title><rect x="39.1670%" y="181" width="2.0537%" height="15" fill="rgb(221,13,50)" fg:x="17031" fg:w="893"/><text x="39.4600%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.2207%" y="133" width="0.1219%" height="15" fill="rgb(236,68,49)" fg:x="17924" fg:w="53"/><text x="41.5137%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="41.2207%" y="149" width="0.1817%" height="15" fill="rgb(229,146,28)" fg:x="17924" fg:w="79"/><text x="41.5137%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="41.2207%" y="165" width="0.6715%" height="15" fill="rgb(225,31,38)" fg:x="17924" fg:w="292"/><text x="41.5137%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.196 (15 instructions, 0.03%)</title><rect x="41.8922%" y="165" width="0.0345%" height="15" fill="rgb(250,208,3)" fg:x="18216" fg:w="15"/><text x="42.1852%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9267%" y="165" width="0.0253%" height="15" fill="rgb(246,54,23)" fg:x="18231" fg:w="11"/><text x="42.2197%" y="175.50"></text></g><g><title>candid::types::internal::env_id (479 instructions, 1.10%)</title><rect x="41.2207%" y="181" width="1.1016%" height="15" fill="rgb(243,76,11)" fg:x="17924" fg:w="479"/><text x="41.5137%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,441 instructions, 5.61%)</title><rect x="36.9547%" y="197" width="5.6137%" height="15" fill="rgb(245,21,50)" fg:x="16069" fg:w="2441"/><text x="37.2476%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.5684%" y="165" width="0.1748%" height="15" fill="rgb(228,9,43)" fg:x="18510" fg:w="76"/><text x="42.8613%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="42.5684%" y="181" width="0.2553%" height="15" fill="rgb(208,100,47)" fg:x="18510" fg:w="111"/><text x="42.8613%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (183 instructions, 0.42%)</title><rect x="42.5684%" y="197" width="0.4209%" height="15" fill="rgb(232,26,8)" fg:x="18510" fg:w="183"/><text x="42.8613%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.9892%" y="181" width="0.0414%" height="15" fill="rgb(216,166,38)" fg:x="18693" fg:w="18"/><text x="43.2822%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.0306%" y="181" width="0.0253%" height="15" fill="rgb(251,202,51)" fg:x="18711" fg:w="11"/><text x="43.3236%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (81 instructions, 0.19%)</title><rect x="42.9892%" y="197" width="0.1863%" height="15" fill="rgb(254,216,34)" fg:x="18693" fg:w="81"/><text x="43.2822%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.1755%" y="197" width="0.0253%" height="15" fill="rgb(251,32,27)" fg:x="18774" fg:w="11"/><text x="43.4685%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="43.2008%" y="165" width="0.1679%" height="15" fill="rgb(208,127,28)" fg:x="18785" fg:w="73"/><text x="43.4938%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.25%)</title><rect x="43.2008%" y="181" width="0.2484%" height="15" fill="rgb(224,137,22)" fg:x="18785" fg:w="108"/><text x="43.4938%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.27%)</title><rect x="43.6078%" y="165" width="0.2691%" height="15" fill="rgb(254,70,32)" fg:x="18962" fg:w="117"/><text x="43.9008%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="43.6078%" y="181" width="0.3496%" height="15" fill="rgb(229,75,37)" fg:x="18962" fg:w="152"/><text x="43.9008%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (398 instructions, 0.92%)</title><rect x="43.2008%" y="197" width="0.9153%" height="15" fill="rgb(252,64,23)" fg:x="18785" fg:w="398"/><text x="43.4938%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.1161%" y="149" width="0.1748%" height="15" fill="rgb(232,162,48)" fg:x="19183" fg:w="76"/><text x="44.4091%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.26%)</title><rect x="44.1161%" y="165" width="0.2553%" height="15" fill="rgb(246,160,12)" fg:x="19183" fg:w="111"/><text x="44.4091%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 instructions, 0.41%)</title><rect x="44.1161%" y="181" width="0.4140%" height="15" fill="rgb(247,166,0)" fg:x="19183" fg:w="180"/><text x="44.4091%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.5300%" y="181" width="0.0253%" height="15" fill="rgb(249,219,21)" fg:x="19363" fg:w="11"/><text x="44.8230%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="44.5553%" y="133" width="0.1679%" height="15" fill="rgb(205,209,3)" fg:x="19374" fg:w="73"/><text x="44.8483%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.25%)</title><rect x="44.5553%" y="149" width="0.2484%" height="15" fill="rgb(243,44,1)" fg:x="19374" fg:w="108"/><text x="44.8483%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.41%)</title><rect x="44.5553%" y="165" width="0.4071%" height="15" fill="rgb(206,159,16)" fg:x="19374" fg:w="177"/><text x="44.8483%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (232 instructions, 0.53%)</title><rect x="44.5553%" y="181" width="0.5335%" height="15" fill="rgb(244,77,30)" fg:x="19374" fg:w="232"/><text x="44.8483%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="45.0889%" y="181" width="0.0690%" height="15" fill="rgb(218,69,12)" fg:x="19606" fg:w="30"/><text x="45.3819%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="45.1579%" y="181" width="0.1863%" height="15" fill="rgb(212,87,7)" fg:x="19636" fg:w="81"/><text x="45.4508%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (740 instructions, 1.70%)</title><rect x="44.1161%" y="197" width="1.7018%" height="15" fill="rgb(245,114,25)" fg:x="19183" fg:w="740"/><text x="44.4091%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.8179%" y="197" width="0.1380%" height="15" fill="rgb(210,61,42)" fg:x="19923" fg:w="60"/><text x="46.1109%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="45.9559%" y="149" width="0.1817%" height="15" fill="rgb(211,52,33)" fg:x="19983" fg:w="79"/><text x="46.2489%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="46.1376%" y="149" width="0.4485%" height="15" fill="rgb(234,58,33)" fg:x="20062" fg:w="195"/><text x="46.4305%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.5860%" y="149" width="0.1863%" height="15" fill="rgb(220,115,36)" fg:x="20257" fg:w="81"/><text x="46.8790%" y="159.50"></text></g><g><title>__rust_realloc (439 instructions, 1.01%)</title><rect x="45.9559%" y="165" width="1.0096%" height="15" fill="rgb(243,153,54)" fg:x="19983" fg:w="439"/><text x="46.2489%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (474 instructions, 1.09%)</title><rect x="45.9559%" y="181" width="1.0901%" height="15" fill="rgb(251,47,18)" fg:x="19983" fg:w="474"/><text x="46.2489%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (551 instructions, 1.27%)</title><rect x="45.9559%" y="197" width="1.2672%" height="15" fill="rgb(242,102,42)" fg:x="19983" fg:w="551"/><text x="46.2489%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="47.2231%" y="197" width="0.3105%" height="15" fill="rgb(234,31,38)" fg:x="20534" fg:w="135"/><text x="47.5160%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="47.5335%" y="197" width="0.0115%" height="15" fill="rgb(221,117,51)" fg:x="20669" fg:w="5"/><text x="47.8265%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.5450%" y="197" width="0.0253%" height="15" fill="rgb(212,20,18)" fg:x="20674" fg:w="11"/><text x="47.8380%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.5703%" y="197" width="0.1863%" height="15" fill="rgb(245,133,36)" fg:x="20685" fg:w="81"/><text x="47.8633%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.29%)</title><rect x="47.7566%" y="197" width="0.2921%" height="15" fill="rgb(212,6,19)" fg:x="20766" fg:w="127"/><text x="48.0496%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.29%)</title><rect x="48.0487%" y="197" width="0.2921%" height="15" fill="rgb(218,1,36)" fg:x="20893" fg:w="127"/><text x="48.3416%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="48.3407%" y="197" width="0.1817%" height="15" fill="rgb(246,84,54)" fg:x="21020" fg:w="79"/><text x="48.6337%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.5224%" y="197" width="0.1886%" height="15" fill="rgb(242,110,6)" fg:x="21099" fg:w="82"/><text x="48.8154%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.7110%" y="197" width="0.0460%" height="15" fill="rgb(214,47,5)" fg:x="21181" fg:w="20"/><text x="49.0040%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.7570%" y="181" width="0.1219%" height="15" fill="rgb(218,159,25)" fg:x="21201" fg:w="53"/><text x="49.0500%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.7570%" y="197" width="0.1564%" height="15" fill="rgb(215,211,28)" fg:x="21201" fg:w="68"/><text x="49.0500%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.9134%" y="197" width="0.0414%" height="15" fill="rgb(238,59,32)" fg:x="21269" fg:w="18"/><text x="49.2063%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,607 instructions, 17.49%)</title><rect x="34.5813%" y="213" width="17.4942%" height="15" fill="rgb(226,82,3)" fg:x="15037" fg:w="7607"/><text x="34.8743%" y="223.50">ic_cdk_timers::global_t..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="52.0755%" y="213" width="0.0276%" height="15" fill="rgb(240,164,32)" fg:x="22644" fg:w="12"/><text x="52.3685%" y="223.50"></text></g><g><title>canister_global_timer (7,881 instructions, 18.12%)</title><rect x="34.1812%" y="229" width="18.1243%" height="15" fill="rgb(232,46,7)" fg:x="14863" fg:w="7881"/><text x="34.4741%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.27%)</title><rect x="52.3055%" y="213" width="0.2691%" height="15" fill="rgb(229,129,53)" fg:x="22744" fg:w="117"/><text x="52.5985%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.5746%" y="213" width="0.2668%" height="15" fill="rgb(234,188,29)" fg:x="22861" fg:w="116"/><text x="52.8675%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.8413%" y="213" width="0.3795%" height="15" fill="rgb(246,141,4)" fg:x="22977" fg:w="165"/><text x="53.1343%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.2208%" y="213" width="0.1265%" height="15" fill="rgb(229,23,39)" fg:x="23142" fg:w="55"/><text x="53.5138%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="53.3473%" y="197" width="0.1748%" height="15" fill="rgb(206,12,3)" fg:x="23197" fg:w="76"/><text x="53.6403%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.5221%" y="197" width="0.2668%" height="15" fill="rgb(252,226,20)" fg:x="23273" fg:w="116"/><text x="53.8150%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.7888%" y="197" width="0.3795%" height="15" fill="rgb(216,123,35)" fg:x="23389" fg:w="165"/><text x="54.0818%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="54.1683%" y="197" width="0.1265%" height="15" fill="rgb(212,68,40)" fg:x="23554" fg:w="55"/><text x="54.4613%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="53.3473%" y="213" width="1.1683%" height="15" fill="rgb(254,125,32)" fg:x="23197" fg:w="508"/><text x="53.6403%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.41%)</title><rect x="54.5156%" y="213" width="1.4120%" height="15" fill="rgb(253,97,22)" fg:x="23705" fg:w="614"/><text x="54.8085%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="55.9276%" y="213" width="0.1679%" height="15" fill="rgb(241,101,14)" fg:x="24319" fg:w="73"/><text x="56.2206%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="56.0955%" y="197" width="0.1633%" height="15" fill="rgb(238,103,29)" fg:x="24392" fg:w="71"/><text x="56.3885%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="56.2588%" y="197" width="0.9199%" height="15" fill="rgb(233,195,47)" fg:x="24463" fg:w="400"/><text x="56.5517%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="57.1787%" y="197" width="0.1955%" height="15" fill="rgb(246,218,30)" fg:x="24863" fg:w="85"/><text x="57.4716%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="57.3741%" y="197" width="0.1288%" height="15" fill="rgb(219,145,47)" fg:x="24948" fg:w="56"/><text x="57.6671%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="57.5029%" y="197" width="0.1288%" height="15" fill="rgb(243,12,26)" fg:x="25004" fg:w="56"/><text x="57.7959%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="57.6317%" y="197" width="0.1288%" height="15" fill="rgb(214,87,16)" fg:x="25060" fg:w="56"/><text x="57.9247%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="57.7605%" y="197" width="0.1288%" height="15" fill="rgb(208,99,42)" fg:x="25116" fg:w="56"/><text x="58.0535%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="57.8893%" y="197" width="0.1633%" height="15" fill="rgb(253,99,2)" fg:x="25172" fg:w="71"/><text x="58.1823%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="58.0526%" y="197" width="0.1587%" height="15" fill="rgb(220,168,23)" fg:x="25243" fg:w="69"/><text x="58.3455%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="58.2113%" y="197" width="0.9199%" height="15" fill="rgb(242,38,24)" fg:x="25312" fg:w="400"/><text x="58.5042%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="59.1312%" y="197" width="0.0368%" height="15" fill="rgb(225,182,9)" fg:x="25712" fg:w="16"/><text x="59.4241%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="59.1680%" y="181" width="0.1886%" height="15" fill="rgb(243,178,37)" fg:x="25728" fg:w="82"/><text x="59.4609%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="59.3565%" y="149" width="0.1380%" height="15" fill="rgb(232,139,19)" fg:x="25810" fg:w="60"/><text x="59.6495%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="59.3565%" y="165" width="0.1955%" height="15" fill="rgb(225,201,24)" fg:x="25810" fg:w="85"/><text x="59.6495%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.5520%" y="117" width="0.0207%" height="15" fill="rgb(221,47,46)" fg:x="25895" fg:w="9"/><text x="59.8450%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.5727%" y="101" width="0.0690%" height="15" fill="rgb(249,23,13)" fg:x="25904" fg:w="30"/><text x="59.8657%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.5727%" y="117" width="0.1265%" height="15" fill="rgb(219,9,5)" fg:x="25904" fg:w="55"/><text x="59.8657%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="59.5520%" y="133" width="0.2714%" height="15" fill="rgb(254,171,16)" fg:x="25895" fg:w="118"/><text x="59.8450%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="59.5520%" y="149" width="0.3933%" height="15" fill="rgb(230,171,20)" fg:x="25895" fg:w="171"/><text x="59.8450%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="59.5520%" y="165" width="0.4048%" height="15" fill="rgb(210,71,41)" fg:x="25895" fg:w="176"/><text x="59.8450%" y="175.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="59.3565%" y="181" width="0.8555%" height="15" fill="rgb(206,173,20)" fg:x="25810" fg:w="372"/><text x="59.6495%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="59.1680%" y="197" width="1.3798%" height="15" fill="rgb(233,88,34)" fg:x="25728" fg:w="600"/><text x="59.4609%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="60.5478%" y="197" width="0.1955%" height="15" fill="rgb(223,209,46)" fg:x="26328" fg:w="85"/><text x="60.8408%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="60.7433%" y="197" width="0.1311%" height="15" fill="rgb(250,43,18)" fg:x="26413" fg:w="57"/><text x="61.0362%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="60.8744%" y="197" width="0.1518%" height="15" fill="rgb(208,13,10)" fg:x="26470" fg:w="66"/><text x="61.1673%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="61.0261%" y="197" width="0.1587%" height="15" fill="rgb(212,200,36)" fg:x="26536" fg:w="69"/><text x="61.3191%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="61.1848%" y="181" width="0.9199%" height="15" fill="rgb(225,90,30)" fg:x="26605" fg:w="400"/><text x="61.4778%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="62.1047%" y="181" width="0.0368%" height="15" fill="rgb(236,182,39)" fg:x="27005" fg:w="16"/><text x="62.3977%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="62.1415%" y="165" width="0.1886%" height="15" fill="rgb(212,144,35)" fg:x="27021" fg:w="82"/><text x="62.4345%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="62.3301%" y="133" width="0.1380%" height="15" fill="rgb(228,63,44)" fg:x="27103" fg:w="60"/><text x="62.6231%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="62.3301%" y="149" width="0.1955%" height="15" fill="rgb(228,109,6)" fg:x="27103" fg:w="85"/><text x="62.6231%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.5256%" y="101" width="0.0207%" height="15" fill="rgb(238,117,24)" fg:x="27188" fg:w="9"/><text x="62.8186%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.5463%" y="85" width="0.0690%" height="15" fill="rgb(242,26,26)" fg:x="27197" fg:w="30"/><text x="62.8393%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.5463%" y="101" width="0.1265%" height="15" fill="rgb(221,92,48)" fg:x="27197" fg:w="55"/><text x="62.8393%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="62.5256%" y="117" width="0.2714%" height="15" fill="rgb(209,209,32)" fg:x="27188" fg:w="118"/><text x="62.8186%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="62.5256%" y="133" width="0.3933%" height="15" fill="rgb(221,70,22)" fg:x="27188" fg:w="171"/><text x="62.8186%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="62.5256%" y="149" width="0.4048%" height="15" fill="rgb(248,145,5)" fg:x="27188" fg:w="176"/><text x="62.8186%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="62.3301%" y="165" width="0.8555%" height="15" fill="rgb(226,116,26)" fg:x="27103" fg:w="372"/><text x="62.6231%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="62.1415%" y="181" width="1.3798%" height="15" fill="rgb(244,5,17)" fg:x="27021" fg:w="600"/><text x="62.4345%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="63.5214%" y="181" width="0.1955%" height="15" fill="rgb(252,159,33)" fg:x="27621" fg:w="85"/><text x="63.8143%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="63.7169%" y="181" width="0.1311%" height="15" fill="rgb(206,71,0)" fg:x="27706" fg:w="57"/><text x="64.0098%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="63.8479%" y="165" width="0.1633%" height="15" fill="rgb(233,118,54)" fg:x="27763" fg:w="71"/><text x="64.1409%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="64.0112%" y="165" width="0.2185%" height="15" fill="rgb(234,83,48)" fg:x="27834" fg:w="95"/><text x="64.3042%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="64.2297%" y="165" width="0.1518%" height="15" fill="rgb(228,3,54)" fg:x="27929" fg:w="66"/><text x="64.5227%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.65%)</title><rect x="63.8479%" y="181" width="0.6508%" height="15" fill="rgb(226,155,13)" fg:x="27763" fg:w="283"/><text x="64.1409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.4988%" y="181" width="0.1886%" height="15" fill="rgb(241,28,37)" fg:x="28046" fg:w="82"/><text x="64.7917%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,692 instructions, 3.89%)</title><rect x="61.1848%" y="197" width="3.8912%" height="15" fill="rgb(233,93,10)" fg:x="26605" fg:w="1692"/><text x="61.4778%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="65.0760%" y="197" width="0.1518%" height="15" fill="rgb(225,113,19)" fg:x="28297" fg:w="66"/><text x="65.3690%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.2278%" y="197" width="0.0299%" height="15" fill="rgb(241,2,18)" fg:x="28363" fg:w="13"/><text x="65.5208%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.2577%" y="197" width="0.0299%" height="15" fill="rgb(228,207,21)" fg:x="28376" fg:w="13"/><text x="65.5507%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="65.2876%" y="197" width="0.0161%" height="15" fill="rgb(213,211,35)" fg:x="28389" fg:w="7"/><text x="65.5806%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="65.3037%" y="197" width="0.0276%" height="15" fill="rgb(209,83,10)" fg:x="28396" fg:w="12"/><text x="65.5967%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.3313%" y="181" width="0.1886%" height="15" fill="rgb(209,164,1)" fg:x="28408" fg:w="82"/><text x="65.6242%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="65.3313%" y="197" width="0.3795%" height="15" fill="rgb(213,184,43)" fg:x="28408" fg:w="165"/><text x="65.6242%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.7107%" y="165" width="0.1886%" height="15" fill="rgb(231,61,34)" fg:x="28573" fg:w="82"/><text x="66.0037%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.27%)</title><rect x="65.7107%" y="181" width="0.2691%" height="15" fill="rgb(235,75,3)" fg:x="28573" fg:w="117"/><text x="66.0037%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.43%)</title><rect x="65.7107%" y="197" width="0.4347%" height="15" fill="rgb(220,106,47)" fg:x="28573" fg:w="189"/><text x="66.0037%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.1454%" y="197" width="0.1886%" height="15" fill="rgb(210,196,33)" fg:x="28762" fg:w="82"/><text x="66.4384%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.3340%" y="197" width="0.1863%" height="15" fill="rgb(229,154,42)" fg:x="28844" fg:w="81"/><text x="66.6269%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.5202%" y="197" width="0.1886%" height="15" fill="rgb(228,114,26)" fg:x="28925" fg:w="82"/><text x="66.8132%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.7088%" y="197" width="0.1886%" height="15" fill="rgb(208,144,1)" fg:x="29007" fg:w="82"/><text x="67.0018%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.9020%" y="197" width="0.1863%" height="15" fill="rgb(239,112,37)" fg:x="29091" fg:w="81"/><text x="67.1950%" y="207.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="67.0883%" y="197" width="0.8762%" height="15" fill="rgb(210,96,50)" fg:x="29172" fg:w="381"/><text x="67.3813%" y="207.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="67.9645%" y="197" width="0.8762%" height="15" fill="rgb(222,178,2)" fg:x="29553" fg:w="381"/><text x="68.2575%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,445 instructions, 14.82%)</title><rect x="56.0955%" y="213" width="14.8219%" height="15" fill="rgb(226,74,18)" fg:x="24392" fg:w="6445"/><text x="56.3885%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="70.9174%" y="213" width="0.7727%" height="15" fill="rgb(225,67,54)" fg:x="30837" fg:w="336"/><text x="71.2103%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.6901%" y="181" width="0.0115%" height="15" fill="rgb(251,92,32)" fg:x="31173" fg:w="5"/><text x="71.9831%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.7016%" y="165" width="0.1219%" height="15" fill="rgb(228,149,22)" fg:x="31178" fg:w="53"/><text x="71.9946%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="71.8235%" y="165" width="0.2047%" height="15" fill="rgb(243,54,13)" fg:x="31231" fg:w="89"/><text x="72.1164%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="72.0281%" y="165" width="0.3703%" height="15" fill="rgb(243,180,28)" fg:x="31320" fg:w="161"/><text x="72.3211%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="71.7016%" y="181" width="1.2419%" height="15" fill="rgb(208,167,24)" fg:x="31178" fg:w="540"/><text x="71.9946%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.9434%" y="181" width="0.1564%" height="15" fill="rgb(245,73,45)" fg:x="31718" fg:w="68"/><text x="73.2364%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (772 instructions, 1.78%)</title><rect x="71.6901%" y="197" width="1.7754%" height="15" fill="rgb(237,203,48)" fg:x="31173" fg:w="772"/><text x="71.9831%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (804 instructions, 1.85%)</title><rect x="71.6901%" y="213" width="1.8490%" height="15" fill="rgb(211,197,16)" fg:x="31173" fg:w="804"/><text x="71.9831%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="73.5391%" y="213" width="0.0759%" height="15" fill="rgb(243,99,51)" fg:x="31977" fg:w="33"/><text x="73.8321%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="73.6150%" y="197" width="0.1311%" height="15" fill="rgb(215,123,29)" fg:x="32010" fg:w="57"/><text x="73.9079%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="73.8151%" y="197" width="0.1311%" height="15" fill="rgb(239,186,37)" fg:x="32097" fg:w="57"/><text x="74.1080%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (174 instructions, 0.40%)</title><rect x="73.6150%" y="213" width="0.4002%" height="15" fill="rgb(252,136,39)" fg:x="32010" fg:w="174"/><text x="73.9079%" y="223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (83 instructions, 0.19%)</title><rect x="74.0151%" y="213" width="0.1909%" height="15" fill="rgb(223,213,32)" fg:x="32184" fg:w="83"/><text x="74.3081%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2060%" y="213" width="0.0253%" height="15" fill="rgb(233,115,5)" fg:x="32267" fg:w="11"/><text x="74.4990%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2313%" y="213" width="0.0253%" height="15" fill="rgb(207,226,44)" fg:x="32278" fg:w="11"/><text x="74.5243%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2566%" y="213" width="0.0253%" height="15" fill="rgb(208,126,0)" fg:x="32289" fg:w="11"/><text x="74.5496%" y="223.50"></text></g><g><title>memcpy (411 instructions, 0.95%)</title><rect x="74.2819%" y="213" width="0.9452%" height="15" fill="rgb(244,66,21)" fg:x="32300" fg:w="411"/><text x="74.5749%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="75.2271%" y="197" width="0.0115%" height="15" fill="rgb(222,97,12)" fg:x="32711" fg:w="5"/><text x="75.5201%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (103 instructions, 0.24%)</title><rect x="75.2386%" y="197" width="0.2369%" height="15" fill="rgb(219,213,19)" fg:x="32716" fg:w="103"/><text x="75.5316%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (103 instructions, 0.24%)</title><rect x="75.4755%" y="181" width="0.2369%" height="15" fill="rgb(252,169,30)" fg:x="32819" fg:w="103"/><text x="75.7684%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.31%)</title><rect x="75.4755%" y="197" width="0.3059%" height="15" fill="rgb(206,32,51)" fg:x="32819" fg:w="133"/><text x="75.7684%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.7813%" y="197" width="0.0253%" height="15" fill="rgb(250,172,42)" fg:x="32952" fg:w="11"/><text x="76.0743%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (319 instructions, 0.73%)</title><rect x="75.2271%" y="213" width="0.7336%" height="15" fill="rgb(209,34,43)" fg:x="32711" fg:w="319"/><text x="75.5201%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.9607%" y="213" width="0.1863%" height="15" fill="rgb(223,11,35)" fg:x="33030" fg:w="81"/><text x="76.2537%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.1654%" y="197" width="0.0115%" height="15" fill="rgb(251,219,26)" fg:x="33119" fg:w="5"/><text x="76.4584%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.1769%" y="181" width="0.1863%" height="15" fill="rgb(231,119,3)" fg:x="33124" fg:w="81"/><text x="76.4699%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.26%)</title><rect x="76.1769%" y="197" width="0.2553%" height="15" fill="rgb(216,97,11)" fg:x="33124" fg:w="111"/><text x="76.4699%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.4322%" y="197" width="0.3128%" height="15" fill="rgb(223,59,9)" fg:x="33235" fg:w="136"/><text x="76.7251%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (411 instructions, 0.95%)</title><rect x="76.1654%" y="213" width="0.9452%" height="15" fill="rgb(233,93,31)" fg:x="33119" fg:w="411"/><text x="76.4584%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="77.1106%" y="213" width="0.0736%" height="15" fill="rgb(239,81,33)" fg:x="33530" fg:w="32"/><text x="77.4036%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.27%)</title><rect x="77.1842%" y="165" width="0.2691%" height="15" fill="rgb(213,120,34)" fg:x="33562" fg:w="117"/><text x="77.4772%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="77.1842%" y="181" width="0.3496%" height="15" fill="rgb(243,49,53)" fg:x="33562" fg:w="152"/><text x="77.4772%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (221 instructions, 0.51%)</title><rect x="77.1842%" y="197" width="0.5082%" height="15" fill="rgb(247,216,33)" fg:x="33562" fg:w="221"/><text x="77.4772%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6924%" y="197" width="0.0253%" height="15" fill="rgb(226,26,14)" fg:x="33783" fg:w="11"/><text x="77.9854%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.7177%" y="197" width="0.0253%" height="15" fill="rgb(215,49,53)" fg:x="33794" fg:w="11"/><text x="78.0107%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (408 instructions, 0.94%)</title><rect x="77.1842%" y="213" width="0.9383%" height="15" fill="rgb(245,162,40)" fg:x="33562" fg:w="408"/><text x="77.4772%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="78.1225%" y="213" width="0.0690%" height="15" fill="rgb(229,68,17)" fg:x="33970" fg:w="30"/><text x="78.4155%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.1915%" y="213" width="0.0115%" height="15" fill="rgb(213,182,10)" fg:x="34000" fg:w="5"/><text x="78.4844%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.2030%" y="213" width="0.0115%" height="15" fill="rgb(245,125,30)" fg:x="34005" fg:w="5"/><text x="78.4959%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.2145%" y="213" width="0.1265%" height="15" fill="rgb(232,202,2)" fg:x="34010" fg:w="55"/><text x="78.5074%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,015 instructions, 27.63%)</title><rect x="52.3055%" y="229" width="27.6315%" height="15" fill="rgb(237,140,51)" fg:x="22744" fg:w="12015"/><text x="52.5985%" y="239.50">canister_update &lt;ic-cdk internal&gt; tim..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="79.9370%" y="213" width="0.1748%" height="15" fill="rgb(236,157,25)" fg:x="34759" fg:w="76"/><text x="80.2300%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.1118%" y="165" width="0.0437%" height="15" fill="rgb(219,209,0)" fg:x="34835" fg:w="19"/><text x="80.4047%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="80.1555%" y="149" width="0.1633%" height="15" fill="rgb(240,116,54)" fg:x="34854" fg:w="71"/><text x="80.4484%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="80.3187%" y="149" width="0.9199%" height="15" fill="rgb(216,10,36)" fg:x="34925" fg:w="400"/><text x="80.6117%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="81.2386%" y="149" width="0.1955%" height="15" fill="rgb(222,72,44)" fg:x="35325" fg:w="85"/><text x="81.5316%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="81.4341%" y="149" width="0.1288%" height="15" fill="rgb(232,159,9)" fg:x="35410" fg:w="56"/><text x="81.7271%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="81.5629%" y="149" width="0.1288%" height="15" fill="rgb(210,39,32)" fg:x="35466" fg:w="56"/><text x="81.8559%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="81.6917%" y="149" width="0.1288%" height="15" fill="rgb(216,194,45)" fg:x="35522" fg:w="56"/><text x="81.9847%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="81.8205%" y="149" width="0.1288%" height="15" fill="rgb(218,18,35)" fg:x="35578" fg:w="56"/><text x="82.1135%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="81.9493%" y="149" width="0.1633%" height="15" fill="rgb(207,83,51)" fg:x="35634" fg:w="71"/><text x="82.2422%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="82.1125%" y="149" width="0.1587%" height="15" fill="rgb(225,63,43)" fg:x="35705" fg:w="69"/><text x="82.4055%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="82.2712%" y="149" width="0.9199%" height="15" fill="rgb(207,57,36)" fg:x="35774" fg:w="400"/><text x="82.5642%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.1911%" y="149" width="0.0368%" height="15" fill="rgb(216,99,33)" fg:x="36174" fg:w="16"/><text x="83.4841%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="83.2279%" y="133" width="0.1679%" height="15" fill="rgb(225,42,16)" fg:x="36190" fg:w="73"/><text x="83.5209%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.3958%" y="101" width="0.1380%" height="15" fill="rgb(220,201,45)" fg:x="36263" fg:w="60"/><text x="83.6888%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.3958%" y="117" width="0.1955%" height="15" fill="rgb(225,33,4)" fg:x="36263" fg:w="85"/><text x="83.6888%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.5913%" y="69" width="0.0207%" height="15" fill="rgb(224,33,50)" fg:x="36348" fg:w="9"/><text x="83.8843%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.6120%" y="53" width="0.0690%" height="15" fill="rgb(246,198,51)" fg:x="36357" fg:w="30"/><text x="83.9050%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.6120%" y="69" width="0.1265%" height="15" fill="rgb(205,22,4)" fg:x="36357" fg:w="55"/><text x="83.9050%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="83.5913%" y="85" width="0.2714%" height="15" fill="rgb(206,3,8)" fg:x="36348" fg:w="118"/><text x="83.8843%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="83.5913%" y="101" width="0.3933%" height="15" fill="rgb(251,23,15)" fg:x="36348" fg:w="171"/><text x="83.8843%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="83.5913%" y="117" width="0.4048%" height="15" fill="rgb(252,88,28)" fg:x="36348" fg:w="176"/><text x="83.8843%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="83.3958%" y="133" width="0.8555%" height="15" fill="rgb(212,127,14)" fg:x="36263" fg:w="372"/><text x="83.6888%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.36%)</title><rect x="83.2279%" y="149" width="1.3592%" height="15" fill="rgb(247,145,37)" fg:x="36190" fg:w="591"/><text x="83.5209%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="84.5871%" y="149" width="0.1955%" height="15" fill="rgb(209,117,53)" fg:x="36781" fg:w="85"/><text x="84.8800%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.7826%" y="149" width="0.1863%" height="15" fill="rgb(212,90,42)" fg:x="36866" fg:w="81"/><text x="85.0755%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="84.9688%" y="149" width="0.1518%" height="15" fill="rgb(218,164,37)" fg:x="36947" fg:w="66"/><text x="85.2618%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.16%)</title><rect x="85.1206%" y="149" width="0.1587%" height="15" fill="rgb(246,65,34)" fg:x="37013" fg:w="69"/><text x="85.4136%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="85.2793%" y="133" width="0.9199%" height="15" fill="rgb(231,100,33)" fg:x="37082" fg:w="400"/><text x="85.5723%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.1992%" y="133" width="0.0368%" height="15" fill="rgb(228,126,14)" fg:x="37482" fg:w="16"/><text x="86.4922%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="86.2360%" y="117" width="0.1817%" height="15" fill="rgb(215,173,21)" fg:x="37498" fg:w="79"/><text x="86.5290%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.4177%" y="85" width="0.1380%" height="15" fill="rgb(210,6,40)" fg:x="37577" fg:w="60"/><text x="86.7106%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.4177%" y="101" width="0.1955%" height="15" fill="rgb(212,48,18)" fg:x="37577" fg:w="85"/><text x="86.7106%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.6132%" y="53" width="0.0207%" height="15" fill="rgb(230,214,11)" fg:x="37662" fg:w="9"/><text x="86.9061%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.6339%" y="37" width="0.0690%" height="15" fill="rgb(254,105,39)" fg:x="37671" fg:w="30"/><text x="86.9268%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.6339%" y="53" width="0.1265%" height="15" fill="rgb(245,158,5)" fg:x="37671" fg:w="55"/><text x="86.9268%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="86.6132%" y="69" width="0.2714%" height="15" fill="rgb(249,208,11)" fg:x="37662" fg:w="118"/><text x="86.9061%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="86.6132%" y="85" width="0.3933%" height="15" fill="rgb(210,39,28)" fg:x="37662" fg:w="171"/><text x="86.9061%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="86.6132%" y="101" width="0.4048%" height="15" fill="rgb(211,56,53)" fg:x="37662" fg:w="176"/><text x="86.9061%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="86.4177%" y="117" width="0.8555%" height="15" fill="rgb(226,201,30)" fg:x="37577" fg:w="372"/><text x="86.7106%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (597 instructions, 1.37%)</title><rect x="86.2360%" y="133" width="1.3730%" height="15" fill="rgb(239,101,34)" fg:x="37498" fg:w="597"/><text x="86.5290%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="87.6090%" y="133" width="0.1955%" height="15" fill="rgb(226,209,5)" fg:x="38095" fg:w="85"/><text x="87.9019%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.8044%" y="133" width="0.1863%" height="15" fill="rgb(250,105,47)" fg:x="38180" fg:w="81"/><text x="88.0974%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,306 instructions, 3.00%)</title><rect x="85.2793%" y="149" width="3.0035%" height="15" fill="rgb(230,72,3)" fg:x="37082" fg:w="1306"/><text x="85.5723%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="88.2828%" y="149" width="0.1518%" height="15" fill="rgb(232,218,39)" fg:x="38388" fg:w="66"/><text x="88.5757%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4346%" y="149" width="0.0299%" height="15" fill="rgb(248,166,6)" fg:x="38454" fg:w="13"/><text x="88.7275%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4645%" y="149" width="0.0299%" height="15" fill="rgb(247,89,20)" fg:x="38467" fg:w="13"/><text x="88.7574%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.4944%" y="149" width="0.0161%" height="15" fill="rgb(248,130,54)" fg:x="38480" fg:w="7"/><text x="88.7873%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="88.5105%" y="149" width="0.0276%" height="15" fill="rgb(234,196,4)" fg:x="38487" fg:w="12"/><text x="88.8034%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="88.5380%" y="149" width="0.1817%" height="15" fill="rgb(250,143,31)" fg:x="38499" fg:w="79"/><text x="88.8310%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.7197%" y="149" width="0.1886%" height="15" fill="rgb(211,110,34)" fg:x="38578" fg:w="82"/><text x="89.0127%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="88.9129%" y="149" width="0.8762%" height="15" fill="rgb(215,124,48)" fg:x="38662" fg:w="381"/><text x="89.2059%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="89.7891%" y="149" width="0.8762%" height="15" fill="rgb(216,46,13)" fg:x="39043" fg:w="381"/><text x="90.0821%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,329 instructions, 12.26%)</title><rect x="80.1555%" y="165" width="12.2554%" height="15" fill="rgb(205,184,25)" fg:x="34854" fg:w="5329"/><text x="80.4484%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="92.4108%" y="165" width="0.7727%" height="15" fill="rgb(228,1,10)" fg:x="40183" fg:w="336"/><text x="92.7038%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="93.1835%" y="149" width="0.0115%" height="15" fill="rgb(213,116,27)" fg:x="40519" fg:w="5"/><text x="93.4765%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.1950%" y="133" width="0.1863%" height="15" fill="rgb(241,95,50)" fg:x="40524" fg:w="81"/><text x="93.4880%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="93.4503%" y="133" width="0.1311%" height="15" fill="rgb(238,48,32)" fg:x="40635" fg:w="57"/><text x="93.7433%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (198 instructions, 0.46%)</title><rect x="93.1950%" y="149" width="0.4554%" height="15" fill="rgb(235,113,49)" fg:x="40524" fg:w="198"/><text x="93.4880%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (267 instructions, 0.61%)</title><rect x="93.1835%" y="165" width="0.6140%" height="15" fill="rgb(205,127,43)" fg:x="40519" fg:w="267"/><text x="93.4765%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.29%)</title><rect x="93.7976%" y="165" width="0.2852%" height="15" fill="rgb(250,162,2)" fg:x="40786" fg:w="124"/><text x="94.0905%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (125 instructions, 0.29%)</title><rect x="94.0827%" y="165" width="0.2875%" height="15" fill="rgb(220,13,41)" fg:x="40910" fg:w="125"/><text x="94.3757%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="94.3794%" y="165" width="0.0437%" height="15" fill="rgb(249,221,25)" fg:x="41039" fg:w="19"/><text x="94.6724%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="94.4231%" y="165" width="0.0276%" height="15" fill="rgb(215,208,19)" fg:x="41058" fg:w="12"/><text x="94.7161%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 instructions, 0.12%)</title><rect x="94.4507%" y="165" width="0.1196%" height="15" fill="rgb(236,175,2)" fg:x="41070" fg:w="52"/><text x="94.7437%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.5703%" y="165" width="0.0299%" height="15" fill="rgb(241,52,2)" fg:x="41122" fg:w="13"/><text x="94.8633%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,079 instructions, 16.28%)</title><rect x="80.1118%" y="181" width="16.2799%" height="15" fill="rgb(248,140,14)" fg:x="34835" fg:w="7079"/><text x="80.4047%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.3917%" y="181" width="0.0276%" height="15" fill="rgb(253,22,42)" fg:x="41914" fg:w="12"/><text x="96.6847%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,172 instructions, 16.49%)</title><rect x="80.1118%" y="197" width="16.4938%" height="15" fill="rgb(234,61,47)" fg:x="34835" fg:w="7172"/><text x="80.4047%" y="207.50">ic_cdk::futures::wake..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.6056%" y="165" width="0.0115%" height="15" fill="rgb(208,226,15)" fg:x="42007" fg:w="5"/><text x="96.8985%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.6171%" y="165" width="0.1863%" height="15" fill="rgb(217,221,4)" fg:x="42012" fg:w="81"/><text x="96.9100%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.8033%" y="165" width="0.1794%" height="15" fill="rgb(212,174,34)" fg:x="42093" fg:w="78"/><text x="97.0963%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (209 instructions, 0.48%)</title><rect x="96.6056%" y="181" width="0.4806%" height="15" fill="rgb(253,83,4)" fg:x="42007" fg:w="209"/><text x="96.8985%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.0862%" y="165" width="0.1863%" height="15" fill="rgb(250,195,49)" fg:x="42216" fg:w="81"/><text x="97.3792%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 instructions, 0.26%)</title><rect x="97.0862%" y="181" width="0.2622%" height="15" fill="rgb(241,192,25)" fg:x="42216" fg:w="114"/><text x="97.3792%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.4933%" y="181" width="0.2829%" height="15" fill="rgb(208,124,10)" fg:x="42393" fg:w="123"/><text x="97.7862%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (170 instructions, 0.39%)</title><rect x="97.7761%" y="181" width="0.3910%" height="15" fill="rgb(222,33,0)" fg:x="42516" fg:w="170"/><text x="98.0691%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (725 instructions, 1.67%)</title><rect x="96.6056%" y="197" width="1.6673%" height="15" fill="rgb(234,209,28)" fg:x="42007" fg:w="725"/><text x="96.8985%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,026 instructions, 18.46%)</title><rect x="80.1118%" y="213" width="18.4578%" height="15" fill="rgb(224,11,23)" fg:x="34835" fg:w="8026"/><text x="80.4047%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="98.8616%" y="181" width="0.1449%" height="15" fill="rgb(232,99,1)" fg:x="42988" fg:w="63"/><text x="99.1546%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (338 instructions, 0.78%)</title><rect x="98.5696%" y="197" width="0.7773%" height="15" fill="rgb(237,95,45)" fg:x="42861" fg:w="338"/><text x="98.8625%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (386 instructions, 0.89%)</title><rect x="98.5696%" y="213" width="0.8877%" height="15" fill="rgb(208,109,11)" fg:x="42861" fg:w="386"/><text x="98.8625%" y="223.50"></text></g><g><title>all (43,483 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(216,190,48)" fg:x="0" fg:w="43483"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,724 instructions, 20.06%)</title><rect x="79.9370%" y="229" width="20.0630%" height="15" fill="rgb(251,171,36)" fg:x="34759" fg:w="8724"/><text x="80.2300%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>