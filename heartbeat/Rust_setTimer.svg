<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43417"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1106%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.85%)</title><rect x="0.1106%" y="213" width="0.8499%" height="15" fill="rgb(241,25,7)" fg:x="48" fg:w="369"/><text x="0.4035%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9605%" y="213" width="0.1889%" height="15" fill="rgb(242,119,39)" fg:x="417" fg:w="82"/><text x="1.2534%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1493%" y="197" width="0.1889%" height="15" fill="rgb(241,98,45)" fg:x="499" fg:w="82"/><text x="1.4423%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.12%)</title><rect x="1.3382%" y="165" width="0.1152%" height="15" fill="rgb(254,28,30)" fg:x="581" fg:w="50"/><text x="1.6312%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.30%)</title><rect x="1.3382%" y="181" width="0.3017%" height="15" fill="rgb(241,142,54)" fg:x="581" fg:w="131"/><text x="1.6312%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="1.6399%" y="181" width="0.9351%" height="15" fill="rgb(222,85,15)" fg:x="712" fg:w="406"/><text x="1.9329%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="2.5750%" y="181" width="0.1889%" height="15" fill="rgb(210,85,47)" fg:x="1118" fg:w="82"/><text x="2.8680%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.7639%" y="181" width="0.1244%" height="15" fill="rgb(224,206,25)" fg:x="1200" fg:w="54"/><text x="3.0569%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.8883%" y="181" width="0.1244%" height="15" fill="rgb(243,201,19)" fg:x="1254" fg:w="54"/><text x="3.1812%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.0126%" y="181" width="0.1244%" height="15" fill="rgb(236,59,4)" fg:x="1308" fg:w="54"/><text x="3.3056%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.1370%" y="181" width="0.1244%" height="15" fill="rgb(254,179,45)" fg:x="1362" fg:w="54"/><text x="3.4300%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="3.2614%" y="181" width="0.1589%" height="15" fill="rgb(226,14,10)" fg:x="1416" fg:w="69"/><text x="3.5544%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="3.4203%" y="181" width="0.1497%" height="15" fill="rgb(244,27,41)" fg:x="1485" fg:w="65"/><text x="3.7133%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="3.5700%" y="181" width="0.9351%" height="15" fill="rgb(235,35,32)" fg:x="1550" fg:w="406"/><text x="3.8630%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.5051%" y="181" width="0.0369%" height="15" fill="rgb(218,68,31)" fg:x="1956" fg:w="16"/><text x="4.7981%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5420%" y="165" width="0.1889%" height="15" fill="rgb(207,120,37)" fg:x="1972" fg:w="82"/><text x="4.8350%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7309%" y="133" width="0.1382%" height="15" fill="rgb(227,98,0)" fg:x="2054" fg:w="60"/><text x="5.0238%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7309%" y="149" width="0.1958%" height="15" fill="rgb(207,7,3)" fg:x="2054" fg:w="85"/><text x="5.0238%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9266%" y="101" width="0.0207%" height="15" fill="rgb(206,98,19)" fg:x="2139" fg:w="9"/><text x="5.2196%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9474%" y="85" width="0.0691%" height="15" fill="rgb(217,5,26)" fg:x="2148" fg:w="30"/><text x="5.2403%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9474%" y="101" width="0.1267%" height="15" fill="rgb(235,190,38)" fg:x="2148" fg:w="55"/><text x="5.2403%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="4.9266%" y="117" width="0.2718%" height="15" fill="rgb(247,86,24)" fg:x="2139" fg:w="118"/><text x="5.2196%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="4.9266%" y="133" width="0.3939%" height="15" fill="rgb(205,101,16)" fg:x="2139" fg:w="171"/><text x="5.2196%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="4.9266%" y="149" width="0.4054%" height="15" fill="rgb(246,168,33)" fg:x="2139" fg:w="176"/><text x="5.2196%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="4.7309%" y="165" width="0.8568%" height="15" fill="rgb(231,114,1)" fg:x="2054" fg:w="372"/><text x="5.0238%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="4.5420%" y="181" width="1.3704%" height="15" fill="rgb(207,184,53)" fg:x="1972" fg:w="595"/><text x="4.8350%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.9124%" y="181" width="0.1889%" height="15" fill="rgb(224,95,51)" fg:x="2567" fg:w="82"/><text x="6.2054%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="6.1013%" y="181" width="0.1290%" height="15" fill="rgb(212,188,45)" fg:x="2649" fg:w="56"/><text x="6.3943%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="6.2303%" y="181" width="0.1451%" height="15" fill="rgb(223,154,38)" fg:x="2705" fg:w="63"/><text x="6.5232%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="6.3754%" y="181" width="0.1497%" height="15" fill="rgb(251,22,52)" fg:x="2768" fg:w="65"/><text x="6.6684%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="6.5251%" y="165" width="0.9351%" height="15" fill="rgb(229,209,22)" fg:x="2833" fg:w="406"/><text x="6.8181%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.4602%" y="165" width="0.0369%" height="15" fill="rgb(234,138,34)" fg:x="3239" fg:w="16"/><text x="7.7532%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.4971%" y="149" width="0.1889%" height="15" fill="rgb(212,95,11)" fg:x="3255" fg:w="82"/><text x="7.7900%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.6859%" y="117" width="0.1382%" height="15" fill="rgb(240,179,47)" fg:x="3337" fg:w="60"/><text x="7.9789%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.6859%" y="133" width="0.1958%" height="15" fill="rgb(240,163,11)" fg:x="3337" fg:w="85"/><text x="7.9789%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.8817%" y="85" width="0.0207%" height="15" fill="rgb(236,37,12)" fg:x="3422" fg:w="9"/><text x="8.1747%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.9024%" y="69" width="0.0691%" height="15" fill="rgb(232,164,16)" fg:x="3431" fg:w="30"/><text x="8.1954%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.9024%" y="85" width="0.1267%" height="15" fill="rgb(244,205,15)" fg:x="3431" fg:w="55"/><text x="8.1954%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.8817%" y="101" width="0.2718%" height="15" fill="rgb(223,117,47)" fg:x="3422" fg:w="118"/><text x="8.1747%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="7.8817%" y="117" width="0.3939%" height="15" fill="rgb(244,107,35)" fg:x="3422" fg:w="171"/><text x="8.1747%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="7.8817%" y="133" width="0.4054%" height="15" fill="rgb(205,140,8)" fg:x="3422" fg:w="176"/><text x="8.1747%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="7.6859%" y="149" width="0.8568%" height="15" fill="rgb(228,84,46)" fg:x="3337" fg:w="372"/><text x="7.9789%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="7.4971%" y="165" width="1.3704%" height="15" fill="rgb(254,188,9)" fg:x="3255" fg:w="595"/><text x="7.7900%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.8675%" y="165" width="0.1889%" height="15" fill="rgb(206,112,54)" fg:x="3850" fg:w="82"/><text x="9.1605%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="9.0564%" y="165" width="0.1290%" height="15" fill="rgb(216,84,49)" fg:x="3932" fg:w="56"/><text x="9.3493%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="9.1853%" y="149" width="0.1589%" height="15" fill="rgb(214,194,35)" fg:x="3988" fg:w="69"/><text x="9.4783%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="9.3443%" y="149" width="0.2096%" height="15" fill="rgb(249,28,3)" fg:x="4057" fg:w="91"/><text x="9.6372%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="9.5539%" y="149" width="0.1451%" height="15" fill="rgb(222,56,52)" fg:x="4148" fg:w="63"/><text x="9.8468%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="9.1853%" y="165" width="0.6495%" height="15" fill="rgb(245,217,50)" fg:x="3988" fg:w="282"/><text x="9.4783%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8349%" y="165" width="0.1889%" height="15" fill="rgb(213,201,24)" fg:x="4270" fg:w="82"/><text x="10.1278%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.97%)</title><rect x="6.5251%" y="181" width="3.9662%" height="15" fill="rgb(248,116,28)" fg:x="2833" fg:w="1722"/><text x="6.8181%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="10.4913%" y="181" width="0.1451%" height="15" fill="rgb(219,72,43)" fg:x="4555" fg:w="63"/><text x="10.7843%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6364%" y="181" width="0.0299%" height="15" fill="rgb(209,138,14)" fg:x="4618" fg:w="13"/><text x="10.9294%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6663%" y="181" width="0.0299%" height="15" fill="rgb(222,18,33)" fg:x="4631" fg:w="13"/><text x="10.9593%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.6963%" y="181" width="0.0161%" height="15" fill="rgb(213,199,7)" fg:x="4644" fg:w="7"/><text x="10.9892%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.7124%" y="181" width="0.0345%" height="15" fill="rgb(250,110,10)" fg:x="4651" fg:w="15"/><text x="11.0054%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.7469%" y="165" width="0.1889%" height="15" fill="rgb(248,123,6)" fg:x="4666" fg:w="82"/><text x="11.0399%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.7469%" y="181" width="0.3800%" height="15" fill="rgb(206,91,31)" fg:x="4666" fg:w="165"/><text x="11.0399%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.1270%" y="149" width="0.1889%" height="15" fill="rgb(211,154,13)" fg:x="4831" fg:w="82"/><text x="11.4199%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="11.1270%" y="165" width="0.2672%" height="15" fill="rgb(225,148,7)" fg:x="4831" fg:w="116"/><text x="11.4199%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="11.1270%" y="181" width="0.4238%" height="15" fill="rgb(220,160,43)" fg:x="4831" fg:w="184"/><text x="11.4199%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.5508%" y="181" width="0.1889%" height="15" fill="rgb(213,52,39)" fg:x="5015" fg:w="82"/><text x="11.8437%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.7396%" y="181" width="0.1866%" height="15" fill="rgb(243,137,7)" fg:x="5097" fg:w="81"/><text x="12.0326%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9262%" y="181" width="0.1889%" height="15" fill="rgb(230,79,13)" fg:x="5178" fg:w="82"/><text x="12.2192%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="12.1151%" y="181" width="0.1889%" height="15" fill="rgb(247,105,23)" fg:x="5260" fg:w="82"/><text x="12.4080%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.3085%" y="181" width="0.1866%" height="15" fill="rgb(223,179,41)" fg:x="5344" fg:w="81"/><text x="12.6015%" y="191.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="12.4951%" y="181" width="0.8752%" height="15" fill="rgb(218,9,34)" fg:x="5425" fg:w="380"/><text x="12.7881%" y="191.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="13.3703%" y="181" width="0.8752%" height="15" fill="rgb(222,106,8)" fg:x="5805" fg:w="380"/><text x="13.6633%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,527 instructions, 15.03%)</title><rect x="1.3382%" y="197" width="15.0333%" height="15" fill="rgb(211,220,0)" fg:x="581" fg:w="6527"/><text x="1.6312%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="16.3715%" y="197" width="0.7716%" height="15" fill="rgb(229,52,16)" fg:x="7108" fg:w="335"/><text x="16.6644%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (49 instructions, 0.11%)</title><rect x="17.1431%" y="181" width="0.1129%" height="15" fill="rgb(212,155,18)" fg:x="7443" fg:w="49"/><text x="17.4360%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (87 instructions, 0.20%)</title><rect x="17.1431%" y="197" width="0.2004%" height="15" fill="rgb(242,21,14)" fg:x="7443" fg:w="87"/><text x="17.4360%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.3434%" y="197" width="0.1889%" height="15" fill="rgb(222,19,48)" fg:x="7530" fg:w="82"/><text x="17.6364%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="17.5323%" y="181" width="0.0276%" height="15" fill="rgb(232,45,27)" fg:x="7612" fg:w="12"/><text x="17.8253%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.5599%" y="165" width="0.1221%" height="15" fill="rgb(249,103,42)" fg:x="7624" fg:w="53"/><text x="17.8529%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="17.6820%" y="165" width="0.2027%" height="15" fill="rgb(246,81,33)" fg:x="7677" fg:w="88"/><text x="17.9750%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="17.8847%" y="165" width="0.3731%" height="15" fill="rgb(252,33,42)" fg:x="7765" fg:w="162"/><text x="18.1777%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="17.5599%" y="181" width="1.2438%" height="15" fill="rgb(209,212,41)" fg:x="7624" fg:w="540"/><text x="17.8529%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.8037%" y="181" width="0.1889%" height="15" fill="rgb(207,154,6)" fg:x="8164" fg:w="82"/><text x="19.0967%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="18.9926%" y="181" width="0.3132%" height="15" fill="rgb(223,64,47)" fg:x="8246" fg:w="136"/><text x="19.2855%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,142 instructions, 2.63%)</title><rect x="17.5323%" y="197" width="2.6303%" height="15" fill="rgb(211,161,38)" fg:x="7612" fg:w="1142"/><text x="17.8253%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.1626%" y="197" width="0.1889%" height="15" fill="rgb(219,138,40)" fg:x="8754" fg:w="82"/><text x="20.4556%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="20.3515%" y="181" width="0.0276%" height="15" fill="rgb(241,228,46)" fg:x="8836" fg:w="12"/><text x="20.6444%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.3791%" y="165" width="0.1221%" height="15" fill="rgb(223,209,38)" fg:x="8848" fg:w="53"/><text x="20.6721%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="20.5012%" y="165" width="0.2027%" height="15" fill="rgb(236,164,45)" fg:x="8901" fg:w="88"/><text x="20.7942%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="20.7039%" y="165" width="0.3731%" height="15" fill="rgb(231,15,5)" fg:x="8989" fg:w="162"/><text x="20.9968%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="20.3791%" y="181" width="1.2438%" height="15" fill="rgb(252,35,15)" fg:x="8848" fg:w="540"/><text x="20.6721%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.6229%" y="181" width="0.1566%" height="15" fill="rgb(248,181,18)" fg:x="9388" fg:w="68"/><text x="21.9158%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.7795%" y="165" width="0.1866%" height="15" fill="rgb(233,39,42)" fg:x="9456" fg:w="81"/><text x="22.0725%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="21.7795%" y="181" width="0.2488%" height="15" fill="rgb(238,110,33)" fg:x="9456" fg:w="108"/><text x="22.0725%" y="191.50"></text></g><g><title>candid::types::internal::env_add (912 instructions, 2.10%)</title><rect x="20.3515%" y="197" width="2.1006%" height="15" fill="rgb(233,195,10)" fg:x="8836" fg:w="912"/><text x="20.6444%" y="207.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.4520%" y="149" width="0.1221%" height="15" fill="rgb(254,105,3)" fg:x="9748" fg:w="53"/><text x="22.7450%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="22.4520%" y="165" width="0.1820%" height="15" fill="rgb(221,225,9)" fg:x="9748" fg:w="79"/><text x="22.7450%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="22.4520%" y="181" width="0.6725%" height="15" fill="rgb(224,227,45)" fg:x="9748" fg:w="292"/><text x="22.7450%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.1246%" y="181" width="0.1889%" height="15" fill="rgb(229,198,43)" fg:x="10040" fg:w="82"/><text x="23.4176%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.3134%" y="181" width="0.3132%" height="15" fill="rgb(206,209,35)" fg:x="10122" fg:w="136"/><text x="23.6064%" y="191.50"></text></g><g><title>candid::types::internal::env_id (963 instructions, 2.22%)</title><rect x="22.4520%" y="197" width="2.2180%" height="15" fill="rgb(245,195,53)" fg:x="9748" fg:w="963"/><text x="22.7450%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="24.6701%" y="197" width="0.0783%" height="15" fill="rgb(240,92,26)" fg:x="10711" fg:w="34"/><text x="24.9630%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="24.7484%" y="181" width="0.2833%" height="15" fill="rgb(207,40,23)" fg:x="10745" fg:w="123"/><text x="25.0413%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="25.0939%" y="181" width="0.2833%" height="15" fill="rgb(223,111,35)" fg:x="10895" fg:w="123"/><text x="25.3868%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.69%)</title><rect x="24.7484%" y="197" width="0.6910%" height="15" fill="rgb(229,147,28)" fg:x="10745" fg:w="300"/><text x="25.0413%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="25.4393%" y="181" width="0.0645%" height="15" fill="rgb(211,29,28)" fg:x="11045" fg:w="28"/><text x="25.7323%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="25.4393%" y="197" width="0.2234%" height="15" fill="rgb(228,72,33)" fg:x="11045" fg:w="97"/><text x="25.7323%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6628%" y="197" width="0.0253%" height="15" fill="rgb(205,214,31)" fg:x="11142" fg:w="11"/><text x="25.9557%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6881%" y="197" width="0.0253%" height="15" fill="rgb(224,111,15)" fg:x="11153" fg:w="11"/><text x="25.9811%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.7134%" y="197" width="0.0253%" height="15" fill="rgb(253,21,26)" fg:x="11164" fg:w="11"/><text x="26.0064%" y="207.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="25.7388%" y="197" width="0.9443%" height="15" fill="rgb(245,139,43)" fg:x="11175" fg:w="410"/><text x="26.0317%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="26.6831%" y="165" width="0.0276%" height="15" fill="rgb(252,170,7)" fg:x="11585" fg:w="12"/><text x="26.9761%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="26.7107%" y="165" width="0.3869%" height="15" fill="rgb(231,118,14)" fg:x="11597" fg:w="168"/><text x="27.0037%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="27.0977%" y="133" width="0.1451%" height="15" fill="rgb(238,83,0)" fg:x="11765" fg:w="63"/><text x="27.3906%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.48%)</title><rect x="27.0977%" y="149" width="0.4791%" height="15" fill="rgb(221,39,39)" fg:x="11765" fg:w="208"/><text x="27.3906%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.54%)</title><rect x="27.0977%" y="165" width="0.5413%" height="15" fill="rgb(222,119,46)" fg:x="11765" fg:w="235"/><text x="27.3906%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.6389%" y="165" width="0.0253%" height="15" fill="rgb(222,165,49)" fg:x="12000" fg:w="11"/><text x="27.9319%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (468 instructions, 1.08%)</title><rect x="26.6831%" y="181" width="1.0779%" height="15" fill="rgb(219,113,52)" fg:x="11585" fg:w="468"/><text x="26.9761%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (502 instructions, 1.16%)</title><rect x="26.6831%" y="197" width="1.1562%" height="15" fill="rgb(214,7,15)" fg:x="11585" fg:w="502"/><text x="26.9761%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="27.8393%" y="181" width="0.1267%" height="15" fill="rgb(235,32,4)" fg:x="12087" fg:w="55"/><text x="28.1323%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="27.9660%" y="181" width="0.1451%" height="15" fill="rgb(238,90,54)" fg:x="12142" fg:w="63"/><text x="28.2590%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.46%)</title><rect x="27.8393%" y="197" width="0.4583%" height="15" fill="rgb(213,208,19)" fg:x="12087" fg:w="199"/><text x="28.1323%" y="207.50"></text></g><g><title>__multi3 (56 instructions, 0.13%)</title><rect x="28.2977%" y="197" width="0.1290%" height="15" fill="rgb(233,156,4)" fg:x="12286" fg:w="56"/><text x="28.5906%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="28.4267%" y="181" width="0.1267%" height="15" fill="rgb(207,194,5)" fg:x="12342" fg:w="55"/><text x="28.7196%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.38%)</title><rect x="28.4267%" y="197" width="0.3754%" height="15" fill="rgb(206,111,30)" fg:x="12342" fg:w="163"/><text x="28.7196%" y="207.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="28.8021%" y="165" width="0.2326%" height="15" fill="rgb(243,70,54)" fg:x="12505" fg:w="101"/><text x="29.0951%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="28.8021%" y="181" width="0.3132%" height="15" fill="rgb(242,28,8)" fg:x="12505" fg:w="136"/><text x="29.0951%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="29.2950%" y="165" width="0.1750%" height="15" fill="rgb(219,106,18)" fg:x="12719" fg:w="76"/><text x="29.5879%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="29.2950%" y="181" width="0.2534%" height="15" fill="rgb(244,222,10)" fg:x="12719" fg:w="110"/><text x="29.5879%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (392 instructions, 0.90%)</title><rect x="28.8021%" y="197" width="0.9029%" height="15" fill="rgb(236,179,52)" fg:x="12505" fg:w="392"/><text x="29.0951%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (82 instructions, 0.19%)</title><rect x="29.7050%" y="197" width="0.1889%" height="15" fill="rgb(213,23,39)" fg:x="12897" fg:w="82"/><text x="29.9979%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="29.8938%" y="165" width="0.0276%" height="15" fill="rgb(238,48,10)" fg:x="12979" fg:w="12"/><text x="30.1868%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.9215%" y="165" width="0.0253%" height="15" fill="rgb(251,196,23)" fg:x="12991" fg:w="11"/><text x="30.2144%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.9468%" y="165" width="0.3132%" height="15" fill="rgb(250,152,24)" fg:x="13002" fg:w="136"/><text x="30.2398%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (317 instructions, 0.73%)</title><rect x="29.8938%" y="181" width="0.7301%" height="15" fill="rgb(209,150,17)" fg:x="12979" fg:w="317"/><text x="30.1868%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.6239%" y="181" width="0.0737%" height="15" fill="rgb(234,202,34)" fg:x="13296" fg:w="32"/><text x="30.9169%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="30.6977%" y="133" width="0.1750%" height="15" fill="rgb(253,148,53)" fg:x="13328" fg:w="76"/><text x="30.9906%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="30.6977%" y="149" width="0.2534%" height="15" fill="rgb(218,129,16)" fg:x="13328" fg:w="110"/><text x="30.9906%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="30.6977%" y="165" width="0.4031%" height="15" fill="rgb(216,85,19)" fg:x="13328" fg:w="175"/><text x="30.9906%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.1007%" y="165" width="0.0253%" height="15" fill="rgb(235,228,7)" fg:x="13503" fg:w="11"/><text x="31.3937%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.1261%" y="165" width="0.0253%" height="15" fill="rgb(245,175,0)" fg:x="13514" fg:w="11"/><text x="31.4190%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.83%)</title><rect x="30.6977%" y="181" width="0.8269%" height="15" fill="rgb(208,168,36)" fg:x="13328" fg:w="359"/><text x="30.9906%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.5245%" y="181" width="0.0691%" height="15" fill="rgb(246,171,24)" fg:x="13687" fg:w="30"/><text x="31.8175%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.5936%" y="181" width="0.0115%" height="15" fill="rgb(215,142,24)" fg:x="13717" fg:w="5"/><text x="31.8866%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.6143%" y="165" width="0.1267%" height="15" fill="rgb(250,187,7)" fg:x="13726" fg:w="55"/><text x="31.9073%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (109 instructions, 0.25%)</title><rect x="31.6051%" y="181" width="0.2511%" height="15" fill="rgb(228,66,33)" fg:x="13722" fg:w="109"/><text x="31.8981%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (923 instructions, 2.13%)</title><rect x="29.8938%" y="197" width="2.1259%" height="15" fill="rgb(234,215,21)" fg:x="12979" fg:w="923"/><text x="30.1868%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,073 instructions, 32.41%)</title><rect x="1.1493%" y="213" width="32.4136%" height="15" fill="rgb(222,191,20)" fg:x="499" fg:w="14073"/><text x="1.4423%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.5629%" y="213" width="0.0276%" height="15" fill="rgb(245,79,54)" fg:x="14572" fg:w="12"/><text x="33.8559%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.5905%" y="213" width="0.1866%" height="15" fill="rgb(240,10,37)" fg:x="14584" fg:w="81"/><text x="33.8835%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="33.7771%" y="213" width="0.2902%" height="15" fill="rgb(214,192,32)" fg:x="14665" fg:w="126"/><text x="34.0701%" y="223.50"></text></g><g><title>canister_update setTimer (14,889 instructions, 34.29%)</title><rect x="0.0000%" y="229" width="34.2930%" height="15" fill="rgb(209,36,54)" fg:x="0" fg:w="14889"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.2930%" y="213" width="0.0438%" height="15" fill="rgb(220,10,11)" fg:x="14889" fg:w="19"/><text x="34.5860%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="34.3368%" y="213" width="0.1797%" height="15" fill="rgb(221,106,17)" fg:x="14908" fg:w="78"/><text x="34.6297%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="34.5164%" y="213" width="0.1750%" height="15" fill="rgb(251,142,44)" fg:x="14986" fg:w="76"/><text x="34.8094%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6915%" y="197" width="0.1889%" height="15" fill="rgb(238,13,15)" fg:x="15062" fg:w="82"/><text x="34.9844%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="34.8803%" y="197" width="0.1750%" height="15" fill="rgb(208,107,27)" fg:x="15144" fg:w="76"/><text x="35.1733%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.0554%" y="197" width="0.1889%" height="15" fill="rgb(205,136,37)" fg:x="15220" fg:w="82"/><text x="35.3484%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.2443%" y="197" width="0.0438%" height="15" fill="rgb(250,205,27)" fg:x="15302" fg:w="19"/><text x="35.5372%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="35.2880%" y="181" width="0.1750%" height="15" fill="rgb(210,80,43)" fg:x="15321" fg:w="76"/><text x="35.5810%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.4631%" y="181" width="0.2672%" height="15" fill="rgb(247,160,36)" fg:x="15397" fg:w="116"/><text x="35.7560%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.7302%" y="181" width="0.3800%" height="15" fill="rgb(234,13,49)" fg:x="15513" fg:w="165"/><text x="36.0232%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="36.1103%" y="181" width="0.1267%" height="15" fill="rgb(234,122,0)" fg:x="15678" fg:w="55"/><text x="36.4032%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.2880%" y="197" width="1.1700%" height="15" fill="rgb(207,146,38)" fg:x="15321" fg:w="508"/><text x="35.5810%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.4581%" y="181" width="0.0276%" height="15" fill="rgb(207,177,25)" fg:x="15829" fg:w="12"/><text x="36.7510%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.22%)</title><rect x="36.4581%" y="197" width="0.2165%" height="15" fill="rgb(211,178,42)" fg:x="15829" fg:w="94"/><text x="36.7510%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.6746%" y="165" width="0.0276%" height="15" fill="rgb(230,69,54)" fg:x="15923" fg:w="12"/><text x="36.9675%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.12%)</title><rect x="36.6746%" y="181" width="0.1152%" height="15" fill="rgb(214,135,41)" fg:x="15923" fg:w="50"/><text x="36.9675%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.7897%" y="181" width="0.1889%" height="15" fill="rgb(237,67,25)" fg:x="15973" fg:w="82"/><text x="37.0827%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.9786%" y="165" width="0.0276%" height="15" fill="rgb(222,189,50)" fg:x="16055" fg:w="12"/><text x="37.2716%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="37.0062%" y="149" width="0.1221%" height="15" fill="rgb(245,148,34)" fg:x="16067" fg:w="53"/><text x="37.2992%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="37.1283%" y="149" width="0.2027%" height="15" fill="rgb(222,29,6)" fg:x="16120" fg:w="88"/><text x="37.4213%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="37.3310%" y="149" width="0.3731%" height="15" fill="rgb(221,189,43)" fg:x="16208" fg:w="162"/><text x="37.6240%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="37.0062%" y="165" width="1.2438%" height="15" fill="rgb(207,36,27)" fg:x="16067" fg:w="540"/><text x="37.2992%" y="175.50"></text></g><g><title>candid::types::internal::env_add (772 instructions, 1.78%)</title><rect x="36.9786%" y="181" width="1.7781%" height="15" fill="rgb(217,90,24)" fg:x="16055" fg:w="772"/><text x="37.2716%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.7567%" y="181" width="0.1889%" height="15" fill="rgb(224,66,35)" fg:x="16827" fg:w="82"/><text x="39.0497%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="38.9456%" y="165" width="0.0276%" height="15" fill="rgb(221,13,50)" fg:x="16909" fg:w="12"/><text x="39.2385%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="38.9732%" y="149" width="0.1221%" height="15" fill="rgb(236,68,49)" fg:x="16921" fg:w="53"/><text x="39.2662%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="39.0953%" y="149" width="0.2027%" height="15" fill="rgb(229,146,28)" fg:x="16974" fg:w="88"/><text x="39.3883%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="39.2980%" y="149" width="0.3731%" height="15" fill="rgb(225,31,38)" fg:x="17062" fg:w="162"/><text x="39.5909%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="38.9732%" y="165" width="1.2438%" height="15" fill="rgb(250,208,3)" fg:x="16921" fg:w="540"/><text x="39.2662%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.2170%" y="165" width="0.1566%" height="15" fill="rgb(246,54,23)" fg:x="17461" fg:w="68"/><text x="40.5099%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.3736%" y="149" width="0.1866%" height="15" fill="rgb(243,76,11)" fg:x="17529" fg:w="81"/><text x="40.6666%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="40.3736%" y="165" width="0.2488%" height="15" fill="rgb(245,21,50)" fg:x="17529" fg:w="108"/><text x="40.6666%" y="175.50"></text></g><g><title>candid::types::internal::env_add (912 instructions, 2.10%)</title><rect x="38.9456%" y="181" width="2.1006%" height="15" fill="rgb(228,9,43)" fg:x="16909" fg:w="912"/><text x="39.2385%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.0461%" y="133" width="0.1221%" height="15" fill="rgb(208,100,47)" fg:x="17821" fg:w="53"/><text x="41.3391%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="41.0461%" y="149" width="0.1820%" height="15" fill="rgb(232,26,8)" fg:x="17821" fg:w="79"/><text x="41.3391%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="41.0461%" y="165" width="0.6725%" height="15" fill="rgb(216,166,38)" fg:x="17821" fg:w="292"/><text x="41.3391%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1080 (15 instructions, 0.03%)</title><rect x="41.7187%" y="165" width="0.0345%" height="15" fill="rgb(251,202,51)" fg:x="18113" fg:w="15"/><text x="42.0117%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.7532%" y="165" width="0.0253%" height="15" fill="rgb(254,216,34)" fg:x="18128" fg:w="11"/><text x="42.0462%" y="175.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.20%)</title><rect x="41.0461%" y="181" width="1.2023%" height="15" fill="rgb(251,32,27)" fg:x="17821" fg:w="522"/><text x="41.3391%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,527 instructions, 5.82%)</title><rect x="36.6746%" y="197" width="5.8203%" height="15" fill="rgb(208,127,28)" fg:x="15923" fg:w="2527"/><text x="36.9675%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="42.4949%" y="165" width="0.1750%" height="15" fill="rgb(224,137,22)" fg:x="18450" fg:w="76"/><text x="42.7878%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="42.4949%" y="181" width="0.2534%" height="15" fill="rgb(254,70,32)" fg:x="18450" fg:w="110"/><text x="42.7878%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.41%)</title><rect x="42.4949%" y="197" width="0.4100%" height="15" fill="rgb(229,75,37)" fg:x="18450" fg:w="178"/><text x="42.7878%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.9049%" y="181" width="0.0415%" height="15" fill="rgb(252,64,23)" fg:x="18628" fg:w="18"/><text x="43.1978%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.9463%" y="181" width="0.0253%" height="15" fill="rgb(232,162,48)" fg:x="18646" fg:w="11"/><text x="43.2393%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (81 instructions, 0.19%)</title><rect x="42.9049%" y="197" width="0.1866%" height="15" fill="rgb(246,160,12)" fg:x="18628" fg:w="81"/><text x="43.1978%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.0914%" y="197" width="0.0253%" height="15" fill="rgb(247,166,0)" fg:x="18709" fg:w="11"/><text x="43.3844%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="43.1168%" y="165" width="0.1635%" height="15" fill="rgb(249,219,21)" fg:x="18720" fg:w="71"/><text x="43.4097%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="43.1168%" y="181" width="0.2418%" height="15" fill="rgb(205,209,3)" fg:x="18720" fg:w="105"/><text x="43.4097%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="43.5083%" y="165" width="0.2718%" height="15" fill="rgb(243,44,1)" fg:x="18890" fg:w="118"/><text x="43.8013%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="43.5083%" y="181" width="0.3501%" height="15" fill="rgb(206,159,16)" fg:x="18890" fg:w="152"/><text x="43.8013%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (387 instructions, 0.89%)</title><rect x="43.1168%" y="197" width="0.8914%" height="15" fill="rgb(244,77,30)" fg:x="18720" fg:w="387"/><text x="43.4097%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="44.0081%" y="149" width="0.1750%" height="15" fill="rgb(218,69,12)" fg:x="19107" fg:w="76"/><text x="44.3011%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="44.0081%" y="165" width="0.2534%" height="15" fill="rgb(212,87,7)" fg:x="19107" fg:w="110"/><text x="44.3011%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="44.0081%" y="181" width="0.4031%" height="15" fill="rgb(245,114,25)" fg:x="19107" fg:w="175"/><text x="44.3011%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.4112%" y="181" width="0.0253%" height="15" fill="rgb(210,61,42)" fg:x="19282" fg:w="11"/><text x="44.7041%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="44.4365%" y="133" width="0.1635%" height="15" fill="rgb(211,52,33)" fg:x="19293" fg:w="71"/><text x="44.7295%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="44.4365%" y="149" width="0.2418%" height="15" fill="rgb(234,58,33)" fg:x="19293" fg:w="105"/><text x="44.7295%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (170 instructions, 0.39%)</title><rect x="44.4365%" y="165" width="0.3916%" height="15" fill="rgb(220,115,36)" fg:x="19293" fg:w="170"/><text x="44.7295%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (225 instructions, 0.52%)</title><rect x="44.4365%" y="181" width="0.5182%" height="15" fill="rgb(243,153,54)" fg:x="19293" fg:w="225"/><text x="44.7295%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="44.9547%" y="181" width="0.0691%" height="15" fill="rgb(251,47,18)" fg:x="19518" fg:w="30"/><text x="45.2477%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="45.0238%" y="181" width="0.1866%" height="15" fill="rgb(242,102,42)" fg:x="19548" fg:w="81"/><text x="45.3168%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (725 instructions, 1.67%)</title><rect x="44.0081%" y="197" width="1.6699%" height="15" fill="rgb(234,31,38)" fg:x="19107" fg:w="725"/><text x="44.3011%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.6780%" y="197" width="0.1382%" height="15" fill="rgb(221,117,51)" fg:x="19832" fg:w="60"/><text x="45.9709%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.8162%" y="149" width="0.1797%" height="15" fill="rgb(212,20,18)" fg:x="19892" fg:w="78"/><text x="46.1091%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="45.9958%" y="149" width="0.4491%" height="15" fill="rgb(245,133,36)" fg:x="19970" fg:w="195"/><text x="46.2888%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.4449%" y="149" width="0.1866%" height="15" fill="rgb(212,6,19)" fg:x="20165" fg:w="81"/><text x="46.7379%" y="159.50"></text></g><g><title>__rust_realloc (440 instructions, 1.01%)</title><rect x="45.8162%" y="165" width="1.0134%" height="15" fill="rgb(218,1,36)" fg:x="19892" fg:w="440"/><text x="46.1091%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (475 instructions, 1.09%)</title><rect x="45.8162%" y="181" width="1.0940%" height="15" fill="rgb(246,84,54)" fg:x="19892" fg:w="475"/><text x="46.1091%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (548 instructions, 1.26%)</title><rect x="45.8162%" y="197" width="1.2622%" height="15" fill="rgb(242,110,6)" fg:x="19892" fg:w="548"/><text x="46.1091%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="47.0783%" y="197" width="0.3109%" height="15" fill="rgb(214,47,5)" fg:x="20440" fg:w="135"/><text x="47.3713%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="47.3893%" y="197" width="0.0115%" height="15" fill="rgb(218,159,25)" fg:x="20575" fg:w="5"/><text x="47.6822%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.4008%" y="197" width="0.0253%" height="15" fill="rgb(215,211,28)" fg:x="20580" fg:w="11"/><text x="47.6938%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.4261%" y="197" width="0.1866%" height="15" fill="rgb(238,59,32)" fg:x="20591" fg:w="81"/><text x="47.7191%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.6127%" y="197" width="0.2902%" height="15" fill="rgb(226,82,3)" fg:x="20672" fg:w="126"/><text x="47.9057%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.9029%" y="197" width="0.2902%" height="15" fill="rgb(240,164,32)" fg:x="20798" fg:w="126"/><text x="48.1959%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="48.1931%" y="197" width="0.1797%" height="15" fill="rgb(232,46,7)" fg:x="20924" fg:w="78"/><text x="48.4861%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.3728%" y="197" width="0.1889%" height="15" fill="rgb(229,129,53)" fg:x="21002" fg:w="82"/><text x="48.6657%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.5616%" y="197" width="0.0461%" height="15" fill="rgb(234,188,29)" fg:x="21084" fg:w="20"/><text x="48.8546%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.6077%" y="181" width="0.1221%" height="15" fill="rgb(246,141,4)" fg:x="21104" fg:w="53"/><text x="48.9007%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.6077%" y="197" width="0.1566%" height="15" fill="rgb(229,23,39)" fg:x="21104" fg:w="68"/><text x="48.9007%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.7643%" y="197" width="0.0415%" height="15" fill="rgb(206,12,3)" fg:x="21172" fg:w="18"/><text x="49.0573%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,490 instructions, 17.25%)</title><rect x="34.6915%" y="213" width="17.2513%" height="15" fill="rgb(252,226,20)" fg:x="15062" fg:w="7490"/><text x="34.9844%" y="223.50">ic_cdk_timers::global_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="51.9428%" y="213" width="0.0276%" height="15" fill="rgb(216,123,35)" fg:x="22552" fg:w="12"/><text x="52.2358%" y="223.50"></text></g><g><title>canister_global_timer (7,761 instructions, 17.88%)</title><rect x="34.2930%" y="229" width="17.8755%" height="15" fill="rgb(212,68,40)" fg:x="14889" fg:w="7761"/><text x="34.5860%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="52.1685%" y="213" width="0.2718%" height="15" fill="rgb(254,125,32)" fg:x="22650" fg:w="118"/><text x="52.4615%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.4403%" y="213" width="0.2672%" height="15" fill="rgb(253,97,22)" fg:x="22768" fg:w="116"/><text x="52.7333%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.7075%" y="213" width="0.3800%" height="15" fill="rgb(241,101,14)" fg:x="22884" fg:w="165"/><text x="53.0004%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.0875%" y="213" width="0.1267%" height="15" fill="rgb(238,103,29)" fg:x="23049" fg:w="55"/><text x="53.3805%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="53.2142%" y="197" width="0.1750%" height="15" fill="rgb(233,195,47)" fg:x="23104" fg:w="76"/><text x="53.5071%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.3892%" y="197" width="0.2672%" height="15" fill="rgb(246,218,30)" fg:x="23180" fg:w="116"/><text x="53.6822%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.6564%" y="197" width="0.3800%" height="15" fill="rgb(219,145,47)" fg:x="23296" fg:w="165"/><text x="53.9494%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="54.0364%" y="197" width="0.1267%" height="15" fill="rgb(243,12,26)" fg:x="23461" fg:w="55"/><text x="54.3294%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="53.2142%" y="213" width="1.1700%" height="15" fill="rgb(214,87,16)" fg:x="23104" fg:w="508"/><text x="53.5071%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.41%)</title><rect x="54.3842%" y="213" width="1.4142%" height="15" fill="rgb(208,99,42)" fg:x="23612" fg:w="614"/><text x="54.6772%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="55.7984%" y="213" width="0.1635%" height="15" fill="rgb(253,99,2)" fg:x="24226" fg:w="71"/><text x="56.0914%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="55.9620%" y="197" width="0.1589%" height="15" fill="rgb(220,168,23)" fg:x="24297" fg:w="69"/><text x="56.2549%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="56.1209%" y="197" width="0.9351%" height="15" fill="rgb(242,38,24)" fg:x="24366" fg:w="406"/><text x="56.4138%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="57.0560%" y="197" width="0.1889%" height="15" fill="rgb(225,182,9)" fg:x="24772" fg:w="82"/><text x="57.3490%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.2449%" y="197" width="0.1244%" height="15" fill="rgb(243,178,37)" fg:x="24854" fg:w="54"/><text x="57.5378%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.3692%" y="197" width="0.1244%" height="15" fill="rgb(232,139,19)" fg:x="24908" fg:w="54"/><text x="57.6622%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.4936%" y="197" width="0.1244%" height="15" fill="rgb(225,201,24)" fg:x="24962" fg:w="54"/><text x="57.7866%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.6180%" y="197" width="0.1244%" height="15" fill="rgb(221,47,46)" fg:x="25016" fg:w="54"/><text x="57.9110%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="57.7424%" y="197" width="0.1589%" height="15" fill="rgb(249,23,13)" fg:x="25070" fg:w="69"/><text x="58.0353%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="57.9013%" y="197" width="0.1497%" height="15" fill="rgb(219,9,5)" fg:x="25139" fg:w="65"/><text x="58.1943%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="58.0510%" y="197" width="0.9351%" height="15" fill="rgb(254,171,16)" fg:x="25204" fg:w="406"/><text x="58.3440%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="58.9861%" y="197" width="0.0369%" height="15" fill="rgb(230,171,20)" fg:x="25610" fg:w="16"/><text x="59.2791%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="59.0230%" y="181" width="0.1889%" height="15" fill="rgb(210,71,41)" fg:x="25626" fg:w="82"/><text x="59.3159%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="59.2118%" y="149" width="0.1382%" height="15" fill="rgb(206,173,20)" fg:x="25708" fg:w="60"/><text x="59.5048%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="59.2118%" y="165" width="0.1958%" height="15" fill="rgb(233,88,34)" fg:x="25708" fg:w="85"/><text x="59.5048%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.4076%" y="117" width="0.0207%" height="15" fill="rgb(223,209,46)" fg:x="25793" fg:w="9"/><text x="59.7006%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.4283%" y="101" width="0.0691%" height="15" fill="rgb(250,43,18)" fg:x="25802" fg:w="30"/><text x="59.7213%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.4283%" y="117" width="0.1267%" height="15" fill="rgb(208,13,10)" fg:x="25802" fg:w="55"/><text x="59.7213%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="59.4076%" y="133" width="0.2718%" height="15" fill="rgb(212,200,36)" fg:x="25793" fg:w="118"/><text x="59.7006%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="59.4076%" y="149" width="0.3939%" height="15" fill="rgb(225,90,30)" fg:x="25793" fg:w="171"/><text x="59.7006%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="59.4076%" y="165" width="0.4054%" height="15" fill="rgb(236,182,39)" fg:x="25793" fg:w="176"/><text x="59.7006%" y="175.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="59.2118%" y="181" width="0.8568%" height="15" fill="rgb(212,144,35)" fg:x="25708" fg:w="372"/><text x="59.5048%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="59.0230%" y="197" width="1.3704%" height="15" fill="rgb(228,63,44)" fg:x="25626" fg:w="595"/><text x="59.3159%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="60.3934%" y="197" width="0.1889%" height="15" fill="rgb(228,109,6)" fg:x="26221" fg:w="82"/><text x="60.6864%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="60.5823%" y="197" width="0.1290%" height="15" fill="rgb(238,117,24)" fg:x="26303" fg:w="56"/><text x="60.8752%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="60.7112%" y="197" width="0.1451%" height="15" fill="rgb(242,26,26)" fg:x="26359" fg:w="63"/><text x="61.0042%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="60.8563%" y="197" width="0.1497%" height="15" fill="rgb(221,92,48)" fg:x="26422" fg:w="65"/><text x="61.1493%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="61.0061%" y="181" width="0.9351%" height="15" fill="rgb(209,209,32)" fg:x="26487" fg:w="406"/><text x="61.2990%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="61.9412%" y="181" width="0.0369%" height="15" fill="rgb(221,70,22)" fg:x="26893" fg:w="16"/><text x="62.2341%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.9780%" y="165" width="0.1889%" height="15" fill="rgb(248,145,5)" fg:x="26909" fg:w="82"/><text x="62.2710%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="62.1669%" y="133" width="0.1382%" height="15" fill="rgb(226,116,26)" fg:x="26991" fg:w="60"/><text x="62.4599%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="62.1669%" y="149" width="0.1958%" height="15" fill="rgb(244,5,17)" fg:x="26991" fg:w="85"/><text x="62.4599%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.3627%" y="101" width="0.0207%" height="15" fill="rgb(252,159,33)" fg:x="27076" fg:w="9"/><text x="62.6556%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.3834%" y="85" width="0.0691%" height="15" fill="rgb(206,71,0)" fg:x="27085" fg:w="30"/><text x="62.6764%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.3834%" y="101" width="0.1267%" height="15" fill="rgb(233,118,54)" fg:x="27085" fg:w="55"/><text x="62.6764%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="62.3627%" y="117" width="0.2718%" height="15" fill="rgb(234,83,48)" fg:x="27076" fg:w="118"/><text x="62.6556%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="62.3627%" y="133" width="0.3939%" height="15" fill="rgb(228,3,54)" fg:x="27076" fg:w="171"/><text x="62.6556%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="62.3627%" y="149" width="0.4054%" height="15" fill="rgb(226,155,13)" fg:x="27076" fg:w="176"/><text x="62.6556%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="62.1669%" y="165" width="0.8568%" height="15" fill="rgb(241,28,37)" fg:x="26991" fg:w="372"/><text x="62.4599%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="61.9780%" y="181" width="1.3704%" height="15" fill="rgb(233,93,10)" fg:x="26909" fg:w="595"/><text x="62.2710%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="63.3485%" y="181" width="0.1889%" height="15" fill="rgb(225,113,19)" fg:x="27504" fg:w="82"/><text x="63.6414%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="63.5373%" y="181" width="0.1290%" height="15" fill="rgb(241,2,18)" fg:x="27586" fg:w="56"/><text x="63.8303%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="63.6663%" y="165" width="0.1589%" height="15" fill="rgb(228,207,21)" fg:x="27642" fg:w="69"/><text x="63.9593%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="63.8252%" y="165" width="0.2096%" height="15" fill="rgb(213,211,35)" fg:x="27711" fg:w="91"/><text x="64.1182%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="64.0348%" y="165" width="0.1451%" height="15" fill="rgb(209,83,10)" fg:x="27802" fg:w="63"/><text x="64.3278%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="63.6663%" y="181" width="0.6495%" height="15" fill="rgb(209,164,1)" fg:x="27642" fg:w="282"/><text x="63.9593%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.3158%" y="181" width="0.1889%" height="15" fill="rgb(213,184,43)" fg:x="27924" fg:w="82"/><text x="64.6088%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.97%)</title><rect x="61.0061%" y="197" width="3.9662%" height="15" fill="rgb(231,61,34)" fg:x="26487" fg:w="1722"/><text x="61.2990%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="64.9722%" y="197" width="0.1451%" height="15" fill="rgb(235,75,3)" fg:x="28209" fg:w="63"/><text x="65.2652%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.1174%" y="197" width="0.0299%" height="15" fill="rgb(220,106,47)" fg:x="28272" fg:w="13"/><text x="65.4103%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.1473%" y="197" width="0.0299%" height="15" fill="rgb(210,196,33)" fg:x="28285" fg:w="13"/><text x="65.4403%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="65.1772%" y="197" width="0.0161%" height="15" fill="rgb(229,154,42)" fg:x="28298" fg:w="7"/><text x="65.4702%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="65.1934%" y="197" width="0.0345%" height="15" fill="rgb(228,114,26)" fg:x="28305" fg:w="15"/><text x="65.4863%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.2279%" y="181" width="0.1889%" height="15" fill="rgb(208,144,1)" fg:x="28320" fg:w="82"/><text x="65.5209%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="65.2279%" y="197" width="0.3800%" height="15" fill="rgb(239,112,37)" fg:x="28320" fg:w="165"/><text x="65.5209%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.6079%" y="165" width="0.1889%" height="15" fill="rgb(210,96,50)" fg:x="28485" fg:w="82"/><text x="65.9009%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="65.6079%" y="181" width="0.2672%" height="15" fill="rgb(222,178,2)" fg:x="28485" fg:w="116"/><text x="65.9009%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="65.6079%" y="197" width="0.4238%" height="15" fill="rgb(226,74,18)" fg:x="28485" fg:w="184"/><text x="65.9009%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.0317%" y="197" width="0.1889%" height="15" fill="rgb(225,67,54)" fg:x="28669" fg:w="82"/><text x="66.3247%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.2206%" y="197" width="0.1866%" height="15" fill="rgb(251,92,32)" fg:x="28751" fg:w="81"/><text x="66.5136%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.4072%" y="197" width="0.1889%" height="15" fill="rgb(228,149,22)" fg:x="28832" fg:w="82"/><text x="66.7001%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.5960%" y="197" width="0.1889%" height="15" fill="rgb(243,54,13)" fg:x="28914" fg:w="82"/><text x="66.8890%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.7895%" y="197" width="0.1866%" height="15" fill="rgb(243,180,28)" fg:x="28998" fg:w="81"/><text x="67.0825%" y="207.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="66.9761%" y="197" width="0.8752%" height="15" fill="rgb(208,167,24)" fg:x="29079" fg:w="380"/><text x="67.2690%" y="207.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="67.8513%" y="197" width="0.8752%" height="15" fill="rgb(245,73,45)" fg:x="29459" fg:w="380"/><text x="68.1443%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,457 instructions, 14.87%)</title><rect x="55.9620%" y="213" width="14.8721%" height="15" fill="rgb(237,203,48)" fg:x="24297" fg:w="6457"/><text x="56.2549%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="70.8340%" y="213" width="0.7716%" height="15" fill="rgb(211,197,16)" fg:x="30754" fg:w="335"/><text x="71.1270%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="71.6056%" y="181" width="0.0276%" height="15" fill="rgb(243,99,51)" fg:x="31089" fg:w="12"/><text x="71.8986%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.6332%" y="165" width="0.1221%" height="15" fill="rgb(215,123,29)" fg:x="31101" fg:w="53"/><text x="71.9262%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="71.7553%" y="165" width="0.2027%" height="15" fill="rgb(239,186,37)" fg:x="31154" fg:w="88"/><text x="72.0483%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="71.9580%" y="165" width="0.3731%" height="15" fill="rgb(252,136,39)" fg:x="31242" fg:w="162"/><text x="72.2510%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="71.6332%" y="181" width="1.2438%" height="15" fill="rgb(223,213,32)" fg:x="31101" fg:w="540"/><text x="71.9262%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.8770%" y="181" width="0.1566%" height="15" fill="rgb(233,115,5)" fg:x="31641" fg:w="68"/><text x="73.1700%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (780 instructions, 1.80%)</title><rect x="71.6056%" y="197" width="1.7965%" height="15" fill="rgb(207,226,44)" fg:x="31089" fg:w="780"/><text x="71.8986%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (812 instructions, 1.87%)</title><rect x="71.6056%" y="213" width="1.8702%" height="15" fill="rgb(208,126,0)" fg:x="31089" fg:w="812"/><text x="71.8986%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="73.4758%" y="213" width="0.0783%" height="15" fill="rgb(244,66,21)" fg:x="31901" fg:w="34"/><text x="73.7688%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.5541%" y="197" width="0.1290%" height="15" fill="rgb(222,97,12)" fg:x="31935" fg:w="56"/><text x="73.8471%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.7453%" y="197" width="0.1290%" height="15" fill="rgb(219,213,19)" fg:x="32018" fg:w="56"/><text x="74.0383%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.38%)</title><rect x="73.5541%" y="213" width="0.3823%" height="15" fill="rgb(252,169,30)" fg:x="31935" fg:w="166"/><text x="73.8471%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.9365%" y="197" width="0.0645%" height="15" fill="rgb(206,32,51)" fg:x="32101" fg:w="28"/><text x="74.2294%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="73.9365%" y="213" width="0.2234%" height="15" fill="rgb(250,172,42)" fg:x="32101" fg:w="97"/><text x="74.2294%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1599%" y="213" width="0.0253%" height="15" fill="rgb(209,34,43)" fg:x="32198" fg:w="11"/><text x="74.4529%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1852%" y="213" width="0.0253%" height="15" fill="rgb(223,11,35)" fg:x="32209" fg:w="11"/><text x="74.4782%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2106%" y="213" width="0.0253%" height="15" fill="rgb(251,219,26)" fg:x="32220" fg:w="11"/><text x="74.5035%" y="223.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="74.2359%" y="213" width="0.9443%" height="15" fill="rgb(231,119,3)" fg:x="32231" fg:w="410"/><text x="74.5289%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.1802%" y="181" width="0.0276%" height="15" fill="rgb(216,97,11)" fg:x="32641" fg:w="12"/><text x="75.4732%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.2079%" y="181" width="0.2326%" height="15" fill="rgb(223,59,9)" fg:x="32653" fg:w="101"/><text x="75.5008%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.4405%" y="165" width="0.2326%" height="15" fill="rgb(233,93,31)" fg:x="32754" fg:w="101"/><text x="75.7335%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (128 instructions, 0.29%)</title><rect x="75.4405%" y="181" width="0.2948%" height="15" fill="rgb(239,81,33)" fg:x="32754" fg:w="128"/><text x="75.7335%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.7353%" y="181" width="0.0253%" height="15" fill="rgb(213,120,34)" fg:x="32882" fg:w="11"/><text x="76.0283%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (294 instructions, 0.68%)</title><rect x="75.1802%" y="197" width="0.6772%" height="15" fill="rgb(243,49,53)" fg:x="32641" fg:w="294"/><text x="75.4732%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (328 instructions, 0.76%)</title><rect x="75.1802%" y="213" width="0.7555%" height="15" fill="rgb(247,216,33)" fg:x="32641" fg:w="328"/><text x="75.4732%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.9357%" y="213" width="0.1866%" height="15" fill="rgb(226,26,14)" fg:x="32969" fg:w="81"/><text x="76.2287%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.1223%" y="197" width="0.0276%" height="15" fill="rgb(215,49,53)" fg:x="33050" fg:w="12"/><text x="76.4152%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.1499%" y="181" width="0.1866%" height="15" fill="rgb(245,162,40)" fg:x="33062" fg:w="81"/><text x="76.4429%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.1499%" y="197" width="0.2488%" height="15" fill="rgb(229,68,17)" fg:x="33062" fg:w="108"/><text x="76.4429%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.3986%" y="197" width="0.3132%" height="15" fill="rgb(213,182,10)" fg:x="33170" fg:w="136"/><text x="76.6916%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (414 instructions, 0.95%)</title><rect x="76.1223%" y="213" width="0.9535%" height="15" fill="rgb(245,125,30)" fg:x="33050" fg:w="414"/><text x="76.4152%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="77.0758%" y="213" width="0.0737%" height="15" fill="rgb(232,202,2)" fg:x="33464" fg:w="32"/><text x="77.3688%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="77.1495%" y="165" width="0.2718%" height="15" fill="rgb(237,140,51)" fg:x="33496" fg:w="118"/><text x="77.4425%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="77.1495%" y="181" width="0.3501%" height="15" fill="rgb(236,157,25)" fg:x="33496" fg:w="152"/><text x="77.4425%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.50%)</title><rect x="77.1495%" y="197" width="0.4998%" height="15" fill="rgb(219,209,0)" fg:x="33496" fg:w="217"/><text x="77.4425%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6493%" y="197" width="0.0253%" height="15" fill="rgb(240,116,54)" fg:x="33713" fg:w="11"/><text x="77.9423%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6746%" y="197" width="0.0253%" height="15" fill="rgb(216,10,36)" fg:x="33724" fg:w="11"/><text x="77.9676%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (401 instructions, 0.92%)</title><rect x="77.1495%" y="213" width="0.9236%" height="15" fill="rgb(222,72,44)" fg:x="33496" fg:w="401"/><text x="77.4425%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="78.0731%" y="213" width="0.0691%" height="15" fill="rgb(232,159,9)" fg:x="33897" fg:w="30"/><text x="78.3661%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.1422%" y="213" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="33927" fg:w="5"/><text x="78.4352%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.1537%" y="213" width="0.0115%" height="15" fill="rgb(216,194,45)" fg:x="33932" fg:w="5"/><text x="78.4467%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.1652%" y="213" width="0.1267%" height="15" fill="rgb(218,18,35)" fg:x="33937" fg:w="55"/><text x="78.4582%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,036 instructions, 27.72%)</title><rect x="52.1685%" y="229" width="27.7219%" height="15" fill="rgb(207,83,51)" fg:x="22650" fg:w="12036"/><text x="52.4615%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="79.8904%" y="213" width="0.1750%" height="15" fill="rgb(225,63,43)" fg:x="34686" fg:w="76"/><text x="80.1833%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.0654%" y="165" width="0.0438%" height="15" fill="rgb(207,57,36)" fg:x="34762" fg:w="19"/><text x="80.3584%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="80.1092%" y="149" width="0.1589%" height="15" fill="rgb(216,99,33)" fg:x="34781" fg:w="69"/><text x="80.4021%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="80.2681%" y="149" width="0.9351%" height="15" fill="rgb(225,42,16)" fg:x="34850" fg:w="406"/><text x="80.5611%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="81.2032%" y="149" width="0.1889%" height="15" fill="rgb(220,201,45)" fg:x="35256" fg:w="82"/><text x="81.4962%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.3921%" y="149" width="0.1244%" height="15" fill="rgb(225,33,4)" fg:x="35338" fg:w="54"/><text x="81.6851%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.5165%" y="149" width="0.1244%" height="15" fill="rgb(224,33,50)" fg:x="35392" fg:w="54"/><text x="81.8094%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.6408%" y="149" width="0.1244%" height="15" fill="rgb(246,198,51)" fg:x="35446" fg:w="54"/><text x="81.9338%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.7652%" y="149" width="0.1244%" height="15" fill="rgb(205,22,4)" fg:x="35500" fg:w="54"/><text x="82.0582%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="81.8896%" y="149" width="0.1589%" height="15" fill="rgb(206,3,8)" fg:x="35554" fg:w="69"/><text x="82.1826%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="82.0485%" y="149" width="0.1497%" height="15" fill="rgb(251,23,15)" fg:x="35623" fg:w="65"/><text x="82.3415%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="82.1982%" y="149" width="0.9351%" height="15" fill="rgb(252,88,28)" fg:x="35688" fg:w="406"/><text x="82.4912%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.1333%" y="149" width="0.0369%" height="15" fill="rgb(212,127,14)" fg:x="36094" fg:w="16"/><text x="83.4263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="83.1702%" y="133" width="0.1635%" height="15" fill="rgb(247,145,37)" fg:x="36110" fg:w="71"/><text x="83.4632%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.3337%" y="101" width="0.1382%" height="15" fill="rgb(209,117,53)" fg:x="36181" fg:w="60"/><text x="83.6267%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.3337%" y="117" width="0.1958%" height="15" fill="rgb(212,90,42)" fg:x="36181" fg:w="85"/><text x="83.6267%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.5295%" y="69" width="0.0207%" height="15" fill="rgb(218,164,37)" fg:x="36266" fg:w="9"/><text x="83.8225%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.5502%" y="53" width="0.0691%" height="15" fill="rgb(246,65,34)" fg:x="36275" fg:w="30"/><text x="83.8432%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.5502%" y="69" width="0.1267%" height="15" fill="rgb(231,100,33)" fg:x="36275" fg:w="55"/><text x="83.8432%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="83.5295%" y="85" width="0.2718%" height="15" fill="rgb(228,126,14)" fg:x="36266" fg:w="118"/><text x="83.8225%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="83.5295%" y="101" width="0.3939%" height="15" fill="rgb(215,173,21)" fg:x="36266" fg:w="171"/><text x="83.8225%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="83.5295%" y="117" width="0.4054%" height="15" fill="rgb(210,6,40)" fg:x="36266" fg:w="176"/><text x="83.8225%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="83.3337%" y="133" width="0.8568%" height="15" fill="rgb(212,48,18)" fg:x="36181" fg:w="372"/><text x="83.6267%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.35%)</title><rect x="83.1702%" y="149" width="1.3451%" height="15" fill="rgb(230,214,11)" fg:x="36110" fg:w="584"/><text x="83.4632%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="84.5153%" y="149" width="0.1889%" height="15" fill="rgb(254,105,39)" fg:x="36694" fg:w="82"/><text x="84.8083%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.7041%" y="149" width="0.1866%" height="15" fill="rgb(245,158,5)" fg:x="36776" fg:w="81"/><text x="84.9971%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="84.8907%" y="149" width="0.1451%" height="15" fill="rgb(249,208,11)" fg:x="36857" fg:w="63"/><text x="85.1837%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="85.0358%" y="149" width="0.1497%" height="15" fill="rgb(210,39,28)" fg:x="36920" fg:w="65"/><text x="85.3288%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="85.1855%" y="133" width="0.9351%" height="15" fill="rgb(211,56,53)" fg:x="36985" fg:w="406"/><text x="85.4785%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.1206%" y="133" width="0.0369%" height="15" fill="rgb(226,201,30)" fg:x="37391" fg:w="16"/><text x="86.4136%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="86.1575%" y="117" width="0.1797%" height="15" fill="rgb(239,101,34)" fg:x="37407" fg:w="78"/><text x="86.4505%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.3371%" y="85" width="0.1382%" height="15" fill="rgb(226,209,5)" fg:x="37485" fg:w="60"/><text x="86.6301%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.3371%" y="101" width="0.1958%" height="15" fill="rgb(250,105,47)" fg:x="37485" fg:w="85"/><text x="86.6301%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.5329%" y="53" width="0.0207%" height="15" fill="rgb(230,72,3)" fg:x="37570" fg:w="9"/><text x="86.8259%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.5537%" y="37" width="0.0691%" height="15" fill="rgb(232,218,39)" fg:x="37579" fg:w="30"/><text x="86.8466%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.5537%" y="53" width="0.1267%" height="15" fill="rgb(248,166,6)" fg:x="37579" fg:w="55"/><text x="86.8466%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="86.5329%" y="69" width="0.2718%" height="15" fill="rgb(247,89,20)" fg:x="37570" fg:w="118"/><text x="86.8259%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="86.5329%" y="85" width="0.3939%" height="15" fill="rgb(248,130,54)" fg:x="37570" fg:w="171"/><text x="86.8259%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="86.5329%" y="101" width="0.4054%" height="15" fill="rgb(234,196,4)" fg:x="37570" fg:w="176"/><text x="86.8259%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="86.3371%" y="117" width="0.8568%" height="15" fill="rgb(250,143,31)" fg:x="37485" fg:w="372"/><text x="86.6301%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.36%)</title><rect x="86.1575%" y="133" width="1.3612%" height="15" fill="rgb(211,110,34)" fg:x="37407" fg:w="591"/><text x="86.4505%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="87.5187%" y="133" width="0.1889%" height="15" fill="rgb(215,124,48)" fg:x="37998" fg:w="82"/><text x="87.8117%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.7076%" y="133" width="0.1866%" height="15" fill="rgb(216,46,13)" fg:x="38080" fg:w="81"/><text x="88.0005%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,335 instructions, 3.07%)</title><rect x="85.1855%" y="149" width="3.0748%" height="15" fill="rgb(205,184,25)" fg:x="36985" fg:w="1335"/><text x="85.4785%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="88.2604%" y="149" width="0.1451%" height="15" fill="rgb(228,1,10)" fg:x="38320" fg:w="63"/><text x="88.5533%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4055%" y="149" width="0.0299%" height="15" fill="rgb(213,116,27)" fg:x="38383" fg:w="13"/><text x="88.6984%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4354%" y="149" width="0.0299%" height="15" fill="rgb(241,95,50)" fg:x="38396" fg:w="13"/><text x="88.7284%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.4653%" y="149" width="0.0161%" height="15" fill="rgb(238,48,32)" fg:x="38409" fg:w="7"/><text x="88.7583%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="88.4815%" y="149" width="0.0345%" height="15" fill="rgb(235,113,49)" fg:x="38416" fg:w="15"/><text x="88.7744%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="88.5160%" y="149" width="0.1797%" height="15" fill="rgb(205,127,43)" fg:x="38431" fg:w="78"/><text x="88.8090%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.6957%" y="149" width="0.1889%" height="15" fill="rgb(250,162,2)" fg:x="38509" fg:w="82"/><text x="88.9886%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="88.8891%" y="149" width="0.8752%" height="15" fill="rgb(220,13,41)" fg:x="38593" fg:w="380"/><text x="89.1821%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="89.7644%" y="149" width="0.8752%" height="15" fill="rgb(249,221,25)" fg:x="38973" fg:w="380"/><text x="90.0573%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,343 instructions, 12.31%)</title><rect x="80.1092%" y="165" width="12.3062%" height="15" fill="rgb(215,208,19)" fg:x="34781" fg:w="5343"/><text x="80.4021%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="92.4154%" y="165" width="0.7716%" height="15" fill="rgb(236,175,2)" fg:x="40124" fg:w="335"/><text x="92.7084%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="93.1870%" y="133" width="0.0276%" height="15" fill="rgb(241,52,2)" fg:x="40459" fg:w="12"/><text x="93.4800%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.2146%" y="117" width="0.1866%" height="15" fill="rgb(248,140,14)" fg:x="40471" fg:w="81"/><text x="93.5076%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="93.4634%" y="117" width="0.1290%" height="15" fill="rgb(253,22,42)" fg:x="40579" fg:w="56"/><text x="93.7564%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (191 instructions, 0.44%)</title><rect x="93.2146%" y="133" width="0.4399%" height="15" fill="rgb(234,61,47)" fg:x="40471" fg:w="191"/><text x="93.5076%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (242 instructions, 0.56%)</title><rect x="93.1870%" y="149" width="0.5574%" height="15" fill="rgb(208,226,15)" fg:x="40459" fg:w="242"/><text x="93.4800%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (276 instructions, 0.64%)</title><rect x="93.1870%" y="165" width="0.6357%" height="15" fill="rgb(217,221,4)" fg:x="40459" fg:w="276"/><text x="93.4800%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8227%" y="165" width="0.2833%" height="15" fill="rgb(212,174,34)" fg:x="40735" fg:w="123"/><text x="94.1157%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (125 instructions, 0.29%)</title><rect x="94.1060%" y="165" width="0.2879%" height="15" fill="rgb(253,83,4)" fg:x="40858" fg:w="125"/><text x="94.3990%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="94.3939%" y="165" width="0.0438%" height="15" fill="rgb(250,195,49)" fg:x="40983" fg:w="19"/><text x="94.6869%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="94.4377%" y="165" width="0.0276%" height="15" fill="rgb(241,192,25)" fg:x="41002" fg:w="12"/><text x="94.7306%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (49 instructions, 0.11%)</title><rect x="94.4653%" y="165" width="0.1129%" height="15" fill="rgb(208,124,10)" fg:x="41014" fg:w="49"/><text x="94.7583%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.5782%" y="165" width="0.0299%" height="15" fill="rgb(222,33,0)" fg:x="41063" fg:w="13"/><text x="94.8711%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,099 instructions, 16.35%)</title><rect x="80.0654%" y="181" width="16.3507%" height="15" fill="rgb(234,209,28)" fg:x="34762" fg:w="7099"/><text x="80.3584%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.4162%" y="181" width="0.0276%" height="15" fill="rgb(224,11,23)" fg:x="41861" fg:w="12"/><text x="96.7091%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,193 instructions, 16.57%)</title><rect x="80.0654%" y="197" width="16.5672%" height="15" fill="rgb(232,99,1)" fg:x="34762" fg:w="7193"/><text x="80.3584%" y="207.50">ic_cdk::futures::wake..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.6327%" y="165" width="0.0115%" height="15" fill="rgb(237,95,45)" fg:x="41955" fg:w="5"/><text x="96.9256%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.6442%" y="165" width="0.1866%" height="15" fill="rgb(208,109,11)" fg:x="41960" fg:w="81"/><text x="96.9371%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.8307%" y="165" width="0.1797%" height="15" fill="rgb(216,190,48)" fg:x="42041" fg:w="78"/><text x="97.1237%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (203 instructions, 0.47%)</title><rect x="96.6327%" y="181" width="0.4676%" height="15" fill="rgb(251,171,36)" fg:x="41955" fg:w="203"/><text x="96.9256%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.1002%" y="165" width="0.1866%" height="15" fill="rgb(230,62,22)" fg:x="42158" fg:w="81"/><text x="97.3932%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 instructions, 0.26%)</title><rect x="97.1002%" y="181" width="0.2626%" height="15" fill="rgb(225,114,35)" fg:x="42158" fg:w="114"/><text x="97.3932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.5033%" y="181" width="0.2833%" height="15" fill="rgb(215,118,42)" fg:x="42333" fg:w="123"/><text x="97.7963%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="97.7866%" y="181" width="0.3869%" height="15" fill="rgb(243,119,21)" fg:x="42456" fg:w="168"/><text x="98.0796%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (715 instructions, 1.65%)</title><rect x="96.6327%" y="197" width="1.6468%" height="15" fill="rgb(252,177,53)" fg:x="41955" fg:w="715"/><text x="96.9256%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,037 instructions, 18.51%)</title><rect x="80.0654%" y="213" width="18.5112%" height="15" fill="rgb(237,209,29)" fg:x="34762" fg:w="8037"/><text x="80.3584%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.8668%" y="181" width="0.1451%" height="15" fill="rgb(212,65,23)" fg:x="42925" fg:w="63"/><text x="99.1598%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (334 instructions, 0.77%)</title><rect x="98.5766%" y="197" width="0.7693%" height="15" fill="rgb(230,222,46)" fg:x="42799" fg:w="334"/><text x="98.8696%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (382 instructions, 0.88%)</title><rect x="98.5766%" y="213" width="0.8798%" height="15" fill="rgb(215,135,32)" fg:x="42799" fg:w="382"/><text x="98.8696%" y="223.50"></text></g><g><title>all (43,417 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(246,101,22)" fg:x="0" fg:w="43417"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,731 instructions, 20.11%)</title><rect x="79.8904%" y="229" width="20.1096%" height="15" fill="rgb(206,107,13)" fg:x="34686" fg:w="8731"/><text x="80.1833%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>