<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="68173"><g><title>ic_cdk::setup (58 instructions, 0.09%)</title><rect x="0.0000%" y="213" width="0.0851%" height="15" fill="rgb(217,162,53)" fg:x="0" fg:w="58"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.01%)</title><rect x="0.0851%" y="213" width="1.0107%" height="15" fill="rgb(229,93,14)" fg:x="58" fg:w="689"/><text x="0.3780%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.0957%" y="213" width="0.1335%" height="15" fill="rgb(209,67,49)" fg:x="747" fg:w="91"/><text x="1.3887%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.2292%" y="197" width="0.1335%" height="15" fill="rgb(213,87,29)" fg:x="838" fg:w="91"/><text x="1.5222%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.08%)</title><rect x="1.3627%" y="165" width="0.0836%" height="15" fill="rgb(205,151,52)" fg:x="929" fg:w="57"/><text x="1.6557%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.23%)</title><rect x="1.3627%" y="181" width="0.2274%" height="15" fill="rgb(253,215,39)" fg:x="929" fg:w="155"/><text x="1.6557%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="1.5901%" y="181" width="0.6498%" height="15" fill="rgb(221,220,41)" fg:x="1084" fg:w="443"/><text x="1.8830%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="2.2399%" y="181" width="0.1394%" height="15" fill="rgb(218,133,21)" fg:x="1527" fg:w="95"/><text x="2.5329%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.3792%" y="181" width="0.0880%" height="15" fill="rgb(221,193,43)" fg:x="1622" fg:w="60"/><text x="2.6722%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.4673%" y="181" width="0.0880%" height="15" fill="rgb(240,128,52)" fg:x="1682" fg:w="60"/><text x="2.7602%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5553%" y="181" width="0.0880%" height="15" fill="rgb(253,114,12)" fg:x="1742" fg:w="60"/><text x="2.8482%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.6433%" y="181" width="0.0880%" height="15" fill="rgb(215,223,47)" fg:x="1802" fg:w="60"/><text x="2.9362%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="2.7313%" y="181" width="0.1203%" height="15" fill="rgb(248,225,23)" fg:x="1862" fg:w="82"/><text x="3.0243%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="2.8516%" y="181" width="0.1027%" height="15" fill="rgb(250,108,0)" fg:x="1944" fg:w="70"/><text x="3.1445%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="2.9542%" y="181" width="0.6498%" height="15" fill="rgb(228,208,7)" fg:x="2014" fg:w="443"/><text x="3.2472%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.6041%" y="181" width="0.0279%" height="15" fill="rgb(244,45,10)" fg:x="2457" fg:w="19"/><text x="3.8970%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="3.6319%" y="165" width="0.1335%" height="15" fill="rgb(207,125,25)" fg:x="2476" fg:w="91"/><text x="3.9249%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="3.7654%" y="133" width="0.0983%" height="15" fill="rgb(210,195,18)" fg:x="2567" fg:w="67"/><text x="4.0584%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="3.7654%" y="149" width="0.1408%" height="15" fill="rgb(249,80,12)" fg:x="2567" fg:w="96"/><text x="4.0584%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.9062%" y="101" width="0.0161%" height="15" fill="rgb(221,65,9)" fg:x="2663" fg:w="11"/><text x="4.1992%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="3.9224%" y="85" width="0.0513%" height="15" fill="rgb(235,49,36)" fg:x="2674" fg:w="35"/><text x="4.2153%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="3.9224%" y="101" width="0.0939%" height="15" fill="rgb(225,32,20)" fg:x="2674" fg:w="64"/><text x="4.2153%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="3.9062%" y="117" width="0.2112%" height="15" fill="rgb(215,141,46)" fg:x="2663" fg:w="144"/><text x="4.1992%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="3.9062%" y="133" width="0.3066%" height="15" fill="rgb(250,160,47)" fg:x="2663" fg:w="209"/><text x="4.1992%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="3.9062%" y="149" width="0.3212%" height="15" fill="rgb(216,222,40)" fg:x="2663" fg:w="219"/><text x="4.1992%" y="159.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="3.7654%" y="165" width="0.6645%" height="15" fill="rgb(234,217,39)" fg:x="2567" fg:w="453"/><text x="4.0584%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.00%)</title><rect x="3.6319%" y="181" width="1.0004%" height="15" fill="rgb(207,178,40)" fg:x="2476" fg:w="682"/><text x="3.9249%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="4.6323%" y="181" width="0.1394%" height="15" fill="rgb(221,136,13)" fg:x="3158" fg:w="95"/><text x="4.9253%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="4.7717%" y="181" width="0.0924%" height="15" fill="rgb(249,199,10)" fg:x="3253" fg:w="63"/><text x="5.0647%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="4.8641%" y="181" width="0.1115%" height="15" fill="rgb(249,222,13)" fg:x="3316" fg:w="76"/><text x="5.1571%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="4.9756%" y="181" width="0.1027%" height="15" fill="rgb(244,185,38)" fg:x="3392" fg:w="70"/><text x="5.2685%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="5.0783%" y="165" width="0.6498%" height="15" fill="rgb(236,202,9)" fg:x="3462" fg:w="443"/><text x="5.3712%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.7281%" y="165" width="0.0279%" height="15" fill="rgb(250,229,37)" fg:x="3905" fg:w="19"/><text x="6.0210%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="5.7559%" y="149" width="0.1335%" height="15" fill="rgb(206,174,23)" fg:x="3924" fg:w="91"/><text x="6.0489%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.8894%" y="117" width="0.0983%" height="15" fill="rgb(211,33,43)" fg:x="4015" fg:w="67"/><text x="6.1824%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="5.8894%" y="133" width="0.1408%" height="15" fill="rgb(245,58,50)" fg:x="4015" fg:w="96"/><text x="6.1824%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.0302%" y="85" width="0.0161%" height="15" fill="rgb(244,68,36)" fg:x="4111" fg:w="11"/><text x="6.3232%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="6.0464%" y="69" width="0.0513%" height="15" fill="rgb(232,229,15)" fg:x="4122" fg:w="35"/><text x="6.3394%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="6.0464%" y="85" width="0.0939%" height="15" fill="rgb(254,30,23)" fg:x="4122" fg:w="64"/><text x="6.3394%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="6.0302%" y="101" width="0.2112%" height="15" fill="rgb(235,160,14)" fg:x="4111" fg:w="144"/><text x="6.3232%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="6.0302%" y="117" width="0.3066%" height="15" fill="rgb(212,155,44)" fg:x="4111" fg:w="209"/><text x="6.3232%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="6.0302%" y="133" width="0.3212%" height="15" fill="rgb(226,2,50)" fg:x="4111" fg:w="219"/><text x="6.3232%" y="143.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="5.8894%" y="149" width="0.6645%" height="15" fill="rgb(234,177,6)" fg:x="4015" fg:w="453"/><text x="6.1824%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.00%)</title><rect x="5.7559%" y="165" width="1.0004%" height="15" fill="rgb(217,24,9)" fg:x="3924" fg:w="682"/><text x="6.0489%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="6.7563%" y="165" width="0.1394%" height="15" fill="rgb(220,13,46)" fg:x="4606" fg:w="95"/><text x="7.0493%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="6.8957%" y="165" width="0.0924%" height="15" fill="rgb(239,221,27)" fg:x="4701" fg:w="63"/><text x="7.1887%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="6.9881%" y="149" width="0.1203%" height="15" fill="rgb(222,198,25)" fg:x="4764" fg:w="82"/><text x="7.2811%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.1084%" y="149" width="0.1394%" height="15" fill="rgb(211,99,13)" fg:x="4846" fg:w="95"/><text x="7.4014%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.2477%" y="149" width="0.1115%" height="15" fill="rgb(232,111,31)" fg:x="4941" fg:w="76"/><text x="7.5407%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="6.9881%" y="165" width="0.4841%" height="15" fill="rgb(245,82,37)" fg:x="4764" fg:w="330"/><text x="7.2811%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="7.4722%" y="165" width="0.1335%" height="15" fill="rgb(227,149,46)" fg:x="5094" fg:w="91"/><text x="7.7651%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,966 instructions, 2.88%)</title><rect x="5.0783%" y="181" width="2.8838%" height="15" fill="rgb(218,36,50)" fg:x="3462" fg:w="1966"/><text x="5.3712%" y="191.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.9621%" y="181" width="0.1115%" height="15" fill="rgb(226,80,48)" fg:x="5428" fg:w="76"/><text x="8.2551%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.0736%" y="181" width="0.0220%" height="15" fill="rgb(238,224,15)" fg:x="5504" fg:w="15"/><text x="8.3665%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.0956%" y="181" width="0.0220%" height="15" fill="rgb(241,136,10)" fg:x="5519" fg:w="15"/><text x="8.3885%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="8.1176%" y="181" width="0.0132%" height="15" fill="rgb(208,32,45)" fg:x="5534" fg:w="9"/><text x="8.4106%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.02%)</title><rect x="8.1308%" y="181" width="0.0235%" height="15" fill="rgb(207,135,9)" fg:x="5543" fg:w="16"/><text x="8.4238%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.1543%" y="165" width="0.1335%" height="15" fill="rgb(206,86,44)" fg:x="5559" fg:w="91"/><text x="8.4472%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="8.1543%" y="181" width="0.2743%" height="15" fill="rgb(245,177,15)" fg:x="5559" fg:w="187"/><text x="8.4472%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.4286%" y="149" width="0.1335%" height="15" fill="rgb(206,64,50)" fg:x="5746" fg:w="91"/><text x="8.7215%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="8.4286%" y="165" width="0.1966%" height="15" fill="rgb(234,36,40)" fg:x="5746" fg:w="134"/><text x="8.7215%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.32%)</title><rect x="8.4286%" y="181" width="0.3212%" height="15" fill="rgb(213,64,8)" fg:x="5746" fg:w="219"/><text x="8.7215%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.7498%" y="181" width="0.1335%" height="15" fill="rgb(210,75,36)" fg:x="5965" fg:w="91"/><text x="9.0428%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="8.8833%" y="181" width="0.1306%" height="15" fill="rgb(229,88,21)" fg:x="6056" fg:w="89"/><text x="9.1763%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.0138%" y="181" width="0.1335%" height="15" fill="rgb(252,204,47)" fg:x="6145" fg:w="91"/><text x="9.3068%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.1473%" y="181" width="0.1335%" height="15" fill="rgb(208,77,27)" fg:x="6236" fg:w="91"/><text x="9.4403%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="9.2867%" y="181" width="0.1306%" height="15" fill="rgb(221,76,26)" fg:x="6331" fg:w="89"/><text x="9.5796%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="9.4172%" y="181" width="0.6278%" height="15" fill="rgb(225,139,18)" fg:x="6420" fg:w="428"/><text x="9.7102%" y="191.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="10.0450%" y="181" width="0.6278%" height="15" fill="rgb(230,137,11)" fg:x="6848" fg:w="428"/><text x="10.3380%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,535 instructions, 11.05%)</title><rect x="1.3627%" y="197" width="11.0528%" height="15" fill="rgb(212,28,1)" fg:x="929" fg:w="7535"/><text x="1.6557%" y="207.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="12.4155%" y="197" width="0.5574%" height="15" fill="rgb(248,164,17)" fg:x="8464" fg:w="380"/><text x="12.7084%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (69 instructions, 0.10%)</title><rect x="12.9729%" y="181" width="0.1012%" height="15" fill="rgb(222,171,42)" fg:x="8844" fg:w="69"/><text x="13.2658%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (101 instructions, 0.15%)</title><rect x="12.9729%" y="197" width="0.1482%" height="15" fill="rgb(243,84,45)" fg:x="8844" fg:w="101"/><text x="13.2658%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="13.1210%" y="197" width="0.1335%" height="15" fill="rgb(252,49,23)" fg:x="8945" fg:w="91"/><text x="13.4140%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="13.2545%" y="181" width="0.0103%" height="15" fill="rgb(215,19,7)" fg:x="9036" fg:w="7"/><text x="13.5475%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="13.2648%" y="165" width="0.0865%" height="15" fill="rgb(238,81,41)" fg:x="9043" fg:w="59"/><text x="13.5578%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="13.3513%" y="165" width="0.1379%" height="15" fill="rgb(210,199,37)" fg:x="9102" fg:w="94"/><text x="13.6443%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="13.4892%" y="165" width="0.2538%" height="15" fill="rgb(244,192,49)" fg:x="9196" fg:w="173"/><text x="13.7822%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="13.2648%" y="181" width="0.8493%" height="15" fill="rgb(226,211,11)" fg:x="9043" fg:w="579"/><text x="13.5578%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="14.1141%" y="181" width="0.1335%" height="15" fill="rgb(236,162,54)" fg:x="9622" fg:w="91"/><text x="14.4071%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="14.2476%" y="181" width="0.2230%" height="15" fill="rgb(220,229,9)" fg:x="9713" fg:w="152"/><text x="14.5405%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,195 instructions, 1.75%)</title><rect x="13.2545%" y="197" width="1.7529%" height="15" fill="rgb(250,87,22)" fg:x="9036" fg:w="1195"/><text x="13.5475%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.0074%" y="197" width="0.1335%" height="15" fill="rgb(239,43,17)" fg:x="10231" fg:w="91"/><text x="15.3004%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="15.1409%" y="181" width="0.0103%" height="15" fill="rgb(231,177,25)" fg:x="10322" fg:w="7"/><text x="15.4339%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="15.1512%" y="165" width="0.0865%" height="15" fill="rgb(219,179,1)" fg:x="10329" fg:w="59"/><text x="15.4441%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="15.2377%" y="165" width="0.1379%" height="15" fill="rgb(238,219,53)" fg:x="10388" fg:w="94"/><text x="15.5307%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="15.3756%" y="165" width="0.2538%" height="15" fill="rgb(232,167,36)" fg:x="10482" fg:w="173"/><text x="15.6686%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="15.1512%" y="181" width="0.8493%" height="15" fill="rgb(244,19,51)" fg:x="10329" fg:w="579"/><text x="15.4441%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="16.0005%" y="181" width="0.1129%" height="15" fill="rgb(224,6,22)" fg:x="10908" fg:w="77"/><text x="16.2934%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="16.1134%" y="165" width="0.1306%" height="15" fill="rgb(224,145,5)" fg:x="10985" fg:w="89"/><text x="16.4064%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.18%)</title><rect x="16.1134%" y="181" width="0.1819%" height="15" fill="rgb(234,130,49)" fg:x="10985" fg:w="124"/><text x="16.4064%" y="191.50"></text></g><g><title>candid::types::internal::env_add (965 instructions, 1.42%)</title><rect x="15.1409%" y="197" width="1.4155%" height="15" fill="rgb(254,6,2)" fg:x="10322" fg:w="965"/><text x="15.4339%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="16.5564%" y="149" width="0.0865%" height="15" fill="rgb(208,96,46)" fg:x="11287" fg:w="59"/><text x="16.8494%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.14%)</title><rect x="16.5564%" y="165" width="0.1364%" height="15" fill="rgb(239,3,39)" fg:x="11287" fg:w="93"/><text x="16.8494%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.46%)</title><rect x="16.5564%" y="181" width="0.4635%" height="15" fill="rgb(233,210,1)" fg:x="11287" fg:w="316"/><text x="16.8494%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="17.0199%" y="181" width="0.1335%" height="15" fill="rgb(244,137,37)" fg:x="11603" fg:w="91"/><text x="17.3129%" y="191.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="17.1534%" y="181" width="0.2230%" height="15" fill="rgb(240,136,2)" fg:x="11694" fg:w="152"/><text x="17.4464%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,001 instructions, 1.47%)</title><rect x="16.5564%" y="197" width="1.4683%" height="15" fill="rgb(239,18,37)" fg:x="11287" fg:w="1001"/><text x="16.8494%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="18.0247%" y="197" width="0.0777%" height="15" fill="rgb(218,185,22)" fg:x="12288" fg:w="53"/><text x="18.3177%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.1025%" y="165" width="0.0396%" height="15" fill="rgb(225,218,4)" fg:x="12341" fg:w="27"/><text x="18.3954%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.21%)</title><rect x="18.1025%" y="181" width="0.2083%" height="15" fill="rgb(230,182,32)" fg:x="12341" fg:w="142"/><text x="18.3954%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="18.3621%" y="165" width="0.0396%" height="15" fill="rgb(242,56,43)" fg:x="12518" fg:w="27"/><text x="18.6551%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.21%)</title><rect x="18.3621%" y="181" width="0.2083%" height="15" fill="rgb(233,99,24)" fg:x="12518" fg:w="142"/><text x="18.6551%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (354 instructions, 0.52%)</title><rect x="18.1025%" y="197" width="0.5193%" height="15" fill="rgb(234,209,42)" fg:x="12341" fg:w="354"/><text x="18.3954%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="18.6217%" y="181" width="0.0499%" height="15" fill="rgb(227,7,12)" fg:x="12695" fg:w="34"/><text x="18.9147%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="18.6217%" y="197" width="0.1775%" height="15" fill="rgb(245,203,43)" fg:x="12695" fg:w="121"/><text x="18.9147%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.7992%" y="197" width="0.0191%" height="15" fill="rgb(238,205,33)" fg:x="12816" fg:w="13"/><text x="19.0922%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8183%" y="197" width="0.0191%" height="15" fill="rgb(231,56,7)" fg:x="12829" fg:w="13"/><text x="19.1113%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="18.8374%" y="197" width="0.0191%" height="15" fill="rgb(244,186,29)" fg:x="12842" fg:w="13"/><text x="19.1303%" y="207.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="18.8564%" y="197" width="0.6454%" height="15" fill="rgb(234,111,31)" fg:x="12855" fg:w="440"/><text x="19.1494%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="19.5019%" y="165" width="0.0103%" height="15" fill="rgb(241,149,10)" fg:x="13295" fg:w="7"/><text x="19.7948%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.5121%" y="149" width="0.0396%" height="15" fill="rgb(249,206,44)" fg:x="13302" fg:w="27"/><text x="19.8051%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.5517%" y="149" width="0.0396%" height="15" fill="rgb(251,153,30)" fg:x="13329" fg:w="27"/><text x="19.8447%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.29%)</title><rect x="19.5121%" y="165" width="0.2890%" height="15" fill="rgb(239,152,38)" fg:x="13302" fg:w="197"/><text x="19.8051%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.8011%" y="133" width="0.0396%" height="15" fill="rgb(249,139,47)" fg:x="13499" fg:w="27"/><text x="20.0941%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="19.8407%" y="133" width="0.0396%" height="15" fill="rgb(244,64,35)" fg:x="13526" fg:w="27"/><text x="20.1337%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="19.8803%" y="133" width="0.0997%" height="15" fill="rgb(216,46,15)" fg:x="13553" fg:w="68"/><text x="20.1733%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.36%)</title><rect x="19.8011%" y="149" width="0.3579%" height="15" fill="rgb(250,74,19)" fg:x="13499" fg:w="244"/><text x="20.0941%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (279 instructions, 0.41%)</title><rect x="19.8011%" y="165" width="0.4093%" height="15" fill="rgb(249,42,33)" fg:x="13499" fg:w="279"/><text x="20.0941%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="20.2103%" y="165" width="0.0191%" height="15" fill="rgb(242,149,17)" fg:x="13778" fg:w="13"/><text x="20.5033%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (558 instructions, 0.82%)</title><rect x="19.5019%" y="181" width="0.8185%" height="15" fill="rgb(244,29,21)" fg:x="13295" fg:w="558"/><text x="19.7948%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (607 instructions, 0.89%)</title><rect x="19.5019%" y="197" width="0.8904%" height="15" fill="rgb(220,130,37)" fg:x="13295" fg:w="607"/><text x="19.7948%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.10%)</title><rect x="20.3922%" y="181" width="0.1012%" height="15" fill="rgb(211,67,2)" fg:x="13902" fg:w="69"/><text x="20.6852%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="20.4935%" y="181" width="0.0997%" height="15" fill="rgb(235,68,52)" fg:x="13971" fg:w="68"/><text x="20.7864%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.34%)</title><rect x="20.3922%" y="197" width="0.3388%" height="15" fill="rgb(246,142,3)" fg:x="13902" fg:w="231"/><text x="20.6852%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.25%)</title><rect x="20.7311%" y="181" width="0.2538%" height="15" fill="rgb(241,25,7)" fg:x="14133" fg:w="173"/><text x="21.0240%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (234 instructions, 0.34%)</title><rect x="20.7311%" y="197" width="0.3432%" height="15" fill="rgb(242,119,39)" fg:x="14133" fg:w="234"/><text x="21.0240%" y="207.50"></text></g><g><title>__rust_realloc (111 instructions, 0.16%)</title><rect x="21.0743%" y="165" width="0.1628%" height="15" fill="rgb(241,98,45)" fg:x="14367" fg:w="111"/><text x="21.3673%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.23%)</title><rect x="21.0743%" y="181" width="0.2288%" height="15" fill="rgb(254,28,30)" fg:x="14367" fg:w="156"/><text x="21.3673%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="21.4381%" y="165" width="0.1217%" height="15" fill="rgb(241,142,54)" fg:x="14615" fg:w="83"/><text x="21.7311%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="21.4381%" y="181" width="0.1848%" height="15" fill="rgb(222,85,15)" fg:x="14615" fg:w="126"/><text x="21.7311%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (459 instructions, 0.67%)</title><rect x="21.0743%" y="197" width="0.6733%" height="15" fill="rgb(210,85,47)" fg:x="14367" fg:w="459"/><text x="21.3673%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (578 instructions, 0.85%)</title><rect x="21.7476%" y="197" width="0.8478%" height="15" fill="rgb(224,206,25)" fg:x="14826" fg:w="578"/><text x="22.0406%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="22.5955%" y="165" width="0.0103%" height="15" fill="rgb(243,201,19)" fg:x="15404" fg:w="7"/><text x="22.8884%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="22.6057%" y="165" width="0.0191%" height="15" fill="rgb(236,59,4)" fg:x="15411" fg:w="13"/><text x="22.8987%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="22.6248%" y="165" width="0.2230%" height="15" fill="rgb(254,179,45)" fg:x="15424" fg:w="152"/><text x="22.9178%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (343 instructions, 0.50%)</title><rect x="22.5955%" y="181" width="0.5031%" height="15" fill="rgb(226,14,10)" fg:x="15404" fg:w="343"/><text x="22.8884%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="23.0986%" y="181" width="0.7598%" height="15" fill="rgb(244,27,41)" fg:x="15747" fg:w="518"/><text x="23.3916%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="23.8584%" y="133" width="0.1217%" height="15" fill="rgb(235,35,32)" fg:x="16265" fg:w="83"/><text x="24.1514%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="23.8584%" y="149" width="0.1848%" height="15" fill="rgb(218,68,31)" fg:x="16265" fg:w="126"/><text x="24.1514%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.31%)</title><rect x="23.8584%" y="165" width="0.3051%" height="15" fill="rgb(207,120,37)" fg:x="16265" fg:w="208"/><text x="24.1514%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1635%" y="165" width="0.0220%" height="15" fill="rgb(227,98,0)" fg:x="16473" fg:w="15"/><text x="24.4565%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="24.1855%" y="165" width="0.0220%" height="15" fill="rgb(207,7,3)" fg:x="16488" fg:w="15"/><text x="24.4785%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.62%)</title><rect x="23.8584%" y="181" width="0.6249%" height="15" fill="rgb(206,98,19)" fg:x="16265" fg:w="426"/><text x="24.1514%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="24.4833%" y="181" width="0.7569%" height="15" fill="rgb(217,5,26)" fg:x="16691" fg:w="516"/><text x="24.7763%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="25.2402%" y="181" width="0.0103%" height="15" fill="rgb(235,190,38)" fg:x="17207" fg:w="7"/><text x="25.5332%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="25.2505%" y="181" width="0.0103%" height="15" fill="rgb(247,86,24)" fg:x="17214" fg:w="7"/><text x="25.5434%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="25.2607%" y="181" width="0.0880%" height="15" fill="rgb(205,101,16)" fg:x="17221" fg:w="60"/><text x="25.5537%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,556 instructions, 3.75%)</title><rect x="22.5955%" y="197" width="3.7493%" height="15" fill="rgb(246,168,33)" fg:x="15404" fg:w="2556"/><text x="22.8884%" y="207.50">ic_..</text></g><g><title>timer::__canister_method_setTimer::{{closure}} (19,338 instructions, 28.37%)</title><rect x="1.2292%" y="213" width="28.3661%" height="15" fill="rgb(231,114,1)" fg:x="838" fg:w="19338"/><text x="1.5222%" y="223.50">timer::__canister_method_setTimer::{{cl..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="29.5953%" y="213" width="0.0205%" height="15" fill="rgb(207,184,53)" fg:x="20176" fg:w="14"/><text x="29.8883%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="29.7478%" y="197" width="0.0396%" height="15" fill="rgb(224,95,51)" fg:x="20280" fg:w="27"/><text x="30.0408%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.34%)</title><rect x="29.6173%" y="213" width="0.3418%" height="15" fill="rgb(212,188,45)" fg:x="20191" fg:w="233"/><text x="29.9103%" y="223.50"></text></g><g><title>canister_update setTimer (20,568 instructions, 30.17%)</title><rect x="0.0000%" y="229" width="30.1703%" height="15" fill="rgb(223,154,38)" fg:x="0" fg:w="20568"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="30.1703%" y="213" width="0.0352%" height="15" fill="rgb(251,22,52)" fg:x="20568" fg:w="24"/><text x="30.4633%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.2055%" y="213" width="0.1217%" height="15" fill="rgb(229,209,22)" fg:x="20592" fg:w="83"/><text x="30.4985%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.3273%" y="213" width="0.1217%" height="15" fill="rgb(234,138,34)" fg:x="20675" fg:w="83"/><text x="30.6202%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.4490%" y="197" width="0.1335%" height="15" fill="rgb(212,95,11)" fg:x="20758" fg:w="91"/><text x="30.7420%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.5825%" y="197" width="0.1217%" height="15" fill="rgb(240,179,47)" fg:x="20849" fg:w="83"/><text x="30.8755%" y="207.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="30.7042%" y="197" width="0.0103%" height="15" fill="rgb(240,163,11)" fg:x="20932" fg:w="7"/><text x="30.9972%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="30.7145%" y="197" width="0.1335%" height="15" fill="rgb(236,37,12)" fg:x="20939" fg:w="91"/><text x="31.0075%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="30.8480%" y="197" width="0.0308%" height="15" fill="rgb(232,164,16)" fg:x="21030" fg:w="21"/><text x="31.1410%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.8788%" y="181" width="0.1217%" height="15" fill="rgb(244,205,15)" fg:x="21051" fg:w="83"/><text x="31.1718%" y="191.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="31.0005%" y="181" width="0.1907%" height="15" fill="rgb(223,117,47)" fg:x="21134" fg:w="130"/><text x="31.2935%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="31.1912%" y="181" width="0.2626%" height="15" fill="rgb(244,107,35)" fg:x="21264" fg:w="179"/><text x="31.4842%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="31.4538%" y="181" width="0.0880%" height="15" fill="rgb(205,140,8)" fg:x="21443" fg:w="60"/><text x="31.7468%" y="191.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.34%)</title><rect x="30.8788%" y="197" width="2.3352%" height="15" fill="rgb(228,84,46)" fg:x="21051" fg:w="1592"/><text x="31.1718%" y="207.50">i..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.2140%" y="181" width="0.0103%" height="15" fill="rgb(254,188,9)" fg:x="22643" fg:w="7"/><text x="33.5070%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (91 instructions, 0.13%)</title><rect x="33.2140%" y="197" width="0.1335%" height="15" fill="rgb(206,112,54)" fg:x="22643" fg:w="91"/><text x="33.5070%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.3475%" y="165" width="0.0103%" height="15" fill="rgb(216,84,49)" fg:x="22734" fg:w="7"/><text x="33.6405%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.06%)</title><rect x="33.3475%" y="181" width="0.0572%" height="15" fill="rgb(214,194,35)" fg:x="22734" fg:w="39"/><text x="33.6405%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="33.4047%" y="181" width="0.1335%" height="15" fill="rgb(249,28,3)" fg:x="22773" fg:w="91"/><text x="33.6977%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="33.5382%" y="165" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="22864" fg:w="7"/><text x="33.8312%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.5485%" y="149" width="0.0865%" height="15" fill="rgb(245,217,50)" fg:x="22871" fg:w="59"/><text x="33.8414%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="33.6350%" y="149" width="0.1379%" height="15" fill="rgb(213,201,24)" fg:x="22930" fg:w="94"/><text x="33.9280%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="33.7729%" y="149" width="0.2538%" height="15" fill="rgb(248,116,28)" fg:x="23024" fg:w="173"/><text x="34.0659%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="33.5485%" y="165" width="0.8493%" height="15" fill="rgb(219,72,43)" fg:x="22871" fg:w="579"/><text x="33.8414%" y="175.50"></text></g><g><title>candid::types::internal::env_add (798 instructions, 1.17%)</title><rect x="33.5382%" y="181" width="1.1706%" height="15" fill="rgb(209,138,14)" fg:x="22864" fg:w="798"/><text x="33.8312%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="34.7088%" y="181" width="0.1335%" height="15" fill="rgb(222,18,33)" fg:x="23662" fg:w="91"/><text x="35.0017%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="34.8422%" y="165" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="23753" fg:w="7"/><text x="35.1352%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="34.8525%" y="149" width="0.0865%" height="15" fill="rgb(250,110,10)" fg:x="23760" fg:w="59"/><text x="35.1455%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="34.9391%" y="149" width="0.1379%" height="15" fill="rgb(248,123,6)" fg:x="23819" fg:w="94"/><text x="35.2320%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="35.0769%" y="149" width="0.2538%" height="15" fill="rgb(206,91,31)" fg:x="23913" fg:w="173"/><text x="35.3699%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="34.8525%" y="165" width="0.8493%" height="15" fill="rgb(211,154,13)" fg:x="23760" fg:w="579"/><text x="35.1455%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="35.7018%" y="165" width="0.1129%" height="15" fill="rgb(225,148,7)" fg:x="24339" fg:w="77"/><text x="35.9948%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="35.8148%" y="149" width="0.1306%" height="15" fill="rgb(220,160,43)" fg:x="24416" fg:w="89"/><text x="36.1077%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.18%)</title><rect x="35.8148%" y="165" width="0.1819%" height="15" fill="rgb(213,52,39)" fg:x="24416" fg:w="124"/><text x="36.1077%" y="175.50"></text></g><g><title>candid::types::internal::env_add (965 instructions, 1.42%)</title><rect x="34.8422%" y="181" width="1.4155%" height="15" fill="rgb(243,137,7)" fg:x="23753" fg:w="965"/><text x="35.1352%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="36.2578%" y="133" width="0.0865%" height="15" fill="rgb(230,79,13)" fg:x="24718" fg:w="59"/><text x="36.5507%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.14%)</title><rect x="36.2578%" y="149" width="0.1364%" height="15" fill="rgb(247,105,23)" fg:x="24718" fg:w="93"/><text x="36.5507%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.46%)</title><rect x="36.2578%" y="165" width="0.4635%" height="15" fill="rgb(223,179,41)" fg:x="24718" fg:w="316"/><text x="36.5507%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.324 (18 instructions, 0.03%)</title><rect x="36.7213%" y="165" width="0.0264%" height="15" fill="rgb(218,9,34)" fg:x="25034" fg:w="18"/><text x="37.0143%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.7477%" y="165" width="0.0191%" height="15" fill="rgb(222,106,8)" fg:x="25052" fg:w="13"/><text x="37.0407%" y="175.50"></text></g><g><title>candid::types::internal::env_id (529 instructions, 0.78%)</title><rect x="36.2578%" y="181" width="0.7760%" height="15" fill="rgb(211,220,0)" fg:x="24718" fg:w="529"/><text x="36.5507%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,642 instructions, 3.88%)</title><rect x="33.3475%" y="197" width="3.8754%" height="15" fill="rgb(229,52,16)" fg:x="22734" fg:w="2642"/><text x="33.6405%" y="207.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="37.2229%" y="165" width="0.1217%" height="15" fill="rgb(212,155,18)" fg:x="25376" fg:w="83"/><text x="37.5159%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="37.2229%" y="181" width="0.1848%" height="15" fill="rgb(242,21,14)" fg:x="25376" fg:w="126"/><text x="37.5159%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.31%)</title><rect x="37.2229%" y="197" width="0.3095%" height="15" fill="rgb(222,19,48)" fg:x="25376" fg:w="211"/><text x="37.5159%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.03%)</title><rect x="37.5325%" y="181" width="0.0337%" height="15" fill="rgb(232,45,27)" fg:x="25587" fg:w="23"/><text x="37.8254%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.5662%" y="181" width="0.0191%" height="15" fill="rgb(249,103,42)" fg:x="25610" fg:w="13"/><text x="37.8592%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (103 instructions, 0.15%)</title><rect x="37.5325%" y="197" width="0.1511%" height="15" fill="rgb(246,81,33)" fg:x="25587" fg:w="103"/><text x="37.8254%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.6835%" y="197" width="0.0191%" height="15" fill="rgb(252,33,42)" fg:x="25690" fg:w="13"/><text x="37.9765%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="37.7026%" y="165" width="0.1188%" height="15" fill="rgb(209,212,41)" fg:x="25703" fg:w="81"/><text x="37.9956%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.18%)</title><rect x="37.7026%" y="181" width="0.1819%" height="15" fill="rgb(207,154,6)" fg:x="25703" fg:w="124"/><text x="37.9956%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.17%)</title><rect x="38.0048%" y="165" width="0.1672%" height="15" fill="rgb(223,64,47)" fg:x="25909" fg:w="114"/><text x="38.2978%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.23%)</title><rect x="38.0048%" y="181" width="0.2303%" height="15" fill="rgb(211,161,38)" fg:x="25909" fg:w="157"/><text x="38.2978%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (445 instructions, 0.65%)</title><rect x="37.7026%" y="197" width="0.6528%" height="15" fill="rgb(219,138,40)" fg:x="25703" fg:w="445"/><text x="37.9956%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="38.3554%" y="149" width="0.1217%" height="15" fill="rgb(241,228,46)" fg:x="26148" fg:w="83"/><text x="38.6483%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="38.3554%" y="165" width="0.1848%" height="15" fill="rgb(223,209,38)" fg:x="26148" fg:w="126"/><text x="38.6483%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.31%)</title><rect x="38.3554%" y="181" width="0.3051%" height="15" fill="rgb(236,164,45)" fg:x="26148" fg:w="208"/><text x="38.6483%" y="191.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="38.6605%" y="181" width="0.0220%" height="15" fill="rgb(231,15,5)" fg:x="26356" fg:w="15"/><text x="38.9534%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="38.6825%" y="133" width="0.1188%" height="15" fill="rgb(252,35,15)" fg:x="26371" fg:w="81"/><text x="38.9754%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.18%)</title><rect x="38.6825%" y="149" width="0.1819%" height="15" fill="rgb(248,181,18)" fg:x="26371" fg:w="124"/><text x="38.9754%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.30%)</title><rect x="38.6825%" y="165" width="0.3022%" height="15" fill="rgb(233,39,42)" fg:x="26371" fg:w="206"/><text x="38.9754%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (277 instructions, 0.41%)</title><rect x="38.6825%" y="181" width="0.4063%" height="15" fill="rgb(238,110,33)" fg:x="26371" fg:w="277"/><text x="38.9754%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="39.0888%" y="181" width="0.0513%" height="15" fill="rgb(233,195,10)" fg:x="26648" fg:w="35"/><text x="39.3818%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="39.1401%" y="181" width="0.1306%" height="15" fill="rgb(254,105,3)" fg:x="26683" fg:w="89"/><text x="39.4331%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (866 instructions, 1.27%)</title><rect x="38.3554%" y="197" width="1.2703%" height="15" fill="rgb(221,225,9)" fg:x="26148" fg:w="866"/><text x="38.6483%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="39.6257%" y="197" width="0.0983%" height="15" fill="rgb(224,227,45)" fg:x="27014" fg:w="67"/><text x="39.9186%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="39.7239%" y="149" width="0.1217%" height="15" fill="rgb(229,198,43)" fg:x="27081" fg:w="83"/><text x="40.0169%" y="159.50"></text></g><g><title>memcpy (211 instructions, 0.31%)</title><rect x="39.8457%" y="149" width="0.3095%" height="15" fill="rgb(206,209,35)" fg:x="27164" fg:w="211"/><text x="40.1387%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="40.1552%" y="149" width="0.1306%" height="15" fill="rgb(245,195,53)" fg:x="27375" fg:w="89"/><text x="40.4482%" y="159.50"></text></g><g><title>__rust_realloc (490 instructions, 0.72%)</title><rect x="39.7239%" y="165" width="0.7188%" height="15" fill="rgb(240,92,26)" fg:x="27081" fg:w="490"/><text x="40.0169%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (535 instructions, 0.78%)</title><rect x="39.7239%" y="181" width="0.7848%" height="15" fill="rgb(207,40,23)" fg:x="27081" fg:w="535"/><text x="40.0169%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (622 instructions, 0.91%)</title><rect x="39.7239%" y="197" width="0.9124%" height="15" fill="rgb(223,111,35)" fg:x="27081" fg:w="622"/><text x="40.0169%" y="207.50"></text></g><g><title>memcpy (147 instructions, 0.22%)</title><rect x="40.6363%" y="197" width="0.2156%" height="15" fill="rgb(229,147,28)" fg:x="27703" fg:w="147"/><text x="40.9293%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="40.8520%" y="197" width="0.0103%" height="15" fill="rgb(211,29,28)" fg:x="27850" fg:w="7"/><text x="41.1449%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="40.8622%" y="197" width="0.0191%" height="15" fill="rgb(228,72,33)" fg:x="27857" fg:w="13"/><text x="41.1552%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="41.0118%" y="181" width="0.0396%" height="15" fill="rgb(205,214,31)" fg:x="27959" fg:w="27"/><text x="41.3048%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="41.2231%" y="181" width="0.0396%" height="15" fill="rgb(224,111,15)" fg:x="28103" fg:w="27"/><text x="41.5160%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (377 instructions, 0.55%)</title><rect x="40.8813%" y="197" width="0.5530%" height="15" fill="rgb(253,21,26)" fg:x="27870" fg:w="377"/><text x="41.1743%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="41.4343%" y="197" width="0.1217%" height="15" fill="rgb(245,139,43)" fg:x="28247" fg:w="83"/><text x="41.7273%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="41.5560%" y="197" width="0.1335%" height="15" fill="rgb(252,170,7)" fg:x="28330" fg:w="91"/><text x="41.8490%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (22 instructions, 0.03%)</title><rect x="41.6895%" y="197" width="0.0323%" height="15" fill="rgb(231,118,14)" fg:x="28421" fg:w="22"/><text x="41.9825%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (62 instructions, 0.09%)</title><rect x="41.7218%" y="181" width="0.0909%" height="15" fill="rgb(238,83,0)" fg:x="28443" fg:w="62"/><text x="42.0148%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (83 instructions, 0.12%)</title><rect x="41.7218%" y="197" width="0.1217%" height="15" fill="rgb(221,39,39)" fg:x="28443" fg:w="83"/><text x="42.0148%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (23 instructions, 0.03%)</title><rect x="41.8435%" y="197" width="0.0337%" height="15" fill="rgb(222,119,46)" fg:x="28526" fg:w="23"/><text x="42.1365%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (17,346 instructions, 25.44%)</title><rect x="30.4490%" y="213" width="25.4441%" height="15" fill="rgb(222,165,49)" fg:x="20758" fg:w="17346"/><text x="30.7420%" y="223.50">ic_cdk_timers::global_timer::{{clo..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="55.8931%" y="213" width="0.0205%" height="15" fill="rgb(219,113,52)" fg:x="38104" fg:w="14"/><text x="56.1861%" y="223.50"></text></g><g><title>canister_global_timer (17,670 instructions, 25.92%)</title><rect x="30.1703%" y="229" width="25.9194%" height="15" fill="rgb(214,7,15)" fg:x="20568" fg:w="17670"/><text x="30.4633%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.17%)</title><rect x="56.0897%" y="213" width="0.1672%" height="15" fill="rgb(235,32,4)" fg:x="38238" fg:w="114"/><text x="56.3826%" y="223.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="56.2569%" y="213" width="0.1907%" height="15" fill="rgb(238,90,54)" fg:x="38352" fg:w="130"/><text x="56.5498%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="56.4476%" y="213" width="0.2626%" height="15" fill="rgb(213,208,19)" fg:x="38482" fg:w="179"/><text x="56.7405%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="56.7101%" y="213" width="0.0880%" height="15" fill="rgb(233,156,4)" fg:x="38661" fg:w="60"/><text x="57.0031%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="56.7981%" y="197" width="0.1217%" height="15" fill="rgb(207,194,5)" fg:x="38721" fg:w="83"/><text x="57.0911%" y="207.50"></text></g><g><title>memset (130 instructions, 0.19%)</title><rect x="56.9199%" y="197" width="0.1907%" height="15" fill="rgb(206,111,30)" fg:x="38804" fg:w="130"/><text x="57.2129%" y="207.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="57.1106%" y="197" width="0.2626%" height="15" fill="rgb(243,70,54)" fg:x="38934" fg:w="179"/><text x="57.4036%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="57.3732%" y="197" width="0.0880%" height="15" fill="rgb(242,28,8)" fg:x="39113" fg:w="60"/><text x="57.6661%" y="207.50"></text></g><g><title>ic_cdk::api::id (1,592 instructions, 2.34%)</title><rect x="56.7981%" y="213" width="2.3352%" height="15" fill="rgb(219,106,18)" fg:x="38721" fg:w="1592"/><text x="57.0911%" y="223.50">i..</text></g><g><title>memcmp (675 instructions, 0.99%)</title><rect x="59.1334%" y="213" width="0.9901%" height="15" fill="rgb(244,222,10)" fg:x="40313" fg:w="675"/><text x="59.4264%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="60.1235%" y="213" width="0.1188%" height="15" fill="rgb(236,179,52)" fg:x="40988" fg:w="81"/><text x="60.4165%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="60.2423%" y="197" width="0.1203%" height="15" fill="rgb(213,23,39)" fg:x="41069" fg:w="82"/><text x="60.5353%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="60.3626%" y="197" width="0.6498%" height="15" fill="rgb(238,48,10)" fg:x="41151" fg:w="443"/><text x="60.6556%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="61.0124%" y="197" width="0.1394%" height="15" fill="rgb(251,196,23)" fg:x="41594" fg:w="95"/><text x="61.3054%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.1518%" y="197" width="0.0880%" height="15" fill="rgb(250,152,24)" fg:x="41689" fg:w="60"/><text x="61.4447%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.2398%" y="197" width="0.0880%" height="15" fill="rgb(209,150,17)" fg:x="41749" fg:w="60"/><text x="61.5328%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.3278%" y="197" width="0.0880%" height="15" fill="rgb(234,202,34)" fg:x="41809" fg:w="60"/><text x="61.6208%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="61.4158%" y="197" width="0.0880%" height="15" fill="rgb(253,148,53)" fg:x="41869" fg:w="60"/><text x="61.7088%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="61.5038%" y="197" width="0.1203%" height="15" fill="rgb(218,129,16)" fg:x="41929" fg:w="82"/><text x="61.7968%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="61.6241%" y="197" width="0.1027%" height="15" fill="rgb(216,85,19)" fg:x="42011" fg:w="70"/><text x="61.9171%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="61.7268%" y="197" width="0.6498%" height="15" fill="rgb(235,228,7)" fg:x="42081" fg:w="443"/><text x="62.0198%" y="207.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="62.3766%" y="197" width="0.0279%" height="15" fill="rgb(245,175,0)" fg:x="42524" fg:w="19"/><text x="62.6696%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="62.4045%" y="181" width="0.1335%" height="15" fill="rgb(208,168,36)" fg:x="42543" fg:w="91"/><text x="62.6974%" y="191.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="62.5380%" y="149" width="0.0983%" height="15" fill="rgb(246,171,24)" fg:x="42634" fg:w="67"/><text x="62.8309%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="62.5380%" y="165" width="0.1408%" height="15" fill="rgb(215,142,24)" fg:x="42634" fg:w="96"/><text x="62.8309%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="62.6788%" y="117" width="0.0161%" height="15" fill="rgb(250,187,7)" fg:x="42730" fg:w="11"/><text x="62.9717%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="62.6949%" y="101" width="0.0513%" height="15" fill="rgb(228,66,33)" fg:x="42741" fg:w="35"/><text x="62.9879%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="62.6949%" y="117" width="0.0939%" height="15" fill="rgb(234,215,21)" fg:x="42741" fg:w="64"/><text x="62.9879%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="62.6788%" y="133" width="0.2112%" height="15" fill="rgb(222,191,20)" fg:x="42730" fg:w="144"/><text x="62.9717%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="62.6788%" y="149" width="0.3066%" height="15" fill="rgb(245,79,54)" fg:x="42730" fg:w="209"/><text x="62.9717%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="62.6788%" y="165" width="0.3212%" height="15" fill="rgb(240,10,37)" fg:x="42730" fg:w="219"/><text x="62.9717%" y="175.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="62.5380%" y="181" width="0.6645%" height="15" fill="rgb(214,192,32)" fg:x="42634" fg:w="453"/><text x="62.8309%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.00%)</title><rect x="62.4045%" y="197" width="1.0004%" height="15" fill="rgb(209,36,54)" fg:x="42543" fg:w="682"/><text x="62.6974%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="63.4049%" y="197" width="0.1394%" height="15" fill="rgb(220,10,11)" fg:x="43225" fg:w="95"/><text x="63.6978%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="63.5442%" y="197" width="0.0924%" height="15" fill="rgb(221,106,17)" fg:x="43320" fg:w="63"/><text x="63.8372%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="63.6366%" y="197" width="0.1115%" height="15" fill="rgb(251,142,44)" fg:x="43383" fg:w="76"/><text x="63.9296%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="63.7481%" y="197" width="0.1027%" height="15" fill="rgb(238,13,15)" fg:x="43459" fg:w="70"/><text x="64.0411%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="63.8508%" y="181" width="0.6498%" height="15" fill="rgb(208,107,27)" fg:x="43529" fg:w="443"/><text x="64.1438%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="64.5006%" y="181" width="0.0279%" height="15" fill="rgb(205,136,37)" fg:x="43972" fg:w="19"/><text x="64.7936%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="64.5285%" y="165" width="0.1335%" height="15" fill="rgb(250,205,27)" fg:x="43991" fg:w="91"/><text x="64.8214%" y="175.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="64.6620%" y="133" width="0.0983%" height="15" fill="rgb(210,80,43)" fg:x="44082" fg:w="67"/><text x="64.9549%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="64.6620%" y="149" width="0.1408%" height="15" fill="rgb(247,160,36)" fg:x="44082" fg:w="96"/><text x="64.9549%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="64.8028%" y="101" width="0.0161%" height="15" fill="rgb(234,13,49)" fg:x="44178" fg:w="11"/><text x="65.0957%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="64.8189%" y="85" width="0.0513%" height="15" fill="rgb(234,122,0)" fg:x="44189" fg:w="35"/><text x="65.1119%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="64.8189%" y="101" width="0.0939%" height="15" fill="rgb(207,146,38)" fg:x="44189" fg:w="64"/><text x="65.1119%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="64.8028%" y="117" width="0.2112%" height="15" fill="rgb(207,177,25)" fg:x="44178" fg:w="144"/><text x="65.0957%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="64.8028%" y="133" width="0.3066%" height="15" fill="rgb(211,178,42)" fg:x="44178" fg:w="209"/><text x="65.0957%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="64.8028%" y="149" width="0.3212%" height="15" fill="rgb(230,69,54)" fg:x="44178" fg:w="219"/><text x="65.0957%" y="159.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="64.6620%" y="165" width="0.6645%" height="15" fill="rgb(214,135,41)" fg:x="44082" fg:w="453"/><text x="64.9549%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.00%)</title><rect x="64.5285%" y="181" width="1.0004%" height="15" fill="rgb(237,67,25)" fg:x="43991" fg:w="682"/><text x="64.8214%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="65.5289%" y="181" width="0.1394%" height="15" fill="rgb(222,189,50)" fg:x="44673" fg:w="95"/><text x="65.8218%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="65.6682%" y="181" width="0.0924%" height="15" fill="rgb(245,148,34)" fg:x="44768" fg:w="63"/><text x="65.9612%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="65.7606%" y="165" width="0.1203%" height="15" fill="rgb(222,29,6)" fg:x="44831" fg:w="82"/><text x="66.0536%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="65.8809%" y="165" width="0.1394%" height="15" fill="rgb(221,189,43)" fg:x="44913" fg:w="95"/><text x="66.1739%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.0203%" y="165" width="0.1115%" height="15" fill="rgb(207,36,27)" fg:x="45008" fg:w="76"/><text x="66.3132%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="65.7606%" y="181" width="0.4841%" height="15" fill="rgb(217,90,24)" fg:x="44831" fg:w="330"/><text x="66.0536%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.2447%" y="181" width="0.1335%" height="15" fill="rgb(224,66,35)" fg:x="45161" fg:w="91"/><text x="66.5377%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,966 instructions, 2.88%)</title><rect x="63.8508%" y="197" width="2.8838%" height="15" fill="rgb(221,13,50)" fg:x="43529" fg:w="1966"/><text x="64.1438%" y="207.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="66.7346%" y="197" width="0.1115%" height="15" fill="rgb(236,68,49)" fg:x="45495" fg:w="76"/><text x="67.0276%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="66.8461%" y="197" width="0.0220%" height="15" fill="rgb(229,146,28)" fg:x="45571" fg:w="15"/><text x="67.1391%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="66.8681%" y="197" width="0.0220%" height="15" fill="rgb(225,31,38)" fg:x="45586" fg:w="15"/><text x="67.1611%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="66.8901%" y="197" width="0.0132%" height="15" fill="rgb(250,208,3)" fg:x="45601" fg:w="9"/><text x="67.1831%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.02%)</title><rect x="66.9033%" y="197" width="0.0235%" height="15" fill="rgb(246,54,23)" fg:x="45610" fg:w="16"/><text x="67.1963%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.9268%" y="181" width="0.1335%" height="15" fill="rgb(243,76,11)" fg:x="45626" fg:w="91"/><text x="67.2198%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="66.9268%" y="197" width="0.2743%" height="15" fill="rgb(245,21,50)" fg:x="45626" fg:w="187"/><text x="67.2198%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.2011%" y="165" width="0.1335%" height="15" fill="rgb(228,9,43)" fg:x="45813" fg:w="91"/><text x="67.4941%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.20%)</title><rect x="67.2011%" y="181" width="0.1966%" height="15" fill="rgb(208,100,47)" fg:x="45813" fg:w="134"/><text x="67.4941%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.32%)</title><rect x="67.2011%" y="197" width="0.3212%" height="15" fill="rgb(232,26,8)" fg:x="45813" fg:w="219"/><text x="67.4941%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.5223%" y="197" width="0.1335%" height="15" fill="rgb(216,166,38)" fg:x="46032" fg:w="91"/><text x="67.8153%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="67.6558%" y="197" width="0.1306%" height="15" fill="rgb(251,202,51)" fg:x="46123" fg:w="89"/><text x="67.9488%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.7864%" y="197" width="0.1335%" height="15" fill="rgb(254,216,34)" fg:x="46212" fg:w="91"/><text x="68.0793%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="67.9199%" y="197" width="0.1335%" height="15" fill="rgb(251,32,27)" fg:x="46303" fg:w="91"/><text x="68.2128%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="68.0592%" y="197" width="0.1306%" height="15" fill="rgb(208,127,28)" fg:x="46398" fg:w="89"/><text x="68.3522%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="68.1898%" y="197" width="0.6278%" height="15" fill="rgb(224,137,22)" fg:x="46487" fg:w="428"/><text x="68.4827%" y="207.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="68.8176%" y="197" width="0.6278%" height="15" fill="rgb(254,70,32)" fg:x="46915" fg:w="428"/><text x="69.1105%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,463 instructions, 10.95%)</title><rect x="60.2423%" y="213" width="10.9471%" height="15" fill="rgb(229,75,37)" fg:x="41069" fg:w="7463"/><text x="60.5353%" y="223.50">candid::de::I..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="71.1895%" y="213" width="0.5574%" height="15" fill="rgb(252,64,23)" fg:x="48532" fg:w="380"/><text x="71.4824%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="71.7469%" y="181" width="0.0103%" height="15" fill="rgb(232,162,48)" fg:x="48912" fg:w="7"/><text x="72.0398%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="71.7571%" y="165" width="0.0865%" height="15" fill="rgb(246,160,12)" fg:x="48919" fg:w="59"/><text x="72.0501%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.14%)</title><rect x="71.8437%" y="165" width="0.1379%" height="15" fill="rgb(247,166,0)" fg:x="48978" fg:w="94"/><text x="72.1367%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.25%)</title><rect x="71.9816%" y="165" width="0.2538%" height="15" fill="rgb(249,219,21)" fg:x="49072" fg:w="173"/><text x="72.2745%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 0.85%)</title><rect x="71.7571%" y="181" width="0.8493%" height="15" fill="rgb(205,209,3)" fg:x="48919" fg:w="579"/><text x="72.0501%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.11%)</title><rect x="72.6065%" y="181" width="0.1129%" height="15" fill="rgb(243,44,1)" fg:x="49498" fg:w="77"/><text x="72.8994%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (832 instructions, 1.22%)</title><rect x="71.7469%" y="197" width="1.2204%" height="15" fill="rgb(206,159,16)" fg:x="48912" fg:w="832"/><text x="72.0398%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (876 instructions, 1.28%)</title><rect x="71.7469%" y="213" width="1.2850%" height="15" fill="rgb(244,77,30)" fg:x="48912" fg:w="876"/><text x="72.0398%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="73.0318%" y="213" width="0.0777%" height="15" fill="rgb(218,69,12)" fg:x="49788" fg:w="53"/><text x="73.3248%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.1096%" y="197" width="0.0924%" height="15" fill="rgb(212,87,7)" fg:x="49841" fg:w="63"/><text x="73.4026%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="73.2533%" y="197" width="0.0924%" height="15" fill="rgb(245,114,25)" fg:x="49939" fg:w="63"/><text x="73.5463%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.29%)</title><rect x="73.1096%" y="213" width="0.2875%" height="15" fill="rgb(210,61,42)" fg:x="49841" fg:w="196"/><text x="73.4026%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="73.3971%" y="197" width="0.0499%" height="15" fill="rgb(211,52,33)" fg:x="50037" fg:w="34"/><text x="73.6901%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (121 instructions, 0.18%)</title><rect x="73.3971%" y="213" width="0.1775%" height="15" fill="rgb(234,58,33)" fg:x="50037" fg:w="121"/><text x="73.6901%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.5746%" y="213" width="0.0191%" height="15" fill="rgb(220,115,36)" fg:x="50158" fg:w="13"/><text x="73.8676%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.5937%" y="213" width="0.0191%" height="15" fill="rgb(243,153,54)" fg:x="50171" fg:w="13"/><text x="73.8866%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="73.6127%" y="213" width="0.0191%" height="15" fill="rgb(251,47,18)" fg:x="50184" fg:w="13"/><text x="73.9057%" y="223.50"></text></g><g><title>memcpy (440 instructions, 0.65%)</title><rect x="73.6318%" y="213" width="0.6454%" height="15" fill="rgb(242,102,42)" fg:x="50197" fg:w="440"/><text x="73.9248%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="74.2772%" y="181" width="0.0103%" height="15" fill="rgb(234,31,38)" fg:x="50637" fg:w="7"/><text x="74.5702%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="74.2875%" y="165" width="0.0396%" height="15" fill="rgb(221,117,51)" fg:x="50644" fg:w="27"/><text x="74.5804%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.17%)</title><rect x="74.2875%" y="181" width="0.1731%" height="15" fill="rgb(212,20,18)" fg:x="50644" fg:w="118"/><text x="74.5804%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="74.4606%" y="149" width="0.0396%" height="15" fill="rgb(245,133,36)" fg:x="50762" fg:w="27"/><text x="74.7535%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.17%)</title><rect x="74.4606%" y="165" width="0.1731%" height="15" fill="rgb(212,6,19)" fg:x="50762" fg:w="118"/><text x="74.7535%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.22%)</title><rect x="74.4606%" y="181" width="0.2244%" height="15" fill="rgb(218,1,36)" fg:x="50762" fg:w="153"/><text x="74.7535%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="74.6850%" y="181" width="0.0191%" height="15" fill="rgb(246,84,54)" fg:x="50915" fg:w="13"/><text x="74.9780%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (353 instructions, 0.52%)</title><rect x="74.2772%" y="197" width="0.5178%" height="15" fill="rgb(242,110,6)" fg:x="50637" fg:w="353"/><text x="74.5702%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (402 instructions, 0.59%)</title><rect x="74.2772%" y="213" width="0.5897%" height="15" fill="rgb(214,47,5)" fg:x="50637" fg:w="402"/><text x="74.5702%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="74.8669%" y="213" width="0.1306%" height="15" fill="rgb(218,159,25)" fg:x="51039" fg:w="89"/><text x="75.1599%" y="223.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="74.9974%" y="213" width="0.0103%" height="15" fill="rgb(215,211,28)" fg:x="51128" fg:w="7"/><text x="75.2904%" y="223.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="75.0092%" y="213" width="0.0103%" height="15" fill="rgb(238,59,32)" fg:x="51136" fg:w="7"/><text x="75.3021%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="75.0209%" y="197" width="0.0103%" height="15" fill="rgb(226,82,3)" fg:x="51144" fg:w="7"/><text x="75.3139%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="75.0312%" y="181" width="0.1306%" height="15" fill="rgb(240,164,32)" fg:x="51151" fg:w="89"/><text x="75.3241%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.18%)</title><rect x="75.0312%" y="197" width="0.1819%" height="15" fill="rgb(232,46,7)" fg:x="51151" fg:w="124"/><text x="75.3241%" y="207.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="75.2131%" y="197" width="0.2230%" height="15" fill="rgb(229,129,53)" fg:x="51275" fg:w="152"/><text x="75.5060%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (454 instructions, 0.67%)</title><rect x="75.0209%" y="213" width="0.6660%" height="15" fill="rgb(234,188,29)" fg:x="51144" fg:w="454"/><text x="75.3139%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.76%)</title><rect x="75.6869%" y="213" width="0.7598%" height="15" fill="rgb(246,141,4)" fg:x="51598" fg:w="518"/><text x="75.9798%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.17%)</title><rect x="76.4467%" y="165" width="0.1672%" height="15" fill="rgb(229,23,39)" fg:x="52116" fg:w="114"/><text x="76.7397%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.23%)</title><rect x="76.4467%" y="181" width="0.2303%" height="15" fill="rgb(206,12,3)" fg:x="52116" fg:w="157"/><text x="76.7397%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.35%)</title><rect x="76.4467%" y="197" width="0.3506%" height="15" fill="rgb(252,226,20)" fg:x="52116" fg:w="239"/><text x="76.7397%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.7973%" y="197" width="0.0220%" height="15" fill="rgb(216,123,35)" fg:x="52355" fg:w="15"/><text x="77.0902%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="76.8193%" y="197" width="0.0220%" height="15" fill="rgb(212,68,40)" fg:x="52370" fg:w="15"/><text x="77.1122%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (457 instructions, 0.67%)</title><rect x="76.4467%" y="213" width="0.6704%" height="15" fill="rgb(254,125,32)" fg:x="52116" fg:w="457"/><text x="76.7397%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.76%)</title><rect x="77.1170%" y="213" width="0.7569%" height="15" fill="rgb(253,97,22)" fg:x="52573" fg:w="516"/><text x="77.4100%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="77.8739%" y="213" width="0.0103%" height="15" fill="rgb(241,101,14)" fg:x="53089" fg:w="7"/><text x="78.1669%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="77.8842%" y="213" width="0.0103%" height="15" fill="rgb(238,103,29)" fg:x="53096" fg:w="7"/><text x="78.1772%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="77.8945%" y="213" width="0.0880%" height="15" fill="rgb(233,195,47)" fg:x="53103" fg:w="60"/><text x="78.1874%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (18,308 instructions, 26.86%)</title><rect x="56.0897%" y="229" width="26.8552%" height="15" fill="rgb(246,218,30)" fg:x="38238" fg:w="18308"/><text x="56.3826%" y="239.50">canister_update &lt;ic-cdk internal&gt; ti..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="82.9449%" y="213" width="0.1217%" height="15" fill="rgb(219,145,47)" fg:x="56546" fg:w="83"/><text x="83.2378%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="83.0666%" y="165" width="0.0308%" height="15" fill="rgb(243,12,26)" fg:x="56629" fg:w="21"/><text x="83.3596%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="83.0974%" y="149" width="0.1203%" height="15" fill="rgb(214,87,16)" fg:x="56650" fg:w="82"/><text x="83.3904%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="83.2177%" y="149" width="0.6498%" height="15" fill="rgb(208,99,42)" fg:x="56732" fg:w="443"/><text x="83.5107%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="83.8675%" y="149" width="0.1394%" height="15" fill="rgb(253,99,2)" fg:x="57175" fg:w="95"/><text x="84.1605%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.0069%" y="149" width="0.0880%" height="15" fill="rgb(220,168,23)" fg:x="57270" fg:w="60"/><text x="84.2998%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.0949%" y="149" width="0.0880%" height="15" fill="rgb(242,38,24)" fg:x="57330" fg:w="60"/><text x="84.3878%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.1829%" y="149" width="0.0880%" height="15" fill="rgb(225,182,9)" fg:x="57390" fg:w="60"/><text x="84.4759%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="84.2709%" y="149" width="0.0880%" height="15" fill="rgb(243,178,37)" fg:x="57450" fg:w="60"/><text x="84.5639%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="84.3589%" y="149" width="0.1203%" height="15" fill="rgb(232,139,19)" fg:x="57510" fg:w="82"/><text x="84.6519%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="84.4792%" y="149" width="0.1027%" height="15" fill="rgb(225,201,24)" fg:x="57592" fg:w="70"/><text x="84.7722%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="84.5819%" y="149" width="0.6498%" height="15" fill="rgb(221,47,46)" fg:x="57662" fg:w="443"/><text x="84.8748%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="85.2317%" y="149" width="0.0279%" height="15" fill="rgb(249,23,13)" fg:x="58105" fg:w="19"/><text x="85.5247%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.12%)</title><rect x="85.2596%" y="133" width="0.1188%" height="15" fill="rgb(219,9,5)" fg:x="58124" fg:w="81"/><text x="85.5525%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="85.3784%" y="101" width="0.0983%" height="15" fill="rgb(254,171,16)" fg:x="58205" fg:w="67"/><text x="85.6713%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="85.3784%" y="117" width="0.1408%" height="15" fill="rgb(230,171,20)" fg:x="58205" fg:w="96"/><text x="85.6713%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="85.5192%" y="69" width="0.0161%" height="15" fill="rgb(210,71,41)" fg:x="58301" fg:w="11"/><text x="85.8122%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="85.5353%" y="53" width="0.0513%" height="15" fill="rgb(206,173,20)" fg:x="58312" fg:w="35"/><text x="85.8283%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="85.5353%" y="69" width="0.0939%" height="15" fill="rgb(233,88,34)" fg:x="58312" fg:w="64"/><text x="85.8283%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="85.5192%" y="85" width="0.2112%" height="15" fill="rgb(223,209,46)" fg:x="58301" fg:w="144"/><text x="85.8122%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="85.5192%" y="101" width="0.3066%" height="15" fill="rgb(250,43,18)" fg:x="58301" fg:w="209"/><text x="85.8122%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="85.5192%" y="117" width="0.3212%" height="15" fill="rgb(208,13,10)" fg:x="58301" fg:w="219"/><text x="85.8122%" y="127.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="85.3784%" y="133" width="0.6645%" height="15" fill="rgb(212,200,36)" fg:x="58205" fg:w="453"/><text x="85.6713%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (672 instructions, 0.99%)</title><rect x="85.2596%" y="149" width="0.9857%" height="15" fill="rgb(225,90,30)" fg:x="58124" fg:w="672"/><text x="85.5525%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="86.2453%" y="149" width="0.1394%" height="15" fill="rgb(236,182,39)" fg:x="58796" fg:w="95"/><text x="86.5383%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="86.3846%" y="149" width="0.1306%" height="15" fill="rgb(212,144,35)" fg:x="58891" fg:w="89"/><text x="86.6776%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="86.5152%" y="149" width="0.1115%" height="15" fill="rgb(228,63,44)" fg:x="58980" fg:w="76"/><text x="86.8082%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="86.6267%" y="149" width="0.1027%" height="15" fill="rgb(228,109,6)" fg:x="59056" fg:w="70"/><text x="86.9196%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.65%)</title><rect x="86.7294%" y="133" width="0.6498%" height="15" fill="rgb(238,117,24)" fg:x="59126" fg:w="443"/><text x="87.0223%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="87.3792%" y="133" width="0.0279%" height="15" fill="rgb(242,26,26)" fg:x="59569" fg:w="19"/><text x="87.6721%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="87.4070%" y="117" width="0.1217%" height="15" fill="rgb(221,92,48)" fg:x="59588" fg:w="83"/><text x="87.7000%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="87.5288%" y="85" width="0.0983%" height="15" fill="rgb(209,209,32)" fg:x="59671" fg:w="67"/><text x="87.8218%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.14%)</title><rect x="87.5288%" y="101" width="0.1408%" height="15" fill="rgb(221,70,22)" fg:x="59671" fg:w="96"/><text x="87.8218%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="87.6696%" y="53" width="0.0161%" height="15" fill="rgb(248,145,5)" fg:x="59767" fg:w="11"/><text x="87.9626%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="87.6857%" y="37" width="0.0513%" height="15" fill="rgb(226,116,26)" fg:x="59778" fg:w="35"/><text x="87.9787%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.09%)</title><rect x="87.6857%" y="53" width="0.0939%" height="15" fill="rgb(244,5,17)" fg:x="59778" fg:w="64"/><text x="87.9787%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.21%)</title><rect x="87.6696%" y="69" width="0.2112%" height="15" fill="rgb(252,159,33)" fg:x="59767" fg:w="144"/><text x="87.9626%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.31%)</title><rect x="87.6696%" y="85" width="0.3066%" height="15" fill="rgb(206,71,0)" fg:x="59767" fg:w="209"/><text x="87.9626%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.32%)</title><rect x="87.6696%" y="101" width="0.3212%" height="15" fill="rgb(233,118,54)" fg:x="59767" fg:w="219"/><text x="87.9626%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.66%)</title><rect x="87.5288%" y="117" width="0.6645%" height="15" fill="rgb(234,83,48)" fg:x="59671" fg:w="453"/><text x="87.8218%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 0.99%)</title><rect x="87.4070%" y="133" width="0.9887%" height="15" fill="rgb(228,3,54)" fg:x="59588" fg:w="674"/><text x="87.7000%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="88.3957%" y="133" width="0.1394%" height="15" fill="rgb(226,155,13)" fg:x="60262" fg:w="95"/><text x="88.6887%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="88.5351%" y="133" width="0.1306%" height="15" fill="rgb(241,28,37)" fg:x="60357" fg:w="89"/><text x="88.8280%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,509 instructions, 2.21%)</title><rect x="86.7294%" y="149" width="2.2135%" height="15" fill="rgb(233,93,10)" fg:x="59126" fg:w="1509"/><text x="87.0223%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="88.9428%" y="149" width="0.1115%" height="15" fill="rgb(225,113,19)" fg:x="60635" fg:w="76"/><text x="89.2358%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.0543%" y="149" width="0.0220%" height="15" fill="rgb(241,2,18)" fg:x="60711" fg:w="15"/><text x="89.3473%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="89.0763%" y="149" width="0.0220%" height="15" fill="rgb(228,207,21)" fg:x="60726" fg:w="15"/><text x="89.3693%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="89.0983%" y="149" width="0.0132%" height="15" fill="rgb(213,211,35)" fg:x="60741" fg:w="9"/><text x="89.3913%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.02%)</title><rect x="89.1115%" y="149" width="0.0235%" height="15" fill="rgb(209,83,10)" fg:x="60750" fg:w="16"/><text x="89.4045%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="89.1350%" y="149" width="0.1217%" height="15" fill="rgb(209,164,1)" fg:x="60766" fg:w="83"/><text x="89.4280%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="89.2567%" y="149" width="0.1335%" height="15" fill="rgb(213,184,43)" fg:x="60849" fg:w="91"/><text x="89.5497%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="89.3961%" y="149" width="0.6278%" height="15" fill="rgb(231,61,34)" fg:x="60944" fg:w="428"/><text x="89.6891%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.63%)</title><rect x="90.0239%" y="149" width="0.6278%" height="15" fill="rgb(235,75,3)" fg:x="61372" fg:w="428"/><text x="90.3169%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,164 instructions, 9.04%)</title><rect x="83.0974%" y="165" width="9.0417%" height="15" fill="rgb(220,106,47)" fg:x="56650" fg:w="6164"/><text x="83.3904%" y="175.50">candid::de:..</text></g><g><title>memcpy (380 instructions, 0.56%)</title><rect x="92.1391%" y="165" width="0.5574%" height="15" fill="rgb(210,196,33)" fg:x="62814" fg:w="380"/><text x="92.4321%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="92.6965%" y="133" width="0.0103%" height="15" fill="rgb(229,154,42)" fg:x="63194" fg:w="7"/><text x="92.9895%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="92.7068%" y="117" width="0.1306%" height="15" fill="rgb(228,114,26)" fg:x="63201" fg:w="89"/><text x="92.9998%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="92.8887%" y="117" width="0.0924%" height="15" fill="rgb(208,144,1)" fg:x="63325" fg:w="63"/><text x="93.1816%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (222 instructions, 0.33%)</title><rect x="92.7068%" y="133" width="0.3256%" height="15" fill="rgb(239,112,37)" fg:x="63201" fg:w="222"/><text x="92.9998%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (284 instructions, 0.42%)</title><rect x="92.6965%" y="149" width="0.4166%" height="15" fill="rgb(210,96,50)" fg:x="63194" fg:w="284"/><text x="92.9895%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (333 instructions, 0.49%)</title><rect x="92.6965%" y="165" width="0.4885%" height="15" fill="rgb(222,178,2)" fg:x="63194" fg:w="333"/><text x="92.9895%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="93.1850%" y="149" width="0.0396%" height="15" fill="rgb(226,74,18)" fg:x="63527" fg:w="27"/><text x="93.4780%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.21%)</title><rect x="93.1850%" y="165" width="0.2083%" height="15" fill="rgb(225,67,54)" fg:x="63527" fg:w="142"/><text x="93.4780%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (143 instructions, 0.21%)</title><rect x="93.3933%" y="165" width="0.2098%" height="15" fill="rgb(251,92,32)" fg:x="63669" fg:w="143"/><text x="93.6862%" y="175.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (7 instructions, 0.01%)</title><rect x="93.6030%" y="165" width="0.0103%" height="15" fill="rgb(228,149,22)" fg:x="63812" fg:w="7"/><text x="93.8960%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (41 instructions, 0.06%)</title><rect x="93.6133%" y="165" width="0.0601%" height="15" fill="rgb(243,54,13)" fg:x="63819" fg:w="41"/><text x="93.9063%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (18 instructions, 0.03%)</title><rect x="93.6734%" y="165" width="0.0264%" height="15" fill="rgb(243,180,28)" fg:x="63860" fg:w="18"/><text x="93.9664%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,145 instructions, 11.95%)</title><rect x="83.0666%" y="181" width="11.9475%" height="15" fill="rgb(208,167,24)" fg:x="56629" fg:w="8145"/><text x="83.3596%" y="191.50">ic_cdk_timers::..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="95.0142%" y="181" width="0.0205%" height="15" fill="rgb(245,73,45)" fg:x="64774" fg:w="14"/><text x="95.3071%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,271 instructions, 12.13%)</title><rect x="83.0666%" y="197" width="12.1324%" height="15" fill="rgb(237,203,48)" fg:x="56629" fg:w="8271"/><text x="83.3596%" y="207.50">ic_cdk::futures..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="95.1990%" y="165" width="0.0103%" height="15" fill="rgb(211,197,16)" fg:x="64900" fg:w="7"/><text x="95.4919%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="95.2092%" y="165" width="0.1306%" height="15" fill="rgb(243,99,51)" fg:x="64907" fg:w="89"/><text x="95.5022%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.12%)</title><rect x="95.3398%" y="165" width="0.1217%" height="15" fill="rgb(215,123,29)" fg:x="64996" fg:w="83"/><text x="95.6328%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (239 instructions, 0.35%)</title><rect x="95.1990%" y="181" width="0.3506%" height="15" fill="rgb(239,186,37)" fg:x="64900" fg:w="239"/><text x="95.4919%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.13%)</title><rect x="95.5496%" y="165" width="0.1306%" height="15" fill="rgb(252,136,39)" fg:x="65139" fg:w="89"/><text x="95.8425%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (135 instructions, 0.20%)</title><rect x="95.5496%" y="181" width="0.1980%" height="15" fill="rgb(223,213,32)" fg:x="65139" fg:w="135"/><text x="95.8425%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.03%)</title><rect x="95.8943%" y="165" width="0.0337%" height="15" fill="rgb(233,115,5)" fg:x="65374" fg:w="23"/><text x="96.1872%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.0996%" y="165" width="0.0396%" height="15" fill="rgb(207,226,44)" fg:x="65514" fg:w="27"/><text x="96.3926%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.1392%" y="165" width="0.0396%" height="15" fill="rgb(208,126,0)" fg:x="65541" fg:w="27"/><text x="96.4322%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (337 instructions, 0.49%)</title><rect x="95.8943%" y="181" width="0.4943%" height="15" fill="rgb(244,66,21)" fg:x="65374" fg:w="337"/><text x="96.1872%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (876 instructions, 1.28%)</title><rect x="95.1990%" y="197" width="1.2850%" height="15" fill="rgb(222,97,12)" fg:x="64900" fg:w="876"/><text x="95.4919%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,321 instructions, 13.67%)</title><rect x="83.0666%" y="213" width="13.6726%" height="15" fill="rgb(219,213,19)" fg:x="56629" fg:w="9321"/><text x="83.3596%" y="223.50">futures_task::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.7392%" y="181" width="0.0396%" height="15" fill="rgb(252,169,30)" fg:x="65950" fg:w="27"/><text x="97.0321%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.9504%" y="181" width="0.0396%" height="15" fill="rgb(206,32,51)" fg:x="66094" fg:w="27"/><text x="97.2434%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.04%)</title><rect x="96.9900%" y="181" width="0.0396%" height="15" fill="rgb(250,172,42)" fg:x="66121" fg:w="27"/><text x="97.2830%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.10%)</title><rect x="97.0296%" y="181" width="0.0997%" height="15" fill="rgb(209,34,43)" fg:x="66148" fg:w="68"/><text x="97.3226%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (388 instructions, 0.57%)</title><rect x="96.7392%" y="197" width="0.5691%" height="15" fill="rgb(223,11,35)" fg:x="65950" fg:w="388"/><text x="97.0321%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (451 instructions, 0.66%)</title><rect x="96.7392%" y="213" width="0.6616%" height="15" fill="rgb(251,219,26)" fg:x="65950" fg:w="451"/><text x="97.0321%" y="223.50"></text></g><g><title>all (68,173 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(231,119,3)" fg:x="0" fg:w="68173"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (11,627 instructions, 17.06%)</title><rect x="82.9449%" y="229" width="17.0551%" height="15" fill="rgb(216,97,11)" fg:x="56546" fg:w="11627"/><text x="83.2378%" y="239.50">ic_cdk::api::call::cal..</text></g></svg></svg>