<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43472"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1104%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.85%)</title><rect x="0.1104%" y="213" width="0.8488%" height="15" fill="rgb(241,25,7)" fg:x="48" fg:w="369"/><text x="0.4034%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9592%" y="213" width="0.1886%" height="15" fill="rgb(242,119,39)" fg:x="417" fg:w="82"/><text x="1.2522%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1479%" y="197" width="0.1886%" height="15" fill="rgb(241,98,45)" fg:x="499" fg:w="82"/><text x="1.4408%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.12%)</title><rect x="1.3365%" y="165" width="0.1150%" height="15" fill="rgb(254,28,30)" fg:x="581" fg:w="50"/><text x="1.6295%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.31%)</title><rect x="1.3365%" y="181" width="0.3059%" height="15" fill="rgb(241,142,54)" fg:x="581" fg:w="133"/><text x="1.6295%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="1.6424%" y="181" width="0.9247%" height="15" fill="rgb(222,85,15)" fg:x="714" fg:w="402"/><text x="1.9354%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="2.5672%" y="181" width="0.1909%" height="15" fill="rgb(210,85,47)" fg:x="1116" fg:w="83"/><text x="2.8601%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.7581%" y="181" width="0.1242%" height="15" fill="rgb(224,206,25)" fg:x="1199" fg:w="54"/><text x="3.0511%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.8823%" y="181" width="0.1242%" height="15" fill="rgb(243,201,19)" fg:x="1253" fg:w="54"/><text x="3.1753%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.0065%" y="181" width="0.1242%" height="15" fill="rgb(236,59,4)" fg:x="1307" fg:w="54"/><text x="3.2995%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.1308%" y="181" width="0.1242%" height="15" fill="rgb(254,179,45)" fg:x="1361" fg:w="54"/><text x="3.4237%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="3.2550%" y="181" width="0.1633%" height="15" fill="rgb(226,14,10)" fg:x="1415" fg:w="71"/><text x="3.5479%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="3.4183%" y="181" width="0.1495%" height="15" fill="rgb(244,27,41)" fg:x="1486" fg:w="65"/><text x="3.7113%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="3.5678%" y="181" width="0.9247%" height="15" fill="rgb(235,35,32)" fg:x="1551" fg:w="402"/><text x="3.8608%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.4925%" y="181" width="0.0368%" height="15" fill="rgb(218,68,31)" fg:x="1953" fg:w="16"/><text x="4.7855%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5294%" y="165" width="0.1886%" height="15" fill="rgb(207,120,37)" fg:x="1969" fg:w="82"/><text x="4.8223%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7180%" y="133" width="0.1380%" height="15" fill="rgb(227,98,0)" fg:x="2051" fg:w="60"/><text x="5.0109%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7180%" y="149" width="0.1955%" height="15" fill="rgb(207,7,3)" fg:x="2051" fg:w="85"/><text x="5.0109%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9135%" y="101" width="0.0207%" height="15" fill="rgb(206,98,19)" fg:x="2136" fg:w="9"/><text x="5.2065%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9342%" y="85" width="0.0690%" height="15" fill="rgb(217,5,26)" fg:x="2145" fg:w="30"/><text x="5.2272%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9342%" y="101" width="0.1265%" height="15" fill="rgb(235,190,38)" fg:x="2145" fg:w="55"/><text x="5.2272%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="4.9135%" y="117" width="0.2622%" height="15" fill="rgb(247,86,24)" fg:x="2136" fg:w="114"/><text x="5.2065%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="4.9135%" y="133" width="0.3842%" height="15" fill="rgb(205,101,16)" fg:x="2136" fg:w="167"/><text x="5.2065%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="4.9135%" y="149" width="0.3957%" height="15" fill="rgb(246,168,33)" fg:x="2136" fg:w="172"/><text x="5.2065%" y="159.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="4.7180%" y="165" width="0.8465%" height="15" fill="rgb(231,114,1)" fg:x="2051" fg:w="368"/><text x="5.0109%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.31%)</title><rect x="4.5294%" y="181" width="1.3135%" height="15" fill="rgb(207,184,53)" fg:x="1969" fg:w="571"/><text x="4.8223%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="5.8428%" y="181" width="0.1909%" height="15" fill="rgb(224,95,51)" fg:x="2540" fg:w="83"/><text x="6.1358%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="6.0338%" y="181" width="0.1288%" height="15" fill="rgb(212,188,45)" fg:x="2623" fg:w="56"/><text x="6.3267%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="6.1626%" y="181" width="0.1495%" height="15" fill="rgb(223,154,38)" fg:x="2679" fg:w="65"/><text x="6.4556%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="6.3121%" y="181" width="0.1495%" height="15" fill="rgb(251,22,52)" fg:x="2744" fg:w="65"/><text x="6.6051%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="6.4616%" y="165" width="0.9247%" height="15" fill="rgb(229,209,22)" fg:x="2809" fg:w="402"/><text x="6.7546%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.3864%" y="165" width="0.0368%" height="15" fill="rgb(234,138,34)" fg:x="3211" fg:w="16"/><text x="7.6793%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.4232%" y="149" width="0.1886%" height="15" fill="rgb(212,95,11)" fg:x="3227" fg:w="82"/><text x="7.7161%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.6118%" y="117" width="0.1380%" height="15" fill="rgb(240,179,47)" fg:x="3309" fg:w="60"/><text x="7.9048%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.6118%" y="133" width="0.1955%" height="15" fill="rgb(240,163,11)" fg:x="3309" fg:w="85"/><text x="7.9048%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.8073%" y="85" width="0.0207%" height="15" fill="rgb(236,37,12)" fg:x="3394" fg:w="9"/><text x="8.1003%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.8280%" y="69" width="0.0690%" height="15" fill="rgb(232,164,16)" fg:x="3403" fg:w="30"/><text x="8.1210%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.8280%" y="85" width="0.1265%" height="15" fill="rgb(244,205,15)" fg:x="3403" fg:w="55"/><text x="8.1210%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="7.8073%" y="101" width="0.2622%" height="15" fill="rgb(223,117,47)" fg:x="3394" fg:w="114"/><text x="8.1003%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="7.8073%" y="117" width="0.3842%" height="15" fill="rgb(244,107,35)" fg:x="3394" fg:w="167"/><text x="8.1003%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="7.8073%" y="133" width="0.3957%" height="15" fill="rgb(205,140,8)" fg:x="3394" fg:w="172"/><text x="8.1003%" y="143.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="7.6118%" y="149" width="0.8465%" height="15" fill="rgb(228,84,46)" fg:x="3309" fg:w="368"/><text x="7.9048%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.31%)</title><rect x="7.4232%" y="165" width="1.3135%" height="15" fill="rgb(254,188,9)" fg:x="3227" fg:w="571"/><text x="7.7161%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="8.7367%" y="165" width="0.1909%" height="15" fill="rgb(206,112,54)" fg:x="3798" fg:w="83"/><text x="9.0296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="8.9276%" y="165" width="0.1288%" height="15" fill="rgb(216,84,49)" fg:x="3881" fg:w="56"/><text x="9.2206%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="9.0564%" y="149" width="0.1633%" height="15" fill="rgb(214,194,35)" fg:x="3937" fg:w="71"/><text x="9.3494%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.21%)</title><rect x="9.2197%" y="149" width="0.2070%" height="15" fill="rgb(249,28,3)" fg:x="4008" fg:w="90"/><text x="9.5127%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.4268%" y="149" width="0.1495%" height="15" fill="rgb(222,56,52)" fg:x="4098" fg:w="65"/><text x="9.7197%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.66%)</title><rect x="9.0564%" y="165" width="0.6556%" height="15" fill="rgb(245,217,50)" fg:x="3937" fg:w="285"/><text x="9.3494%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.7120%" y="165" width="0.1886%" height="15" fill="rgb(213,201,24)" fg:x="4222" fg:w="82"/><text x="10.0050%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,698 instructions, 3.91%)</title><rect x="6.4616%" y="181" width="3.9060%" height="15" fill="rgb(248,116,28)" fg:x="2809" fg:w="1698"/><text x="6.7546%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="10.3676%" y="181" width="0.1495%" height="15" fill="rgb(219,72,43)" fg:x="4507" fg:w="65"/><text x="10.6606%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.5171%" y="181" width="0.0299%" height="15" fill="rgb(209,138,14)" fg:x="4572" fg:w="13"/><text x="10.8101%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.5470%" y="181" width="0.0299%" height="15" fill="rgb(222,18,33)" fg:x="4585" fg:w="13"/><text x="10.8400%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.5769%" y="181" width="0.0161%" height="15" fill="rgb(213,199,7)" fg:x="4598" fg:w="7"/><text x="10.8699%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.5930%" y="181" width="0.0345%" height="15" fill="rgb(250,110,10)" fg:x="4605" fg:w="15"/><text x="10.8860%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.6275%" y="165" width="0.1886%" height="15" fill="rgb(248,123,6)" fg:x="4620" fg:w="82"/><text x="10.9205%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.6275%" y="181" width="0.3796%" height="15" fill="rgb(206,91,31)" fg:x="4620" fg:w="165"/><text x="10.9205%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.0071%" y="149" width="0.1886%" height="15" fill="rgb(211,154,13)" fg:x="4785" fg:w="82"/><text x="11.3001%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="11.0071%" y="165" width="0.2668%" height="15" fill="rgb(225,148,7)" fg:x="4785" fg:w="116"/><text x="11.3001%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.43%)</title><rect x="11.0071%" y="181" width="0.4279%" height="15" fill="rgb(220,160,43)" fg:x="4785" fg:w="186"/><text x="11.3001%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.4349%" y="181" width="0.1886%" height="15" fill="rgb(213,52,39)" fg:x="4971" fg:w="82"/><text x="11.7279%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.6236%" y="181" width="0.1863%" height="15" fill="rgb(243,137,7)" fg:x="5053" fg:w="81"/><text x="11.9165%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.8099%" y="181" width="0.1886%" height="15" fill="rgb(230,79,13)" fg:x="5134" fg:w="82"/><text x="12.1029%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9985%" y="181" width="0.1886%" height="15" fill="rgb(247,105,23)" fg:x="5216" fg:w="82"/><text x="12.2915%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.1918%" y="181" width="0.1863%" height="15" fill="rgb(223,179,41)" fg:x="5300" fg:w="81"/><text x="12.4847%" y="191.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="12.3781%" y="181" width="0.9178%" height="15" fill="rgb(218,9,34)" fg:x="5381" fg:w="399"/><text x="12.6711%" y="191.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="13.2959%" y="181" width="0.9178%" height="15" fill="rgb(222,106,8)" fg:x="5780" fg:w="399"/><text x="13.5889%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,566 instructions, 15.10%)</title><rect x="1.3365%" y="197" width="15.1040%" height="15" fill="rgb(211,220,0)" fg:x="581" fg:w="6566"/><text x="1.6295%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="16.4405%" y="197" width="0.8143%" height="15" fill="rgb(229,52,16)" fg:x="7147" fg:w="354"/><text x="16.7334%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (49 instructions, 0.11%)</title><rect x="17.2548%" y="181" width="0.1127%" height="15" fill="rgb(212,155,18)" fg:x="7501" fg:w="49"/><text x="17.5478%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (87 instructions, 0.20%)</title><rect x="17.2548%" y="197" width="0.2001%" height="15" fill="rgb(242,21,14)" fg:x="7501" fg:w="87"/><text x="17.5478%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.4549%" y="197" width="0.1886%" height="15" fill="rgb(222,19,48)" fg:x="7588" fg:w="82"/><text x="17.7479%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="17.6435%" y="181" width="0.0276%" height="15" fill="rgb(232,45,27)" fg:x="7670" fg:w="12"/><text x="17.9365%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.6711%" y="165" width="0.1219%" height="15" fill="rgb(249,103,42)" fg:x="7682" fg:w="53"/><text x="17.9641%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="17.7931%" y="165" width="0.2024%" height="15" fill="rgb(246,81,33)" fg:x="7735" fg:w="88"/><text x="18.0860%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="17.9955%" y="165" width="0.3727%" height="15" fill="rgb(252,33,42)" fg:x="7823" fg:w="162"/><text x="18.2885%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="17.6711%" y="181" width="1.2422%" height="15" fill="rgb(209,212,41)" fg:x="7682" fg:w="540"/><text x="17.9641%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.9133%" y="181" width="0.1886%" height="15" fill="rgb(207,154,6)" fg:x="8222" fg:w="82"/><text x="19.2063%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="19.1020%" y="181" width="0.3128%" height="15" fill="rgb(223,64,47)" fg:x="8304" fg:w="136"/><text x="19.3949%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,127 instructions, 2.59%)</title><rect x="17.6435%" y="197" width="2.5925%" height="15" fill="rgb(211,161,38)" fg:x="7670" fg:w="1127"/><text x="17.9365%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.2360%" y="197" width="0.1886%" height="15" fill="rgb(219,138,40)" fg:x="8797" fg:w="82"/><text x="20.5290%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="20.4246%" y="181" width="0.0276%" height="15" fill="rgb(241,228,46)" fg:x="8879" fg:w="12"/><text x="20.7176%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.4522%" y="165" width="0.1219%" height="15" fill="rgb(223,209,38)" fg:x="8891" fg:w="53"/><text x="20.7452%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="20.5742%" y="165" width="0.2024%" height="15" fill="rgb(236,164,45)" fg:x="8944" fg:w="88"/><text x="20.8671%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="20.7766%" y="165" width="0.3727%" height="15" fill="rgb(231,15,5)" fg:x="9032" fg:w="162"/><text x="21.0696%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="20.4522%" y="181" width="1.2422%" height="15" fill="rgb(252,35,15)" fg:x="8891" fg:w="540"/><text x="20.7452%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.6944%" y="181" width="0.1564%" height="15" fill="rgb(248,181,18)" fg:x="9431" fg:w="68"/><text x="21.9874%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.8508%" y="165" width="0.1863%" height="15" fill="rgb(233,39,42)" fg:x="9499" fg:w="81"/><text x="22.1438%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="21.8508%" y="181" width="0.2484%" height="15" fill="rgb(238,110,33)" fg:x="9499" fg:w="108"/><text x="22.1438%" y="191.50"></text></g><g><title>candid::types::internal::env_add (895 instructions, 2.06%)</title><rect x="20.4246%" y="197" width="2.0588%" height="15" fill="rgb(233,195,10)" fg:x="8879" fg:w="895"/><text x="20.7176%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.4834%" y="149" width="0.1219%" height="15" fill="rgb(254,105,3)" fg:x="9774" fg:w="53"/><text x="22.7764%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="22.4834%" y="165" width="0.1817%" height="15" fill="rgb(221,225,9)" fg:x="9774" fg:w="79"/><text x="22.7764%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="22.4834%" y="181" width="0.6717%" height="15" fill="rgb(224,227,45)" fg:x="9774" fg:w="292"/><text x="22.7764%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.1551%" y="181" width="0.1886%" height="15" fill="rgb(229,198,43)" fg:x="10066" fg:w="82"/><text x="23.4481%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.3438%" y="181" width="0.3128%" height="15" fill="rgb(206,209,35)" fg:x="10148" fg:w="136"/><text x="23.6367%" y="191.50"></text></g><g><title>candid::types::internal::env_id (933 instructions, 2.15%)</title><rect x="22.4834%" y="197" width="2.1462%" height="15" fill="rgb(245,195,53)" fg:x="9774" fg:w="933"/><text x="22.7764%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="24.6296%" y="197" width="0.1035%" height="15" fill="rgb(240,92,26)" fg:x="10707" fg:w="45"/><text x="24.9226%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="24.7332%" y="181" width="0.2829%" height="15" fill="rgb(207,40,23)" fg:x="10752" fg:w="123"/><text x="25.0261%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="25.0782%" y="181" width="0.2829%" height="15" fill="rgb(223,111,35)" fg:x="10902" fg:w="123"/><text x="25.3712%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.69%)</title><rect x="24.7332%" y="197" width="0.6901%" height="15" fill="rgb(229,147,28)" fg:x="10752" fg:w="300"/><text x="25.0261%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="25.4233%" y="181" width="0.0644%" height="15" fill="rgb(211,29,28)" fg:x="11052" fg:w="28"/><text x="25.7162%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (101 instructions, 0.23%)</title><rect x="25.4233%" y="197" width="0.2323%" height="15" fill="rgb(228,72,33)" fg:x="11052" fg:w="101"/><text x="25.7162%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6556%" y="197" width="0.0253%" height="15" fill="rgb(205,214,31)" fg:x="11153" fg:w="11"/><text x="25.9486%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6809%" y="197" width="0.0253%" height="15" fill="rgb(224,111,15)" fg:x="11164" fg:w="11"/><text x="25.9739%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.7062%" y="197" width="0.0253%" height="15" fill="rgb(253,21,26)" fg:x="11175" fg:w="11"/><text x="25.9992%" y="207.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="25.7315%" y="197" width="0.9431%" height="15" fill="rgb(245,139,43)" fg:x="11186" fg:w="410"/><text x="26.0245%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="26.6746%" y="165" width="0.0345%" height="15" fill="rgb(252,170,7)" fg:x="11596" fg:w="15"/><text x="26.9676%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="26.7091%" y="165" width="0.3865%" height="15" fill="rgb(231,118,14)" fg:x="11611" fg:w="168"/><text x="27.0021%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.0956%" y="133" width="0.1449%" height="15" fill="rgb(238,83,0)" fg:x="11779" fg:w="63"/><text x="27.3886%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.48%)</title><rect x="27.0956%" y="149" width="0.4785%" height="15" fill="rgb(221,39,39)" fg:x="11779" fg:w="208"/><text x="27.3886%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.54%)</title><rect x="27.0956%" y="165" width="0.5406%" height="15" fill="rgb(222,119,46)" fg:x="11779" fg:w="235"/><text x="27.3886%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.6362%" y="165" width="0.0253%" height="15" fill="rgb(222,165,49)" fg:x="12014" fg:w="11"/><text x="27.9291%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (469 instructions, 1.08%)</title><rect x="26.6746%" y="181" width="1.0789%" height="15" fill="rgb(219,113,52)" fg:x="11596" fg:w="469"/><text x="26.9676%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (506 instructions, 1.16%)</title><rect x="26.6746%" y="197" width="1.1640%" height="15" fill="rgb(214,7,15)" fg:x="11596" fg:w="506"/><text x="26.9676%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="27.8386%" y="181" width="0.1265%" height="15" fill="rgb(235,32,4)" fg:x="12102" fg:w="55"/><text x="28.1316%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.9651%" y="181" width="0.1449%" height="15" fill="rgb(238,90,54)" fg:x="12157" fg:w="63"/><text x="28.2581%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.46%)</title><rect x="27.8386%" y="197" width="0.4578%" height="15" fill="rgb(213,208,19)" fg:x="12102" fg:w="199"/><text x="28.1316%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="28.2964%" y="181" width="0.1265%" height="15" fill="rgb(233,156,4)" fg:x="12301" fg:w="55"/><text x="28.5893%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.37%)</title><rect x="28.2964%" y="197" width="0.3658%" height="15" fill="rgb(207,194,5)" fg:x="12301" fg:w="159"/><text x="28.5893%" y="207.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="28.6621%" y="165" width="0.2323%" height="15" fill="rgb(206,111,30)" fg:x="12460" fg:w="101"/><text x="28.9551%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="28.6621%" y="181" width="0.3128%" height="15" fill="rgb(243,70,54)" fg:x="12460" fg:w="136"/><text x="28.9551%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="29.1590%" y="165" width="0.1748%" height="15" fill="rgb(242,28,8)" fg:x="12676" fg:w="76"/><text x="29.4520%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="29.1590%" y="181" width="0.2530%" height="15" fill="rgb(219,106,18)" fg:x="12676" fg:w="110"/><text x="29.4520%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (396 instructions, 0.91%)</title><rect x="28.6621%" y="197" width="0.9109%" height="15" fill="rgb(244,222,10)" fg:x="12460" fg:w="396"/><text x="28.9551%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (76 instructions, 0.17%)</title><rect x="29.5731%" y="197" width="0.1748%" height="15" fill="rgb(236,179,52)" fg:x="12856" fg:w="76"/><text x="29.8660%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="29.7479%" y="165" width="0.0276%" height="15" fill="rgb(213,23,39)" fg:x="12932" fg:w="12"/><text x="30.0409%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.7755%" y="165" width="0.0253%" height="15" fill="rgb(238,48,10)" fg:x="12944" fg:w="11"/><text x="30.0685%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.8008%" y="165" width="0.3128%" height="15" fill="rgb(251,196,23)" fg:x="12955" fg:w="136"/><text x="30.0938%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (317 instructions, 0.73%)</title><rect x="29.7479%" y="181" width="0.7292%" height="15" fill="rgb(250,152,24)" fg:x="12932" fg:w="317"/><text x="30.0409%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.4771%" y="181" width="0.0736%" height="15" fill="rgb(209,150,17)" fg:x="13249" fg:w="32"/><text x="30.7701%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.5507%" y="133" width="0.1748%" height="15" fill="rgb(234,202,34)" fg:x="13281" fg:w="76"/><text x="30.8437%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="30.5507%" y="149" width="0.2530%" height="15" fill="rgb(253,148,53)" fg:x="13281" fg:w="110"/><text x="30.8437%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.41%)</title><rect x="30.5507%" y="165" width="0.4072%" height="15" fill="rgb(218,129,16)" fg:x="13281" fg:w="177"/><text x="30.8437%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="30.9579%" y="165" width="0.0253%" height="15" fill="rgb(216,85,19)" fg:x="13458" fg:w="11"/><text x="31.2508%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="30.9832%" y="165" width="0.0253%" height="15" fill="rgb(235,228,7)" fg:x="13469" fg:w="11"/><text x="31.2761%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 0.83%)</title><rect x="30.5507%" y="181" width="0.8304%" height="15" fill="rgb(245,175,0)" fg:x="13281" fg:w="361"/><text x="30.8437%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.3811%" y="181" width="0.0690%" height="15" fill="rgb(208,168,36)" fg:x="13642" fg:w="30"/><text x="31.6741%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.4501%" y="181" width="0.0115%" height="15" fill="rgb(246,171,24)" fg:x="13672" fg:w="5"/><text x="31.7431%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::types::type_env::TypeEnv&gt; (5 instructions, 0.01%)</title><rect x="31.4616%" y="181" width="0.0115%" height="15" fill="rgb(215,142,24)" fg:x="13677" fg:w="5"/><text x="31.7546%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.4731%" y="181" width="0.1265%" height="15" fill="rgb(250,187,7)" fg:x="13682" fg:w="55"/><text x="31.7661%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (935 instructions, 2.15%)</title><rect x="29.7479%" y="197" width="2.1508%" height="15" fill="rgb(228,66,33)" fg:x="12932" fg:w="935"/><text x="30.0409%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,021 instructions, 32.25%)</title><rect x="1.1479%" y="213" width="32.2529%" height="15" fill="rgb(234,215,21)" fg:x="499" fg:w="14021"/><text x="1.4408%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.4008%" y="213" width="0.0276%" height="15" fill="rgb(222,191,20)" fg:x="14520" fg:w="12"/><text x="33.6938%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.4284%" y="213" width="0.1863%" height="15" fill="rgb(245,79,54)" fg:x="14532" fg:w="81"/><text x="33.7214%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="33.6147%" y="213" width="0.2898%" height="15" fill="rgb(240,10,37)" fg:x="14613" fg:w="126"/><text x="33.9077%" y="223.50"></text></g><g><title>canister_update setTimer (14,837 instructions, 34.13%)</title><rect x="0.0000%" y="229" width="34.1300%" height="15" fill="rgb(214,192,32)" fg:x="0" fg:w="14837"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.1300%" y="213" width="0.0437%" height="15" fill="rgb(209,36,54)" fg:x="14837" fg:w="19"/><text x="34.4230%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="34.1737%" y="213" width="0.1794%" height="15" fill="rgb(220,10,11)" fg:x="14856" fg:w="78"/><text x="34.4667%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.3531%" y="213" width="0.1748%" height="15" fill="rgb(221,106,17)" fg:x="14934" fg:w="76"/><text x="34.6461%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.5280%" y="197" width="0.1886%" height="15" fill="rgb(251,142,44)" fg:x="15010" fg:w="82"/><text x="34.8209%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.7166%" y="197" width="0.1748%" height="15" fill="rgb(238,13,15)" fg:x="15092" fg:w="76"/><text x="35.0096%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.8914%" y="197" width="0.1886%" height="15" fill="rgb(208,107,27)" fg:x="15168" fg:w="82"/><text x="35.1844%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.0801%" y="197" width="0.0437%" height="15" fill="rgb(205,136,37)" fg:x="15250" fg:w="19"/><text x="35.3730%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="35.1238%" y="181" width="0.1748%" height="15" fill="rgb(250,205,27)" fg:x="15269" fg:w="76"/><text x="35.4167%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.2986%" y="181" width="0.2668%" height="15" fill="rgb(210,80,43)" fg:x="15345" fg:w="116"/><text x="35.5916%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.5654%" y="181" width="0.3796%" height="15" fill="rgb(247,160,36)" fg:x="15461" fg:w="165"/><text x="35.8584%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="35.9450%" y="181" width="0.1265%" height="15" fill="rgb(234,13,49)" fg:x="15626" fg:w="55"/><text x="36.2379%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.1238%" y="197" width="1.1686%" height="15" fill="rgb(234,122,0)" fg:x="15269" fg:w="508"/><text x="35.4167%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.2923%" y="181" width="0.0276%" height="15" fill="rgb(207,146,38)" fg:x="15777" fg:w="12"/><text x="36.5853%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.22%)</title><rect x="36.2923%" y="197" width="0.2162%" height="15" fill="rgb(207,177,25)" fg:x="15777" fg:w="94"/><text x="36.5853%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.5086%" y="165" width="0.0276%" height="15" fill="rgb(211,178,42)" fg:x="15871" fg:w="12"/><text x="36.8015%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.12%)</title><rect x="36.5086%" y="181" width="0.1150%" height="15" fill="rgb(230,69,54)" fg:x="15871" fg:w="50"/><text x="36.8015%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.6236%" y="181" width="0.1886%" height="15" fill="rgb(214,135,41)" fg:x="15921" fg:w="82"/><text x="36.9165%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="36.8122%" y="165" width="0.0276%" height="15" fill="rgb(237,67,25)" fg:x="16003" fg:w="12"/><text x="37.1052%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="36.8398%" y="149" width="0.1219%" height="15" fill="rgb(222,189,50)" fg:x="16015" fg:w="53"/><text x="37.1328%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="36.9617%" y="149" width="0.2024%" height="15" fill="rgb(245,148,34)" fg:x="16068" fg:w="88"/><text x="37.2547%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="37.1642%" y="149" width="0.3727%" height="15" fill="rgb(222,29,6)" fg:x="16156" fg:w="162"/><text x="37.4571%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="36.8398%" y="165" width="1.2422%" height="15" fill="rgb(221,189,43)" fg:x="16015" fg:w="540"/><text x="37.1328%" y="175.50"></text></g><g><title>candid::types::internal::env_add (760 instructions, 1.75%)</title><rect x="36.8122%" y="181" width="1.7483%" height="15" fill="rgb(207,36,27)" fg:x="16003" fg:w="760"/><text x="37.1052%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.5605%" y="181" width="0.1886%" height="15" fill="rgb(217,90,24)" fg:x="16763" fg:w="82"/><text x="38.8534%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="38.7491%" y="165" width="0.0276%" height="15" fill="rgb(224,66,35)" fg:x="16845" fg:w="12"/><text x="39.0420%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="38.7767%" y="149" width="0.1219%" height="15" fill="rgb(221,13,50)" fg:x="16857" fg:w="53"/><text x="39.0697%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="38.8986%" y="149" width="0.2024%" height="15" fill="rgb(236,68,49)" fg:x="16910" fg:w="88"/><text x="39.1916%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="39.1010%" y="149" width="0.3727%" height="15" fill="rgb(229,146,28)" fg:x="16998" fg:w="162"/><text x="39.3940%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="38.7767%" y="165" width="1.2422%" height="15" fill="rgb(225,31,38)" fg:x="16857" fg:w="540"/><text x="39.0697%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.0189%" y="165" width="0.1564%" height="15" fill="rgb(250,208,3)" fg:x="17397" fg:w="68"/><text x="40.3118%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.1753%" y="149" width="0.1863%" height="15" fill="rgb(246,54,23)" fg:x="17465" fg:w="81"/><text x="40.4683%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="40.1753%" y="165" width="0.2484%" height="15" fill="rgb(243,76,11)" fg:x="17465" fg:w="108"/><text x="40.4683%" y="175.50"></text></g><g><title>candid::types::internal::env_add (895 instructions, 2.06%)</title><rect x="38.7491%" y="181" width="2.0588%" height="15" fill="rgb(245,21,50)" fg:x="16845" fg:w="895"/><text x="39.0420%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="40.8079%" y="133" width="0.1219%" height="15" fill="rgb(228,9,43)" fg:x="17740" fg:w="53"/><text x="41.1008%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="40.8079%" y="149" width="0.1817%" height="15" fill="rgb(208,100,47)" fg:x="17740" fg:w="79"/><text x="41.1008%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="40.8079%" y="165" width="0.6717%" height="15" fill="rgb(232,26,8)" fg:x="17740" fg:w="292"/><text x="41.1008%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.851 (15 instructions, 0.03%)</title><rect x="41.4796%" y="165" width="0.0345%" height="15" fill="rgb(216,166,38)" fg:x="18032" fg:w="15"/><text x="41.7725%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.5141%" y="165" width="0.0253%" height="15" fill="rgb(251,202,51)" fg:x="18047" fg:w="11"/><text x="41.8070%" y="175.50"></text></g><g><title>candid::types::internal::env_id (498 instructions, 1.15%)</title><rect x="40.8079%" y="181" width="1.1456%" height="15" fill="rgb(254,216,34)" fg:x="17740" fg:w="498"/><text x="41.1008%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,464 instructions, 5.67%)</title><rect x="36.5086%" y="197" width="5.6680%" height="15" fill="rgb(251,32,27)" fg:x="15871" fg:w="2464"/><text x="36.8015%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.1766%" y="165" width="0.1748%" height="15" fill="rgb(208,127,28)" fg:x="18335" fg:w="76"/><text x="42.4695%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="42.1766%" y="181" width="0.2530%" height="15" fill="rgb(224,137,22)" fg:x="18335" fg:w="110"/><text x="42.4695%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="42.1766%" y="197" width="0.4141%" height="15" fill="rgb(254,70,32)" fg:x="18335" fg:w="180"/><text x="42.4695%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.5906%" y="181" width="0.0414%" height="15" fill="rgb(229,75,37)" fg:x="18515" fg:w="18"/><text x="42.8836%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.6320%" y="181" width="0.0253%" height="15" fill="rgb(252,64,23)" fg:x="18533" fg:w="11"/><text x="42.9250%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (80 instructions, 0.18%)</title><rect x="42.5906%" y="197" width="0.1840%" height="15" fill="rgb(232,162,48)" fg:x="18515" fg:w="80"/><text x="42.8836%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.7747%" y="197" width="0.0253%" height="15" fill="rgb(246,160,12)" fg:x="18595" fg:w="11"/><text x="43.0676%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="42.8000%" y="165" width="0.1633%" height="15" fill="rgb(247,166,0)" fg:x="18606" fg:w="71"/><text x="43.0929%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="42.8000%" y="181" width="0.2415%" height="15" fill="rgb(249,219,21)" fg:x="18606" fg:w="105"/><text x="43.0929%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="43.1956%" y="165" width="0.2599%" height="15" fill="rgb(205,209,3)" fg:x="18778" fg:w="113"/><text x="43.4886%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 instructions, 0.34%)</title><rect x="43.1956%" y="181" width="0.3381%" height="15" fill="rgb(243,44,1)" fg:x="18778" fg:w="147"/><text x="43.4886%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (386 instructions, 0.89%)</title><rect x="42.8000%" y="197" width="0.8879%" height="15" fill="rgb(206,159,16)" fg:x="18606" fg:w="386"/><text x="43.0929%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="43.6879%" y="149" width="0.1748%" height="15" fill="rgb(244,77,30)" fg:x="18992" fg:w="76"/><text x="43.9809%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="43.6879%" y="165" width="0.2530%" height="15" fill="rgb(218,69,12)" fg:x="18992" fg:w="110"/><text x="43.9809%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.41%)</title><rect x="43.6879%" y="181" width="0.4072%" height="15" fill="rgb(212,87,7)" fg:x="18992" fg:w="177"/><text x="43.9809%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.0950%" y="181" width="0.0253%" height="15" fill="rgb(245,114,25)" fg:x="19169" fg:w="11"/><text x="44.3880%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="44.1204%" y="117" width="0.1633%" height="15" fill="rgb(210,61,42)" fg:x="19180" fg:w="71"/><text x="44.4133%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="44.1204%" y="133" width="0.2415%" height="15" fill="rgb(211,52,33)" fg:x="19180" fg:w="105"/><text x="44.4133%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (172 instructions, 0.40%)</title><rect x="44.1204%" y="149" width="0.3957%" height="15" fill="rgb(234,58,33)" fg:x="19180" fg:w="172"/><text x="44.4133%" y="159.50"></text></g><g><title>leb128::write::signed (224 instructions, 0.52%)</title><rect x="44.1204%" y="165" width="0.5153%" height="15" fill="rgb(220,115,36)" fg:x="19180" fg:w="224"/><text x="44.4133%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (272 instructions, 0.63%)</title><rect x="44.1204%" y="181" width="0.6257%" height="15" fill="rgb(243,153,54)" fg:x="19180" fg:w="272"/><text x="44.4133%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="44.7460%" y="181" width="0.0690%" height="15" fill="rgb(251,47,18)" fg:x="19452" fg:w="30"/><text x="45.0390%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="44.8151%" y="181" width="0.1863%" height="15" fill="rgb(242,102,42)" fg:x="19482" fg:w="81"/><text x="45.1080%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (776 instructions, 1.79%)</title><rect x="43.6879%" y="197" width="1.7851%" height="15" fill="rgb(234,31,38)" fg:x="18992" fg:w="776"/><text x="43.9809%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.4729%" y="197" width="0.1380%" height="15" fill="rgb(221,117,51)" fg:x="19768" fg:w="60"/><text x="45.7659%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.6110%" y="149" width="0.1794%" height="15" fill="rgb(212,20,18)" fg:x="19828" fg:w="78"/><text x="45.9039%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="45.7904%" y="149" width="0.4486%" height="15" fill="rgb(245,133,36)" fg:x="19906" fg:w="195"/><text x="46.0834%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.2390%" y="149" width="0.1863%" height="15" fill="rgb(212,6,19)" fg:x="20101" fg:w="81"/><text x="46.5319%" y="159.50"></text></g><g><title>__rust_realloc (440 instructions, 1.01%)</title><rect x="45.6110%" y="165" width="1.0121%" height="15" fill="rgb(218,1,36)" fg:x="19828" fg:w="440"/><text x="45.9039%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (475 instructions, 1.09%)</title><rect x="45.6110%" y="181" width="1.0927%" height="15" fill="rgb(246,84,54)" fg:x="19828" fg:w="475"/><text x="45.9039%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (550 instructions, 1.27%)</title><rect x="45.6110%" y="197" width="1.2652%" height="15" fill="rgb(242,110,6)" fg:x="19828" fg:w="550"/><text x="45.9039%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="46.8762%" y="197" width="0.3105%" height="15" fill="rgb(214,47,5)" fg:x="20378" fg:w="135"/><text x="47.1691%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.1959%" y="181" width="0.0253%" height="15" fill="rgb(218,159,25)" fg:x="20517" fg:w="11"/><text x="47.4889%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.2212%" y="181" width="0.1863%" height="15" fill="rgb(215,211,28)" fg:x="20528" fg:w="81"/><text x="47.5142%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.4075%" y="181" width="0.2898%" height="15" fill="rgb(238,59,32)" fg:x="20609" fg:w="126"/><text x="47.7005%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.6974%" y="181" width="0.2898%" height="15" fill="rgb(226,82,3)" fg:x="20735" fg:w="126"/><text x="47.9903%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (416 instructions, 0.96%)</title><rect x="47.1867%" y="197" width="0.9569%" height="15" fill="rgb(240,164,32)" fg:x="20513" fg:w="416"/><text x="47.4797%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="48.1436%" y="197" width="0.1794%" height="15" fill="rgb(232,46,7)" fg:x="20929" fg:w="78"/><text x="48.4366%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.3231%" y="197" width="0.1886%" height="15" fill="rgb(229,129,53)" fg:x="21007" fg:w="82"/><text x="48.6160%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.5117%" y="197" width="0.0460%" height="15" fill="rgb(234,188,29)" fg:x="21089" fg:w="20"/><text x="48.8047%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.5577%" y="181" width="0.1219%" height="15" fill="rgb(246,141,4)" fg:x="21109" fg:w="53"/><text x="48.8507%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.5577%" y="197" width="0.1564%" height="15" fill="rgb(229,23,39)" fg:x="21109" fg:w="68"/><text x="48.8507%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.7141%" y="197" width="0.0414%" height="15" fill="rgb(206,12,3)" fg:x="21177" fg:w="18"/><text x="49.0071%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,488 instructions, 17.22%)</title><rect x="34.5280%" y="213" width="17.2249%" height="15" fill="rgb(252,226,20)" fg:x="15010" fg:w="7488"/><text x="34.8209%" y="223.50">ic_cdk_timers::global_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="51.7529%" y="213" width="0.0276%" height="15" fill="rgb(216,123,35)" fg:x="22498" fg:w="12"/><text x="52.0458%" y="223.50"></text></g><g><title>canister_global_timer (7,761 instructions, 17.85%)</title><rect x="34.1300%" y="229" width="17.8529%" height="15" fill="rgb(212,68,40)" fg:x="14837" fg:w="7761"/><text x="34.4230%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="51.9829%" y="213" width="0.2599%" height="15" fill="rgb(254,125,32)" fg:x="22598" fg:w="113"/><text x="52.2759%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.2428%" y="213" width="0.2668%" height="15" fill="rgb(253,97,22)" fg:x="22711" fg:w="116"/><text x="52.5358%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.5097%" y="213" width="0.3796%" height="15" fill="rgb(241,101,14)" fg:x="22827" fg:w="165"/><text x="52.8026%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="52.8892%" y="213" width="0.1265%" height="15" fill="rgb(238,103,29)" fg:x="22992" fg:w="55"/><text x="53.1822%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="53.0157%" y="197" width="0.1748%" height="15" fill="rgb(233,195,47)" fg:x="23047" fg:w="76"/><text x="53.3087%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.1906%" y="197" width="0.2668%" height="15" fill="rgb(246,218,30)" fg:x="23123" fg:w="116"/><text x="53.4835%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.4574%" y="197" width="0.3796%" height="15" fill="rgb(219,145,47)" fg:x="23239" fg:w="165"/><text x="53.7504%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.8370%" y="197" width="0.1265%" height="15" fill="rgb(243,12,26)" fg:x="23404" fg:w="55"/><text x="54.1299%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="53.0157%" y="213" width="1.1686%" height="15" fill="rgb(214,87,16)" fg:x="23047" fg:w="508"/><text x="53.3087%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.41%)</title><rect x="54.1843%" y="213" width="1.4124%" height="15" fill="rgb(208,99,42)" fg:x="23555" fg:w="614"/><text x="54.4773%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="55.5967%" y="213" width="0.1633%" height="15" fill="rgb(253,99,2)" fg:x="24169" fg:w="71"/><text x="55.8897%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="55.7600%" y="197" width="0.1633%" height="15" fill="rgb(220,168,23)" fg:x="24240" fg:w="71"/><text x="56.0530%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="55.9234%" y="197" width="0.9247%" height="15" fill="rgb(242,38,24)" fg:x="24311" fg:w="402"/><text x="56.2163%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="56.8481%" y="197" width="0.1909%" height="15" fill="rgb(225,182,9)" fg:x="24713" fg:w="83"/><text x="57.1411%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.0390%" y="197" width="0.1242%" height="15" fill="rgb(243,178,37)" fg:x="24796" fg:w="54"/><text x="57.3320%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.1632%" y="197" width="0.1242%" height="15" fill="rgb(232,139,19)" fg:x="24850" fg:w="54"/><text x="57.4562%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.2874%" y="197" width="0.1242%" height="15" fill="rgb(225,201,24)" fg:x="24904" fg:w="54"/><text x="57.5804%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.4117%" y="197" width="0.1242%" height="15" fill="rgb(221,47,46)" fg:x="24958" fg:w="54"/><text x="57.7046%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="57.5359%" y="197" width="0.1633%" height="15" fill="rgb(249,23,13)" fg:x="25012" fg:w="71"/><text x="57.8289%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="57.6992%" y="197" width="0.1495%" height="15" fill="rgb(219,9,5)" fg:x="25083" fg:w="65"/><text x="57.9922%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="57.8487%" y="197" width="0.9247%" height="15" fill="rgb(254,171,16)" fg:x="25148" fg:w="402"/><text x="58.1417%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="58.7735%" y="197" width="0.0368%" height="15" fill="rgb(230,171,20)" fg:x="25550" fg:w="16"/><text x="59.0664%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="58.8103%" y="181" width="0.1886%" height="15" fill="rgb(210,71,41)" fg:x="25566" fg:w="82"/><text x="59.1032%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="58.9989%" y="149" width="0.1380%" height="15" fill="rgb(206,173,20)" fg:x="25648" fg:w="60"/><text x="59.2919%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="58.9989%" y="165" width="0.1955%" height="15" fill="rgb(233,88,34)" fg:x="25648" fg:w="85"/><text x="59.2919%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.1944%" y="117" width="0.0207%" height="15" fill="rgb(223,209,46)" fg:x="25733" fg:w="9"/><text x="59.4874%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.2151%" y="101" width="0.0690%" height="15" fill="rgb(250,43,18)" fg:x="25742" fg:w="30"/><text x="59.5081%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.2151%" y="117" width="0.1265%" height="15" fill="rgb(208,13,10)" fg:x="25742" fg:w="55"/><text x="59.5081%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="59.1944%" y="133" width="0.2622%" height="15" fill="rgb(212,200,36)" fg:x="25733" fg:w="114"/><text x="59.4874%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="59.1944%" y="149" width="0.3842%" height="15" fill="rgb(225,90,30)" fg:x="25733" fg:w="167"/><text x="59.4874%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="59.1944%" y="165" width="0.3957%" height="15" fill="rgb(236,182,39)" fg:x="25733" fg:w="172"/><text x="59.4874%" y="175.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="58.9989%" y="181" width="0.8465%" height="15" fill="rgb(212,144,35)" fg:x="25648" fg:w="368"/><text x="59.2919%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.31%)</title><rect x="58.8103%" y="197" width="1.3135%" height="15" fill="rgb(228,63,44)" fg:x="25566" fg:w="571"/><text x="59.1032%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="60.1238%" y="197" width="0.1909%" height="15" fill="rgb(228,109,6)" fg:x="26137" fg:w="83"/><text x="60.4167%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="60.3147%" y="197" width="0.1288%" height="15" fill="rgb(238,117,24)" fg:x="26220" fg:w="56"/><text x="60.6077%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="60.4435%" y="197" width="0.1495%" height="15" fill="rgb(242,26,26)" fg:x="26276" fg:w="65"/><text x="60.7365%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="60.5930%" y="197" width="0.1495%" height="15" fill="rgb(221,92,48)" fg:x="26341" fg:w="65"/><text x="60.8860%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="60.7425%" y="181" width="0.9247%" height="15" fill="rgb(209,209,32)" fg:x="26406" fg:w="402"/><text x="61.0355%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="61.6673%" y="181" width="0.0368%" height="15" fill="rgb(221,70,22)" fg:x="26808" fg:w="16"/><text x="61.9602%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.7041%" y="165" width="0.1886%" height="15" fill="rgb(248,145,5)" fg:x="26824" fg:w="82"/><text x="61.9971%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="61.8927%" y="133" width="0.1380%" height="15" fill="rgb(226,116,26)" fg:x="26906" fg:w="60"/><text x="62.1857%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="61.8927%" y="149" width="0.1955%" height="15" fill="rgb(244,5,17)" fg:x="26906" fg:w="85"/><text x="62.1857%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.0882%" y="101" width="0.0207%" height="15" fill="rgb(252,159,33)" fg:x="26991" fg:w="9"/><text x="62.3812%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.1089%" y="85" width="0.0690%" height="15" fill="rgb(206,71,0)" fg:x="27000" fg:w="30"/><text x="62.4019%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.1089%" y="101" width="0.1265%" height="15" fill="rgb(233,118,54)" fg:x="27000" fg:w="55"/><text x="62.4019%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="62.0882%" y="117" width="0.2622%" height="15" fill="rgb(234,83,48)" fg:x="26991" fg:w="114"/><text x="62.3812%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="62.0882%" y="133" width="0.3842%" height="15" fill="rgb(228,3,54)" fg:x="26991" fg:w="167"/><text x="62.3812%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="62.0882%" y="149" width="0.3957%" height="15" fill="rgb(226,155,13)" fg:x="26991" fg:w="172"/><text x="62.3812%" y="159.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="61.8927%" y="165" width="0.8465%" height="15" fill="rgb(241,28,37)" fg:x="26906" fg:w="368"/><text x="62.1857%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.31%)</title><rect x="61.7041%" y="181" width="1.3135%" height="15" fill="rgb(233,93,10)" fg:x="26824" fg:w="571"/><text x="61.9971%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="63.0176%" y="181" width="0.1909%" height="15" fill="rgb(225,113,19)" fg:x="27395" fg:w="83"/><text x="63.3105%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="63.2085%" y="181" width="0.1288%" height="15" fill="rgb(241,2,18)" fg:x="27478" fg:w="56"/><text x="63.5015%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="63.3373%" y="165" width="0.1633%" height="15" fill="rgb(228,207,21)" fg:x="27534" fg:w="71"/><text x="63.6303%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.21%)</title><rect x="63.5006%" y="165" width="0.2070%" height="15" fill="rgb(213,211,35)" fg:x="27605" fg:w="90"/><text x="63.7936%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="63.7077%" y="165" width="0.1495%" height="15" fill="rgb(209,83,10)" fg:x="27695" fg:w="65"/><text x="64.0006%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.66%)</title><rect x="63.3373%" y="181" width="0.6556%" height="15" fill="rgb(209,164,1)" fg:x="27534" fg:w="285"/><text x="63.6303%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="63.9929%" y="181" width="0.1886%" height="15" fill="rgb(213,184,43)" fg:x="27819" fg:w="82"/><text x="64.2859%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,698 instructions, 3.91%)</title><rect x="60.7425%" y="197" width="3.9060%" height="15" fill="rgb(231,61,34)" fg:x="26406" fg:w="1698"/><text x="61.0355%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="64.6485%" y="197" width="0.1495%" height="15" fill="rgb(235,75,3)" fg:x="28104" fg:w="65"/><text x="64.9415%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.7980%" y="197" width="0.0299%" height="15" fill="rgb(220,106,47)" fg:x="28169" fg:w="13"/><text x="65.0910%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.8279%" y="197" width="0.0299%" height="15" fill="rgb(210,196,33)" fg:x="28182" fg:w="13"/><text x="65.1209%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="64.8578%" y="197" width="0.0161%" height="15" fill="rgb(229,154,42)" fg:x="28195" fg:w="7"/><text x="65.1508%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="64.8739%" y="197" width="0.0345%" height="15" fill="rgb(228,114,26)" fg:x="28202" fg:w="15"/><text x="65.1669%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.9084%" y="181" width="0.1886%" height="15" fill="rgb(208,144,1)" fg:x="28217" fg:w="82"/><text x="65.2014%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="64.9084%" y="197" width="0.3796%" height="15" fill="rgb(239,112,37)" fg:x="28217" fg:w="165"/><text x="65.2014%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.2880%" y="165" width="0.1886%" height="15" fill="rgb(210,96,50)" fg:x="28382" fg:w="82"/><text x="65.5810%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="65.2880%" y="181" width="0.2668%" height="15" fill="rgb(222,178,2)" fg:x="28382" fg:w="116"/><text x="65.5810%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.43%)</title><rect x="65.2880%" y="197" width="0.4279%" height="15" fill="rgb(226,74,18)" fg:x="28382" fg:w="186"/><text x="65.5810%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.7159%" y="197" width="0.1886%" height="15" fill="rgb(225,67,54)" fg:x="28568" fg:w="82"/><text x="66.0088%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="65.9045%" y="197" width="0.1863%" height="15" fill="rgb(251,92,32)" fg:x="28650" fg:w="81"/><text x="66.1975%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.0908%" y="197" width="0.1886%" height="15" fill="rgb(228,149,22)" fg:x="28731" fg:w="82"/><text x="66.3838%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.2794%" y="197" width="0.1886%" height="15" fill="rgb(243,54,13)" fg:x="28813" fg:w="82"/><text x="66.5724%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.4727%" y="197" width="0.1863%" height="15" fill="rgb(243,180,28)" fg:x="28897" fg:w="81"/><text x="66.7656%" y="207.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="66.6590%" y="197" width="0.9178%" height="15" fill="rgb(208,167,24)" fg:x="28978" fg:w="399"/><text x="66.9520%" y="207.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="67.5768%" y="197" width="0.9178%" height="15" fill="rgb(245,73,45)" fg:x="29377" fg:w="399"/><text x="67.8698%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,496 instructions, 14.94%)</title><rect x="55.7600%" y="213" width="14.9430%" height="15" fill="rgb(237,203,48)" fg:x="24240" fg:w="6496"/><text x="56.0530%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="70.7030%" y="213" width="0.8143%" height="15" fill="rgb(211,197,16)" fg:x="30736" fg:w="354"/><text x="70.9959%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="71.5173%" y="181" width="0.0276%" height="15" fill="rgb(243,99,51)" fg:x="31090" fg:w="12"/><text x="71.8103%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.5449%" y="165" width="0.1219%" height="15" fill="rgb(215,123,29)" fg:x="31102" fg:w="53"/><text x="71.8379%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="71.6668%" y="165" width="0.2024%" height="15" fill="rgb(239,186,37)" fg:x="31155" fg:w="88"/><text x="71.9598%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="71.8692%" y="165" width="0.3727%" height="15" fill="rgb(252,136,39)" fg:x="31243" fg:w="162"/><text x="72.1622%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="71.5449%" y="181" width="1.2422%" height="15" fill="rgb(223,213,32)" fg:x="31102" fg:w="540"/><text x="71.8379%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.7871%" y="181" width="0.1564%" height="15" fill="rgb(233,115,5)" fg:x="31642" fg:w="68"/><text x="73.0801%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (780 instructions, 1.79%)</title><rect x="71.5173%" y="197" width="1.7943%" height="15" fill="rgb(207,226,44)" fg:x="31090" fg:w="780"/><text x="71.8103%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (814 instructions, 1.87%)</title><rect x="71.5173%" y="213" width="1.8725%" height="15" fill="rgb(208,126,0)" fg:x="31090" fg:w="814"/><text x="71.8103%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="73.3898%" y="213" width="0.1035%" height="15" fill="rgb(244,66,21)" fg:x="31904" fg:w="45"/><text x="73.6827%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.4933%" y="197" width="0.1288%" height="15" fill="rgb(222,97,12)" fg:x="31949" fg:w="56"/><text x="73.7863%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.6842%" y="197" width="0.1288%" height="15" fill="rgb(219,213,19)" fg:x="32032" fg:w="56"/><text x="73.9772%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.38%)</title><rect x="73.4933%" y="213" width="0.3819%" height="15" fill="rgb(252,169,30)" fg:x="31949" fg:w="166"/><text x="73.7863%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.8751%" y="197" width="0.0644%" height="15" fill="rgb(206,32,51)" fg:x="32115" fg:w="28"/><text x="74.1681%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (101 instructions, 0.23%)</title><rect x="73.8751%" y="213" width="0.2323%" height="15" fill="rgb(250,172,42)" fg:x="32115" fg:w="101"/><text x="74.1681%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1075%" y="213" width="0.0253%" height="15" fill="rgb(209,34,43)" fg:x="32216" fg:w="11"/><text x="74.4004%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1328%" y="213" width="0.0253%" height="15" fill="rgb(223,11,35)" fg:x="32227" fg:w="11"/><text x="74.4257%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1581%" y="213" width="0.0253%" height="15" fill="rgb(251,219,26)" fg:x="32238" fg:w="11"/><text x="74.4510%" y="223.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="74.1834%" y="213" width="0.9431%" height="15" fill="rgb(231,119,3)" fg:x="32249" fg:w="410"/><text x="74.4764%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="75.1265%" y="181" width="0.0345%" height="15" fill="rgb(216,97,11)" fg:x="32659" fg:w="15"/><text x="75.4195%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.1610%" y="181" width="0.2323%" height="15" fill="rgb(223,59,9)" fg:x="32674" fg:w="101"/><text x="75.4540%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.3934%" y="165" width="0.2323%" height="15" fill="rgb(233,93,31)" fg:x="32775" fg:w="101"/><text x="75.6863%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (128 instructions, 0.29%)</title><rect x="75.3934%" y="181" width="0.2944%" height="15" fill="rgb(239,81,33)" fg:x="32775" fg:w="128"/><text x="75.6863%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.6878%" y="181" width="0.0253%" height="15" fill="rgb(213,120,34)" fg:x="32903" fg:w="11"/><text x="75.9808%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (295 instructions, 0.68%)</title><rect x="75.1265%" y="197" width="0.6786%" height="15" fill="rgb(243,49,53)" fg:x="32659" fg:w="295"/><text x="75.4195%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (332 instructions, 0.76%)</title><rect x="75.1265%" y="213" width="0.7637%" height="15" fill="rgb(247,216,33)" fg:x="32659" fg:w="332"/><text x="75.4195%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.8902%" y="213" width="0.1863%" height="15" fill="rgb(226,26,14)" fg:x="32991" fg:w="81"/><text x="76.1832%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.0766%" y="197" width="0.0276%" height="15" fill="rgb(215,49,53)" fg:x="33072" fg:w="12"/><text x="76.3695%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.1042%" y="181" width="0.1863%" height="15" fill="rgb(245,162,40)" fg:x="33084" fg:w="81"/><text x="76.3971%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.1042%" y="197" width="0.2484%" height="15" fill="rgb(229,68,17)" fg:x="33084" fg:w="108"/><text x="76.3971%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.3526%" y="197" width="0.3128%" height="15" fill="rgb(213,182,10)" fg:x="33192" fg:w="136"/><text x="76.6456%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (414 instructions, 0.95%)</title><rect x="76.0766%" y="213" width="0.9523%" height="15" fill="rgb(245,125,30)" fg:x="33072" fg:w="414"/><text x="76.3695%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="77.0289%" y="213" width="0.0736%" height="15" fill="rgb(232,202,2)" fg:x="33486" fg:w="32"/><text x="77.3219%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="77.1025%" y="165" width="0.2599%" height="15" fill="rgb(237,140,51)" fg:x="33518" fg:w="113"/><text x="77.3955%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 instructions, 0.34%)</title><rect x="77.1025%" y="181" width="0.3381%" height="15" fill="rgb(236,157,25)" fg:x="33518" fg:w="147"/><text x="77.3955%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (214 instructions, 0.49%)</title><rect x="77.1025%" y="197" width="0.4923%" height="15" fill="rgb(219,209,0)" fg:x="33518" fg:w="214"/><text x="77.3955%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.5948%" y="197" width="0.0253%" height="15" fill="rgb(240,116,54)" fg:x="33732" fg:w="11"/><text x="77.8877%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6201%" y="197" width="0.0253%" height="15" fill="rgb(216,10,36)" fg:x="33743" fg:w="11"/><text x="77.9130%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (398 instructions, 0.92%)</title><rect x="77.1025%" y="213" width="0.9155%" height="15" fill="rgb(222,72,44)" fg:x="33518" fg:w="398"/><text x="77.3955%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="78.0180%" y="213" width="0.0690%" height="15" fill="rgb(232,159,9)" fg:x="33916" fg:w="30"/><text x="78.3110%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.0870%" y="213" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="33946" fg:w="5"/><text x="78.3800%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.1077%" y="197" width="0.1265%" height="15" fill="rgb(216,194,45)" fg:x="33955" fg:w="55"/><text x="78.4007%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (109 instructions, 0.25%)</title><rect x="78.0985%" y="213" width="0.2507%" height="15" fill="rgb(218,18,35)" fg:x="33951" fg:w="109"/><text x="78.3915%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,089 instructions, 27.81%)</title><rect x="51.9829%" y="229" width="27.8087%" height="15" fill="rgb(207,83,51)" fg:x="22598" fg:w="12089"/><text x="52.2759%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="79.7916%" y="213" width="0.1748%" height="15" fill="rgb(225,63,43)" fg:x="34687" fg:w="76"/><text x="80.0846%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="79.9664%" y="165" width="0.0437%" height="15" fill="rgb(207,57,36)" fg:x="34763" fg:w="19"/><text x="80.2594%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="80.0101%" y="149" width="0.1633%" height="15" fill="rgb(216,99,33)" fg:x="34782" fg:w="71"/><text x="80.3031%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="80.1734%" y="149" width="0.9247%" height="15" fill="rgb(225,42,16)" fg:x="34853" fg:w="402"/><text x="80.4664%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="81.0982%" y="149" width="0.1909%" height="15" fill="rgb(220,201,45)" fg:x="35255" fg:w="83"/><text x="81.3911%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.2891%" y="149" width="0.1242%" height="15" fill="rgb(225,33,4)" fg:x="35338" fg:w="54"/><text x="81.5821%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.4133%" y="149" width="0.1242%" height="15" fill="rgb(224,33,50)" fg:x="35392" fg:w="54"/><text x="81.7063%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.5375%" y="149" width="0.1242%" height="15" fill="rgb(246,198,51)" fg:x="35446" fg:w="54"/><text x="81.8305%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.6618%" y="149" width="0.1242%" height="15" fill="rgb(205,22,4)" fg:x="35500" fg:w="54"/><text x="81.9547%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="81.7860%" y="149" width="0.1633%" height="15" fill="rgb(206,3,8)" fg:x="35554" fg:w="71"/><text x="82.0789%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="81.9493%" y="149" width="0.1495%" height="15" fill="rgb(251,23,15)" fg:x="35625" fg:w="65"/><text x="82.2423%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="82.0988%" y="149" width="0.9247%" height="15" fill="rgb(252,88,28)" fg:x="35690" fg:w="402"/><text x="82.3918%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.0236%" y="149" width="0.0368%" height="15" fill="rgb(212,127,14)" fg:x="36092" fg:w="16"/><text x="83.3165%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="83.0604%" y="133" width="0.1633%" height="15" fill="rgb(247,145,37)" fg:x="36108" fg:w="71"/><text x="83.3533%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.2237%" y="101" width="0.1380%" height="15" fill="rgb(209,117,53)" fg:x="36179" fg:w="60"/><text x="83.5167%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.2237%" y="117" width="0.1955%" height="15" fill="rgb(212,90,42)" fg:x="36179" fg:w="85"/><text x="83.5167%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.4192%" y="69" width="0.0207%" height="15" fill="rgb(218,164,37)" fg:x="36264" fg:w="9"/><text x="83.7122%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.4399%" y="53" width="0.0690%" height="15" fill="rgb(246,65,34)" fg:x="36273" fg:w="30"/><text x="83.7329%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.4399%" y="69" width="0.1265%" height="15" fill="rgb(231,100,33)" fg:x="36273" fg:w="55"/><text x="83.7329%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="83.4192%" y="85" width="0.2622%" height="15" fill="rgb(228,126,14)" fg:x="36264" fg:w="114"/><text x="83.7122%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="83.4192%" y="101" width="0.3842%" height="15" fill="rgb(215,173,21)" fg:x="36264" fg:w="167"/><text x="83.7122%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="83.4192%" y="117" width="0.3957%" height="15" fill="rgb(210,6,40)" fg:x="36264" fg:w="172"/><text x="83.7122%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="83.2237%" y="133" width="0.8465%" height="15" fill="rgb(212,48,18)" fg:x="36179" fg:w="368"/><text x="83.5167%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (560 instructions, 1.29%)</title><rect x="83.0604%" y="149" width="1.2882%" height="15" fill="rgb(230,214,11)" fg:x="36108" fg:w="560"/><text x="83.3533%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="84.3485%" y="149" width="0.1909%" height="15" fill="rgb(254,105,39)" fg:x="36668" fg:w="83"/><text x="84.6415%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.5395%" y="149" width="0.1863%" height="15" fill="rgb(245,158,5)" fg:x="36751" fg:w="81"/><text x="84.8324%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="84.7258%" y="149" width="0.1495%" height="15" fill="rgb(249,208,11)" fg:x="36832" fg:w="65"/><text x="85.0188%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.8753%" y="149" width="0.1495%" height="15" fill="rgb(210,39,28)" fg:x="36897" fg:w="65"/><text x="85.1683%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.92%)</title><rect x="85.0248%" y="133" width="0.9247%" height="15" fill="rgb(211,56,53)" fg:x="36962" fg:w="402"/><text x="85.3178%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="85.9496%" y="133" width="0.0368%" height="15" fill="rgb(226,201,30)" fg:x="37364" fg:w="16"/><text x="86.2425%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="85.9864%" y="117" width="0.1794%" height="15" fill="rgb(239,101,34)" fg:x="37380" fg:w="78"/><text x="86.2794%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.1658%" y="85" width="0.1380%" height="15" fill="rgb(226,209,5)" fg:x="37458" fg:w="60"/><text x="86.4588%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.1658%" y="101" width="0.1955%" height="15" fill="rgb(250,105,47)" fg:x="37458" fg:w="85"/><text x="86.4588%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.3613%" y="53" width="0.0207%" height="15" fill="rgb(230,72,3)" fg:x="37543" fg:w="9"/><text x="86.6543%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.3820%" y="37" width="0.0690%" height="15" fill="rgb(232,218,39)" fg:x="37552" fg:w="30"/><text x="86.6750%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.3820%" y="53" width="0.1265%" height="15" fill="rgb(248,166,6)" fg:x="37552" fg:w="55"/><text x="86.6750%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="86.3613%" y="69" width="0.2622%" height="15" fill="rgb(247,89,20)" fg:x="37543" fg:w="114"/><text x="86.6543%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="86.3613%" y="85" width="0.3842%" height="15" fill="rgb(248,130,54)" fg:x="37543" fg:w="167"/><text x="86.6543%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.40%)</title><rect x="86.3613%" y="101" width="0.3957%" height="15" fill="rgb(234,196,4)" fg:x="37543" fg:w="172"/><text x="86.6543%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.85%)</title><rect x="86.1658%" y="117" width="0.8465%" height="15" fill="rgb(250,143,31)" fg:x="37458" fg:w="368"/><text x="86.4588%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (567 instructions, 1.30%)</title><rect x="85.9864%" y="133" width="1.3043%" height="15" fill="rgb(211,110,34)" fg:x="37380" fg:w="567"/><text x="86.2794%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="87.2907%" y="133" width="0.1909%" height="15" fill="rgb(215,124,48)" fg:x="37947" fg:w="83"/><text x="87.5836%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.4816%" y="133" width="0.1863%" height="15" fill="rgb(216,46,13)" fg:x="38030" fg:w="81"/><text x="87.7746%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,308 instructions, 3.01%)</title><rect x="85.0248%" y="149" width="3.0088%" height="15" fill="rgb(205,184,25)" fg:x="36962" fg:w="1308"/><text x="85.3178%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="88.0337%" y="149" width="0.1495%" height="15" fill="rgb(228,1,10)" fg:x="38270" fg:w="65"/><text x="88.3266%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.1832%" y="149" width="0.0299%" height="15" fill="rgb(213,116,27)" fg:x="38335" fg:w="13"/><text x="88.4762%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.2131%" y="149" width="0.0299%" height="15" fill="rgb(241,95,50)" fg:x="38348" fg:w="13"/><text x="88.5061%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.2430%" y="149" width="0.0161%" height="15" fill="rgb(238,48,32)" fg:x="38361" fg:w="7"/><text x="88.5360%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="88.2591%" y="149" width="0.0345%" height="15" fill="rgb(235,113,49)" fg:x="38368" fg:w="15"/><text x="88.5521%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="88.2936%" y="149" width="0.1794%" height="15" fill="rgb(205,127,43)" fg:x="38383" fg:w="78"/><text x="88.5866%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.4730%" y="149" width="0.1886%" height="15" fill="rgb(250,162,2)" fg:x="38461" fg:w="82"/><text x="88.7660%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="88.6663%" y="149" width="0.9178%" height="15" fill="rgb(220,13,41)" fg:x="38545" fg:w="399"/><text x="88.9592%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="89.5841%" y="149" width="0.9178%" height="15" fill="rgb(249,221,25)" fg:x="38944" fg:w="399"/><text x="89.8771%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,377 instructions, 12.37%)</title><rect x="80.0101%" y="165" width="12.3689%" height="15" fill="rgb(215,208,19)" fg:x="34782" fg:w="5377"/><text x="80.3031%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="92.3790%" y="165" width="0.8143%" height="15" fill="rgb(236,175,2)" fg:x="40159" fg:w="354"/><text x="92.6720%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="93.1933%" y="133" width="0.0345%" height="15" fill="rgb(241,52,2)" fg:x="40513" fg:w="15"/><text x="93.4863%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.2278%" y="117" width="0.1863%" height="15" fill="rgb(248,140,14)" fg:x="40528" fg:w="81"/><text x="93.5208%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="93.4763%" y="117" width="0.1288%" height="15" fill="rgb(253,22,42)" fg:x="40636" fg:w="56"/><text x="93.7692%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (191 instructions, 0.44%)</title><rect x="93.2278%" y="133" width="0.4394%" height="15" fill="rgb(234,61,47)" fg:x="40528" fg:w="191"/><text x="93.5208%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (243 instructions, 0.56%)</title><rect x="93.1933%" y="149" width="0.5590%" height="15" fill="rgb(208,226,15)" fg:x="40513" fg:w="243"/><text x="93.4863%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (280 instructions, 0.64%)</title><rect x="93.1933%" y="165" width="0.6441%" height="15" fill="rgb(217,221,4)" fg:x="40513" fg:w="280"/><text x="93.4863%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8374%" y="165" width="0.2829%" height="15" fill="rgb(212,174,34)" fg:x="40793" fg:w="123"/><text x="94.1304%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (134 instructions, 0.31%)</title><rect x="94.1204%" y="165" width="0.3082%" height="15" fill="rgb(253,83,4)" fg:x="40916" fg:w="134"/><text x="94.4133%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (47 instructions, 0.11%)</title><rect x="94.4286%" y="165" width="0.1081%" height="15" fill="rgb(250,195,49)" fg:x="41050" fg:w="47"/><text x="94.7216%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.5367%" y="165" width="0.0299%" height="15" fill="rgb(241,192,25)" fg:x="41097" fg:w="13"/><text x="94.8297%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,111 instructions, 16.36%)</title><rect x="79.9664%" y="181" width="16.3577%" height="15" fill="rgb(208,124,10)" fg:x="34763" fg:w="7111"/><text x="80.2594%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.3241%" y="181" width="0.0276%" height="15" fill="rgb(222,33,0)" fg:x="41874" fg:w="12"/><text x="96.6170%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,207 instructions, 16.58%)</title><rect x="79.9664%" y="197" width="16.5785%" height="15" fill="rgb(234,209,28)" fg:x="34763" fg:w="7207"/><text x="80.2594%" y="207.50">ic_cdk::futures::wake..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.5449%" y="165" width="0.0115%" height="15" fill="rgb(224,11,23)" fg:x="41970" fg:w="5"/><text x="96.8379%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.5564%" y="165" width="0.1863%" height="15" fill="rgb(232,99,1)" fg:x="41975" fg:w="81"/><text x="96.8494%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.7427%" y="165" width="0.1794%" height="15" fill="rgb(237,95,45)" fg:x="42056" fg:w="78"/><text x="97.0357%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (203 instructions, 0.47%)</title><rect x="96.5449%" y="181" width="0.4670%" height="15" fill="rgb(208,109,11)" fg:x="41970" fg:w="203"/><text x="96.8379%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.0119%" y="165" width="0.1863%" height="15" fill="rgb(216,190,48)" fg:x="42173" fg:w="81"/><text x="97.3048%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (118 instructions, 0.27%)</title><rect x="97.0119%" y="181" width="0.2714%" height="15" fill="rgb(251,171,36)" fg:x="42173" fg:w="118"/><text x="97.3048%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.4604%" y="181" width="0.2829%" height="15" fill="rgb(230,62,22)" fg:x="42368" fg:w="123"/><text x="97.7534%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="97.7434%" y="181" width="0.3865%" height="15" fill="rgb(225,114,35)" fg:x="42491" fg:w="168"/><text x="98.0363%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (740 instructions, 1.70%)</title><rect x="96.5449%" y="197" width="1.7022%" height="15" fill="rgb(215,118,42)" fg:x="41970" fg:w="740"/><text x="96.8379%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,091 instructions, 18.61%)</title><rect x="79.9664%" y="213" width="18.6120%" height="15" fill="rgb(243,119,21)" fg:x="34763" fg:w="8091"/><text x="80.2594%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="98.8682%" y="181" width="0.1449%" height="15" fill="rgb(252,177,53)" fg:x="42980" fg:w="63"/><text x="99.1612%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (334 instructions, 0.77%)</title><rect x="98.5784%" y="197" width="0.7683%" height="15" fill="rgb(237,209,29)" fg:x="42854" fg:w="334"/><text x="98.8714%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (382 instructions, 0.88%)</title><rect x="98.5784%" y="213" width="0.8787%" height="15" fill="rgb(212,65,23)" fg:x="42854" fg:w="382"/><text x="98.8714%" y="223.50"></text></g><g><title>all (43,472 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(230,222,46)" fg:x="0" fg:w="43472"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,785 instructions, 20.21%)</title><rect x="79.7916%" y="229" width="20.2084%" height="15" fill="rgb(215,135,32)" fg:x="34687" fg:w="8785"/><text x="80.0846%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>