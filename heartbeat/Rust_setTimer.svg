<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43465"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1104%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.85%)</title><rect x="0.1104%" y="213" width="0.8490%" height="15" fill="rgb(241,25,7)" fg:x="48" fg:w="369"/><text x="0.4034%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9594%" y="213" width="0.1887%" height="15" fill="rgb(242,119,39)" fg:x="417" fg:w="82"/><text x="1.2524%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1481%" y="197" width="0.1887%" height="15" fill="rgb(241,98,45)" fg:x="499" fg:w="82"/><text x="1.4410%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.12%)</title><rect x="1.3367%" y="165" width="0.1150%" height="15" fill="rgb(254,28,30)" fg:x="581" fg:w="50"/><text x="1.6297%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.30%)</title><rect x="1.3367%" y="181" width="0.3014%" height="15" fill="rgb(241,142,54)" fg:x="581" fg:w="131"/><text x="1.6297%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="1.6381%" y="181" width="0.9341%" height="15" fill="rgb(222,85,15)" fg:x="712" fg:w="406"/><text x="1.9311%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="2.5722%" y="181" width="0.1887%" height="15" fill="rgb(210,85,47)" fg:x="1118" fg:w="82"/><text x="2.8652%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.7608%" y="181" width="0.1242%" height="15" fill="rgb(224,206,25)" fg:x="1200" fg:w="54"/><text x="3.0538%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.8851%" y="181" width="0.1242%" height="15" fill="rgb(243,201,19)" fg:x="1254" fg:w="54"/><text x="3.1780%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.0093%" y="181" width="0.1242%" height="15" fill="rgb(236,59,4)" fg:x="1308" fg:w="54"/><text x="3.3023%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.1336%" y="181" width="0.1242%" height="15" fill="rgb(254,179,45)" fg:x="1362" fg:w="54"/><text x="3.4265%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="3.2578%" y="181" width="0.1587%" height="15" fill="rgb(226,14,10)" fg:x="1416" fg:w="69"/><text x="3.5508%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="3.4165%" y="181" width="0.1495%" height="15" fill="rgb(244,27,41)" fg:x="1485" fg:w="65"/><text x="3.7095%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="3.5661%" y="181" width="0.9341%" height="15" fill="rgb(235,35,32)" fg:x="1550" fg:w="406"/><text x="3.8591%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.5002%" y="181" width="0.0368%" height="15" fill="rgb(218,68,31)" fg:x="1956" fg:w="16"/><text x="4.7931%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5370%" y="165" width="0.1887%" height="15" fill="rgb(207,120,37)" fg:x="1972" fg:w="82"/><text x="4.8300%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7256%" y="133" width="0.1380%" height="15" fill="rgb(227,98,0)" fg:x="2054" fg:w="60"/><text x="5.0186%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7256%" y="149" width="0.1956%" height="15" fill="rgb(207,7,3)" fg:x="2054" fg:w="85"/><text x="5.0186%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9212%" y="101" width="0.0207%" height="15" fill="rgb(206,98,19)" fg:x="2139" fg:w="9"/><text x="5.2142%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9419%" y="85" width="0.0690%" height="15" fill="rgb(217,5,26)" fg:x="2148" fg:w="30"/><text x="5.2349%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9419%" y="101" width="0.1265%" height="15" fill="rgb(235,190,38)" fg:x="2148" fg:w="55"/><text x="5.2349%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="4.9212%" y="117" width="0.2715%" height="15" fill="rgb(247,86,24)" fg:x="2139" fg:w="118"/><text x="5.2142%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="4.9212%" y="133" width="0.3934%" height="15" fill="rgb(205,101,16)" fg:x="2139" fg:w="171"/><text x="5.2142%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="4.9212%" y="149" width="0.4049%" height="15" fill="rgb(246,168,33)" fg:x="2139" fg:w="176"/><text x="5.2142%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="4.7256%" y="165" width="0.8559%" height="15" fill="rgb(231,114,1)" fg:x="2054" fg:w="372"/><text x="5.0186%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="4.5370%" y="181" width="1.3689%" height="15" fill="rgb(207,184,53)" fg:x="1972" fg:w="595"/><text x="4.8300%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.9059%" y="181" width="0.1887%" height="15" fill="rgb(224,95,51)" fg:x="2567" fg:w="82"/><text x="6.1989%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="6.0946%" y="181" width="0.1288%" height="15" fill="rgb(212,188,45)" fg:x="2649" fg:w="56"/><text x="6.3875%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="6.2234%" y="181" width="0.1449%" height="15" fill="rgb(223,154,38)" fg:x="2705" fg:w="63"/><text x="6.5164%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="6.3683%" y="181" width="0.1495%" height="15" fill="rgb(251,22,52)" fg:x="2768" fg:w="65"/><text x="6.6613%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="6.5179%" y="165" width="0.9341%" height="15" fill="rgb(229,209,22)" fg:x="2833" fg:w="406"/><text x="6.8109%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.4520%" y="165" width="0.0368%" height="15" fill="rgb(234,138,34)" fg:x="3239" fg:w="16"/><text x="7.7449%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.4888%" y="149" width="0.1887%" height="15" fill="rgb(212,95,11)" fg:x="3255" fg:w="82"/><text x="7.7818%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.6774%" y="117" width="0.1380%" height="15" fill="rgb(240,179,47)" fg:x="3337" fg:w="60"/><text x="7.9704%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.6774%" y="133" width="0.1956%" height="15" fill="rgb(240,163,11)" fg:x="3337" fg:w="85"/><text x="7.9704%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.8730%" y="85" width="0.0207%" height="15" fill="rgb(236,37,12)" fg:x="3422" fg:w="9"/><text x="8.1660%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.8937%" y="69" width="0.0690%" height="15" fill="rgb(232,164,16)" fg:x="3431" fg:w="30"/><text x="8.1867%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.8937%" y="85" width="0.1265%" height="15" fill="rgb(244,205,15)" fg:x="3431" fg:w="55"/><text x="8.1867%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.8730%" y="101" width="0.2715%" height="15" fill="rgb(223,117,47)" fg:x="3422" fg:w="118"/><text x="8.1660%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="7.8730%" y="117" width="0.3934%" height="15" fill="rgb(244,107,35)" fg:x="3422" fg:w="171"/><text x="8.1660%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="7.8730%" y="133" width="0.4049%" height="15" fill="rgb(205,140,8)" fg:x="3422" fg:w="176"/><text x="8.1660%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="7.6774%" y="149" width="0.8559%" height="15" fill="rgb(228,84,46)" fg:x="3337" fg:w="372"/><text x="7.9704%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="7.4888%" y="165" width="1.3689%" height="15" fill="rgb(254,188,9)" fg:x="3255" fg:w="595"/><text x="7.7818%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.8577%" y="165" width="0.1887%" height="15" fill="rgb(206,112,54)" fg:x="3850" fg:w="82"/><text x="9.1507%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="9.0464%" y="165" width="0.1288%" height="15" fill="rgb(216,84,49)" fg:x="3932" fg:w="56"/><text x="9.3393%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="9.1752%" y="149" width="0.1587%" height="15" fill="rgb(214,194,35)" fg:x="3988" fg:w="69"/><text x="9.4682%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="9.3339%" y="149" width="0.2094%" height="15" fill="rgb(249,28,3)" fg:x="4057" fg:w="91"/><text x="9.6269%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.5433%" y="149" width="0.1449%" height="15" fill="rgb(222,56,52)" fg:x="4148" fg:w="63"/><text x="9.8363%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="9.1752%" y="165" width="0.6488%" height="15" fill="rgb(245,217,50)" fg:x="3988" fg:w="282"/><text x="9.4682%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8240%" y="165" width="0.1887%" height="15" fill="rgb(213,201,24)" fg:x="4270" fg:w="82"/><text x="10.1170%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.96%)</title><rect x="6.5179%" y="181" width="3.9618%" height="15" fill="rgb(248,116,28)" fg:x="2833" fg:w="1722"/><text x="6.8109%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="10.4797%" y="181" width="0.1449%" height="15" fill="rgb(219,72,43)" fg:x="4555" fg:w="63"/><text x="10.7727%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6246%" y="181" width="0.0299%" height="15" fill="rgb(209,138,14)" fg:x="4618" fg:w="13"/><text x="10.9176%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6545%" y="181" width="0.0299%" height="15" fill="rgb(222,18,33)" fg:x="4631" fg:w="13"/><text x="10.9475%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.6845%" y="181" width="0.0161%" height="15" fill="rgb(213,199,7)" fg:x="4644" fg:w="7"/><text x="10.9774%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.7006%" y="181" width="0.0345%" height="15" fill="rgb(250,110,10)" fg:x="4651" fg:w="15"/><text x="10.9935%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.7351%" y="165" width="0.1887%" height="15" fill="rgb(248,123,6)" fg:x="4666" fg:w="82"/><text x="11.0280%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.7351%" y="181" width="0.3796%" height="15" fill="rgb(206,91,31)" fg:x="4666" fg:w="165"/><text x="11.0280%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.1147%" y="149" width="0.1887%" height="15" fill="rgb(211,154,13)" fg:x="4831" fg:w="82"/><text x="11.4077%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="11.1147%" y="165" width="0.2669%" height="15" fill="rgb(225,148,7)" fg:x="4831" fg:w="116"/><text x="11.4077%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="11.1147%" y="181" width="0.4233%" height="15" fill="rgb(220,160,43)" fg:x="4831" fg:w="184"/><text x="11.4077%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.5380%" y="181" width="0.1887%" height="15" fill="rgb(213,52,39)" fg:x="5015" fg:w="82"/><text x="11.8310%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.7267%" y="181" width="0.1864%" height="15" fill="rgb(243,137,7)" fg:x="5097" fg:w="81"/><text x="12.0196%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9130%" y="181" width="0.1887%" height="15" fill="rgb(230,79,13)" fg:x="5178" fg:w="82"/><text x="12.2060%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="12.1017%" y="181" width="0.1887%" height="15" fill="rgb(247,105,23)" fg:x="5260" fg:w="82"/><text x="12.3947%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.2949%" y="181" width="0.1864%" height="15" fill="rgb(223,179,41)" fg:x="5344" fg:w="81"/><text x="12.5879%" y="191.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="12.4813%" y="181" width="0.9180%" height="15" fill="rgb(218,9,34)" fg:x="5425" fg:w="399"/><text x="12.7743%" y="191.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="13.3993%" y="181" width="0.9180%" height="15" fill="rgb(222,106,8)" fg:x="5824" fg:w="399"/><text x="13.6923%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,569 instructions, 15.11%)</title><rect x="1.3367%" y="197" width="15.1133%" height="15" fill="rgb(211,220,0)" fg:x="581" fg:w="6569"/><text x="1.6297%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="16.4500%" y="197" width="0.8144%" height="15" fill="rgb(229,52,16)" fg:x="7150" fg:w="354"/><text x="16.7430%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.12%)</title><rect x="17.2645%" y="181" width="0.1150%" height="15" fill="rgb(212,155,18)" fg:x="7504" fg:w="50"/><text x="17.5574%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.19%)</title><rect x="17.2645%" y="197" width="0.1933%" height="15" fill="rgb(242,21,14)" fg:x="7504" fg:w="84"/><text x="17.5574%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.4577%" y="197" width="0.1887%" height="15" fill="rgb(222,19,48)" fg:x="7588" fg:w="82"/><text x="17.7507%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.6464%" y="181" width="0.0115%" height="15" fill="rgb(232,45,27)" fg:x="7670" fg:w="5"/><text x="17.9394%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.6579%" y="165" width="0.1219%" height="15" fill="rgb(249,103,42)" fg:x="7675" fg:w="53"/><text x="17.9509%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="17.7798%" y="165" width="0.2025%" height="15" fill="rgb(246,81,33)" fg:x="7728" fg:w="88"/><text x="18.0728%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="17.9823%" y="165" width="0.3727%" height="15" fill="rgb(252,33,42)" fg:x="7816" fg:w="162"/><text x="18.2753%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="17.6579%" y="181" width="1.2424%" height="15" fill="rgb(209,212,41)" fg:x="7675" fg:w="540"/><text x="17.9509%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.9003%" y="181" width="0.1887%" height="15" fill="rgb(207,154,6)" fg:x="8215" fg:w="82"/><text x="19.1932%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="19.0889%" y="181" width="0.3129%" height="15" fill="rgb(223,64,47)" fg:x="8297" fg:w="136"/><text x="19.3819%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,119 instructions, 2.57%)</title><rect x="17.6464%" y="197" width="2.5745%" height="15" fill="rgb(211,161,38)" fg:x="7670" fg:w="1119"/><text x="17.9394%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.2209%" y="197" width="0.1887%" height="15" fill="rgb(219,138,40)" fg:x="8789" fg:w="82"/><text x="20.5138%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="20.4095%" y="181" width="0.0115%" height="15" fill="rgb(241,228,46)" fg:x="8871" fg:w="5"/><text x="20.7025%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.4210%" y="165" width="0.1219%" height="15" fill="rgb(223,209,38)" fg:x="8876" fg:w="53"/><text x="20.7140%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="20.5430%" y="165" width="0.2025%" height="15" fill="rgb(236,164,45)" fg:x="8929" fg:w="88"/><text x="20.8359%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="20.7454%" y="165" width="0.3727%" height="15" fill="rgb(231,15,5)" fg:x="9017" fg:w="162"/><text x="21.0384%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="20.4210%" y="181" width="1.2424%" height="15" fill="rgb(252,35,15)" fg:x="8876" fg:w="540"/><text x="20.7140%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.6634%" y="181" width="0.1564%" height="15" fill="rgb(248,181,18)" fg:x="9416" fg:w="68"/><text x="21.9564%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.8199%" y="165" width="0.1864%" height="15" fill="rgb(233,39,42)" fg:x="9484" fg:w="81"/><text x="22.1128%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="21.8199%" y="181" width="0.2485%" height="15" fill="rgb(238,110,33)" fg:x="9484" fg:w="108"/><text x="22.1128%" y="191.50"></text></g><g><title>candid::types::internal::env_add (890 instructions, 2.05%)</title><rect x="20.4095%" y="197" width="2.0476%" height="15" fill="rgb(233,195,10)" fg:x="8871" fg:w="890"/><text x="20.7025%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.4571%" y="149" width="0.1219%" height="15" fill="rgb(254,105,3)" fg:x="9761" fg:w="53"/><text x="22.7501%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="22.4571%" y="165" width="0.1795%" height="15" fill="rgb(221,225,9)" fg:x="9761" fg:w="78"/><text x="22.7501%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.67%)</title><rect x="22.4571%" y="181" width="0.6741%" height="15" fill="rgb(224,227,45)" fg:x="9761" fg:w="293"/><text x="22.7501%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.1313%" y="181" width="0.1887%" height="15" fill="rgb(229,198,43)" fg:x="10054" fg:w="82"/><text x="23.4242%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.3199%" y="181" width="0.3129%" height="15" fill="rgb(206,209,35)" fg:x="10136" fg:w="136"/><text x="23.6129%" y="191.50"></text></g><g><title>candid::types::internal::env_id (916 instructions, 2.11%)</title><rect x="22.4571%" y="197" width="2.1074%" height="15" fill="rgb(245,195,53)" fg:x="9761" fg:w="916"/><text x="22.7501%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="24.5646%" y="197" width="0.1081%" height="15" fill="rgb(240,92,26)" fg:x="10677" fg:w="47"/><text x="24.8576%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="24.6727%" y="181" width="0.2830%" height="15" fill="rgb(207,40,23)" fg:x="10724" fg:w="123"/><text x="24.9657%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="25.0178%" y="181" width="0.2830%" height="15" fill="rgb(223,111,35)" fg:x="10874" fg:w="123"/><text x="25.3108%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.69%)</title><rect x="24.6727%" y="197" width="0.6902%" height="15" fill="rgb(229,147,28)" fg:x="10724" fg:w="300"/><text x="24.9657%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="25.3629%" y="181" width="0.0644%" height="15" fill="rgb(211,29,28)" fg:x="11024" fg:w="28"/><text x="25.6559%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (101 instructions, 0.23%)</title><rect x="25.3629%" y="197" width="0.2324%" height="15" fill="rgb(228,72,33)" fg:x="11024" fg:w="101"/><text x="25.6559%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.5953%" y="197" width="0.0253%" height="15" fill="rgb(205,214,31)" fg:x="11125" fg:w="11"/><text x="25.8883%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6206%" y="197" width="0.0253%" height="15" fill="rgb(224,111,15)" fg:x="11136" fg:w="11"/><text x="25.9136%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6459%" y="197" width="0.0253%" height="15" fill="rgb(253,21,26)" fg:x="11147" fg:w="11"/><text x="25.9389%" y="207.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="25.6712%" y="197" width="0.9433%" height="15" fill="rgb(245,139,43)" fg:x="11158" fg:w="410"/><text x="25.9642%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="26.6145%" y="165" width="0.0276%" height="15" fill="rgb(252,170,7)" fg:x="11568" fg:w="12"/><text x="26.9075%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="26.6421%" y="165" width="0.3865%" height="15" fill="rgb(231,118,14)" fg:x="11580" fg:w="168"/><text x="26.9351%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.0286%" y="133" width="0.1449%" height="15" fill="rgb(238,83,0)" fg:x="11748" fg:w="63"/><text x="27.3216%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.48%)</title><rect x="27.0286%" y="149" width="0.4785%" height="15" fill="rgb(221,39,39)" fg:x="11748" fg:w="208"/><text x="27.3216%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.54%)</title><rect x="27.0286%" y="165" width="0.5407%" height="15" fill="rgb(222,119,46)" fg:x="11748" fg:w="235"/><text x="27.3216%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.5693%" y="165" width="0.0253%" height="15" fill="rgb(222,165,49)" fg:x="11983" fg:w="11"/><text x="27.8623%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (466 instructions, 1.07%)</title><rect x="26.6145%" y="181" width="1.0721%" height="15" fill="rgb(219,113,52)" fg:x="11568" fg:w="466"/><text x="26.9075%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (504 instructions, 1.16%)</title><rect x="26.6145%" y="197" width="1.1596%" height="15" fill="rgb(214,7,15)" fg:x="11568" fg:w="504"/><text x="26.9075%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="27.7741%" y="181" width="0.1265%" height="15" fill="rgb(235,32,4)" fg:x="12072" fg:w="55"/><text x="28.0670%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.9006%" y="181" width="0.1449%" height="15" fill="rgb(238,90,54)" fg:x="12127" fg:w="63"/><text x="28.1936%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.46%)</title><rect x="27.7741%" y="197" width="0.4578%" height="15" fill="rgb(213,208,19)" fg:x="12072" fg:w="199"/><text x="28.0670%" y="207.50"></text></g><g><title>__multi3 (56 instructions, 0.13%)</title><rect x="28.2319%" y="197" width="0.1288%" height="15" fill="rgb(233,156,4)" fg:x="12271" fg:w="56"/><text x="28.5249%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="28.3608%" y="165" width="0.1265%" height="15" fill="rgb(207,194,5)" fg:x="12327" fg:w="55"/><text x="28.6537%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.38%)</title><rect x="28.3608%" y="181" width="0.3750%" height="15" fill="rgb(206,111,30)" fg:x="12327" fg:w="163"/><text x="28.6537%" y="191.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (218 instructions, 0.50%)</title><rect x="28.3608%" y="197" width="0.5016%" height="15" fill="rgb(243,70,54)" fg:x="12327" fg:w="218"/><text x="28.6537%" y="207.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="28.8623%" y="165" width="0.2324%" height="15" fill="rgb(242,28,8)" fg:x="12545" fg:w="101"/><text x="29.1553%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="28.8623%" y="181" width="0.3129%" height="15" fill="rgb(219,106,18)" fg:x="12545" fg:w="136"/><text x="29.1553%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="29.3547%" y="165" width="0.1749%" height="15" fill="rgb(244,222,10)" fg:x="12759" fg:w="76"/><text x="29.6476%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="29.3547%" y="181" width="0.2531%" height="15" fill="rgb(236,179,52)" fg:x="12759" fg:w="110"/><text x="29.6476%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (392 instructions, 0.90%)</title><rect x="28.8623%" y="197" width="0.9019%" height="15" fill="rgb(213,23,39)" fg:x="12545" fg:w="392"/><text x="29.1553%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (82 instructions, 0.19%)</title><rect x="29.7642%" y="197" width="0.1887%" height="15" fill="rgb(238,48,10)" fg:x="12937" fg:w="82"/><text x="30.0571%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="29.9528%" y="165" width="0.0115%" height="15" fill="rgb(251,196,23)" fg:x="13019" fg:w="5"/><text x="30.2458%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.9643%" y="165" width="0.0253%" height="15" fill="rgb(250,152,24)" fg:x="13024" fg:w="11"/><text x="30.2573%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.9896%" y="165" width="0.3129%" height="15" fill="rgb(209,150,17)" fg:x="13035" fg:w="136"/><text x="30.2826%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (312 instructions, 0.72%)</title><rect x="29.9528%" y="181" width="0.7178%" height="15" fill="rgb(234,202,34)" fg:x="13019" fg:w="312"/><text x="30.2458%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.6707%" y="181" width="0.0736%" height="15" fill="rgb(253,148,53)" fg:x="13331" fg:w="32"/><text x="30.9636%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.7443%" y="133" width="0.1749%" height="15" fill="rgb(218,129,16)" fg:x="13363" fg:w="76"/><text x="31.0372%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="30.7443%" y="149" width="0.2531%" height="15" fill="rgb(216,85,19)" fg:x="13363" fg:w="110"/><text x="31.0372%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="30.7443%" y="165" width="0.4026%" height="15" fill="rgb(235,228,7)" fg:x="13363" fg:w="175"/><text x="31.0372%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.1469%" y="165" width="0.0253%" height="15" fill="rgb(245,175,0)" fg:x="13538" fg:w="11"/><text x="31.4399%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.1722%" y="165" width="0.0253%" height="15" fill="rgb(208,168,36)" fg:x="13549" fg:w="11"/><text x="31.4652%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.83%)</title><rect x="30.7443%" y="181" width="0.8260%" height="15" fill="rgb(246,171,24)" fg:x="13363" fg:w="359"/><text x="31.0372%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.5702%" y="181" width="0.0690%" height="15" fill="rgb(215,142,24)" fg:x="13722" fg:w="30"/><text x="31.8632%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.6392%" y="181" width="0.0115%" height="15" fill="rgb(250,187,7)" fg:x="13752" fg:w="5"/><text x="31.9322%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="31.6508%" y="181" width="0.0115%" height="15" fill="rgb(228,66,33)" fg:x="13757" fg:w="5"/><text x="31.9437%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.6623%" y="181" width="0.1265%" height="15" fill="rgb(234,215,21)" fg:x="13762" fg:w="55"/><text x="31.9552%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (928 instructions, 2.14%)</title><rect x="29.9528%" y="197" width="2.1351%" height="15" fill="rgb(222,191,20)" fg:x="13019" fg:w="928"/><text x="30.2458%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,076 instructions, 32.38%)</title><rect x="1.1481%" y="213" width="32.3847%" height="15" fill="rgb(245,79,54)" fg:x="499" fg:w="14076"/><text x="1.4410%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.5327%" y="213" width="0.0276%" height="15" fill="rgb(240,10,37)" fg:x="14575" fg:w="12"/><text x="33.8257%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.5603%" y="213" width="0.1864%" height="15" fill="rgb(214,192,32)" fg:x="14587" fg:w="81"/><text x="33.8533%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="33.7467%" y="213" width="0.2899%" height="15" fill="rgb(209,36,54)" fg:x="14668" fg:w="126"/><text x="34.0397%" y="223.50"></text></g><g><title>canister_update setTimer (14,892 instructions, 34.26%)</title><rect x="0.0000%" y="229" width="34.2620%" height="15" fill="rgb(220,10,11)" fg:x="0" fg:w="14892"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.2620%" y="213" width="0.0437%" height="15" fill="rgb(221,106,17)" fg:x="14892" fg:w="19"/><text x="34.5550%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="34.3058%" y="213" width="0.1795%" height="15" fill="rgb(251,142,44)" fg:x="14911" fg:w="78"/><text x="34.5987%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.4852%" y="213" width="0.1749%" height="15" fill="rgb(238,13,15)" fg:x="14989" fg:w="76"/><text x="34.7782%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6601%" y="197" width="0.1887%" height="15" fill="rgb(208,107,27)" fg:x="15065" fg:w="82"/><text x="34.9530%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.8487%" y="197" width="0.1749%" height="15" fill="rgb(205,136,37)" fg:x="15147" fg:w="76"/><text x="35.1417%" y="207.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (9 instructions, 0.02%)</title><rect x="35.0236%" y="197" width="0.0207%" height="15" fill="rgb(250,205,27)" fg:x="15223" fg:w="9"/><text x="35.3166%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.0443%" y="197" width="0.1887%" height="15" fill="rgb(210,80,43)" fg:x="15232" fg:w="82"/><text x="35.3373%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.2329%" y="197" width="0.0437%" height="15" fill="rgb(247,160,36)" fg:x="15314" fg:w="19"/><text x="35.5259%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="35.2767%" y="181" width="0.1749%" height="15" fill="rgb(234,13,49)" fg:x="15333" fg:w="76"/><text x="35.5696%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.4515%" y="181" width="0.2669%" height="15" fill="rgb(234,122,0)" fg:x="15409" fg:w="116"/><text x="35.7445%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.7184%" y="181" width="0.3796%" height="15" fill="rgb(207,146,38)" fg:x="15525" fg:w="165"/><text x="36.0114%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="36.0980%" y="181" width="0.1265%" height="15" fill="rgb(207,177,25)" fg:x="15690" fg:w="55"/><text x="36.3910%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.2767%" y="197" width="1.1688%" height="15" fill="rgb(211,178,42)" fg:x="15333" fg:w="508"/><text x="35.5696%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.4454%" y="181" width="0.0115%" height="15" fill="rgb(230,69,54)" fg:x="15841" fg:w="5"/><text x="36.7384%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (89 instructions, 0.20%)</title><rect x="36.4454%" y="197" width="0.2048%" height="15" fill="rgb(214,135,41)" fg:x="15841" fg:w="89"/><text x="36.7384%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.6502%" y="165" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="15930" fg:w="5"/><text x="36.9431%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="36.6502%" y="181" width="0.0897%" height="15" fill="rgb(222,189,50)" fg:x="15930" fg:w="39"/><text x="36.9431%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.7399%" y="181" width="0.1887%" height="15" fill="rgb(245,148,34)" fg:x="15969" fg:w="82"/><text x="37.0329%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.9286%" y="165" width="0.0115%" height="15" fill="rgb(222,29,6)" fg:x="16051" fg:w="5"/><text x="37.2215%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="36.9401%" y="149" width="0.1219%" height="15" fill="rgb(221,189,43)" fg:x="16056" fg:w="53"/><text x="37.2330%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="37.0620%" y="149" width="0.2025%" height="15" fill="rgb(207,36,27)" fg:x="16109" fg:w="88"/><text x="37.3550%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="37.2645%" y="149" width="0.3727%" height="15" fill="rgb(217,90,24)" fg:x="16197" fg:w="162"/><text x="37.5574%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="36.9401%" y="165" width="1.2424%" height="15" fill="rgb(224,66,35)" fg:x="16056" fg:w="540"/><text x="37.2330%" y="175.50"></text></g><g><title>candid::types::internal::env_add (749 instructions, 1.72%)</title><rect x="36.9286%" y="181" width="1.7232%" height="15" fill="rgb(221,13,50)" fg:x="16051" fg:w="749"/><text x="37.2215%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.6518%" y="181" width="0.1887%" height="15" fill="rgb(236,68,49)" fg:x="16800" fg:w="82"/><text x="38.9448%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="38.8404%" y="165" width="0.0115%" height="15" fill="rgb(229,146,28)" fg:x="16882" fg:w="5"/><text x="39.1334%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="38.8519%" y="149" width="0.1219%" height="15" fill="rgb(225,31,38)" fg:x="16887" fg:w="53"/><text x="39.1449%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="38.9739%" y="149" width="0.2025%" height="15" fill="rgb(250,208,3)" fg:x="16940" fg:w="88"/><text x="39.2669%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="39.1763%" y="149" width="0.3727%" height="15" fill="rgb(246,54,23)" fg:x="17028" fg:w="162"/><text x="39.4693%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="38.8519%" y="165" width="1.2424%" height="15" fill="rgb(243,76,11)" fg:x="16887" fg:w="540"/><text x="39.1449%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.0943%" y="165" width="0.1564%" height="15" fill="rgb(245,21,50)" fg:x="17427" fg:w="68"/><text x="40.3873%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.2508%" y="149" width="0.1864%" height="15" fill="rgb(228,9,43)" fg:x="17495" fg:w="81"/><text x="40.5437%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="40.2508%" y="165" width="0.2485%" height="15" fill="rgb(208,100,47)" fg:x="17495" fg:w="108"/><text x="40.5437%" y="175.50"></text></g><g><title>candid::types::internal::env_add (890 instructions, 2.05%)</title><rect x="38.8404%" y="181" width="2.0476%" height="15" fill="rgb(232,26,8)" fg:x="16882" fg:w="890"/><text x="39.1334%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="40.8881%" y="133" width="0.1219%" height="15" fill="rgb(216,166,38)" fg:x="17772" fg:w="53"/><text x="41.1810%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="40.8881%" y="149" width="0.1795%" height="15" fill="rgb(251,202,51)" fg:x="17772" fg:w="78"/><text x="41.1810%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.67%)</title><rect x="40.8881%" y="165" width="0.6741%" height="15" fill="rgb(254,216,34)" fg:x="17772" fg:w="293"/><text x="41.1810%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1310 (15 instructions, 0.03%)</title><rect x="41.5622%" y="165" width="0.0345%" height="15" fill="rgb(251,32,27)" fg:x="18065" fg:w="15"/><text x="41.8551%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.5967%" y="165" width="0.0253%" height="15" fill="rgb(208,127,28)" fg:x="18080" fg:w="11"/><text x="41.8897%" y="175.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.10%)</title><rect x="40.8881%" y="181" width="1.0997%" height="15" fill="rgb(224,137,22)" fg:x="17772" fg:w="478"/><text x="41.1810%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,427 instructions, 5.58%)</title><rect x="36.6502%" y="197" width="5.5838%" height="15" fill="rgb(254,70,32)" fg:x="15930" fg:w="2427"/><text x="36.9431%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.2340%" y="165" width="0.1749%" height="15" fill="rgb(229,75,37)" fg:x="18357" fg:w="76"/><text x="42.5270%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="42.2340%" y="181" width="0.2531%" height="15" fill="rgb(252,64,23)" fg:x="18357" fg:w="110"/><text x="42.5270%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.41%)</title><rect x="42.2340%" y="197" width="0.4095%" height="15" fill="rgb(232,162,48)" fg:x="18357" fg:w="178"/><text x="42.5270%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.6435%" y="181" width="0.0414%" height="15" fill="rgb(246,160,12)" fg:x="18535" fg:w="18"/><text x="42.9365%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.6849%" y="181" width="0.0253%" height="15" fill="rgb(247,166,0)" fg:x="18553" fg:w="11"/><text x="42.9779%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (81 instructions, 0.19%)</title><rect x="42.6435%" y="197" width="0.1864%" height="15" fill="rgb(249,219,21)" fg:x="18535" fg:w="81"/><text x="42.9365%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.8299%" y="197" width="0.0253%" height="15" fill="rgb(205,209,3)" fg:x="18616" fg:w="11"/><text x="43.1228%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="42.8552%" y="165" width="0.1633%" height="15" fill="rgb(243,44,1)" fg:x="18627" fg:w="71"/><text x="43.1481%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="42.8552%" y="181" width="0.2416%" height="15" fill="rgb(206,159,16)" fg:x="18627" fg:w="105"/><text x="43.1481%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="43.2463%" y="165" width="0.2715%" height="15" fill="rgb(244,77,30)" fg:x="18797" fg:w="118"/><text x="43.5393%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="43.2463%" y="181" width="0.3497%" height="15" fill="rgb(218,69,12)" fg:x="18797" fg:w="152"/><text x="43.5393%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (387 instructions, 0.89%)</title><rect x="42.8552%" y="197" width="0.8904%" height="15" fill="rgb(212,87,7)" fg:x="18627" fg:w="387"/><text x="43.1481%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="43.7455%" y="149" width="0.1749%" height="15" fill="rgb(245,114,25)" fg:x="19014" fg:w="76"/><text x="44.0385%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="43.7455%" y="165" width="0.2531%" height="15" fill="rgb(210,61,42)" fg:x="19014" fg:w="110"/><text x="44.0385%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="43.7455%" y="181" width="0.4026%" height="15" fill="rgb(211,52,33)" fg:x="19014" fg:w="175"/><text x="44.0385%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.1482%" y="181" width="0.0253%" height="15" fill="rgb(234,58,33)" fg:x="19189" fg:w="11"/><text x="44.4411%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="44.1735%" y="133" width="0.1633%" height="15" fill="rgb(220,115,36)" fg:x="19200" fg:w="71"/><text x="44.4664%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="44.1735%" y="149" width="0.2416%" height="15" fill="rgb(243,153,54)" fg:x="19200" fg:w="105"/><text x="44.4664%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (170 instructions, 0.39%)</title><rect x="44.1735%" y="165" width="0.3911%" height="15" fill="rgb(251,47,18)" fg:x="19200" fg:w="170"/><text x="44.4664%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (231 instructions, 0.53%)</title><rect x="44.1735%" y="181" width="0.5315%" height="15" fill="rgb(242,102,42)" fg:x="19200" fg:w="231"/><text x="44.4664%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="44.7049%" y="181" width="0.0690%" height="15" fill="rgb(234,31,38)" fg:x="19431" fg:w="30"/><text x="44.9979%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="44.7740%" y="181" width="0.1864%" height="15" fill="rgb(221,117,51)" fg:x="19461" fg:w="81"/><text x="45.0669%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (731 instructions, 1.68%)</title><rect x="43.7455%" y="197" width="1.6818%" height="15" fill="rgb(212,20,18)" fg:x="19014" fg:w="731"/><text x="44.0385%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.4274%" y="197" width="0.1380%" height="15" fill="rgb(245,133,36)" fg:x="19745" fg:w="60"/><text x="45.7203%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.5654%" y="149" width="0.1795%" height="15" fill="rgb(212,6,19)" fg:x="19805" fg:w="78"/><text x="45.8584%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="45.7449%" y="149" width="0.4486%" height="15" fill="rgb(218,1,36)" fg:x="19883" fg:w="195"/><text x="46.0378%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.1935%" y="149" width="0.1864%" height="15" fill="rgb(246,84,54)" fg:x="20078" fg:w="81"/><text x="46.4865%" y="159.50"></text></g><g><title>__rust_realloc (440 instructions, 1.01%)</title><rect x="45.5654%" y="165" width="1.0123%" height="15" fill="rgb(242,110,6)" fg:x="19805" fg:w="440"/><text x="45.8584%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (475 instructions, 1.09%)</title><rect x="45.5654%" y="181" width="1.0928%" height="15" fill="rgb(214,47,5)" fg:x="19805" fg:w="475"/><text x="45.8584%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (548 instructions, 1.26%)</title><rect x="45.5654%" y="197" width="1.2608%" height="15" fill="rgb(218,159,25)" fg:x="19805" fg:w="548"/><text x="45.8584%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="46.8262%" y="197" width="0.3106%" height="15" fill="rgb(215,211,28)" fg:x="20353" fg:w="135"/><text x="47.1192%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="47.1368%" y="181" width="0.0115%" height="15" fill="rgb(238,59,32)" fg:x="20488" fg:w="5"/><text x="47.4297%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.1483%" y="181" width="0.0253%" height="15" fill="rgb(226,82,3)" fg:x="20493" fg:w="11"/><text x="47.4412%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.1736%" y="181" width="0.1864%" height="15" fill="rgb(240,164,32)" fg:x="20504" fg:w="81"/><text x="47.4666%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.3599%" y="181" width="0.2899%" height="15" fill="rgb(232,46,7)" fg:x="20585" fg:w="126"/><text x="47.6529%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.6498%" y="181" width="0.2899%" height="15" fill="rgb(229,129,53)" fg:x="20711" fg:w="126"/><text x="47.9428%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (417 instructions, 0.96%)</title><rect x="47.1368%" y="197" width="0.9594%" height="15" fill="rgb(234,188,29)" fg:x="20488" fg:w="417"/><text x="47.4297%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="48.0962%" y="197" width="0.1795%" height="15" fill="rgb(246,141,4)" fg:x="20905" fg:w="78"/><text x="48.3891%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.2756%" y="197" width="0.1887%" height="15" fill="rgb(229,23,39)" fg:x="20983" fg:w="82"/><text x="48.5686%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.4643%" y="197" width="0.0460%" height="15" fill="rgb(206,12,3)" fg:x="21065" fg:w="20"/><text x="48.7573%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.5103%" y="181" width="0.1219%" height="15" fill="rgb(252,226,20)" fg:x="21085" fg:w="53"/><text x="48.8033%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.5103%" y="197" width="0.1564%" height="15" fill="rgb(216,123,35)" fg:x="21085" fg:w="68"/><text x="48.8033%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.6667%" y="197" width="0.0414%" height="15" fill="rgb(212,68,40)" fg:x="21153" fg:w="18"/><text x="48.9597%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,412 instructions, 17.05%)</title><rect x="34.6601%" y="213" width="17.0528%" height="15" fill="rgb(254,125,32)" fg:x="15065" fg:w="7412"/><text x="34.9530%" y="223.50">ic_cdk_timers::global_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="51.7129%" y="213" width="0.0276%" height="15" fill="rgb(253,97,22)" fg:x="22477" fg:w="12"/><text x="52.0058%" y="223.50"></text></g><g><title>canister_global_timer (7,683 instructions, 17.68%)</title><rect x="34.2620%" y="229" width="17.6763%" height="15" fill="rgb(241,101,14)" fg:x="14892" fg:w="7683"/><text x="34.5550%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="51.9383%" y="213" width="0.2715%" height="15" fill="rgb(238,103,29)" fg:x="22575" fg:w="118"/><text x="52.2313%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.2098%" y="213" width="0.2669%" height="15" fill="rgb(233,195,47)" fg:x="22693" fg:w="116"/><text x="52.5028%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.4767%" y="213" width="0.3796%" height="15" fill="rgb(246,218,30)" fg:x="22809" fg:w="165"/><text x="52.7697%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="52.8563%" y="213" width="0.1265%" height="15" fill="rgb(219,145,47)" fg:x="22974" fg:w="55"/><text x="53.1493%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="52.9829%" y="197" width="0.1749%" height="15" fill="rgb(243,12,26)" fg:x="23029" fg:w="76"/><text x="53.2758%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.1577%" y="197" width="0.2669%" height="15" fill="rgb(214,87,16)" fg:x="23105" fg:w="116"/><text x="53.4507%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.4246%" y="197" width="0.3796%" height="15" fill="rgb(208,99,42)" fg:x="23221" fg:w="165"/><text x="53.7176%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.8042%" y="197" width="0.1265%" height="15" fill="rgb(253,99,2)" fg:x="23386" fg:w="55"/><text x="54.0972%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="52.9829%" y="213" width="1.1688%" height="15" fill="rgb(220,168,23)" fg:x="23029" fg:w="508"/><text x="53.2758%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.41%)</title><rect x="54.1516%" y="213" width="1.4126%" height="15" fill="rgb(242,38,24)" fg:x="23537" fg:w="614"/><text x="54.4446%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="55.5642%" y="213" width="0.1633%" height="15" fill="rgb(225,182,9)" fg:x="24151" fg:w="71"/><text x="55.8572%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="55.7276%" y="197" width="0.1587%" height="15" fill="rgb(243,178,37)" fg:x="24222" fg:w="69"/><text x="56.0206%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="55.8863%" y="197" width="0.9341%" height="15" fill="rgb(232,139,19)" fg:x="24291" fg:w="406"/><text x="56.1793%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="56.8204%" y="197" width="0.1887%" height="15" fill="rgb(225,201,24)" fg:x="24697" fg:w="82"/><text x="57.1134%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.0091%" y="197" width="0.1242%" height="15" fill="rgb(221,47,46)" fg:x="24779" fg:w="54"/><text x="57.3021%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.1333%" y="197" width="0.1242%" height="15" fill="rgb(249,23,13)" fg:x="24833" fg:w="54"/><text x="57.4263%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.2576%" y="197" width="0.1242%" height="15" fill="rgb(219,9,5)" fg:x="24887" fg:w="54"/><text x="57.5505%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.3818%" y="197" width="0.1242%" height="15" fill="rgb(254,171,16)" fg:x="24941" fg:w="54"/><text x="57.6748%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="57.5060%" y="197" width="0.1587%" height="15" fill="rgb(230,171,20)" fg:x="24995" fg:w="69"/><text x="57.7990%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="57.6648%" y="197" width="0.1495%" height="15" fill="rgb(210,71,41)" fg:x="25064" fg:w="65"/><text x="57.9578%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="57.8143%" y="197" width="0.9341%" height="15" fill="rgb(206,173,20)" fg:x="25129" fg:w="406"/><text x="58.1073%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="58.7484%" y="197" width="0.0368%" height="15" fill="rgb(233,88,34)" fg:x="25535" fg:w="16"/><text x="59.0414%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="58.7852%" y="181" width="0.1887%" height="15" fill="rgb(223,209,46)" fg:x="25551" fg:w="82"/><text x="59.0782%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="58.9739%" y="149" width="0.1380%" height="15" fill="rgb(250,43,18)" fg:x="25633" fg:w="60"/><text x="59.2669%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="58.9739%" y="165" width="0.1956%" height="15" fill="rgb(208,13,10)" fg:x="25633" fg:w="85"/><text x="59.2669%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.1694%" y="117" width="0.0207%" height="15" fill="rgb(212,200,36)" fg:x="25718" fg:w="9"/><text x="59.4624%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.1902%" y="101" width="0.0690%" height="15" fill="rgb(225,90,30)" fg:x="25727" fg:w="30"/><text x="59.4831%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.1902%" y="117" width="0.1265%" height="15" fill="rgb(236,182,39)" fg:x="25727" fg:w="55"/><text x="59.4831%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="59.1694%" y="133" width="0.2715%" height="15" fill="rgb(212,144,35)" fg:x="25718" fg:w="118"/><text x="59.4624%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="59.1694%" y="149" width="0.3934%" height="15" fill="rgb(228,63,44)" fg:x="25718" fg:w="171"/><text x="59.4624%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="59.1694%" y="165" width="0.4049%" height="15" fill="rgb(228,109,6)" fg:x="25718" fg:w="176"/><text x="59.4624%" y="175.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="58.9739%" y="181" width="0.8559%" height="15" fill="rgb(238,117,24)" fg:x="25633" fg:w="372"/><text x="59.2669%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="58.7852%" y="197" width="1.3689%" height="15" fill="rgb(242,26,26)" fg:x="25551" fg:w="595"/><text x="59.0782%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="60.1541%" y="197" width="0.1887%" height="15" fill="rgb(221,92,48)" fg:x="26146" fg:w="82"/><text x="60.4471%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="60.3428%" y="197" width="0.1288%" height="15" fill="rgb(209,209,32)" fg:x="26228" fg:w="56"/><text x="60.6358%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="60.4716%" y="197" width="0.1449%" height="15" fill="rgb(221,70,22)" fg:x="26284" fg:w="63"/><text x="60.7646%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="60.6166%" y="197" width="0.1495%" height="15" fill="rgb(248,145,5)" fg:x="26347" fg:w="65"/><text x="60.9096%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="60.7661%" y="181" width="0.9341%" height="15" fill="rgb(226,116,26)" fg:x="26412" fg:w="406"/><text x="61.0591%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="61.7002%" y="181" width="0.0368%" height="15" fill="rgb(244,5,17)" fg:x="26818" fg:w="16"/><text x="61.9932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.7370%" y="165" width="0.1887%" height="15" fill="rgb(252,159,33)" fg:x="26834" fg:w="82"/><text x="62.0300%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="61.9257%" y="133" width="0.1380%" height="15" fill="rgb(206,71,0)" fg:x="26916" fg:w="60"/><text x="62.2187%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="61.9257%" y="149" width="0.1956%" height="15" fill="rgb(233,118,54)" fg:x="26916" fg:w="85"/><text x="62.2187%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.1212%" y="101" width="0.0207%" height="15" fill="rgb(234,83,48)" fg:x="27001" fg:w="9"/><text x="62.4142%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.1420%" y="85" width="0.0690%" height="15" fill="rgb(228,3,54)" fg:x="27010" fg:w="30"/><text x="62.4349%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.1420%" y="101" width="0.1265%" height="15" fill="rgb(226,155,13)" fg:x="27010" fg:w="55"/><text x="62.4349%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="62.1212%" y="117" width="0.2715%" height="15" fill="rgb(241,28,37)" fg:x="27001" fg:w="118"/><text x="62.4142%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="62.1212%" y="133" width="0.3934%" height="15" fill="rgb(233,93,10)" fg:x="27001" fg:w="171"/><text x="62.4142%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="62.1212%" y="149" width="0.4049%" height="15" fill="rgb(225,113,19)" fg:x="27001" fg:w="176"/><text x="62.4142%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="61.9257%" y="165" width="0.8559%" height="15" fill="rgb(241,2,18)" fg:x="26916" fg:w="372"/><text x="62.2187%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="61.7370%" y="181" width="1.3689%" height="15" fill="rgb(228,207,21)" fg:x="26834" fg:w="595"/><text x="62.0300%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="63.1059%" y="181" width="0.1887%" height="15" fill="rgb(213,211,35)" fg:x="27429" fg:w="82"/><text x="63.3989%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="63.2946%" y="181" width="0.1288%" height="15" fill="rgb(209,83,10)" fg:x="27511" fg:w="56"/><text x="63.5876%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="63.4234%" y="165" width="0.1587%" height="15" fill="rgb(209,164,1)" fg:x="27567" fg:w="69"/><text x="63.7164%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="63.5822%" y="165" width="0.2094%" height="15" fill="rgb(213,184,43)" fg:x="27636" fg:w="91"/><text x="63.8752%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="63.7916%" y="165" width="0.1449%" height="15" fill="rgb(231,61,34)" fg:x="27727" fg:w="63"/><text x="64.0845%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="63.4234%" y="181" width="0.6488%" height="15" fill="rgb(235,75,3)" fg:x="27567" fg:w="282"/><text x="63.7164%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.0722%" y="181" width="0.1887%" height="15" fill="rgb(220,106,47)" fg:x="27849" fg:w="82"/><text x="64.3652%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.96%)</title><rect x="60.7661%" y="197" width="3.9618%" height="15" fill="rgb(210,196,33)" fg:x="26412" fg:w="1722"/><text x="61.0591%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="64.7279%" y="197" width="0.1449%" height="15" fill="rgb(229,154,42)" fg:x="28134" fg:w="63"/><text x="65.0209%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.8729%" y="197" width="0.0299%" height="15" fill="rgb(228,114,26)" fg:x="28197" fg:w="13"/><text x="65.1659%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.9028%" y="197" width="0.0299%" height="15" fill="rgb(208,144,1)" fg:x="28210" fg:w="13"/><text x="65.1958%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="64.9327%" y="197" width="0.0161%" height="15" fill="rgb(239,112,37)" fg:x="28223" fg:w="7"/><text x="65.2257%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="64.9488%" y="197" width="0.0345%" height="15" fill="rgb(210,96,50)" fg:x="28230" fg:w="15"/><text x="65.2418%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.9833%" y="181" width="0.1887%" height="15" fill="rgb(222,178,2)" fg:x="28245" fg:w="82"/><text x="65.2763%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="64.9833%" y="197" width="0.3796%" height="15" fill="rgb(226,74,18)" fg:x="28245" fg:w="165"/><text x="65.2763%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.3629%" y="165" width="0.1887%" height="15" fill="rgb(225,67,54)" fg:x="28410" fg:w="82"/><text x="65.6559%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="65.3629%" y="181" width="0.2669%" height="15" fill="rgb(251,92,32)" fg:x="28410" fg:w="116"/><text x="65.6559%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="65.3629%" y="197" width="0.4233%" height="15" fill="rgb(228,149,22)" fg:x="28410" fg:w="184"/><text x="65.6559%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.7863%" y="197" width="0.1887%" height="15" fill="rgb(243,54,13)" fg:x="28594" fg:w="82"/><text x="66.0792%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="65.9749%" y="197" width="0.1864%" height="15" fill="rgb(243,180,28)" fg:x="28676" fg:w="81"/><text x="66.2679%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.1613%" y="197" width="0.1887%" height="15" fill="rgb(208,167,24)" fg:x="28757" fg:w="82"/><text x="66.4542%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.3499%" y="197" width="0.1887%" height="15" fill="rgb(245,73,45)" fg:x="28839" fg:w="82"/><text x="66.6429%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.5432%" y="197" width="0.1864%" height="15" fill="rgb(237,203,48)" fg:x="28923" fg:w="81"/><text x="66.8362%" y="207.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="66.7296%" y="197" width="0.9180%" height="15" fill="rgb(211,197,16)" fg:x="29004" fg:w="399"/><text x="67.0225%" y="207.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="67.6475%" y="197" width="0.9180%" height="15" fill="rgb(243,99,51)" fg:x="29403" fg:w="399"/><text x="67.9405%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,507 instructions, 14.97%)</title><rect x="55.7276%" y="213" width="14.9707%" height="15" fill="rgb(215,123,29)" fg:x="24222" fg:w="6507"/><text x="56.0206%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="70.6983%" y="213" width="0.8144%" height="15" fill="rgb(239,186,37)" fg:x="30729" fg:w="354"/><text x="70.9912%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.5127%" y="181" width="0.0115%" height="15" fill="rgb(252,136,39)" fg:x="31083" fg:w="5"/><text x="71.8057%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.5242%" y="165" width="0.1219%" height="15" fill="rgb(223,213,32)" fg:x="31088" fg:w="53"/><text x="71.8172%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="71.6462%" y="165" width="0.2025%" height="15" fill="rgb(233,115,5)" fg:x="31141" fg:w="88"/><text x="71.9391%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="71.8486%" y="165" width="0.3727%" height="15" fill="rgb(207,226,44)" fg:x="31229" fg:w="162"/><text x="72.1416%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="71.5242%" y="181" width="1.2424%" height="15" fill="rgb(208,126,0)" fg:x="31088" fg:w="540"/><text x="71.8172%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.7666%" y="181" width="0.1564%" height="15" fill="rgb(244,66,21)" fg:x="31628" fg:w="68"/><text x="73.0596%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (771 instructions, 1.77%)</title><rect x="71.5127%" y="197" width="1.7738%" height="15" fill="rgb(222,97,12)" fg:x="31083" fg:w="771"/><text x="71.8057%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (803 instructions, 1.85%)</title><rect x="71.5127%" y="213" width="1.8475%" height="15" fill="rgb(219,213,19)" fg:x="31083" fg:w="803"/><text x="71.8057%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="73.3602%" y="213" width="0.1081%" height="15" fill="rgb(252,169,30)" fg:x="31886" fg:w="47"/><text x="73.6531%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.4683%" y="197" width="0.1288%" height="15" fill="rgb(206,32,51)" fg:x="31933" fg:w="56"/><text x="73.7613%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.6593%" y="197" width="0.1288%" height="15" fill="rgb(250,172,42)" fg:x="32016" fg:w="56"/><text x="73.9522%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.38%)</title><rect x="73.4683%" y="213" width="0.3819%" height="15" fill="rgb(209,34,43)" fg:x="31933" fg:w="166"/><text x="73.7613%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.8502%" y="197" width="0.0644%" height="15" fill="rgb(223,11,35)" fg:x="32099" fg:w="28"/><text x="74.1432%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (101 instructions, 0.23%)</title><rect x="73.8502%" y="213" width="0.2324%" height="15" fill="rgb(251,219,26)" fg:x="32099" fg:w="101"/><text x="74.1432%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.0826%" y="213" width="0.0253%" height="15" fill="rgb(231,119,3)" fg:x="32200" fg:w="11"/><text x="74.3756%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1079%" y="213" width="0.0253%" height="15" fill="rgb(216,97,11)" fg:x="32211" fg:w="11"/><text x="74.4009%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1332%" y="213" width="0.0253%" height="15" fill="rgb(223,59,9)" fg:x="32222" fg:w="11"/><text x="74.4262%" y="223.50"></text></g><g><title>memcpy (410 instructions, 0.94%)</title><rect x="74.1585%" y="213" width="0.9433%" height="15" fill="rgb(233,93,31)" fg:x="32233" fg:w="410"/><text x="74.4515%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.1018%" y="181" width="0.0276%" height="15" fill="rgb(239,81,33)" fg:x="32643" fg:w="12"/><text x="75.3948%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.1294%" y="181" width="0.2324%" height="15" fill="rgb(213,120,34)" fg:x="32655" fg:w="101"/><text x="75.4224%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.3618%" y="165" width="0.2324%" height="15" fill="rgb(243,49,53)" fg:x="32756" fg:w="101"/><text x="75.6548%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (128 instructions, 0.29%)</title><rect x="75.3618%" y="181" width="0.2945%" height="15" fill="rgb(247,216,33)" fg:x="32756" fg:w="128"/><text x="75.6548%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.6563%" y="181" width="0.0253%" height="15" fill="rgb(226,26,14)" fg:x="32884" fg:w="11"/><text x="75.9492%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (292 instructions, 0.67%)</title><rect x="75.1018%" y="197" width="0.6718%" height="15" fill="rgb(215,49,53)" fg:x="32643" fg:w="292"/><text x="75.3948%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (330 instructions, 0.76%)</title><rect x="75.1018%" y="213" width="0.7592%" height="15" fill="rgb(245,162,40)" fg:x="32643" fg:w="330"/><text x="75.3948%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.8610%" y="213" width="0.1864%" height="15" fill="rgb(229,68,17)" fg:x="32973" fg:w="81"/><text x="76.1540%" y="223.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (9 instructions, 0.02%)</title><rect x="76.0474%" y="213" width="0.0207%" height="15" fill="rgb(213,182,10)" fg:x="33054" fg:w="9"/><text x="76.3404%" y="223.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (9 instructions, 0.02%)</title><rect x="76.0681%" y="213" width="0.0207%" height="15" fill="rgb(245,125,30)" fg:x="33063" fg:w="9"/><text x="76.3611%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.0888%" y="197" width="0.0115%" height="15" fill="rgb(232,202,2)" fg:x="33072" fg:w="5"/><text x="76.3818%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.1003%" y="181" width="0.1864%" height="15" fill="rgb(237,140,51)" fg:x="33077" fg:w="81"/><text x="76.3933%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.1003%" y="197" width="0.2485%" height="15" fill="rgb(236,157,25)" fg:x="33077" fg:w="108"/><text x="76.3933%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.3488%" y="197" width="0.3129%" height="15" fill="rgb(219,209,0)" fg:x="33185" fg:w="136"/><text x="76.6418%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (409 instructions, 0.94%)</title><rect x="76.0888%" y="213" width="0.9410%" height="15" fill="rgb(240,116,54)" fg:x="33072" fg:w="409"/><text x="76.3818%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="77.0298%" y="213" width="0.0736%" height="15" fill="rgb(216,10,36)" fg:x="33481" fg:w="32"/><text x="77.3228%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="77.1034%" y="165" width="0.2715%" height="15" fill="rgb(222,72,44)" fg:x="33513" fg:w="118"/><text x="77.3964%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="77.1034%" y="181" width="0.3497%" height="15" fill="rgb(232,159,9)" fg:x="33513" fg:w="152"/><text x="77.3964%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.50%)</title><rect x="77.1034%" y="197" width="0.4993%" height="15" fill="rgb(210,39,32)" fg:x="33513" fg:w="217"/><text x="77.3964%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6027%" y="197" width="0.0253%" height="15" fill="rgb(216,194,45)" fg:x="33730" fg:w="11"/><text x="77.8956%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6280%" y="197" width="0.0253%" height="15" fill="rgb(218,18,35)" fg:x="33741" fg:w="11"/><text x="77.9209%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (401 instructions, 0.92%)</title><rect x="77.1034%" y="213" width="0.9226%" height="15" fill="rgb(207,83,51)" fg:x="33513" fg:w="401"/><text x="77.3964%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="78.0260%" y="213" width="0.0690%" height="15" fill="rgb(225,63,43)" fg:x="33914" fg:w="30"/><text x="78.3190%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.0950%" y="213" width="0.0115%" height="15" fill="rgb(207,57,36)" fg:x="33944" fg:w="5"/><text x="78.3880%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.1065%" y="197" width="0.0115%" height="15" fill="rgb(216,99,33)" fg:x="33949" fg:w="5"/><text x="78.3995%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.1180%" y="197" width="0.1265%" height="15" fill="rgb(225,42,16)" fg:x="33954" fg:w="55"/><text x="78.4110%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (110 instructions, 0.25%)</title><rect x="78.1065%" y="213" width="0.2531%" height="15" fill="rgb(220,201,45)" fg:x="33949" fg:w="110"/><text x="78.3995%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,135 instructions, 27.92%)</title><rect x="51.9383%" y="229" width="27.9190%" height="15" fill="rgb(225,33,4)" fg:x="22575" fg:w="12135"/><text x="52.2313%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="79.8574%" y="213" width="0.1749%" height="15" fill="rgb(224,33,50)" fg:x="34710" fg:w="76"/><text x="80.1503%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.0322%" y="165" width="0.0437%" height="15" fill="rgb(246,198,51)" fg:x="34786" fg:w="19"/><text x="80.3252%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="80.0759%" y="149" width="0.1587%" height="15" fill="rgb(205,22,4)" fg:x="34805" fg:w="69"/><text x="80.3689%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="80.2347%" y="149" width="0.9341%" height="15" fill="rgb(206,3,8)" fg:x="34874" fg:w="406"/><text x="80.5276%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="81.1688%" y="149" width="0.1887%" height="15" fill="rgb(251,23,15)" fg:x="35280" fg:w="82"/><text x="81.4617%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.3574%" y="149" width="0.1242%" height="15" fill="rgb(252,88,28)" fg:x="35362" fg:w="54"/><text x="81.6504%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.4817%" y="149" width="0.1242%" height="15" fill="rgb(212,127,14)" fg:x="35416" fg:w="54"/><text x="81.7746%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.6059%" y="149" width="0.1242%" height="15" fill="rgb(247,145,37)" fg:x="35470" fg:w="54"/><text x="81.8989%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.7301%" y="149" width="0.1242%" height="15" fill="rgb(209,117,53)" fg:x="35524" fg:w="54"/><text x="82.0231%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="81.8544%" y="149" width="0.1587%" height="15" fill="rgb(212,90,42)" fg:x="35578" fg:w="69"/><text x="82.1473%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="82.0131%" y="149" width="0.1495%" height="15" fill="rgb(218,164,37)" fg:x="35647" fg:w="65"/><text x="82.3061%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="82.1627%" y="149" width="0.9341%" height="15" fill="rgb(246,65,34)" fg:x="35712" fg:w="406"/><text x="82.4556%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.0967%" y="149" width="0.0368%" height="15" fill="rgb(231,100,33)" fg:x="36118" fg:w="16"/><text x="83.3897%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="83.1336%" y="133" width="0.1633%" height="15" fill="rgb(228,126,14)" fg:x="36134" fg:w="71"/><text x="83.4265%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.2969%" y="101" width="0.1380%" height="15" fill="rgb(215,173,21)" fg:x="36205" fg:w="60"/><text x="83.5899%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.2969%" y="117" width="0.1956%" height="15" fill="rgb(210,6,40)" fg:x="36205" fg:w="85"/><text x="83.5899%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.4925%" y="69" width="0.0207%" height="15" fill="rgb(212,48,18)" fg:x="36290" fg:w="9"/><text x="83.7854%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.5132%" y="53" width="0.0690%" height="15" fill="rgb(230,214,11)" fg:x="36299" fg:w="30"/><text x="83.8061%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.5132%" y="69" width="0.1265%" height="15" fill="rgb(254,105,39)" fg:x="36299" fg:w="55"/><text x="83.8061%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="83.4925%" y="85" width="0.2715%" height="15" fill="rgb(245,158,5)" fg:x="36290" fg:w="118"/><text x="83.7854%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="83.4925%" y="101" width="0.3934%" height="15" fill="rgb(249,208,11)" fg:x="36290" fg:w="171"/><text x="83.7854%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="83.4925%" y="117" width="0.4049%" height="15" fill="rgb(210,39,28)" fg:x="36290" fg:w="176"/><text x="83.7854%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="83.2969%" y="133" width="0.8559%" height="15" fill="rgb(211,56,53)" fg:x="36205" fg:w="372"/><text x="83.5899%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.34%)</title><rect x="83.1336%" y="149" width="1.3436%" height="15" fill="rgb(226,201,30)" fg:x="36134" fg:w="584"/><text x="83.4265%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="84.4772%" y="149" width="0.1887%" height="15" fill="rgb(239,101,34)" fg:x="36718" fg:w="82"/><text x="84.7701%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.6658%" y="149" width="0.1864%" height="15" fill="rgb(226,209,5)" fg:x="36800" fg:w="81"/><text x="84.9588%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="84.8522%" y="149" width="0.1449%" height="15" fill="rgb(250,105,47)" fg:x="36881" fg:w="63"/><text x="85.1451%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.9971%" y="149" width="0.1495%" height="15" fill="rgb(230,72,3)" fg:x="36944" fg:w="65"/><text x="85.2901%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.93%)</title><rect x="85.1467%" y="133" width="0.9341%" height="15" fill="rgb(232,218,39)" fg:x="37009" fg:w="406"/><text x="85.4396%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.0808%" y="133" width="0.0368%" height="15" fill="rgb(248,166,6)" fg:x="37415" fg:w="16"/><text x="86.3737%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="86.1176%" y="117" width="0.1795%" height="15" fill="rgb(247,89,20)" fg:x="37431" fg:w="78"/><text x="86.4105%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.2970%" y="85" width="0.1380%" height="15" fill="rgb(248,130,54)" fg:x="37509" fg:w="60"/><text x="86.5900%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.2970%" y="101" width="0.1956%" height="15" fill="rgb(234,196,4)" fg:x="37509" fg:w="85"/><text x="86.5900%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.4926%" y="53" width="0.0207%" height="15" fill="rgb(250,143,31)" fg:x="37594" fg:w="9"/><text x="86.7855%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.5133%" y="37" width="0.0690%" height="15" fill="rgb(211,110,34)" fg:x="37603" fg:w="30"/><text x="86.8063%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.5133%" y="53" width="0.1265%" height="15" fill="rgb(215,124,48)" fg:x="37603" fg:w="55"/><text x="86.8063%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="86.4926%" y="69" width="0.2715%" height="15" fill="rgb(216,46,13)" fg:x="37594" fg:w="118"/><text x="86.7855%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="86.4926%" y="85" width="0.3934%" height="15" fill="rgb(205,184,25)" fg:x="37594" fg:w="171"/><text x="86.7855%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="86.4926%" y="101" width="0.4049%" height="15" fill="rgb(228,1,10)" fg:x="37594" fg:w="176"/><text x="86.7855%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="86.2970%" y="117" width="0.8559%" height="15" fill="rgb(213,116,27)" fg:x="37509" fg:w="372"/><text x="86.5900%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.36%)</title><rect x="86.1176%" y="133" width="1.3597%" height="15" fill="rgb(241,95,50)" fg:x="37431" fg:w="591"/><text x="86.4105%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="87.4773%" y="133" width="0.1887%" height="15" fill="rgb(238,48,32)" fg:x="38022" fg:w="82"/><text x="87.7702%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.6659%" y="133" width="0.1864%" height="15" fill="rgb(235,113,49)" fg:x="38104" fg:w="81"/><text x="87.9589%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,335 instructions, 3.07%)</title><rect x="85.1467%" y="149" width="3.0714%" height="15" fill="rgb(205,127,43)" fg:x="37009" fg:w="1335"/><text x="85.4396%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="88.2181%" y="149" width="0.1449%" height="15" fill="rgb(250,162,2)" fg:x="38344" fg:w="63"/><text x="88.5111%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.3631%" y="149" width="0.0299%" height="15" fill="rgb(220,13,41)" fg:x="38407" fg:w="13"/><text x="88.6560%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.3930%" y="149" width="0.0299%" height="15" fill="rgb(249,221,25)" fg:x="38420" fg:w="13"/><text x="88.6859%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.4229%" y="149" width="0.0161%" height="15" fill="rgb(215,208,19)" fg:x="38433" fg:w="7"/><text x="88.7158%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="88.4390%" y="149" width="0.0345%" height="15" fill="rgb(236,175,2)" fg:x="38440" fg:w="15"/><text x="88.7319%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="88.4735%" y="149" width="0.1795%" height="15" fill="rgb(241,52,2)" fg:x="38455" fg:w="78"/><text x="88.7665%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.6529%" y="149" width="0.1887%" height="15" fill="rgb(248,140,14)" fg:x="38533" fg:w="82"/><text x="88.9459%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="88.8462%" y="149" width="0.9180%" height="15" fill="rgb(253,22,42)" fg:x="38617" fg:w="399"/><text x="89.1392%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.92%)</title><rect x="89.7642%" y="149" width="0.9180%" height="15" fill="rgb(234,61,47)" fg:x="39016" fg:w="399"/><text x="90.0571%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,392 instructions, 12.41%)</title><rect x="80.0759%" y="165" width="12.4054%" height="15" fill="rgb(208,226,15)" fg:x="34805" fg:w="5392"/><text x="80.3689%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (354 instructions, 0.81%)</title><rect x="92.4813%" y="165" width="0.8144%" height="15" fill="rgb(217,221,4)" fg:x="40197" fg:w="354"/><text x="92.7743%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="93.2958%" y="133" width="0.0276%" height="15" fill="rgb(212,174,34)" fg:x="40551" fg:w="12"/><text x="93.5887%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.3234%" y="117" width="0.1864%" height="15" fill="rgb(253,83,4)" fg:x="40563" fg:w="81"/><text x="93.6163%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="93.5718%" y="117" width="0.1288%" height="15" fill="rgb(250,195,49)" fg:x="40671" fg:w="56"/><text x="93.8648%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (191 instructions, 0.44%)</title><rect x="93.3234%" y="133" width="0.4394%" height="15" fill="rgb(241,192,25)" fg:x="40563" fg:w="191"/><text x="93.6163%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (240 instructions, 0.55%)</title><rect x="93.2958%" y="149" width="0.5522%" height="15" fill="rgb(208,124,10)" fg:x="40551" fg:w="240"/><text x="93.5887%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (278 instructions, 0.64%)</title><rect x="93.2958%" y="165" width="0.6396%" height="15" fill="rgb(222,33,0)" fg:x="40551" fg:w="278"/><text x="93.5887%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.9354%" y="165" width="0.2830%" height="15" fill="rgb(234,209,28)" fg:x="40829" fg:w="123"/><text x="94.2283%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (125 instructions, 0.29%)</title><rect x="94.2183%" y="165" width="0.2876%" height="15" fill="rgb(224,11,23)" fg:x="40952" fg:w="125"/><text x="94.5113%" y="175.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (9 instructions, 0.02%)</title><rect x="94.5059%" y="165" width="0.0207%" height="15" fill="rgb(232,99,1)" fg:x="41077" fg:w="9"/><text x="94.7989%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (49 instructions, 0.11%)</title><rect x="94.5266%" y="165" width="0.1127%" height="15" fill="rgb(237,95,45)" fg:x="41086" fg:w="49"/><text x="94.8196%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.6394%" y="165" width="0.0299%" height="15" fill="rgb(208,109,11)" fg:x="41135" fg:w="13"/><text x="94.9323%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,123 instructions, 16.39%)</title><rect x="80.0322%" y="181" width="16.3879%" height="15" fill="rgb(216,190,48)" fg:x="34786" fg:w="7123"/><text x="80.3252%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.4201%" y="181" width="0.0276%" height="15" fill="rgb(251,171,36)" fg:x="41909" fg:w="12"/><text x="96.7131%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,217 instructions, 16.60%)</title><rect x="80.0322%" y="197" width="16.6042%" height="15" fill="rgb(230,62,22)" fg:x="34786" fg:w="7217"/><text x="80.3252%" y="207.50">ic_cdk::futures::waker..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.6364%" y="165" width="0.0115%" height="15" fill="rgb(225,114,35)" fg:x="42003" fg:w="5"/><text x="96.9293%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.6479%" y="165" width="0.1864%" height="15" fill="rgb(215,118,42)" fg:x="42008" fg:w="81"/><text x="96.9408%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.8342%" y="165" width="0.1795%" height="15" fill="rgb(243,119,21)" fg:x="42089" fg:w="78"/><text x="97.1272%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (203 instructions, 0.47%)</title><rect x="96.6364%" y="181" width="0.4670%" height="15" fill="rgb(252,177,53)" fg:x="42003" fg:w="203"/><text x="96.9293%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.1034%" y="165" width="0.1864%" height="15" fill="rgb(237,209,29)" fg:x="42206" fg:w="81"/><text x="97.3964%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 instructions, 0.26%)</title><rect x="97.1034%" y="181" width="0.2623%" height="15" fill="rgb(212,65,23)" fg:x="42206" fg:w="114"/><text x="97.3964%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.5060%" y="181" width="0.2830%" height="15" fill="rgb(230,222,46)" fg:x="42381" fg:w="123"/><text x="97.7990%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="97.7890%" y="181" width="0.3865%" height="15" fill="rgb(215,135,32)" fg:x="42504" fg:w="168"/><text x="98.0820%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (715 instructions, 1.65%)</title><rect x="96.6364%" y="197" width="1.6450%" height="15" fill="rgb(246,101,22)" fg:x="42003" fg:w="715"/><text x="96.9293%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,061 instructions, 18.55%)</title><rect x="80.0322%" y="213" width="18.5460%" height="15" fill="rgb(206,107,13)" fg:x="34786" fg:w="8061"/><text x="80.3252%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="98.8681%" y="181" width="0.1449%" height="15" fill="rgb(250,100,44)" fg:x="42973" fg:w="63"/><text x="99.1610%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (334 instructions, 0.77%)</title><rect x="98.5782%" y="197" width="0.7684%" height="15" fill="rgb(231,147,38)" fg:x="42847" fg:w="334"/><text x="98.8711%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (382 instructions, 0.88%)</title><rect x="98.5782%" y="213" width="0.8789%" height="15" fill="rgb(229,8,40)" fg:x="42847" fg:w="382"/><text x="98.8711%" y="223.50"></text></g><g><title>all (43,465 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(221,135,30)" fg:x="0" fg:w="43465"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,755 instructions, 20.14%)</title><rect x="79.8574%" y="229" width="20.1426%" height="15" fill="rgb(249,193,18)" fg:x="34710" fg:w="8755"/><text x="80.1503%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>