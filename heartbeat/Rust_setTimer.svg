<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43295"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1109%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.85%)</title><rect x="0.1109%" y="213" width="0.8523%" height="15" fill="rgb(246,142,3)" fg:x="48" fg:w="369"/><text x="0.4038%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9632%" y="213" width="0.1894%" height="15" fill="rgb(241,25,7)" fg:x="417" fg:w="82"/><text x="1.2561%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1526%" y="197" width="0.1894%" height="15" fill="rgb(242,119,39)" fg:x="499" fg:w="82"/><text x="1.4455%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.12%)</title><rect x="1.3420%" y="165" width="0.1155%" height="15" fill="rgb(241,98,45)" fg:x="581" fg:w="50"/><text x="1.6349%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.30%)</title><rect x="1.3420%" y="181" width="0.3026%" height="15" fill="rgb(254,28,30)" fg:x="581" fg:w="131"/><text x="1.6349%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="1.6445%" y="181" width="0.9378%" height="15" fill="rgb(241,142,54)" fg:x="712" fg:w="406"/><text x="1.9375%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="2.5823%" y="181" width="0.1894%" height="15" fill="rgb(222,85,15)" fg:x="1118" fg:w="82"/><text x="2.8753%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.7717%" y="181" width="0.1247%" height="15" fill="rgb(210,85,47)" fg:x="1200" fg:w="54"/><text x="3.0647%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.8964%" y="181" width="0.1247%" height="15" fill="rgb(224,206,25)" fg:x="1254" fg:w="54"/><text x="3.1894%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.0211%" y="181" width="0.1247%" height="15" fill="rgb(243,201,19)" fg:x="1308" fg:w="54"/><text x="3.3141%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.1459%" y="181" width="0.1247%" height="15" fill="rgb(236,59,4)" fg:x="1362" fg:w="54"/><text x="3.4388%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="3.2706%" y="181" width="0.1594%" height="15" fill="rgb(254,179,45)" fg:x="1416" fg:w="69"/><text x="3.5636%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="3.4300%" y="181" width="0.1501%" height="15" fill="rgb(226,14,10)" fg:x="1485" fg:w="65"/><text x="3.7229%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="3.5801%" y="181" width="0.9378%" height="15" fill="rgb(244,27,41)" fg:x="1550" fg:w="406"/><text x="3.8731%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.5178%" y="181" width="0.0370%" height="15" fill="rgb(235,35,32)" fg:x="1956" fg:w="16"/><text x="4.8108%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5548%" y="165" width="0.1894%" height="15" fill="rgb(218,68,31)" fg:x="1972" fg:w="82"/><text x="4.8478%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7442%" y="133" width="0.1386%" height="15" fill="rgb(207,120,37)" fg:x="2054" fg:w="60"/><text x="5.0372%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7442%" y="149" width="0.1963%" height="15" fill="rgb(227,98,0)" fg:x="2054" fg:w="85"/><text x="5.0372%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9405%" y="101" width="0.0208%" height="15" fill="rgb(207,7,3)" fg:x="2139" fg:w="9"/><text x="5.2335%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9613%" y="85" width="0.0693%" height="15" fill="rgb(206,98,19)" fg:x="2148" fg:w="30"/><text x="5.2543%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9613%" y="101" width="0.1270%" height="15" fill="rgb(217,5,26)" fg:x="2148" fg:w="55"/><text x="5.2543%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="4.9405%" y="117" width="0.2725%" height="15" fill="rgb(235,190,38)" fg:x="2139" fg:w="118"/><text x="5.2335%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="4.9405%" y="133" width="0.3950%" height="15" fill="rgb(247,86,24)" fg:x="2139" fg:w="171"/><text x="5.2335%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="4.9405%" y="149" width="0.4065%" height="15" fill="rgb(205,101,16)" fg:x="2139" fg:w="176"/><text x="5.2335%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="4.7442%" y="165" width="0.8592%" height="15" fill="rgb(246,168,33)" fg:x="2054" fg:w="372"/><text x="5.0372%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="4.5548%" y="181" width="1.3743%" height="15" fill="rgb(231,114,1)" fg:x="1972" fg:w="595"/><text x="4.8478%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="5.9291%" y="181" width="0.1894%" height="15" fill="rgb(207,184,53)" fg:x="2567" fg:w="82"/><text x="6.2221%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="6.1185%" y="181" width="0.1293%" height="15" fill="rgb(224,95,51)" fg:x="2649" fg:w="56"/><text x="6.4115%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="6.2478%" y="181" width="0.1455%" height="15" fill="rgb(212,188,45)" fg:x="2705" fg:w="63"/><text x="6.5408%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="6.3933%" y="181" width="0.1501%" height="15" fill="rgb(223,154,38)" fg:x="2768" fg:w="65"/><text x="6.6863%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="6.5435%" y="165" width="0.9378%" height="15" fill="rgb(251,22,52)" fg:x="2833" fg:w="406"/><text x="6.8364%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.4812%" y="165" width="0.0370%" height="15" fill="rgb(229,209,22)" fg:x="3239" fg:w="16"/><text x="7.7742%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.5182%" y="149" width="0.1894%" height="15" fill="rgb(234,138,34)" fg:x="3255" fg:w="82"/><text x="7.8112%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.7076%" y="117" width="0.1386%" height="15" fill="rgb(212,95,11)" fg:x="3337" fg:w="60"/><text x="8.0006%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.7076%" y="133" width="0.1963%" height="15" fill="rgb(240,179,47)" fg:x="3337" fg:w="85"/><text x="8.0006%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.9039%" y="85" width="0.0208%" height="15" fill="rgb(240,163,11)" fg:x="3422" fg:w="9"/><text x="8.1969%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.9247%" y="69" width="0.0693%" height="15" fill="rgb(236,37,12)" fg:x="3431" fg:w="30"/><text x="8.2177%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.9247%" y="85" width="0.1270%" height="15" fill="rgb(232,164,16)" fg:x="3431" fg:w="55"/><text x="8.2177%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.9039%" y="101" width="0.2725%" height="15" fill="rgb(244,205,15)" fg:x="3422" fg:w="118"/><text x="8.1969%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="7.9039%" y="117" width="0.3950%" height="15" fill="rgb(223,117,47)" fg:x="3422" fg:w="171"/><text x="8.1969%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="7.9039%" y="133" width="0.4065%" height="15" fill="rgb(244,107,35)" fg:x="3422" fg:w="176"/><text x="8.1969%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="7.7076%" y="149" width="0.8592%" height="15" fill="rgb(205,140,8)" fg:x="3337" fg:w="372"/><text x="8.0006%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="7.5182%" y="165" width="1.3743%" height="15" fill="rgb(228,84,46)" fg:x="3255" fg:w="595"/><text x="7.8112%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="8.8925%" y="165" width="0.1894%" height="15" fill="rgb(254,188,9)" fg:x="3850" fg:w="82"/><text x="9.1855%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="9.0819%" y="165" width="0.1293%" height="15" fill="rgb(206,112,54)" fg:x="3932" fg:w="56"/><text x="9.3748%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="9.2112%" y="149" width="0.1594%" height="15" fill="rgb(216,84,49)" fg:x="3988" fg:w="69"/><text x="9.5042%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="9.3706%" y="149" width="0.2102%" height="15" fill="rgb(214,194,35)" fg:x="4057" fg:w="91"/><text x="9.6636%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="9.5808%" y="149" width="0.1455%" height="15" fill="rgb(249,28,3)" fg:x="4148" fg:w="63"/><text x="9.8738%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="9.2112%" y="165" width="0.6513%" height="15" fill="rgb(222,56,52)" fg:x="3988" fg:w="282"/><text x="9.5042%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8626%" y="165" width="0.1894%" height="15" fill="rgb(245,217,50)" fg:x="4270" fg:w="82"/><text x="10.1555%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.98%)</title><rect x="6.5435%" y="181" width="3.9774%" height="15" fill="rgb(213,201,24)" fg:x="2833" fg:w="1722"/><text x="6.8364%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="10.5208%" y="181" width="0.1455%" height="15" fill="rgb(248,116,28)" fg:x="4555" fg:w="63"/><text x="10.8138%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6664%" y="181" width="0.0300%" height="15" fill="rgb(219,72,43)" fg:x="4618" fg:w="13"/><text x="10.9593%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6964%" y="181" width="0.0300%" height="15" fill="rgb(209,138,14)" fg:x="4631" fg:w="13"/><text x="10.9894%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.7264%" y="181" width="0.0162%" height="15" fill="rgb(222,18,33)" fg:x="4644" fg:w="7"/><text x="11.0194%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.7426%" y="181" width="0.0346%" height="15" fill="rgb(213,199,7)" fg:x="4651" fg:w="15"/><text x="11.0355%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.7772%" y="165" width="0.1894%" height="15" fill="rgb(250,110,10)" fg:x="4666" fg:w="82"/><text x="11.0702%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.7772%" y="181" width="0.3811%" height="15" fill="rgb(248,123,6)" fg:x="4666" fg:w="165"/><text x="11.0702%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.1583%" y="149" width="0.1894%" height="15" fill="rgb(206,91,31)" fg:x="4831" fg:w="82"/><text x="11.4513%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="11.1583%" y="165" width="0.2679%" height="15" fill="rgb(211,154,13)" fg:x="4831" fg:w="116"/><text x="11.4513%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="11.1583%" y="181" width="0.4250%" height="15" fill="rgb(225,148,7)" fg:x="4831" fg:w="184"/><text x="11.4513%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.5833%" y="181" width="0.1894%" height="15" fill="rgb(220,160,43)" fg:x="5015" fg:w="82"/><text x="11.8763%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.7727%" y="181" width="0.1871%" height="15" fill="rgb(213,52,39)" fg:x="5097" fg:w="81"/><text x="12.0657%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9598%" y="181" width="0.1894%" height="15" fill="rgb(243,137,7)" fg:x="5178" fg:w="82"/><text x="12.2528%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="12.1492%" y="181" width="0.1894%" height="15" fill="rgb(230,79,13)" fg:x="5260" fg:w="82"/><text x="12.4422%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.3432%" y="181" width="0.1871%" height="15" fill="rgb(247,105,23)" fg:x="5344" fg:w="81"/><text x="12.6362%" y="191.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="12.5303%" y="181" width="0.8777%" height="15" fill="rgb(223,179,41)" fg:x="5425" fg:w="380"/><text x="12.8233%" y="191.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="13.4080%" y="181" width="0.8777%" height="15" fill="rgb(218,9,34)" fg:x="5805" fg:w="380"/><text x="13.7010%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,548 instructions, 15.12%)</title><rect x="1.3420%" y="197" width="15.1241%" height="15" fill="rgb(222,106,8)" fg:x="581" fg:w="6548"/><text x="1.6349%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="16.4661%" y="197" width="0.7738%" height="15" fill="rgb(211,220,0)" fg:x="7129" fg:w="335"/><text x="16.7591%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.12%)</title><rect x="17.2399%" y="181" width="0.1155%" height="15" fill="rgb(229,52,16)" fg:x="7464" fg:w="50"/><text x="17.5328%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.19%)</title><rect x="17.2399%" y="197" width="0.1940%" height="15" fill="rgb(212,155,18)" fg:x="7464" fg:w="84"/><text x="17.5328%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.4339%" y="197" width="0.1894%" height="15" fill="rgb(242,21,14)" fg:x="7548" fg:w="82"/><text x="17.7269%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.6233%" y="181" width="0.0115%" height="15" fill="rgb(222,19,48)" fg:x="7630" fg:w="5"/><text x="17.9163%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.6348%" y="165" width="0.1224%" height="15" fill="rgb(232,45,27)" fg:x="7635" fg:w="53"/><text x="17.9278%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="17.7572%" y="165" width="0.2033%" height="15" fill="rgb(249,103,42)" fg:x="7688" fg:w="88"/><text x="18.0502%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="17.9605%" y="165" width="0.3742%" height="15" fill="rgb(246,81,33)" fg:x="7776" fg:w="162"/><text x="18.2535%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.25%)</title><rect x="17.6348%" y="181" width="1.2473%" height="15" fill="rgb(252,33,42)" fg:x="7635" fg:w="540"/><text x="17.9278%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.8821%" y="181" width="0.1894%" height="15" fill="rgb(209,212,41)" fg:x="8175" fg:w="82"/><text x="19.1751%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="19.0715%" y="181" width="0.3141%" height="15" fill="rgb(207,154,6)" fg:x="8257" fg:w="136"/><text x="19.3645%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,119 instructions, 2.58%)</title><rect x="17.6233%" y="197" width="2.5846%" height="15" fill="rgb(223,64,47)" fg:x="7630" fg:w="1119"/><text x="17.9163%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.2079%" y="197" width="0.1894%" height="15" fill="rgb(211,161,38)" fg:x="8749" fg:w="82"/><text x="20.5008%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="20.3973%" y="181" width="0.0115%" height="15" fill="rgb(219,138,40)" fg:x="8831" fg:w="5"/><text x="20.6902%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.4088%" y="165" width="0.1224%" height="15" fill="rgb(241,228,46)" fg:x="8836" fg:w="53"/><text x="20.7018%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="20.5312%" y="165" width="0.2033%" height="15" fill="rgb(223,209,38)" fg:x="8889" fg:w="88"/><text x="20.8242%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="20.7345%" y="165" width="0.3742%" height="15" fill="rgb(236,164,45)" fg:x="8977" fg:w="162"/><text x="21.0275%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.25%)</title><rect x="20.4088%" y="181" width="1.2473%" height="15" fill="rgb(231,15,5)" fg:x="8836" fg:w="540"/><text x="20.7018%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.6561%" y="181" width="0.1571%" height="15" fill="rgb(252,35,15)" fg:x="9376" fg:w="68"/><text x="21.9490%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.8131%" y="165" width="0.1871%" height="15" fill="rgb(248,181,18)" fg:x="9444" fg:w="81"/><text x="22.1061%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="21.8131%" y="181" width="0.2495%" height="15" fill="rgb(233,39,42)" fg:x="9444" fg:w="108"/><text x="22.1061%" y="191.50"></text></g><g><title>candid::types::internal::env_add (890 instructions, 2.06%)</title><rect x="20.3973%" y="197" width="2.0557%" height="15" fill="rgb(238,110,33)" fg:x="8831" fg:w="890"/><text x="20.6902%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.4529%" y="149" width="0.1224%" height="15" fill="rgb(233,195,10)" fg:x="9721" fg:w="53"/><text x="22.7459%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="22.4529%" y="165" width="0.1802%" height="15" fill="rgb(254,105,3)" fg:x="9721" fg:w="78"/><text x="22.7459%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.68%)</title><rect x="22.4529%" y="181" width="0.6768%" height="15" fill="rgb(221,225,9)" fg:x="9721" fg:w="293"/><text x="22.7459%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.1297%" y="181" width="0.1894%" height="15" fill="rgb(224,227,45)" fg:x="10014" fg:w="82"/><text x="23.4227%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.3191%" y="181" width="0.3141%" height="15" fill="rgb(229,198,43)" fg:x="10096" fg:w="136"/><text x="23.6121%" y="191.50"></text></g><g><title>candid::types::internal::env_id (916 instructions, 2.12%)</title><rect x="22.4529%" y="197" width="2.1157%" height="15" fill="rgb(206,209,35)" fg:x="9721" fg:w="916"/><text x="22.7459%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="24.5687%" y="197" width="0.1086%" height="15" fill="rgb(245,195,53)" fg:x="10637" fg:w="47"/><text x="24.8616%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="24.6772%" y="181" width="0.2841%" height="15" fill="rgb(240,92,26)" fg:x="10684" fg:w="123"/><text x="24.9702%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="25.0237%" y="181" width="0.2841%" height="15" fill="rgb(207,40,23)" fg:x="10834" fg:w="123"/><text x="25.3166%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.69%)</title><rect x="24.6772%" y="197" width="0.6929%" height="15" fill="rgb(223,111,35)" fg:x="10684" fg:w="300"/><text x="24.9702%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="25.3701%" y="181" width="0.0647%" height="15" fill="rgb(229,147,28)" fg:x="10984" fg:w="28"/><text x="25.6631%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="25.3701%" y="197" width="0.2240%" height="15" fill="rgb(211,29,28)" fg:x="10984" fg:w="97"/><text x="25.6631%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.5942%" y="197" width="0.0254%" height="15" fill="rgb(228,72,33)" fg:x="11081" fg:w="11"/><text x="25.8871%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6196%" y="197" width="0.0254%" height="15" fill="rgb(205,214,31)" fg:x="11092" fg:w="11"/><text x="25.9126%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6450%" y="197" width="0.0254%" height="15" fill="rgb(224,111,15)" fg:x="11103" fg:w="11"/><text x="25.9380%" y="207.50"></text></g><g><title>memcpy (410 instructions, 0.95%)</title><rect x="25.6704%" y="197" width="0.9470%" height="15" fill="rgb(253,21,26)" fg:x="11114" fg:w="410"/><text x="25.9634%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="26.6174%" y="165" width="0.0277%" height="15" fill="rgb(245,139,43)" fg:x="11524" fg:w="12"/><text x="26.9104%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="26.6451%" y="165" width="0.3880%" height="15" fill="rgb(252,170,7)" fg:x="11536" fg:w="168"/><text x="26.9381%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="27.0331%" y="133" width="0.1455%" height="15" fill="rgb(231,118,14)" fg:x="11704" fg:w="63"/><text x="27.3261%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.48%)</title><rect x="27.0331%" y="149" width="0.4804%" height="15" fill="rgb(238,83,0)" fg:x="11704" fg:w="208"/><text x="27.3261%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.54%)</title><rect x="27.0331%" y="165" width="0.5428%" height="15" fill="rgb(221,39,39)" fg:x="11704" fg:w="235"/><text x="27.3261%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.5759%" y="165" width="0.0254%" height="15" fill="rgb(222,119,46)" fg:x="11939" fg:w="11"/><text x="27.8689%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (468 instructions, 1.08%)</title><rect x="26.6174%" y="181" width="1.0810%" height="15" fill="rgb(222,165,49)" fg:x="11524" fg:w="468"/><text x="26.9104%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (503 instructions, 1.16%)</title><rect x="26.6174%" y="197" width="1.1618%" height="15" fill="rgb(219,113,52)" fg:x="11524" fg:w="503"/><text x="26.9104%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="27.7792%" y="181" width="0.1270%" height="15" fill="rgb(214,7,15)" fg:x="12027" fg:w="55"/><text x="28.0722%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="27.9062%" y="181" width="0.1455%" height="15" fill="rgb(235,32,4)" fg:x="12082" fg:w="63"/><text x="28.1992%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.46%)</title><rect x="27.7792%" y="197" width="0.4596%" height="15" fill="rgb(238,90,54)" fg:x="12027" fg:w="199"/><text x="28.0722%" y="207.50"></text></g><g><title>__multi3 (56 instructions, 0.13%)</title><rect x="28.2388%" y="197" width="0.1293%" height="15" fill="rgb(213,208,19)" fg:x="12226" fg:w="56"/><text x="28.5318%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="28.3682%" y="181" width="0.1270%" height="15" fill="rgb(233,156,4)" fg:x="12282" fg:w="55"/><text x="28.6611%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.38%)</title><rect x="28.3682%" y="197" width="0.3765%" height="15" fill="rgb(207,194,5)" fg:x="12282" fg:w="163"/><text x="28.6611%" y="207.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="28.7447%" y="165" width="0.2333%" height="15" fill="rgb(206,111,30)" fg:x="12445" fg:w="101"/><text x="29.0376%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="28.7447%" y="181" width="0.3141%" height="15" fill="rgb(243,70,54)" fg:x="12445" fg:w="136"/><text x="29.0376%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="29.2389%" y="165" width="0.1755%" height="15" fill="rgb(242,28,8)" fg:x="12659" fg:w="76"/><text x="29.5319%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="29.2389%" y="181" width="0.2541%" height="15" fill="rgb(219,106,18)" fg:x="12659" fg:w="110"/><text x="29.5319%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (392 instructions, 0.91%)</title><rect x="28.7447%" y="197" width="0.9054%" height="15" fill="rgb(244,222,10)" fg:x="12445" fg:w="392"/><text x="29.0376%" y="207.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (82 instructions, 0.19%)</title><rect x="29.6501%" y="197" width="0.1894%" height="15" fill="rgb(236,179,52)" fg:x="12837" fg:w="82"/><text x="29.9430%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="29.8395%" y="165" width="0.0115%" height="15" fill="rgb(213,23,39)" fg:x="12919" fg:w="5"/><text x="30.1324%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.8510%" y="165" width="0.0254%" height="15" fill="rgb(238,48,10)" fg:x="12924" fg:w="11"/><text x="30.1440%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.8764%" y="165" width="0.3141%" height="15" fill="rgb(251,196,23)" fg:x="12935" fg:w="136"/><text x="30.1694%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (312 instructions, 0.72%)</title><rect x="29.8395%" y="181" width="0.7206%" height="15" fill="rgb(250,152,24)" fg:x="12919" fg:w="312"/><text x="30.1324%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.5601%" y="181" width="0.0739%" height="15" fill="rgb(209,150,17)" fg:x="13231" fg:w="32"/><text x="30.8531%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="30.6340%" y="133" width="0.1755%" height="15" fill="rgb(234,202,34)" fg:x="13263" fg:w="76"/><text x="30.9270%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="30.6340%" y="149" width="0.2541%" height="15" fill="rgb(253,148,53)" fg:x="13263" fg:w="110"/><text x="30.9270%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="30.6340%" y="165" width="0.4042%" height="15" fill="rgb(218,129,16)" fg:x="13263" fg:w="175"/><text x="30.9270%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0382%" y="165" width="0.0254%" height="15" fill="rgb(216,85,19)" fg:x="13438" fg:w="11"/><text x="31.3312%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0636%" y="165" width="0.0254%" height="15" fill="rgb(235,228,7)" fg:x="13449" fg:w="11"/><text x="31.3566%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.83%)</title><rect x="30.6340%" y="181" width="0.8292%" height="15" fill="rgb(245,175,0)" fg:x="13263" fg:w="359"/><text x="30.9270%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.4632%" y="181" width="0.0693%" height="15" fill="rgb(208,168,36)" fg:x="13622" fg:w="30"/><text x="31.7562%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.5325%" y="181" width="0.0115%" height="15" fill="rgb(246,171,24)" fg:x="13652" fg:w="5"/><text x="31.8255%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.5533%" y="165" width="0.1270%" height="15" fill="rgb(215,142,24)" fg:x="13661" fg:w="55"/><text x="31.8463%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (109 instructions, 0.25%)</title><rect x="31.5441%" y="181" width="0.2518%" height="15" fill="rgb(250,187,7)" fg:x="13657" fg:w="109"/><text x="31.8370%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (918 instructions, 2.12%)</title><rect x="29.8395%" y="197" width="2.1203%" height="15" fill="rgb(228,66,33)" fg:x="12919" fg:w="918"/><text x="30.1324%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,007 instructions, 32.35%)</title><rect x="1.1526%" y="213" width="32.3525%" height="15" fill="rgb(234,215,21)" fg:x="499" fg:w="14007"/><text x="1.4455%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.5050%" y="213" width="0.0277%" height="15" fill="rgb(222,191,20)" fg:x="14506" fg:w="12"/><text x="33.7980%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.5327%" y="213" width="0.1871%" height="15" fill="rgb(245,79,54)" fg:x="14518" fg:w="81"/><text x="33.8257%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="33.7198%" y="213" width="0.2910%" height="15" fill="rgb(240,10,37)" fg:x="14599" fg:w="126"/><text x="34.0128%" y="223.50"></text></g><g><title>canister_update setTimer (14,823 instructions, 34.24%)</title><rect x="0.0000%" y="229" width="34.2372%" height="15" fill="rgb(214,192,32)" fg:x="0" fg:w="14823"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.2372%" y="213" width="0.0439%" height="15" fill="rgb(209,36,54)" fg:x="14823" fg:w="19"/><text x="34.5302%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="34.2811%" y="213" width="0.1802%" height="15" fill="rgb(220,10,11)" fg:x="14842" fg:w="78"/><text x="34.5741%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="34.4613%" y="213" width="0.1755%" height="15" fill="rgb(221,106,17)" fg:x="14920" fg:w="76"/><text x="34.7542%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6368%" y="197" width="0.1894%" height="15" fill="rgb(251,142,44)" fg:x="14996" fg:w="82"/><text x="34.9298%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="34.8262%" y="197" width="0.1755%" height="15" fill="rgb(238,13,15)" fg:x="15078" fg:w="76"/><text x="35.1192%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.0017%" y="197" width="0.1894%" height="15" fill="rgb(208,107,27)" fg:x="15154" fg:w="82"/><text x="35.2947%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.1911%" y="197" width="0.0439%" height="15" fill="rgb(205,136,37)" fg:x="15236" fg:w="19"/><text x="35.4841%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="35.2350%" y="181" width="0.1755%" height="15" fill="rgb(250,205,27)" fg:x="15255" fg:w="76"/><text x="35.5280%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.4106%" y="181" width="0.2679%" height="15" fill="rgb(210,80,43)" fg:x="15331" fg:w="116"/><text x="35.7035%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.6785%" y="181" width="0.3811%" height="15" fill="rgb(247,160,36)" fg:x="15447" fg:w="165"/><text x="35.9715%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="36.0596%" y="181" width="0.1270%" height="15" fill="rgb(234,13,49)" fg:x="15612" fg:w="55"/><text x="36.3526%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.2350%" y="197" width="1.1733%" height="15" fill="rgb(234,122,0)" fg:x="15255" fg:w="508"/><text x="35.5280%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.4084%" y="181" width="0.0115%" height="15" fill="rgb(207,146,38)" fg:x="15763" fg:w="5"/><text x="36.7013%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (89 instructions, 0.21%)</title><rect x="36.4084%" y="197" width="0.2056%" height="15" fill="rgb(207,177,25)" fg:x="15763" fg:w="89"/><text x="36.7013%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.6139%" y="165" width="0.0115%" height="15" fill="rgb(211,178,42)" fg:x="15852" fg:w="5"/><text x="36.9069%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="36.6139%" y="181" width="0.0901%" height="15" fill="rgb(230,69,54)" fg:x="15852" fg:w="39"/><text x="36.9069%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.7040%" y="181" width="0.1894%" height="15" fill="rgb(214,135,41)" fg:x="15891" fg:w="82"/><text x="36.9970%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.8934%" y="165" width="0.0115%" height="15" fill="rgb(237,67,25)" fg:x="15973" fg:w="5"/><text x="37.1864%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="36.9050%" y="149" width="0.1224%" height="15" fill="rgb(222,189,50)" fg:x="15978" fg:w="53"/><text x="37.1979%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="37.0274%" y="149" width="0.2033%" height="15" fill="rgb(245,148,34)" fg:x="16031" fg:w="88"/><text x="37.3203%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="37.2306%" y="149" width="0.3742%" height="15" fill="rgb(222,29,6)" fg:x="16119" fg:w="162"/><text x="37.5236%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.25%)</title><rect x="36.9050%" y="165" width="1.2473%" height="15" fill="rgb(221,189,43)" fg:x="15978" fg:w="540"/><text x="37.1979%" y="175.50"></text></g><g><title>candid::types::internal::env_add (749 instructions, 1.73%)</title><rect x="36.8934%" y="181" width="1.7300%" height="15" fill="rgb(207,36,27)" fg:x="15973" fg:w="749"/><text x="37.1864%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.6234%" y="181" width="0.1894%" height="15" fill="rgb(217,90,24)" fg:x="16722" fg:w="82"/><text x="38.9164%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="38.8128%" y="165" width="0.0115%" height="15" fill="rgb(224,66,35)" fg:x="16804" fg:w="5"/><text x="39.1058%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="38.8243%" y="149" width="0.1224%" height="15" fill="rgb(221,13,50)" fg:x="16809" fg:w="53"/><text x="39.1173%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="38.9468%" y="149" width="0.2033%" height="15" fill="rgb(236,68,49)" fg:x="16862" fg:w="88"/><text x="39.2397%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="39.1500%" y="149" width="0.3742%" height="15" fill="rgb(229,146,28)" fg:x="16950" fg:w="162"/><text x="39.4430%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.25%)</title><rect x="38.8243%" y="165" width="1.2473%" height="15" fill="rgb(225,31,38)" fg:x="16809" fg:w="540"/><text x="39.1173%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.0716%" y="165" width="0.1571%" height="15" fill="rgb(250,208,3)" fg:x="17349" fg:w="68"/><text x="40.3646%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.2287%" y="149" width="0.1871%" height="15" fill="rgb(246,54,23)" fg:x="17417" fg:w="81"/><text x="40.5216%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="40.2287%" y="165" width="0.2495%" height="15" fill="rgb(243,76,11)" fg:x="17417" fg:w="108"/><text x="40.5216%" y="175.50"></text></g><g><title>candid::types::internal::env_add (890 instructions, 2.06%)</title><rect x="38.8128%" y="181" width="2.0557%" height="15" fill="rgb(245,21,50)" fg:x="16804" fg:w="890"/><text x="39.1058%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="40.8685%" y="133" width="0.1224%" height="15" fill="rgb(228,9,43)" fg:x="17694" fg:w="53"/><text x="41.1614%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="40.8685%" y="149" width="0.1802%" height="15" fill="rgb(208,100,47)" fg:x="17694" fg:w="78"/><text x="41.1614%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.68%)</title><rect x="40.8685%" y="165" width="0.6768%" height="15" fill="rgb(232,26,8)" fg:x="17694" fg:w="293"/><text x="41.1614%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1272 (15 instructions, 0.03%)</title><rect x="41.5452%" y="165" width="0.0346%" height="15" fill="rgb(216,166,38)" fg:x="17987" fg:w="15"/><text x="41.8382%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.5799%" y="165" width="0.0254%" height="15" fill="rgb(251,202,51)" fg:x="18002" fg:w="11"/><text x="41.8728%" y="175.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.10%)</title><rect x="40.8685%" y="181" width="1.1041%" height="15" fill="rgb(254,216,34)" fg:x="17694" fg:w="478"/><text x="41.1614%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,427 instructions, 5.61%)</title><rect x="36.6139%" y="197" width="5.6057%" height="15" fill="rgb(251,32,27)" fg:x="15852" fg:w="2427"/><text x="36.9069%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="42.2197%" y="165" width="0.1755%" height="15" fill="rgb(208,127,28)" fg:x="18279" fg:w="76"/><text x="42.5126%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="42.2197%" y="181" width="0.2541%" height="15" fill="rgb(224,137,22)" fg:x="18279" fg:w="110"/><text x="42.5126%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.41%)</title><rect x="42.2197%" y="197" width="0.4111%" height="15" fill="rgb(254,70,32)" fg:x="18279" fg:w="178"/><text x="42.5126%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.6308%" y="181" width="0.0416%" height="15" fill="rgb(229,75,37)" fg:x="18457" fg:w="18"/><text x="42.9238%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.6724%" y="181" width="0.0254%" height="15" fill="rgb(252,64,23)" fg:x="18475" fg:w="11"/><text x="42.9653%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (81 instructions, 0.19%)</title><rect x="42.6308%" y="197" width="0.1871%" height="15" fill="rgb(232,162,48)" fg:x="18457" fg:w="81"/><text x="42.9238%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="42.8179%" y="197" width="0.0254%" height="15" fill="rgb(246,160,12)" fg:x="18538" fg:w="11"/><text x="43.1108%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="42.8433%" y="165" width="0.1640%" height="15" fill="rgb(247,166,0)" fg:x="18549" fg:w="71"/><text x="43.1363%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="42.8433%" y="181" width="0.2425%" height="15" fill="rgb(249,219,21)" fg:x="18549" fg:w="105"/><text x="43.1363%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="43.2359%" y="165" width="0.2725%" height="15" fill="rgb(205,209,3)" fg:x="18719" fg:w="118"/><text x="43.5289%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="43.2359%" y="181" width="0.3511%" height="15" fill="rgb(243,44,1)" fg:x="18719" fg:w="152"/><text x="43.5289%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (387 instructions, 0.89%)</title><rect x="42.8433%" y="197" width="0.8939%" height="15" fill="rgb(206,159,16)" fg:x="18549" fg:w="387"/><text x="43.1363%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="43.7372%" y="149" width="0.1755%" height="15" fill="rgb(244,77,30)" fg:x="18936" fg:w="76"/><text x="44.0301%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="43.7372%" y="165" width="0.2541%" height="15" fill="rgb(218,69,12)" fg:x="18936" fg:w="110"/><text x="44.0301%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="43.7372%" y="181" width="0.4042%" height="15" fill="rgb(212,87,7)" fg:x="18936" fg:w="175"/><text x="44.0301%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.1414%" y="181" width="0.0254%" height="15" fill="rgb(245,114,25)" fg:x="19111" fg:w="11"/><text x="44.4343%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="44.1668%" y="133" width="0.1640%" height="15" fill="rgb(210,61,42)" fg:x="19122" fg:w="71"/><text x="44.4597%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.24%)</title><rect x="44.1668%" y="149" width="0.2425%" height="15" fill="rgb(211,52,33)" fg:x="19122" fg:w="105"/><text x="44.4597%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (170 instructions, 0.39%)</title><rect x="44.1668%" y="165" width="0.3927%" height="15" fill="rgb(234,58,33)" fg:x="19122" fg:w="170"/><text x="44.4597%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (231 instructions, 0.53%)</title><rect x="44.1668%" y="181" width="0.5335%" height="15" fill="rgb(220,115,36)" fg:x="19122" fg:w="231"/><text x="44.4597%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="44.7003%" y="181" width="0.0693%" height="15" fill="rgb(243,153,54)" fg:x="19353" fg:w="30"/><text x="44.9933%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="44.7696%" y="181" width="0.1871%" height="15" fill="rgb(251,47,18)" fg:x="19383" fg:w="81"/><text x="45.0626%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (731 instructions, 1.69%)</title><rect x="43.7372%" y="197" width="1.6884%" height="15" fill="rgb(242,102,42)" fg:x="18936" fg:w="731"/><text x="44.0301%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.4256%" y="197" width="0.1386%" height="15" fill="rgb(234,31,38)" fg:x="19667" fg:w="60"/><text x="45.7185%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.5642%" y="149" width="0.1802%" height="15" fill="rgb(221,117,51)" fg:x="19727" fg:w="78"/><text x="45.8571%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="45.7443%" y="149" width="0.4504%" height="15" fill="rgb(212,20,18)" fg:x="19805" fg:w="195"/><text x="46.0373%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.1947%" y="149" width="0.1871%" height="15" fill="rgb(245,133,36)" fg:x="20000" fg:w="81"/><text x="46.4877%" y="159.50"></text></g><g><title>__rust_realloc (440 instructions, 1.02%)</title><rect x="45.5642%" y="165" width="1.0163%" height="15" fill="rgb(212,6,19)" fg:x="19727" fg:w="440"/><text x="45.8571%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (475 instructions, 1.10%)</title><rect x="45.5642%" y="181" width="1.0971%" height="15" fill="rgb(218,1,36)" fg:x="19727" fg:w="475"/><text x="45.8571%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (548 instructions, 1.27%)</title><rect x="45.5642%" y="197" width="1.2657%" height="15" fill="rgb(246,84,54)" fg:x="19727" fg:w="548"/><text x="45.8571%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="46.8299%" y="197" width="0.3118%" height="15" fill="rgb(242,110,6)" fg:x="20275" fg:w="135"/><text x="47.1229%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="47.1417%" y="197" width="0.0115%" height="15" fill="rgb(214,47,5)" fg:x="20410" fg:w="5"/><text x="47.4347%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.1533%" y="197" width="0.0254%" height="15" fill="rgb(218,159,25)" fg:x="20415" fg:w="11"/><text x="47.4462%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.1787%" y="197" width="0.1871%" height="15" fill="rgb(215,211,28)" fg:x="20426" fg:w="81"/><text x="47.4716%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.3657%" y="197" width="0.2910%" height="15" fill="rgb(238,59,32)" fg:x="20507" fg:w="126"/><text x="47.6587%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.6568%" y="197" width="0.2910%" height="15" fill="rgb(226,82,3)" fg:x="20633" fg:w="126"/><text x="47.9497%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="47.9478%" y="197" width="0.1802%" height="15" fill="rgb(240,164,32)" fg:x="20759" fg:w="78"/><text x="48.2408%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.1280%" y="197" width="0.1894%" height="15" fill="rgb(232,46,7)" fg:x="20837" fg:w="82"/><text x="48.4209%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.3174%" y="197" width="0.0462%" height="15" fill="rgb(229,129,53)" fg:x="20919" fg:w="20"/><text x="48.6103%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.3636%" y="181" width="0.1224%" height="15" fill="rgb(234,188,29)" fg:x="20939" fg:w="53"/><text x="48.6565%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.3636%" y="197" width="0.1571%" height="15" fill="rgb(246,141,4)" fg:x="20939" fg:w="68"/><text x="48.6565%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.5206%" y="197" width="0.0416%" height="15" fill="rgb(229,23,39)" fg:x="21007" fg:w="18"/><text x="48.8136%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,396 instructions, 17.08%)</title><rect x="34.6368%" y="213" width="17.0828%" height="15" fill="rgb(206,12,3)" fg:x="14996" fg:w="7396"/><text x="34.9298%" y="223.50">ic_cdk_timers::global_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="51.7196%" y="213" width="0.0277%" height="15" fill="rgb(252,226,20)" fg:x="22392" fg:w="12"/><text x="52.0126%" y="223.50"></text></g><g><title>canister_global_timer (7,667 instructions, 17.71%)</title><rect x="34.2372%" y="229" width="17.7087%" height="15" fill="rgb(216,123,35)" fg:x="14823" fg:w="7667"/><text x="34.5302%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="51.9460%" y="213" width="0.2725%" height="15" fill="rgb(212,68,40)" fg:x="22490" fg:w="118"/><text x="52.2389%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.2185%" y="213" width="0.2679%" height="15" fill="rgb(254,125,32)" fg:x="22608" fg:w="116"/><text x="52.5115%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.4864%" y="213" width="0.3811%" height="15" fill="rgb(253,97,22)" fg:x="22724" fg:w="165"/><text x="52.7794%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="52.8675%" y="213" width="0.1270%" height="15" fill="rgb(241,101,14)" fg:x="22889" fg:w="55"/><text x="53.1605%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="52.9946%" y="197" width="0.1755%" height="15" fill="rgb(238,103,29)" fg:x="22944" fg:w="76"/><text x="53.2875%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.1701%" y="197" width="0.2679%" height="15" fill="rgb(233,195,47)" fg:x="23020" fg:w="116"/><text x="53.4631%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.4380%" y="197" width="0.3811%" height="15" fill="rgb(246,218,30)" fg:x="23136" fg:w="165"/><text x="53.7310%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.8191%" y="197" width="0.1270%" height="15" fill="rgb(219,145,47)" fg:x="23301" fg:w="55"/><text x="54.1121%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="52.9946%" y="213" width="1.1733%" height="15" fill="rgb(243,12,26)" fg:x="22944" fg:w="508"/><text x="53.2875%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.42%)</title><rect x="54.1679%" y="213" width="1.4182%" height="15" fill="rgb(214,87,16)" fg:x="23452" fg:w="614"/><text x="54.4609%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="55.5861%" y="213" width="0.1640%" height="15" fill="rgb(208,99,42)" fg:x="24066" fg:w="71"/><text x="55.8791%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="55.7501%" y="197" width="0.1594%" height="15" fill="rgb(253,99,2)" fg:x="24137" fg:w="69"/><text x="56.0431%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="55.9095%" y="197" width="0.9378%" height="15" fill="rgb(220,168,23)" fg:x="24206" fg:w="406"/><text x="56.2024%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="56.8472%" y="197" width="0.1894%" height="15" fill="rgb(242,38,24)" fg:x="24612" fg:w="82"/><text x="57.1402%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.0366%" y="197" width="0.1247%" height="15" fill="rgb(225,182,9)" fg:x="24694" fg:w="54"/><text x="57.3296%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.1613%" y="197" width="0.1247%" height="15" fill="rgb(243,178,37)" fg:x="24748" fg:w="54"/><text x="57.4543%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.2861%" y="197" width="0.1247%" height="15" fill="rgb(232,139,19)" fg:x="24802" fg:w="54"/><text x="57.5790%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.4108%" y="197" width="0.1247%" height="15" fill="rgb(225,201,24)" fg:x="24856" fg:w="54"/><text x="57.7038%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="57.5355%" y="197" width="0.1594%" height="15" fill="rgb(221,47,46)" fg:x="24910" fg:w="69"/><text x="57.8285%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="57.6949%" y="197" width="0.1501%" height="15" fill="rgb(249,23,13)" fg:x="24979" fg:w="65"/><text x="57.9879%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="57.8450%" y="197" width="0.9378%" height="15" fill="rgb(219,9,5)" fg:x="25044" fg:w="406"/><text x="58.1380%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="58.7828%" y="197" width="0.0370%" height="15" fill="rgb(254,171,16)" fg:x="25450" fg:w="16"/><text x="59.0757%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="58.8197%" y="181" width="0.1894%" height="15" fill="rgb(230,171,20)" fg:x="25466" fg:w="82"/><text x="59.1127%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="59.0091%" y="149" width="0.1386%" height="15" fill="rgb(210,71,41)" fg:x="25548" fg:w="60"/><text x="59.3021%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="59.0091%" y="165" width="0.1963%" height="15" fill="rgb(206,173,20)" fg:x="25548" fg:w="85"/><text x="59.3021%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.2055%" y="117" width="0.0208%" height="15" fill="rgb(233,88,34)" fg:x="25633" fg:w="9"/><text x="59.4984%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.2262%" y="101" width="0.0693%" height="15" fill="rgb(223,209,46)" fg:x="25642" fg:w="30"/><text x="59.5192%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.2262%" y="117" width="0.1270%" height="15" fill="rgb(250,43,18)" fg:x="25642" fg:w="55"/><text x="59.5192%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="59.2055%" y="133" width="0.2725%" height="15" fill="rgb(208,13,10)" fg:x="25633" fg:w="118"/><text x="59.4984%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="59.2055%" y="149" width="0.3950%" height="15" fill="rgb(212,200,36)" fg:x="25633" fg:w="171"/><text x="59.4984%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="59.2055%" y="165" width="0.4065%" height="15" fill="rgb(225,90,30)" fg:x="25633" fg:w="176"/><text x="59.4984%" y="175.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="59.0091%" y="181" width="0.8592%" height="15" fill="rgb(236,182,39)" fg:x="25548" fg:w="372"/><text x="59.3021%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="58.8197%" y="197" width="1.3743%" height="15" fill="rgb(212,144,35)" fg:x="25466" fg:w="595"/><text x="59.1127%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="60.1940%" y="197" width="0.1894%" height="15" fill="rgb(228,63,44)" fg:x="26061" fg:w="82"/><text x="60.4870%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="60.3834%" y="197" width="0.1293%" height="15" fill="rgb(228,109,6)" fg:x="26143" fg:w="56"/><text x="60.6764%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="60.5128%" y="197" width="0.1455%" height="15" fill="rgb(238,117,24)" fg:x="26199" fg:w="63"/><text x="60.8057%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="60.6583%" y="197" width="0.1501%" height="15" fill="rgb(242,26,26)" fg:x="26262" fg:w="65"/><text x="60.9512%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="60.8084%" y="181" width="0.9378%" height="15" fill="rgb(221,92,48)" fg:x="26327" fg:w="406"/><text x="61.1014%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="61.7462%" y="181" width="0.0370%" height="15" fill="rgb(209,209,32)" fg:x="26733" fg:w="16"/><text x="62.0391%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.7831%" y="165" width="0.1894%" height="15" fill="rgb(221,70,22)" fg:x="26749" fg:w="82"/><text x="62.0761%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="61.9725%" y="133" width="0.1386%" height="15" fill="rgb(248,145,5)" fg:x="26831" fg:w="60"/><text x="62.2655%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="61.9725%" y="149" width="0.1963%" height="15" fill="rgb(226,116,26)" fg:x="26831" fg:w="85"/><text x="62.2655%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.1688%" y="101" width="0.0208%" height="15" fill="rgb(244,5,17)" fg:x="26916" fg:w="9"/><text x="62.4618%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.1896%" y="85" width="0.0693%" height="15" fill="rgb(252,159,33)" fg:x="26925" fg:w="30"/><text x="62.4826%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.1896%" y="101" width="0.1270%" height="15" fill="rgb(206,71,0)" fg:x="26925" fg:w="55"/><text x="62.4826%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="62.1688%" y="117" width="0.2725%" height="15" fill="rgb(233,118,54)" fg:x="26916" fg:w="118"/><text x="62.4618%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="62.1688%" y="133" width="0.3950%" height="15" fill="rgb(234,83,48)" fg:x="26916" fg:w="171"/><text x="62.4618%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="62.1688%" y="149" width="0.4065%" height="15" fill="rgb(228,3,54)" fg:x="26916" fg:w="176"/><text x="62.4618%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="61.9725%" y="165" width="0.8592%" height="15" fill="rgb(226,155,13)" fg:x="26831" fg:w="372"/><text x="62.2655%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.37%)</title><rect x="61.7831%" y="181" width="1.3743%" height="15" fill="rgb(241,28,37)" fg:x="26749" fg:w="595"/><text x="62.0761%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="63.1574%" y="181" width="0.1894%" height="15" fill="rgb(233,93,10)" fg:x="27344" fg:w="82"/><text x="63.4504%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="63.3468%" y="181" width="0.1293%" height="15" fill="rgb(225,113,19)" fg:x="27426" fg:w="56"/><text x="63.6398%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="63.4762%" y="165" width="0.1594%" height="15" fill="rgb(241,2,18)" fg:x="27482" fg:w="69"/><text x="63.7691%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="63.6355%" y="165" width="0.2102%" height="15" fill="rgb(228,207,21)" fg:x="27551" fg:w="91"/><text x="63.9285%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="63.8457%" y="165" width="0.1455%" height="15" fill="rgb(213,211,35)" fg:x="27642" fg:w="63"/><text x="64.1387%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.65%)</title><rect x="63.4762%" y="181" width="0.6513%" height="15" fill="rgb(209,83,10)" fg:x="27482" fg:w="282"/><text x="63.7691%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.1275%" y="181" width="0.1894%" height="15" fill="rgb(209,164,1)" fg:x="27764" fg:w="82"/><text x="64.4205%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 3.98%)</title><rect x="60.8084%" y="197" width="3.9774%" height="15" fill="rgb(213,184,43)" fg:x="26327" fg:w="1722"/><text x="61.1014%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="64.7858%" y="197" width="0.1455%" height="15" fill="rgb(231,61,34)" fg:x="28049" fg:w="63"/><text x="65.0787%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.9313%" y="197" width="0.0300%" height="15" fill="rgb(235,75,3)" fg:x="28112" fg:w="13"/><text x="65.2243%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="64.9613%" y="197" width="0.0300%" height="15" fill="rgb(220,106,47)" fg:x="28125" fg:w="13"/><text x="65.2543%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="64.9913%" y="197" width="0.0162%" height="15" fill="rgb(210,196,33)" fg:x="28138" fg:w="7"/><text x="65.2843%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="65.0075%" y="197" width="0.0346%" height="15" fill="rgb(229,154,42)" fg:x="28145" fg:w="15"/><text x="65.3005%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.0422%" y="181" width="0.1894%" height="15" fill="rgb(228,114,26)" fg:x="28160" fg:w="82"/><text x="65.3351%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="65.0422%" y="197" width="0.3811%" height="15" fill="rgb(208,144,1)" fg:x="28160" fg:w="165"/><text x="65.3351%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.4233%" y="165" width="0.1894%" height="15" fill="rgb(239,112,37)" fg:x="28325" fg:w="82"/><text x="65.7162%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.27%)</title><rect x="65.4233%" y="181" width="0.2679%" height="15" fill="rgb(210,96,50)" fg:x="28325" fg:w="116"/><text x="65.7162%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="65.4233%" y="197" width="0.4250%" height="15" fill="rgb(222,178,2)" fg:x="28325" fg:w="184"/><text x="65.7162%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.8483%" y="197" width="0.1894%" height="15" fill="rgb(226,74,18)" fg:x="28509" fg:w="82"/><text x="66.1412%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.0376%" y="197" width="0.1871%" height="15" fill="rgb(225,67,54)" fg:x="28591" fg:w="81"/><text x="66.3306%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.2247%" y="197" width="0.1894%" height="15" fill="rgb(251,92,32)" fg:x="28672" fg:w="82"/><text x="66.5177%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.4141%" y="197" width="0.1894%" height="15" fill="rgb(228,149,22)" fg:x="28754" fg:w="82"/><text x="66.7071%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.6082%" y="197" width="0.1871%" height="15" fill="rgb(243,54,13)" fg:x="28838" fg:w="81"/><text x="66.9011%" y="207.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="66.7952%" y="197" width="0.8777%" height="15" fill="rgb(243,180,28)" fg:x="28919" fg:w="380"/><text x="67.0882%" y="207.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="67.6729%" y="197" width="0.8777%" height="15" fill="rgb(208,167,24)" fg:x="29299" fg:w="380"/><text x="67.9659%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,486 instructions, 14.98%)</title><rect x="55.7501%" y="213" width="14.9809%" height="15" fill="rgb(245,73,45)" fg:x="24137" fg:w="6486"/><text x="56.0431%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="70.7310%" y="213" width="0.7738%" height="15" fill="rgb(237,203,48)" fg:x="30623" fg:w="335"/><text x="71.0240%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.5048%" y="181" width="0.0115%" height="15" fill="rgb(211,197,16)" fg:x="30958" fg:w="5"/><text x="71.7978%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.5163%" y="165" width="0.1224%" height="15" fill="rgb(243,99,51)" fg:x="30963" fg:w="53"/><text x="71.8093%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="71.6388%" y="165" width="0.2033%" height="15" fill="rgb(215,123,29)" fg:x="31016" fg:w="88"/><text x="71.9317%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="71.8420%" y="165" width="0.3742%" height="15" fill="rgb(239,186,37)" fg:x="31104" fg:w="162"/><text x="72.1350%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.25%)</title><rect x="71.5163%" y="181" width="1.2473%" height="15" fill="rgb(252,136,39)" fg:x="30963" fg:w="540"/><text x="71.8093%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.7636%" y="181" width="0.1571%" height="15" fill="rgb(223,213,32)" fg:x="31503" fg:w="68"/><text x="73.0566%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (771 instructions, 1.78%)</title><rect x="71.5048%" y="197" width="1.7808%" height="15" fill="rgb(233,115,5)" fg:x="30958" fg:w="771"/><text x="71.7978%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (803 instructions, 1.85%)</title><rect x="71.5048%" y="213" width="1.8547%" height="15" fill="rgb(207,226,44)" fg:x="30958" fg:w="803"/><text x="71.7978%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="73.3595%" y="213" width="0.1086%" height="15" fill="rgb(208,126,0)" fg:x="31761" fg:w="47"/><text x="73.6525%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.4681%" y="197" width="0.1293%" height="15" fill="rgb(244,66,21)" fg:x="31808" fg:w="56"/><text x="73.7610%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="73.6598%" y="197" width="0.1293%" height="15" fill="rgb(222,97,12)" fg:x="31891" fg:w="56"/><text x="73.9527%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.38%)</title><rect x="73.4681%" y="213" width="0.3834%" height="15" fill="rgb(219,213,19)" fg:x="31808" fg:w="166"/><text x="73.7610%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.8515%" y="197" width="0.0647%" height="15" fill="rgb(252,169,30)" fg:x="31974" fg:w="28"/><text x="74.1445%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="73.8515%" y="213" width="0.2240%" height="15" fill="rgb(206,32,51)" fg:x="31974" fg:w="97"/><text x="74.1445%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.0755%" y="213" width="0.0254%" height="15" fill="rgb(250,172,42)" fg:x="32071" fg:w="11"/><text x="74.3685%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1009%" y="213" width="0.0254%" height="15" fill="rgb(209,34,43)" fg:x="32082" fg:w="11"/><text x="74.3939%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1263%" y="213" width="0.0254%" height="15" fill="rgb(223,11,35)" fg:x="32093" fg:w="11"/><text x="74.4193%" y="223.50"></text></g><g><title>memcpy (410 instructions, 0.95%)</title><rect x="74.1517%" y="213" width="0.9470%" height="15" fill="rgb(251,219,26)" fg:x="32104" fg:w="410"/><text x="74.4447%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.0987%" y="181" width="0.0277%" height="15" fill="rgb(231,119,3)" fg:x="32514" fg:w="12"/><text x="75.3917%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.1265%" y="181" width="0.2333%" height="15" fill="rgb(216,97,11)" fg:x="32526" fg:w="101"/><text x="75.4194%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.23%)</title><rect x="75.3597%" y="165" width="0.2333%" height="15" fill="rgb(223,59,9)" fg:x="32627" fg:w="101"/><text x="75.6527%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (128 instructions, 0.30%)</title><rect x="75.3597%" y="181" width="0.2956%" height="15" fill="rgb(233,93,31)" fg:x="32627" fg:w="128"/><text x="75.6527%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.6554%" y="181" width="0.0254%" height="15" fill="rgb(239,81,33)" fg:x="32755" fg:w="11"/><text x="75.9484%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (294 instructions, 0.68%)</title><rect x="75.0987%" y="197" width="0.6791%" height="15" fill="rgb(213,120,34)" fg:x="32514" fg:w="294"/><text x="75.3917%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (329 instructions, 0.76%)</title><rect x="75.0987%" y="213" width="0.7599%" height="15" fill="rgb(243,49,53)" fg:x="32514" fg:w="329"/><text x="75.3917%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.8586%" y="213" width="0.1871%" height="15" fill="rgb(247,216,33)" fg:x="32843" fg:w="81"/><text x="76.1516%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.0457%" y="197" width="0.0115%" height="15" fill="rgb(226,26,14)" fg:x="32924" fg:w="5"/><text x="76.3387%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.0573%" y="181" width="0.1871%" height="15" fill="rgb(215,49,53)" fg:x="32929" fg:w="81"/><text x="76.3503%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.0573%" y="197" width="0.2495%" height="15" fill="rgb(245,162,40)" fg:x="32929" fg:w="108"/><text x="76.3503%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.3067%" y="197" width="0.3141%" height="15" fill="rgb(229,68,17)" fg:x="33037" fg:w="136"/><text x="76.5997%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (409 instructions, 0.94%)</title><rect x="76.0457%" y="213" width="0.9447%" height="15" fill="rgb(213,182,10)" fg:x="32924" fg:w="409"/><text x="76.3387%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="76.9904%" y="213" width="0.0739%" height="15" fill="rgb(245,125,30)" fg:x="33333" fg:w="32"/><text x="77.2834%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="77.0643%" y="165" width="0.2725%" height="15" fill="rgb(232,202,2)" fg:x="33365" fg:w="118"/><text x="77.3573%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.35%)</title><rect x="77.0643%" y="181" width="0.3511%" height="15" fill="rgb(237,140,51)" fg:x="33365" fg:w="152"/><text x="77.3573%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.50%)</title><rect x="77.0643%" y="197" width="0.5012%" height="15" fill="rgb(236,157,25)" fg:x="33365" fg:w="217"/><text x="77.3573%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.5655%" y="197" width="0.0254%" height="15" fill="rgb(219,209,0)" fg:x="33582" fg:w="11"/><text x="77.8585%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.5909%" y="197" width="0.0254%" height="15" fill="rgb(240,116,54)" fg:x="33593" fg:w="11"/><text x="77.8839%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (401 instructions, 0.93%)</title><rect x="77.0643%" y="213" width="0.9262%" height="15" fill="rgb(216,10,36)" fg:x="33365" fg:w="401"/><text x="77.3573%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="77.9905%" y="213" width="0.0693%" height="15" fill="rgb(222,72,44)" fg:x="33766" fg:w="30"/><text x="78.2835%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.0598%" y="213" width="0.0115%" height="15" fill="rgb(232,159,9)" fg:x="33796" fg:w="5"/><text x="78.3528%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.0714%" y="213" width="0.0115%" height="15" fill="rgb(210,39,32)" fg:x="33801" fg:w="5"/><text x="78.3643%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.0829%" y="213" width="0.1270%" height="15" fill="rgb(216,194,45)" fg:x="33806" fg:w="55"/><text x="78.3759%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,065 instructions, 27.87%)</title><rect x="51.9460%" y="229" width="27.8670%" height="15" fill="rgb(218,18,35)" fg:x="22490" fg:w="12065"/><text x="52.2389%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="79.8129%" y="213" width="0.1755%" height="15" fill="rgb(207,83,51)" fg:x="34555" fg:w="76"/><text x="80.1059%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="79.9885%" y="165" width="0.0439%" height="15" fill="rgb(225,63,43)" fg:x="34631" fg:w="19"/><text x="80.2814%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="80.0323%" y="149" width="0.1594%" height="15" fill="rgb(207,57,36)" fg:x="34650" fg:w="69"/><text x="80.3253%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="80.1917%" y="149" width="0.9378%" height="15" fill="rgb(216,99,33)" fg:x="34719" fg:w="406"/><text x="80.4847%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="81.1295%" y="149" width="0.1894%" height="15" fill="rgb(225,42,16)" fg:x="35125" fg:w="82"/><text x="81.4224%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.3189%" y="149" width="0.1247%" height="15" fill="rgb(220,201,45)" fg:x="35207" fg:w="54"/><text x="81.6118%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.4436%" y="149" width="0.1247%" height="15" fill="rgb(225,33,4)" fg:x="35261" fg:w="54"/><text x="81.7366%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.5683%" y="149" width="0.1247%" height="15" fill="rgb(224,33,50)" fg:x="35315" fg:w="54"/><text x="81.8613%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.6930%" y="149" width="0.1247%" height="15" fill="rgb(246,198,51)" fg:x="35369" fg:w="54"/><text x="81.9860%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="81.8178%" y="149" width="0.1594%" height="15" fill="rgb(205,22,4)" fg:x="35423" fg:w="69"/><text x="82.1107%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="81.9771%" y="149" width="0.1501%" height="15" fill="rgb(206,3,8)" fg:x="35492" fg:w="65"/><text x="82.2701%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="82.1273%" y="149" width="0.9378%" height="15" fill="rgb(251,23,15)" fg:x="35557" fg:w="406"/><text x="82.4202%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.0650%" y="149" width="0.0370%" height="15" fill="rgb(252,88,28)" fg:x="35963" fg:w="16"/><text x="83.3580%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="83.1020%" y="133" width="0.1640%" height="15" fill="rgb(212,127,14)" fg:x="35979" fg:w="71"/><text x="83.3949%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.2660%" y="101" width="0.1386%" height="15" fill="rgb(247,145,37)" fg:x="36050" fg:w="60"/><text x="83.5589%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.2660%" y="117" width="0.1963%" height="15" fill="rgb(209,117,53)" fg:x="36050" fg:w="85"/><text x="83.5589%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.4623%" y="69" width="0.0208%" height="15" fill="rgb(212,90,42)" fg:x="36135" fg:w="9"/><text x="83.7553%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.4831%" y="53" width="0.0693%" height="15" fill="rgb(218,164,37)" fg:x="36144" fg:w="30"/><text x="83.7760%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.4831%" y="69" width="0.1270%" height="15" fill="rgb(246,65,34)" fg:x="36144" fg:w="55"/><text x="83.7760%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="83.4623%" y="85" width="0.2725%" height="15" fill="rgb(231,100,33)" fg:x="36135" fg:w="118"/><text x="83.7553%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="83.4623%" y="101" width="0.3950%" height="15" fill="rgb(228,126,14)" fg:x="36135" fg:w="171"/><text x="83.7553%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="83.4623%" y="117" width="0.4065%" height="15" fill="rgb(215,173,21)" fg:x="36135" fg:w="176"/><text x="83.7553%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="83.2660%" y="133" width="0.8592%" height="15" fill="rgb(210,6,40)" fg:x="36050" fg:w="372"/><text x="83.5589%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.35%)</title><rect x="83.1020%" y="149" width="1.3489%" height="15" fill="rgb(212,48,18)" fg:x="35979" fg:w="584"/><text x="83.3949%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="84.4509%" y="149" width="0.1894%" height="15" fill="rgb(230,214,11)" fg:x="36563" fg:w="82"/><text x="84.7438%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.6403%" y="149" width="0.1871%" height="15" fill="rgb(254,105,39)" fg:x="36645" fg:w="81"/><text x="84.9332%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="84.8273%" y="149" width="0.1455%" height="15" fill="rgb(245,158,5)" fg:x="36726" fg:w="63"/><text x="85.1203%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.9729%" y="149" width="0.1501%" height="15" fill="rgb(249,208,11)" fg:x="36789" fg:w="65"/><text x="85.2658%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.94%)</title><rect x="85.1230%" y="133" width="0.9378%" height="15" fill="rgb(210,39,28)" fg:x="36854" fg:w="406"/><text x="85.4160%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.0607%" y="133" width="0.0370%" height="15" fill="rgb(211,56,53)" fg:x="37260" fg:w="16"/><text x="86.3537%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="86.0977%" y="117" width="0.1802%" height="15" fill="rgb(226,201,30)" fg:x="37276" fg:w="78"/><text x="86.3907%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.2779%" y="85" width="0.1386%" height="15" fill="rgb(239,101,34)" fg:x="37354" fg:w="60"/><text x="86.5708%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.2779%" y="101" width="0.1963%" height="15" fill="rgb(226,209,5)" fg:x="37354" fg:w="85"/><text x="86.5708%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.4742%" y="53" width="0.0208%" height="15" fill="rgb(250,105,47)" fg:x="37439" fg:w="9"/><text x="86.7672%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.4950%" y="37" width="0.0693%" height="15" fill="rgb(230,72,3)" fg:x="37448" fg:w="30"/><text x="86.7879%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.4950%" y="53" width="0.1270%" height="15" fill="rgb(232,218,39)" fg:x="37448" fg:w="55"/><text x="86.7879%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="86.4742%" y="69" width="0.2725%" height="15" fill="rgb(248,166,6)" fg:x="37439" fg:w="118"/><text x="86.7672%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="86.4742%" y="85" width="0.3950%" height="15" fill="rgb(247,89,20)" fg:x="37439" fg:w="171"/><text x="86.7672%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.41%)</title><rect x="86.4742%" y="101" width="0.4065%" height="15" fill="rgb(248,130,54)" fg:x="37439" fg:w="176"/><text x="86.7672%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.86%)</title><rect x="86.2779%" y="117" width="0.8592%" height="15" fill="rgb(234,196,4)" fg:x="37354" fg:w="372"/><text x="86.5708%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.37%)</title><rect x="86.0977%" y="133" width="1.3651%" height="15" fill="rgb(250,143,31)" fg:x="37276" fg:w="591"/><text x="86.3907%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="87.4628%" y="133" width="0.1894%" height="15" fill="rgb(211,110,34)" fg:x="37867" fg:w="82"/><text x="87.7557%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.6522%" y="133" width="0.1871%" height="15" fill="rgb(215,124,48)" fg:x="37949" fg:w="81"/><text x="87.9451%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,335 instructions, 3.08%)</title><rect x="85.1230%" y="149" width="3.0835%" height="15" fill="rgb(216,46,13)" fg:x="36854" fg:w="1335"/><text x="85.4160%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.15%)</title><rect x="88.2065%" y="149" width="0.1455%" height="15" fill="rgb(205,184,25)" fg:x="38189" fg:w="63"/><text x="88.4995%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.3520%" y="149" width="0.0300%" height="15" fill="rgb(228,1,10)" fg:x="38252" fg:w="13"/><text x="88.6450%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.3820%" y="149" width="0.0300%" height="15" fill="rgb(213,116,27)" fg:x="38265" fg:w="13"/><text x="88.6750%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.4121%" y="149" width="0.0162%" height="15" fill="rgb(241,95,50)" fg:x="38278" fg:w="7"/><text x="88.7050%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="88.4282%" y="149" width="0.0346%" height="15" fill="rgb(238,48,32)" fg:x="38285" fg:w="15"/><text x="88.7212%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="88.4629%" y="149" width="0.1802%" height="15" fill="rgb(235,113,49)" fg:x="38300" fg:w="78"/><text x="88.7558%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.6430%" y="149" width="0.1894%" height="15" fill="rgb(205,127,43)" fg:x="38378" fg:w="82"/><text x="88.9360%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="88.8370%" y="149" width="0.8777%" height="15" fill="rgb(250,162,2)" fg:x="38462" fg:w="380"/><text x="89.1300%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.88%)</title><rect x="89.7147%" y="149" width="0.8777%" height="15" fill="rgb(220,13,41)" fg:x="38842" fg:w="380"/><text x="90.0077%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,371 instructions, 12.41%)</title><rect x="80.0323%" y="165" width="12.4056%" height="15" fill="rgb(249,221,25)" fg:x="34650" fg:w="5371"/><text x="80.3253%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (335 instructions, 0.77%)</title><rect x="92.4379%" y="165" width="0.7738%" height="15" fill="rgb(215,208,19)" fg:x="40021" fg:w="335"/><text x="92.7309%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="93.2117%" y="133" width="0.0277%" height="15" fill="rgb(236,175,2)" fg:x="40356" fg:w="12"/><text x="93.5047%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.2394%" y="117" width="0.1871%" height="15" fill="rgb(241,52,2)" fg:x="40368" fg:w="81"/><text x="93.5324%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="93.4889%" y="117" width="0.1293%" height="15" fill="rgb(248,140,14)" fg:x="40476" fg:w="56"/><text x="93.7818%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (191 instructions, 0.44%)</title><rect x="93.2394%" y="133" width="0.4412%" height="15" fill="rgb(253,22,42)" fg:x="40368" fg:w="191"/><text x="93.5324%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (242 instructions, 0.56%)</title><rect x="93.2117%" y="149" width="0.5590%" height="15" fill="rgb(234,61,47)" fg:x="40356" fg:w="242"/><text x="93.5047%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (277 instructions, 0.64%)</title><rect x="93.2117%" y="165" width="0.6398%" height="15" fill="rgb(208,226,15)" fg:x="40356" fg:w="277"/><text x="93.5047%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8515%" y="165" width="0.2841%" height="15" fill="rgb(217,221,4)" fg:x="40633" fg:w="123"/><text x="94.1445%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (125 instructions, 0.29%)</title><rect x="94.1356%" y="165" width="0.2887%" height="15" fill="rgb(212,174,34)" fg:x="40756" fg:w="125"/><text x="94.4286%" y="175.50"></text></g><g><title>ic_cdk_timers::update_ic0_timer (49 instructions, 0.11%)</title><rect x="94.4243%" y="165" width="0.1132%" height="15" fill="rgb(253,83,4)" fg:x="40881" fg:w="49"/><text x="94.7173%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.5375%" y="165" width="0.0300%" height="15" fill="rgb(250,195,49)" fg:x="40930" fg:w="13"/><text x="94.8304%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,108 instructions, 16.42%)</title><rect x="79.9885%" y="181" width="16.4176%" height="15" fill="rgb(241,192,25)" fg:x="34631" fg:w="7108"/><text x="80.2814%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.4061%" y="181" width="0.0277%" height="15" fill="rgb(208,124,10)" fg:x="41739" fg:w="12"/><text x="96.6990%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,202 instructions, 16.63%)</title><rect x="79.9885%" y="197" width="16.6347%" height="15" fill="rgb(222,33,0)" fg:x="34631" fg:w="7202"/><text x="80.2814%" y="207.50">ic_cdk::futures::waker..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.6232%" y="165" width="0.0115%" height="15" fill="rgb(234,209,28)" fg:x="41833" fg:w="5"/><text x="96.9161%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.6347%" y="165" width="0.1871%" height="15" fill="rgb(224,11,23)" fg:x="41838" fg:w="81"/><text x="96.9277%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.8218%" y="165" width="0.1802%" height="15" fill="rgb(232,99,1)" fg:x="41919" fg:w="78"/><text x="97.1148%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (203 instructions, 0.47%)</title><rect x="96.6232%" y="181" width="0.4689%" height="15" fill="rgb(237,95,45)" fg:x="41833" fg:w="203"/><text x="96.9161%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.0920%" y="165" width="0.1871%" height="15" fill="rgb(208,109,11)" fg:x="42036" fg:w="81"/><text x="97.3850%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 instructions, 0.26%)</title><rect x="97.0920%" y="181" width="0.2633%" height="15" fill="rgb(216,190,48)" fg:x="42036" fg:w="114"/><text x="97.3850%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.4962%" y="181" width="0.2841%" height="15" fill="rgb(251,171,36)" fg:x="42211" fg:w="123"/><text x="97.7892%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="97.7803%" y="181" width="0.3880%" height="15" fill="rgb(230,62,22)" fg:x="42334" fg:w="168"/><text x="98.0733%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (715 instructions, 1.65%)</title><rect x="96.6232%" y="197" width="1.6515%" height="15" fill="rgb(225,114,35)" fg:x="41833" fg:w="715"/><text x="96.9161%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,046 instructions, 18.58%)</title><rect x="79.9885%" y="213" width="18.5841%" height="15" fill="rgb(215,118,42)" fg:x="34631" fg:w="8046"/><text x="80.2814%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="98.8636%" y="181" width="0.1455%" height="15" fill="rgb(243,119,21)" fg:x="42803" fg:w="63"/><text x="99.1566%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (334 instructions, 0.77%)</title><rect x="98.5726%" y="197" width="0.7715%" height="15" fill="rgb(252,177,53)" fg:x="42677" fg:w="334"/><text x="98.8656%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (382 instructions, 0.88%)</title><rect x="98.5726%" y="213" width="0.8823%" height="15" fill="rgb(237,209,29)" fg:x="42677" fg:w="382"/><text x="98.8656%" y="223.50"></text></g><g><title>all (43,295 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(212,65,23)" fg:x="0" fg:w="43295"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,740 instructions, 20.19%)</title><rect x="79.8129%" y="229" width="20.1871%" height="15" fill="rgb(230,222,46)" fg:x="34555" fg:w="8740"/><text x="80.1059%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>