<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43540"><g><title>ic_cdk::setup (48 instructions, 0.11%)</title><rect x="0.0000%" y="213" width="0.1102%" height="15" fill="rgb(242,149,17)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 0.85%)</title><rect x="0.1102%" y="213" width="0.8498%" height="15" fill="rgb(244,29,21)" fg:x="48" fg:w="370"/><text x="0.4032%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.9600%" y="213" width="0.1883%" height="15" fill="rgb(220,130,37)" fg:x="418" fg:w="82"/><text x="1.2530%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="1.1484%" y="197" width="0.1883%" height="15" fill="rgb(211,67,2)" fg:x="500" fg:w="82"/><text x="1.4413%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.11%)</title><rect x="1.3367%" y="165" width="0.1148%" height="15" fill="rgb(235,68,52)" fg:x="582" fg:w="50"/><text x="1.6297%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.31%)</title><rect x="1.3367%" y="181" width="0.3055%" height="15" fill="rgb(246,142,3)" fg:x="582" fg:w="133"/><text x="1.6297%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="1.6422%" y="181" width="0.9187%" height="15" fill="rgb(241,25,7)" fg:x="715" fg:w="400"/><text x="1.9351%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="2.5609%" y="181" width="0.1952%" height="15" fill="rgb(242,119,39)" fg:x="1115" fg:w="85"/><text x="2.8538%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.7561%" y="181" width="0.1240%" height="15" fill="rgb(241,98,45)" fg:x="1200" fg:w="54"/><text x="3.0491%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.8801%" y="181" width="0.1240%" height="15" fill="rgb(254,28,30)" fg:x="1254" fg:w="54"/><text x="3.1731%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.0041%" y="181" width="0.1240%" height="15" fill="rgb(241,142,54)" fg:x="1308" fg:w="54"/><text x="3.2971%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="3.1282%" y="181" width="0.1240%" height="15" fill="rgb(222,85,15)" fg:x="1362" fg:w="54"/><text x="3.4211%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="3.2522%" y="181" width="0.1631%" height="15" fill="rgb(210,85,47)" fg:x="1416" fg:w="71"/><text x="3.5452%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="3.4153%" y="181" width="0.1493%" height="15" fill="rgb(224,206,25)" fg:x="1487" fg:w="65"/><text x="3.7082%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="3.5645%" y="181" width="0.9187%" height="15" fill="rgb(243,201,19)" fg:x="1552" fg:w="400"/><text x="3.8575%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="4.4832%" y="181" width="0.0367%" height="15" fill="rgb(236,59,4)" fg:x="1952" fg:w="16"/><text x="4.7762%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="4.5200%" y="165" width="0.1883%" height="15" fill="rgb(254,179,45)" fg:x="1968" fg:w="82"/><text x="4.8130%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="4.7083%" y="133" width="0.1378%" height="15" fill="rgb(226,14,10)" fg:x="2050" fg:w="60"/><text x="5.0013%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="4.7083%" y="149" width="0.1952%" height="15" fill="rgb(244,27,41)" fg:x="2050" fg:w="85"/><text x="5.0013%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.9035%" y="101" width="0.0207%" height="15" fill="rgb(235,35,32)" fg:x="2135" fg:w="9"/><text x="5.1965%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.9242%" y="85" width="0.0689%" height="15" fill="rgb(218,68,31)" fg:x="2144" fg:w="30"/><text x="5.2172%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.9242%" y="101" width="0.1263%" height="15" fill="rgb(207,120,37)" fg:x="2144" fg:w="55"/><text x="5.2172%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="4.9035%" y="117" width="0.2710%" height="15" fill="rgb(227,98,0)" fg:x="2135" fg:w="118"/><text x="5.1965%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="4.9035%" y="133" width="0.3927%" height="15" fill="rgb(207,7,3)" fg:x="2135" fg:w="171"/><text x="5.1965%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="4.9035%" y="149" width="0.4042%" height="15" fill="rgb(206,98,19)" fg:x="2135" fg:w="176"/><text x="5.1965%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="4.7083%" y="165" width="0.8544%" height="15" fill="rgb(217,5,26)" fg:x="2050" fg:w="372"/><text x="5.0013%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="4.5200%" y="181" width="1.3780%" height="15" fill="rgb(235,190,38)" fg:x="1968" fg:w="600"/><text x="4.8130%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.8980%" y="181" width="0.1952%" height="15" fill="rgb(247,86,24)" fg:x="2568" fg:w="85"/><text x="6.1910%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="6.0932%" y="181" width="0.1309%" height="15" fill="rgb(205,101,16)" fg:x="2653" fg:w="57"/><text x="6.3862%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="6.2242%" y="181" width="0.1516%" height="15" fill="rgb(246,168,33)" fg:x="2710" fg:w="66"/><text x="6.5171%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="6.3757%" y="181" width="0.1493%" height="15" fill="rgb(231,114,1)" fg:x="2776" fg:w="65"/><text x="6.6687%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="6.5250%" y="165" width="0.9187%" height="15" fill="rgb(207,184,53)" fg:x="2841" fg:w="400"/><text x="6.8180%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="7.4437%" y="165" width="0.0367%" height="15" fill="rgb(224,95,51)" fg:x="3241" fg:w="16"/><text x="7.7367%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="7.4805%" y="149" width="0.1883%" height="15" fill="rgb(212,188,45)" fg:x="3257" fg:w="82"/><text x="7.7734%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.6688%" y="117" width="0.1378%" height="15" fill="rgb(223,154,38)" fg:x="3339" fg:w="60"/><text x="7.9618%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.6688%" y="133" width="0.1952%" height="15" fill="rgb(251,22,52)" fg:x="3339" fg:w="85"/><text x="7.9618%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.8640%" y="85" width="0.0207%" height="15" fill="rgb(229,209,22)" fg:x="3424" fg:w="9"/><text x="8.1570%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.8847%" y="69" width="0.0689%" height="15" fill="rgb(234,138,34)" fg:x="3433" fg:w="30"/><text x="8.1777%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.8847%" y="85" width="0.1263%" height="15" fill="rgb(212,95,11)" fg:x="3433" fg:w="55"/><text x="8.1777%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.8640%" y="101" width="0.2710%" height="15" fill="rgb(240,179,47)" fg:x="3424" fg:w="118"/><text x="8.1570%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="7.8640%" y="117" width="0.3927%" height="15" fill="rgb(240,163,11)" fg:x="3424" fg:w="171"/><text x="8.1570%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="7.8640%" y="133" width="0.4042%" height="15" fill="rgb(236,37,12)" fg:x="3424" fg:w="176"/><text x="8.1570%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="7.6688%" y="149" width="0.8544%" height="15" fill="rgb(232,164,16)" fg:x="3339" fg:w="372"/><text x="7.9618%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="7.4805%" y="165" width="1.3780%" height="15" fill="rgb(244,205,15)" fg:x="3257" fg:w="600"/><text x="7.7734%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="8.8585%" y="165" width="0.1952%" height="15" fill="rgb(223,117,47)" fg:x="3857" fg:w="85"/><text x="9.1515%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="9.0537%" y="165" width="0.1309%" height="15" fill="rgb(244,107,35)" fg:x="3942" fg:w="57"/><text x="9.3467%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="9.1847%" y="149" width="0.1631%" height="15" fill="rgb(205,140,8)" fg:x="3999" fg:w="71"/><text x="9.4776%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="9.3477%" y="149" width="0.2090%" height="15" fill="rgb(228,84,46)" fg:x="4070" fg:w="91"/><text x="9.6407%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="9.5567%" y="149" width="0.1516%" height="15" fill="rgb(254,188,9)" fg:x="4161" fg:w="66"/><text x="9.8497%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.66%)</title><rect x="9.1847%" y="165" width="0.6592%" height="15" fill="rgb(206,112,54)" fg:x="3999" fg:w="287"/><text x="9.4776%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8438%" y="165" width="0.1883%" height="15" fill="rgb(216,84,49)" fg:x="4286" fg:w="82"/><text x="10.1368%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,728 instructions, 3.97%)</title><rect x="6.5250%" y="181" width="3.9688%" height="15" fill="rgb(214,194,35)" fg:x="2841" fg:w="1728"/><text x="6.8180%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="10.4938%" y="181" width="0.1516%" height="15" fill="rgb(249,28,3)" fg:x="4569" fg:w="66"/><text x="10.7868%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6454%" y="181" width="0.0299%" height="15" fill="rgb(222,56,52)" fg:x="4635" fg:w="13"/><text x="10.9384%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.6752%" y="181" width="0.0299%" height="15" fill="rgb(245,217,50)" fg:x="4648" fg:w="13"/><text x="10.9682%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.7051%" y="181" width="0.0161%" height="15" fill="rgb(213,201,24)" fg:x="4661" fg:w="7"/><text x="10.9981%" y="191.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.7212%" y="181" width="0.0345%" height="15" fill="rgb(248,116,28)" fg:x="4668" fg:w="15"/><text x="11.0141%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="10.7556%" y="165" width="0.1883%" height="15" fill="rgb(219,72,43)" fg:x="4683" fg:w="82"/><text x="11.0486%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="10.7556%" y="181" width="0.3790%" height="15" fill="rgb(209,138,14)" fg:x="4683" fg:w="165"/><text x="11.0486%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.1346%" y="149" width="0.1883%" height="15" fill="rgb(222,18,33)" fg:x="4848" fg:w="82"/><text x="11.4276%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.27%)</title><rect x="11.1346%" y="165" width="0.2687%" height="15" fill="rgb(213,199,7)" fg:x="4848" fg:w="117"/><text x="11.4276%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.42%)</title><rect x="11.1346%" y="181" width="0.4249%" height="15" fill="rgb(250,110,10)" fg:x="4848" fg:w="185"/><text x="11.4276%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.5595%" y="181" width="0.1883%" height="15" fill="rgb(248,123,6)" fg:x="5033" fg:w="82"/><text x="11.8525%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="11.7478%" y="181" width="0.1860%" height="15" fill="rgb(206,91,31)" fg:x="5115" fg:w="81"/><text x="12.0408%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="11.9339%" y="181" width="0.1883%" height="15" fill="rgb(211,154,13)" fg:x="5196" fg:w="82"/><text x="12.2268%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="12.1222%" y="181" width="0.1883%" height="15" fill="rgb(225,148,7)" fg:x="5278" fg:w="82"/><text x="12.4152%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.3151%" y="181" width="0.1860%" height="15" fill="rgb(220,160,43)" fg:x="5362" fg:w="81"/><text x="12.6081%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="12.5011%" y="181" width="0.8751%" height="15" fill="rgb(213,52,39)" fg:x="5443" fg:w="381"/><text x="12.7941%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="13.3762%" y="181" width="0.8751%" height="15" fill="rgb(243,137,7)" fg:x="5824" fg:w="381"/><text x="13.6692%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,538 instructions, 15.02%)</title><rect x="1.3367%" y="197" width="15.0161%" height="15" fill="rgb(230,79,13)" fg:x="582" fg:w="6538"/><text x="1.6297%" y="207.50">candid::de::IDLDese..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="16.3528%" y="197" width="0.7717%" height="15" fill="rgb(247,105,23)" fg:x="7120" fg:w="336"/><text x="16.6457%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.11%)</title><rect x="17.1245%" y="181" width="0.1148%" height="15" fill="rgb(223,179,41)" fg:x="7456" fg:w="50"/><text x="17.4175%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.19%)</title><rect x="17.1245%" y="197" width="0.1929%" height="15" fill="rgb(218,9,34)" fg:x="7456" fg:w="84"/><text x="17.4175%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.3174%" y="197" width="0.1883%" height="15" fill="rgb(222,106,8)" fg:x="7540" fg:w="82"/><text x="17.6104%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.5057%" y="181" width="0.0115%" height="15" fill="rgb(211,220,0)" fg:x="7622" fg:w="5"/><text x="17.7987%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.5172%" y="165" width="0.1217%" height="15" fill="rgb(229,52,16)" fg:x="7627" fg:w="53"/><text x="17.8102%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="17.6390%" y="165" width="0.2044%" height="15" fill="rgb(212,155,18)" fg:x="7680" fg:w="89"/><text x="17.9319%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="17.8434%" y="165" width="0.3698%" height="15" fill="rgb(242,21,14)" fg:x="7769" fg:w="161"/><text x="18.1363%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="17.5172%" y="181" width="1.2402%" height="15" fill="rgb(222,19,48)" fg:x="7627" fg:w="540"/><text x="17.8102%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.7575%" y="181" width="0.1883%" height="15" fill="rgb(232,45,27)" fg:x="8167" fg:w="82"/><text x="19.0504%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="18.9458%" y="181" width="0.3124%" height="15" fill="rgb(249,103,42)" fg:x="8249" fg:w="136"/><text x="19.2388%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,175 instructions, 2.70%)</title><rect x="17.5057%" y="197" width="2.6987%" height="15" fill="rgb(246,81,33)" fg:x="7622" fg:w="1175"/><text x="17.7987%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="20.2044%" y="197" width="0.1883%" height="15" fill="rgb(252,33,42)" fg:x="8797" fg:w="82"/><text x="20.4974%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="20.3927%" y="181" width="0.0115%" height="15" fill="rgb(209,212,41)" fg:x="8879" fg:w="5"/><text x="20.6857%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="20.4042%" y="165" width="0.1217%" height="15" fill="rgb(207,154,6)" fg:x="8884" fg:w="53"/><text x="20.6972%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="20.5260%" y="165" width="0.2044%" height="15" fill="rgb(223,64,47)" fg:x="8937" fg:w="89"/><text x="20.8189%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="20.7304%" y="165" width="0.3698%" height="15" fill="rgb(211,161,38)" fg:x="9026" fg:w="161"/><text x="21.0233%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="20.4042%" y="181" width="1.2402%" height="15" fill="rgb(219,138,40)" fg:x="8884" fg:w="540"/><text x="20.6972%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="21.6445%" y="181" width="0.1562%" height="15" fill="rgb(241,228,46)" fg:x="9424" fg:w="68"/><text x="21.9374%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="21.8006%" y="165" width="0.1860%" height="15" fill="rgb(223,209,38)" fg:x="9492" fg:w="81"/><text x="22.0936%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="21.8006%" y="181" width="0.2480%" height="15" fill="rgb(236,164,45)" fg:x="9492" fg:w="108"/><text x="22.0936%" y="191.50"></text></g><g><title>candid::types::internal::env_add (889 instructions, 2.04%)</title><rect x="20.3927%" y="197" width="2.0418%" height="15" fill="rgb(231,15,5)" fg:x="8879" fg:w="889"/><text x="20.6857%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.4345%" y="149" width="0.1217%" height="15" fill="rgb(252,35,15)" fg:x="9768" fg:w="53"/><text x="22.7275%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="22.4345%" y="165" width="0.1814%" height="15" fill="rgb(248,181,18)" fg:x="9768" fg:w="79"/><text x="22.7275%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="22.4345%" y="181" width="0.6706%" height="15" fill="rgb(233,39,42)" fg:x="9768" fg:w="292"/><text x="22.7275%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.1052%" y="181" width="0.1883%" height="15" fill="rgb(238,110,33)" fg:x="10060" fg:w="82"/><text x="23.3982%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="23.2935%" y="181" width="0.3124%" height="15" fill="rgb(233,195,10)" fg:x="10142" fg:w="136"/><text x="23.5865%" y="191.50"></text></g><g><title>candid::types::internal::env_id (967 instructions, 2.22%)</title><rect x="22.4345%" y="197" width="2.2209%" height="15" fill="rgb(254,105,3)" fg:x="9768" fg:w="967"/><text x="22.7275%" y="207.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="24.6555%" y="197" width="0.0758%" height="15" fill="rgb(221,225,9)" fg:x="10735" fg:w="33"/><text x="24.9485%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="24.7313%" y="181" width="0.2825%" height="15" fill="rgb(224,227,45)" fg:x="10768" fg:w="123"/><text x="25.0243%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="25.0758%" y="181" width="0.2825%" height="15" fill="rgb(229,198,43)" fg:x="10918" fg:w="123"/><text x="25.3688%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.69%)</title><rect x="24.7313%" y="197" width="0.6890%" height="15" fill="rgb(206,209,35)" fg:x="10768" fg:w="300"/><text x="25.0243%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="25.4203%" y="181" width="0.0643%" height="15" fill="rgb(245,195,53)" fg:x="11068" fg:w="28"/><text x="25.7133%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="25.4203%" y="197" width="0.2228%" height="15" fill="rgb(240,92,26)" fg:x="11068" fg:w="97"/><text x="25.7133%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6431%" y="197" width="0.0253%" height="15" fill="rgb(207,40,23)" fg:x="11165" fg:w="11"/><text x="25.9361%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6684%" y="197" width="0.0253%" height="15" fill="rgb(223,111,35)" fg:x="11176" fg:w="11"/><text x="25.9613%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="25.6936%" y="197" width="0.0253%" height="15" fill="rgb(229,147,28)" fg:x="11187" fg:w="11"/><text x="25.9866%" y="207.50"></text></g><g><title>memcpy (411 instructions, 0.94%)</title><rect x="25.7189%" y="197" width="0.9440%" height="15" fill="rgb(211,29,28)" fg:x="11198" fg:w="411"/><text x="26.0118%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="26.6628%" y="165" width="0.0276%" height="15" fill="rgb(228,72,33)" fg:x="11609" fg:w="12"/><text x="26.9558%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="26.6904%" y="165" width="0.3859%" height="15" fill="rgb(205,214,31)" fg:x="11621" fg:w="168"/><text x="26.9834%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.0763%" y="133" width="0.1447%" height="15" fill="rgb(224,111,15)" fg:x="11789" fg:w="63"/><text x="27.3692%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (209 instructions, 0.48%)</title><rect x="27.0763%" y="149" width="0.4800%" height="15" fill="rgb(253,21,26)" fg:x="11789" fg:w="209"/><text x="27.3692%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.54%)</title><rect x="27.0763%" y="165" width="0.5420%" height="15" fill="rgb(245,139,43)" fg:x="11789" fg:w="236"/><text x="27.3692%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="27.6183%" y="165" width="0.0253%" height="15" fill="rgb(252,170,7)" fg:x="12025" fg:w="11"/><text x="27.9113%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (469 instructions, 1.08%)</title><rect x="26.6628%" y="181" width="1.0772%" height="15" fill="rgb(231,118,14)" fg:x="11609" fg:w="469"/><text x="26.9558%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (503 instructions, 1.16%)</title><rect x="26.6628%" y="197" width="1.1553%" height="15" fill="rgb(238,83,0)" fg:x="11609" fg:w="503"/><text x="26.9558%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="27.8181%" y="181" width="0.1263%" height="15" fill="rgb(221,39,39)" fg:x="12112" fg:w="55"/><text x="28.1111%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="27.9444%" y="181" width="0.1447%" height="15" fill="rgb(222,119,46)" fg:x="12167" fg:w="63"/><text x="28.2374%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (200 instructions, 0.46%)</title><rect x="27.8181%" y="197" width="0.4593%" height="15" fill="rgb(222,165,49)" fg:x="12112" fg:w="200"/><text x="28.1111%" y="207.50"></text></g><g><title>__multi3 (56 instructions, 0.13%)</title><rect x="28.2774%" y="197" width="0.1286%" height="15" fill="rgb(219,113,52)" fg:x="12312" fg:w="56"/><text x="28.5704%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="28.4061%" y="181" width="0.1263%" height="15" fill="rgb(214,7,15)" fg:x="12368" fg:w="55"/><text x="28.6990%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (162 instructions, 0.37%)</title><rect x="28.4061%" y="197" width="0.3721%" height="15" fill="rgb(235,32,4)" fg:x="12368" fg:w="162"/><text x="28.6990%" y="207.50"></text></g><g><title>__rust_realloc (104 instructions, 0.24%)</title><rect x="28.7781%" y="165" width="0.2389%" height="15" fill="rgb(238,90,54)" fg:x="12530" fg:w="104"/><text x="29.0711%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.32%)</title><rect x="28.7781%" y="181" width="0.3192%" height="15" fill="rgb(213,208,19)" fg:x="12530" fg:w="139"/><text x="29.0711%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="29.2765%" y="165" width="0.1746%" height="15" fill="rgb(233,156,4)" fg:x="12747" fg:w="76"/><text x="29.5695%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.25%)</title><rect x="29.2765%" y="181" width="0.2549%" height="15" fill="rgb(207,194,5)" fg:x="12747" fg:w="111"/><text x="29.5695%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (396 instructions, 0.91%)</title><rect x="28.7781%" y="197" width="0.9095%" height="15" fill="rgb(206,111,30)" fg:x="12530" fg:w="396"/><text x="29.0711%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (80 instructions, 0.18%)</title><rect x="29.6876%" y="197" width="0.1837%" height="15" fill="rgb(243,70,54)" fg:x="12926" fg:w="80"/><text x="29.9806%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="29.8714%" y="165" width="0.0115%" height="15" fill="rgb(242,28,8)" fg:x="13006" fg:w="5"/><text x="30.1644%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="29.8829%" y="165" width="0.0253%" height="15" fill="rgb(219,106,18)" fg:x="13011" fg:w="11"/><text x="30.1758%" y="175.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="29.9081%" y="165" width="0.3124%" height="15" fill="rgb(244,222,10)" fg:x="13022" fg:w="136"/><text x="30.2011%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (311 instructions, 0.71%)</title><rect x="29.8714%" y="181" width="0.7143%" height="15" fill="rgb(236,179,52)" fg:x="13006" fg:w="311"/><text x="30.1644%" y="191.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="30.5857%" y="181" width="0.0735%" height="15" fill="rgb(213,23,39)" fg:x="13317" fg:w="32"/><text x="30.8786%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.6592%" y="133" width="0.1746%" height="15" fill="rgb(238,48,10)" fg:x="13349" fg:w="76"/><text x="30.9521%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.25%)</title><rect x="30.6592%" y="149" width="0.2549%" height="15" fill="rgb(251,196,23)" fg:x="13349" fg:w="111"/><text x="30.9521%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.40%)</title><rect x="30.6592%" y="165" width="0.4042%" height="15" fill="rgb(250,152,24)" fg:x="13349" fg:w="176"/><text x="30.9521%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0634%" y="165" width="0.0253%" height="15" fill="rgb(209,150,17)" fg:x="13525" fg:w="11"/><text x="31.3564%" y="175.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="31.0887%" y="165" width="0.0253%" height="15" fill="rgb(234,202,34)" fg:x="13536" fg:w="11"/><text x="31.3816%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (363 instructions, 0.83%)</title><rect x="30.6592%" y="181" width="0.8337%" height="15" fill="rgb(253,148,53)" fg:x="13349" fg:w="363"/><text x="30.9521%" y="191.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="31.4929%" y="181" width="0.0689%" height="15" fill="rgb(218,129,16)" fg:x="13712" fg:w="30"/><text x="31.7858%" y="191.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="31.5618%" y="181" width="0.0115%" height="15" fill="rgb(216,85,19)" fg:x="13742" fg:w="5"/><text x="31.8548%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="31.5733%" y="165" width="0.0115%" height="15" fill="rgb(235,228,7)" fg:x="13747" fg:w="5"/><text x="31.8662%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="31.5847%" y="165" width="0.1263%" height="15" fill="rgb(245,175,0)" fg:x="13752" fg:w="55"/><text x="31.8777%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (110 instructions, 0.25%)</title><rect x="31.5733%" y="181" width="0.2526%" height="15" fill="rgb(208,168,36)" fg:x="13747" fg:w="110"/><text x="31.8662%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (922 instructions, 2.12%)</title><rect x="29.8714%" y="197" width="2.1176%" height="15" fill="rgb(246,171,24)" fg:x="13006" fg:w="922"/><text x="30.1644%" y="207.50">i..</text></g><g><title>timer::setTimer_0_::{{closure}} (14,078 instructions, 32.33%)</title><rect x="1.1484%" y="213" width="32.3335%" height="15" fill="rgb(215,142,24)" fg:x="500" fg:w="14078"/><text x="1.4413%" y="223.50">timer::setTimer_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="33.4819%" y="213" width="0.0276%" height="15" fill="rgb(250,187,7)" fg:x="14578" fg:w="12"/><text x="33.7748%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="33.5094%" y="213" width="0.1860%" height="15" fill="rgb(228,66,33)" fg:x="14590" fg:w="81"/><text x="33.8024%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="33.6955%" y="213" width="0.2894%" height="15" fill="rgb(234,215,21)" fg:x="14671" fg:w="126"/><text x="33.9884%" y="223.50"></text></g><g><title>canister_update setTimer (14,895 instructions, 34.21%)</title><rect x="0.0000%" y="229" width="34.2099%" height="15" fill="rgb(222,191,20)" fg:x="0" fg:w="14895"/><text x="0.2930%" y="239.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="34.2099%" y="213" width="0.0436%" height="15" fill="rgb(245,79,54)" fg:x="14895" fg:w="19"/><text x="34.5029%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="34.2536%" y="213" width="0.1814%" height="15" fill="rgb(240,10,37)" fg:x="14914" fg:w="79"/><text x="34.5465%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.4350%" y="213" width="0.1746%" height="15" fill="rgb(214,192,32)" fg:x="14993" fg:w="76"/><text x="34.7280%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6096%" y="197" width="0.1883%" height="15" fill="rgb(209,36,54)" fg:x="15069" fg:w="82"/><text x="34.9025%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="34.7979%" y="197" width="0.1746%" height="15" fill="rgb(220,10,11)" fg:x="15151" fg:w="76"/><text x="35.0909%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.9816%" y="197" width="0.1883%" height="15" fill="rgb(221,106,17)" fg:x="15231" fg:w="82"/><text x="35.2746%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="35.1700%" y="197" width="0.0436%" height="15" fill="rgb(251,142,44)" fg:x="15313" fg:w="19"/><text x="35.4629%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="35.2136%" y="181" width="0.1746%" height="15" fill="rgb(238,13,15)" fg:x="15332" fg:w="76"/><text x="35.5066%" y="191.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="35.3881%" y="181" width="0.2664%" height="15" fill="rgb(208,107,27)" fg:x="15408" fg:w="116"/><text x="35.6811%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="35.6546%" y="181" width="0.3790%" height="15" fill="rgb(205,136,37)" fg:x="15524" fg:w="165"/><text x="35.9475%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="36.0335%" y="181" width="0.1263%" height="15" fill="rgb(250,205,27)" fg:x="15689" fg:w="55"/><text x="36.3265%" y="191.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="35.2136%" y="197" width="1.1667%" height="15" fill="rgb(210,80,43)" fg:x="15332" fg:w="508"/><text x="35.5066%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.3803%" y="181" width="0.0115%" height="15" fill="rgb(247,160,36)" fg:x="15840" fg:w="5"/><text x="36.6733%" y="191.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="36.3918%" y="181" width="0.3124%" height="15" fill="rgb(234,13,49)" fg:x="15845" fg:w="136"/><text x="36.6848%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (261 instructions, 0.60%)</title><rect x="36.3803%" y="197" width="0.5994%" height="15" fill="rgb(234,122,0)" fg:x="15840" fg:w="261"/><text x="36.6733%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="36.9798%" y="165" width="0.0115%" height="15" fill="rgb(207,146,38)" fg:x="16101" fg:w="5"/><text x="37.2728%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="36.9798%" y="181" width="0.0896%" height="15" fill="rgb(207,177,25)" fg:x="16101" fg:w="39"/><text x="37.2728%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="37.0694%" y="181" width="0.1883%" height="15" fill="rgb(211,178,42)" fg:x="16140" fg:w="82"/><text x="37.3623%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="37.2577%" y="165" width="0.0115%" height="15" fill="rgb(230,69,54)" fg:x="16222" fg:w="5"/><text x="37.5507%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="37.2692%" y="149" width="0.1217%" height="15" fill="rgb(214,135,41)" fg:x="16227" fg:w="53"/><text x="37.5621%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="37.3909%" y="149" width="0.2044%" height="15" fill="rgb(237,67,25)" fg:x="16280" fg:w="89"/><text x="37.6839%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="37.5953%" y="149" width="0.3698%" height="15" fill="rgb(222,189,50)" fg:x="16369" fg:w="161"/><text x="37.8883%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="37.2692%" y="165" width="1.2402%" height="15" fill="rgb(245,148,34)" fg:x="16227" fg:w="540"/><text x="37.5621%" y="175.50"></text></g><g><title>candid::types::internal::env_add (755 instructions, 1.73%)</title><rect x="37.2577%" y="181" width="1.7340%" height="15" fill="rgb(222,29,6)" fg:x="16222" fg:w="755"/><text x="37.5507%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="38.9917%" y="181" width="0.1883%" height="15" fill="rgb(221,189,43)" fg:x="16977" fg:w="82"/><text x="39.2847%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="39.1801%" y="165" width="0.0115%" height="15" fill="rgb(207,36,27)" fg:x="17059" fg:w="5"/><text x="39.4730%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="39.1915%" y="149" width="0.1217%" height="15" fill="rgb(217,90,24)" fg:x="17064" fg:w="53"/><text x="39.4845%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="39.3133%" y="149" width="0.2044%" height="15" fill="rgb(224,66,35)" fg:x="17117" fg:w="89"/><text x="39.6062%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="39.5177%" y="149" width="0.3698%" height="15" fill="rgb(221,13,50)" fg:x="17206" fg:w="161"/><text x="39.8107%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="39.1915%" y="165" width="1.2402%" height="15" fill="rgb(236,68,49)" fg:x="17064" fg:w="540"/><text x="39.4845%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="40.4318%" y="165" width="0.1562%" height="15" fill="rgb(229,146,28)" fg:x="17604" fg:w="68"/><text x="40.7248%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.5880%" y="149" width="0.1860%" height="15" fill="rgb(225,31,38)" fg:x="17672" fg:w="81"/><text x="40.8809%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="40.5880%" y="165" width="0.2480%" height="15" fill="rgb(250,208,3)" fg:x="17672" fg:w="108"/><text x="40.8809%" y="175.50"></text></g><g><title>candid::types::internal::env_add (889 instructions, 2.04%)</title><rect x="39.1801%" y="181" width="2.0418%" height="15" fill="rgb(246,54,23)" fg:x="17059" fg:w="889"/><text x="39.4730%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.2219%" y="133" width="0.1217%" height="15" fill="rgb(243,76,11)" fg:x="17948" fg:w="53"/><text x="41.5148%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="41.2219%" y="149" width="0.1814%" height="15" fill="rgb(245,21,50)" fg:x="17948" fg:w="79"/><text x="41.5148%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.67%)</title><rect x="41.2219%" y="165" width="0.6706%" height="15" fill="rgb(228,9,43)" fg:x="17948" fg:w="292"/><text x="41.5148%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.176 (15 instructions, 0.03%)</title><rect x="41.8925%" y="165" width="0.0345%" height="15" fill="rgb(208,100,47)" fg:x="18240" fg:w="15"/><text x="42.1855%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="41.9270%" y="165" width="0.0253%" height="15" fill="rgb(232,26,8)" fg:x="18255" fg:w="11"/><text x="42.2199%" y="175.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.10%)</title><rect x="41.2219%" y="181" width="1.0978%" height="15" fill="rgb(216,166,38)" fg:x="17948" fg:w="478"/><text x="41.5148%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,432 instructions, 5.59%)</title><rect x="36.9798%" y="197" width="5.5857%" height="15" fill="rgb(251,202,51)" fg:x="16101" fg:w="2432"/><text x="37.2728%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.5655%" y="165" width="0.1746%" height="15" fill="rgb(254,216,34)" fg:x="18533" fg:w="76"/><text x="42.8584%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.25%)</title><rect x="42.5655%" y="181" width="0.2549%" height="15" fill="rgb(251,32,27)" fg:x="18533" fg:w="111"/><text x="42.8584%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.41%)</title><rect x="42.5655%" y="197" width="0.4111%" height="15" fill="rgb(208,127,28)" fg:x="18533" fg:w="179"/><text x="42.8584%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="42.9766%" y="181" width="0.0413%" height="15" fill="rgb(224,137,22)" fg:x="18712" fg:w="18"/><text x="43.2695%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.0179%" y="181" width="0.0253%" height="15" fill="rgb(254,70,32)" fg:x="18730" fg:w="11"/><text x="43.3109%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (81 instructions, 0.19%)</title><rect x="42.9766%" y="197" width="0.1860%" height="15" fill="rgb(229,75,37)" fg:x="18712" fg:w="81"/><text x="43.2695%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.1626%" y="197" width="0.0253%" height="15" fill="rgb(252,64,23)" fg:x="18793" fg:w="11"/><text x="43.4556%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="43.1879%" y="165" width="0.1677%" height="15" fill="rgb(232,162,48)" fg:x="18804" fg:w="73"/><text x="43.4808%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.25%)</title><rect x="43.1879%" y="181" width="0.2480%" height="15" fill="rgb(246,160,12)" fg:x="18804" fg:w="108"/><text x="43.4808%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="43.5852%" y="165" width="0.2710%" height="15" fill="rgb(247,166,0)" fg:x="18977" fg:w="118"/><text x="43.8782%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 instructions, 0.35%)</title><rect x="43.5852%" y="181" width="0.3514%" height="15" fill="rgb(249,219,21)" fg:x="18977" fg:w="153"/><text x="43.8782%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (391 instructions, 0.90%)</title><rect x="43.1879%" y="197" width="0.8980%" height="15" fill="rgb(205,209,3)" fg:x="18804" fg:w="391"/><text x="43.4808%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.0859%" y="149" width="0.1746%" height="15" fill="rgb(243,44,1)" fg:x="19195" fg:w="76"/><text x="44.3789%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.25%)</title><rect x="44.0859%" y="165" width="0.2549%" height="15" fill="rgb(206,159,16)" fg:x="19195" fg:w="111"/><text x="44.3789%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.40%)</title><rect x="44.0859%" y="181" width="0.4042%" height="15" fill="rgb(244,77,30)" fg:x="19195" fg:w="176"/><text x="44.3789%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="44.4901%" y="181" width="0.0253%" height="15" fill="rgb(218,69,12)" fg:x="19371" fg:w="11"/><text x="44.7831%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="44.5154%" y="133" width="0.1677%" height="15" fill="rgb(212,87,7)" fg:x="19382" fg:w="73"/><text x="44.8084%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.25%)</title><rect x="44.5154%" y="149" width="0.2480%" height="15" fill="rgb(245,114,25)" fg:x="19382" fg:w="108"/><text x="44.8084%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (173 instructions, 0.40%)</title><rect x="44.5154%" y="165" width="0.3973%" height="15" fill="rgb(210,61,42)" fg:x="19382" fg:w="173"/><text x="44.8084%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (228 instructions, 0.52%)</title><rect x="44.5154%" y="181" width="0.5237%" height="15" fill="rgb(211,52,33)" fg:x="19382" fg:w="228"/><text x="44.8084%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="45.0390%" y="181" width="0.0689%" height="15" fill="rgb(234,58,33)" fg:x="19610" fg:w="30"/><text x="45.3320%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="45.1079%" y="181" width="0.1860%" height="15" fill="rgb(220,115,36)" fg:x="19640" fg:w="81"/><text x="45.4009%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (732 instructions, 1.68%)</title><rect x="44.0859%" y="197" width="1.6812%" height="15" fill="rgb(243,153,54)" fg:x="19195" fg:w="732"/><text x="44.3789%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="45.7671%" y="197" width="0.1378%" height="15" fill="rgb(251,47,18)" fg:x="19927" fg:w="60"/><text x="46.0601%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="45.9049%" y="149" width="0.1814%" height="15" fill="rgb(242,102,42)" fg:x="19987" fg:w="79"/><text x="46.1979%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.45%)</title><rect x="46.0864%" y="149" width="0.4479%" height="15" fill="rgb(234,31,38)" fg:x="20066" fg:w="195"/><text x="46.3793%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="46.5342%" y="149" width="0.1860%" height="15" fill="rgb(221,117,51)" fg:x="20261" fg:w="81"/><text x="46.8272%" y="159.50"></text></g><g><title>__rust_realloc (439 instructions, 1.01%)</title><rect x="45.9049%" y="165" width="1.0083%" height="15" fill="rgb(212,20,18)" fg:x="19987" fg:w="439"/><text x="46.1979%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (474 instructions, 1.09%)</title><rect x="45.9049%" y="181" width="1.0887%" height="15" fill="rgb(245,133,36)" fg:x="19987" fg:w="474"/><text x="46.1979%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (547 instructions, 1.26%)</title><rect x="45.9049%" y="197" width="1.2563%" height="15" fill="rgb(212,6,19)" fg:x="19987" fg:w="547"/><text x="46.1979%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.31%)</title><rect x="47.1612%" y="197" width="0.3101%" height="15" fill="rgb(218,1,36)" fg:x="20534" fg:w="135"/><text x="47.4542%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="47.4713%" y="197" width="0.0115%" height="15" fill="rgb(246,84,54)" fg:x="20669" fg:w="5"/><text x="47.7643%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="47.4828%" y="197" width="0.0253%" height="15" fill="rgb(242,110,6)" fg:x="20674" fg:w="11"/><text x="47.7757%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="47.5080%" y="197" width="0.1860%" height="15" fill="rgb(214,47,5)" fg:x="20685" fg:w="81"/><text x="47.8010%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.6941%" y="197" width="0.2894%" height="15" fill="rgb(218,159,25)" fg:x="20766" fg:w="126"/><text x="47.9870%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="47.9835%" y="197" width="0.2894%" height="15" fill="rgb(215,211,28)" fg:x="20892" fg:w="126"/><text x="48.2764%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="48.2729%" y="197" width="0.1814%" height="15" fill="rgb(238,59,32)" fg:x="21018" fg:w="79"/><text x="48.5658%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="48.4543%" y="197" width="0.1883%" height="15" fill="rgb(226,82,3)" fg:x="21097" fg:w="82"/><text x="48.7473%" y="207.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.05%)</title><rect x="48.6426%" y="197" width="0.0459%" height="15" fill="rgb(240,164,32)" fg:x="21179" fg:w="20"/><text x="48.9356%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (53 instructions, 0.12%)</title><rect x="48.6886%" y="181" width="0.1217%" height="15" fill="rgb(232,46,7)" fg:x="21199" fg:w="53"/><text x="48.9815%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake_by_ref (68 instructions, 0.16%)</title><rect x="48.6886%" y="197" width="0.1562%" height="15" fill="rgb(229,129,53)" fg:x="21199" fg:w="68"/><text x="48.9815%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="48.8447%" y="197" width="0.0413%" height="15" fill="rgb(234,188,29)" fg:x="21267" fg:w="18"/><text x="49.1377%" y="207.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,573 instructions, 17.39%)</title><rect x="34.6096%" y="213" width="17.3932%" height="15" fill="rgb(246,141,4)" fg:x="15069" fg:w="7573"/><text x="34.9025%" y="223.50">ic_cdk_timers::global_t..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="52.0028%" y="213" width="0.0276%" height="15" fill="rgb(229,23,39)" fg:x="22642" fg:w="12"/><text x="52.2957%" y="223.50"></text></g><g><title>canister_global_timer (7,845 instructions, 18.02%)</title><rect x="34.2099%" y="229" width="18.0179%" height="15" fill="rgb(206,12,3)" fg:x="14895" fg:w="7845"/><text x="34.5029%" y="239.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="52.2278%" y="213" width="0.2710%" height="15" fill="rgb(252,226,20)" fg:x="22740" fg:w="118"/><text x="52.5208%" y="223.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="52.4989%" y="213" width="0.2664%" height="15" fill="rgb(216,123,35)" fg:x="22858" fg:w="116"/><text x="52.7918%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="52.7653%" y="213" width="0.3790%" height="15" fill="rgb(212,68,40)" fg:x="22974" fg:w="165"/><text x="53.0582%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="53.1442%" y="213" width="0.1263%" height="15" fill="rgb(254,125,32)" fg:x="23139" fg:w="55"/><text x="53.4372%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="53.2706%" y="197" width="0.1746%" height="15" fill="rgb(253,97,22)" fg:x="23194" fg:w="76"/><text x="53.5635%" y="207.50"></text></g><g><title>memset (116 instructions, 0.27%)</title><rect x="53.4451%" y="197" width="0.2664%" height="15" fill="rgb(241,101,14)" fg:x="23270" fg:w="116"/><text x="53.7381%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.38%)</title><rect x="53.7115%" y="197" width="0.3790%" height="15" fill="rgb(238,103,29)" fg:x="23386" fg:w="165"/><text x="54.0045%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="54.0905%" y="197" width="0.1263%" height="15" fill="rgb(233,195,47)" fg:x="23551" fg:w="55"/><text x="54.3835%" y="207.50"></text></g><g><title>ic_cdk::api::id (508 instructions, 1.17%)</title><rect x="53.2706%" y="213" width="1.1667%" height="15" fill="rgb(246,218,30)" fg:x="23194" fg:w="508"/><text x="53.5635%" y="223.50"></text></g><g><title>memcmp (614 instructions, 1.41%)</title><rect x="54.4373%" y="213" width="1.4102%" height="15" fill="rgb(219,145,47)" fg:x="23702" fg:w="614"/><text x="54.7303%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="55.8475%" y="213" width="0.1677%" height="15" fill="rgb(243,12,26)" fg:x="24316" fg:w="73"/><text x="56.1405%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="56.0152%" y="197" width="0.1631%" height="15" fill="rgb(214,87,16)" fg:x="24389" fg:w="71"/><text x="56.3081%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="56.1782%" y="197" width="0.9187%" height="15" fill="rgb(208,99,42)" fg:x="24460" fg:w="400"/><text x="56.4712%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="57.0969%" y="197" width="0.1952%" height="15" fill="rgb(253,99,2)" fg:x="24860" fg:w="85"/><text x="57.3899%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.2921%" y="197" width="0.1240%" height="15" fill="rgb(220,168,23)" fg:x="24945" fg:w="54"/><text x="57.5851%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.4162%" y="197" width="0.1240%" height="15" fill="rgb(242,38,24)" fg:x="24999" fg:w="54"/><text x="57.7091%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.5402%" y="197" width="0.1240%" height="15" fill="rgb(225,182,9)" fg:x="25053" fg:w="54"/><text x="57.8332%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="57.6642%" y="197" width="0.1240%" height="15" fill="rgb(243,178,37)" fg:x="25107" fg:w="54"/><text x="57.9572%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="57.7882%" y="197" width="0.1631%" height="15" fill="rgb(232,139,19)" fg:x="25161" fg:w="71"/><text x="58.0812%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="57.9513%" y="197" width="0.1493%" height="15" fill="rgb(225,201,24)" fg:x="25232" fg:w="65"/><text x="58.2443%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="58.1006%" y="197" width="0.9187%" height="15" fill="rgb(221,47,46)" fg:x="25297" fg:w="400"/><text x="58.3936%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="59.0193%" y="197" width="0.0367%" height="15" fill="rgb(249,23,13)" fg:x="25697" fg:w="16"/><text x="59.3123%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="59.0560%" y="181" width="0.1883%" height="15" fill="rgb(219,9,5)" fg:x="25713" fg:w="82"/><text x="59.3490%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="59.2444%" y="149" width="0.1378%" height="15" fill="rgb(254,171,16)" fg:x="25795" fg:w="60"/><text x="59.5373%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="59.2444%" y="165" width="0.1952%" height="15" fill="rgb(230,171,20)" fg:x="25795" fg:w="85"/><text x="59.5373%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.4396%" y="117" width="0.0207%" height="15" fill="rgb(210,71,41)" fg:x="25880" fg:w="9"/><text x="59.7326%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="59.4603%" y="101" width="0.0689%" height="15" fill="rgb(206,173,20)" fg:x="25889" fg:w="30"/><text x="59.7532%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="59.4603%" y="117" width="0.1263%" height="15" fill="rgb(233,88,34)" fg:x="25889" fg:w="55"/><text x="59.7532%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="59.4396%" y="133" width="0.2710%" height="15" fill="rgb(223,209,46)" fg:x="25880" fg:w="118"/><text x="59.7326%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="59.4396%" y="149" width="0.3927%" height="15" fill="rgb(250,43,18)" fg:x="25880" fg:w="171"/><text x="59.7326%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="59.4396%" y="165" width="0.4042%" height="15" fill="rgb(208,13,10)" fg:x="25880" fg:w="176"/><text x="59.7326%" y="175.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="59.2444%" y="181" width="0.8544%" height="15" fill="rgb(212,200,36)" fg:x="25795" fg:w="372"/><text x="59.5373%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="59.0560%" y="197" width="1.3780%" height="15" fill="rgb(225,90,30)" fg:x="25713" fg:w="600"/><text x="59.3490%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="60.4341%" y="197" width="0.1952%" height="15" fill="rgb(236,182,39)" fg:x="26313" fg:w="85"/><text x="60.7271%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="60.6293%" y="197" width="0.1309%" height="15" fill="rgb(212,144,35)" fg:x="26398" fg:w="57"/><text x="60.9223%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="60.7602%" y="197" width="0.1516%" height="15" fill="rgb(228,63,44)" fg:x="26455" fg:w="66"/><text x="61.0532%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="60.9118%" y="197" width="0.1493%" height="15" fill="rgb(228,109,6)" fg:x="26521" fg:w="65"/><text x="61.2048%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="61.0611%" y="181" width="0.9187%" height="15" fill="rgb(238,117,24)" fg:x="26586" fg:w="400"/><text x="61.3541%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="61.9798%" y="181" width="0.0367%" height="15" fill="rgb(242,26,26)" fg:x="26986" fg:w="16"/><text x="62.2728%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="62.0165%" y="165" width="0.1883%" height="15" fill="rgb(221,92,48)" fg:x="27002" fg:w="82"/><text x="62.3095%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="62.2049%" y="133" width="0.1378%" height="15" fill="rgb(209,209,32)" fg:x="27084" fg:w="60"/><text x="62.4978%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="62.2049%" y="149" width="0.1952%" height="15" fill="rgb(221,70,22)" fg:x="27084" fg:w="85"/><text x="62.4978%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.4001%" y="101" width="0.0207%" height="15" fill="rgb(248,145,5)" fg:x="27169" fg:w="9"/><text x="62.6931%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="62.4208%" y="85" width="0.0689%" height="15" fill="rgb(226,116,26)" fg:x="27178" fg:w="30"/><text x="62.7137%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="62.4208%" y="101" width="0.1263%" height="15" fill="rgb(244,5,17)" fg:x="27178" fg:w="55"/><text x="62.7137%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="62.4001%" y="117" width="0.2710%" height="15" fill="rgb(252,159,33)" fg:x="27169" fg:w="118"/><text x="62.6931%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="62.4001%" y="133" width="0.3927%" height="15" fill="rgb(206,71,0)" fg:x="27169" fg:w="171"/><text x="62.6931%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="62.4001%" y="149" width="0.4042%" height="15" fill="rgb(233,118,54)" fg:x="27169" fg:w="176"/><text x="62.6931%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="62.2049%" y="165" width="0.8544%" height="15" fill="rgb(234,83,48)" fg:x="27084" fg:w="372"/><text x="62.4978%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.38%)</title><rect x="62.0165%" y="181" width="1.3780%" height="15" fill="rgb(228,3,54)" fg:x="27002" fg:w="600"/><text x="62.3095%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="63.3946%" y="181" width="0.1952%" height="15" fill="rgb(226,155,13)" fg:x="27602" fg:w="85"/><text x="63.6875%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="63.5898%" y="181" width="0.1309%" height="15" fill="rgb(241,28,37)" fg:x="27687" fg:w="57"/><text x="63.8828%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="63.7207%" y="165" width="0.1631%" height="15" fill="rgb(233,93,10)" fg:x="27744" fg:w="71"/><text x="64.0137%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="63.8838%" y="165" width="0.2090%" height="15" fill="rgb(225,113,19)" fg:x="27815" fg:w="91"/><text x="64.1768%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="64.0928%" y="165" width="0.1516%" height="15" fill="rgb(241,2,18)" fg:x="27906" fg:w="66"/><text x="64.3858%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.66%)</title><rect x="63.7207%" y="181" width="0.6592%" height="15" fill="rgb(228,207,21)" fg:x="27744" fg:w="287"/><text x="64.0137%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.3799%" y="181" width="0.1883%" height="15" fill="rgb(213,211,35)" fg:x="28031" fg:w="82"/><text x="64.6728%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,728 instructions, 3.97%)</title><rect x="61.0611%" y="197" width="3.9688%" height="15" fill="rgb(209,83,10)" fg:x="26586" fg:w="1728"/><text x="61.3541%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="65.0299%" y="197" width="0.1516%" height="15" fill="rgb(209,164,1)" fg:x="28314" fg:w="66"/><text x="65.3228%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.1814%" y="197" width="0.0299%" height="15" fill="rgb(213,184,43)" fg:x="28380" fg:w="13"/><text x="65.4744%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.2113%" y="197" width="0.0299%" height="15" fill="rgb(231,61,34)" fg:x="28393" fg:w="13"/><text x="65.5043%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="65.2412%" y="197" width="0.0161%" height="15" fill="rgb(235,75,3)" fg:x="28406" fg:w="7"/><text x="65.5341%" y="207.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="65.2572%" y="197" width="0.0345%" height="15" fill="rgb(220,106,47)" fg:x="28413" fg:w="15"/><text x="65.5502%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.2917%" y="181" width="0.1883%" height="15" fill="rgb(210,196,33)" fg:x="28428" fg:w="82"/><text x="65.5847%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.38%)</title><rect x="65.2917%" y="197" width="0.3790%" height="15" fill="rgb(229,154,42)" fg:x="28428" fg:w="165"/><text x="65.5847%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="65.6706%" y="165" width="0.1883%" height="15" fill="rgb(228,114,26)" fg:x="28593" fg:w="82"/><text x="65.9636%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.27%)</title><rect x="65.6706%" y="181" width="0.2687%" height="15" fill="rgb(208,144,1)" fg:x="28593" fg:w="117"/><text x="65.9636%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.42%)</title><rect x="65.6706%" y="197" width="0.4249%" height="15" fill="rgb(239,112,37)" fg:x="28593" fg:w="185"/><text x="65.9636%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.0955%" y="197" width="0.1883%" height="15" fill="rgb(210,96,50)" fg:x="28778" fg:w="82"/><text x="66.3885%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.2839%" y="197" width="0.1860%" height="15" fill="rgb(222,178,2)" fg:x="28860" fg:w="81"/><text x="66.5768%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.4699%" y="197" width="0.1883%" height="15" fill="rgb(226,74,18)" fg:x="28941" fg:w="82"/><text x="66.7629%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.6582%" y="197" width="0.1883%" height="15" fill="rgb(225,67,54)" fg:x="29023" fg:w="82"/><text x="66.9512%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="66.8512%" y="197" width="0.1860%" height="15" fill="rgb(251,92,32)" fg:x="29107" fg:w="81"/><text x="67.1441%" y="207.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="67.0372%" y="197" width="0.8751%" height="15" fill="rgb(228,149,22)" fg:x="29188" fg:w="381"/><text x="67.3302%" y="207.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="67.9123%" y="197" width="0.8751%" height="15" fill="rgb(243,54,13)" fg:x="29569" fg:w="381"/><text x="68.2052%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,476 instructions, 14.87%)</title><rect x="56.0152%" y="213" width="14.8737%" height="15" fill="rgb(243,180,28)" fg:x="24389" fg:w="6476"/><text x="56.3081%" y="223.50">candid::de::IDLDese..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="70.8888%" y="213" width="0.7717%" height="15" fill="rgb(208,167,24)" fg:x="30865" fg:w="336"/><text x="71.1818%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.6605%" y="181" width="0.0115%" height="15" fill="rgb(245,73,45)" fg:x="31201" fg:w="5"/><text x="71.9535%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="71.6720%" y="165" width="0.1217%" height="15" fill="rgb(237,203,48)" fg:x="31206" fg:w="53"/><text x="71.9650%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.20%)</title><rect x="71.7938%" y="165" width="0.2044%" height="15" fill="rgb(211,197,16)" fg:x="31259" fg:w="89"/><text x="72.0867%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.37%)</title><rect x="71.9982%" y="165" width="0.3698%" height="15" fill="rgb(243,99,51)" fg:x="31348" fg:w="161"/><text x="72.2911%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.24%)</title><rect x="71.6720%" y="181" width="1.2402%" height="15" fill="rgb(215,123,29)" fg:x="31206" fg:w="540"/><text x="71.9650%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="72.9123%" y="181" width="0.1562%" height="15" fill="rgb(239,186,37)" fg:x="31746" fg:w="68"/><text x="73.2052%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (771 instructions, 1.77%)</title><rect x="71.6605%" y="197" width="1.7708%" height="15" fill="rgb(252,136,39)" fg:x="31201" fg:w="771"/><text x="71.9535%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (803 instructions, 1.84%)</title><rect x="71.6605%" y="213" width="1.8443%" height="15" fill="rgb(223,213,32)" fg:x="31201" fg:w="803"/><text x="71.9535%" y="223.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="73.5048%" y="213" width="0.0758%" height="15" fill="rgb(233,115,5)" fg:x="32004" fg:w="33"/><text x="73.7978%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="73.5806%" y="197" width="0.1309%" height="15" fill="rgb(207,226,44)" fg:x="32037" fg:w="57"/><text x="73.8736%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="73.7735%" y="197" width="0.1309%" height="15" fill="rgb(208,126,0)" fg:x="32121" fg:w="57"/><text x="74.0665%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (168 instructions, 0.39%)</title><rect x="73.5806%" y="213" width="0.3859%" height="15" fill="rgb(244,66,21)" fg:x="32037" fg:w="168"/><text x="73.8736%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.9665%" y="197" width="0.0643%" height="15" fill="rgb(222,97,12)" fg:x="32205" fg:w="28"/><text x="74.2594%" y="207.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (97 instructions, 0.22%)</title><rect x="73.9665%" y="213" width="0.2228%" height="15" fill="rgb(219,213,19)" fg:x="32205" fg:w="97"/><text x="74.2594%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.1893%" y="213" width="0.0253%" height="15" fill="rgb(252,169,30)" fg:x="32302" fg:w="11"/><text x="74.4822%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2145%" y="213" width="0.0253%" height="15" fill="rgb(206,32,51)" fg:x="32313" fg:w="11"/><text x="74.5075%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="74.2398%" y="213" width="0.0253%" height="15" fill="rgb(250,172,42)" fg:x="32324" fg:w="11"/><text x="74.5327%" y="223.50"></text></g><g><title>memcpy (411 instructions, 0.94%)</title><rect x="74.2650%" y="213" width="0.9440%" height="15" fill="rgb(209,34,43)" fg:x="32335" fg:w="411"/><text x="74.5580%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.2090%" y="181" width="0.0276%" height="15" fill="rgb(223,11,35)" fg:x="32746" fg:w="12"/><text x="75.5020%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (102 instructions, 0.23%)</title><rect x="75.2366%" y="181" width="0.2343%" height="15" fill="rgb(251,219,26)" fg:x="32758" fg:w="102"/><text x="75.5295%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (102 instructions, 0.23%)</title><rect x="75.4708%" y="165" width="0.2343%" height="15" fill="rgb(231,119,3)" fg:x="32860" fg:w="102"/><text x="75.7638%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (129 instructions, 0.30%)</title><rect x="75.4708%" y="181" width="0.2963%" height="15" fill="rgb(216,97,11)" fg:x="32860" fg:w="129"/><text x="75.7638%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="75.7671%" y="181" width="0.0253%" height="15" fill="rgb(223,59,9)" fg:x="32989" fg:w="11"/><text x="76.0601%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (296 instructions, 0.68%)</title><rect x="75.2090%" y="197" width="0.6798%" height="15" fill="rgb(233,93,31)" fg:x="32746" fg:w="296"/><text x="75.5020%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (330 instructions, 0.76%)</title><rect x="75.2090%" y="213" width="0.7579%" height="15" fill="rgb(239,81,33)" fg:x="32746" fg:w="330"/><text x="75.5020%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="75.9669%" y="213" width="0.1860%" height="15" fill="rgb(213,120,34)" fg:x="33076" fg:w="81"/><text x="76.2599%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.1713%" y="197" width="0.0115%" height="15" fill="rgb(243,49,53)" fg:x="33165" fg:w="5"/><text x="76.4643%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="76.1828%" y="181" width="0.1860%" height="15" fill="rgb(247,216,33)" fg:x="33170" fg:w="81"/><text x="76.4758%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.1828%" y="197" width="0.2480%" height="15" fill="rgb(226,26,14)" fg:x="33170" fg:w="108"/><text x="76.4758%" y="207.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="76.4309%" y="197" width="0.3124%" height="15" fill="rgb(215,49,53)" fg:x="33278" fg:w="136"/><text x="76.7238%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (408 instructions, 0.94%)</title><rect x="76.1713%" y="213" width="0.9371%" height="15" fill="rgb(245,162,40)" fg:x="33165" fg:w="408"/><text x="76.4643%" y="223.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="77.1084%" y="213" width="0.0735%" height="15" fill="rgb(229,68,17)" fg:x="33573" fg:w="32"/><text x="77.4014%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="77.1819%" y="165" width="0.2710%" height="15" fill="rgb(213,182,10)" fg:x="33605" fg:w="118"/><text x="77.4749%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 instructions, 0.35%)</title><rect x="77.1819%" y="181" width="0.3514%" height="15" fill="rgb(245,125,30)" fg:x="33605" fg:w="153"/><text x="77.4749%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (218 instructions, 0.50%)</title><rect x="77.1819%" y="197" width="0.5007%" height="15" fill="rgb(232,202,2)" fg:x="33605" fg:w="218"/><text x="77.4749%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.6826%" y="197" width="0.0253%" height="15" fill="rgb(237,140,51)" fg:x="33823" fg:w="11"/><text x="77.9756%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="77.7079%" y="197" width="0.0253%" height="15" fill="rgb(236,157,25)" fg:x="33834" fg:w="11"/><text x="78.0008%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (405 instructions, 0.93%)</title><rect x="77.1819%" y="213" width="0.9302%" height="15" fill="rgb(219,209,0)" fg:x="33605" fg:w="405"/><text x="77.4749%" y="223.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="78.1121%" y="213" width="0.0689%" height="15" fill="rgb(240,116,54)" fg:x="34010" fg:w="30"/><text x="78.4050%" y="223.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="78.1810%" y="213" width="0.0115%" height="15" fill="rgb(216,10,36)" fg:x="34040" fg:w="5"/><text x="78.4740%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.1925%" y="213" width="0.0115%" height="15" fill="rgb(222,72,44)" fg:x="34045" fg:w="5"/><text x="78.4854%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="78.2040%" y="213" width="0.1263%" height="15" fill="rgb(232,159,9)" fg:x="34050" fg:w="55"/><text x="78.4969%" y="223.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (12,053 instructions, 27.68%)</title><rect x="52.2278%" y="229" width="27.6826%" height="15" fill="rgb(210,39,32)" fg:x="22740" fg:w="12053"/><text x="52.5208%" y="239.50">canister_update &lt;ic-cdk internal&gt; time..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="79.9104%" y="213" width="0.1746%" height="15" fill="rgb(216,194,45)" fg:x="34793" fg:w="76"/><text x="80.2034%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.0850%" y="165" width="0.0436%" height="15" fill="rgb(218,18,35)" fg:x="34869" fg:w="19"/><text x="80.3779%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="80.1286%" y="149" width="0.1631%" height="15" fill="rgb(207,83,51)" fg:x="34888" fg:w="71"/><text x="80.4216%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="80.2917%" y="149" width="0.9187%" height="15" fill="rgb(225,63,43)" fg:x="34959" fg:w="400"/><text x="80.5847%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="81.2104%" y="149" width="0.1952%" height="15" fill="rgb(207,57,36)" fg:x="35359" fg:w="85"/><text x="81.5034%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.4056%" y="149" width="0.1240%" height="15" fill="rgb(216,99,33)" fg:x="35444" fg:w="54"/><text x="81.6986%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.5296%" y="149" width="0.1240%" height="15" fill="rgb(225,42,16)" fg:x="35498" fg:w="54"/><text x="81.8226%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.6537%" y="149" width="0.1240%" height="15" fill="rgb(220,201,45)" fg:x="35552" fg:w="54"/><text x="81.9466%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="81.7777%" y="149" width="0.1240%" height="15" fill="rgb(225,33,4)" fg:x="35606" fg:w="54"/><text x="82.0706%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="81.9017%" y="149" width="0.1631%" height="15" fill="rgb(224,33,50)" fg:x="35660" fg:w="71"/><text x="82.1947%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="82.0648%" y="149" width="0.1493%" height="15" fill="rgb(246,198,51)" fg:x="35731" fg:w="65"/><text x="82.3577%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="82.2141%" y="149" width="0.9187%" height="15" fill="rgb(205,22,4)" fg:x="35796" fg:w="400"/><text x="82.5070%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="83.1328%" y="149" width="0.0367%" height="15" fill="rgb(206,3,8)" fg:x="36196" fg:w="16"/><text x="83.4257%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.17%)</title><rect x="83.1695%" y="133" width="0.1677%" height="15" fill="rgb(251,23,15)" fg:x="36212" fg:w="73"/><text x="83.4625%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="83.3372%" y="101" width="0.1378%" height="15" fill="rgb(252,88,28)" fg:x="36285" fg:w="60"/><text x="83.6301%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="83.3372%" y="117" width="0.1952%" height="15" fill="rgb(212,127,14)" fg:x="36285" fg:w="85"/><text x="83.6301%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.5324%" y="69" width="0.0207%" height="15" fill="rgb(247,145,37)" fg:x="36370" fg:w="9"/><text x="83.8254%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="83.5531%" y="53" width="0.0689%" height="15" fill="rgb(209,117,53)" fg:x="36379" fg:w="30"/><text x="83.8460%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="83.5531%" y="69" width="0.1263%" height="15" fill="rgb(212,90,42)" fg:x="36379" fg:w="55"/><text x="83.8460%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="83.5324%" y="85" width="0.2710%" height="15" fill="rgb(218,164,37)" fg:x="36370" fg:w="118"/><text x="83.8254%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="83.5324%" y="101" width="0.3927%" height="15" fill="rgb(246,65,34)" fg:x="36370" fg:w="171"/><text x="83.8254%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="83.5324%" y="117" width="0.4042%" height="15" fill="rgb(231,100,33)" fg:x="36370" fg:w="176"/><text x="83.8254%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="83.3372%" y="133" width="0.8544%" height="15" fill="rgb(228,126,14)" fg:x="36285" fg:w="372"/><text x="83.6301%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.36%)</title><rect x="83.1695%" y="149" width="1.3574%" height="15" fill="rgb(215,173,21)" fg:x="36212" fg:w="591"/><text x="83.4625%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="84.5269%" y="149" width="0.1952%" height="15" fill="rgb(210,6,40)" fg:x="36803" fg:w="85"/><text x="84.8198%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="84.7221%" y="149" width="0.1860%" height="15" fill="rgb(212,48,18)" fg:x="36888" fg:w="81"/><text x="85.0151%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="84.9081%" y="149" width="0.1516%" height="15" fill="rgb(230,214,11)" fg:x="36969" fg:w="66"/><text x="85.2011%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="85.0597%" y="149" width="0.1493%" height="15" fill="rgb(254,105,39)" fg:x="37035" fg:w="65"/><text x="85.3527%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.92%)</title><rect x="85.2090%" y="133" width="0.9187%" height="15" fill="rgb(245,158,5)" fg:x="37100" fg:w="400"/><text x="85.5020%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.1277%" y="133" width="0.0367%" height="15" fill="rgb(249,208,11)" fg:x="37500" fg:w="16"/><text x="86.4207%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="86.1644%" y="117" width="0.1814%" height="15" fill="rgb(210,39,28)" fg:x="37516" fg:w="79"/><text x="86.4574%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="86.3459%" y="85" width="0.1378%" height="15" fill="rgb(211,56,53)" fg:x="37595" fg:w="60"/><text x="86.6389%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="86.3459%" y="101" width="0.1952%" height="15" fill="rgb(226,201,30)" fg:x="37595" fg:w="85"/><text x="86.6389%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.5411%" y="53" width="0.0207%" height="15" fill="rgb(239,101,34)" fg:x="37680" fg:w="9"/><text x="86.8341%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="86.5618%" y="37" width="0.0689%" height="15" fill="rgb(226,209,5)" fg:x="37689" fg:w="30"/><text x="86.8548%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="86.5618%" y="53" width="0.1263%" height="15" fill="rgb(250,105,47)" fg:x="37689" fg:w="55"/><text x="86.8548%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="86.5411%" y="69" width="0.2710%" height="15" fill="rgb(230,72,3)" fg:x="37680" fg:w="118"/><text x="86.8341%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="86.5411%" y="85" width="0.3927%" height="15" fill="rgb(232,218,39)" fg:x="37680" fg:w="171"/><text x="86.8341%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="86.5411%" y="101" width="0.4042%" height="15" fill="rgb(248,166,6)" fg:x="37680" fg:w="176"/><text x="86.8341%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.85%)</title><rect x="86.3459%" y="117" width="0.8544%" height="15" fill="rgb(247,89,20)" fg:x="37595" fg:w="372"/><text x="86.6389%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (597 instructions, 1.37%)</title><rect x="86.1644%" y="133" width="1.3712%" height="15" fill="rgb(248,130,54)" fg:x="37516" fg:w="597"/><text x="86.4574%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="87.5356%" y="133" width="0.1952%" height="15" fill="rgb(234,196,4)" fg:x="38113" fg:w="85"/><text x="87.8286%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="87.7308%" y="133" width="0.1860%" height="15" fill="rgb(250,143,31)" fg:x="38198" fg:w="81"/><text x="88.0238%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,337 instructions, 3.07%)</title><rect x="85.2090%" y="149" width="3.0707%" height="15" fill="rgb(211,110,34)" fg:x="37100" fg:w="1337"/><text x="85.5020%" y="159.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.15%)</title><rect x="88.2797%" y="149" width="0.1516%" height="15" fill="rgb(215,124,48)" fg:x="38437" fg:w="66"/><text x="88.5727%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4313%" y="149" width="0.0299%" height="15" fill="rgb(216,46,13)" fg:x="38503" fg:w="13"/><text x="88.7243%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="88.4612%" y="149" width="0.0299%" height="15" fill="rgb(205,184,25)" fg:x="38516" fg:w="13"/><text x="88.7542%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="88.4910%" y="149" width="0.0161%" height="15" fill="rgb(228,1,10)" fg:x="38529" fg:w="7"/><text x="88.7840%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="88.5071%" y="149" width="0.0345%" height="15" fill="rgb(213,116,27)" fg:x="38536" fg:w="15"/><text x="88.8001%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.18%)</title><rect x="88.5416%" y="149" width="0.1814%" height="15" fill="rgb(241,95,50)" fg:x="38551" fg:w="79"/><text x="88.8345%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="88.7230%" y="149" width="0.1883%" height="15" fill="rgb(238,48,32)" fg:x="38630" fg:w="82"/><text x="89.0160%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="88.9159%" y="149" width="0.8751%" height="15" fill="rgb(235,113,49)" fg:x="38714" fg:w="381"/><text x="89.2089%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.88%)</title><rect x="89.7910%" y="149" width="0.8751%" height="15" fill="rgb(205,127,43)" fg:x="39095" fg:w="381"/><text x="90.0840%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,359 instructions, 12.31%)</title><rect x="80.1286%" y="165" width="12.3082%" height="15" fill="rgb(250,162,2)" fg:x="34888" fg:w="5359"/><text x="80.4216%" y="175.50">candid::de::IDL..</text></g><g><title>memcpy (336 instructions, 0.77%)</title><rect x="92.4368%" y="165" width="0.7717%" height="15" fill="rgb(220,13,41)" fg:x="40247" fg:w="336"/><text x="92.7298%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="93.2085%" y="133" width="0.0276%" height="15" fill="rgb(249,221,25)" fg:x="40583" fg:w="12"/><text x="93.5015%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.2361%" y="117" width="0.1860%" height="15" fill="rgb(215,208,19)" fg:x="40595" fg:w="81"/><text x="93.5291%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.13%)</title><rect x="93.4842%" y="117" width="0.1309%" height="15" fill="rgb(236,175,2)" fg:x="40703" fg:w="57"/><text x="93.7771%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.44%)</title><rect x="93.2361%" y="133" width="0.4410%" height="15" fill="rgb(241,52,2)" fg:x="40595" fg:w="192"/><text x="93.5291%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (243 instructions, 0.56%)</title><rect x="93.2085%" y="149" width="0.5581%" height="15" fill="rgb(248,140,14)" fg:x="40583" fg:w="243"/><text x="93.5015%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (277 instructions, 0.64%)</title><rect x="93.2085%" y="165" width="0.6362%" height="15" fill="rgb(253,22,42)" fg:x="40583" fg:w="277"/><text x="93.5015%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8447%" y="165" width="0.2825%" height="15" fill="rgb(234,61,47)" fg:x="40860" fg:w="123"/><text x="94.1377%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (125 instructions, 0.29%)</title><rect x="94.1272%" y="165" width="0.2871%" height="15" fill="rgb(208,226,15)" fg:x="40983" fg:w="125"/><text x="94.4202%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="94.4235%" y="165" width="0.0436%" height="15" fill="rgb(217,221,4)" fg:x="41112" fg:w="19"/><text x="94.7165%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="94.4672%" y="165" width="0.0276%" height="15" fill="rgb(212,174,34)" fg:x="41131" fg:w="12"/><text x="94.7601%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (52 instructions, 0.12%)</title><rect x="94.4947%" y="165" width="0.1194%" height="15" fill="rgb(253,83,4)" fg:x="41143" fg:w="52"/><text x="94.7877%" y="175.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="94.6141%" y="165" width="0.0299%" height="15" fill="rgb(250,195,49)" fg:x="41195" fg:w="13"/><text x="94.9071%" y="175.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (7,115 instructions, 16.34%)</title><rect x="80.0850%" y="181" width="16.3413%" height="15" fill="rgb(241,192,25)" fg:x="34869" fg:w="7115"/><text x="80.3779%" y="191.50">ic_cdk_timers::global..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="96.4263%" y="181" width="0.0276%" height="15" fill="rgb(208,124,10)" fg:x="41984" fg:w="12"/><text x="96.7192%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,208 instructions, 16.55%)</title><rect x="80.0850%" y="197" width="16.5549%" height="15" fill="rgb(222,33,0)" fg:x="34869" fg:w="7208"/><text x="80.3779%" y="207.50">ic_cdk::futures::wake..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="96.6399%" y="165" width="0.0115%" height="15" fill="rgb(234,209,28)" fg:x="42077" fg:w="5"/><text x="96.9328%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="96.6514%" y="165" width="0.1860%" height="15" fill="rgb(224,11,23)" fg:x="42082" fg:w="81"/><text x="96.9443%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="96.8374%" y="165" width="0.1791%" height="15" fill="rgb(232,99,1)" fg:x="42163" fg:w="78"/><text x="97.1304%" y="175.50"></text></g><g><title>ic_cdk::futures::waker::drop (203 instructions, 0.47%)</title><rect x="96.6399%" y="181" width="0.4662%" height="15" fill="rgb(237,95,45)" fg:x="42077" fg:w="203"/><text x="96.9328%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="97.1061%" y="165" width="0.1860%" height="15" fill="rgb(208,109,11)" fg:x="42280" fg:w="81"/><text x="97.3991%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (114 instructions, 0.26%)</title><rect x="97.1061%" y="181" width="0.2618%" height="15" fill="rgb(216,190,48)" fg:x="42280" fg:w="114"/><text x="97.3991%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="97.5080%" y="181" width="0.2825%" height="15" fill="rgb(251,171,36)" fg:x="42455" fg:w="123"/><text x="97.8010%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.39%)</title><rect x="97.7905%" y="181" width="0.3859%" height="15" fill="rgb(230,62,22)" fg:x="42578" fg:w="168"/><text x="98.0835%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (715 instructions, 1.64%)</title><rect x="96.6399%" y="197" width="1.6422%" height="15" fill="rgb(225,114,35)" fg:x="42077" fg:w="715"/><text x="96.9328%" y="207.50"></text></g><g><title>futures_task::waker::wake_arc_raw (8,052 instructions, 18.49%)</title><rect x="80.0850%" y="213" width="18.4933%" height="15" fill="rgb(215,118,42)" fg:x="34869" fg:w="8052"/><text x="80.3779%" y="223.50">futures_task::waker::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="98.8677%" y="181" width="0.1447%" height="15" fill="rgb(243,119,21)" fg:x="43047" fg:w="63"/><text x="99.1607%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (335 instructions, 0.77%)</title><rect x="98.5783%" y="197" width="0.7694%" height="15" fill="rgb(252,177,53)" fg:x="42921" fg:w="335"/><text x="98.8713%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (383 instructions, 0.88%)</title><rect x="98.5783%" y="213" width="0.8797%" height="15" fill="rgb(237,209,29)" fg:x="42921" fg:w="383"/><text x="98.8713%" y="223.50"></text></g><g><title>all (43,540 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(212,65,23)" fg:x="0" fg:w="43540"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,747 instructions, 20.09%)</title><rect x="79.9104%" y="229" width="20.0896%" height="15" fill="rgb(230,222,46)" fg:x="34793" fg:w="8747"/><text x="80.2034%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>