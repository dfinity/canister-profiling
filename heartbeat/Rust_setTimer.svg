<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="326" onload="init(evt)" viewBox="0 0 1024 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="326" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.setTimer(0)</text><text id="details" fill="rgb(0,0,0)" x="10" y="309.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="309.00"> </text><svg id="frames" x="10" width="1004" total_samples="49589"><g><title>ic_cdk::setup (59 instructions, 0.12%)</title><rect x="0.0000%" y="245" width="0.1190%" height="15" fill="rgb(212,95,11)" fg:x="0" fg:w="59"/><text x="0.2930%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (411 instructions, 0.83%)</title><rect x="0.1190%" y="213" width="0.8288%" height="15" fill="rgb(240,179,47)" fg:x="59" fg:w="411"/><text x="0.4119%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (421 instructions, 0.85%)</title><rect x="0.1190%" y="229" width="0.8490%" height="15" fill="rgb(240,163,11)" fg:x="59" fg:w="421"/><text x="0.4119%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="0.9740%" y="213" width="0.1875%" height="15" fill="rgb(236,37,12)" fg:x="483" fg:w="93"/><text x="1.2670%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="0.9740%" y="229" width="0.2077%" height="15" fill="rgb(232,164,16)" fg:x="483" fg:w="103"/><text x="1.2670%" y="239.50"></text></g><g><title>__rust_alloc (530 instructions, 1.07%)</title><rect x="0.1190%" y="245" width="1.0688%" height="15" fill="rgb(244,205,15)" fg:x="59" fg:w="530"/><text x="0.4119%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="1.1878%" y="181" width="0.1875%" height="15" fill="rgb(223,117,47)" fg:x="589" fg:w="93"/><text x="1.4807%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="1.1878%" y="197" width="0.2077%" height="15" fill="rgb(244,107,35)" fg:x="589" fg:w="103"/><text x="1.4807%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="1.1878%" y="213" width="0.2138%" height="15" fill="rgb(205,140,8)" fg:x="589" fg:w="106"/><text x="1.4807%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (169 instructions, 0.34%)</title><rect x="1.1878%" y="229" width="0.3408%" height="15" fill="rgb(228,84,46)" fg:x="589" fg:w="169"/><text x="1.4807%" y="239.50"></text></g><g><title>std::sys::wasm::once::Once::call (88 instructions, 0.18%)</title><rect x="1.5286%" y="197" width="0.1775%" height="15" fill="rgb(254,188,9)" fg:x="758" fg:w="88"/><text x="1.8215%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (163 instructions, 0.33%)</title><rect x="1.5286%" y="213" width="0.3287%" height="15" fill="rgb(206,112,54)" fg:x="758" fg:w="163"/><text x="1.8215%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="1.8573%" y="213" width="0.8207%" height="15" fill="rgb(216,84,49)" fg:x="921" fg:w="407"/><text x="2.1502%" y="223.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="2.6780%" y="213" width="0.1492%" height="15" fill="rgb(214,194,35)" fg:x="1328" fg:w="74"/><text x="2.9710%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.8272%" y="213" width="0.1089%" height="15" fill="rgb(249,28,3)" fg:x="1402" fg:w="54"/><text x="3.1202%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.9361%" y="213" width="0.1089%" height="15" fill="rgb(222,56,52)" fg:x="1456" fg:w="54"/><text x="3.2291%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="3.0450%" y="213" width="0.1089%" height="15" fill="rgb(245,217,50)" fg:x="1510" fg:w="54"/><text x="3.3380%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="3.1539%" y="213" width="0.1089%" height="15" fill="rgb(213,201,24)" fg:x="1564" fg:w="54"/><text x="3.4469%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="3.2628%" y="213" width="0.1230%" height="15" fill="rgb(248,116,28)" fg:x="1618" fg:w="61"/><text x="3.5558%" y="223.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="3.3858%" y="213" width="0.1956%" height="15" fill="rgb(219,72,43)" fg:x="1679" fg:w="97"/><text x="3.6788%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="3.5814%" y="213" width="0.8207%" height="15" fill="rgb(209,138,14)" fg:x="1776" fg:w="407"/><text x="3.8744%" y="223.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="4.4022%" y="213" width="0.0323%" height="15" fill="rgb(222,18,33)" fg:x="2183" fg:w="16"/><text x="4.6952%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="4.4345%" y="149" width="0.1875%" height="15" fill="rgb(213,199,7)" fg:x="2199" fg:w="93"/><text x="4.7274%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="4.4345%" y="165" width="0.2077%" height="15" fill="rgb(250,110,10)" fg:x="2199" fg:w="103"/><text x="4.7274%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="4.4345%" y="181" width="0.2138%" height="15" fill="rgb(248,123,6)" fg:x="2199" fg:w="106"/><text x="4.7274%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="4.6482%" y="149" width="0.1210%" height="15" fill="rgb(206,91,31)" fg:x="2305" fg:w="60"/><text x="4.9412%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="4.6482%" y="165" width="0.1714%" height="15" fill="rgb(211,154,13)" fg:x="2305" fg:w="85"/><text x="4.9412%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.8196%" y="117" width="0.0181%" height="15" fill="rgb(225,148,7)" fg:x="2390" fg:w="9"/><text x="5.1126%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.8378%" y="101" width="0.0605%" height="15" fill="rgb(220,160,43)" fg:x="2399" fg:w="30"/><text x="5.1307%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.8378%" y="117" width="0.1109%" height="15" fill="rgb(213,52,39)" fg:x="2399" fg:w="55"/><text x="5.1307%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="4.8196%" y="133" width="0.2339%" height="15" fill="rgb(243,137,7)" fg:x="2390" fg:w="116"/><text x="5.1126%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="4.8196%" y="149" width="0.3408%" height="15" fill="rgb(230,79,13)" fg:x="2390" fg:w="169"/><text x="5.1126%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="4.8196%" y="165" width="0.3509%" height="15" fill="rgb(247,105,23)" fg:x="2390" fg:w="174"/><text x="5.1126%" y="175.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="4.6482%" y="181" width="0.7401%" height="15" fill="rgb(223,179,41)" fg:x="2305" fg:w="367"/><text x="4.9412%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.24%)</title><rect x="4.4345%" y="197" width="1.2422%" height="15" fill="rgb(218,9,34)" fg:x="2199" fg:w="616"/><text x="4.7274%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="5.6767%" y="197" width="0.1492%" height="15" fill="rgb(222,106,8)" fg:x="2815" fg:w="74"/><text x="5.9696%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="5.8259%" y="197" width="0.1109%" height="15" fill="rgb(211,220,0)" fg:x="2889" fg:w="55"/><text x="6.1189%" y="207.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 1.65%)</title><rect x="4.4345%" y="213" width="1.6455%" height="15" fill="rgb(229,52,16)" fg:x="2199" fg:w="816"/><text x="4.7274%" y="223.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="6.0800%" y="213" width="0.1129%" height="15" fill="rgb(212,155,18)" fg:x="3015" fg:w="56"/><text x="6.3729%" y="223.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="6.1929%" y="213" width="0.1956%" height="15" fill="rgb(242,21,14)" fg:x="3071" fg:w="97"/><text x="6.4859%" y="223.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="6.3885%" y="197" width="0.8207%" height="15" fill="rgb(222,19,48)" fg:x="3168" fg:w="407"/><text x="6.6815%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="7.2093%" y="197" width="0.0323%" height="15" fill="rgb(232,45,27)" fg:x="3575" fg:w="16"/><text x="7.5022%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="7.2415%" y="133" width="0.1875%" height="15" fill="rgb(249,103,42)" fg:x="3591" fg:w="93"/><text x="7.5345%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="7.2415%" y="149" width="0.2077%" height="15" fill="rgb(246,81,33)" fg:x="3591" fg:w="103"/><text x="7.5345%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="7.2415%" y="165" width="0.2138%" height="15" fill="rgb(252,33,42)" fg:x="3591" fg:w="106"/><text x="7.5345%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="7.4553%" y="133" width="0.1210%" height="15" fill="rgb(209,212,41)" fg:x="3697" fg:w="60"/><text x="7.7483%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="7.4553%" y="149" width="0.1714%" height="15" fill="rgb(207,154,6)" fg:x="3697" fg:w="85"/><text x="7.7483%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.6267%" y="101" width="0.0181%" height="15" fill="rgb(223,64,47)" fg:x="3782" fg:w="9"/><text x="7.9197%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="7.6448%" y="85" width="0.0605%" height="15" fill="rgb(211,161,38)" fg:x="3791" fg:w="30"/><text x="7.9378%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="7.6448%" y="101" width="0.1109%" height="15" fill="rgb(219,138,40)" fg:x="3791" fg:w="55"/><text x="7.9378%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="7.6267%" y="117" width="0.2339%" height="15" fill="rgb(241,228,46)" fg:x="3782" fg:w="116"/><text x="7.9197%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="7.6267%" y="133" width="0.3408%" height="15" fill="rgb(223,209,38)" fg:x="3782" fg:w="169"/><text x="7.9197%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="7.6267%" y="149" width="0.3509%" height="15" fill="rgb(236,164,45)" fg:x="3782" fg:w="174"/><text x="7.9197%" y="159.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="7.4553%" y="165" width="0.7401%" height="15" fill="rgb(231,15,5)" fg:x="3697" fg:w="367"/><text x="7.7483%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.24%)</title><rect x="7.2415%" y="181" width="1.2422%" height="15" fill="rgb(252,35,15)" fg:x="3591" fg:w="616"/><text x="7.5345%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="8.4837%" y="181" width="0.1492%" height="15" fill="rgb(248,181,18)" fg:x="4207" fg:w="74"/><text x="8.7767%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="8.6330%" y="181" width="0.1109%" height="15" fill="rgb(233,39,42)" fg:x="4281" fg:w="55"/><text x="8.9259%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 1.65%)</title><rect x="7.2415%" y="197" width="1.6455%" height="15" fill="rgb(238,110,33)" fg:x="3591" fg:w="816"/><text x="7.5345%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="8.8871%" y="181" width="0.1230%" height="15" fill="rgb(233,195,10)" fg:x="4407" fg:w="61"/><text x="9.1800%" y="191.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.25%)</title><rect x="9.0101%" y="181" width="0.2541%" height="15" fill="rgb(254,105,3)" fg:x="4468" fg:w="126"/><text x="9.3030%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="9.2642%" y="181" width="0.1129%" height="15" fill="rgb(221,225,9)" fg:x="4594" fg:w="56"/><text x="9.5571%" y="191.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.62%)</title><rect x="8.8871%" y="197" width="0.6151%" height="15" fill="rgb(224,227,45)" fg:x="4407" fg:w="305"/><text x="9.1800%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="9.5021%" y="165" width="0.1875%" height="15" fill="rgb(229,198,43)" fg:x="4712" fg:w="93"/><text x="9.7951%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="9.5021%" y="181" width="0.2077%" height="15" fill="rgb(206,209,35)" fg:x="4712" fg:w="103"/><text x="9.7951%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="9.5021%" y="197" width="0.2138%" height="15" fill="rgb(245,195,53)" fg:x="4712" fg:w="106"/><text x="9.7951%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,875 instructions, 3.78%)</title><rect x="6.3885%" y="213" width="3.7811%" height="15" fill="rgb(240,92,26)" fg:x="3168" fg:w="1875"/><text x="6.6815%" y="223.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="10.1696%" y="213" width="0.1129%" height="15" fill="rgb(207,40,23)" fg:x="5043" fg:w="56"/><text x="10.4626%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.2825%" y="213" width="0.0262%" height="15" fill="rgb(223,111,35)" fg:x="5099" fg:w="13"/><text x="10.5755%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.3087%" y="213" width="0.0262%" height="15" fill="rgb(229,147,28)" fg:x="5112" fg:w="13"/><text x="10.6017%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="10.3350%" y="213" width="0.0444%" height="15" fill="rgb(211,29,28)" fg:x="5125" fg:w="22"/><text x="10.6279%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="10.3793%" y="165" width="0.1875%" height="15" fill="rgb(228,72,33)" fg:x="5147" fg:w="93"/><text x="10.6723%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="10.3793%" y="181" width="0.2077%" height="15" fill="rgb(205,214,31)" fg:x="5147" fg:w="103"/><text x="10.6723%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="10.3793%" y="197" width="0.2138%" height="15" fill="rgb(224,111,15)" fg:x="5147" fg:w="106"/><text x="10.6723%" y="207.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (186 instructions, 0.38%)</title><rect x="10.3793%" y="213" width="0.3751%" height="15" fill="rgb(253,21,26)" fg:x="5147" fg:w="186"/><text x="10.6723%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="10.7544%" y="149" width="0.1875%" height="15" fill="rgb(245,139,43)" fg:x="5333" fg:w="93"/><text x="11.0474%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="10.7544%" y="165" width="0.2077%" height="15" fill="rgb(252,170,7)" fg:x="5333" fg:w="103"/><text x="11.0474%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="10.7544%" y="181" width="0.2138%" height="15" fill="rgb(231,118,14)" fg:x="5333" fg:w="106"/><text x="11.0474%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.27%)</title><rect x="10.7544%" y="197" width="0.2743%" height="15" fill="rgb(238,83,0)" fg:x="5333" fg:w="136"/><text x="11.0474%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.41%)</title><rect x="10.7544%" y="213" width="0.4114%" height="15" fill="rgb(221,39,39)" fg:x="5333" fg:w="204"/><text x="11.0474%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="11.1658%" y="181" width="0.1875%" height="15" fill="rgb(222,119,46)" fg:x="5537" fg:w="93"/><text x="11.4588%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="11.1658%" y="197" width="0.2077%" height="15" fill="rgb(222,165,49)" fg:x="5537" fg:w="103"/><text x="11.4588%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="11.1658%" y="213" width="0.2138%" height="15" fill="rgb(219,113,52)" fg:x="5537" fg:w="106"/><text x="11.4588%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.3795%" y="213" width="0.1633%" height="15" fill="rgb(214,7,15)" fg:x="5643" fg:w="81"/><text x="11.6725%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="11.5429%" y="181" width="0.1875%" height="15" fill="rgb(235,32,4)" fg:x="5724" fg:w="93"/><text x="11.8359%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="11.5429%" y="197" width="0.2077%" height="15" fill="rgb(238,90,54)" fg:x="5724" fg:w="103"/><text x="11.8359%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="11.7566%" y="181" width="0.1875%" height="15" fill="rgb(213,208,19)" fg:x="5830" fg:w="93"/><text x="12.0496%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="11.7566%" y="197" width="0.2077%" height="15" fill="rgb(233,156,4)" fg:x="5830" fg:w="103"/><text x="12.0496%" y="207.50"></text></g><g><title>__rust_alloc (212 instructions, 0.43%)</title><rect x="11.5429%" y="213" width="0.4275%" height="15" fill="rgb(207,194,5)" fg:x="5724" fg:w="212"/><text x="11.8359%" y="223.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (33 instructions, 0.07%)</title><rect x="11.9704%" y="213" width="0.0665%" height="15" fill="rgb(206,111,30)" fg:x="5936" fg:w="33"/><text x="12.2634%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="12.0369%" y="213" width="0.1633%" height="15" fill="rgb(243,70,54)" fg:x="5969" fg:w="81"/><text x="12.3299%" y="223.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="12.2003%" y="213" width="0.8288%" height="15" fill="rgb(242,28,8)" fg:x="6050" fg:w="411"/><text x="12.4933%" y="223.50"></text></g><g><title>memcpy (366 instructions, 0.74%)</title><rect x="13.0291%" y="213" width="0.7381%" height="15" fill="rgb(219,106,18)" fg:x="6461" fg:w="366"/><text x="13.3221%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,384 instructions, 14.89%)</title><rect x="1.5286%" y="229" width="14.8904%" height="15" fill="rgb(244,222,10)" fg:x="758" fg:w="7384"/><text x="1.8215%" y="239.50">candid::de::IDLDese..</text></g><g><title>memcpy (381 instructions, 0.77%)</title><rect x="16.4190%" y="229" width="0.7683%" height="15" fill="rgb(236,179,52)" fg:x="8142" fg:w="381"/><text x="16.7119%" y="239.50"></text></g><g><title>memcpy (381 instructions, 0.77%)</title><rect x="17.1873%" y="229" width="0.7683%" height="15" fill="rgb(213,23,39)" fg:x="8523" fg:w="381"/><text x="17.4802%" y="239.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.03%)</title><rect x="17.9556%" y="213" width="0.0282%" height="15" fill="rgb(238,48,10)" fg:x="8904" fg:w="14"/><text x="18.2486%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.01%)</title><rect x="17.9838%" y="213" width="0.0121%" height="15" fill="rgb(251,196,23)" fg:x="8918" fg:w="6"/><text x="18.2768%" y="223.50"></text></g><g><title>candid::types::internal::find_type (143 instructions, 0.29%)</title><rect x="17.9556%" y="229" width="0.2884%" height="15" fill="rgb(250,152,24)" fg:x="8904" fg:w="143"/><text x="18.2486%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="18.2440%" y="181" width="0.1875%" height="15" fill="rgb(209,150,17)" fg:x="9047" fg:w="93"/><text x="18.5369%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="18.2440%" y="197" width="0.2077%" height="15" fill="rgb(234,202,34)" fg:x="9047" fg:w="103"/><text x="18.5369%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="18.2440%" y="213" width="0.2138%" height="15" fill="rgb(253,148,53)" fg:x="9047" fg:w="106"/><text x="18.5369%" y="223.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (152 instructions, 0.31%)</title><rect x="18.2440%" y="229" width="0.3065%" height="15" fill="rgb(218,129,16)" fg:x="9047" fg:w="152"/><text x="18.5369%" y="239.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="18.5505%" y="197" width="0.0101%" height="15" fill="rgb(216,85,19)" fg:x="9199" fg:w="5"/><text x="18.8435%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="18.5606%" y="181" width="0.1069%" height="15" fill="rgb(235,228,7)" fg:x="9204" fg:w="53"/><text x="18.8535%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.18%)</title><rect x="18.6674%" y="181" width="0.1795%" height="15" fill="rgb(245,175,0)" fg:x="9257" fg:w="89"/><text x="18.9604%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.32%)</title><rect x="18.8469%" y="181" width="0.3247%" height="15" fill="rgb(208,168,36)" fg:x="9346" fg:w="161"/><text x="19.1399%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.10%)</title><rect x="18.5606%" y="197" width="1.1011%" height="15" fill="rgb(246,171,24)" fg:x="9204" fg:w="546"/><text x="18.8535%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="19.6616%" y="149" width="0.1875%" height="15" fill="rgb(215,142,24)" fg:x="9750" fg:w="93"/><text x="19.9546%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="19.6616%" y="165" width="0.2077%" height="15" fill="rgb(250,187,7)" fg:x="9750" fg:w="103"/><text x="19.9546%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="19.6616%" y="181" width="0.2138%" height="15" fill="rgb(228,66,33)" fg:x="9750" fg:w="106"/><text x="19.9546%" y="191.50"></text></g><g><title>memset (136 instructions, 0.27%)</title><rect x="19.8754%" y="181" width="0.2743%" height="15" fill="rgb(234,215,21)" fg:x="9856" fg:w="136"/><text x="20.1683%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (348 instructions, 0.70%)</title><rect x="19.6616%" y="197" width="0.7018%" height="15" fill="rgb(222,191,20)" fg:x="9750" fg:w="348"/><text x="19.9546%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,295 instructions, 2.61%)</title><rect x="18.5505%" y="213" width="2.6115%" height="15" fill="rgb(245,79,54)" fg:x="9199" fg:w="1295"/><text x="18.8435%" y="223.50">s..</text></g><g><title>candid::types::internal::env_add (1,321 instructions, 2.66%)</title><rect x="18.5505%" y="229" width="2.6639%" height="15" fill="rgb(240,10,37)" fg:x="9199" fg:w="1321"/><text x="18.8435%" y="239.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="21.2144%" y="181" width="0.1875%" height="15" fill="rgb(214,192,32)" fg:x="10520" fg:w="93"/><text x="21.5074%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="21.2144%" y="197" width="0.2077%" height="15" fill="rgb(209,36,54)" fg:x="10520" fg:w="103"/><text x="21.5074%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="21.2144%" y="213" width="0.2138%" height="15" fill="rgb(220,10,11)" fg:x="10520" fg:w="106"/><text x="21.5074%" y="223.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u64&gt;::_ty (119 instructions, 0.24%)</title><rect x="21.2144%" y="229" width="0.2400%" height="15" fill="rgb(221,106,17)" fg:x="10520" fg:w="119"/><text x="21.5074%" y="239.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="21.4544%" y="197" width="0.0101%" height="15" fill="rgb(251,142,44)" fg:x="10639" fg:w="5"/><text x="21.7473%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="21.4644%" y="181" width="0.1069%" height="15" fill="rgb(238,13,15)" fg:x="10644" fg:w="53"/><text x="21.7574%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.18%)</title><rect x="21.5713%" y="181" width="0.1795%" height="15" fill="rgb(208,107,27)" fg:x="10697" fg:w="89"/><text x="21.8643%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.32%)</title><rect x="21.7508%" y="181" width="0.3247%" height="15" fill="rgb(205,136,37)" fg:x="10786" fg:w="161"/><text x="22.0438%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.10%)</title><rect x="21.4644%" y="197" width="1.1011%" height="15" fill="rgb(250,205,27)" fg:x="10644" fg:w="546"/><text x="21.7574%" y="207.50"></text></g><g><title>memcmp (68 instructions, 0.14%)</title><rect x="22.5655%" y="197" width="0.1371%" height="15" fill="rgb(210,80,43)" fg:x="11190" fg:w="68"/><text x="22.8585%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="22.7026%" y="181" width="0.1633%" height="15" fill="rgb(247,160,36)" fg:x="11258" fg:w="81"/><text x="22.9956%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.22%)</title><rect x="22.7026%" y="197" width="0.2238%" height="15" fill="rgb(234,13,49)" fg:x="11258" fg:w="111"/><text x="22.9956%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (904 instructions, 1.82%)</title><rect x="21.4544%" y="213" width="1.8230%" height="15" fill="rgb(234,122,0)" fg:x="10639" fg:w="904"/><text x="21.7473%" y="223.50"></text></g><g><title>candid::types::internal::env_add (930 instructions, 1.88%)</title><rect x="21.4544%" y="229" width="1.8754%" height="15" fill="rgb(207,146,38)" fg:x="10639" fg:w="930"/><text x="21.7473%" y="239.50"></text></g><g><title>candid::types::internal::ID::__getit (81 instructions, 0.16%)</title><rect x="23.3298%" y="197" width="0.1633%" height="15" fill="rgb(207,177,25)" fg:x="11569" fg:w="81"/><text x="23.6227%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="23.4931%" y="165" width="0.1069%" height="15" fill="rgb(211,178,42)" fg:x="11650" fg:w="53"/><text x="23.7861%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.16%)</title><rect x="23.4931%" y="181" width="0.1573%" height="15" fill="rgb(230,69,54)" fg:x="11650" fg:w="78"/><text x="23.7861%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.60%)</title><rect x="23.4931%" y="197" width="0.6050%" height="15" fill="rgb(214,135,41)" fg:x="11650" fg:w="300"/><text x="23.7861%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="24.0981%" y="149" width="0.1875%" height="15" fill="rgb(237,67,25)" fg:x="11950" fg:w="93"/><text x="24.3911%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="24.0981%" y="165" width="0.2077%" height="15" fill="rgb(222,189,50)" fg:x="11950" fg:w="103"/><text x="24.3911%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="24.0981%" y="181" width="0.2138%" height="15" fill="rgb(245,148,34)" fg:x="11950" fg:w="106"/><text x="24.3911%" y="191.50"></text></g><g><title>memset (136 instructions, 0.27%)</title><rect x="24.3118%" y="181" width="0.2743%" height="15" fill="rgb(222,29,6)" fg:x="12056" fg:w="136"/><text x="24.6048%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (348 instructions, 0.70%)</title><rect x="24.0981%" y="197" width="0.7018%" height="15" fill="rgb(221,189,43)" fg:x="11950" fg:w="348"/><text x="24.3911%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,167 instructions, 2.35%)</title><rect x="23.3298%" y="213" width="2.3533%" height="15" fill="rgb(207,36,27)" fg:x="11569" fg:w="1167"/><text x="23.6227%" y="223.50">s..</text></g><g><title>candid::types::internal::env_id (1,204 instructions, 2.43%)</title><rect x="23.3298%" y="229" width="2.4280%" height="15" fill="rgb(217,90,24)" fg:x="11569" fg:w="1204"/><text x="23.6227%" y="239.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (37 instructions, 0.07%)</title><rect x="25.7577%" y="229" width="0.0746%" height="15" fill="rgb(224,66,35)" fg:x="12773" fg:w="37"/><text x="26.0507%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.25%)</title><rect x="25.8323%" y="213" width="0.2480%" height="15" fill="rgb(221,13,50)" fg:x="12810" fg:w="123"/><text x="26.1253%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.25%)</title><rect x="26.1409%" y="213" width="0.2480%" height="15" fill="rgb(236,68,49)" fg:x="12963" fg:w="123"/><text x="26.4338%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (306 instructions, 0.62%)</title><rect x="25.8323%" y="229" width="0.6171%" height="15" fill="rgb(229,146,28)" fg:x="12810" fg:w="306"/><text x="26.1253%" y="239.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="26.4494%" y="213" width="0.0565%" height="15" fill="rgb(225,31,38)" fg:x="13116" fg:w="28"/><text x="26.7424%" y="223.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (105 instructions, 0.21%)</title><rect x="26.4494%" y="229" width="0.2117%" height="15" fill="rgb(250,208,3)" fg:x="13116" fg:w="105"/><text x="26.7424%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.6612%" y="229" width="0.0222%" height="15" fill="rgb(246,54,23)" fg:x="13221" fg:w="11"/><text x="26.9541%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.6833%" y="229" width="0.0222%" height="15" fill="rgb(243,76,11)" fg:x="13232" fg:w="11"/><text x="26.9763%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.7055%" y="229" width="0.0222%" height="15" fill="rgb(245,21,50)" fg:x="13243" fg:w="11"/><text x="26.9985%" y="239.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="26.7277%" y="229" width="0.8288%" height="15" fill="rgb(228,9,43)" fg:x="13254" fg:w="411"/><text x="27.0207%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="27.5565%" y="213" width="0.0444%" height="15" fill="rgb(208,100,47)" fg:x="13665" fg:w="22"/><text x="27.8495%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (169 instructions, 0.34%)</title><rect x="27.6009%" y="213" width="0.3408%" height="15" fill="rgb(232,26,8)" fg:x="13687" fg:w="169"/><text x="27.8938%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.14%)</title><rect x="27.9417%" y="181" width="0.1432%" height="15" fill="rgb(216,166,38)" fg:x="13856" fg:w="71"/><text x="28.2346%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (216 instructions, 0.44%)</title><rect x="27.9417%" y="197" width="0.4356%" height="15" fill="rgb(251,202,51)" fg:x="13856" fg:w="216"/><text x="28.2346%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (246 instructions, 0.50%)</title><rect x="27.9417%" y="213" width="0.4961%" height="15" fill="rgb(254,216,34)" fg:x="13856" fg:w="246"/><text x="28.2346%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="28.4378%" y="213" width="0.0222%" height="15" fill="rgb(251,32,27)" fg:x="14102" fg:w="11"/><text x="28.7307%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="28.4599%" y="213" width="0.0101%" height="15" fill="rgb(208,127,28)" fg:x="14113" fg:w="5"/><text x="28.7529%" y="223.50"></text></g><g><title>candid::de::IDLDeserialize::done (547 instructions, 1.10%)</title><rect x="27.5565%" y="229" width="1.1031%" height="15" fill="rgb(224,137,22)" fg:x="13665" fg:w="547"/><text x="27.8495%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.11%)</title><rect x="28.6596%" y="213" width="0.1089%" height="15" fill="rgb(254,70,32)" fg:x="14212" fg:w="54"/><text x="28.9526%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.14%)</title><rect x="28.7685%" y="213" width="0.1432%" height="15" fill="rgb(229,75,37)" fg:x="14266" fg:w="71"/><text x="29.0614%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.41%)</title><rect x="28.6596%" y="229" width="0.4134%" height="15" fill="rgb(252,64,23)" fg:x="14212" fg:w="205"/><text x="28.9526%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (14,225 instructions, 28.69%)</title><rect x="1.1878%" y="245" width="28.6858%" height="15" fill="rgb(232,162,48)" fg:x="589" fg:w="14225"/><text x="1.4807%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>__multi3 (56 instructions, 0.11%)</title><rect x="29.8736%" y="229" width="0.1129%" height="15" fill="rgb(246,160,12)" fg:x="14814" fg:w="56"/><text x="30.1665%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.11%)</title><rect x="29.9865%" y="165" width="0.1089%" height="15" fill="rgb(247,166,0)" fg:x="14870" fg:w="54"/><text x="30.2795%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.36%)</title><rect x="29.9865%" y="181" width="0.3590%" height="15" fill="rgb(249,219,21)" fg:x="14870" fg:w="178"/><text x="30.2795%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (188 instructions, 0.38%)</title><rect x="29.9865%" y="197" width="0.3791%" height="15" fill="rgb(205,209,3)" fg:x="14870" fg:w="188"/><text x="30.2795%" y="207.50"></text></g><g><title>__rust_alloc (191 instructions, 0.39%)</title><rect x="29.9865%" y="213" width="0.3852%" height="15" fill="rgb(243,44,1)" fg:x="14870" fg:w="191"/><text x="30.2795%" y="223.50"></text></g><g><title>std::sys::common::thread_local::lazy::LazyKeyInner&lt;T&gt;::initialize (253 instructions, 0.51%)</title><rect x="29.9865%" y="229" width="0.5102%" height="15" fill="rgb(206,159,16)" fg:x="14870" fg:w="253"/><text x="30.2795%" y="239.50"></text></g><g><title>__rust_realloc (122 instructions, 0.25%)</title><rect x="30.4967%" y="197" width="0.2460%" height="15" fill="rgb(244,77,30)" fg:x="15123" fg:w="122"/><text x="30.7897%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (158 instructions, 0.32%)</title><rect x="30.4967%" y="213" width="0.3186%" height="15" fill="rgb(218,69,12)" fg:x="15123" fg:w="158"/><text x="30.7897%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (238 instructions, 0.48%)</title><rect x="30.4967%" y="229" width="0.4799%" height="15" fill="rgb(212,87,7)" fg:x="15123" fg:w="238"/><text x="30.7897%" y="239.50"></text></g><g><title>ic_cdk_timers::TIMERS::__getit (29 instructions, 0.06%)</title><rect x="30.9766%" y="229" width="0.0585%" height="15" fill="rgb(245,114,25)" fg:x="15361" fg:w="29"/><text x="31.2696%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="31.0351%" y="165" width="0.1815%" height="15" fill="rgb(210,61,42)" fg:x="15390" fg:w="90"/><text x="31.3281%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="31.0351%" y="181" width="0.2017%" height="15" fill="rgb(211,52,33)" fg:x="15390" fg:w="100"/><text x="31.3281%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="31.0351%" y="197" width="0.2077%" height="15" fill="rgb(234,58,33)" fg:x="15390" fg:w="103"/><text x="31.3281%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.27%)</title><rect x="31.0351%" y="213" width="0.2682%" height="15" fill="rgb(220,115,36)" fg:x="15390" fg:w="133"/><text x="31.3281%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (201 instructions, 0.41%)</title><rect x="31.0351%" y="229" width="0.4053%" height="15" fill="rgb(243,153,54)" fg:x="15390" fg:w="201"/><text x="31.3281%" y="239.50"></text></g><g><title>ic_cdk_timers::set_timer (1,204 instructions, 2.43%)</title><rect x="29.8736%" y="245" width="2.4280%" height="15" fill="rgb(251,47,18)" fg:x="14814" fg:w="1204"/><text x="30.1665%" y="255.50">i..</text></g><g><title>timer::ID::__getit (35 instructions, 0.07%)</title><rect x="32.3015%" y="245" width="0.0706%" height="15" fill="rgb(242,102,42)" fg:x="16018" fg:w="35"/><text x="32.5945%" y="255.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="32.3721%" y="213" width="0.0101%" height="15" fill="rgb(234,31,38)" fg:x="16053" fg:w="5"/><text x="32.6651%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="32.3822%" y="213" width="0.0222%" height="15" fill="rgb(221,117,51)" fg:x="16058" fg:w="11"/><text x="32.6752%" y="223.50"></text></g><g><title>memset (136 instructions, 0.27%)</title><rect x="32.4044%" y="213" width="0.2743%" height="15" fill="rgb(212,20,18)" fg:x="16069" fg:w="136"/><text x="32.6973%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (309 instructions, 0.62%)</title><rect x="32.3721%" y="229" width="0.6231%" height="15" fill="rgb(245,133,36)" fg:x="16053" fg:w="309"/><text x="32.6651%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.07%)</title><rect x="32.9952%" y="213" width="0.0665%" height="15" fill="rgb(212,6,19)" fg:x="16362" fg:w="33"/><text x="33.2882%" y="223.50"></text></g><g><title>std::io::Write::write_all (81 instructions, 0.16%)</title><rect x="32.9952%" y="229" width="0.1633%" height="15" fill="rgb(218,1,36)" fg:x="16362" fg:w="81"/><text x="33.2882%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="33.1586%" y="149" width="0.1815%" height="15" fill="rgb(246,84,54)" fg:x="16443" fg:w="90"/><text x="33.4515%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="33.1586%" y="165" width="0.2017%" height="15" fill="rgb(242,110,6)" fg:x="16443" fg:w="100"/><text x="33.4515%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="33.1586%" y="181" width="0.2077%" height="15" fill="rgb(214,47,5)" fg:x="16443" fg:w="103"/><text x="33.4515%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.27%)</title><rect x="33.1586%" y="197" width="0.2682%" height="15" fill="rgb(218,159,25)" fg:x="16443" fg:w="133"/><text x="33.4515%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (198 instructions, 0.40%)</title><rect x="33.1586%" y="213" width="0.3993%" height="15" fill="rgb(215,211,28)" fg:x="16443" fg:w="198"/><text x="33.4515%" y="223.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="33.5578%" y="213" width="0.0222%" height="15" fill="rgb(238,59,32)" fg:x="16641" fg:w="11"/><text x="33.8508%" y="223.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="33.5800%" y="213" width="0.0222%" height="15" fill="rgb(226,82,3)" fg:x="16652" fg:w="11"/><text x="33.8730%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (422 instructions, 0.85%)</title><rect x="33.1586%" y="229" width="0.8510%" height="15" fill="rgb(240,164,32)" fg:x="16443" fg:w="422"/><text x="33.4515%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.06%)</title><rect x="34.0096%" y="213" width="0.0625%" height="15" fill="rgb(232,46,7)" fg:x="16865" fg:w="31"/><text x="34.3025%" y="223.50"></text></g><g><title>std::io::Write::write_all (79 instructions, 0.16%)</title><rect x="34.0096%" y="229" width="0.1593%" height="15" fill="rgb(229,129,53)" fg:x="16865" fg:w="79"/><text x="34.3025%" y="239.50"></text></g><g><title>std::io::Write::write_all (14 instructions, 0.03%)</title><rect x="34.1689%" y="229" width="0.0282%" height="15" fill="rgb(234,188,29)" fg:x="16944" fg:w="14"/><text x="34.4618%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="34.1971%" y="229" width="0.0101%" height="15" fill="rgb(246,141,4)" fg:x="16958" fg:w="5"/><text x="34.4901%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="34.2072%" y="229" width="0.1089%" height="15" fill="rgb(229,23,39)" fg:x="16963" fg:w="54"/><text x="34.5002%" y="239.50"></text></g><g><title>candid::utils::write_args (1,105 instructions, 2.23%)</title><rect x="32.3721%" y="245" width="2.2283%" height="15" fill="rgb(206,12,3)" fg:x="16053" fg:w="1105"/><text x="32.6651%" y="255.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="34.6004%" y="245" width="0.1633%" height="15" fill="rgb(252,226,20)" fg:x="17158" fg:w="81"/><text x="34.8934%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.26%)</title><rect x="34.7638%" y="245" width="0.2561%" height="15" fill="rgb(216,123,35)" fg:x="17239" fg:w="127"/><text x="35.0567%" y="255.50"></text></g><g><title>canister_update setTimer (17,463 instructions, 35.22%)</title><rect x="0.0000%" y="261" width="35.2155%" height="15" fill="rgb(212,68,40)" fg:x="0" fg:w="17463"/><text x="0.2930%" y="271.50">canister_update setTimer</text></g><g><title>ic_cdk::setup (7 instructions, 0.01%)</title><rect x="35.2155%" y="245" width="0.0141%" height="15" fill="rgb(254,125,32)" fg:x="17463" fg:w="7"/><text x="35.5084%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="35.2296%" y="213" width="0.1815%" height="15" fill="rgb(253,97,22)" fg:x="17470" fg:w="90"/><text x="35.5226%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="35.2296%" y="229" width="0.2017%" height="15" fill="rgb(241,101,14)" fg:x="17470" fg:w="100"/><text x="35.5226%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="35.4373%" y="213" width="0.1815%" height="15" fill="rgb(238,103,29)" fg:x="17573" fg:w="90"/><text x="35.7303%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="35.4373%" y="229" width="0.2017%" height="15" fill="rgb(233,195,47)" fg:x="17573" fg:w="100"/><text x="35.7303%" y="239.50"></text></g><g><title>__rust_alloc (206 instructions, 0.42%)</title><rect x="35.2296%" y="245" width="0.4154%" height="15" fill="rgb(246,218,30)" fg:x="17470" fg:w="206"/><text x="35.5226%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="35.6450%" y="197" width="0.1875%" height="15" fill="rgb(219,145,47)" fg:x="17676" fg:w="93"/><text x="35.9380%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="35.6450%" y="213" width="0.2077%" height="15" fill="rgb(243,12,26)" fg:x="17676" fg:w="103"/><text x="35.9380%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="35.8588%" y="197" width="0.1815%" height="15" fill="rgb(214,87,16)" fg:x="17782" fg:w="90"/><text x="36.1517%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="35.8588%" y="213" width="0.2017%" height="15" fill="rgb(208,99,42)" fg:x="17782" fg:w="100"/><text x="36.1517%" y="223.50"></text></g><g><title>__rust_alloc (209 instructions, 0.42%)</title><rect x="35.6450%" y="229" width="0.4215%" height="15" fill="rgb(253,99,2)" fg:x="17676" fg:w="209"/><text x="35.9380%" y="239.50"></text></g><g><title>ic_cdk_timers::TIMERS::__getit (5 instructions, 0.01%)</title><rect x="36.0665%" y="229" width="0.0101%" height="15" fill="rgb(220,168,23)" fg:x="17885" fg:w="5"/><text x="36.3594%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="36.0765%" y="197" width="0.1875%" height="15" fill="rgb(242,38,24)" fg:x="17890" fg:w="93"/><text x="36.3695%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="36.0765%" y="213" width="0.2077%" height="15" fill="rgb(225,182,9)" fg:x="17890" fg:w="103"/><text x="36.3695%" y="223.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="36.0765%" y="229" width="0.2138%" height="15" fill="rgb(243,178,37)" fg:x="17890" fg:w="106"/><text x="36.3695%" y="239.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.01%)</title><rect x="36.2903%" y="229" width="0.0121%" height="15" fill="rgb(232,139,19)" fg:x="17996" fg:w="6"/><text x="36.5833%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.18%)</title><rect x="36.3024%" y="181" width="0.1795%" height="15" fill="rgb(225,201,24)" fg:x="18002" fg:w="89"/><text x="36.5954%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.20%)</title><rect x="36.3024%" y="197" width="0.1996%" height="15" fill="rgb(221,47,46)" fg:x="18002" fg:w="99"/><text x="36.5954%" y="207.50"></text></g><g><title>memset (116 instructions, 0.23%)</title><rect x="36.5020%" y="197" width="0.2339%" height="15" fill="rgb(249,23,13)" fg:x="18101" fg:w="116"/><text x="36.7950%" y="207.50"></text></g><g><title>__rdl_alloc_zeroed (235 instructions, 0.47%)</title><rect x="36.3024%" y="213" width="0.4739%" height="15" fill="rgb(219,9,5)" fg:x="18002" fg:w="235"/><text x="36.5954%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.33%)</title><rect x="36.7763%" y="197" width="0.3327%" height="15" fill="rgb(254,171,16)" fg:x="18237" fg:w="165"/><text x="37.0693%" y="207.50"></text></g><g><title>&lt;candid::types::principal::Principal as core::convert::TryFrom&lt;&amp;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::try_from (241 instructions, 0.49%)</title><rect x="36.7763%" y="213" width="0.4860%" height="15" fill="rgb(230,171,20)" fg:x="18237" fg:w="241"/><text x="37.0693%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="37.2623%" y="213" width="0.1633%" height="15" fill="rgb(210,71,41)" fg:x="18478" fg:w="81"/><text x="37.5553%" y="223.50"></text></g><g><title>ic_cdk::api::id (637 instructions, 1.28%)</title><rect x="36.3024%" y="229" width="1.2846%" height="15" fill="rgb(206,173,20)" fg:x="18002" fg:w="637"/><text x="36.5954%" y="239.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="37.5870%" y="213" width="0.0101%" height="15" fill="rgb(233,88,34)" fg:x="18639" fg:w="5"/><text x="37.8799%" y="223.50"></text></g><g><title>memset (136 instructions, 0.27%)</title><rect x="37.5970%" y="213" width="0.2743%" height="15" fill="rgb(223,209,46)" fg:x="18644" fg:w="136"/><text x="37.8900%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (259 instructions, 0.52%)</title><rect x="37.5870%" y="229" width="0.5223%" height="15" fill="rgb(250,43,18)" fg:x="18639" fg:w="259"/><text x="37.8799%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.01%)</title><rect x="38.1093%" y="197" width="0.0121%" height="15" fill="rgb(208,13,10)" fg:x="18898" fg:w="6"/><text x="38.4022%" y="207.50"></text></g><g><title>candid::types::internal::find_type (45 instructions, 0.09%)</title><rect x="38.1093%" y="213" width="0.0907%" height="15" fill="rgb(212,200,36)" fg:x="18898" fg:w="45"/><text x="38.4022%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="38.2000%" y="165" width="0.1875%" height="15" fill="rgb(225,90,30)" fg:x="18943" fg:w="93"/><text x="38.4930%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="38.2000%" y="181" width="0.2077%" height="15" fill="rgb(236,182,39)" fg:x="18943" fg:w="103"/><text x="38.4930%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="38.2000%" y="197" width="0.2138%" height="15" fill="rgb(212,144,35)" fg:x="18943" fg:w="106"/><text x="38.4930%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (152 instructions, 0.31%)</title><rect x="38.2000%" y="213" width="0.3065%" height="15" fill="rgb(228,63,44)" fg:x="18943" fg:w="152"/><text x="38.4930%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="38.5065%" y="181" width="0.0101%" height="15" fill="rgb(228,109,6)" fg:x="19095" fg:w="5"/><text x="38.7995%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="38.5166%" y="165" width="0.1069%" height="15" fill="rgb(238,117,24)" fg:x="19100" fg:w="53"/><text x="38.8096%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.18%)</title><rect x="38.6235%" y="165" width="0.1795%" height="15" fill="rgb(242,26,26)" fg:x="19153" fg:w="89"/><text x="38.9165%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.32%)</title><rect x="38.8030%" y="165" width="0.3247%" height="15" fill="rgb(221,92,48)" fg:x="19242" fg:w="161"/><text x="39.0959%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.10%)</title><rect x="38.5166%" y="181" width="1.1011%" height="15" fill="rgb(209,209,32)" fg:x="19100" fg:w="546"/><text x="38.8096%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (796 instructions, 1.61%)</title><rect x="38.5065%" y="197" width="1.6052%" height="15" fill="rgb(221,70,22)" fg:x="19095" fg:w="796"/><text x="38.7995%" y="207.50"></text></g><g><title>candid::types::internal::env_add (822 instructions, 1.66%)</title><rect x="38.5065%" y="213" width="1.6576%" height="15" fill="rgb(248,145,5)" fg:x="19095" fg:w="822"/><text x="38.7995%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="40.1641%" y="165" width="0.1875%" height="15" fill="rgb(226,116,26)" fg:x="19917" fg:w="93"/><text x="40.4571%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="40.1641%" y="181" width="0.2077%" height="15" fill="rgb(244,5,17)" fg:x="19917" fg:w="103"/><text x="40.4571%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="40.1641%" y="197" width="0.2138%" height="15" fill="rgb(252,159,33)" fg:x="19917" fg:w="106"/><text x="40.4571%" y="207.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u64&gt;::_ty (119 instructions, 0.24%)</title><rect x="40.1641%" y="213" width="0.2400%" height="15" fill="rgb(206,71,0)" fg:x="19917" fg:w="119"/><text x="40.4571%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="40.4041%" y="181" width="0.0101%" height="15" fill="rgb(233,118,54)" fg:x="20036" fg:w="5"/><text x="40.6971%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="40.4142%" y="165" width="0.1069%" height="15" fill="rgb(234,83,48)" fg:x="20041" fg:w="53"/><text x="40.7072%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.18%)</title><rect x="40.5211%" y="165" width="0.1795%" height="15" fill="rgb(228,3,54)" fg:x="20094" fg:w="89"/><text x="40.8141%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.32%)</title><rect x="40.7006%" y="165" width="0.3247%" height="15" fill="rgb(226,155,13)" fg:x="20183" fg:w="161"/><text x="40.9935%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.10%)</title><rect x="40.4142%" y="181" width="1.1011%" height="15" fill="rgb(241,28,37)" fg:x="20041" fg:w="546"/><text x="40.7072%" y="191.50"></text></g><g><title>memcmp (68 instructions, 0.14%)</title><rect x="41.5153%" y="181" width="0.1371%" height="15" fill="rgb(233,93,10)" fg:x="20587" fg:w="68"/><text x="41.8082%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="41.6524%" y="165" width="0.1633%" height="15" fill="rgb(225,113,19)" fg:x="20655" fg:w="81"/><text x="41.9454%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.22%)</title><rect x="41.6524%" y="181" width="0.2238%" height="15" fill="rgb(241,2,18)" fg:x="20655" fg:w="111"/><text x="41.9454%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (904 instructions, 1.82%)</title><rect x="40.4041%" y="197" width="1.8230%" height="15" fill="rgb(228,207,21)" fg:x="20036" fg:w="904"/><text x="40.6971%" y="207.50"></text></g><g><title>candid::types::internal::env_add (930 instructions, 1.88%)</title><rect x="40.4041%" y="213" width="1.8754%" height="15" fill="rgb(213,211,35)" fg:x="20036" fg:w="930"/><text x="40.6971%" y="223.50"></text></g><g><title>candid::types::internal::ID::__getit (5 instructions, 0.01%)</title><rect x="42.2795%" y="181" width="0.0101%" height="15" fill="rgb(209,83,10)" fg:x="20966" fg:w="5"/><text x="42.5725%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="42.2896%" y="149" width="0.1069%" height="15" fill="rgb(209,164,1)" fg:x="20971" fg:w="53"/><text x="42.5826%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.16%)</title><rect x="42.2896%" y="165" width="0.1573%" height="15" fill="rgb(213,184,43)" fg:x="20971" fg:w="78"/><text x="42.5826%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.60%)</title><rect x="42.2896%" y="181" width="0.6050%" height="15" fill="rgb(231,61,34)" fg:x="20971" fg:w="300"/><text x="42.5826%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (27 instructions, 0.05%)</title><rect x="42.8946%" y="181" width="0.0544%" height="15" fill="rgb(235,75,3)" fg:x="21271" fg:w="27"/><text x="43.1876%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="42.9490%" y="181" width="0.0222%" height="15" fill="rgb(220,106,47)" fg:x="21298" fg:w="11"/><text x="43.2420%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (515 instructions, 1.04%)</title><rect x="42.2795%" y="197" width="1.0385%" height="15" fill="rgb(210,196,33)" fg:x="20966" fg:w="515"/><text x="42.5725%" y="207.50"></text></g><g><title>candid::types::internal::env_id (552 instructions, 1.11%)</title><rect x="42.2795%" y="213" width="1.1132%" height="15" fill="rgb(229,154,42)" fg:x="20966" fg:w="552"/><text x="42.5725%" y="223.50"></text></g><g><title>candid::types::CandidType::ty (2,723 instructions, 5.49%)</title><rect x="38.1093%" y="229" width="5.4911%" height="15" fill="rgb(228,114,26)" fg:x="18898" fg:w="2723"/><text x="38.4022%" y="239.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="43.6004%" y="165" width="0.1896%" height="15" fill="rgb(208,144,1)" fg:x="21621" fg:w="94"/><text x="43.8934%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="43.6004%" y="181" width="0.2097%" height="15" fill="rgb(239,112,37)" fg:x="21621" fg:w="104"/><text x="43.8934%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.22%)</title><rect x="43.6004%" y="197" width="0.2158%" height="15" fill="rgb(210,96,50)" fg:x="21621" fg:w="107"/><text x="43.8934%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.28%)</title><rect x="43.6004%" y="213" width="0.2763%" height="15" fill="rgb(222,178,2)" fg:x="21621" fg:w="137"/><text x="43.8934%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (205 instructions, 0.41%)</title><rect x="43.6004%" y="229" width="0.4134%" height="15" fill="rgb(226,74,18)" fg:x="21621" fg:w="205"/><text x="43.8934%" y="239.50"></text></g><g><title>candid::types::internal::is_primitive (10 instructions, 0.02%)</title><rect x="44.0138%" y="213" width="0.0202%" height="15" fill="rgb(225,67,54)" fg:x="21826" fg:w="10"/><text x="44.3068%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.0340%" y="213" width="0.0222%" height="15" fill="rgb(251,92,32)" fg:x="21836" fg:w="11"/><text x="44.3269%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (75 instructions, 0.15%)</title><rect x="44.0138%" y="229" width="0.1512%" height="15" fill="rgb(228,149,22)" fg:x="21826" fg:w="75"/><text x="44.3068%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.1650%" y="229" width="0.0222%" height="15" fill="rgb(243,54,13)" fg:x="21901" fg:w="11"/><text x="44.4580%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.27%)</title><rect x="44.1872%" y="165" width="0.2743%" height="15" fill="rgb(243,180,28)" fg:x="21912" fg:w="136"/><text x="44.4802%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.29%)</title><rect x="44.1872%" y="181" width="0.2944%" height="15" fill="rgb(208,167,24)" fg:x="21912" fg:w="146"/><text x="44.4802%" y="191.50"></text></g><g><title>__rust_alloc (149 instructions, 0.30%)</title><rect x="44.1872%" y="197" width="0.3005%" height="15" fill="rgb(245,73,45)" fg:x="21912" fg:w="149"/><text x="44.4802%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (179 instructions, 0.36%)</title><rect x="44.1872%" y="213" width="0.3610%" height="15" fill="rgb(237,203,48)" fg:x="21912" fg:w="179"/><text x="44.4802%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.18%)</title><rect x="44.6793%" y="165" width="0.1795%" height="15" fill="rgb(211,197,16)" fg:x="22156" fg:w="89"/><text x="44.9722%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.20%)</title><rect x="44.6793%" y="181" width="0.1996%" height="15" fill="rgb(243,99,51)" fg:x="22156" fg:w="99"/><text x="44.9722%" y="191.50"></text></g><g><title>__rust_alloc (102 instructions, 0.21%)</title><rect x="44.6793%" y="197" width="0.2057%" height="15" fill="rgb(215,123,29)" fg:x="22156" fg:w="102"/><text x="44.9722%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.27%)</title><rect x="44.6793%" y="213" width="0.2662%" height="15" fill="rgb(239,186,37)" fg:x="22156" fg:w="132"/><text x="44.9722%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (441 instructions, 0.89%)</title><rect x="44.1872%" y="229" width="0.8893%" height="15" fill="rgb(252,136,39)" fg:x="21912" fg:w="441"/><text x="44.4802%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.27%)</title><rect x="45.0765%" y="149" width="0.2743%" height="15" fill="rgb(223,213,32)" fg:x="22353" fg:w="136"/><text x="45.3695%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.29%)</title><rect x="45.0765%" y="165" width="0.2944%" height="15" fill="rgb(233,115,5)" fg:x="22353" fg:w="146"/><text x="45.3695%" y="175.50"></text></g><g><title>__rust_alloc (149 instructions, 0.30%)</title><rect x="45.0765%" y="181" width="0.3005%" height="15" fill="rgb(207,226,44)" fg:x="22353" fg:w="149"/><text x="45.3695%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (179 instructions, 0.36%)</title><rect x="45.0765%" y="197" width="0.3610%" height="15" fill="rgb(208,126,0)" fg:x="22353" fg:w="179"/><text x="45.3695%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (244 instructions, 0.49%)</title><rect x="45.0765%" y="213" width="0.4920%" height="15" fill="rgb(244,66,21)" fg:x="22353" fg:w="244"/><text x="45.3695%" y="223.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="45.5686%" y="213" width="0.0222%" height="15" fill="rgb(222,97,12)" fg:x="22597" fg:w="11"/><text x="45.8615%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="45.5908%" y="133" width="0.1815%" height="15" fill="rgb(219,213,19)" fg:x="22608" fg:w="90"/><text x="45.8837%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="45.5908%" y="149" width="0.2017%" height="15" fill="rgb(252,169,30)" fg:x="22608" fg:w="100"/><text x="45.8837%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="45.5908%" y="165" width="0.2077%" height="15" fill="rgb(206,32,51)" fg:x="22608" fg:w="103"/><text x="45.8837%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.27%)</title><rect x="45.5908%" y="181" width="0.2682%" height="15" fill="rgb(250,172,42)" fg:x="22608" fg:w="133"/><text x="45.8837%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (198 instructions, 0.40%)</title><rect x="45.5908%" y="197" width="0.3993%" height="15" fill="rgb(209,34,43)" fg:x="22608" fg:w="198"/><text x="45.8837%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::encode (264 instructions, 0.53%)</title><rect x="45.5908%" y="213" width="0.5324%" height="15" fill="rgb(223,11,35)" fg:x="22608" fg:w="264"/><text x="45.8837%" y="223.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="46.1231%" y="213" width="0.0605%" height="15" fill="rgb(251,219,26)" fg:x="22872" fg:w="30"/><text x="46.4161%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="46.1836%" y="213" width="0.1089%" height="15" fill="rgb(231,119,3)" fg:x="22902" fg:w="54"/><text x="46.4766%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (849 instructions, 1.71%)</title><rect x="45.0765%" y="229" width="1.7121%" height="15" fill="rgb(216,97,11)" fg:x="22353" fg:w="849"/><text x="45.3695%" y="239.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="46.7886%" y="229" width="0.1210%" height="15" fill="rgb(223,59,9)" fg:x="23202" fg:w="60"/><text x="47.0816%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="46.9096%" y="181" width="0.1815%" height="15" fill="rgb(233,93,31)" fg:x="23262" fg:w="90"/><text x="47.2026%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.39%)</title><rect x="47.0911%" y="181" width="0.3932%" height="15" fill="rgb(239,81,33)" fg:x="23352" fg:w="195"/><text x="47.3841%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="47.4843%" y="181" width="0.1633%" height="15" fill="rgb(213,120,34)" fg:x="23547" fg:w="81"/><text x="47.7773%" y="191.50"></text></g><g><title>__rust_realloc (454 instructions, 0.92%)</title><rect x="46.9096%" y="197" width="0.9155%" height="15" fill="rgb(243,49,53)" fg:x="23262" fg:w="454"/><text x="47.2026%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (490 instructions, 0.99%)</title><rect x="46.9096%" y="213" width="0.9881%" height="15" fill="rgb(247,216,33)" fg:x="23262" fg:w="490"/><text x="47.2026%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (565 instructions, 1.14%)</title><rect x="46.9096%" y="229" width="1.1394%" height="15" fill="rgb(226,26,14)" fg:x="23262" fg:w="565"/><text x="47.2026%" y="239.50"></text></g><g><title>memcpy (135 instructions, 0.27%)</title><rect x="48.0490%" y="229" width="0.2722%" height="15" fill="rgb(215,49,53)" fg:x="23827" fg:w="135"/><text x="48.3419%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="48.3212%" y="229" width="0.0101%" height="15" fill="rgb(245,162,40)" fg:x="23962" fg:w="5"/><text x="48.6142%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="48.3313%" y="229" width="0.0222%" height="15" fill="rgb(229,68,17)" fg:x="23967" fg:w="11"/><text x="48.6243%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="48.3535%" y="229" width="0.1633%" height="15" fill="rgb(213,182,10)" fg:x="23978" fg:w="81"/><text x="48.6464%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.16%)</title><rect x="48.5168%" y="229" width="0.1573%" height="15" fill="rgb(245,125,30)" fg:x="24059" fg:w="78"/><text x="48.8098%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.24%)</title><rect x="48.6741%" y="229" width="0.2420%" height="15" fill="rgb(232,202,2)" fg:x="24137" fg:w="120"/><text x="48.9671%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="48.9161%" y="197" width="0.1875%" height="15" fill="rgb(237,140,51)" fg:x="24257" fg:w="93"/><text x="49.2091%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="48.9161%" y="213" width="0.2077%" height="15" fill="rgb(236,157,25)" fg:x="24257" fg:w="103"/><text x="49.2091%" y="223.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="48.9161%" y="229" width="0.2138%" height="15" fill="rgb(219,209,0)" fg:x="24257" fg:w="106"/><text x="49.2091%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.20%)</title><rect x="49.1298%" y="229" width="0.2017%" height="15" fill="rgb(240,116,54)" fg:x="24363" fg:w="100"/><text x="49.4228%" y="239.50"></text></g><g><title>futures_task::waker::clone_arc_raw (20 instructions, 0.04%)</title><rect x="49.3315%" y="229" width="0.0403%" height="15" fill="rgb(216,10,36)" fg:x="24463" fg:w="20"/><text x="49.6245%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (18 instructions, 0.04%)</title><rect x="49.3718%" y="229" width="0.0363%" height="15" fill="rgb(222,72,44)" fg:x="24483" fg:w="18"/><text x="49.6648%" y="239.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,324 instructions, 16.79%)</title><rect x="35.6450%" y="245" width="16.7860%" height="15" fill="rgb(232,159,9)" fg:x="17676" fg:w="8324"/><text x="35.9380%" y="255.50">ic_cdk_timers::global_..</text></g><g><title>canister_global_timer (8,636 instructions, 17.42%)</title><rect x="35.2155%" y="261" width="17.4152%" height="15" fill="rgb(210,39,32)" fg:x="17463" fg:w="8636"/><text x="35.5084%" y="271.50">canister_global_timer</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="52.6306%" y="213" width="0.1896%" height="15" fill="rgb(216,194,45)" fg:x="26099" fg:w="94"/><text x="52.9236%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="52.6306%" y="229" width="0.2097%" height="15" fill="rgb(218,18,35)" fg:x="26099" fg:w="104"/><text x="52.9236%" y="239.50"></text></g><g><title>memset (116 instructions, 0.23%)</title><rect x="52.8403%" y="229" width="0.2339%" height="15" fill="rgb(207,83,51)" fg:x="26203" fg:w="116"/><text x="53.1333%" y="239.50"></text></g><g><title>__rdl_alloc_zeroed (240 instructions, 0.48%)</title><rect x="52.6306%" y="245" width="0.4840%" height="15" fill="rgb(225,63,43)" fg:x="26099" fg:w="240"/><text x="52.9236%" y="255.50"></text></g><g><title>memcpy (165 instructions, 0.33%)</title><rect x="53.1146%" y="229" width="0.3327%" height="15" fill="rgb(207,57,36)" fg:x="26339" fg:w="165"/><text x="53.4076%" y="239.50"></text></g><g><title>&lt;candid::types::principal::Principal as core::convert::TryFrom&lt;&amp;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::try_from (241 instructions, 0.49%)</title><rect x="53.1146%" y="245" width="0.4860%" height="15" fill="rgb(216,99,33)" fg:x="26339" fg:w="241"/><text x="53.4076%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="53.6006%" y="245" width="0.1633%" height="15" fill="rgb(225,42,16)" fg:x="26580" fg:w="81"/><text x="53.8936%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="53.7639%" y="197" width="0.1896%" height="15" fill="rgb(220,201,45)" fg:x="26661" fg:w="94"/><text x="54.0569%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="53.7639%" y="213" width="0.2097%" height="15" fill="rgb(225,33,4)" fg:x="26661" fg:w="104"/><text x="54.0569%" y="223.50"></text></g><g><title>memset (116 instructions, 0.23%)</title><rect x="53.9737%" y="213" width="0.2339%" height="15" fill="rgb(224,33,50)" fg:x="26765" fg:w="116"/><text x="54.2666%" y="223.50"></text></g><g><title>__rdl_alloc_zeroed (240 instructions, 0.48%)</title><rect x="53.7639%" y="229" width="0.4840%" height="15" fill="rgb(246,198,51)" fg:x="26661" fg:w="240"/><text x="54.0569%" y="239.50"></text></g><g><title>memcpy (165 instructions, 0.33%)</title><rect x="54.2479%" y="213" width="0.3327%" height="15" fill="rgb(205,22,4)" fg:x="26901" fg:w="165"/><text x="54.5409%" y="223.50"></text></g><g><title>&lt;candid::types::principal::Principal as core::convert::TryFrom&lt;&amp;alloc::vec::Vec&lt;u8&gt;&gt;&gt;::try_from (241 instructions, 0.49%)</title><rect x="54.2479%" y="229" width="0.4860%" height="15" fill="rgb(206,3,8)" fg:x="26901" fg:w="241"/><text x="54.5409%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="54.7339%" y="229" width="0.1633%" height="15" fill="rgb(251,23,15)" fg:x="27142" fg:w="81"/><text x="55.0269%" y="239.50"></text></g><g><title>ic_cdk::api::id (642 instructions, 1.29%)</title><rect x="53.7639%" y="245" width="1.2946%" height="15" fill="rgb(252,88,28)" fg:x="26661" fg:w="642"/><text x="54.0569%" y="255.50"></text></g><g><title>memcmp (614 instructions, 1.24%)</title><rect x="55.0586%" y="245" width="1.2382%" height="15" fill="rgb(212,127,14)" fg:x="27303" fg:w="614"/><text x="55.3516%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="56.2968%" y="197" width="0.1896%" height="15" fill="rgb(247,145,37)" fg:x="27917" fg:w="94"/><text x="56.5897%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="56.2968%" y="213" width="0.2097%" height="15" fill="rgb(209,117,53)" fg:x="27917" fg:w="104"/><text x="56.5897%" y="223.50"></text></g><g><title>__rust_alloc (107 instructions, 0.22%)</title><rect x="56.2968%" y="229" width="0.2158%" height="15" fill="rgb(212,90,42)" fg:x="27917" fg:w="107"/><text x="56.5897%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (170 instructions, 0.34%)</title><rect x="56.2968%" y="245" width="0.3428%" height="15" fill="rgb(218,164,37)" fg:x="27917" fg:w="170"/><text x="56.5897%" y="255.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="56.6396%" y="229" width="0.1230%" height="15" fill="rgb(246,65,34)" fg:x="28087" fg:w="61"/><text x="56.9325%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="56.7626%" y="229" width="0.8207%" height="15" fill="rgb(231,100,33)" fg:x="28148" fg:w="407"/><text x="57.0556%" y="239.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="57.5833%" y="229" width="0.1492%" height="15" fill="rgb(228,126,14)" fg:x="28555" fg:w="74"/><text x="57.8763%" y="239.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="57.7326%" y="229" width="0.1089%" height="15" fill="rgb(215,173,21)" fg:x="28629" fg:w="54"/><text x="58.0255%" y="239.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="57.8415%" y="229" width="0.1089%" height="15" fill="rgb(210,6,40)" fg:x="28683" fg:w="54"/><text x="58.1344%" y="239.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="57.9504%" y="229" width="0.1089%" height="15" fill="rgb(212,48,18)" fg:x="28737" fg:w="54"/><text x="58.2433%" y="239.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="58.0592%" y="229" width="0.1089%" height="15" fill="rgb(230,214,11)" fg:x="28791" fg:w="54"/><text x="58.3522%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="58.1681%" y="229" width="0.1230%" height="15" fill="rgb(254,105,39)" fg:x="28845" fg:w="61"/><text x="58.4611%" y="239.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="58.2912%" y="229" width="0.1956%" height="15" fill="rgb(245,158,5)" fg:x="28906" fg:w="97"/><text x="58.5841%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="58.4868%" y="229" width="0.8207%" height="15" fill="rgb(249,208,11)" fg:x="29003" fg:w="407"/><text x="58.7797%" y="239.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="59.3075%" y="229" width="0.0323%" height="15" fill="rgb(210,39,28)" fg:x="29410" fg:w="16"/><text x="59.6005%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="59.3398%" y="165" width="0.1815%" height="15" fill="rgb(211,56,53)" fg:x="29426" fg:w="90"/><text x="59.6327%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="59.3398%" y="181" width="0.2017%" height="15" fill="rgb(226,201,30)" fg:x="29426" fg:w="100"/><text x="59.6327%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="59.3398%" y="197" width="0.2077%" height="15" fill="rgb(239,101,34)" fg:x="29426" fg:w="103"/><text x="59.6327%" y="207.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="59.5475%" y="165" width="0.1210%" height="15" fill="rgb(226,209,5)" fg:x="29529" fg:w="60"/><text x="59.8404%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="59.5475%" y="181" width="0.1714%" height="15" fill="rgb(250,105,47)" fg:x="29529" fg:w="85"/><text x="59.8404%" y="191.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="59.7189%" y="133" width="0.0181%" height="15" fill="rgb(230,72,3)" fg:x="29614" fg:w="9"/><text x="60.0119%" y="143.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="59.7370%" y="117" width="0.0605%" height="15" fill="rgb(232,218,39)" fg:x="29623" fg:w="30"/><text x="60.0300%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="59.7370%" y="133" width="0.1109%" height="15" fill="rgb(248,166,6)" fg:x="29623" fg:w="55"/><text x="60.0300%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="59.7189%" y="149" width="0.2339%" height="15" fill="rgb(247,89,20)" fg:x="29614" fg:w="116"/><text x="60.0119%" y="159.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="59.7189%" y="165" width="0.3408%" height="15" fill="rgb(248,130,54)" fg:x="29614" fg:w="169"/><text x="60.0119%" y="175.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="59.7189%" y="181" width="0.3509%" height="15" fill="rgb(234,196,4)" fg:x="29614" fg:w="174"/><text x="60.0119%" y="191.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="59.5475%" y="197" width="0.7401%" height="15" fill="rgb(250,143,31)" fg:x="29529" fg:w="367"/><text x="59.8404%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.24%)</title><rect x="59.3398%" y="213" width="1.2362%" height="15" fill="rgb(211,110,34)" fg:x="29426" fg:w="613"/><text x="59.6327%" y="223.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="60.5759%" y="213" width="0.1492%" height="15" fill="rgb(215,124,48)" fg:x="30039" fg:w="74"/><text x="60.8689%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="60.7252%" y="213" width="0.1089%" height="15" fill="rgb(216,46,13)" fg:x="30113" fg:w="54"/><text x="61.0181%" y="223.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.64%)</title><rect x="59.3398%" y="229" width="1.6375%" height="15" fill="rgb(205,184,25)" fg:x="29426" fg:w="812"/><text x="59.6327%" y="239.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="60.9772%" y="229" width="0.1129%" height="15" fill="rgb(228,1,10)" fg:x="30238" fg:w="56"/><text x="61.2702%" y="239.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="61.0902%" y="229" width="0.1956%" height="15" fill="rgb(213,116,27)" fg:x="30294" fg:w="97"/><text x="61.3831%" y="239.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="61.2858%" y="213" width="0.8207%" height="15" fill="rgb(241,95,50)" fg:x="30391" fg:w="407"/><text x="61.5787%" y="223.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="62.1065%" y="213" width="0.0323%" height="15" fill="rgb(238,48,32)" fg:x="30798" fg:w="16"/><text x="62.3995%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="62.1388%" y="149" width="0.1815%" height="15" fill="rgb(235,113,49)" fg:x="30814" fg:w="90"/><text x="62.4317%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="62.1388%" y="165" width="0.2017%" height="15" fill="rgb(205,127,43)" fg:x="30814" fg:w="100"/><text x="62.4317%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="62.1388%" y="181" width="0.2077%" height="15" fill="rgb(250,162,2)" fg:x="30814" fg:w="103"/><text x="62.4317%" y="191.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="62.3465%" y="149" width="0.1210%" height="15" fill="rgb(220,13,41)" fg:x="30917" fg:w="60"/><text x="62.6395%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="62.3465%" y="165" width="0.1714%" height="15" fill="rgb(249,221,25)" fg:x="30917" fg:w="85"/><text x="62.6395%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="62.5179%" y="117" width="0.0181%" height="15" fill="rgb(215,208,19)" fg:x="31002" fg:w="9"/><text x="62.8109%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="62.5360%" y="101" width="0.0605%" height="15" fill="rgb(236,175,2)" fg:x="31011" fg:w="30"/><text x="62.8290%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="62.5360%" y="117" width="0.1109%" height="15" fill="rgb(241,52,2)" fg:x="31011" fg:w="55"/><text x="62.8290%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="62.5179%" y="133" width="0.2339%" height="15" fill="rgb(248,140,14)" fg:x="31002" fg:w="116"/><text x="62.8109%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="62.5179%" y="149" width="0.3408%" height="15" fill="rgb(253,22,42)" fg:x="31002" fg:w="169"/><text x="62.8109%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="62.5179%" y="165" width="0.3509%" height="15" fill="rgb(234,61,47)" fg:x="31002" fg:w="174"/><text x="62.8109%" y="175.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="62.3465%" y="181" width="0.7401%" height="15" fill="rgb(208,226,15)" fg:x="30917" fg:w="367"/><text x="62.6395%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.24%)</title><rect x="62.1388%" y="197" width="1.2362%" height="15" fill="rgb(217,221,4)" fg:x="30814" fg:w="613"/><text x="62.4317%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="63.3749%" y="197" width="0.1492%" height="15" fill="rgb(212,174,34)" fg:x="31427" fg:w="74"/><text x="63.6679%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="63.5242%" y="197" width="0.1089%" height="15" fill="rgb(253,83,4)" fg:x="31501" fg:w="54"/><text x="63.8171%" y="207.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.64%)</title><rect x="62.1388%" y="213" width="1.6375%" height="15" fill="rgb(250,195,49)" fg:x="30814" fg:w="812"/><text x="62.4317%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="63.7762%" y="197" width="0.1230%" height="15" fill="rgb(241,192,25)" fg:x="31626" fg:w="61"/><text x="64.0692%" y="207.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.25%)</title><rect x="63.8993%" y="197" width="0.2541%" height="15" fill="rgb(208,124,10)" fg:x="31687" fg:w="126"/><text x="64.1922%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="64.1533%" y="197" width="0.1129%" height="15" fill="rgb(222,33,0)" fg:x="31813" fg:w="56"/><text x="64.4463%" y="207.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.62%)</title><rect x="63.7762%" y="213" width="0.6151%" height="15" fill="rgb(234,209,28)" fg:x="31626" fg:w="305"/><text x="64.0692%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="64.3913%" y="181" width="0.1815%" height="15" fill="rgb(224,11,23)" fg:x="31931" fg:w="90"/><text x="64.6843%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="64.3913%" y="197" width="0.2017%" height="15" fill="rgb(232,99,1)" fg:x="31931" fg:w="100"/><text x="64.6843%" y="207.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="64.3913%" y="213" width="0.2077%" height="15" fill="rgb(237,95,45)" fg:x="31931" fg:w="103"/><text x="64.6843%" y="223.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,868 instructions, 3.77%)</title><rect x="61.2858%" y="229" width="3.7670%" height="15" fill="rgb(208,109,11)" fg:x="30391" fg:w="1868"/><text x="61.5787%" y="239.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="65.0527%" y="229" width="0.1129%" height="15" fill="rgb(216,190,48)" fg:x="32259" fg:w="56"/><text x="65.3457%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.1657%" y="229" width="0.0262%" height="15" fill="rgb(251,171,36)" fg:x="32315" fg:w="13"/><text x="65.4586%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="65.1919%" y="229" width="0.0262%" height="15" fill="rgb(230,62,22)" fg:x="32328" fg:w="13"/><text x="65.4848%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="65.2181%" y="229" width="0.0444%" height="15" fill="rgb(225,114,35)" fg:x="32341" fg:w="22"/><text x="65.5111%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="65.2625%" y="181" width="0.1875%" height="15" fill="rgb(215,118,42)" fg:x="32363" fg:w="93"/><text x="65.5554%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="65.2625%" y="197" width="0.2077%" height="15" fill="rgb(243,119,21)" fg:x="32363" fg:w="103"/><text x="65.5554%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.21%)</title><rect x="65.2625%" y="213" width="0.2138%" height="15" fill="rgb(252,177,53)" fg:x="32363" fg:w="106"/><text x="65.5554%" y="223.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (186 instructions, 0.38%)</title><rect x="65.2625%" y="229" width="0.3751%" height="15" fill="rgb(237,209,29)" fg:x="32363" fg:w="186"/><text x="65.5554%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="65.6375%" y="165" width="0.1896%" height="15" fill="rgb(212,65,23)" fg:x="32549" fg:w="94"/><text x="65.9305%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="65.6375%" y="181" width="0.2097%" height="15" fill="rgb(230,222,46)" fg:x="32549" fg:w="104"/><text x="65.9305%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.22%)</title><rect x="65.6375%" y="197" width="0.2158%" height="15" fill="rgb(215,135,32)" fg:x="32549" fg:w="107"/><text x="65.9305%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.28%)</title><rect x="65.6375%" y="213" width="0.2763%" height="15" fill="rgb(246,101,22)" fg:x="32549" fg:w="137"/><text x="65.9305%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (205 instructions, 0.41%)</title><rect x="65.6375%" y="229" width="0.4134%" height="15" fill="rgb(206,107,13)" fg:x="32549" fg:w="205"/><text x="65.9305%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.18%)</title><rect x="66.0509%" y="197" width="0.1795%" height="15" fill="rgb(250,100,44)" fg:x="32754" fg:w="89"/><text x="66.3439%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.20%)</title><rect x="66.0509%" y="213" width="0.1996%" height="15" fill="rgb(231,147,38)" fg:x="32754" fg:w="99"/><text x="66.3439%" y="223.50"></text></g><g><title>__rust_alloc (102 instructions, 0.21%)</title><rect x="66.0509%" y="229" width="0.2057%" height="15" fill="rgb(229,8,40)" fg:x="32754" fg:w="102"/><text x="66.3439%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="66.2566%" y="229" width="0.1633%" height="15" fill="rgb(221,135,30)" fg:x="32856" fg:w="81"/><text x="66.5496%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="66.4200%" y="197" width="0.1875%" height="15" fill="rgb(249,193,18)" fg:x="32937" fg:w="93"/><text x="66.7129%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="66.4200%" y="213" width="0.2077%" height="15" fill="rgb(209,133,39)" fg:x="32937" fg:w="103"/><text x="66.7129%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.19%)</title><rect x="66.6337%" y="197" width="0.1875%" height="15" fill="rgb(232,100,14)" fg:x="33043" fg:w="93"/><text x="66.9267%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.21%)</title><rect x="66.6337%" y="213" width="0.2077%" height="15" fill="rgb(224,185,1)" fg:x="33043" fg:w="103"/><text x="66.9267%" y="223.50"></text></g><g><title>__rust_alloc (212 instructions, 0.43%)</title><rect x="66.4200%" y="229" width="0.4275%" height="15" fill="rgb(223,139,8)" fg:x="32937" fg:w="212"/><text x="66.7129%" y="239.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.03%)</title><rect x="66.8475%" y="229" width="0.0282%" height="15" fill="rgb(232,213,38)" fg:x="33149" fg:w="14"/><text x="67.1405%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="66.8757%" y="229" width="0.1633%" height="15" fill="rgb(207,94,22)" fg:x="33163" fg:w="81"/><text x="67.1687%" y="239.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="67.0391%" y="229" width="0.8288%" height="15" fill="rgb(219,183,54)" fg:x="33244" fg:w="411"/><text x="67.3320%" y="239.50"></text></g><g><title>memcpy (366 instructions, 0.74%)</title><rect x="67.8679%" y="229" width="0.7381%" height="15" fill="rgb(216,185,54)" fg:x="33655" fg:w="366"/><text x="68.1608%" y="239.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,249 instructions, 14.62%)</title><rect x="56.6396%" y="245" width="14.6182%" height="15" fill="rgb(254,217,39)" fg:x="28087" fg:w="7249"/><text x="56.9325%" y="255.50">candid::de::IDLDese..</text></g><g><title>memcpy (321 instructions, 0.65%)</title><rect x="71.2577%" y="245" width="0.6473%" height="15" fill="rgb(240,178,23)" fg:x="35336" fg:w="321"/><text x="71.5507%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.11%)</title><rect x="71.9051%" y="181" width="0.1069%" height="15" fill="rgb(218,11,47)" fg:x="35657" fg:w="53"/><text x="72.1980%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.18%)</title><rect x="72.0119%" y="181" width="0.1795%" height="15" fill="rgb(218,51,51)" fg:x="35710" fg:w="89"/><text x="72.3049%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.32%)</title><rect x="72.1914%" y="181" width="0.3247%" height="15" fill="rgb(238,126,27)" fg:x="35799" fg:w="161"/><text x="72.4844%" y="191.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.10%)</title><rect x="71.9051%" y="197" width="1.1011%" height="15" fill="rgb(249,202,22)" fg:x="35657" fg:w="546"/><text x="72.1980%" y="207.50"></text></g><g><title>memcmp (68 instructions, 0.14%)</title><rect x="73.0061%" y="197" width="0.1371%" height="15" fill="rgb(254,195,49)" fg:x="36203" fg:w="68"/><text x="73.2991%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (722 instructions, 1.46%)</title><rect x="71.9051%" y="213" width="1.4560%" height="15" fill="rgb(208,123,14)" fg:x="35657" fg:w="722"/><text x="72.1980%" y="223.50"></text></g><g><title>candid::types::internal::find_type (773 instructions, 1.56%)</title><rect x="71.9051%" y="229" width="1.5588%" height="15" fill="rgb(224,200,8)" fg:x="35657" fg:w="773"/><text x="72.1980%" y="239.50"></text></g><g><title>candid::types::CandidType::ty (807 instructions, 1.63%)</title><rect x="71.9051%" y="245" width="1.6274%" height="15" fill="rgb(217,61,36)" fg:x="35657" fg:w="807"/><text x="72.1980%" y="255.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (37 instructions, 0.07%)</title><rect x="73.5324%" y="245" width="0.0746%" height="15" fill="rgb(206,35,45)" fg:x="36464" fg:w="37"/><text x="73.8254%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="73.6070%" y="229" width="0.1109%" height="15" fill="rgb(217,65,33)" fg:x="36501" fg:w="55"/><text x="73.9000%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="73.7785%" y="229" width="0.1109%" height="15" fill="rgb(222,158,48)" fg:x="36586" fg:w="55"/><text x="74.0714%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (170 instructions, 0.34%)</title><rect x="73.6070%" y="245" width="0.3428%" height="15" fill="rgb(254,2,54)" fg:x="36501" fg:w="170"/><text x="73.9000%" y="255.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="73.9499%" y="229" width="0.0565%" height="15" fill="rgb(250,143,38)" fg:x="36671" fg:w="28"/><text x="74.2428%" y="239.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="74.0063%" y="229" width="0.0323%" height="15" fill="rgb(248,25,0)" fg:x="36699" fg:w="16"/><text x="74.2993%" y="239.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="74.0386%" y="229" width="0.0323%" height="15" fill="rgb(206,152,27)" fg:x="36715" fg:w="16"/><text x="74.3316%" y="239.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (141 instructions, 0.28%)</title><rect x="73.9499%" y="245" width="0.2843%" height="15" fill="rgb(240,77,30)" fg:x="36671" fg:w="141"/><text x="74.2428%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="74.2342%" y="245" width="0.0222%" height="15" fill="rgb(231,5,3)" fg:x="36812" fg:w="11"/><text x="74.5272%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="74.2564%" y="245" width="0.0222%" height="15" fill="rgb(207,226,32)" fg:x="36823" fg:w="11"/><text x="74.5494%" y="255.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="74.2786%" y="245" width="0.0222%" height="15" fill="rgb(222,207,47)" fg:x="36834" fg:w="11"/><text x="74.5715%" y="255.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="74.3008%" y="245" width="0.8288%" height="15" fill="rgb(229,115,45)" fg:x="36845" fg:w="411"/><text x="74.5937%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="75.1296%" y="229" width="0.0444%" height="15" fill="rgb(224,191,6)" fg:x="37256" fg:w="22"/><text x="75.4225%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.26%)</title><rect x="75.1739%" y="229" width="0.2561%" height="15" fill="rgb(230,227,24)" fg:x="37278" fg:w="127"/><text x="75.4669%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="75.4300%" y="213" width="0.1109%" height="15" fill="rgb(228,80,19)" fg:x="37405" fg:w="55"/><text x="75.7230%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (85 instructions, 0.17%)</title><rect x="75.4300%" y="229" width="0.1714%" height="15" fill="rgb(247,229,0)" fg:x="37405" fg:w="85"/><text x="75.7230%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="75.6014%" y="229" width="0.0222%" height="15" fill="rgb(237,194,15)" fg:x="37490" fg:w="11"/><text x="75.8944%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="75.6236%" y="229" width="0.0101%" height="15" fill="rgb(219,203,20)" fg:x="37501" fg:w="5"/><text x="75.9166%" y="239.50"></text></g><g><title>candid::de::IDLDeserialize::done (344 instructions, 0.69%)</title><rect x="75.1296%" y="245" width="0.6937%" height="15" fill="rgb(234,128,8)" fg:x="37256" fg:w="344"/><text x="75.4225%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="75.8233%" y="245" width="0.1633%" height="15" fill="rgb(248,202,8)" fg:x="37600" fg:w="81"/><text x="76.1162%" y="255.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (6 instructions, 0.01%)</title><rect x="75.9866%" y="245" width="0.0121%" height="15" fill="rgb(206,104,37)" fg:x="37681" fg:w="6"/><text x="76.2796%" y="255.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="75.9987%" y="229" width="0.0101%" height="15" fill="rgb(223,8,27)" fg:x="37687" fg:w="5"/><text x="76.2917%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.26%)</title><rect x="76.0088%" y="213" width="0.2561%" height="15" fill="rgb(216,217,28)" fg:x="37692" fg:w="127"/><text x="76.3018%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (157 instructions, 0.32%)</title><rect x="76.0088%" y="229" width="0.3166%" height="15" fill="rgb(249,199,1)" fg:x="37692" fg:w="157"/><text x="76.3018%" y="239.50"></text></g><g><title>memset (136 instructions, 0.27%)</title><rect x="76.3254%" y="229" width="0.2743%" height="15" fill="rgb(240,85,17)" fg:x="37849" fg:w="136"/><text x="76.6184%" y="239.50"></text></g><g><title>candid::ser::IDLBuilder::new (455 instructions, 0.92%)</title><rect x="75.9987%" y="245" width="0.9175%" height="15" fill="rgb(206,108,45)" fg:x="37687" fg:w="455"/><text x="76.2917%" y="255.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.07%)</title><rect x="76.9163%" y="229" width="0.0665%" height="15" fill="rgb(245,210,41)" fg:x="38142" fg:w="33"/><text x="77.2092%" y="239.50"></text></g><g><title>std::io::Write::write_all (81 instructions, 0.16%)</title><rect x="76.9163%" y="245" width="0.1633%" height="15" fill="rgb(206,13,37)" fg:x="38142" fg:w="81"/><text x="77.2092%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="77.0796%" y="165" width="0.1896%" height="15" fill="rgb(250,61,18)" fg:x="38223" fg:w="94"/><text x="77.3726%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="77.0796%" y="181" width="0.2097%" height="15" fill="rgb(235,172,48)" fg:x="38223" fg:w="104"/><text x="77.3726%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.22%)</title><rect x="77.0796%" y="197" width="0.2158%" height="15" fill="rgb(249,201,17)" fg:x="38223" fg:w="107"/><text x="77.3726%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.28%)</title><rect x="77.0796%" y="213" width="0.2763%" height="15" fill="rgb(219,208,6)" fg:x="38223" fg:w="137"/><text x="77.3726%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 instructions, 0.41%)</title><rect x="77.0796%" y="229" width="0.4073%" height="15" fill="rgb(248,31,23)" fg:x="38223" fg:w="202"/><text x="77.3726%" y="239.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="77.4869%" y="229" width="0.0222%" height="15" fill="rgb(245,15,42)" fg:x="38425" fg:w="11"/><text x="77.7799%" y="239.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="77.5091%" y="229" width="0.0222%" height="15" fill="rgb(222,217,39)" fg:x="38436" fg:w="11"/><text x="77.8021%" y="239.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.86%)</title><rect x="77.0796%" y="245" width="0.8591%" height="15" fill="rgb(210,219,27)" fg:x="38223" fg:w="426"/><text x="77.3726%" y="255.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.06%)</title><rect x="77.9387%" y="229" width="0.0625%" height="15" fill="rgb(252,166,36)" fg:x="38649" fg:w="31"/><text x="78.2316%" y="239.50"></text></g><g><title>std::io::Write::write_all (79 instructions, 0.16%)</title><rect x="77.9387%" y="245" width="0.1593%" height="15" fill="rgb(245,132,34)" fg:x="38649" fg:w="79"/><text x="78.2316%" y="255.50"></text></g><g><title>std::io::Write::write_all (14 instructions, 0.03%)</title><rect x="78.0980%" y="245" width="0.0282%" height="15" fill="rgb(236,54,3)" fg:x="38728" fg:w="14"/><text x="78.3909%" y="255.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="78.1262%" y="245" width="0.0101%" height="15" fill="rgb(241,173,43)" fg:x="38742" fg:w="5"/><text x="78.4192%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="78.1363%" y="245" width="0.1633%" height="15" fill="rgb(215,190,9)" fg:x="38747" fg:w="81"/><text x="78.4292%" y="255.50"></text></g><g><title>canister_update &lt;ic-cdk internal&gt; timer_executor (13,550 instructions, 27.32%)</title><rect x="52.6306%" y="261" width="27.3246%" height="15" fill="rgb(242,101,16)" fg:x="26099" fg:w="13550"/><text x="52.9236%" y="271.50">canister_update &lt;ic-cdk internal&gt; tim..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.19%)</title><rect x="79.9552%" y="213" width="0.1896%" height="15" fill="rgb(223,190,21)" fg:x="39649" fg:w="94"/><text x="80.2482%" y="223.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.21%)</title><rect x="79.9552%" y="229" width="0.2097%" height="15" fill="rgb(215,228,25)" fg:x="39649" fg:w="104"/><text x="80.2482%" y="239.50"></text></g><g><title>__rust_alloc (107 instructions, 0.22%)</title><rect x="79.9552%" y="245" width="0.2158%" height="15" fill="rgb(225,36,22)" fg:x="39649" fg:w="107"/><text x="80.2482%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.01%)</title><rect x="80.1710%" y="181" width="0.0121%" height="15" fill="rgb(251,106,46)" fg:x="39756" fg:w="6"/><text x="80.4640%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="80.1831%" y="165" width="0.1230%" height="15" fill="rgb(208,90,1)" fg:x="39762" fg:w="61"/><text x="80.4761%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="80.3061%" y="165" width="0.8207%" height="15" fill="rgb(243,10,4)" fg:x="39823" fg:w="407"/><text x="80.5991%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="81.1269%" y="165" width="0.1492%" height="15" fill="rgb(212,137,27)" fg:x="40230" fg:w="74"/><text x="81.4198%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="81.2761%" y="165" width="0.1089%" height="15" fill="rgb(231,220,49)" fg:x="40304" fg:w="54"/><text x="81.5691%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="81.3850%" y="165" width="0.1089%" height="15" fill="rgb(237,96,20)" fg:x="40358" fg:w="54"/><text x="81.6780%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="81.4939%" y="165" width="0.1089%" height="15" fill="rgb(239,229,30)" fg:x="40412" fg:w="54"/><text x="81.7868%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="81.6028%" y="165" width="0.1089%" height="15" fill="rgb(219,65,33)" fg:x="40466" fg:w="54"/><text x="81.8957%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.12%)</title><rect x="81.7117%" y="165" width="0.1230%" height="15" fill="rgb(243,134,7)" fg:x="40520" fg:w="61"/><text x="82.0046%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="81.8347%" y="165" width="0.1956%" height="15" fill="rgb(216,177,54)" fg:x="40581" fg:w="97"/><text x="82.1276%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="82.0303%" y="165" width="0.8207%" height="15" fill="rgb(211,160,20)" fg:x="40678" fg:w="407"/><text x="82.3233%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="82.8510%" y="165" width="0.0323%" height="15" fill="rgb(239,85,39)" fg:x="41085" fg:w="16"/><text x="83.1440%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.27%)</title><rect x="82.8833%" y="101" width="0.2743%" height="15" fill="rgb(232,125,22)" fg:x="41101" fg:w="136"/><text x="83.1763%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.29%)</title><rect x="82.8833%" y="117" width="0.2944%" height="15" fill="rgb(244,57,34)" fg:x="41101" fg:w="146"/><text x="83.1763%" y="127.50"></text></g><g><title>__rust_alloc (149 instructions, 0.30%)</title><rect x="82.8833%" y="133" width="0.3005%" height="15" fill="rgb(214,203,32)" fg:x="41101" fg:w="149"/><text x="83.1763%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="83.1838%" y="101" width="0.1210%" height="15" fill="rgb(207,58,43)" fg:x="41250" fg:w="60"/><text x="83.4767%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="83.1838%" y="117" width="0.1714%" height="15" fill="rgb(215,193,15)" fg:x="41250" fg:w="85"/><text x="83.4767%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="83.3552%" y="69" width="0.0181%" height="15" fill="rgb(232,15,44)" fg:x="41335" fg:w="9"/><text x="83.6481%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="83.3733%" y="53" width="0.0605%" height="15" fill="rgb(212,3,48)" fg:x="41344" fg:w="30"/><text x="83.6663%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="83.3733%" y="69" width="0.1109%" height="15" fill="rgb(218,128,7)" fg:x="41344" fg:w="55"/><text x="83.6663%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="83.3552%" y="85" width="0.2339%" height="15" fill="rgb(226,216,39)" fg:x="41335" fg:w="116"/><text x="83.6481%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="83.3552%" y="101" width="0.3408%" height="15" fill="rgb(243,47,51)" fg:x="41335" fg:w="169"/><text x="83.6481%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="83.3552%" y="117" width="0.3509%" height="15" fill="rgb(241,183,40)" fg:x="41335" fg:w="174"/><text x="83.6481%" y="127.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="83.1838%" y="133" width="0.7401%" height="15" fill="rgb(231,217,32)" fg:x="41250" fg:w="367"/><text x="83.4767%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (659 instructions, 1.33%)</title><rect x="82.8833%" y="149" width="1.3289%" height="15" fill="rgb(229,61,38)" fg:x="41101" fg:w="659"/><text x="83.1763%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="84.2122%" y="149" width="0.1492%" height="15" fill="rgb(225,210,5)" fg:x="41760" fg:w="74"/><text x="84.5052%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="84.3615%" y="149" width="0.1089%" height="15" fill="rgb(231,79,45)" fg:x="41834" fg:w="54"/><text x="84.6544%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (858 instructions, 1.73%)</title><rect x="82.8833%" y="165" width="1.7302%" height="15" fill="rgb(224,100,7)" fg:x="41101" fg:w="858"/><text x="83.1763%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="84.6135%" y="165" width="0.1129%" height="15" fill="rgb(241,198,18)" fg:x="41959" fg:w="56"/><text x="84.9065%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.20%)</title><rect x="84.7265%" y="165" width="0.1956%" height="15" fill="rgb(252,97,53)" fg:x="42015" fg:w="97"/><text x="85.0194%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.82%)</title><rect x="84.9221%" y="149" width="0.8207%" height="15" fill="rgb(220,88,7)" fg:x="42112" fg:w="407"/><text x="85.2150%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="85.7428%" y="149" width="0.0323%" height="15" fill="rgb(213,176,14)" fg:x="42519" fg:w="16"/><text x="86.0358%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.18%)</title><rect x="85.7751%" y="85" width="0.1815%" height="15" fill="rgb(246,73,7)" fg:x="42535" fg:w="90"/><text x="86.0680%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.20%)</title><rect x="85.7751%" y="101" width="0.2017%" height="15" fill="rgb(245,64,36)" fg:x="42535" fg:w="100"/><text x="86.0680%" y="111.50"></text></g><g><title>__rust_alloc (103 instructions, 0.21%)</title><rect x="85.7751%" y="117" width="0.2077%" height="15" fill="rgb(245,80,10)" fg:x="42535" fg:w="103"/><text x="86.0680%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="85.9828%" y="85" width="0.1210%" height="15" fill="rgb(232,107,50)" fg:x="42638" fg:w="60"/><text x="86.2757%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="85.9828%" y="101" width="0.1714%" height="15" fill="rgb(253,3,0)" fg:x="42638" fg:w="85"/><text x="86.2757%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.1542%" y="53" width="0.0181%" height="15" fill="rgb(212,99,53)" fg:x="42723" fg:w="9"/><text x="86.4472%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="86.1723%" y="37" width="0.0605%" height="15" fill="rgb(249,111,54)" fg:x="42732" fg:w="30"/><text x="86.4653%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="86.1723%" y="53" width="0.1109%" height="15" fill="rgb(249,55,30)" fg:x="42732" fg:w="55"/><text x="86.4653%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.23%)</title><rect x="86.1542%" y="69" width="0.2339%" height="15" fill="rgb(237,47,42)" fg:x="42723" fg:w="116"/><text x="86.4472%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.34%)</title><rect x="86.1542%" y="85" width="0.3408%" height="15" fill="rgb(211,20,18)" fg:x="42723" fg:w="169"/><text x="86.4472%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.35%)</title><rect x="86.1542%" y="101" width="0.3509%" height="15" fill="rgb(231,203,46)" fg:x="42723" fg:w="174"/><text x="86.4472%" y="111.50"></text></g><g><title>core::fmt::write (367 instructions, 0.74%)</title><rect x="85.9828%" y="117" width="0.7401%" height="15" fill="rgb(237,142,3)" fg:x="42638" fg:w="367"/><text x="86.2757%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.24%)</title><rect x="85.7751%" y="133" width="1.2362%" height="15" fill="rgb(241,107,1)" fg:x="42535" fg:w="613"/><text x="86.0680%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.15%)</title><rect x="87.0112%" y="133" width="0.1492%" height="15" fill="rgb(229,83,13)" fg:x="43148" fg:w="74"/><text x="87.3042%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.11%)</title><rect x="87.1605%" y="133" width="0.1089%" height="15" fill="rgb(241,91,40)" fg:x="43222" fg:w="54"/><text x="87.4534%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.64%)</title><rect x="85.7751%" y="149" width="1.6375%" height="15" fill="rgb(225,3,45)" fg:x="42535" fg:w="812"/><text x="86.0680%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,402 instructions, 2.83%)</title><rect x="84.9221%" y="165" width="2.8272%" height="15" fill="rgb(244,223,14)" fg:x="42112" fg:w="1402"/><text x="85.2150%" y="175.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.11%)</title><rect x="87.7493%" y="165" width="0.1129%" height="15" fill="rgb(224,124,37)" fg:x="43514" fg:w="56"/><text x="88.0423%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="87.8622%" y="165" width="0.0262%" height="15" fill="rgb(251,171,30)" fg:x="43570" fg:w="13"/><text x="88.1552%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="87.8884%" y="165" width="0.0262%" height="15" fill="rgb(236,46,54)" fg:x="43583" fg:w="13"/><text x="88.1814%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="87.9147%" y="165" width="0.0444%" height="15" fill="rgb(245,213,5)" fg:x="43596" fg:w="22"/><text x="88.2076%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (176 instructions, 0.35%)</title><rect x="87.9590%" y="133" width="0.3549%" height="15" fill="rgb(230,144,27)" fg:x="43618" fg:w="176"/><text x="88.2520%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (186 instructions, 0.38%)</title><rect x="87.9590%" y="149" width="0.3751%" height="15" fill="rgb(220,86,6)" fg:x="43618" fg:w="186"/><text x="88.2520%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.18%)</title><rect x="88.3402%" y="133" width="0.1795%" height="15" fill="rgb(240,20,13)" fg:x="43807" fg:w="89"/><text x="88.6331%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.20%)</title><rect x="88.3402%" y="149" width="0.1996%" height="15" fill="rgb(217,89,34)" fg:x="43807" fg:w="99"/><text x="88.6331%" y="159.50"></text></g><g><title>__rust_alloc (291 instructions, 0.59%)</title><rect x="87.9590%" y="165" width="0.5868%" height="15" fill="rgb(229,13,5)" fg:x="43618" fg:w="291"/><text x="88.2520%" y="175.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.03%)</title><rect x="88.5458%" y="165" width="0.0282%" height="15" fill="rgb(244,67,35)" fg:x="43909" fg:w="14"/><text x="88.8388%" y="175.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="88.5741%" y="165" width="0.8288%" height="15" fill="rgb(221,40,2)" fg:x="43923" fg:w="411"/><text x="88.8670%" y="175.50"></text></g><g><title>memcpy (366 instructions, 0.74%)</title><rect x="89.4029%" y="165" width="0.7381%" height="15" fill="rgb(237,157,21)" fg:x="44334" fg:w="366"/><text x="89.6959%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,125 instructions, 12.35%)</title><rect x="80.1831%" y="181" width="12.3515%" height="15" fill="rgb(222,94,11)" fg:x="39762" fg:w="6125"/><text x="80.4761%" y="191.50">candid::de::IDL..</text></g><g><title>memcpy (321 instructions, 0.65%)</title><rect x="92.5346%" y="181" width="0.6473%" height="15" fill="rgb(249,113,6)" fg:x="45887" fg:w="321"/><text x="92.8276%" y="191.50"></text></g><g><title>memcpy (411 instructions, 0.83%)</title><rect x="93.1820%" y="181" width="0.8288%" height="15" fill="rgb(238,137,36)" fg:x="46208" fg:w="411"/><text x="93.4749%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="94.0108%" y="165" width="0.0444%" height="15" fill="rgb(210,102,26)" fg:x="46619" fg:w="22"/><text x="94.3037%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="94.0551%" y="149" width="0.1633%" height="15" fill="rgb(218,30,30)" fg:x="46641" fg:w="81"/><text x="94.3481%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.26%)</title><rect x="94.2790%" y="149" width="0.2561%" height="15" fill="rgb(214,67,26)" fg:x="46752" fg:w="127"/><text x="94.5719%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.54%)</title><rect x="94.0551%" y="165" width="0.5404%" height="15" fill="rgb(251,9,53)" fg:x="46641" fg:w="268"/><text x="94.3481%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5956%" y="165" width="0.0101%" height="15" fill="rgb(228,204,25)" fg:x="46909" fg:w="5"/><text x="94.8885%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (384 instructions, 0.77%)</title><rect x="94.0108%" y="181" width="0.7744%" height="15" fill="rgb(207,153,8)" fg:x="46619" fg:w="384"/><text x="94.3037%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="94.7851%" y="181" width="0.1633%" height="15" fill="rgb(242,9,16)" fg:x="47003" fg:w="81"/><text x="95.0781%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as futures_core::stream::Stream&gt;::poll_next::Bomb&lt;ic_cdk_timers::global_timer::{{closure}}::{{closure}}::{{closure}}&gt;&gt; (130 instructions, 0.26%)</title><rect x="94.9485%" y="181" width="0.2622%" height="15" fill="rgb(217,211,10)" fg:x="47084" fg:w="130"/><text x="95.2414%" y="191.50"></text></g><g><title>ic_cdk_timers::TASKS::__getit (6 instructions, 0.01%)</title><rect x="95.2106%" y="181" width="0.0121%" height="15" fill="rgb(219,228,52)" fg:x="47214" fg:w="6"/><text x="95.5036%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.01%)</title><rect x="95.2227%" y="181" width="0.0121%" height="15" fill="rgb(231,92,29)" fg:x="47220" fg:w="6"/><text x="95.5157%" y="191.50"></text></g><g><title>&lt;futures_util::stream::futures_unordered::FuturesUnordered&lt;Fut&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="95.2348%" y="181" width="0.0262%" height="15" fill="rgb(232,8,23)" fg:x="47226" fg:w="13"/><text x="95.5278%" y="191.50"></text></g><g><title>ic_cdk_timers::global_timer::{{closure}} (8,456 instructions, 17.05%)</title><rect x="80.1710%" y="197" width="17.0522%" height="15" fill="rgb(216,211,34)" fg:x="39756" fg:w="8456"/><text x="80.4640%" y="207.50">ic_cdk_timers::global_..</text></g><g><title>core::ptr::drop_in_place&lt;ic_cdk_timers::global_timer::{{closure}}&gt; (5 instructions, 0.01%)</title><rect x="97.2232%" y="197" width="0.0101%" height="15" fill="rgb(236,151,0)" fg:x="48212" fg:w="5"/><text x="97.5161%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.2333%" y="197" width="0.1633%" height="15" fill="rgb(209,168,3)" fg:x="48217" fg:w="81"/><text x="97.5262%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.26%)</title><rect x="97.3966%" y="197" width="0.2561%" height="15" fill="rgb(208,129,28)" fg:x="48298" fg:w="127"/><text x="97.6896%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,731 instructions, 17.61%)</title><rect x="80.1710%" y="213" width="17.6067%" height="15" fill="rgb(229,78,22)" fg:x="39756" fg:w="8731"/><text x="80.4640%" y="223.50">ic_cdk::futures::waker:..</text></g><g><title>futures_core::task::__internal::atomic_waker::AtomicWaker::wake (8,760 instructions, 17.67%)</title><rect x="80.1710%" y="229" width="17.6652%" height="15" fill="rgb(228,187,13)" fg:x="39756" fg:w="8760"/><text x="80.4640%" y="239.50">futures_core::task::__i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.8362%" y="197" width="0.1633%" height="15" fill="rgb(240,119,24)" fg:x="48516" fg:w="81"/><text x="98.1292%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (116 instructions, 0.23%)</title><rect x="97.8362%" y="213" width="0.2339%" height="15" fill="rgb(209,194,42)" fg:x="48516" fg:w="116"/><text x="98.1292%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.14%)</title><rect x="98.5581%" y="197" width="0.1432%" height="15" fill="rgb(247,200,46)" fg:x="48874" fg:w="71"/><text x="98.8511%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (385 instructions, 0.78%)</title><rect x="98.2173%" y="213" width="0.7764%" height="15" fill="rgb(218,76,16)" fg:x="48705" fg:w="385"/><text x="98.5103%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (622 instructions, 1.25%)</title><rect x="97.8362%" y="229" width="1.2543%" height="15" fill="rgb(225,21,48)" fg:x="48516" fg:w="622"/><text x="98.1292%" y="239.50"></text></g><g><title>futures_task::waker::wake_arc_raw (9,498 instructions, 19.15%)</title><rect x="80.1710%" y="245" width="19.1534%" height="15" fill="rgb(239,223,50)" fg:x="39756" fg:w="9498"/><text x="80.4640%" y="255.50">futures_task::waker::wake..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.11%)</title><rect x="99.3244%" y="213" width="0.1089%" height="15" fill="rgb(244,45,21)" fg:x="49254" fg:w="54"/><text x="99.6174%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.27%)</title><rect x="99.3244%" y="229" width="0.2743%" height="15" fill="rgb(232,33,43)" fg:x="49254" fg:w="136"/><text x="99.6174%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (168 instructions, 0.34%)</title><rect x="99.3244%" y="245" width="0.3388%" height="15" fill="rgb(209,8,3)" fg:x="49254" fg:w="168"/><text x="99.6174%" y="255.50"></text></g><g><title>all (49,589 instructions, 100%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(214,25,53)" fg:x="0" fg:w="49589"/><text x="0.2930%" y="287.50"></text></g><g><title>ic_cdk::api::call::callback (9,940 instructions, 20.04%)</title><rect x="79.9552%" y="261" width="20.0448%" height="15" fill="rgb(254,186,54)" fg:x="39649" fg:w="9940"/><text x="80.2482%" y="271.50">ic_cdk::api::call::callback</text></g></svg></svg>