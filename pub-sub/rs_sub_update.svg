<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="43504"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.0000%" y="213" width="0.1885%" height="15" fill="rgb(234,70,1)" fg:x="0" fg:w="82"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="0.1885%" y="213" width="0.1885%" height="15" fill="rgb(232,178,18)" fg:x="82" fg:w="82"/><text x="0.4815%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="0.3770%" y="181" width="0.1839%" height="15" fill="rgb(241,78,40)" fg:x="164" fg:w="80"/><text x="0.6699%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,162 instructions, 2.67%)</title><rect x="0.3770%" y="197" width="2.6710%" height="15" fill="rgb(222,35,25)" fg:x="164" fg:w="1162"/><text x="0.6699%" y="207.50">i..</text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="3.0480%" y="181" width="0.1172%" height="15" fill="rgb(207,92,16)" fg:x="1326" fg:w="51"/><text x="3.3410%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="3.1652%" y="165" width="0.0138%" height="15" fill="rgb(216,59,51)" fg:x="1377" fg:w="6"/><text x="3.4582%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.00%)</title><rect x="3.1652%" y="181" width="1.0045%" height="15" fill="rgb(213,80,28)" fg:x="1377" fg:w="437"/><text x="3.4582%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.15%)</title><rect x="4.1697%" y="181" width="0.1471%" height="15" fill="rgb(220,93,7)" fg:x="1814" fg:w="64"/><text x="4.4627%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="4.3168%" y="181" width="0.1402%" height="15" fill="rgb(225,24,44)" fg:x="1878" fg:w="61"/><text x="4.6098%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="4.4571%" y="181" width="0.1402%" height="15" fill="rgb(243,74,40)" fg:x="1939" fg:w="61"/><text x="4.7500%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="4.5973%" y="181" width="0.1402%" height="15" fill="rgb(228,39,7)" fg:x="2000" fg:w="61"/><text x="4.8902%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="4.7375%" y="181" width="0.1402%" height="15" fill="rgb(227,79,8)" fg:x="2061" fg:w="61"/><text x="5.0305%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="4.8777%" y="181" width="0.1172%" height="15" fill="rgb(236,58,11)" fg:x="2122" fg:w="51"/><text x="5.1707%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.22%)</title><rect x="4.9949%" y="181" width="0.2184%" height="15" fill="rgb(249,63,35)" fg:x="2173" fg:w="95"/><text x="5.2879%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.2133%" y="165" width="0.0138%" height="15" fill="rgb(252,114,16)" fg:x="2268" fg:w="6"/><text x="5.5063%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.00%)</title><rect x="5.2133%" y="181" width="1.0045%" height="15" fill="rgb(254,151,24)" fg:x="2268" fg:w="437"/><text x="5.5063%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.2178%" y="181" width="0.0437%" height="15" fill="rgb(253,54,39)" fg:x="2705" fg:w="19"/><text x="6.5108%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="6.2615%" y="149" width="0.2643%" height="15" fill="rgb(243,25,45)" fg:x="2724" fg:w="115"/><text x="6.5545%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="6.5258%" y="117" width="0.1540%" height="15" fill="rgb(234,134,9)" fg:x="2839" fg:w="67"/><text x="6.8188%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.22%)</title><rect x="6.5258%" y="133" width="0.2207%" height="15" fill="rgb(227,166,31)" fg:x="2839" fg:w="96"/><text x="6.8188%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="6.7465%" y="85" width="0.0253%" height="15" fill="rgb(245,143,41)" fg:x="2935" fg:w="11"/><text x="7.0395%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="6.7718%" y="69" width="0.0805%" height="15" fill="rgb(238,181,32)" fg:x="2946" fg:w="35"/><text x="7.0648%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="6.7718%" y="85" width="0.1471%" height="15" fill="rgb(224,113,18)" fg:x="2946" fg:w="64"/><text x="7.0648%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="6.7465%" y="101" width="0.3310%" height="15" fill="rgb(240,229,28)" fg:x="2935" fg:w="144"/><text x="7.0395%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.48%)</title><rect x="6.7465%" y="117" width="0.4827%" height="15" fill="rgb(250,185,3)" fg:x="2935" fg:w="210"/><text x="7.0395%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.51%)</title><rect x="6.7465%" y="133" width="0.5057%" height="15" fill="rgb(212,59,25)" fg:x="2935" fg:w="220"/><text x="7.0395%" y="143.50"></text></g><g><title>core::fmt::write (449 instructions, 1.03%)</title><rect x="6.5258%" y="149" width="1.0321%" height="15" fill="rgb(221,87,20)" fg:x="2839" fg:w="449"/><text x="6.8188%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (700 instructions, 1.61%)</title><rect x="6.2615%" y="165" width="1.6090%" height="15" fill="rgb(213,74,28)" fg:x="2724" fg:w="700"/><text x="6.5545%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.15%)</title><rect x="7.8705%" y="165" width="0.1471%" height="15" fill="rgb(224,132,34)" fg:x="3424" fg:w="64"/><text x="8.1635%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="8.0177%" y="165" width="0.1402%" height="15" fill="rgb(222,101,24)" fg:x="3488" fg:w="61"/><text x="8.3106%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (936 instructions, 2.15%)</title><rect x="6.2615%" y="181" width="2.1515%" height="15" fill="rgb(254,142,4)" fg:x="2724" fg:w="936"/><text x="6.5545%" y="191.50">b..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="8.4130%" y="165" width="0.1402%" height="15" fill="rgb(230,229,49)" fg:x="3660" fg:w="61"/><text x="8.7060%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="8.5532%" y="165" width="0.1885%" height="15" fill="rgb(238,70,47)" fg:x="3721" fg:w="82"/><text x="8.8462%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="8.7417%" y="149" width="0.1885%" height="15" fill="rgb(231,160,17)" fg:x="3803" fg:w="82"/><text x="9.0347%" y="159.50"></text></g><g><title>memcpy (131 instructions, 0.30%)</title><rect x="8.9302%" y="117" width="0.3011%" height="15" fill="rgb(218,68,53)" fg:x="3885" fg:w="131"/><text x="9.2232%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (160 instructions, 0.37%)</title><rect x="8.9302%" y="133" width="0.3678%" height="15" fill="rgb(236,111,10)" fg:x="3885" fg:w="160"/><text x="9.2232%" y="143.50"></text></g><g><title>__rust_realloc (133 instructions, 0.31%)</title><rect x="9.2980%" y="53" width="0.3057%" height="15" fill="rgb(224,34,41)" fg:x="4045" fg:w="133"/><text x="9.5910%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (190 instructions, 0.44%)</title><rect x="9.2980%" y="69" width="0.4367%" height="15" fill="rgb(241,118,19)" fg:x="4045" fg:w="190"/><text x="9.5910%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (276 instructions, 0.63%)</title><rect x="9.2980%" y="85" width="0.6344%" height="15" fill="rgb(238,129,25)" fg:x="4045" fg:w="276"/><text x="9.5910%" y="95.50"></text></g><g><title>memcpy (211 instructions, 0.49%)</title><rect x="9.9324%" y="85" width="0.4850%" height="15" fill="rgb(238,22,31)" fg:x="4321" fg:w="211"/><text x="10.2254%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (527 instructions, 1.21%)</title><rect x="9.2980%" y="101" width="1.2114%" height="15" fill="rgb(222,174,48)" fg:x="4045" fg:w="527"/><text x="9.5910%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="10.5094%" y="69" width="0.0253%" height="15" fill="rgb(206,152,40)" fg:x="4572" fg:w="11"/><text x="10.8023%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="10.5347%" y="53" width="0.0805%" height="15" fill="rgb(218,99,54)" fg:x="4583" fg:w="35"/><text x="10.8276%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="10.5347%" y="69" width="0.1471%" height="15" fill="rgb(220,174,26)" fg:x="4583" fg:w="64"/><text x="10.8276%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="10.5094%" y="85" width="0.3310%" height="15" fill="rgb(245,116,9)" fg:x="4572" fg:w="144"/><text x="10.8023%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.49%)</title><rect x="10.5094%" y="101" width="0.4942%" height="15" fill="rgb(209,72,35)" fg:x="4572" fg:w="215"/><text x="10.8023%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="11.0036%" y="85" width="0.1172%" height="15" fill="rgb(226,126,21)" fg:x="4787" fg:w="51"/><text x="11.2966%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.18%)</title><rect x="11.0036%" y="101" width="0.1839%" height="15" fill="rgb(227,192,1)" fg:x="4787" fg:w="80"/><text x="11.2966%" y="111.50"></text></g><g><title>core::fmt::write (983 instructions, 2.26%)</title><rect x="9.2980%" y="117" width="2.2596%" height="15" fill="rgb(237,180,29)" fg:x="4045" fg:w="983"/><text x="9.5910%" y="127.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,043 instructions, 2.40%)</title><rect x="9.2980%" y="133" width="2.3975%" height="15" fill="rgb(230,197,35)" fg:x="4045" fg:w="1043"/><text x="9.5910%" y="143.50">&lt;..</text></g><g><title>core::fmt::write (1,336 instructions, 3.07%)</title><rect x="8.9302%" y="149" width="3.0710%" height="15" fill="rgb(246,193,31)" fg:x="3885" fg:w="1336"/><text x="9.2232%" y="159.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,554 instructions, 3.57%)</title><rect x="8.7417%" y="165" width="3.5721%" height="15" fill="rgb(241,36,4)" fg:x="3803" fg:w="1554"/><text x="9.0347%" y="175.50">all..</text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.12%)</title><rect x="12.3138%" y="165" width="0.1195%" height="15" fill="rgb(241,130,17)" fg:x="5357" fg:w="52"/><text x="12.6068%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="12.4333%" y="165" width="0.1402%" height="15" fill="rgb(206,137,32)" fg:x="5409" fg:w="61"/><text x="12.7263%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="12.5736%" y="165" width="0.1057%" height="15" fill="rgb(237,228,51)" fg:x="5470" fg:w="46"/><text x="12.8665%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (214 instructions, 0.49%)</title><rect x="12.6793%" y="133" width="0.4919%" height="15" fill="rgb(243,6,42)" fg:x="5516" fg:w="214"/><text x="12.9723%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (255 instructions, 0.59%)</title><rect x="12.6793%" y="149" width="0.5862%" height="15" fill="rgb(251,74,28)" fg:x="5516" fg:w="255"/><text x="12.9723%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (331 instructions, 0.76%)</title><rect x="12.6793%" y="165" width="0.7608%" height="15" fill="rgb(218,20,49)" fg:x="5516" fg:w="331"/><text x="12.9723%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="13.4401%" y="165" width="0.1402%" height="15" fill="rgb(238,28,14)" fg:x="5847" fg:w="61"/><text x="13.7331%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="13.5804%" y="165" width="0.1885%" height="15" fill="rgb(229,40,46)" fg:x="5908" fg:w="82"/><text x="13.8733%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="13.7688%" y="149" width="0.1885%" height="15" fill="rgb(244,195,20)" fg:x="5990" fg:w="82"/><text x="14.0618%" y="159.50"></text></g><g><title>memcpy (131 instructions, 0.30%)</title><rect x="13.9573%" y="117" width="0.3011%" height="15" fill="rgb(253,56,35)" fg:x="6072" fg:w="131"/><text x="14.2503%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (160 instructions, 0.37%)</title><rect x="13.9573%" y="133" width="0.3678%" height="15" fill="rgb(210,149,44)" fg:x="6072" fg:w="160"/><text x="14.2503%" y="143.50"></text></g><g><title>__rust_realloc (133 instructions, 0.31%)</title><rect x="14.3251%" y="53" width="0.3057%" height="15" fill="rgb(240,135,12)" fg:x="6232" fg:w="133"/><text x="14.6181%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (190 instructions, 0.44%)</title><rect x="14.3251%" y="69" width="0.4367%" height="15" fill="rgb(251,24,50)" fg:x="6232" fg:w="190"/><text x="14.6181%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (276 instructions, 0.63%)</title><rect x="14.3251%" y="85" width="0.6344%" height="15" fill="rgb(243,200,47)" fg:x="6232" fg:w="276"/><text x="14.6181%" y="95.50"></text></g><g><title>memcpy (211 instructions, 0.49%)</title><rect x="14.9595%" y="85" width="0.4850%" height="15" fill="rgb(224,166,26)" fg:x="6508" fg:w="211"/><text x="15.2525%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (527 instructions, 1.21%)</title><rect x="14.3251%" y="101" width="1.2114%" height="15" fill="rgb(233,0,47)" fg:x="6232" fg:w="527"/><text x="14.6181%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="15.5365%" y="69" width="0.0253%" height="15" fill="rgb(253,80,5)" fg:x="6759" fg:w="11"/><text x="15.8295%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="15.5618%" y="53" width="0.0805%" height="15" fill="rgb(214,133,25)" fg:x="6770" fg:w="35"/><text x="15.8548%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="15.5618%" y="69" width="0.1471%" height="15" fill="rgb(209,27,14)" fg:x="6770" fg:w="64"/><text x="15.8548%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="15.5365%" y="85" width="0.3310%" height="15" fill="rgb(219,102,51)" fg:x="6759" fg:w="144"/><text x="15.8295%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.49%)</title><rect x="15.5365%" y="101" width="0.4942%" height="15" fill="rgb(237,18,16)" fg:x="6759" fg:w="215"/><text x="15.8295%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="16.0307%" y="85" width="0.1172%" height="15" fill="rgb(241,85,17)" fg:x="6974" fg:w="51"/><text x="16.3237%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (80 instructions, 0.18%)</title><rect x="16.0307%" y="101" width="0.1839%" height="15" fill="rgb(236,90,42)" fg:x="6974" fg:w="80"/><text x="16.3237%" y="111.50"></text></g><g><title>core::fmt::write (983 instructions, 2.26%)</title><rect x="14.3251%" y="117" width="2.2596%" height="15" fill="rgb(249,57,21)" fg:x="6232" fg:w="983"/><text x="14.6181%" y="127.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,043 instructions, 2.40%)</title><rect x="14.3251%" y="133" width="2.3975%" height="15" fill="rgb(243,12,36)" fg:x="6232" fg:w="1043"/><text x="14.6181%" y="143.50">&lt;..</text></g><g><title>core::fmt::write (1,336 instructions, 3.07%)</title><rect x="13.9573%" y="149" width="3.0710%" height="15" fill="rgb(253,128,47)" fg:x="6072" fg:w="1336"/><text x="14.2503%" y="159.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,554 instructions, 3.57%)</title><rect x="13.7688%" y="165" width="3.5721%" height="15" fill="rgb(207,33,20)" fg:x="5990" fg:w="1554"/><text x="14.0618%" y="175.50">all..</text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.12%)</title><rect x="17.3409%" y="165" width="0.1195%" height="15" fill="rgb(233,215,35)" fg:x="7544" fg:w="52"/><text x="17.6339%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="17.4605%" y="165" width="0.1402%" height="15" fill="rgb(249,188,52)" fg:x="7596" fg:w="61"/><text x="17.7534%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="17.6007%" y="165" width="0.1057%" height="15" fill="rgb(225,12,32)" fg:x="7657" fg:w="46"/><text x="17.8936%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.14%)</title><rect x="17.7064%" y="165" width="0.1402%" height="15" fill="rgb(247,98,14)" fg:x="7703" fg:w="61"/><text x="17.9994%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="17.8466%" y="149" width="0.1172%" height="15" fill="rgb(247,219,48)" fg:x="7764" fg:w="51"/><text x="18.1396%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.22%)</title><rect x="17.9639%" y="149" width="0.2184%" height="15" fill="rgb(253,60,48)" fg:x="7815" fg:w="95"/><text x="18.2568%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="18.1822%" y="133" width="0.0138%" height="15" fill="rgb(245,15,52)" fg:x="7910" fg:w="6"/><text x="18.4752%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.00%)</title><rect x="18.1822%" y="149" width="1.0045%" height="15" fill="rgb(220,133,28)" fg:x="7910" fg:w="437"/><text x="18.4752%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="19.1867%" y="149" width="0.0437%" height="15" fill="rgb(217,180,4)" fg:x="8347" fg:w="19"/><text x="19.4797%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="19.2304%" y="117" width="0.1885%" height="15" fill="rgb(251,24,1)" fg:x="8366" fg:w="82"/><text x="19.5234%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="19.4189%" y="85" width="0.1540%" height="15" fill="rgb(212,185,49)" fg:x="8448" fg:w="67"/><text x="19.7119%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.22%)</title><rect x="19.4189%" y="101" width="0.2207%" height="15" fill="rgb(215,175,22)" fg:x="8448" fg:w="96"/><text x="19.7119%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="19.6396%" y="53" width="0.0253%" height="15" fill="rgb(250,205,14)" fg:x="8544" fg:w="11"/><text x="19.9325%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="19.6649%" y="37" width="0.0805%" height="15" fill="rgb(225,211,22)" fg:x="8555" fg:w="35"/><text x="19.9578%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="19.6649%" y="53" width="0.1471%" height="15" fill="rgb(251,179,42)" fg:x="8555" fg:w="64"/><text x="19.9578%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="19.6396%" y="69" width="0.3310%" height="15" fill="rgb(208,216,51)" fg:x="8544" fg:w="144"/><text x="19.9325%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.48%)</title><rect x="19.6396%" y="85" width="0.4827%" height="15" fill="rgb(235,36,11)" fg:x="8544" fg:w="210"/><text x="19.9325%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.51%)</title><rect x="19.6396%" y="101" width="0.5057%" height="15" fill="rgb(213,189,28)" fg:x="8544" fg:w="220"/><text x="19.9325%" y="111.50"></text></g><g><title>core::fmt::write (449 instructions, 1.03%)</title><rect x="19.4189%" y="117" width="1.0321%" height="15" fill="rgb(227,203,42)" fg:x="8448" fg:w="449"/><text x="19.7119%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.53%)</title><rect x="19.2304%" y="133" width="1.5332%" height="15" fill="rgb(244,72,36)" fg:x="8366" fg:w="667"/><text x="19.5234%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.15%)</title><rect x="20.7636%" y="133" width="0.1471%" height="15" fill="rgb(213,53,17)" fg:x="9033" fg:w="64"/><text x="21.0566%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="20.9107%" y="133" width="0.1402%" height="15" fill="rgb(207,167,3)" fg:x="9097" fg:w="61"/><text x="21.2037%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 2.08%)</title><rect x="19.2304%" y="149" width="2.0757%" height="15" fill="rgb(216,98,30)" fg:x="8366" fg:w="903"/><text x="19.5234%" y="159.50">b..</text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="21.3061%" y="133" width="0.1172%" height="15" fill="rgb(236,123,15)" fg:x="9269" fg:w="51"/><text x="21.5991%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (367 instructions, 0.84%)</title><rect x="21.4233%" y="133" width="0.8436%" height="15" fill="rgb(248,81,50)" fg:x="9320" fg:w="367"/><text x="21.7163%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="22.2669%" y="117" width="0.1172%" height="15" fill="rgb(214,120,4)" fg:x="9687" fg:w="51"/><text x="22.5599%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.27%)</title><rect x="22.3841%" y="117" width="0.2712%" height="15" fill="rgb(208,179,34)" fg:x="9738" fg:w="118"/><text x="22.6771%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="22.6554%" y="117" width="0.1057%" height="15" fill="rgb(227,140,7)" fg:x="9856" fg:w="46"/><text x="22.9484%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.65%)</title><rect x="22.2669%" y="133" width="0.6505%" height="15" fill="rgb(214,22,6)" fg:x="9687" fg:w="283"/><text x="22.5599%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="22.9174%" y="133" width="0.1057%" height="15" fill="rgb(207,137,27)" fg:x="9970" fg:w="46"/><text x="23.2104%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 2.04%)</title><rect x="21.3061%" y="149" width="2.0412%" height="15" fill="rgb(210,8,46)" fg:x="9269" fg:w="888"/><text x="21.5991%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="23.3473%" y="149" width="0.1885%" height="15" fill="rgb(240,16,54)" fg:x="10157" fg:w="82"/><text x="23.6402%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="23.5358%" y="133" width="0.1172%" height="15" fill="rgb(211,209,29)" fg:x="10239" fg:w="51"/><text x="23.8287%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (367 instructions, 0.84%)</title><rect x="23.6530%" y="133" width="0.8436%" height="15" fill="rgb(226,228,24)" fg:x="10290" fg:w="367"/><text x="23.9460%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="24.4966%" y="117" width="0.1172%" height="15" fill="rgb(222,84,9)" fg:x="10657" fg:w="51"/><text x="24.7896%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.27%)</title><rect x="24.6138%" y="117" width="0.2712%" height="15" fill="rgb(234,203,30)" fg:x="10708" fg:w="118"/><text x="24.9068%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="24.8851%" y="117" width="0.1057%" height="15" fill="rgb(238,109,14)" fg:x="10826" fg:w="46"/><text x="25.1780%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.65%)</title><rect x="24.4966%" y="133" width="0.6505%" height="15" fill="rgb(233,206,34)" fg:x="10657" fg:w="283"/><text x="24.7896%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="25.1471%" y="133" width="0.1057%" height="15" fill="rgb(220,167,47)" fg:x="10940" fg:w="46"/><text x="25.4401%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 2.04%)</title><rect x="23.5358%" y="149" width="2.0412%" height="15" fill="rgb(238,105,10)" fg:x="10239" fg:w="888"/><text x="23.8287%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 instructions, 0.06%)</title><rect x="25.5770%" y="149" width="0.0575%" height="15" fill="rgb(213,227,17)" fg:x="11127" fg:w="25"/><text x="25.8699%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="25.6344%" y="149" width="0.1057%" height="15" fill="rgb(217,132,38)" fg:x="11152" fg:w="46"/><text x="25.9274%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,780 instructions, 8.69%)</title><rect x="17.8466%" y="165" width="8.6889%" height="15" fill="rgb(242,146,4)" fg:x="7764" fg:w="3780"/><text x="18.1396%" y="175.50">&lt;candid::b..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="26.5355%" y="133" width="0.0621%" height="15" fill="rgb(212,61,9)" fg:x="11544" fg:w="27"/><text x="26.8285%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="26.5355%" y="149" width="0.3264%" height="15" fill="rgb(247,126,22)" fg:x="11544" fg:w="142"/><text x="26.8285%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="26.8619%" y="149" width="0.2046%" height="15" fill="rgb(220,196,2)" fg:x="11686" fg:w="89"/><text x="27.1549%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (389 instructions, 0.89%)</title><rect x="26.5355%" y="165" width="0.8942%" height="15" fill="rgb(208,46,4)" fg:x="11544" fg:w="389"/><text x="26.8285%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="27.4297%" y="149" width="0.0621%" height="15" fill="rgb(252,104,46)" fg:x="11933" fg:w="27"/><text x="27.7226%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="27.4297%" y="165" width="0.3264%" height="15" fill="rgb(237,152,48)" fg:x="11933" fg:w="142"/><text x="27.7226%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (9,267 instructions, 21.30%)</title><rect x="8.4130%" y="181" width="21.3015%" height="15" fill="rgb(221,59,37)" fg:x="3660" fg:w="9267"/><text x="8.7060%" y="191.50">&lt;core::iter::adapters::map::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="29.7145%" y="181" width="0.2092%" height="15" fill="rgb(209,202,51)" fg:x="12927" fg:w="91"/><text x="30.0075%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.06%)</title><rect x="29.9237%" y="181" width="0.0621%" height="15" fill="rgb(228,81,30)" fg:x="13018" fg:w="27"/><text x="30.2167%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="29.9857%" y="181" width="0.1057%" height="15" fill="rgb(227,42,39)" fg:x="13045" fg:w="46"/><text x="30.2787%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.22%)</title><rect x="30.0915%" y="181" width="0.2184%" height="15" fill="rgb(221,26,2)" fg:x="13091" fg:w="95"/><text x="30.3845%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="30.3099%" y="149" width="0.0138%" height="15" fill="rgb(254,61,31)" fg:x="13186" fg:w="6"/><text x="30.6028%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.00%)</title><rect x="30.3099%" y="165" width="1.0045%" height="15" fill="rgb(222,173,38)" fg:x="13186" fg:w="437"/><text x="30.6028%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="31.3144%" y="165" width="0.0437%" height="15" fill="rgb(218,50,12)" fg:x="13623" fg:w="19"/><text x="31.6073%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.3580%" y="133" width="0.1885%" height="15" fill="rgb(223,88,40)" fg:x="13642" fg:w="82"/><text x="31.6510%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="31.5465%" y="101" width="0.1540%" height="15" fill="rgb(237,54,19)" fg:x="13724" fg:w="67"/><text x="31.8395%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.22%)</title><rect x="31.5465%" y="117" width="0.2207%" height="15" fill="rgb(251,129,25)" fg:x="13724" fg:w="96"/><text x="31.8395%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="31.7672%" y="69" width="0.0253%" height="15" fill="rgb(238,97,19)" fg:x="13820" fg:w="11"/><text x="32.0602%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="31.7925%" y="53" width="0.0805%" height="15" fill="rgb(240,169,18)" fg:x="13831" fg:w="35"/><text x="32.0854%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="31.7925%" y="69" width="0.1471%" height="15" fill="rgb(230,187,49)" fg:x="13831" fg:w="64"/><text x="32.0854%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="31.7672%" y="85" width="0.3310%" height="15" fill="rgb(209,44,26)" fg:x="13820" fg:w="144"/><text x="32.0602%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.48%)</title><rect x="31.7672%" y="101" width="0.4827%" height="15" fill="rgb(244,0,6)" fg:x="13820" fg:w="210"/><text x="32.0602%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.51%)</title><rect x="31.7672%" y="117" width="0.5057%" height="15" fill="rgb(248,18,21)" fg:x="13820" fg:w="220"/><text x="32.0602%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 1.03%)</title><rect x="31.5465%" y="133" width="1.0321%" height="15" fill="rgb(245,180,19)" fg:x="13724" fg:w="449"/><text x="31.8395%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.53%)</title><rect x="31.3580%" y="149" width="1.5332%" height="15" fill="rgb(252,118,36)" fg:x="13642" fg:w="667"/><text x="31.6510%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.15%)</title><rect x="32.8912%" y="149" width="0.1471%" height="15" fill="rgb(210,224,19)" fg:x="14309" fg:w="64"/><text x="33.1842%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="33.0383%" y="149" width="0.1402%" height="15" fill="rgb(218,30,24)" fg:x="14373" fg:w="61"/><text x="33.3313%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 2.08%)</title><rect x="31.3580%" y="165" width="2.0757%" height="15" fill="rgb(219,75,50)" fg:x="13642" fg:w="903"/><text x="31.6510%" y="175.50">b..</text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="33.4337%" y="149" width="0.1172%" height="15" fill="rgb(234,72,50)" fg:x="14545" fg:w="51"/><text x="33.7267%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.27%)</title><rect x="33.5509%" y="149" width="0.2712%" height="15" fill="rgb(219,100,48)" fg:x="14596" fg:w="118"/><text x="33.8439%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="33.8222%" y="149" width="0.1057%" height="15" fill="rgb(253,5,41)" fg:x="14714" fg:w="46"/><text x="34.1151%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.65%)</title><rect x="33.4337%" y="165" width="0.6505%" height="15" fill="rgb(247,181,11)" fg:x="14545" fg:w="283"/><text x="33.7267%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.0842%" y="165" width="0.1885%" height="15" fill="rgb(222,223,25)" fg:x="14828" fg:w="82"/><text x="34.3772%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,910 instructions, 4.39%)</title><rect x="30.3099%" y="181" width="4.3904%" height="15" fill="rgb(214,198,28)" fg:x="13186" fg:w="1910"/><text x="30.6028%" y="191.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="34.7003%" y="181" width="0.1057%" height="15" fill="rgb(230,46,43)" fg:x="15096" fg:w="46"/><text x="34.9932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="34.8060%" y="181" width="0.1839%" height="15" fill="rgb(233,65,53)" fg:x="15142" fg:w="80"/><text x="35.0990%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="34.9899%" y="165" width="0.2643%" height="15" fill="rgb(221,121,27)" fg:x="15222" fg:w="115"/><text x="35.2829%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (211 instructions, 0.49%)</title><rect x="34.9899%" y="181" width="0.4850%" height="15" fill="rgb(247,70,47)" fg:x="15222" fg:w="211"/><text x="35.2829%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.36%)</title><rect x="35.4749%" y="149" width="0.3632%" height="15" fill="rgb(228,85,35)" fg:x="15433" fg:w="158"/><text x="35.7679%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (199 instructions, 0.46%)</title><rect x="35.4749%" y="165" width="0.4574%" height="15" fill="rgb(209,50,18)" fg:x="15433" fg:w="199"/><text x="35.7679%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (286 instructions, 0.66%)</title><rect x="35.4749%" y="181" width="0.6574%" height="15" fill="rgb(250,19,35)" fg:x="15433" fg:w="286"/><text x="35.7679%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.1323%" y="181" width="0.1885%" height="15" fill="rgb(253,107,29)" fg:x="15719" fg:w="82"/><text x="36.4253%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.3208%" y="165" width="0.1885%" height="15" fill="rgb(252,179,29)" fg:x="15801" fg:w="82"/><text x="36.6138%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (178 instructions, 0.41%)</title><rect x="36.3208%" y="181" width="0.4092%" height="15" fill="rgb(238,194,6)" fg:x="15801" fg:w="178"/><text x="36.6138%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="36.7300%" y="181" width="0.2092%" height="15" fill="rgb(238,164,29)" fg:x="15979" fg:w="91"/><text x="37.0229%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="36.9391%" y="165" width="0.1885%" height="15" fill="rgb(224,25,9)" fg:x="16070" fg:w="82"/><text x="37.2321%" y="175.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="37.1276%" y="133" width="0.2276%" height="15" fill="rgb(244,153,23)" fg:x="16152" fg:w="99"/><text x="37.4206%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.29%)</title><rect x="37.1276%" y="149" width="0.2942%" height="15" fill="rgb(212,203,14)" fg:x="16152" fg:w="128"/><text x="37.4206%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="37.4218%" y="101" width="0.0253%" height="15" fill="rgb(220,164,20)" fg:x="16280" fg:w="11"/><text x="37.7148%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="37.4471%" y="85" width="0.0805%" height="15" fill="rgb(222,203,48)" fg:x="16291" fg:w="35"/><text x="37.7401%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="37.4471%" y="101" width="0.1471%" height="15" fill="rgb(215,159,22)" fg:x="16291" fg:w="64"/><text x="37.7401%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="37.4218%" y="117" width="0.3310%" height="15" fill="rgb(216,183,47)" fg:x="16280" fg:w="144"/><text x="37.7148%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.48%)</title><rect x="37.4218%" y="133" width="0.4827%" height="15" fill="rgb(229,195,25)" fg:x="16280" fg:w="210"/><text x="37.7148%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.53%)</title><rect x="37.4218%" y="149" width="0.5287%" height="15" fill="rgb(224,132,51)" fg:x="16280" fg:w="230"/><text x="37.7148%" y="159.50"></text></g><g><title>core::fmt::write (491 instructions, 1.13%)</title><rect x="37.1276%" y="165" width="1.1286%" height="15" fill="rgb(240,63,7)" fg:x="16152" fg:w="491"/><text x="37.4206%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.63%)</title><rect x="36.9391%" y="181" width="1.6297%" height="15" fill="rgb(249,182,41)" fg:x="16070" fg:w="709"/><text x="37.2321%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="38.5689%" y="165" width="0.2092%" height="15" fill="rgb(243,47,26)" fg:x="16779" fg:w="91"/><text x="38.8618%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (157 instructions, 0.36%)</title><rect x="38.5689%" y="181" width="0.3609%" height="15" fill="rgb(233,48,2)" fg:x="16779" fg:w="157"/><text x="38.8618%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="38.9298%" y="149" width="0.2092%" height="15" fill="rgb(244,165,34)" fg:x="16936" fg:w="91"/><text x="39.2227%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (146 instructions, 0.34%)</title><rect x="38.9298%" y="165" width="0.3356%" height="15" fill="rgb(207,89,7)" fg:x="16936" fg:w="146"/><text x="39.2227%" y="175.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="39.2654%" y="149" width="0.3356%" height="15" fill="rgb(244,117,36)" fg:x="17082" fg:w="146"/><text x="39.5583%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.53%)</title><rect x="39.2654%" y="165" width="0.5310%" height="15" fill="rgb(226,144,34)" fg:x="17082" fg:w="231"/><text x="39.5583%" y="175.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="39.7963%" y="149" width="0.3356%" height="15" fill="rgb(213,23,19)" fg:x="17313" fg:w="146"/><text x="40.0893%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (245 instructions, 0.56%)</title><rect x="39.7963%" y="165" width="0.5632%" height="15" fill="rgb(217,75,12)" fg:x="17313" fg:w="245"/><text x="40.0893%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (757 instructions, 1.74%)</title><rect x="38.9298%" y="181" width="1.7401%" height="15" fill="rgb(224,159,17)" fg:x="16936" fg:w="757"/><text x="39.2227%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.21%)</title><rect x="40.6698%" y="181" width="0.2115%" height="15" fill="rgb(217,118,1)" fg:x="17693" fg:w="92"/><text x="40.9628%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="40.8813%" y="181" width="0.0345%" height="15" fill="rgb(232,180,48)" fg:x="17785" fg:w="15"/><text x="41.1743%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.14%)</title><rect x="40.9158%" y="165" width="0.1425%" height="15" fill="rgb(230,27,33)" fg:x="17800" fg:w="62"/><text x="41.2087%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (183 instructions, 0.42%)</title><rect x="40.9158%" y="181" width="0.4207%" height="15" fill="rgb(205,31,21)" fg:x="17800" fg:w="183"/><text x="41.2087%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="41.3364%" y="149" width="0.1885%" height="15" fill="rgb(253,59,4)" fg:x="17983" fg:w="82"/><text x="41.6294%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="41.5249%" y="117" width="0.2276%" height="15" fill="rgb(224,201,9)" fg:x="18065" fg:w="99"/><text x="41.8179%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (128 instructions, 0.29%)</title><rect x="41.5249%" y="133" width="0.2942%" height="15" fill="rgb(229,206,30)" fg:x="18065" fg:w="128"/><text x="41.8179%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="41.8191%" y="85" width="0.0253%" height="15" fill="rgb(212,67,47)" fg:x="18193" fg:w="11"/><text x="42.1121%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="41.8444%" y="69" width="0.0805%" height="15" fill="rgb(211,96,50)" fg:x="18204" fg:w="35"/><text x="42.1374%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.15%)</title><rect x="41.8444%" y="85" width="0.1471%" height="15" fill="rgb(252,114,18)" fg:x="18204" fg:w="64"/><text x="42.1374%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="41.8191%" y="101" width="0.3310%" height="15" fill="rgb(223,58,37)" fg:x="18193" fg:w="144"/><text x="42.1121%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.48%)</title><rect x="41.8191%" y="117" width="0.4827%" height="15" fill="rgb(237,70,4)" fg:x="18193" fg:w="210"/><text x="42.1121%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.53%)</title><rect x="41.8191%" y="133" width="0.5287%" height="15" fill="rgb(244,85,46)" fg:x="18193" fg:w="230"/><text x="42.1121%" y="143.50"></text></g><g><title>core::fmt::write (491 instructions, 1.13%)</title><rect x="41.5249%" y="149" width="1.1286%" height="15" fill="rgb(223,39,52)" fg:x="18065" fg:w="491"/><text x="41.8179%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.63%)</title><rect x="41.3364%" y="165" width="1.6297%" height="15" fill="rgb(218,200,14)" fg:x="17983" fg:w="709"/><text x="41.6294%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="42.9662%" y="165" width="0.2092%" height="15" fill="rgb(208,171,16)" fg:x="18692" fg:w="91"/><text x="43.2591%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (924 instructions, 2.12%)</title><rect x="41.3364%" y="181" width="2.1239%" height="15" fill="rgb(234,200,18)" fg:x="17983" fg:w="924"/><text x="41.6294%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="43.4604%" y="149" width="0.1839%" height="15" fill="rgb(228,45,11)" fg:x="18907" fg:w="80"/><text x="43.7533%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 instructions, 0.28%)</title><rect x="43.4604%" y="165" width="0.2781%" height="15" fill="rgb(237,182,11)" fg:x="18907" fg:w="121"/><text x="43.7533%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (208 instructions, 0.48%)</title><rect x="43.4604%" y="181" width="0.4781%" height="15" fill="rgb(241,175,49)" fg:x="18907" fg:w="208"/><text x="43.7533%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="43.9385%" y="181" width="0.2092%" height="15" fill="rgb(247,38,35)" fg:x="19115" fg:w="91"/><text x="44.2315%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="44.1477%" y="181" width="0.2046%" height="15" fill="rgb(228,39,49)" fg:x="19206" fg:w="89"/><text x="44.4406%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="44.3522%" y="181" width="0.2092%" height="15" fill="rgb(226,101,26)" fg:x="19295" fg:w="91"/><text x="44.6452%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="44.5614%" y="181" width="0.2092%" height="15" fill="rgb(206,141,19)" fg:x="19386" fg:w="91"/><text x="44.8544%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="44.7706%" y="149" width="0.0621%" height="15" fill="rgb(211,200,13)" fg:x="19477" fg:w="27"/><text x="45.0636%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.33%)</title><rect x="44.7706%" y="165" width="0.3310%" height="15" fill="rgb(241,121,6)" fg:x="19477" fg:w="144"/><text x="45.0636%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (222 instructions, 0.51%)</title><rect x="44.7706%" y="181" width="0.5103%" height="15" fill="rgb(234,221,29)" fg:x="19477" fg:w="222"/><text x="45.0636%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="45.4855%" y="165" width="0.0621%" height="15" fill="rgb(229,136,5)" fg:x="19788" fg:w="27"/><text x="45.7784%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.54%)</title><rect x="45.2809%" y="181" width="0.5356%" height="15" fill="rgb(238,36,11)" fg:x="19699" fg:w="233"/><text x="45.5739%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.90%)</title><rect x="45.8165%" y="181" width="0.9011%" height="15" fill="rgb(251,55,41)" fg:x="19932" fg:w="392"/><text x="46.1094%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.90%)</title><rect x="46.7175%" y="181" width="0.9011%" height="15" fill="rgb(242,34,40)" fg:x="20324" fg:w="392"/><text x="47.0105%" y="191.50"></text></g><g><title>memcpy (504 instructions, 1.16%)</title><rect x="47.6186%" y="181" width="1.1585%" height="15" fill="rgb(215,42,17)" fg:x="20716" fg:w="504"/><text x="47.9116%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (21,915 instructions, 50.37%)</title><rect x="3.0480%" y="197" width="50.3747%" height="15" fill="rgb(207,44,46)" fg:x="1326" fg:w="21915"/><text x="3.3410%" y="207.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (408 instructions, 0.94%)</title><rect x="53.4227%" y="197" width="0.9378%" height="15" fill="rgb(211,206,28)" fg:x="23241" fg:w="408"/><text x="53.7156%" y="207.50"></text></g><g><title>memcpy (408 instructions, 0.94%)</title><rect x="54.3605%" y="197" width="0.9378%" height="15" fill="rgb(237,167,16)" fg:x="23649" fg:w="408"/><text x="54.6535%" y="207.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.06%)</title><rect x="55.2984%" y="197" width="0.0552%" height="15" fill="rgb(233,66,6)" fg:x="24057" fg:w="24"/><text x="55.5913%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="55.3535%" y="197" width="0.2643%" height="15" fill="rgb(246,123,29)" fg:x="24081" fg:w="115"/><text x="55.6465%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.36%)</title><rect x="55.6179%" y="181" width="0.3632%" height="15" fill="rgb(209,62,40)" fg:x="24196" fg:w="158"/><text x="55.9108%" y="191.50"></text></g><g><title>candid::types::internal::env_add (242 instructions, 0.56%)</title><rect x="55.6179%" y="197" width="0.5563%" height="15" fill="rgb(218,4,25)" fg:x="24196" fg:w="242"/><text x="55.9108%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="56.1741%" y="197" width="0.1885%" height="15" fill="rgb(253,91,49)" fg:x="24438" fg:w="82"/><text x="56.4671%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="56.3626%" y="197" width="0.1839%" height="15" fill="rgb(228,155,29)" fg:x="24520" fg:w="80"/><text x="56.6556%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="56.5465%" y="197" width="0.2643%" height="15" fill="rgb(243,57,37)" fg:x="24600" fg:w="115"/><text x="56.8395%" y="207.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.25%)</title><rect x="56.8109%" y="181" width="0.2460%" height="15" fill="rgb(244,167,17)" fg:x="24715" fg:w="107"/><text x="57.1038%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="57.0568%" y="181" width="0.1885%" height="15" fill="rgb(207,181,38)" fg:x="24822" fg:w="82"/><text x="57.3498%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.51%)</title><rect x="57.2453%" y="165" width="0.5057%" height="15" fill="rgb(211,8,23)" fg:x="24904" fg:w="220"/><text x="57.5383%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.21%)</title><rect x="57.7510%" y="165" width="0.2115%" height="15" fill="rgb(235,11,44)" fg:x="25124" fg:w="92"/><text x="58.0440%" y="175.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 1.23%)</title><rect x="57.2453%" y="181" width="1.2321%" height="15" fill="rgb(248,18,52)" fg:x="24904" fg:w="536"/><text x="57.5383%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="58.4774%" y="181" width="0.2092%" height="15" fill="rgb(208,4,7)" fg:x="25440" fg:w="91"/><text x="58.7704%" y="191.50"></text></g><g><title>memcmp (491 instructions, 1.13%)</title><rect x="58.6866%" y="165" width="1.1286%" height="15" fill="rgb(240,17,39)" fg:x="25531" fg:w="491"/><text x="58.9795%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="59.8152%" y="149" width="0.1402%" height="15" fill="rgb(207,170,3)" fg:x="26022" fg:w="61"/><text x="60.1082%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 instructions, 0.30%)</title><rect x="59.8152%" y="165" width="0.3034%" height="15" fill="rgb(236,100,52)" fg:x="26022" fg:w="132"/><text x="60.1082%" y="175.50"></text></g><g><title>candid::types::internal::env_add (802 instructions, 1.84%)</title><rect x="58.6866%" y="181" width="1.8435%" height="15" fill="rgb(246,78,51)" fg:x="25531" fg:w="802"/><text x="58.9795%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.11%)</title><rect x="60.5301%" y="165" width="0.1126%" height="15" fill="rgb(211,17,15)" fg:x="26333" fg:w="49"/><text x="60.8230%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="60.6427%" y="165" width="0.0322%" height="15" fill="rgb(209,59,46)" fg:x="26382" fg:w="14"/><text x="60.9357%" y="175.50"></text></g><g><title>candid::types::internal::env_id (200 instructions, 0.46%)</title><rect x="60.5301%" y="181" width="0.4597%" height="15" fill="rgb(210,92,25)" fg:x="26333" fg:w="200"/><text x="60.8230%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (1,937 instructions, 4.45%)</title><rect x="56.8109%" y="197" width="4.4525%" height="15" fill="rgb(238,174,52)" fg:x="24715" fg:w="1937"/><text x="57.1038%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.2633%" y="197" width="0.1885%" height="15" fill="rgb(230,73,7)" fg:x="26652" fg:w="82"/><text x="61.5563%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="61.4518%" y="197" width="0.1885%" height="15" fill="rgb(243,124,40)" fg:x="26734" fg:w="82"/><text x="61.7448%" y="207.50"></text></g><g><title>candid::types::internal::find_type (144 instructions, 0.33%)</title><rect x="61.6403%" y="181" width="0.3310%" height="15" fill="rgb(244,170,11)" fg:x="26816" fg:w="144"/><text x="61.9333%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="61.9713%" y="181" width="0.2092%" height="15" fill="rgb(207,114,54)" fg:x="26960" fg:w="91"/><text x="62.2643%" y="191.50"></text></g><g><title>candid::types::internal::env_add (226 instructions, 0.52%)</title><rect x="62.1805%" y="181" width="0.5195%" height="15" fill="rgb(205,42,20)" fg:x="27051" fg:w="226"/><text x="62.4735%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="62.7000%" y="181" width="0.2092%" height="15" fill="rgb(230,30,28)" fg:x="27277" fg:w="91"/><text x="62.9930%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.18%)</title><rect x="62.9092%" y="165" width="0.1770%" height="15" fill="rgb(205,73,54)" fg:x="27368" fg:w="77"/><text x="63.2021%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="63.0862%" y="149" width="0.2046%" height="15" fill="rgb(254,227,23)" fg:x="27445" fg:w="89"/><text x="63.3791%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.37%)</title><rect x="63.0862%" y="165" width="0.3678%" height="15" fill="rgb(228,202,34)" fg:x="27445" fg:w="160"/><text x="63.3791%" y="175.50"></text></g><g><title>candid::types::internal::env_add (498 instructions, 1.14%)</title><rect x="62.9092%" y="181" width="1.1447%" height="15" fill="rgb(222,225,37)" fg:x="27368" fg:w="498"/><text x="63.2021%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="64.0539%" y="165" width="0.0782%" height="15" fill="rgb(221,14,54)" fg:x="27866" fg:w="34"/><text x="64.3468%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="64.1320%" y="165" width="0.0782%" height="15" fill="rgb(254,102,2)" fg:x="27900" fg:w="34"/><text x="64.4250%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.51%)</title><rect x="64.2102%" y="165" width="0.5057%" height="15" fill="rgb(232,104,17)" fg:x="27934" fg:w="220"/><text x="64.5032%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.51%)</title><rect x="64.7159%" y="165" width="0.5057%" height="15" fill="rgb(250,220,14)" fg:x="28154" fg:w="220"/><text x="65.0089%" y="175.50"></text></g><g><title>candid::types::internal::env_id (795 instructions, 1.83%)</title><rect x="64.0539%" y="181" width="1.8274%" height="15" fill="rgb(241,158,9)" fg:x="27866" fg:w="795"/><text x="64.3468%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (1,964 instructions, 4.51%)</title><rect x="61.6403%" y="197" width="4.5145%" height="15" fill="rgb(246,9,43)" fg:x="26816" fg:w="1964"/><text x="61.9333%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="66.1548%" y="197" width="0.1885%" height="15" fill="rgb(206,73,33)" fg:x="28780" fg:w="82"/><text x="66.4478%" y="207.50"></text></g><g><title>memcmp (445 instructions, 1.02%)</title><rect x="66.3433%" y="181" width="1.0229%" height="15" fill="rgb(222,79,8)" fg:x="28862" fg:w="445"/><text x="66.6363%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="67.3662%" y="165" width="0.2046%" height="15" fill="rgb(234,8,54)" fg:x="29307" fg:w="89"/><text x="67.6592%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.37%)</title><rect x="67.3662%" y="181" width="0.3678%" height="15" fill="rgb(209,134,38)" fg:x="29307" fg:w="160"/><text x="67.6592%" y="191.50"></text></g><g><title>candid::types::internal::env_add (825 instructions, 1.90%)</title><rect x="66.3433%" y="197" width="1.8964%" height="15" fill="rgb(230,127,29)" fg:x="28862" fg:w="825"/><text x="66.6363%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="68.2397%" y="181" width="0.0782%" height="15" fill="rgb(242,44,41)" fg:x="29687" fg:w="34"/><text x="68.5327%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.28%)</title><rect x="68.3960%" y="149" width="0.2827%" height="15" fill="rgb(222,56,43)" fg:x="29755" fg:w="123"/><text x="68.6890%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.09%)</title><rect x="68.6787%" y="149" width="0.0942%" height="15" fill="rgb(238,39,47)" fg:x="29878" fg:w="41"/><text x="68.9717%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (313 instructions, 0.72%)</title><rect x="68.3960%" y="165" width="0.7195%" height="15" fill="rgb(226,79,43)" fg:x="29755" fg:w="313"/><text x="68.6890%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (414 instructions, 0.95%)</title><rect x="68.3179%" y="181" width="0.9516%" height="15" fill="rgb(242,105,53)" fg:x="29721" fg:w="414"/><text x="68.6108%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="69.2695%" y="181" width="0.0782%" height="15" fill="rgb(251,132,46)" fg:x="30135" fg:w="34"/><text x="69.5625%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="69.3476%" y="181" width="0.0782%" height="15" fill="rgb(231,77,14)" fg:x="30169" fg:w="34"/><text x="69.6406%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.28%)</title><rect x="69.5040%" y="149" width="0.2827%" height="15" fill="rgb(240,135,9)" fg:x="30237" fg:w="123"/><text x="69.7969%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.09%)</title><rect x="69.7867%" y="149" width="0.0942%" height="15" fill="rgb(248,109,14)" fg:x="30360" fg:w="41"/><text x="70.0797%" y="159.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (313 instructions, 0.72%)</title><rect x="69.5040%" y="165" width="0.7195%" height="15" fill="rgb(227,146,52)" fg:x="30237" fg:w="313"/><text x="69.7969%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (414 instructions, 0.95%)</title><rect x="69.4258%" y="181" width="0.9516%" height="15" fill="rgb(232,54,3)" fg:x="30203" fg:w="414"/><text x="69.7188%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.08%)</title><rect x="70.3774%" y="181" width="0.0782%" height="15" fill="rgb(229,201,43)" fg:x="30617" fg:w="34"/><text x="70.6704%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.21%)</title><rect x="70.4556%" y="181" width="0.2115%" height="15" fill="rgb(252,161,33)" fg:x="30651" fg:w="92"/><text x="70.7486%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.51%)</title><rect x="70.6671%" y="181" width="0.5057%" height="15" fill="rgb(226,146,40)" fg:x="30743" fg:w="220"/><text x="70.9600%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,761 instructions, 4.05%)</title><rect x="68.2397%" y="197" width="4.0479%" height="15" fill="rgb(219,47,25)" fg:x="29687" fg:w="1761"/><text x="68.5327%" y="207.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.11%)</title><rect x="72.2876%" y="197" width="0.1126%" height="15" fill="rgb(250,135,13)" fg:x="31448" fg:w="49"/><text x="72.5806%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="72.4002%" y="181" width="0.1908%" height="15" fill="rgb(219,229,18)" fg:x="31497" fg:w="83"/><text x="72.6932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="72.7542%" y="165" width="0.0529%" height="15" fill="rgb(217,152,27)" fg:x="31651" fg:w="23"/><text x="73.0472%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.32%)</title><rect x="72.7542%" y="181" width="0.3172%" height="15" fill="rgb(225,71,47)" fg:x="31651" fg:w="138"/><text x="73.0472%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (363 instructions, 0.83%)</title><rect x="72.4002%" y="197" width="0.8344%" height="15" fill="rgb(220,139,14)" fg:x="31497" fg:w="363"/><text x="72.6932%" y="207.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="73.2346%" y="133" width="0.3356%" height="15" fill="rgb(247,54,32)" fg:x="31860" fg:w="146"/><text x="73.5276%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.53%)</title><rect x="73.2346%" y="149" width="0.5310%" height="15" fill="rgb(252,131,39)" fg:x="31860" fg:w="231"/><text x="73.5276%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.11%)</title><rect x="73.7656%" y="149" width="0.1126%" height="15" fill="rgb(210,108,39)" fg:x="32091" fg:w="49"/><text x="74.0586%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (346 instructions, 0.80%)</title><rect x="73.2346%" y="165" width="0.7953%" height="15" fill="rgb(205,23,29)" fg:x="31860" fg:w="346"/><text x="73.5276%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="74.0300%" y="165" width="0.0322%" height="15" fill="rgb(246,139,46)" fg:x="32206" fg:w="14"/><text x="74.3229%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (444 instructions, 1.02%)</title><rect x="73.2346%" y="181" width="1.0206%" height="15" fill="rgb(250,81,26)" fg:x="31860" fg:w="444"/><text x="73.5276%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="74.2552%" y="181" width="0.0713%" height="15" fill="rgb(214,104,7)" fg:x="32304" fg:w="31"/><text x="74.5482%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="74.3265%" y="165" width="0.1839%" height="15" fill="rgb(233,189,8)" fg:x="32335" fg:w="80"/><text x="74.6195%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="74.8713%" y="165" width="0.2643%" height="15" fill="rgb(228,141,17)" fg:x="32572" fg:w="115"/><text x="75.1642%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (509 instructions, 1.17%)</title><rect x="74.3265%" y="181" width="1.1700%" height="15" fill="rgb(247,157,1)" fg:x="32335" fg:w="509"/><text x="74.6195%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="75.4965%" y="181" width="0.0713%" height="15" fill="rgb(249,225,5)" fg:x="32844" fg:w="31"/><text x="75.7895%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="75.5678%" y="181" width="0.0322%" height="15" fill="rgb(242,55,13)" fg:x="32875" fg:w="14"/><text x="75.8607%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.5999%" y="181" width="0.0276%" height="15" fill="rgb(230,49,50)" fg:x="32889" fg:w="12"/><text x="75.8929%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="75.6275%" y="181" width="0.0322%" height="15" fill="rgb(241,111,38)" fg:x="32901" fg:w="14"/><text x="75.9205%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="75.6597%" y="181" width="0.0276%" height="15" fill="rgb(252,155,4)" fg:x="32915" fg:w="12"/><text x="75.9527%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="75.6873%" y="181" width="0.0713%" height="15" fill="rgb(212,69,32)" fg:x="32927" fg:w="31"/><text x="75.9803%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.18%)</title><rect x="75.7586%" y="181" width="0.1839%" height="15" fill="rgb(243,107,47)" fg:x="32958" fg:w="80"/><text x="76.0515%" y="191.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="75.9424%" y="181" width="0.2276%" height="15" fill="rgb(247,130,12)" fg:x="33038" fg:w="99"/><text x="76.2354%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.28%)</title><rect x="76.1700%" y="181" width="0.2827%" height="15" fill="rgb(233,74,16)" fg:x="33137" fg:w="123"/><text x="76.4630%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="76.4527%" y="181" width="0.2046%" height="15" fill="rgb(208,58,18)" fg:x="33260" fg:w="89"/><text x="76.7457%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="76.6573%" y="181" width="0.0276%" height="15" fill="rgb(242,225,1)" fg:x="33349" fg:w="12"/><text x="76.9503%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="76.6849%" y="181" width="0.0713%" height="15" fill="rgb(249,39,40)" fg:x="33361" fg:w="31"/><text x="76.9779%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.09%)</title><rect x="76.7562%" y="165" width="0.0850%" height="15" fill="rgb(207,72,44)" fg:x="33392" fg:w="37"/><text x="77.0491%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="76.8412%" y="165" width="0.0782%" height="15" fill="rgb(215,193,12)" fg:x="33429" fg:w="34"/><text x="77.1342%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="76.9194%" y="165" width="0.0782%" height="15" fill="rgb(248,41,39)" fg:x="33463" fg:w="34"/><text x="77.2123%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.12%)</title><rect x="76.9975%" y="149" width="0.1172%" height="15" fill="rgb(253,85,4)" fg:x="33497" fg:w="51"/><text x="77.2905%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (94 instructions, 0.22%)</title><rect x="77.1147%" y="149" width="0.2161%" height="15" fill="rgb(243,70,31)" fg:x="33548" fg:w="94"/><text x="77.4077%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.11%)</title><rect x="77.3308%" y="149" width="0.1057%" height="15" fill="rgb(253,195,26)" fg:x="33642" fg:w="46"/><text x="77.6238%" y="159.50"></text></g><g><title>binread::BinRead::read (254 instructions, 0.58%)</title><rect x="76.9975%" y="165" width="0.5839%" height="15" fill="rgb(243,42,11)" fg:x="33497" fg:w="254"/><text x="77.2905%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="77.5814%" y="165" width="0.0713%" height="15" fill="rgb(239,66,17)" fg:x="33751" fg:w="31"/><text x="77.8743%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (56 instructions, 0.13%)</title><rect x="77.6526%" y="165" width="0.1287%" height="15" fill="rgb(217,132,21)" fg:x="33782" fg:w="56"/><text x="77.9456%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="77.7814%" y="149" width="0.1885%" height="15" fill="rgb(252,202,21)" fg:x="33838" fg:w="82"/><text x="78.0743%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.26%)</title><rect x="77.9698%" y="149" width="0.2643%" height="15" fill="rgb(233,98,36)" fg:x="33920" fg:w="115"/><text x="78.2628%" y="159.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (239 instructions, 0.55%)</title><rect x="77.7814%" y="165" width="0.5494%" height="15" fill="rgb(216,153,54)" fg:x="33838" fg:w="239"/><text x="78.0743%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (160 instructions, 0.37%)</title><rect x="78.3307%" y="165" width="0.3678%" height="15" fill="rgb(250,99,7)" fg:x="34077" fg:w="160"/><text x="78.6237%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,002 instructions, 2.30%)</title><rect x="76.7562%" y="181" width="2.3032%" height="15" fill="rgb(207,56,50)" fg:x="33392" fg:w="1002"/><text x="77.0491%" y="191.50">s..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="79.0594%" y="181" width="0.0713%" height="15" fill="rgb(244,61,34)" fg:x="34394" fg:w="31"/><text x="79.3524%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="79.1307%" y="181" width="0.0322%" height="15" fill="rgb(241,50,38)" fg:x="34425" fg:w="14"/><text x="79.4236%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="79.1628%" y="181" width="0.0276%" height="15" fill="rgb(212,166,30)" fg:x="34439" fg:w="12"/><text x="79.4558%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="79.1904%" y="181" width="0.0322%" height="15" fill="rgb(249,127,32)" fg:x="34451" fg:w="14"/><text x="79.4834%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="79.2226%" y="181" width="0.0276%" height="15" fill="rgb(209,103,0)" fg:x="34465" fg:w="12"/><text x="79.5156%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="79.2502%" y="181" width="0.0713%" height="15" fill="rgb(238,209,51)" fg:x="34477" fg:w="31"/><text x="79.5432%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.26%)</title><rect x="79.3214%" y="181" width="0.2643%" height="15" fill="rgb(237,56,23)" fg:x="34508" fg:w="115"/><text x="79.6144%" y="191.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="79.5858%" y="181" width="0.2276%" height="15" fill="rgb(215,153,46)" fg:x="34623" fg:w="99"/><text x="79.8788%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="79.8134%" y="181" width="0.0437%" height="15" fill="rgb(224,49,31)" fg:x="34722" fg:w="19"/><text x="80.1063%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.28%)</title><rect x="79.8570%" y="181" width="0.2827%" height="15" fill="rgb(250,18,42)" fg:x="34741" fg:w="123"/><text x="80.1500%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="80.1398%" y="181" width="0.1402%" height="15" fill="rgb(215,176,39)" fg:x="34864" fg:w="61"/><text x="80.4327%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="80.2800%" y="181" width="0.0276%" height="15" fill="rgb(223,77,29)" fg:x="34925" fg:w="12"/><text x="80.5729%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="80.3076%" y="181" width="0.0713%" height="15" fill="rgb(234,94,52)" fg:x="34937" fg:w="31"/><text x="80.6005%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.09%)</title><rect x="80.3788%" y="181" width="0.0850%" height="15" fill="rgb(220,154,50)" fg:x="34968" fg:w="37"/><text x="80.6718%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="80.4639%" y="181" width="0.0782%" height="15" fill="rgb(212,11,10)" fg:x="35005" fg:w="34"/><text x="80.7568%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="80.5420%" y="181" width="0.0782%" height="15" fill="rgb(205,166,19)" fg:x="35039" fg:w="34"/><text x="80.8350%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="80.6202%" y="181" width="0.0713%" height="15" fill="rgb(244,198,16)" fg:x="35073" fg:w="31"/><text x="80.9131%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.07%)</title><rect x="80.6914%" y="181" width="0.0713%" height="15" fill="rgb(219,69,12)" fg:x="35104" fg:w="31"/><text x="80.9844%" y="191.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="80.7627%" y="165" width="0.0161%" height="15" fill="rgb(245,30,7)" fg:x="35135" fg:w="7"/><text x="81.0557%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="80.7788%" y="165" width="0.2046%" height="15" fill="rgb(218,221,48)" fg:x="35142" fg:w="89"/><text x="81.0717%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="80.9834%" y="165" width="0.0161%" height="15" fill="rgb(216,66,15)" fg:x="35231" fg:w="7"/><text x="81.2763%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="80.9994%" y="165" width="0.1908%" height="15" fill="rgb(226,122,50)" fg:x="35238" fg:w="83"/><text x="81.2924%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (301 instructions, 0.69%)</title><rect x="80.7627%" y="181" width="0.6919%" height="15" fill="rgb(239,156,16)" fg:x="35135" fg:w="301"/><text x="81.0557%" y="191.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (5,058 instructions, 11.63%)</title><rect x="73.2346%" y="197" width="11.6265%" height="15" fill="rgb(224,27,38)" fg:x="31860" fg:w="5058"/><text x="73.5276%" y="207.50">subscriber::_:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="84.8612%" y="165" width="0.0529%" height="15" fill="rgb(224,39,27)" fg:x="36918" fg:w="23"/><text x="85.1541%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.32%)</title><rect x="84.8612%" y="181" width="0.3172%" height="15" fill="rgb(215,92,29)" fg:x="36918" fg:w="138"/><text x="85.1541%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="85.1784%" y="181" width="0.2046%" height="15" fill="rgb(207,159,16)" fg:x="37056" fg:w="89"/><text x="85.4713%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (344 instructions, 0.79%)</title><rect x="84.8612%" y="197" width="0.7907%" height="15" fill="rgb(238,163,47)" fg:x="36918" fg:w="344"/><text x="85.1541%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="85.6519%" y="197" width="0.0322%" height="15" fill="rgb(219,91,49)" fg:x="37262" fg:w="14"/><text x="85.9449%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="85.6841%" y="197" width="0.0322%" height="15" fill="rgb(227,167,31)" fg:x="37276" fg:w="14"/><text x="85.9770%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.09%)</title><rect x="85.7163%" y="197" width="0.0850%" height="15" fill="rgb(234,80,54)" fg:x="37290" fg:w="37"/><text x="86.0092%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="85.8013%" y="165" width="0.2046%" height="15" fill="rgb(212,114,2)" fg:x="37327" fg:w="89"/><text x="86.0943%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="86.0059%" y="117" width="0.0621%" height="15" fill="rgb(234,50,24)" fg:x="37416" fg:w="27"/><text x="86.2989%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.32%)</title><rect x="86.0059%" y="133" width="0.3172%" height="15" fill="rgb(221,68,8)" fg:x="37416" fg:w="138"/><text x="86.2989%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="86.4794%" y="117" width="0.0621%" height="15" fill="rgb(254,180,31)" fg:x="37622" fg:w="27"/><text x="86.7724%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="86.4794%" y="133" width="0.3264%" height="15" fill="rgb(247,130,50)" fg:x="37622" fg:w="142"/><text x="86.7724%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="86.9690%" y="133" width="0.2046%" height="15" fill="rgb(211,109,4)" fg:x="37835" fg:w="89"/><text x="87.2620%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (576 instructions, 1.32%)</title><rect x="86.0059%" y="149" width="1.3240%" height="15" fill="rgb(238,50,21)" fg:x="37416" fg:w="576"/><text x="86.2989%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="87.3299%" y="149" width="0.0322%" height="15" fill="rgb(225,57,45)" fg:x="37992" fg:w="14"/><text x="87.6229%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="87.3621%" y="133" width="0.0621%" height="15" fill="rgb(209,196,50)" fg:x="38006" fg:w="27"/><text x="87.6551%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.31%)</title><rect x="87.3621%" y="149" width="0.3126%" height="15" fill="rgb(242,140,13)" fg:x="38006" fg:w="136"/><text x="87.6551%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="87.6747%" y="149" width="0.1908%" height="15" fill="rgb(217,111,7)" fg:x="38142" fg:w="83"/><text x="87.9677%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (987 instructions, 2.27%)</title><rect x="86.0059%" y="165" width="2.2688%" height="15" fill="rgb(253,193,51)" fg:x="37416" fg:w="987"/><text x="86.2989%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="88.2746%" y="149" width="0.0529%" height="15" fill="rgb(252,70,29)" fg:x="38403" fg:w="23"/><text x="88.5676%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="88.3275%" y="149" width="0.0529%" height="15" fill="rgb(232,127,12)" fg:x="38426" fg:w="23"/><text x="88.6205%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.15%)</title><rect x="88.3804%" y="149" width="0.1540%" height="15" fill="rgb(211,180,21)" fg:x="38449" fg:w="67"/><text x="88.6733%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (234 instructions, 0.54%)</title><rect x="88.2746%" y="165" width="0.5379%" height="15" fill="rgb(229,72,13)" fg:x="38403" fg:w="234"/><text x="88.5676%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,497 instructions, 3.44%)</title><rect x="85.8013%" y="181" width="3.4411%" height="15" fill="rgb(240,211,49)" fg:x="37327" fg:w="1497"/><text x="86.0943%" y="191.50">&lt;a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.15%)</title><rect x="89.2424%" y="165" width="0.1517%" height="15" fill="rgb(219,149,40)" fg:x="38824" fg:w="66"/><text x="89.5353%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (155 instructions, 0.36%)</title><rect x="89.2424%" y="181" width="0.3563%" height="15" fill="rgb(210,127,46)" fg:x="38824" fg:w="155"/><text x="89.5353%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="89.5987%" y="149" width="0.0529%" height="15" fill="rgb(220,106,7)" fg:x="38979" fg:w="23"/><text x="89.8916%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="89.6515%" y="149" width="0.0621%" height="15" fill="rgb(249,31,22)" fg:x="39002" fg:w="27"/><text x="89.9445%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.44%)</title><rect x="89.5987%" y="165" width="0.4436%" height="15" fill="rgb(253,1,49)" fg:x="38979" fg:w="193"/><text x="89.8916%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.61%)</title><rect x="89.5987%" y="181" width="0.6068%" height="15" fill="rgb(227,144,33)" fg:x="38979" fg:w="264"/><text x="89.8916%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="90.2055%" y="181" width="0.0322%" height="15" fill="rgb(249,163,44)" fg:x="39243" fg:w="14"/><text x="90.4985%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (2,021 instructions, 4.65%)</title><rect x="85.8013%" y="197" width="4.6455%" height="15" fill="rgb(234,15,39)" fg:x="37327" fg:w="2021"/><text x="86.0943%" y="207.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="90.6376%" y="181" width="0.0621%" height="15" fill="rgb(207,66,16)" fg:x="39431" fg:w="27"/><text x="90.9306%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (227 instructions, 0.52%)</title><rect x="90.4469%" y="197" width="0.5218%" height="15" fill="rgb(233,112,24)" fg:x="39348" fg:w="227"/><text x="90.7398%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="90.9686%" y="165" width="0.0322%" height="15" fill="rgb(230,90,22)" fg:x="39575" fg:w="14"/><text x="91.2616%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="91.0008%" y="165" width="0.0322%" height="15" fill="rgb(229,61,13)" fg:x="39589" fg:w="14"/><text x="91.2938%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.03%)</title><rect x="91.0330%" y="165" width="0.0322%" height="15" fill="rgb(225,57,24)" fg:x="39603" fg:w="14"/><text x="91.3260%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="91.0652%" y="165" width="0.2046%" height="15" fill="rgb(208,169,48)" fg:x="39617" fg:w="89"/><text x="91.3582%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (409 instructions, 0.94%)</title><rect x="90.9686%" y="181" width="0.9401%" height="15" fill="rgb(244,218,51)" fg:x="39575" fg:w="409"/><text x="91.2616%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.19%)</title><rect x="91.9088%" y="165" width="1.1907%" height="15" fill="rgb(214,148,10)" fg:x="39984" fg:w="518"/><text x="92.2018%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="93.0995%" y="117" width="0.1885%" height="15" fill="rgb(225,174,27)" fg:x="40502" fg:w="82"/><text x="93.3925%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.28%)</title><rect x="93.0995%" y="133" width="0.2827%" height="15" fill="rgb(230,96,26)" fg:x="40502" fg:w="123"/><text x="93.3925%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.47%)</title><rect x="93.0995%" y="149" width="0.4735%" height="15" fill="rgb(232,10,30)" fg:x="40502" fg:w="206"/><text x="93.3925%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.5730%" y="149" width="0.0345%" height="15" fill="rgb(222,8,50)" fg:x="40708" fg:w="15"/><text x="93.8660%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.6075%" y="149" width="0.0345%" height="15" fill="rgb(213,81,27)" fg:x="40723" fg:w="15"/><text x="93.9005%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 0.98%)</title><rect x="93.0995%" y="165" width="0.9838%" height="15" fill="rgb(245,50,10)" fg:x="40502" fg:w="428"/><text x="93.3925%" y="175.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.19%)</title><rect x="94.0833%" y="165" width="1.1861%" height="15" fill="rgb(216,100,18)" fg:x="40930" fg:w="516"/><text x="94.3763%" y="175.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="95.2694%" y="165" width="0.0161%" height="15" fill="rgb(236,147,54)" fg:x="41446" fg:w="7"/><text x="95.5624%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,546 instructions, 3.55%)</title><rect x="91.9088%" y="181" width="3.5537%" height="15" fill="rgb(205,143,26)" fg:x="39984" fg:w="1546"/><text x="92.2018%" y="191.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.02%)</title><rect x="95.4625%" y="181" width="0.0184%" height="15" fill="rgb(236,26,9)" fg:x="41530" fg:w="8"/><text x="95.7555%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.02%)</title><rect x="95.4809%" y="181" width="0.0184%" height="15" fill="rgb(221,165,53)" fg:x="41538" fg:w="8"/><text x="95.7738%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.14%)</title><rect x="95.4993%" y="181" width="0.1402%" height="15" fill="rgb(214,110,17)" fg:x="41546" fg:w="61"/><text x="95.7922%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,665 instructions, 6.13%)</title><rect x="90.9686%" y="197" width="6.1259%" height="15" fill="rgb(237,197,12)" fg:x="39575" fg:w="2665"/><text x="91.2616%" y="207.50">ic_cdk..</text></g><g><title>subscriber::__canister_method_update_count::{{closure}} (42,884 instructions, 98.57%)</title><rect x="0.3770%" y="213" width="98.5748%" height="15" fill="rgb(205,84,17)" fg:x="164" fg:w="42884"/><text x="0.6699%" y="223.50">subscriber::__canister_method_update_count::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.03%)</title><rect x="98.9518%" y="213" width="0.0345%" height="15" fill="rgb(237,18,45)" fg:x="43048" fg:w="15"/><text x="99.2448%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="99.1932%" y="181" width="0.0529%" height="15" fill="rgb(221,87,14)" fg:x="43153" fg:w="23"/><text x="99.4861%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (227 instructions, 0.52%)</title><rect x="98.9886%" y="197" width="0.5218%" height="15" fill="rgb(238,186,15)" fg:x="43064" fg:w="227"/><text x="99.2816%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (345 instructions, 0.79%)</title><rect x="98.9863%" y="213" width="0.7930%" height="15" fill="rgb(208,115,11)" fg:x="43063" fg:w="345"/><text x="99.2793%" y="223.50"></text></g><g><title>all (43,504 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(254,175,0)" fg:x="0" fg:w="43504"/><text x="0.2930%" y="255.50"></text></g><g><title>canister_update update_count (43,504 instructions, 100.00%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(227,24,42)" fg:x="0" fg:w="43504"/><text x="0.2930%" y="239.50">canister_update update_count</text></g></svg></svg>