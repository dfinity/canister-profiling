<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="41615"><g><title>ic_cdk::setup (19 instructions, 0.05%)</title><rect x="0.0000%" y="197" width="0.0457%" height="15" fill="rgb(230,187,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="0.0457%" y="197" width="0.1898%" height="15" fill="rgb(209,44,26)" fg:x="19" fg:w="79"/><text x="0.3386%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2355%" y="197" width="0.1826%" height="15" fill="rgb(244,0,6)" fg:x="98" fg:w="76"/><text x="0.5285%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4181%" y="181" width="0.1826%" height="15" fill="rgb(248,18,21)" fg:x="174" fg:w="76"/><text x="0.7111%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="0.6007%" y="165" width="0.1706%" height="15" fill="rgb(245,180,19)" fg:x="250" fg:w="71"/><text x="0.8937%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="0.7714%" y="165" width="0.9612%" height="15" fill="rgb(252,118,36)" fg:x="321" fg:w="400"/><text x="1.0643%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="1.7325%" y="165" width="0.2043%" height="15" fill="rgb(210,224,19)" fg:x="721" fg:w="85"/><text x="2.0255%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.9368%" y="165" width="0.1298%" height="15" fill="rgb(218,30,24)" fg:x="806" fg:w="54"/><text x="2.2298%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0666%" y="165" width="0.1298%" height="15" fill="rgb(219,75,50)" fg:x="860" fg:w="54"/><text x="2.3595%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1963%" y="165" width="0.1298%" height="15" fill="rgb(234,72,50)" fg:x="914" fg:w="54"/><text x="2.4893%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.3261%" y="165" width="0.1298%" height="15" fill="rgb(219,100,48)" fg:x="968" fg:w="54"/><text x="2.6191%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="2.4558%" y="165" width="0.1706%" height="15" fill="rgb(253,5,41)" fg:x="1022" fg:w="71"/><text x="2.7488%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="2.6265%" y="165" width="0.1562%" height="15" fill="rgb(247,181,11)" fg:x="1093" fg:w="65"/><text x="2.9194%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="2.7827%" y="165" width="0.9612%" height="15" fill="rgb(222,223,25)" fg:x="1158" fg:w="400"/><text x="3.0756%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.7438%" y="165" width="0.0384%" height="15" fill="rgb(214,198,28)" fg:x="1558" fg:w="16"/><text x="4.0368%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="3.7823%" y="149" width="0.1754%" height="15" fill="rgb(230,46,43)" fg:x="1574" fg:w="73"/><text x="4.0753%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.9577%" y="117" width="0.1442%" height="15" fill="rgb(233,65,53)" fg:x="1647" fg:w="60"/><text x="4.2507%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.9577%" y="133" width="0.2043%" height="15" fill="rgb(221,121,27)" fg:x="1647" fg:w="85"/><text x="4.2507%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1620%" y="85" width="0.0216%" height="15" fill="rgb(247,70,47)" fg:x="1732" fg:w="9"/><text x="4.4549%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1836%" y="69" width="0.0721%" height="15" fill="rgb(228,85,35)" fg:x="1741" fg:w="30"/><text x="4.4766%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1836%" y="85" width="0.1322%" height="15" fill="rgb(209,50,18)" fg:x="1741" fg:w="55"/><text x="4.4766%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.1620%" y="101" width="0.2836%" height="15" fill="rgb(250,19,35)" fg:x="1732" fg:w="118"/><text x="4.4549%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="4.1620%" y="117" width="0.4109%" height="15" fill="rgb(253,107,29)" fg:x="1732" fg:w="171"/><text x="4.4549%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="4.1620%" y="133" width="0.4229%" height="15" fill="rgb(252,179,29)" fg:x="1732" fg:w="176"/><text x="4.4549%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="3.9577%" y="149" width="0.8939%" height="15" fill="rgb(238,194,6)" fg:x="1647" fg:w="372"/><text x="4.2507%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.42%)</title><rect x="3.7823%" y="165" width="1.4202%" height="15" fill="rgb(238,164,29)" fg:x="1574" fg:w="591"/><text x="4.0753%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.2025%" y="165" width="0.2043%" height="15" fill="rgb(224,25,9)" fg:x="2165" fg:w="85"/><text x="5.4954%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="5.4067%" y="165" width="0.1946%" height="15" fill="rgb(244,153,23)" fg:x="2250" fg:w="81"/><text x="5.6997%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="5.6013%" y="149" width="0.1298%" height="15" fill="rgb(212,203,14)" fg:x="2331" fg:w="54"/><text x="5.8943%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="5.7311%" y="149" width="0.1898%" height="15" fill="rgb(220,164,20)" fg:x="2385" fg:w="79"/><text x="6.0241%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.28%)</title><rect x="5.9209%" y="133" width="0.2836%" height="15" fill="rgb(222,203,48)" fg:x="2464" fg:w="118"/><text x="6.2139%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.29%)</title><rect x="6.2045%" y="101" width="0.2884%" height="15" fill="rgb(215,159,22)" fg:x="2582" fg:w="120"/><text x="6.4975%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.35%)</title><rect x="6.2045%" y="117" width="0.3484%" height="15" fill="rgb(216,183,47)" fg:x="2582" fg:w="145"/><text x="6.4975%" y="127.50"></text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="6.5529%" y="37" width="0.2499%" height="15" fill="rgb(229,195,25)" fg:x="2727" fg:w="104"/><text x="6.8459%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 instructions, 0.33%)</title><rect x="6.5529%" y="53" width="0.3316%" height="15" fill="rgb(224,132,51)" fg:x="2727" fg:w="138"/><text x="6.8459%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.52%)</title><rect x="6.5529%" y="69" width="0.5166%" height="15" fill="rgb(240,63,7)" fg:x="2727" fg:w="215"/><text x="6.8459%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.47%)</title><rect x="7.0696%" y="69" width="0.4686%" height="15" fill="rgb(249,182,41)" fg:x="2942" fg:w="195"/><text x="7.3625%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (442 instructions, 1.06%)</title><rect x="6.5529%" y="85" width="1.0621%" height="15" fill="rgb(243,47,26)" fg:x="2727" fg:w="442"/><text x="6.8459%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.6150%" y="53" width="0.0216%" height="15" fill="rgb(233,48,2)" fg:x="3169" fg:w="9"/><text x="7.9080%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.6367%" y="37" width="0.0721%" height="15" fill="rgb(244,165,34)" fg:x="3178" fg:w="30"/><text x="7.9296%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.6367%" y="53" width="0.1322%" height="15" fill="rgb(207,89,7)" fg:x="3178" fg:w="55"/><text x="7.9296%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.6150%" y="69" width="0.2836%" height="15" fill="rgb(244,117,36)" fg:x="3169" fg:w="118"/><text x="7.9080%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.44%)</title><rect x="7.6150%" y="85" width="0.4397%" height="15" fill="rgb(226,144,34)" fg:x="3169" fg:w="183"/><text x="7.9080%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="8.0548%" y="69" width="0.1081%" height="15" fill="rgb(213,23,19)" fg:x="3352" fg:w="45"/><text x="8.3478%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.17%)</title><rect x="8.0548%" y="85" width="0.1682%" height="15" fill="rgb(217,75,12)" fg:x="3352" fg:w="70"/><text x="8.3478%" y="95.50"></text></g><g><title>core::fmt::write (823 instructions, 1.98%)</title><rect x="6.5529%" y="101" width="1.9777%" height="15" fill="rgb(224,159,17)" fg:x="2727" fg:w="823"/><text x="6.8459%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (878 instructions, 2.11%)</title><rect x="6.5529%" y="117" width="2.1098%" height="15" fill="rgb(217,118,1)" fg:x="2727" fg:w="878"/><text x="6.8459%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,134 instructions, 2.72%)</title><rect x="6.2045%" y="133" width="2.7250%" height="15" fill="rgb(232,180,48)" fg:x="2582" fg:w="1134"/><text x="6.4975%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,398 instructions, 3.36%)</title><rect x="5.9209%" y="149" width="3.3594%" height="15" fill="rgb(230,27,33)" fg:x="2464" fg:w="1398"/><text x="6.2139%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.17%)</title><rect x="9.2803%" y="149" width="0.1730%" height="15" fill="rgb(205,31,21)" fg:x="3862" fg:w="72"/><text x="9.5733%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="9.4533%" y="149" width="0.1322%" height="15" fill="rgb(253,59,4)" fg:x="3934" fg:w="55"/><text x="9.7463%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="9.5855%" y="149" width="0.1586%" height="15" fill="rgb(224,201,9)" fg:x="3989" fg:w="66"/><text x="9.8785%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.7441%" y="117" width="0.1826%" height="15" fill="rgb(229,206,30)" fg:x="4055" fg:w="76"/><text x="10.0371%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="9.7441%" y="133" width="0.2667%" height="15" fill="rgb(212,67,47)" fg:x="4055" fg:w="111"/><text x="10.0371%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.43%)</title><rect x="9.7441%" y="149" width="0.4301%" height="15" fill="rgb(211,96,50)" fg:x="4055" fg:w="179"/><text x="10.0371%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="10.1742%" y="149" width="0.1298%" height="15" fill="rgb(252,114,18)" fg:x="4234" fg:w="54"/><text x="10.4672%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="10.3040%" y="149" width="0.1754%" height="15" fill="rgb(223,58,37)" fg:x="4288" fg:w="73"/><text x="10.5969%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="10.4794%" y="133" width="0.1970%" height="15" fill="rgb(237,70,4)" fg:x="4361" fg:w="82"/><text x="10.7724%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.29%)</title><rect x="10.6764%" y="101" width="0.2884%" height="15" fill="rgb(244,85,46)" fg:x="4443" fg:w="120"/><text x="10.9694%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.35%)</title><rect x="10.6764%" y="117" width="0.3484%" height="15" fill="rgb(223,39,52)" fg:x="4443" fg:w="145"/><text x="10.9694%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.20%)</title><rect x="11.0249%" y="37" width="0.1994%" height="15" fill="rgb(218,200,14)" fg:x="4588" fg:w="83"/><text x="11.3178%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="11.0249%" y="53" width="0.2811%" height="15" fill="rgb(208,171,16)" fg:x="4588" fg:w="117"/><text x="11.3178%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.47%)</title><rect x="11.0249%" y="69" width="0.4662%" height="15" fill="rgb(234,200,18)" fg:x="4588" fg:w="194"/><text x="11.3178%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.47%)</title><rect x="11.4910%" y="69" width="0.4686%" height="15" fill="rgb(228,45,11)" fg:x="4782" fg:w="195"/><text x="11.7840%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.01%)</title><rect x="11.0249%" y="85" width="1.0117%" height="15" fill="rgb(237,182,11)" fg:x="4588" fg:w="421"/><text x="11.3178%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="12.0365%" y="53" width="0.0216%" height="15" fill="rgb(241,175,49)" fg:x="5009" fg:w="9"/><text x="12.3295%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="12.0582%" y="37" width="0.0721%" height="15" fill="rgb(247,38,35)" fg:x="5018" fg:w="30"/><text x="12.3511%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="12.0582%" y="53" width="0.1322%" height="15" fill="rgb(228,39,49)" fg:x="5018" fg:w="55"/><text x="12.3511%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="12.0365%" y="69" width="0.2836%" height="15" fill="rgb(226,101,26)" fg:x="5009" fg:w="118"/><text x="12.3295%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.44%)</title><rect x="12.0365%" y="85" width="0.4397%" height="15" fill="rgb(206,141,19)" fg:x="5009" fg:w="183"/><text x="12.3295%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="12.4763%" y="69" width="0.1081%" height="15" fill="rgb(211,200,13)" fg:x="5192" fg:w="45"/><text x="12.7692%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.17%)</title><rect x="12.4763%" y="85" width="0.1682%" height="15" fill="rgb(241,121,6)" fg:x="5192" fg:w="70"/><text x="12.7692%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 1.93%)</title><rect x="11.0249%" y="101" width="1.9272%" height="15" fill="rgb(234,221,29)" fg:x="4588" fg:w="802"/><text x="11.3178%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.06%)</title><rect x="11.0249%" y="117" width="2.0594%" height="15" fill="rgb(229,136,5)" fg:x="4588" fg:w="857"/><text x="11.3178%" y="127.50"></text></g><g><title>core::fmt::write (1,113 instructions, 2.67%)</title><rect x="10.6764%" y="133" width="2.6745%" height="15" fill="rgb(238,36,11)" fg:x="4443" fg:w="1113"/><text x="10.9694%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.22%)</title><rect x="10.4794%" y="149" width="3.2224%" height="15" fill="rgb(251,55,41)" fg:x="4361" fg:w="1341"/><text x="10.7724%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.17%)</title><rect x="13.7018%" y="149" width="0.1730%" height="15" fill="rgb(242,34,40)" fg:x="5702" fg:w="72"/><text x="13.9948%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="13.8748%" y="149" width="0.1370%" height="15" fill="rgb(215,42,17)" fg:x="5774" fg:w="57"/><text x="14.1678%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="14.0118%" y="149" width="0.1586%" height="15" fill="rgb(207,44,46)" fg:x="5831" fg:w="66"/><text x="14.3047%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="14.1704%" y="149" width="0.1298%" height="15" fill="rgb(211,206,28)" fg:x="5897" fg:w="54"/><text x="14.4633%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="14.3001%" y="133" width="0.1706%" height="15" fill="rgb(237,167,16)" fg:x="5951" fg:w="71"/><text x="14.5931%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="14.4707%" y="133" width="0.1562%" height="15" fill="rgb(233,66,6)" fg:x="6022" fg:w="65"/><text x="14.7637%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="14.6269%" y="133" width="0.9612%" height="15" fill="rgb(246,123,29)" fg:x="6087" fg:w="400"/><text x="14.9199%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="15.5881%" y="133" width="0.0384%" height="15" fill="rgb(209,62,40)" fg:x="6487" fg:w="16"/><text x="15.8811%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="15.6266%" y="117" width="0.1970%" height="15" fill="rgb(218,4,25)" fg:x="6503" fg:w="82"/><text x="15.9195%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="15.8236%" y="85" width="0.1442%" height="15" fill="rgb(253,91,49)" fg:x="6585" fg:w="60"/><text x="16.1166%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="15.8236%" y="101" width="0.2043%" height="15" fill="rgb(228,155,29)" fg:x="6585" fg:w="85"/><text x="16.1166%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="16.0279%" y="53" width="0.0216%" height="15" fill="rgb(243,57,37)" fg:x="6670" fg:w="9"/><text x="16.3208%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="16.0495%" y="37" width="0.0721%" height="15" fill="rgb(244,167,17)" fg:x="6679" fg:w="30"/><text x="16.3425%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="16.0495%" y="53" width="0.1322%" height="15" fill="rgb(207,181,38)" fg:x="6679" fg:w="55"/><text x="16.3425%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="16.0279%" y="69" width="0.2836%" height="15" fill="rgb(211,8,23)" fg:x="6670" fg:w="118"/><text x="16.3208%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="16.0279%" y="85" width="0.4109%" height="15" fill="rgb(235,11,44)" fg:x="6670" fg:w="171"/><text x="16.3208%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="16.0279%" y="101" width="0.4229%" height="15" fill="rgb(248,18,52)" fg:x="6670" fg:w="176"/><text x="16.3208%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="15.8236%" y="117" width="0.8939%" height="15" fill="rgb(208,4,7)" fg:x="6585" fg:w="372"/><text x="16.1166%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.44%)</title><rect x="15.6266%" y="133" width="1.4418%" height="15" fill="rgb(240,17,39)" fg:x="6503" fg:w="600"/><text x="15.9195%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="17.0684%" y="133" width="0.2043%" height="15" fill="rgb(207,170,3)" fg:x="7103" fg:w="85"/><text x="17.3613%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="17.2726%" y="133" width="0.1370%" height="15" fill="rgb(236,100,52)" fg:x="7188" fg:w="57"/><text x="17.5656%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="17.4096%" y="117" width="0.1706%" height="15" fill="rgb(246,78,51)" fg:x="7245" fg:w="71"/><text x="17.7026%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.67%)</title><rect x="17.5802%" y="117" width="0.6656%" height="15" fill="rgb(211,17,15)" fg:x="7316" fg:w="277"/><text x="17.8732%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="18.2458%" y="101" width="0.1706%" height="15" fill="rgb(209,59,46)" fg:x="7593" fg:w="71"/><text x="18.5388%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.22%)</title><rect x="18.4164%" y="101" width="0.2187%" height="15" fill="rgb(210,92,25)" fg:x="7664" fg:w="91"/><text x="18.7094%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="18.6351%" y="101" width="0.1586%" height="15" fill="rgb(238,174,52)" fg:x="7755" fg:w="66"/><text x="18.9281%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.69%)</title><rect x="18.2458%" y="117" width="0.6897%" height="15" fill="rgb(230,73,7)" fg:x="7593" fg:w="287"/><text x="18.5388%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="18.9355%" y="117" width="0.1586%" height="15" fill="rgb(243,124,40)" fg:x="7880" fg:w="66"/><text x="19.2284%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (823 instructions, 1.98%)</title><rect x="17.4096%" y="133" width="1.9777%" height="15" fill="rgb(244,170,11)" fg:x="7245" fg:w="823"/><text x="17.7026%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="19.3872%" y="133" width="0.1970%" height="15" fill="rgb(207,114,54)" fg:x="8068" fg:w="82"/><text x="19.6802%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="19.5843%" y="117" width="0.1706%" height="15" fill="rgb(205,42,20)" fg:x="8150" fg:w="71"/><text x="19.8773%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.67%)</title><rect x="19.7549%" y="117" width="0.6656%" height="15" fill="rgb(230,30,28)" fg:x="8221" fg:w="277"/><text x="20.0479%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="20.4205%" y="101" width="0.1706%" height="15" fill="rgb(205,73,54)" fg:x="8498" fg:w="71"/><text x="20.7135%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.22%)</title><rect x="20.5911%" y="101" width="0.2187%" height="15" fill="rgb(254,227,23)" fg:x="8569" fg:w="91"/><text x="20.8841%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="20.8098%" y="101" width="0.1586%" height="15" fill="rgb(228,202,34)" fg:x="8660" fg:w="66"/><text x="21.1028%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.69%)</title><rect x="20.4205%" y="117" width="0.6897%" height="15" fill="rgb(222,225,37)" fg:x="8498" fg:w="287"/><text x="20.7135%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="21.1102%" y="117" width="0.1586%" height="15" fill="rgb(221,14,54)" fg:x="8785" fg:w="66"/><text x="21.4031%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (823 instructions, 1.98%)</title><rect x="19.5843%" y="133" width="1.9777%" height="15" fill="rgb(254,102,2)" fg:x="8150" fg:w="823"/><text x="19.8773%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="21.5619%" y="133" width="0.0505%" height="15" fill="rgb(232,104,17)" fg:x="8973" fg:w="21"/><text x="21.8549%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="21.6124%" y="133" width="0.1586%" height="15" fill="rgb(250,220,14)" fg:x="8994" fg:w="66"/><text x="21.9054%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,446 instructions, 8.28%)</title><rect x="14.3001%" y="149" width="8.2807%" height="15" fill="rgb(241,158,9)" fg:x="5951" fg:w="3446"/><text x="14.5931%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="22.5808%" y="133" width="0.1946%" height="15" fill="rgb(246,9,43)" fg:x="9397" fg:w="81"/><text x="22.8738%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="22.8283%" y="133" width="0.1874%" height="15" fill="rgb(206,73,33)" fg:x="9500" fg:w="78"/><text x="23.1213%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.49%)</title><rect x="22.5808%" y="149" width="0.4878%" height="15" fill="rgb(222,79,8)" fg:x="9397" fg:w="203"/><text x="22.8738%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="23.0686%" y="149" width="0.2884%" height="15" fill="rgb(234,8,54)" fg:x="9600" fg:w="120"/><text x="23.3616%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,035 instructions, 19.31%)</title><rect x="5.6013%" y="165" width="19.3079%" height="15" fill="rgb(209,134,38)" fg:x="2331" fg:w="8035"/><text x="5.8943%" y="175.50">&lt;candid::binary_parser::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.15%)</title><rect x="24.9093%" y="165" width="0.1514%" height="15" fill="rgb(230,127,29)" fg:x="10366" fg:w="63"/><text x="25.2023%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="25.0607%" y="165" width="0.1586%" height="15" fill="rgb(242,44,41)" fg:x="10429" fg:w="66"/><text x="25.3536%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="25.2193%" y="165" width="0.1562%" height="15" fill="rgb(222,56,43)" fg:x="10495" fg:w="65"/><text x="25.5122%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="25.3755%" y="149" width="0.9612%" height="15" fill="rgb(238,39,47)" fg:x="10560" fg:w="400"/><text x="25.6684%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="26.3367%" y="149" width="0.0384%" height="15" fill="rgb(226,79,43)" fg:x="10960" fg:w="16"/><text x="26.6296%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="26.3751%" y="133" width="0.1898%" height="15" fill="rgb(242,105,53)" fg:x="10976" fg:w="79"/><text x="26.6681%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="26.5649%" y="101" width="0.1442%" height="15" fill="rgb(251,132,46)" fg:x="11055" fg:w="60"/><text x="26.8579%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="26.5649%" y="117" width="0.2043%" height="15" fill="rgb(231,77,14)" fg:x="11055" fg:w="85"/><text x="26.8579%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="26.7692%" y="69" width="0.0216%" height="15" fill="rgb(240,135,9)" fg:x="11140" fg:w="9"/><text x="27.0622%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="26.7908%" y="53" width="0.0721%" height="15" fill="rgb(248,109,14)" fg:x="11149" fg:w="30"/><text x="27.0838%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="26.7908%" y="69" width="0.1322%" height="15" fill="rgb(227,146,52)" fg:x="11149" fg:w="55"/><text x="27.0838%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="26.7692%" y="85" width="0.2836%" height="15" fill="rgb(232,54,3)" fg:x="11140" fg:w="118"/><text x="27.0622%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="26.7692%" y="101" width="0.4109%" height="15" fill="rgb(229,201,43)" fg:x="11140" fg:w="171"/><text x="27.0622%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="26.7692%" y="117" width="0.4229%" height="15" fill="rgb(252,161,33)" fg:x="11140" fg:w="176"/><text x="27.0622%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="26.5649%" y="133" width="0.8939%" height="15" fill="rgb(226,146,40)" fg:x="11055" fg:w="372"/><text x="26.8579%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (597 instructions, 1.43%)</title><rect x="26.3751%" y="149" width="1.4346%" height="15" fill="rgb(219,47,25)" fg:x="10976" fg:w="597"/><text x="26.6681%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="27.8097%" y="149" width="0.2043%" height="15" fill="rgb(250,135,13)" fg:x="11573" fg:w="85"/><text x="28.1027%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="28.0139%" y="149" width="0.1946%" height="15" fill="rgb(219,229,18)" fg:x="11658" fg:w="81"/><text x="28.3069%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="28.2086%" y="133" width="0.1706%" height="15" fill="rgb(217,152,27)" fg:x="11739" fg:w="71"/><text x="28.5015%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.22%)</title><rect x="28.3792%" y="133" width="0.2187%" height="15" fill="rgb(225,71,47)" fg:x="11810" fg:w="91"/><text x="28.6722%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="28.5979%" y="133" width="0.1586%" height="15" fill="rgb(220,139,14)" fg:x="11901" fg:w="66"/><text x="28.8908%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.69%)</title><rect x="28.2086%" y="149" width="0.6897%" height="15" fill="rgb(247,54,32)" fg:x="11739" fg:w="287"/><text x="28.5015%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.28%)</title><rect x="28.8982%" y="149" width="0.2836%" height="15" fill="rgb(252,131,39)" fg:x="12026" fg:w="118"/><text x="29.1912%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,785 instructions, 4.29%)</title><rect x="25.3755%" y="165" width="4.2893%" height="15" fill="rgb(210,108,39)" fg:x="10560" fg:w="1785"/><text x="25.6684%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="29.6648%" y="165" width="0.1586%" height="15" fill="rgb(205,23,29)" fg:x="12345" fg:w="66"/><text x="29.9578%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="29.8234%" y="165" width="0.1826%" height="15" fill="rgb(246,139,46)" fg:x="12411" fg:w="76"/><text x="30.1163%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="30.0060%" y="149" width="0.1826%" height="15" fill="rgb(250,81,26)" fg:x="12487" fg:w="76"/><text x="30.2990%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.38%)</title><rect x="30.0060%" y="165" width="0.3821%" height="15" fill="rgb(214,104,7)" fg:x="12487" fg:w="159"/><text x="30.2990%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="30.3881%" y="133" width="0.1970%" height="15" fill="rgb(233,189,8)" fg:x="12646" fg:w="82"/><text x="30.6810%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="30.3881%" y="149" width="0.2811%" height="15" fill="rgb(228,141,17)" fg:x="12646" fg:w="117"/><text x="30.6810%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.44%)</title><rect x="30.3881%" y="165" width="0.4446%" height="15" fill="rgb(247,157,1)" fg:x="12646" fg:w="185"/><text x="30.6810%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="30.8326%" y="165" width="0.1970%" height="15" fill="rgb(249,225,5)" fg:x="12831" fg:w="82"/><text x="31.1256%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="31.0297%" y="149" width="0.1970%" height="15" fill="rgb(242,55,13)" fg:x="12913" fg:w="82"/><text x="31.3226%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.40%)</title><rect x="31.0297%" y="165" width="0.3965%" height="15" fill="rgb(230,49,50)" fg:x="12913" fg:w="165"/><text x="31.3226%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="31.4262%" y="165" width="0.1970%" height="15" fill="rgb(241,111,38)" fg:x="13078" fg:w="82"/><text x="31.7191%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="31.6232%" y="149" width="0.1898%" height="15" fill="rgb(252,155,4)" fg:x="13160" fg:w="79"/><text x="31.9162%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="31.8130%" y="117" width="0.2163%" height="15" fill="rgb(212,69,32)" fg:x="13239" fg:w="90"/><text x="32.1060%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.28%)</title><rect x="31.8130%" y="133" width="0.2763%" height="15" fill="rgb(243,107,47)" fg:x="13239" fg:w="115"/><text x="32.1060%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="32.0894%" y="85" width="0.0216%" height="15" fill="rgb(247,130,12)" fg:x="13354" fg:w="9"/><text x="32.3824%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="32.1110%" y="69" width="0.0721%" height="15" fill="rgb(233,74,16)" fg:x="13363" fg:w="30"/><text x="32.4040%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="32.1110%" y="85" width="0.1322%" height="15" fill="rgb(208,58,18)" fg:x="13363" fg:w="55"/><text x="32.4040%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="32.0894%" y="101" width="0.2836%" height="15" fill="rgb(242,225,1)" fg:x="13354" fg:w="118"/><text x="32.3824%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="32.0894%" y="117" width="0.4109%" height="15" fill="rgb(249,39,40)" fg:x="13354" fg:w="171"/><text x="32.3824%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.45%)</title><rect x="32.0894%" y="133" width="0.4470%" height="15" fill="rgb(207,72,44)" fg:x="13354" fg:w="186"/><text x="32.3824%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 0.99%)</title><rect x="31.8130%" y="149" width="0.9900%" height="15" fill="rgb(215,193,12)" fg:x="13239" fg:w="412"/><text x="32.1060%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (637 instructions, 1.53%)</title><rect x="31.6232%" y="165" width="1.5307%" height="15" fill="rgb(248,41,39)" fg:x="13160" fg:w="637"/><text x="31.9162%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="33.1539%" y="149" width="0.1970%" height="15" fill="rgb(253,85,4)" fg:x="13797" fg:w="82"/><text x="33.4469%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.33%)</title><rect x="33.1539%" y="165" width="0.3316%" height="15" fill="rgb(243,70,31)" fg:x="13797" fg:w="138"/><text x="33.4469%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.23%)</title><rect x="33.4855%" y="165" width="0.2283%" height="15" fill="rgb(253,195,26)" fg:x="13935" fg:w="95"/><text x="33.7785%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="33.7138%" y="165" width="0.0312%" height="15" fill="rgb(243,42,11)" fg:x="14030" fg:w="13"/><text x="34.0068%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.23%)</title><rect x="33.7450%" y="165" width="0.2283%" height="15" fill="rgb(239,66,17)" fg:x="14043" fg:w="95"/><text x="34.0380%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="33.9733%" y="149" width="0.1970%" height="15" fill="rgb(217,132,21)" fg:x="14138" fg:w="82"/><text x="34.2663%" y="159.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (114 instructions, 0.27%)</title><rect x="33.9733%" y="165" width="0.2739%" height="15" fill="rgb(252,202,21)" fg:x="14138" fg:w="114"/><text x="34.2663%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.06%)</title><rect x="34.2473%" y="149" width="0.0553%" height="15" fill="rgb(233,98,36)" fg:x="14252" fg:w="23"/><text x="34.5402%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.06%)</title><rect x="34.3025%" y="149" width="0.0553%" height="15" fill="rgb(216,153,54)" fg:x="14275" fg:w="23"/><text x="34.5955%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.32%)</title><rect x="34.2473%" y="165" width="0.3220%" height="15" fill="rgb(250,99,7)" fg:x="14252" fg:w="134"/><text x="34.5402%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="34.5693%" y="165" width="0.0360%" height="15" fill="rgb(207,56,50)" fg:x="14386" fg:w="15"/><text x="34.8622%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="34.8048%" y="149" width="0.1370%" height="15" fill="rgb(244,61,34)" fg:x="14484" fg:w="57"/><text x="35.0977%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (165 instructions, 0.40%)</title><rect x="34.6053%" y="165" width="0.3965%" height="15" fill="rgb(241,50,38)" fg:x="14401" fg:w="165"/><text x="34.8983%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="35.0018%" y="165" width="0.0312%" height="15" fill="rgb(212,166,30)" fg:x="14566" fg:w="13"/><text x="35.2948%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="35.0330%" y="165" width="0.0168%" height="15" fill="rgb(249,127,32)" fg:x="14579" fg:w="7"/><text x="35.3260%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="35.0499%" y="165" width="0.0360%" height="15" fill="rgb(209,103,0)" fg:x="14586" fg:w="15"/><text x="35.3428%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="35.0859%" y="133" width="0.1754%" height="15" fill="rgb(238,209,51)" fg:x="14601" fg:w="73"/><text x="35.3789%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="35.2613%" y="101" width="0.2163%" height="15" fill="rgb(237,56,23)" fg:x="14674" fg:w="90"/><text x="35.5543%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.28%)</title><rect x="35.2613%" y="117" width="0.2763%" height="15" fill="rgb(215,153,46)" fg:x="14674" fg:w="115"/><text x="35.5543%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="35.5377%" y="69" width="0.0216%" height="15" fill="rgb(224,49,31)" fg:x="14789" fg:w="9"/><text x="35.8306%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="35.5593%" y="53" width="0.0721%" height="15" fill="rgb(250,18,42)" fg:x="14798" fg:w="30"/><text x="35.8523%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="35.5593%" y="69" width="0.1322%" height="15" fill="rgb(215,176,39)" fg:x="14798" fg:w="55"/><text x="35.8523%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="35.5377%" y="85" width="0.2836%" height="15" fill="rgb(223,77,29)" fg:x="14789" fg:w="118"/><text x="35.8306%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="35.5377%" y="101" width="0.4109%" height="15" fill="rgb(234,94,52)" fg:x="14789" fg:w="171"/><text x="35.8306%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.45%)</title><rect x="35.5377%" y="117" width="0.4470%" height="15" fill="rgb(220,154,50)" fg:x="14789" fg:w="186"/><text x="35.8306%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 0.99%)</title><rect x="35.2613%" y="133" width="0.9900%" height="15" fill="rgb(212,11,10)" fg:x="14674" fg:w="412"/><text x="35.5543%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.52%)</title><rect x="35.0859%" y="149" width="1.5163%" height="15" fill="rgb(205,166,19)" fg:x="14601" fg:w="631"/><text x="35.3789%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="36.6022%" y="149" width="0.1970%" height="15" fill="rgb(244,198,16)" fg:x="15232" fg:w="82"/><text x="36.8952%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (825 instructions, 1.98%)</title><rect x="35.0859%" y="165" width="1.9825%" height="15" fill="rgb(219,69,12)" fg:x="14601" fg:w="825"/><text x="35.3789%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.0684%" y="133" width="0.1970%" height="15" fill="rgb(245,30,7)" fg:x="15426" fg:w="82"/><text x="37.3613%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="37.0684%" y="149" width="0.2811%" height="15" fill="rgb(218,221,48)" fg:x="15426" fg:w="117"/><text x="37.3613%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.44%)</title><rect x="37.0684%" y="165" width="0.4446%" height="15" fill="rgb(216,66,15)" fg:x="15426" fg:w="185"/><text x="37.3613%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.5129%" y="165" width="0.1970%" height="15" fill="rgb(226,122,50)" fg:x="15611" fg:w="82"/><text x="37.8059%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="37.7100%" y="165" width="0.1946%" height="15" fill="rgb(239,156,16)" fg:x="15693" fg:w="81"/><text x="38.0029%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.9046%" y="165" width="0.1970%" height="15" fill="rgb(224,27,38)" fg:x="15774" fg:w="82"/><text x="38.1976%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="38.1016%" y="165" width="0.1970%" height="15" fill="rgb(224,39,27)" fg:x="15856" fg:w="82"/><text x="38.3946%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="38.2987%" y="149" width="0.1946%" height="15" fill="rgb(215,92,29)" fg:x="15938" fg:w="81"/><text x="38.5917%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.28%)</title><rect x="38.2987%" y="165" width="0.2763%" height="15" fill="rgb(207,159,16)" fg:x="15938" fg:w="115"/><text x="38.5917%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="38.5750%" y="149" width="0.1514%" height="15" fill="rgb(238,163,47)" fg:x="16053" fg:w="63"/><text x="38.8680%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (167 instructions, 0.40%)</title><rect x="38.5750%" y="165" width="0.4013%" height="15" fill="rgb(219,91,49)" fg:x="16053" fg:w="167"/><text x="38.8680%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="38.9763%" y="165" width="0.1946%" height="15" fill="rgb(227,167,31)" fg:x="16220" fg:w="81"/><text x="39.2693%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="39.1710%" y="165" width="0.9155%" height="15" fill="rgb(234,80,54)" fg:x="16301" fg:w="381"/><text x="39.4639%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="40.0865%" y="165" width="0.9155%" height="15" fill="rgb(212,114,2)" fg:x="16682" fg:w="381"/><text x="40.3795%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,585 instructions, 44.66%)</title><rect x="0.6007%" y="181" width="44.6594%" height="15" fill="rgb(234,50,24)" fg:x="250" fg:w="18585"/><text x="0.8937%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (336 instructions, 0.81%)</title><rect x="45.2601%" y="181" width="0.8074%" height="15" fill="rgb(221,68,8)" fg:x="18835" fg:w="336"/><text x="45.5531%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="46.0675%" y="165" width="0.0120%" height="15" fill="rgb(254,180,31)" fg:x="19171" fg:w="5"/><text x="46.3605%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="46.0675%" y="181" width="0.0937%" height="15" fill="rgb(247,130,50)" fg:x="19171" fg:w="39"/><text x="46.3605%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="46.1612%" y="165" width="0.1322%" height="15" fill="rgb(211,109,4)" fg:x="19210" fg:w="55"/><text x="46.4542%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (162 instructions, 0.39%)</title><rect x="46.1612%" y="181" width="0.3893%" height="15" fill="rgb(238,50,21)" fg:x="19210" fg:w="162"/><text x="46.4542%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="46.5505%" y="165" width="0.0120%" height="15" fill="rgb(225,57,45)" fg:x="19372" fg:w="5"/><text x="46.8435%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="46.5625%" y="149" width="0.1274%" height="15" fill="rgb(209,196,50)" fg:x="19377" fg:w="53"/><text x="46.8555%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.64%)</title><rect x="46.6899%" y="149" width="0.6416%" height="15" fill="rgb(242,140,13)" fg:x="19430" fg:w="267"/><text x="46.9829%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="47.3315%" y="149" width="0.3869%" height="15" fill="rgb(217,111,7)" fg:x="19697" fg:w="161"/><text x="47.6245%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (718 instructions, 1.73%)</title><rect x="46.5625%" y="165" width="1.7253%" height="15" fill="rgb(253,193,51)" fg:x="19377" fg:w="718"/><text x="46.8555%" y="175.50"></text></g><g><title>candid::types::internal::env_add (933 instructions, 2.24%)</title><rect x="46.5505%" y="181" width="2.2420%" height="15" fill="rgb(252,70,29)" fg:x="19372" fg:w="933"/><text x="46.8435%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="48.7925%" y="181" width="0.1898%" height="15" fill="rgb(232,127,12)" fg:x="20305" fg:w="79"/><text x="49.0855%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="48.9823%" y="181" width="0.1826%" height="15" fill="rgb(211,180,21)" fg:x="20384" fg:w="76"/><text x="49.2753%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="49.1650%" y="181" width="0.1898%" height="15" fill="rgb(229,72,13)" fg:x="20460" fg:w="79"/><text x="49.4579%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="49.3548%" y="149" width="0.0120%" height="15" fill="rgb(240,211,49)" fg:x="20539" fg:w="5"/><text x="49.6478%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="49.3668%" y="133" width="0.1274%" height="15" fill="rgb(219,149,40)" fg:x="20544" fg:w="53"/><text x="49.6598%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="49.4942%" y="133" width="0.7329%" height="15" fill="rgb(210,127,46)" fg:x="20597" fg:w="305"/><text x="49.7871%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="50.2271%" y="133" width="0.1754%" height="15" fill="rgb(220,106,7)" fg:x="20902" fg:w="73"/><text x="50.5201%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="49.3668%" y="149" width="1.6052%" height="15" fill="rgb(249,31,22)" fg:x="20544" fg:w="668"/><text x="49.6598%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.89%)</title><rect x="49.3548%" y="165" width="1.8887%" height="15" fill="rgb(253,1,49)" fg:x="20539" fg:w="786"/><text x="49.6478%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="51.2435%" y="165" width="0.1826%" height="15" fill="rgb(227,144,33)" fg:x="21325" fg:w="76"/><text x="51.5365%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="51.4262%" y="149" width="0.0120%" height="15" fill="rgb(249,163,44)" fg:x="21401" fg:w="5"/><text x="51.7191%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="51.4382%" y="133" width="0.1274%" height="15" fill="rgb(234,15,39)" fg:x="21406" fg:w="53"/><text x="51.7312%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="51.5655%" y="133" width="0.7329%" height="15" fill="rgb(207,66,16)" fg:x="21459" fg:w="305"/><text x="51.8585%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="52.2985%" y="133" width="0.1754%" height="15" fill="rgb(233,112,24)" fg:x="21764" fg:w="73"/><text x="52.5914%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="51.4382%" y="149" width="1.6052%" height="15" fill="rgb(230,90,22)" fg:x="21406" fg:w="668"/><text x="51.7312%" y="159.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 2.12%)</title><rect x="51.4262%" y="165" width="2.1218%" height="15" fill="rgb(229,61,13)" fg:x="21401" fg:w="883"/><text x="51.7191%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="53.5480%" y="165" width="0.1826%" height="15" fill="rgb(225,57,24)" fg:x="22284" fg:w="76"/><text x="53.8410%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.7306%" y="149" width="0.0120%" height="15" fill="rgb(208,169,48)" fg:x="22360" fg:w="5"/><text x="54.0236%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="53.7426%" y="133" width="0.1274%" height="15" fill="rgb(244,218,51)" fg:x="22365" fg:w="53"/><text x="54.0356%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="53.8700%" y="133" width="0.7329%" height="15" fill="rgb(214,148,10)" fg:x="22418" fg:w="305"/><text x="54.1630%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="54.6029%" y="133" width="0.1754%" height="15" fill="rgb(225,174,27)" fg:x="22723" fg:w="73"/><text x="54.8959%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="53.7426%" y="149" width="1.6052%" height="15" fill="rgb(230,96,26)" fg:x="22365" fg:w="668"/><text x="54.0356%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.07%)</title><rect x="55.3478%" y="149" width="1.0717%" height="15" fill="rgb(232,10,30)" fg:x="23033" fg:w="446"/><text x="55.6408%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="56.4196%" y="133" width="0.1946%" height="15" fill="rgb(222,8,50)" fg:x="23479" fg:w="81"/><text x="56.7125%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="56.4196%" y="149" width="0.2595%" height="15" fill="rgb(213,81,27)" fg:x="23479" fg:w="108"/><text x="56.7125%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,395 instructions, 3.35%)</title><rect x="53.7306%" y="165" width="3.3522%" height="15" fill="rgb(245,50,10)" fg:x="22360" fg:w="1395"/><text x="54.0236%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="57.0828%" y="117" width="0.1274%" height="15" fill="rgb(216,100,18)" fg:x="23755" fg:w="53"/><text x="57.3758%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="57.0828%" y="133" width="0.1898%" height="15" fill="rgb(236,147,54)" fg:x="23755" fg:w="79"/><text x="57.3758%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.70%)</title><rect x="57.0828%" y="149" width="0.7017%" height="15" fill="rgb(205,143,26)" fg:x="23755" fg:w="292"/><text x="57.3758%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (9 instructions, 0.02%)</title><rect x="57.7845%" y="149" width="0.0216%" height="15" fill="rgb(236,26,9)" fg:x="24047" fg:w="9"/><text x="58.0774%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (15 instructions, 0.04%)</title><rect x="57.8061%" y="149" width="0.0360%" height="15" fill="rgb(221,165,53)" fg:x="24056" fg:w="15"/><text x="58.0990%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="57.8421%" y="149" width="0.0264%" height="15" fill="rgb(214,110,17)" fg:x="24071" fg:w="11"/><text x="58.1351%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.25%)</title><rect x="57.0828%" y="165" width="1.2544%" height="15" fill="rgb(237,197,12)" fg:x="23755" fg:w="522"/><text x="57.3758%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,845 instructions, 9.24%)</title><rect x="49.3548%" y="181" width="9.2395%" height="15" fill="rgb(205,84,17)" fg:x="20539" fg:w="3845"/><text x="49.6478%" y="191.50">candid::typ..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="58.5943%" y="181" width="0.1826%" height="15" fill="rgb(237,18,45)" fg:x="24384" fg:w="76"/><text x="58.8872%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="58.7769%" y="181" width="0.1826%" height="15" fill="rgb(221,87,14)" fg:x="24460" fg:w="76"/><text x="59.0699%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="58.9595%" y="149" width="0.0120%" height="15" fill="rgb(238,186,15)" fg:x="24536" fg:w="5"/><text x="59.2525%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="58.9715%" y="133" width="0.1274%" height="15" fill="rgb(208,115,11)" fg:x="24541" fg:w="53"/><text x="59.2645%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="59.0989%" y="133" width="0.2139%" height="15" fill="rgb(254,175,0)" fg:x="24594" fg:w="89"/><text x="59.3919%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="59.3127%" y="133" width="0.3869%" height="15" fill="rgb(227,24,42)" fg:x="24683" fg:w="161"/><text x="59.6057%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="58.9715%" y="149" width="1.2976%" height="15" fill="rgb(223,211,37)" fg:x="24541" fg:w="540"/><text x="59.2645%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.58%)</title><rect x="58.9595%" y="165" width="1.5812%" height="15" fill="rgb(235,49,27)" fg:x="24536" fg:w="658"/><text x="59.2525%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="60.5407%" y="165" width="0.1898%" height="15" fill="rgb(254,97,51)" fg:x="25194" fg:w="79"/><text x="60.8336%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.7305%" y="149" width="0.0120%" height="15" fill="rgb(249,51,40)" fg:x="25273" fg:w="5"/><text x="61.0235%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="60.7425%" y="133" width="0.1274%" height="15" fill="rgb(210,128,45)" fg:x="25278" fg:w="53"/><text x="61.0355%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="60.8699%" y="133" width="0.2139%" height="15" fill="rgb(224,137,50)" fg:x="25331" fg:w="89"/><text x="61.1628%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="61.0837%" y="133" width="0.3869%" height="15" fill="rgb(242,15,9)" fg:x="25420" fg:w="161"/><text x="61.3767%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="60.7425%" y="149" width="1.2976%" height="15" fill="rgb(233,187,41)" fg:x="25278" fg:w="540"/><text x="61.0355%" y="159.50"></text></g><g><title>candid::types::internal::env_add (755 instructions, 1.81%)</title><rect x="60.7305%" y="165" width="1.8142%" height="15" fill="rgb(227,2,29)" fg:x="25273" fg:w="755"/><text x="61.0235%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="62.5448%" y="165" width="0.1826%" height="15" fill="rgb(222,70,3)" fg:x="26028" fg:w="76"/><text x="62.8377%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="62.7274%" y="149" width="0.0120%" height="15" fill="rgb(213,11,42)" fg:x="26104" fg:w="5"/><text x="63.0204%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="62.7394%" y="133" width="0.1274%" height="15" fill="rgb(225,150,9)" fg:x="26109" fg:w="53"/><text x="63.0324%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="62.8668%" y="133" width="0.2139%" height="15" fill="rgb(230,162,45)" fg:x="26162" fg:w="89"/><text x="63.1597%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="63.0806%" y="133" width="0.3869%" height="15" fill="rgb(222,14,52)" fg:x="26251" fg:w="161"/><text x="63.3736%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="62.7394%" y="149" width="1.2976%" height="15" fill="rgb(254,198,14)" fg:x="26109" fg:w="540"/><text x="63.0324%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="64.0370%" y="149" width="0.1634%" height="15" fill="rgb(220,217,30)" fg:x="26649" fg:w="68"/><text x="64.3300%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="64.2004%" y="133" width="0.1946%" height="15" fill="rgb(215,146,41)" fg:x="26717" fg:w="81"/><text x="64.4934%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="64.2004%" y="149" width="0.2595%" height="15" fill="rgb(217,27,36)" fg:x="26717" fg:w="108"/><text x="64.4934%" y="159.50"></text></g><g><title>candid::types::internal::env_add (889 instructions, 2.14%)</title><rect x="62.7274%" y="165" width="2.1362%" height="15" fill="rgb(219,218,39)" fg:x="26104" fg:w="889"/><text x="63.0204%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="64.8636%" y="117" width="0.1274%" height="15" fill="rgb(219,4,42)" fg:x="26993" fg:w="53"/><text x="65.1566%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="64.8636%" y="133" width="0.1898%" height="15" fill="rgb(249,119,36)" fg:x="26993" fg:w="79"/><text x="65.1566%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="65.5653%" y="117" width="0.1274%" height="15" fill="rgb(209,23,33)" fg:x="27285" fg:w="53"/><text x="65.8583%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="65.5653%" y="133" width="0.1898%" height="15" fill="rgb(211,10,0)" fg:x="27285" fg:w="79"/><text x="65.8583%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.40%)</title><rect x="64.8636%" y="149" width="1.4033%" height="15" fill="rgb(208,99,37)" fg:x="26993" fg:w="584"/><text x="65.1566%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="66.2670%" y="149" width="0.1970%" height="15" fill="rgb(213,132,31)" fg:x="27577" fg:w="82"/><text x="66.5599%" y="159.50"></text></g><g><title>memset (84 instructions, 0.20%)</title><rect x="66.4640%" y="149" width="0.2019%" height="15" fill="rgb(243,129,40)" fg:x="27659" fg:w="84"/><text x="66.7570%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="66.6659%" y="117" width="0.1274%" height="15" fill="rgb(210,66,33)" fg:x="27743" fg:w="53"/><text x="66.9588%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="66.6659%" y="133" width="0.1898%" height="15" fill="rgb(209,189,4)" fg:x="27743" fg:w="79"/><text x="66.9588%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="67.3675%" y="117" width="0.1274%" height="15" fill="rgb(214,107,37)" fg:x="28035" fg:w="53"/><text x="67.6605%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="67.3675%" y="133" width="0.1898%" height="15" fill="rgb(245,88,54)" fg:x="28035" fg:w="79"/><text x="67.6605%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="68.0692%" y="117" width="0.1274%" height="15" fill="rgb(205,146,20)" fg:x="28327" fg:w="53"/><text x="68.3622%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="68.1966%" y="117" width="0.3677%" height="15" fill="rgb(220,161,25)" fg:x="28380" fg:w="153"/><text x="68.4895%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="68.5642%" y="101" width="0.1274%" height="15" fill="rgb(215,152,15)" fg:x="28533" fg:w="53"/><text x="68.8572%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="68.5642%" y="117" width="0.1898%" height="15" fill="rgb(233,192,44)" fg:x="28533" fg:w="79"/><text x="68.8572%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.84%)</title><rect x="68.0692%" y="133" width="0.8434%" height="15" fill="rgb(240,170,46)" fg:x="28327" fg:w="351"/><text x="68.3622%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,148 instructions, 2.76%)</title><rect x="66.6659%" y="149" width="2.7586%" height="15" fill="rgb(207,104,33)" fg:x="27743" fg:w="1148"/><text x="66.9588%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="69.4245%" y="149" width="0.1946%" height="15" fill="rgb(219,21,39)" fg:x="28891" fg:w="81"/><text x="69.7175%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,798 instructions, 6.72%)</title><rect x="64.8636%" y="165" width="6.7235%" height="15" fill="rgb(214,133,29)" fg:x="26993" fg:w="2798"/><text x="65.1566%" y="175.50">candid:..</text></g><g><title>candid::types::CandidType::ty (5,362 instructions, 12.88%)</title><rect x="58.9595%" y="181" width="12.8848%" height="15" fill="rgb(226,93,6)" fg:x="24536" fg:w="5362"/><text x="59.2525%" y="191.50">candid::types::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="71.8443%" y="181" width="0.1898%" height="15" fill="rgb(252,222,34)" fg:x="29898" fg:w="79"/><text x="72.1373%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.0341%" y="165" width="0.0120%" height="15" fill="rgb(252,92,48)" fg:x="29977" fg:w="5"/><text x="72.3271%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="72.0461%" y="149" width="0.1274%" height="15" fill="rgb(245,223,24)" fg:x="29982" fg:w="53"/><text x="72.3391%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.64%)</title><rect x="72.1735%" y="149" width="0.6416%" height="15" fill="rgb(205,176,3)" fg:x="30035" fg:w="267"/><text x="72.4665%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="72.8151%" y="149" width="0.3869%" height="15" fill="rgb(235,151,15)" fg:x="30302" fg:w="161"/><text x="73.1081%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (718 instructions, 1.73%)</title><rect x="72.0461%" y="165" width="1.7253%" height="15" fill="rgb(237,209,11)" fg:x="29982" fg:w="718"/><text x="72.3391%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.97%)</title><rect x="73.7715%" y="165" width="0.9708%" height="15" fill="rgb(243,227,24)" fg:x="30700" fg:w="404"/><text x="74.0644%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="74.7423%" y="149" width="0.1946%" height="15" fill="rgb(239,193,16)" fg:x="31104" fg:w="81"/><text x="75.0352%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="74.7423%" y="165" width="0.2595%" height="15" fill="rgb(231,27,9)" fg:x="31104" fg:w="108"/><text x="75.0352%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,403 instructions, 3.37%)</title><rect x="72.0341%" y="181" width="3.3714%" height="15" fill="rgb(219,169,10)" fg:x="29977" fg:w="1403"/><text x="72.3271%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="75.4055%" y="133" width="0.1274%" height="15" fill="rgb(244,229,43)" fg:x="31380" fg:w="53"/><text x="75.6985%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="75.5329%" y="133" width="0.3677%" height="15" fill="rgb(254,38,20)" fg:x="31433" fg:w="153"/><text x="75.8258%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="75.9005%" y="117" width="0.1274%" height="15" fill="rgb(250,47,30)" fg:x="31586" fg:w="53"/><text x="76.1935%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="76.0904%" y="117" width="0.3677%" height="15" fill="rgb(224,124,36)" fg:x="31665" fg:w="153"/><text x="76.3833%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (258 instructions, 0.62%)</title><rect x="75.9005%" y="133" width="0.6200%" height="15" fill="rgb(246,68,51)" fg:x="31586" fg:w="258"/><text x="76.1935%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (542 instructions, 1.30%)</title><rect x="75.4055%" y="149" width="1.3024%" height="15" fill="rgb(253,43,49)" fg:x="31380" fg:w="542"/><text x="75.6985%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="77.2198%" y="133" width="0.1274%" height="15" fill="rgb(219,54,36)" fg:x="32135" fg:w="53"/><text x="77.5127%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="77.3471%" y="133" width="0.3677%" height="15" fill="rgb(227,133,34)" fg:x="32188" fg:w="153"/><text x="77.6401%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="77.7148%" y="117" width="0.1274%" height="15" fill="rgb(247,227,15)" fg:x="32341" fg:w="53"/><text x="78.0077%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="77.9046%" y="117" width="0.3677%" height="15" fill="rgb(229,96,14)" fg:x="32420" fg:w="153"/><text x="78.1976%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (258 instructions, 0.62%)</title><rect x="77.7148%" y="133" width="0.6200%" height="15" fill="rgb(220,79,17)" fg:x="32341" fg:w="258"/><text x="78.0077%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (542 instructions, 1.30%)</title><rect x="77.2198%" y="149" width="1.3024%" height="15" fill="rgb(205,131,53)" fg:x="32135" fg:w="542"/><text x="77.5127%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,510 instructions, 3.63%)</title><rect x="75.4055%" y="165" width="3.6285%" height="15" fill="rgb(209,50,29)" fg:x="31380" fg:w="1510"/><text x="75.6985%" y="175.50">cor..</text></g><g><title>candid::types::internal::env_id (1,787 instructions, 4.29%)</title><rect x="75.4055%" y="181" width="4.2941%" height="15" fill="rgb(245,86,46)" fg:x="31380" fg:w="1787"/><text x="75.6985%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="79.6996%" y="181" width="0.0793%" height="15" fill="rgb(235,66,46)" fg:x="33167" fg:w="33"/><text x="79.9926%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="79.7789%" y="165" width="0.1874%" height="15" fill="rgb(232,148,31)" fg:x="33200" fg:w="78"/><text x="80.0719%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="80.0312%" y="165" width="0.2884%" height="15" fill="rgb(217,149,8)" fg:x="33305" fg:w="120"/><text x="80.3242%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.61%)</title><rect x="79.7789%" y="181" width="0.6056%" height="15" fill="rgb(209,183,11)" fg:x="33200" fg:w="252"/><text x="80.0719%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.31%)</title><rect x="80.3845%" y="117" width="0.3148%" height="15" fill="rgb(208,55,20)" fg:x="33452" fg:w="131"/><text x="80.6774%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (208 instructions, 0.50%)</title><rect x="80.3845%" y="133" width="0.4998%" height="15" fill="rgb(218,39,14)" fg:x="33452" fg:w="208"/><text x="80.6774%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="80.8843%" y="133" width="0.0793%" height="15" fill="rgb(216,169,33)" fg:x="33660" fg:w="33"/><text x="81.1773%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (288 instructions, 0.69%)</title><rect x="80.3845%" y="149" width="0.6921%" height="15" fill="rgb(233,80,24)" fg:x="33452" fg:w="288"/><text x="80.6774%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.0765%" y="149" width="0.0264%" height="15" fill="rgb(213,179,31)" fg:x="33740" fg:w="11"/><text x="81.3695%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (351 instructions, 0.84%)</title><rect x="80.3845%" y="165" width="0.8434%" height="15" fill="rgb(209,19,5)" fg:x="33452" fg:w="351"/><text x="80.6774%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="81.2279%" y="149" width="0.1826%" height="15" fill="rgb(219,18,35)" fg:x="33803" fg:w="76"/><text x="81.5209%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="81.7566%" y="149" width="0.1754%" height="15" fill="rgb(209,169,16)" fg:x="34023" fg:w="73"/><text x="82.0495%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (437 instructions, 1.05%)</title><rect x="81.2279%" y="165" width="1.0501%" height="15" fill="rgb(245,90,51)" fg:x="33803" fg:w="437"/><text x="81.5209%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="82.2780%" y="165" width="0.0264%" height="15" fill="rgb(220,99,45)" fg:x="34240" fg:w="11"/><text x="82.5710%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="82.3045%" y="165" width="0.0264%" height="15" fill="rgb(249,89,25)" fg:x="34251" fg:w="11"/><text x="82.5974%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.28%)</title><rect x="82.3309%" y="149" width="0.2836%" height="15" fill="rgb(239,193,0)" fg:x="34262" fg:w="118"/><text x="82.6239%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="82.6144%" y="149" width="0.2163%" height="15" fill="rgb(231,126,1)" fg:x="34380" fg:w="90"/><text x="82.9074%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.26%)</title><rect x="82.8307%" y="149" width="0.2643%" height="15" fill="rgb(243,166,3)" fg:x="34470" fg:w="110"/><text x="83.1237%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="83.0950%" y="149" width="0.1322%" height="15" fill="rgb(223,22,34)" fg:x="34580" fg:w="55"/><text x="83.3880%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 instructions, 1.06%)</title><rect x="82.3309%" y="165" width="1.0645%" height="15" fill="rgb(251,52,51)" fg:x="34262" fg:w="443"/><text x="82.6239%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="83.3954%" y="149" width="0.0673%" height="15" fill="rgb(221,165,28)" fg:x="34705" fg:w="28"/><text x="83.6884%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="83.4627%" y="149" width="0.0360%" height="15" fill="rgb(218,121,47)" fg:x="34733" fg:w="15"/><text x="83.7557%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="83.4987%" y="149" width="0.0360%" height="15" fill="rgb(209,120,9)" fg:x="34748" fg:w="15"/><text x="83.7917%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="83.5348%" y="133" width="0.1706%" height="15" fill="rgb(236,68,12)" fg:x="34763" fg:w="71"/><text x="83.8278%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="83.7054%" y="133" width="0.1562%" height="15" fill="rgb(225,194,26)" fg:x="34834" fg:w="65"/><text x="83.9984%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="83.8616%" y="133" width="0.1586%" height="15" fill="rgb(231,84,39)" fg:x="34899" fg:w="66"/><text x="84.1546%" y="143.50"></text></g><g><title>binread::BinRead::read (246 instructions, 0.59%)</title><rect x="83.5348%" y="149" width="0.5911%" height="15" fill="rgb(210,11,45)" fg:x="34763" fg:w="246"/><text x="83.8278%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.12%)</title><rect x="84.1259%" y="149" width="0.1226%" height="15" fill="rgb(224,54,52)" fg:x="35009" fg:w="51"/><text x="84.4189%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.2485%" y="149" width="0.1826%" height="15" fill="rgb(238,102,14)" fg:x="35060" fg:w="76"/><text x="84.5414%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.25%)</title><rect x="84.4311%" y="149" width="0.2523%" height="15" fill="rgb(243,160,52)" fg:x="35136" fg:w="105"/><text x="84.7241%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.35%)</title><rect x="84.6834%" y="149" width="0.3460%" height="15" fill="rgb(216,114,19)" fg:x="35241" fg:w="144"/><text x="84.9764%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (812 instructions, 1.95%)</title><rect x="83.3954%" y="165" width="1.9512%" height="15" fill="rgb(244,166,37)" fg:x="34705" fg:w="812"/><text x="83.6884%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="85.3466%" y="165" width="0.0264%" height="15" fill="rgb(246,29,44)" fg:x="35517" fg:w="11"/><text x="85.6396%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="85.3731%" y="165" width="0.0264%" height="15" fill="rgb(215,56,53)" fg:x="35528" fg:w="11"/><text x="85.6660%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.3995%" y="149" width="0.1826%" height="15" fill="rgb(217,60,2)" fg:x="35539" fg:w="76"/><text x="85.6925%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="85.5821%" y="149" width="0.2163%" height="15" fill="rgb(207,26,24)" fg:x="35615" fg:w="90"/><text x="85.8751%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="85.7984%" y="149" width="0.0384%" height="15" fill="rgb(252,210,15)" fg:x="35705" fg:w="16"/><text x="86.0914%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.26%)</title><rect x="85.8368%" y="149" width="0.2643%" height="15" fill="rgb(253,209,26)" fg:x="35721" fg:w="110"/><text x="86.1298%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="86.1012%" y="149" width="0.1322%" height="15" fill="rgb(238,170,14)" fg:x="35831" fg:w="55"/><text x="86.3941%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 1.01%)</title><rect x="85.3995%" y="165" width="1.0141%" height="15" fill="rgb(216,178,15)" fg:x="35539" fg:w="422"/><text x="85.6925%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="86.4136%" y="165" width="0.0673%" height="15" fill="rgb(250,197,2)" fg:x="35961" fg:w="28"/><text x="86.7065%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="86.4808%" y="165" width="0.0360%" height="15" fill="rgb(212,70,42)" fg:x="35989" fg:w="15"/><text x="86.7738%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="86.5169%" y="165" width="0.0360%" height="15" fill="rgb(227,213,9)" fg:x="36004" fg:w="15"/><text x="86.8098%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="86.5529%" y="149" width="0.0120%" height="15" fill="rgb(245,99,25)" fg:x="36019" fg:w="5"/><text x="86.8459%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="86.5649%" y="149" width="0.1946%" height="15" fill="rgb(250,82,29)" fg:x="36024" fg:w="81"/><text x="86.8579%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="86.7596%" y="149" width="0.0120%" height="15" fill="rgb(241,226,54)" fg:x="36105" fg:w="5"/><text x="87.0526%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.30%)</title><rect x="86.7716%" y="149" width="0.3028%" height="15" fill="rgb(221,99,41)" fg:x="36110" fg:w="126"/><text x="87.0646%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.60%)</title><rect x="86.5529%" y="165" width="0.5959%" height="15" fill="rgb(213,90,21)" fg:x="36019" fg:w="248"/><text x="86.8459%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,816 instructions, 9.17%)</title><rect x="80.3845%" y="181" width="9.1698%" height="15" fill="rgb(205,208,24)" fg:x="33452" fg:w="3816"/><text x="80.6774%" y="191.50">subscriber:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="89.5542%" y="165" width="0.1946%" height="15" fill="rgb(246,31,12)" fg:x="37268" fg:w="81"/><text x="89.8472%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="89.7489%" y="165" width="0.1946%" height="15" fill="rgb(213,154,6)" fg:x="37349" fg:w="81"/><text x="90.0419%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.48%)</title><rect x="89.5542%" y="181" width="0.4830%" height="15" fill="rgb(222,163,29)" fg:x="37268" fg:w="201"/><text x="89.8472%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="90.0372%" y="181" width="0.0264%" height="15" fill="rgb(227,201,8)" fg:x="37469" fg:w="11"/><text x="90.3302%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="90.0637%" y="181" width="0.0264%" height="15" fill="rgb(233,9,32)" fg:x="37480" fg:w="11"/><text x="90.3566%" y="191.50"></text></g><g><title>memcpy (411 instructions, 0.99%)</title><rect x="90.0901%" y="181" width="0.9876%" height="15" fill="rgb(217,54,24)" fg:x="37491" fg:w="411"/><text x="90.3831%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="91.0777%" y="133" width="0.1946%" height="15" fill="rgb(235,192,0)" fg:x="37902" fg:w="81"/><text x="91.3707%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="91.2724%" y="117" width="0.1946%" height="15" fill="rgb(235,45,9)" fg:x="37983" fg:w="81"/><text x="91.5653%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.40%)</title><rect x="91.4670%" y="101" width="0.3965%" height="15" fill="rgb(246,42,40)" fg:x="38064" fg:w="165"/><text x="91.7600%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.46%)</title><rect x="91.4670%" y="117" width="0.4614%" height="15" fill="rgb(248,111,24)" fg:x="38064" fg:w="192"/><text x="91.7600%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="91.9284%" y="117" width="0.1946%" height="15" fill="rgb(249,65,22)" fg:x="38256" fg:w="81"/><text x="92.2214%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.1230%" y="117" width="0.0264%" height="15" fill="rgb(238,111,51)" fg:x="38337" fg:w="11"/><text x="92.4160%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="92.1495%" y="117" width="0.4037%" height="15" fill="rgb(250,118,22)" fg:x="38348" fg:w="168"/><text x="92.4424%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="92.5532%" y="117" width="0.1874%" height="15" fill="rgb(234,84,26)" fg:x="38516" fg:w="78"/><text x="92.8461%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.78%)</title><rect x="91.2724%" y="133" width="1.7758%" height="15" fill="rgb(243,172,12)" fg:x="37983" fg:w="739"/><text x="91.5653%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="93.0482%" y="117" width="0.1514%" height="15" fill="rgb(236,150,49)" fg:x="38722" fg:w="63"/><text x="93.3411%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (206 instructions, 0.50%)</title><rect x="93.0482%" y="133" width="0.4950%" height="15" fill="rgb(225,197,26)" fg:x="38722" fg:w="206"/><text x="93.3411%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,121 instructions, 2.69%)</title><rect x="91.0777%" y="149" width="2.6937%" height="15" fill="rgb(214,17,42)" fg:x="37902" fg:w="1121"/><text x="91.3707%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="93.7715%" y="149" width="0.2884%" height="15" fill="rgb(224,165,40)" fg:x="39023" fg:w="120"/><text x="94.0644%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="94.0598%" y="117" width="0.1322%" height="15" fill="rgb(246,100,4)" fg:x="39143" fg:w="55"/><text x="94.3528%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="94.1920%" y="117" width="0.1514%" height="15" fill="rgb(222,103,0)" fg:x="39198" fg:w="63"/><text x="94.4850%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (245 instructions, 0.59%)</title><rect x="94.0598%" y="133" width="0.5887%" height="15" fill="rgb(227,189,26)" fg:x="39143" fg:w="245"/><text x="94.3528%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (272 instructions, 0.65%)</title><rect x="94.0598%" y="149" width="0.6536%" height="15" fill="rgb(214,202,17)" fg:x="39143" fg:w="272"/><text x="94.3528%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.7134%" y="149" width="0.0264%" height="15" fill="rgb(229,111,3)" fg:x="39415" fg:w="11"/><text x="95.0064%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,566 instructions, 3.76%)</title><rect x="91.0777%" y="165" width="3.7631%" height="15" fill="rgb(229,172,15)" fg:x="37902" fg:w="1566"/><text x="91.3707%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,600 instructions, 3.84%)</title><rect x="91.0777%" y="181" width="3.8448%" height="15" fill="rgb(230,224,35)" fg:x="37902" fg:w="1600"/><text x="91.3707%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="94.9225%" y="181" width="0.2956%" height="15" fill="rgb(251,141,6)" fg:x="39502" fg:w="123"/><text x="95.2155%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.2181%" y="181" width="0.1322%" height="15" fill="rgb(225,208,6)" fg:x="39625" fg:w="55"/><text x="95.5110%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="95.3502%" y="149" width="0.0120%" height="15" fill="rgb(246,181,16)" fg:x="39680" fg:w="5"/><text x="95.6432%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.3622%" y="149" width="0.0264%" height="15" fill="rgb(227,129,36)" fg:x="39685" fg:w="11"/><text x="95.6552%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.3887%" y="149" width="0.0264%" height="15" fill="rgb(248,117,24)" fg:x="39696" fg:w="11"/><text x="95.6817%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.4151%" y="149" width="0.0264%" height="15" fill="rgb(214,185,35)" fg:x="39707" fg:w="11"/><text x="95.7081%" y="159.50"></text></g><g><title>memset (136 instructions, 0.33%)</title><rect x="95.4415%" y="149" width="0.3268%" height="15" fill="rgb(236,150,34)" fg:x="39718" fg:w="136"/><text x="95.7345%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (385 instructions, 0.93%)</title><rect x="95.3502%" y="165" width="0.9251%" height="15" fill="rgb(243,228,27)" fg:x="39680" fg:w="385"/><text x="95.6432%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="96.2754%" y="149" width="0.0769%" height="15" fill="rgb(245,77,44)" fg:x="40065" fg:w="32"/><text x="96.5684%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="96.3523%" y="101" width="0.1826%" height="15" fill="rgb(235,214,42)" fg:x="40097" fg:w="76"/><text x="96.6452%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="96.3523%" y="117" width="0.2667%" height="15" fill="rgb(221,74,3)" fg:x="40097" fg:w="111"/><text x="96.6452%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="96.3523%" y="133" width="0.4229%" height="15" fill="rgb(206,121,29)" fg:x="40097" fg:w="176"/><text x="96.6452%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="96.7752%" y="133" width="0.0264%" height="15" fill="rgb(249,131,53)" fg:x="40273" fg:w="11"/><text x="97.0682%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="96.8016%" y="133" width="0.0264%" height="15" fill="rgb(236,170,29)" fg:x="40284" fg:w="11"/><text x="97.0946%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (363 instructions, 0.87%)</title><rect x="96.3523%" y="149" width="0.8723%" height="15" fill="rgb(247,96,15)" fg:x="40097" fg:w="363"/><text x="96.6452%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.2246%" y="149" width="0.0721%" height="15" fill="rgb(211,210,7)" fg:x="40460" fg:w="30"/><text x="97.5175%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.2966%" y="149" width="0.0120%" height="15" fill="rgb(240,88,50)" fg:x="40490" fg:w="5"/><text x="97.5896%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (498 instructions, 1.20%)</title><rect x="96.2754%" y="165" width="1.1967%" height="15" fill="rgb(209,229,26)" fg:x="40065" fg:w="498"/><text x="96.5684%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.4721%" y="165" width="0.0120%" height="15" fill="rgb(210,68,23)" fg:x="40563" fg:w="5"/><text x="97.7650%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="97.4841%" y="165" width="0.1322%" height="15" fill="rgb(229,180,13)" fg:x="40568" fg:w="55"/><text x="97.7770%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (1,017 instructions, 2.44%)</title><rect x="95.3502%" y="181" width="2.4438%" height="15" fill="rgb(236,53,44)" fg:x="39680" fg:w="1017"/><text x="95.6432%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (41,127 instructions, 98.83%)</title><rect x="0.4181%" y="197" width="98.8273%" height="15" fill="rgb(244,214,29)" fg:x="174" fg:w="41127"/><text x="0.7111%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2455%" y="197" width="0.0288%" height="15" fill="rgb(220,75,29)" fg:x="41301" fg:w="12"/><text x="99.5384%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="99.2743%" y="197" width="0.1946%" height="15" fill="rgb(214,183,37)" fg:x="41313" fg:w="81"/><text x="99.5673%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="99.4689%" y="197" width="0.2956%" height="15" fill="rgb(239,117,29)" fg:x="41394" fg:w="123"/><text x="99.7619%" y="207.50"></text></g><g><title>all (41,615 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(237,171,35)" fg:x="0" fg:w="41615"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (41,615 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(229,178,53)" fg:x="0" fg:w="41615"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>