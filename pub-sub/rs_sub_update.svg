<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="52112"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="197" width="0.0461%" height="15" fill="rgb(226,144,34)" fg:x="0" fg:w="24"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.0461%" y="197" width="0.1574%" height="15" fill="rgb(213,23,19)" fg:x="24" fg:w="82"/><text x="0.3390%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2034%" y="197" width="0.1593%" height="15" fill="rgb(217,75,12)" fg:x="106" fg:w="83"/><text x="0.4964%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3627%" y="181" width="0.1593%" height="15" fill="rgb(224,159,17)" fg:x="189" fg:w="83"/><text x="0.6556%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5220%" y="165" width="0.1574%" height="15" fill="rgb(217,118,1)" fg:x="272" fg:w="82"/><text x="0.8149%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6793%" y="149" width="0.0115%" height="15" fill="rgb(232,180,48)" fg:x="354" fg:w="6"/><text x="0.9723%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="0.6793%" y="165" width="0.8443%" height="15" fill="rgb(230,27,33)" fg:x="354" fg:w="440"/><text x="0.9723%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="1.5236%" y="165" width="0.1823%" height="15" fill="rgb(205,31,21)" fg:x="794" fg:w="95"/><text x="1.8166%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7059%" y="165" width="0.1151%" height="15" fill="rgb(253,59,4)" fg:x="889" fg:w="60"/><text x="1.9989%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8211%" y="165" width="0.1151%" height="15" fill="rgb(224,201,9)" fg:x="949" fg:w="60"/><text x="2.1140%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9362%" y="165" width="0.1151%" height="15" fill="rgb(229,206,30)" fg:x="1009" fg:w="60"/><text x="2.2292%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0514%" y="165" width="0.1151%" height="15" fill="rgb(212,67,47)" fg:x="1069" fg:w="60"/><text x="2.3443%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.1665%" y="165" width="0.1574%" height="15" fill="rgb(211,96,50)" fg:x="1129" fg:w="82"/><text x="2.4595%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="2.3238%" y="165" width="0.1343%" height="15" fill="rgb(252,114,18)" fg:x="1211" fg:w="70"/><text x="2.6168%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4582%" y="149" width="0.0115%" height="15" fill="rgb(223,58,37)" fg:x="1281" fg:w="6"/><text x="2.7511%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="2.4582%" y="165" width="0.8443%" height="15" fill="rgb(237,70,4)" fg:x="1281" fg:w="440"/><text x="2.7511%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3025%" y="165" width="0.0365%" height="15" fill="rgb(244,85,46)" fg:x="1721" fg:w="19"/><text x="3.5955%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="3.3390%" y="149" width="0.1478%" height="15" fill="rgb(223,39,52)" fg:x="1740" fg:w="77"/><text x="3.6319%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.4867%" y="117" width="0.1286%" height="15" fill="rgb(218,200,14)" fg:x="1817" fg:w="67"/><text x="3.7797%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="3.4867%" y="133" width="0.1881%" height="15" fill="rgb(208,171,16)" fg:x="1817" fg:w="98"/><text x="3.7797%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.6748%" y="85" width="0.0211%" height="15" fill="rgb(234,200,18)" fg:x="1915" fg:w="11"/><text x="3.9677%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.6959%" y="69" width="0.0672%" height="15" fill="rgb(228,45,11)" fg:x="1926" fg:w="35"/><text x="3.9889%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="3.6959%" y="85" width="0.1267%" height="15" fill="rgb(237,182,11)" fg:x="1926" fg:w="66"/><text x="3.9889%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="3.6748%" y="101" width="0.2821%" height="15" fill="rgb(241,175,49)" fg:x="1915" fg:w="147"/><text x="3.9677%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="3.6748%" y="117" width="0.4068%" height="15" fill="rgb(247,38,35)" fg:x="1915" fg:w="212"/><text x="3.9677%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="3.6748%" y="133" width="0.4260%" height="15" fill="rgb(228,39,49)" fg:x="1915" fg:w="222"/><text x="3.9677%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="3.4867%" y="149" width="0.8846%" height="15" fill="rgb(226,101,26)" fg:x="1817" fg:w="461"/><text x="3.7797%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (683 instructions, 1.31%)</title><rect x="3.3390%" y="165" width="1.3106%" height="15" fill="rgb(206,141,19)" fg:x="1740" fg:w="683"/><text x="3.6319%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="4.6496%" y="165" width="0.1823%" height="15" fill="rgb(211,200,13)" fg:x="2423" fg:w="95"/><text x="4.9426%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="4.8319%" y="165" width="0.1650%" height="15" fill="rgb(241,121,6)" fg:x="2518" fg:w="86"/><text x="5.1249%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="4.9969%" y="149" width="0.1151%" height="15" fill="rgb(234,221,29)" fg:x="2604" fg:w="60"/><text x="5.2899%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="5.1121%" y="149" width="0.1574%" height="15" fill="rgb(229,136,5)" fg:x="2664" fg:w="82"/><text x="5.4050%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="5.2694%" y="133" width="0.2322%" height="15" fill="rgb(238,36,11)" fg:x="2746" fg:w="121"/><text x="5.5624%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="5.5016%" y="101" width="0.2514%" height="15" fill="rgb(251,55,41)" fg:x="2867" fg:w="131"/><text x="5.7946%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.31%)</title><rect x="5.5016%" y="117" width="0.3109%" height="15" fill="rgb(242,34,40)" fg:x="2867" fg:w="162"/><text x="5.7946%" y="127.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="5.8125%" y="37" width="0.2111%" height="15" fill="rgb(215,42,17)" fg:x="3029" fg:w="110"/><text x="6.1054%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="5.8125%" y="53" width="0.2974%" height="15" fill="rgb(207,44,46)" fg:x="3029" fg:w="155"/><text x="6.1054%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.47%)</title><rect x="5.8125%" y="69" width="0.4663%" height="15" fill="rgb(211,206,28)" fg:x="3029" fg:w="243"/><text x="6.1054%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="6.2788%" y="69" width="0.3070%" height="15" fill="rgb(237,167,16)" fg:x="3272" fg:w="160"/><text x="6.5718%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (445 instructions, 0.85%)</title><rect x="5.8125%" y="85" width="0.8539%" height="15" fill="rgb(233,66,6)" fg:x="3029" fg:w="445"/><text x="6.1054%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.6664%" y="53" width="0.0211%" height="15" fill="rgb(246,123,29)" fg:x="3474" fg:w="11"/><text x="6.9594%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.6875%" y="37" width="0.0672%" height="15" fill="rgb(209,62,40)" fg:x="3485" fg:w="35"/><text x="6.9805%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="6.6875%" y="53" width="0.1267%" height="15" fill="rgb(218,4,25)" fg:x="3485" fg:w="66"/><text x="6.9805%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="6.6664%" y="69" width="0.2821%" height="15" fill="rgb(253,91,49)" fg:x="3474" fg:w="147"/><text x="6.9594%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.41%)</title><rect x="6.6664%" y="85" width="0.4145%" height="15" fill="rgb(228,155,29)" fg:x="3474" fg:w="216"/><text x="6.9594%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="7.0809%" y="69" width="0.0979%" height="15" fill="rgb(243,57,37)" fg:x="3690" fg:w="51"/><text x="7.3739%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.16%)</title><rect x="7.0809%" y="85" width="0.1574%" height="15" fill="rgb(244,167,17)" fg:x="3690" fg:w="82"/><text x="7.3739%" y="95.50"></text></g><g><title>core::fmt::write (911 instructions, 1.75%)</title><rect x="5.8125%" y="101" width="1.7482%" height="15" fill="rgb(207,181,38)" fg:x="3029" fg:w="911"/><text x="6.1054%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (977 instructions, 1.87%)</title><rect x="5.8125%" y="117" width="1.8748%" height="15" fill="rgb(211,8,23)" fg:x="3029" fg:w="977"/><text x="6.1054%" y="127.50"></text></g><g><title>core::fmt::write (1,280 instructions, 2.46%)</title><rect x="5.5016%" y="133" width="2.4562%" height="15" fill="rgb(235,11,44)" fg:x="2867" fg:w="1280"/><text x="5.7946%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,546 instructions, 2.97%)</title><rect x="5.2694%" y="149" width="2.9667%" height="15" fill="rgb(248,18,52)" fg:x="2746" fg:w="1546"/><text x="5.5624%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="8.2361%" y="149" width="0.1593%" height="15" fill="rgb(208,4,7)" fg:x="4292" fg:w="83"/><text x="8.5291%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="8.3954%" y="149" width="0.1151%" height="15" fill="rgb(240,17,39)" fg:x="4375" fg:w="60"/><text x="8.6883%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.5105%" y="149" width="0.1458%" height="15" fill="rgb(207,170,3)" fg:x="4435" fg:w="76"/><text x="8.8035%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.6564%" y="117" width="0.1593%" height="15" fill="rgb(236,100,52)" fg:x="4511" fg:w="83"/><text x="8.9493%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="8.6564%" y="133" width="0.2418%" height="15" fill="rgb(246,78,51)" fg:x="4511" fg:w="126"/><text x="8.9493%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.40%)</title><rect x="8.6564%" y="149" width="0.3991%" height="15" fill="rgb(211,17,15)" fg:x="4511" fg:w="208"/><text x="8.9493%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="9.0555%" y="149" width="0.1151%" height="15" fill="rgb(209,59,46)" fg:x="4719" fg:w="60"/><text x="9.3485%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="9.1706%" y="149" width="0.1478%" height="15" fill="rgb(210,92,25)" fg:x="4779" fg:w="77"/><text x="9.4636%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="9.3184%" y="133" width="0.1746%" height="15" fill="rgb(238,174,52)" fg:x="4856" fg:w="91"/><text x="9.6114%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="9.4930%" y="101" width="0.2514%" height="15" fill="rgb(230,73,7)" fg:x="4947" fg:w="131"/><text x="9.7860%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.31%)</title><rect x="9.4930%" y="117" width="0.3109%" height="15" fill="rgb(243,124,40)" fg:x="4947" fg:w="162"/><text x="9.7860%" y="127.50"></text></g><g><title>__rust_realloc (86 instructions, 0.17%)</title><rect x="9.8039%" y="37" width="0.1650%" height="15" fill="rgb(244,170,11)" fg:x="5109" fg:w="86"/><text x="10.0969%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.25%)</title><rect x="9.8039%" y="53" width="0.2514%" height="15" fill="rgb(207,114,54)" fg:x="5109" fg:w="131"/><text x="10.0969%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.42%)</title><rect x="9.8039%" y="69" width="0.4202%" height="15" fill="rgb(205,42,20)" fg:x="5109" fg:w="219"/><text x="10.0969%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="10.2241%" y="69" width="0.3070%" height="15" fill="rgb(230,30,28)" fg:x="5328" fg:w="160"/><text x="10.5171%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 0.81%)</title><rect x="9.8039%" y="85" width="0.8079%" height="15" fill="rgb(205,73,54)" fg:x="5109" fg:w="421"/><text x="10.0969%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="10.6118%" y="53" width="0.0211%" height="15" fill="rgb(254,227,23)" fg:x="5530" fg:w="11"/><text x="10.9047%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="10.6329%" y="37" width="0.0672%" height="15" fill="rgb(228,202,34)" fg:x="5541" fg:w="35"/><text x="10.9258%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="10.6329%" y="53" width="0.1267%" height="15" fill="rgb(222,225,37)" fg:x="5541" fg:w="66"/><text x="10.9258%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="10.6118%" y="69" width="0.2821%" height="15" fill="rgb(221,14,54)" fg:x="5530" fg:w="147"/><text x="10.9047%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.41%)</title><rect x="10.6118%" y="85" width="0.4145%" height="15" fill="rgb(254,102,2)" fg:x="5530" fg:w="216"/><text x="10.9047%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="11.0263%" y="69" width="0.0979%" height="15" fill="rgb(232,104,17)" fg:x="5746" fg:w="51"/><text x="11.3192%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.16%)</title><rect x="11.0263%" y="85" width="0.1574%" height="15" fill="rgb(250,220,14)" fg:x="5746" fg:w="82"/><text x="11.3192%" y="95.50"></text></g><g><title>core::fmt::write (887 instructions, 1.70%)</title><rect x="9.8039%" y="101" width="1.7021%" height="15" fill="rgb(241,158,9)" fg:x="5109" fg:w="887"/><text x="10.0969%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (953 instructions, 1.83%)</title><rect x="9.8039%" y="117" width="1.8288%" height="15" fill="rgb(246,9,43)" fg:x="5109" fg:w="953"/><text x="10.0969%" y="127.50"></text></g><g><title>core::fmt::write (1,256 instructions, 2.41%)</title><rect x="9.4930%" y="133" width="2.4102%" height="15" fill="rgb(206,73,33)" fg:x="4947" fg:w="1256"/><text x="9.7860%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,492 instructions, 2.86%)</title><rect x="9.3184%" y="149" width="2.8631%" height="15" fill="rgb(222,79,8)" fg:x="4856" fg:w="1492"/><text x="9.6114%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="12.1815%" y="149" width="0.1593%" height="15" fill="rgb(234,8,54)" fg:x="6348" fg:w="83"/><text x="12.4744%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="12.3407%" y="149" width="0.1209%" height="15" fill="rgb(209,134,38)" fg:x="6431" fg:w="63"/><text x="12.6337%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="12.4616%" y="149" width="0.1458%" height="15" fill="rgb(230,127,29)" fg:x="6494" fg:w="76"/><text x="12.7546%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="12.6075%" y="149" width="0.1151%" height="15" fill="rgb(242,44,41)" fg:x="6570" fg:w="60"/><text x="12.9004%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="12.7226%" y="133" width="0.1574%" height="15" fill="rgb(222,56,43)" fg:x="6630" fg:w="82"/><text x="13.0156%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="12.8800%" y="133" width="0.1343%" height="15" fill="rgb(238,39,47)" fg:x="6712" fg:w="70"/><text x="13.1729%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="13.0143%" y="117" width="0.0115%" height="15" fill="rgb(226,79,43)" fg:x="6782" fg:w="6"/><text x="13.3072%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="13.0143%" y="133" width="0.8443%" height="15" fill="rgb(242,105,53)" fg:x="6782" fg:w="440"/><text x="13.3072%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="13.8586%" y="133" width="0.0365%" height="15" fill="rgb(251,132,46)" fg:x="7222" fg:w="19"/><text x="14.1516%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="13.8951%" y="117" width="0.1746%" height="15" fill="rgb(231,77,14)" fg:x="7241" fg:w="91"/><text x="14.1880%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="14.0697%" y="85" width="0.1286%" height="15" fill="rgb(240,135,9)" fg:x="7332" fg:w="67"/><text x="14.3627%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="14.0697%" y="101" width="0.1881%" height="15" fill="rgb(248,109,14)" fg:x="7332" fg:w="98"/><text x="14.3627%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="14.2578%" y="53" width="0.0211%" height="15" fill="rgb(227,146,52)" fg:x="7430" fg:w="11"/><text x="14.5507%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="14.2789%" y="37" width="0.0672%" height="15" fill="rgb(232,54,3)" fg:x="7441" fg:w="35"/><text x="14.5718%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="14.2789%" y="53" width="0.1267%" height="15" fill="rgb(229,201,43)" fg:x="7441" fg:w="66"/><text x="14.5718%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="14.2578%" y="69" width="0.2821%" height="15" fill="rgb(252,161,33)" fg:x="7430" fg:w="147"/><text x="14.5507%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="14.2578%" y="85" width="0.4068%" height="15" fill="rgb(226,146,40)" fg:x="7430" fg:w="212"/><text x="14.5507%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="14.2578%" y="101" width="0.4260%" height="15" fill="rgb(219,47,25)" fg:x="7430" fg:w="222"/><text x="14.5507%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="14.0697%" y="117" width="0.8846%" height="15" fill="rgb(250,135,13)" fg:x="7332" fg:w="461"/><text x="14.3627%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.34%)</title><rect x="13.8951%" y="133" width="1.3375%" height="15" fill="rgb(219,229,18)" fg:x="7241" fg:w="697"/><text x="14.1880%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="15.2326%" y="133" width="0.1823%" height="15" fill="rgb(217,152,27)" fg:x="7938" fg:w="95"/><text x="15.5255%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="15.4149%" y="133" width="0.1209%" height="15" fill="rgb(225,71,47)" fg:x="8033" fg:w="63"/><text x="15.7078%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="15.5358%" y="117" width="0.1574%" height="15" fill="rgb(220,139,14)" fg:x="8096" fg:w="82"/><text x="15.8287%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.56%)</title><rect x="15.6931%" y="117" width="0.5642%" height="15" fill="rgb(247,54,32)" fg:x="8178" fg:w="294"/><text x="15.9861%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="16.2573%" y="101" width="0.1574%" height="15" fill="rgb(252,131,39)" fg:x="8472" fg:w="82"/><text x="16.5503%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="16.4146%" y="101" width="0.1823%" height="15" fill="rgb(210,108,39)" fg:x="8554" fg:w="95"/><text x="16.7076%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.5969%" y="101" width="0.1458%" height="15" fill="rgb(205,23,29)" fg:x="8649" fg:w="76"/><text x="16.8899%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="16.2573%" y="117" width="0.6333%" height="15" fill="rgb(246,139,46)" fg:x="8472" fg:w="330"/><text x="16.5503%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.8905%" y="117" width="0.1458%" height="15" fill="rgb(250,81,26)" fg:x="8802" fg:w="76"/><text x="17.1835%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 instructions, 1.78%)</title><rect x="15.5358%" y="133" width="1.7846%" height="15" fill="rgb(214,104,7)" fg:x="8096" fg:w="930"/><text x="15.8287%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="17.3204%" y="133" width="0.1746%" height="15" fill="rgb(233,189,8)" fg:x="9026" fg:w="91"/><text x="17.6134%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="17.4950%" y="117" width="0.1574%" height="15" fill="rgb(228,141,17)" fg:x="9117" fg:w="82"/><text x="17.7880%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.56%)</title><rect x="17.6524%" y="117" width="0.5642%" height="15" fill="rgb(247,157,1)" fg:x="9199" fg:w="294"/><text x="17.9453%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="18.2165%" y="101" width="0.1574%" height="15" fill="rgb(249,225,5)" fg:x="9493" fg:w="82"/><text x="18.5095%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="18.3739%" y="101" width="0.1823%" height="15" fill="rgb(242,55,13)" fg:x="9575" fg:w="95"/><text x="18.6669%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.5562%" y="101" width="0.1458%" height="15" fill="rgb(230,49,50)" fg:x="9670" fg:w="76"/><text x="18.8492%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="18.2165%" y="117" width="0.6333%" height="15" fill="rgb(241,111,38)" fg:x="9493" fg:w="330"/><text x="18.5095%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.8498%" y="117" width="0.1458%" height="15" fill="rgb(252,155,4)" fg:x="9823" fg:w="76"/><text x="19.1428%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 instructions, 1.78%)</title><rect x="17.4950%" y="133" width="1.7846%" height="15" fill="rgb(212,69,32)" fg:x="9117" fg:w="930"/><text x="17.7880%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.05%)</title><rect x="19.2796%" y="133" width="0.0499%" height="15" fill="rgb(243,107,47)" fg:x="10047" fg:w="26"/><text x="19.5726%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="19.3295%" y="133" width="0.1458%" height="15" fill="rgb(247,130,12)" fg:x="10073" fg:w="76"/><text x="19.6225%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,922 instructions, 7.53%)</title><rect x="12.7226%" y="149" width="7.5261%" height="15" fill="rgb(233,74,16)" fg:x="6630" fg:w="3922"/><text x="13.0156%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="20.2506%" y="133" width="0.1650%" height="15" fill="rgb(208,58,18)" fg:x="10553" fg:w="86"/><text x="20.5436%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="20.4905%" y="133" width="0.1612%" height="15" fill="rgb(242,225,1)" fg:x="10678" fg:w="84"/><text x="20.7835%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (248 instructions, 0.48%)</title><rect x="20.2487%" y="149" width="0.4759%" height="15" fill="rgb(249,39,40)" fg:x="10552" fg:w="248"/><text x="20.5417%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="20.7246%" y="149" width="0.2495%" height="15" fill="rgb(207,72,44)" fg:x="10800" fg:w="130"/><text x="21.0176%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (9,070 instructions, 17.40%)</title><rect x="4.9969%" y="165" width="17.4048%" height="15" fill="rgb(215,193,12)" fg:x="2604" fg:w="9070"/><text x="5.2899%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.13%)</title><rect x="22.4018%" y="165" width="0.1343%" height="15" fill="rgb(248,41,39)" fg:x="11674" fg:w="70"/><text x="22.6947%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="22.5361%" y="165" width="0.1458%" height="15" fill="rgb(253,85,4)" fg:x="11744" fg:w="76"/><text x="22.8290%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="22.6819%" y="165" width="0.1343%" height="15" fill="rgb(243,70,31)" fg:x="11820" fg:w="70"/><text x="22.9749%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="22.8162%" y="133" width="0.0115%" height="15" fill="rgb(253,195,26)" fg:x="11890" fg:w="6"/><text x="23.1092%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="22.8162%" y="149" width="0.8443%" height="15" fill="rgb(243,42,11)" fg:x="11890" fg:w="440"/><text x="23.1092%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="23.6606%" y="149" width="0.0365%" height="15" fill="rgb(239,66,17)" fg:x="12330" fg:w="19"/><text x="23.9535%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.6970%" y="133" width="0.1574%" height="15" fill="rgb(217,132,21)" fg:x="12349" fg:w="82"/><text x="23.9900%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="23.8544%" y="101" width="0.1286%" height="15" fill="rgb(252,202,21)" fg:x="12431" fg:w="67"/><text x="24.1474%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="23.8544%" y="117" width="0.1881%" height="15" fill="rgb(233,98,36)" fg:x="12431" fg:w="98"/><text x="24.1474%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="24.0424%" y="69" width="0.0211%" height="15" fill="rgb(216,153,54)" fg:x="12529" fg:w="11"/><text x="24.3354%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="24.0636%" y="53" width="0.0672%" height="15" fill="rgb(250,99,7)" fg:x="12540" fg:w="35"/><text x="24.3565%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="24.0636%" y="69" width="0.1267%" height="15" fill="rgb(207,56,50)" fg:x="12540" fg:w="66"/><text x="24.3565%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="24.0424%" y="85" width="0.2821%" height="15" fill="rgb(244,61,34)" fg:x="12529" fg:w="147"/><text x="24.3354%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="24.0424%" y="101" width="0.4068%" height="15" fill="rgb(241,50,38)" fg:x="12529" fg:w="212"/><text x="24.3354%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="24.0424%" y="117" width="0.4260%" height="15" fill="rgb(212,166,30)" fg:x="12529" fg:w="222"/><text x="24.3354%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="23.8544%" y="133" width="0.8846%" height="15" fill="rgb(249,127,32)" fg:x="12431" fg:w="461"/><text x="24.1474%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 1.32%)</title><rect x="23.6970%" y="149" width="1.3202%" height="15" fill="rgb(209,103,0)" fg:x="12349" fg:w="688"/><text x="23.9900%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="25.0173%" y="149" width="0.1823%" height="15" fill="rgb(238,209,51)" fg:x="13037" fg:w="95"/><text x="25.3102%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="25.1996%" y="149" width="0.1650%" height="15" fill="rgb(237,56,23)" fg:x="13132" fg:w="86"/><text x="25.4925%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="25.3646%" y="133" width="0.1574%" height="15" fill="rgb(215,153,46)" fg:x="13218" fg:w="82"/><text x="25.6576%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="25.5220%" y="133" width="0.1823%" height="15" fill="rgb(224,49,31)" fg:x="13300" fg:w="95"/><text x="25.8149%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="25.7043%" y="133" width="0.1458%" height="15" fill="rgb(250,18,42)" fg:x="13395" fg:w="76"/><text x="25.9972%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="25.3646%" y="149" width="0.6333%" height="15" fill="rgb(215,176,39)" fg:x="13218" fg:w="330"/><text x="25.6576%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="25.9979%" y="149" width="0.2322%" height="15" fill="rgb(223,77,29)" fg:x="13548" fg:w="121"/><text x="26.2908%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,024 instructions, 3.88%)</title><rect x="22.8162%" y="165" width="3.8839%" height="15" fill="rgb(234,94,52)" fg:x="11890" fg:w="2024"/><text x="23.1092%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="26.7002%" y="165" width="0.1458%" height="15" fill="rgb(220,154,50)" fg:x="13914" fg:w="76"/><text x="26.9932%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="26.8460%" y="165" width="0.1593%" height="15" fill="rgb(212,11,10)" fg:x="13990" fg:w="83"/><text x="27.1390%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="27.0053%" y="149" width="0.1593%" height="15" fill="rgb(205,166,19)" fg:x="14073" fg:w="83"/><text x="27.2983%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.34%)</title><rect x="27.0053%" y="165" width="0.3435%" height="15" fill="rgb(244,198,16)" fg:x="14073" fg:w="179"/><text x="27.2983%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.3488%" y="133" width="0.1746%" height="15" fill="rgb(219,69,12)" fg:x="14252" fg:w="91"/><text x="27.6418%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="27.3488%" y="149" width="0.2571%" height="15" fill="rgb(245,30,7)" fg:x="14252" fg:w="134"/><text x="27.6418%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.41%)</title><rect x="27.3488%" y="165" width="0.4145%" height="15" fill="rgb(218,221,48)" fg:x="14252" fg:w="216"/><text x="27.6418%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.7633%" y="165" width="0.1746%" height="15" fill="rgb(216,66,15)" fg:x="14468" fg:w="91"/><text x="28.0562%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.9379%" y="149" width="0.1746%" height="15" fill="rgb(226,122,50)" fg:x="14559" fg:w="91"/><text x="28.2309%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.36%)</title><rect x="27.9379%" y="165" width="0.3588%" height="15" fill="rgb(239,156,16)" fg:x="14559" fg:w="187"/><text x="28.2309%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="28.2967%" y="165" width="0.1746%" height="15" fill="rgb(224,27,38)" fg:x="14746" fg:w="91"/><text x="28.5897%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="28.4714%" y="149" width="0.1574%" height="15" fill="rgb(224,39,27)" fg:x="14837" fg:w="82"/><text x="28.7643%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="28.6287%" y="117" width="0.1900%" height="15" fill="rgb(215,92,29)" fg:x="14919" fg:w="99"/><text x="28.9217%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.25%)</title><rect x="28.6287%" y="133" width="0.2495%" height="15" fill="rgb(207,159,16)" fg:x="14919" fg:w="130"/><text x="28.9217%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.8782%" y="85" width="0.0211%" height="15" fill="rgb(238,163,47)" fg:x="15049" fg:w="11"/><text x="29.1712%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.8993%" y="69" width="0.0672%" height="15" fill="rgb(219,91,49)" fg:x="15060" fg:w="35"/><text x="29.1923%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="28.8993%" y="85" width="0.1267%" height="15" fill="rgb(227,167,31)" fg:x="15060" fg:w="66"/><text x="29.1923%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="28.8782%" y="101" width="0.2821%" height="15" fill="rgb(234,80,54)" fg:x="15049" fg:w="147"/><text x="29.1712%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="28.8782%" y="117" width="0.4068%" height="15" fill="rgb(212,114,2)" fg:x="15049" fg:w="212"/><text x="29.1712%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.45%)</title><rect x="28.8782%" y="133" width="0.4452%" height="15" fill="rgb(234,50,24)" fg:x="15049" fg:w="232"/><text x="29.1712%" y="143.50"></text></g><g><title>core::fmt::write (503 instructions, 0.97%)</title><rect x="28.6287%" y="149" width="0.9652%" height="15" fill="rgb(221,68,8)" fg:x="14919" fg:w="503"/><text x="28.9217%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (730 instructions, 1.40%)</title><rect x="28.4714%" y="165" width="1.4008%" height="15" fill="rgb(254,180,31)" fg:x="14837" fg:w="730"/><text x="28.7643%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="29.8722%" y="149" width="0.1746%" height="15" fill="rgb(247,130,50)" fg:x="15567" fg:w="91"/><text x="30.1652%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (158 instructions, 0.30%)</title><rect x="29.8722%" y="165" width="0.3032%" height="15" fill="rgb(211,109,4)" fg:x="15567" fg:w="158"/><text x="30.1652%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.1754%" y="165" width="0.1957%" height="15" fill="rgb(238,50,21)" fg:x="15725" fg:w="102"/><text x="30.4684%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="30.3711%" y="165" width="0.0288%" height="15" fill="rgb(225,57,45)" fg:x="15827" fg:w="15"/><text x="30.6641%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.3999%" y="165" width="0.1957%" height="15" fill="rgb(209,196,50)" fg:x="15842" fg:w="102"/><text x="30.6929%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="30.5956%" y="149" width="0.1746%" height="15" fill="rgb(242,140,13)" fg:x="15944" fg:w="91"/><text x="30.8886%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (131 instructions, 0.25%)</title><rect x="30.5956%" y="165" width="0.2514%" height="15" fill="rgb(217,111,7)" fg:x="15944" fg:w="131"/><text x="30.8886%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.8470%" y="149" width="0.0595%" height="15" fill="rgb(253,193,51)" fg:x="16075" fg:w="31"/><text x="31.1400%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.9065%" y="149" width="0.0595%" height="15" fill="rgb(252,70,29)" fg:x="16106" fg:w="31"/><text x="31.1995%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (172 instructions, 0.33%)</title><rect x="30.8470%" y="165" width="0.3301%" height="15" fill="rgb(232,127,12)" fg:x="16075" fg:w="172"/><text x="31.1400%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="31.1771%" y="165" width="0.0345%" height="15" fill="rgb(211,180,21)" fg:x="16247" fg:w="18"/><text x="31.4700%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="31.3843%" y="149" width="0.1209%" height="15" fill="rgb(229,72,13)" fg:x="16355" fg:w="63"/><text x="31.6773%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (187 instructions, 0.36%)</title><rect x="31.2116%" y="165" width="0.3588%" height="15" fill="rgb(240,211,49)" fg:x="16265" fg:w="187"/><text x="31.5046%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="31.5705%" y="165" width="0.0288%" height="15" fill="rgb(219,149,40)" fg:x="16452" fg:w="15"/><text x="31.8634%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="31.5992%" y="165" width="0.0173%" height="15" fill="rgb(210,127,46)" fg:x="16467" fg:w="9"/><text x="31.8922%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="31.6165%" y="165" width="0.0345%" height="15" fill="rgb(220,106,7)" fg:x="16476" fg:w="18"/><text x="31.9095%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="31.6511%" y="133" width="0.1478%" height="15" fill="rgb(249,31,22)" fg:x="16494" fg:w="77"/><text x="31.9440%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="31.7988%" y="101" width="0.1900%" height="15" fill="rgb(253,1,49)" fg:x="16571" fg:w="99"/><text x="32.0918%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.25%)</title><rect x="31.7988%" y="117" width="0.2495%" height="15" fill="rgb(227,144,33)" fg:x="16571" fg:w="130"/><text x="32.0918%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="32.0483%" y="69" width="0.0211%" height="15" fill="rgb(249,163,44)" fg:x="16701" fg:w="11"/><text x="32.3412%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="32.0694%" y="53" width="0.0672%" height="15" fill="rgb(234,15,39)" fg:x="16712" fg:w="35"/><text x="32.3624%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="32.0694%" y="69" width="0.1267%" height="15" fill="rgb(207,66,16)" fg:x="16712" fg:w="66"/><text x="32.3624%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="32.0483%" y="85" width="0.2821%" height="15" fill="rgb(233,112,24)" fg:x="16701" fg:w="147"/><text x="32.3412%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="32.0483%" y="101" width="0.4068%" height="15" fill="rgb(230,90,22)" fg:x="16701" fg:w="212"/><text x="32.3412%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.45%)</title><rect x="32.0483%" y="117" width="0.4452%" height="15" fill="rgb(229,61,13)" fg:x="16701" fg:w="232"/><text x="32.3412%" y="127.50"></text></g><g><title>core::fmt::write (503 instructions, 0.97%)</title><rect x="31.7988%" y="133" width="0.9652%" height="15" fill="rgb(225,57,24)" fg:x="16571" fg:w="503"/><text x="32.0918%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (725 instructions, 1.39%)</title><rect x="31.6511%" y="149" width="1.3912%" height="15" fill="rgb(208,169,48)" fg:x="16494" fg:w="725"/><text x="31.9440%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.0423%" y="149" width="0.1746%" height="15" fill="rgb(244,218,51)" fg:x="17219" fg:w="91"/><text x="33.3353%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (942 instructions, 1.81%)</title><rect x="31.6511%" y="165" width="1.8076%" height="15" fill="rgb(214,148,10)" fg:x="16494" fg:w="942"/><text x="31.9440%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.4587%" y="133" width="0.1746%" height="15" fill="rgb(225,174,27)" fg:x="17436" fg:w="91"/><text x="33.7517%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="33.4587%" y="149" width="0.2571%" height="15" fill="rgb(230,96,26)" fg:x="17436" fg:w="134"/><text x="33.7517%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.41%)</title><rect x="33.4587%" y="165" width="0.4145%" height="15" fill="rgb(232,10,30)" fg:x="17436" fg:w="216"/><text x="33.7517%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.8732%" y="165" width="0.1746%" height="15" fill="rgb(222,8,50)" fg:x="17652" fg:w="91"/><text x="34.1662%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="34.0478%" y="165" width="0.1650%" height="15" fill="rgb(213,81,27)" fg:x="17743" fg:w="86"/><text x="34.3408%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.2128%" y="165" width="0.1746%" height="15" fill="rgb(245,50,10)" fg:x="17829" fg:w="91"/><text x="34.5058%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.3875%" y="165" width="0.1746%" height="15" fill="rgb(216,100,18)" fg:x="17920" fg:w="91"/><text x="34.6804%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="34.5621%" y="149" width="0.1650%" height="15" fill="rgb(236,147,54)" fg:x="18011" fg:w="86"/><text x="34.8551%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 instructions, 0.24%)</title><rect x="34.5621%" y="165" width="0.2437%" height="15" fill="rgb(205,143,26)" fg:x="18011" fg:w="127"/><text x="34.8551%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="34.8058%" y="149" width="0.1286%" height="15" fill="rgb(236,26,9)" fg:x="18138" fg:w="67"/><text x="35.0988%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (184 instructions, 0.35%)</title><rect x="34.8058%" y="165" width="0.3531%" height="15" fill="rgb(221,165,53)" fg:x="18138" fg:w="184"/><text x="35.0988%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="35.1589%" y="165" width="0.1650%" height="15" fill="rgb(214,110,17)" fg:x="18322" fg:w="86"/><text x="35.4519%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="35.3239%" y="165" width="0.8213%" height="15" fill="rgb(237,197,12)" fg:x="18408" fg:w="428"/><text x="35.6169%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="36.1452%" y="165" width="0.8213%" height="15" fill="rgb(205,84,17)" fg:x="18836" fg:w="428"/><text x="36.4382%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (21,086 instructions, 40.46%)</title><rect x="0.5220%" y="181" width="40.4628%" height="15" fill="rgb(237,18,45)" fg:x="272" fg:w="21086"/><text x="0.8149%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (380 instructions, 0.73%)</title><rect x="40.9848%" y="181" width="0.7292%" height="15" fill="rgb(221,87,14)" fg:x="21358" fg:w="380"/><text x="41.2778%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="41.7140%" y="165" width="0.0269%" height="15" fill="rgb(238,186,15)" fg:x="21738" fg:w="14"/><text x="42.0070%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.12%)</title><rect x="41.7140%" y="181" width="0.1209%" height="15" fill="rgb(208,115,11)" fg:x="21738" fg:w="63"/><text x="42.0070%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="41.8349%" y="165" width="0.1190%" height="15" fill="rgb(254,175,0)" fg:x="21801" fg:w="62"/><text x="42.1279%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.35%)</title><rect x="41.8349%" y="181" width="0.3492%" height="15" fill="rgb(227,24,42)" fg:x="21801" fg:w="182"/><text x="42.1279%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="42.1841%" y="165" width="0.0269%" height="15" fill="rgb(223,211,37)" fg:x="21983" fg:w="14"/><text x="42.4771%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="42.2110%" y="149" width="0.1132%" height="15" fill="rgb(235,49,27)" fg:x="21997" fg:w="59"/><text x="42.5040%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="42.3242%" y="149" width="0.5335%" height="15" fill="rgb(254,97,51)" fg:x="22056" fg:w="278"/><text x="42.6172%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="42.8577%" y="149" width="0.3320%" height="15" fill="rgb(249,51,40)" fg:x="22334" fg:w="173"/><text x="43.1507%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.46%)</title><rect x="42.2110%" y="165" width="1.4642%" height="15" fill="rgb(210,128,45)" fg:x="21997" fg:w="763"/><text x="42.5040%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,005 instructions, 1.93%)</title><rect x="42.1841%" y="181" width="1.9285%" height="15" fill="rgb(224,137,50)" fg:x="21983" fg:w="1005"/><text x="42.4771%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="44.1127%" y="181" width="0.1574%" height="15" fill="rgb(242,15,9)" fg:x="22988" fg:w="82"/><text x="44.4056%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.2700%" y="181" width="0.1593%" height="15" fill="rgb(233,187,41)" fg:x="23070" fg:w="83"/><text x="44.5630%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="44.4293%" y="181" width="0.1574%" height="15" fill="rgb(227,2,29)" fg:x="23153" fg:w="82"/><text x="44.7223%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="44.5867%" y="149" width="0.0269%" height="15" fill="rgb(222,70,3)" fg:x="23235" fg:w="14"/><text x="44.8796%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="44.6135%" y="133" width="0.1132%" height="15" fill="rgb(213,11,42)" fg:x="23249" fg:w="59"/><text x="44.9065%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="44.7267%" y="133" width="0.6102%" height="15" fill="rgb(225,150,9)" fg:x="23308" fg:w="318"/><text x="45.0197%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="45.3370%" y="133" width="0.1497%" height="15" fill="rgb(230,162,45)" fg:x="23626" fg:w="78"/><text x="45.6299%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="44.6135%" y="149" width="1.3586%" height="15" fill="rgb(222,14,52)" fg:x="23249" fg:w="708"/><text x="44.9065%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.64%)</title><rect x="44.5867%" y="165" width="1.6388%" height="15" fill="rgb(254,198,14)" fg:x="23235" fg:w="854"/><text x="44.8796%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="46.2254%" y="165" width="0.1593%" height="15" fill="rgb(220,217,30)" fg:x="24089" fg:w="83"/><text x="46.5184%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="46.3847%" y="149" width="0.0269%" height="15" fill="rgb(215,146,41)" fg:x="24172" fg:w="14"/><text x="46.6777%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="46.4116%" y="133" width="0.1132%" height="15" fill="rgb(217,27,36)" fg:x="24186" fg:w="59"/><text x="46.7045%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="46.5248%" y="133" width="0.6102%" height="15" fill="rgb(219,218,39)" fg:x="24245" fg:w="318"/><text x="46.8178%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="47.1350%" y="133" width="0.1497%" height="15" fill="rgb(219,4,42)" fg:x="24563" fg:w="78"/><text x="47.4280%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="46.4116%" y="149" width="1.3586%" height="15" fill="rgb(249,119,36)" fg:x="24186" fg:w="708"/><text x="46.7045%" y="159.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.82%)</title><rect x="46.3847%" y="165" width="1.8230%" height="15" fill="rgb(209,23,33)" fg:x="24172" fg:w="950"/><text x="46.6777%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="48.2077%" y="165" width="0.1593%" height="15" fill="rgb(211,10,0)" fg:x="25122" fg:w="83"/><text x="48.5007%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="48.3670%" y="149" width="0.0269%" height="15" fill="rgb(208,99,37)" fg:x="25205" fg:w="14"/><text x="48.6599%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="48.3938%" y="133" width="0.1132%" height="15" fill="rgb(213,132,31)" fg:x="25219" fg:w="59"/><text x="48.6868%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="48.5071%" y="133" width="0.6102%" height="15" fill="rgb(243,129,40)" fg:x="25278" fg:w="318"/><text x="48.8000%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="49.1173%" y="133" width="0.1497%" height="15" fill="rgb(210,66,33)" fg:x="25596" fg:w="78"/><text x="49.4103%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="48.3938%" y="149" width="1.3586%" height="15" fill="rgb(209,189,4)" fg:x="25219" fg:w="708"/><text x="48.6868%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.94%)</title><rect x="49.7525%" y="149" width="0.9422%" height="15" fill="rgb(214,107,37)" fg:x="25927" fg:w="491"/><text x="50.0454%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="50.6947%" y="133" width="0.1650%" height="15" fill="rgb(245,88,54)" fg:x="26418" fg:w="86"/><text x="50.9876%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="50.6947%" y="149" width="0.2322%" height="15" fill="rgb(205,146,20)" fg:x="26418" fg:w="121"/><text x="50.9876%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 2.93%)</title><rect x="48.3670%" y="165" width="2.9341%" height="15" fill="rgb(220,161,25)" fg:x="25205" fg:w="1529"/><text x="48.6599%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="51.3010%" y="117" width="0.1132%" height="15" fill="rgb(215,152,15)" fg:x="26734" fg:w="59"/><text x="51.5940%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="51.3010%" y="133" width="0.1804%" height="15" fill="rgb(233,192,44)" fg:x="26734" fg:w="94"/><text x="51.5940%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.60%)</title><rect x="51.3010%" y="149" width="0.6045%" height="15" fill="rgb(240,170,46)" fg:x="26734" fg:w="315"/><text x="51.5940%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (11 instructions, 0.02%)</title><rect x="51.9055%" y="149" width="0.0211%" height="15" fill="rgb(207,104,33)" fg:x="27049" fg:w="11"/><text x="52.1985%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (18 instructions, 0.03%)</title><rect x="51.9266%" y="149" width="0.0345%" height="15" fill="rgb(219,21,39)" fg:x="27060" fg:w="18"/><text x="52.2196%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="51.9612%" y="149" width="0.0249%" height="15" fill="rgb(214,133,29)" fg:x="27078" fg:w="13"/><text x="52.2541%" y="159.50"></text></g><g><title>candid::types::internal::env_id (604 instructions, 1.16%)</title><rect x="51.3010%" y="165" width="1.1590%" height="15" fill="rgb(226,93,6)" fg:x="26734" fg:w="604"/><text x="51.5940%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,232 instructions, 8.12%)</title><rect x="44.5867%" y="181" width="8.1210%" height="15" fill="rgb(252,222,34)" fg:x="23235" fg:w="4232"/><text x="44.8796%" y="191.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.7076%" y="181" width="0.1593%" height="15" fill="rgb(252,92,48)" fg:x="27467" fg:w="83"/><text x="53.0006%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.8669%" y="181" width="0.1593%" height="15" fill="rgb(245,223,24)" fg:x="27550" fg:w="83"/><text x="53.1599%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="53.0262%" y="149" width="0.0269%" height="15" fill="rgb(205,176,3)" fg:x="27633" fg:w="14"/><text x="53.3191%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="53.0530%" y="133" width="0.1132%" height="15" fill="rgb(235,151,15)" fg:x="27647" fg:w="59"/><text x="53.3460%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="53.1663%" y="133" width="0.1804%" height="15" fill="rgb(237,209,11)" fg:x="27706" fg:w="94"/><text x="53.4592%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="53.3466%" y="133" width="0.3320%" height="15" fill="rgb(243,227,24)" fg:x="27800" fg:w="173"/><text x="53.6396%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="53.0530%" y="149" width="1.1111%" height="15" fill="rgb(239,193,16)" fg:x="27647" fg:w="579"/><text x="53.3460%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (725 instructions, 1.39%)</title><rect x="53.0262%" y="165" width="1.3912%" height="15" fill="rgb(231,27,9)" fg:x="27633" fg:w="725"/><text x="53.3191%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="54.4174%" y="165" width="0.1574%" height="15" fill="rgb(219,169,10)" fg:x="28358" fg:w="82"/><text x="54.7104%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="54.5748%" y="149" width="0.0269%" height="15" fill="rgb(244,229,43)" fg:x="28440" fg:w="14"/><text x="54.8677%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="54.6016%" y="133" width="0.1132%" height="15" fill="rgb(254,38,20)" fg:x="28454" fg:w="59"/><text x="54.8946%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="54.7148%" y="133" width="0.1804%" height="15" fill="rgb(250,47,30)" fg:x="28513" fg:w="94"/><text x="55.0078%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="54.8952%" y="133" width="0.3320%" height="15" fill="rgb(224,124,36)" fg:x="28607" fg:w="173"/><text x="55.1882%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="54.6016%" y="149" width="1.1111%" height="15" fill="rgb(246,68,51)" fg:x="28454" fg:w="579"/><text x="54.8946%" y="159.50"></text></g><g><title>candid::types::internal::env_add (821 instructions, 1.58%)</title><rect x="54.5748%" y="165" width="1.5755%" height="15" fill="rgb(253,43,49)" fg:x="28440" fg:w="821"/><text x="54.8677%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="56.1502%" y="165" width="0.1593%" height="15" fill="rgb(219,54,36)" fg:x="29261" fg:w="83"/><text x="56.4432%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="56.3095%" y="149" width="0.0269%" height="15" fill="rgb(227,133,34)" fg:x="29344" fg:w="14"/><text x="56.6025%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="56.3364%" y="133" width="0.1132%" height="15" fill="rgb(247,227,15)" fg:x="29358" fg:w="59"/><text x="56.6293%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="56.4496%" y="133" width="0.1804%" height="15" fill="rgb(229,96,14)" fg:x="29417" fg:w="94"/><text x="56.7425%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="56.6300%" y="133" width="0.3320%" height="15" fill="rgb(220,79,17)" fg:x="29511" fg:w="173"/><text x="56.9229%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="56.3364%" y="149" width="1.1111%" height="15" fill="rgb(205,131,53)" fg:x="29358" fg:w="579"/><text x="56.6293%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="57.4474%" y="149" width="0.1746%" height="15" fill="rgb(209,50,29)" fg:x="29937" fg:w="91"/><text x="57.7404%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="57.6220%" y="149" width="0.1785%" height="15" fill="rgb(245,86,46)" fg:x="30028" fg:w="93"/><text x="57.9150%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="57.8005%" y="133" width="0.1132%" height="15" fill="rgb(235,66,46)" fg:x="30121" fg:w="59"/><text x="58.0935%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="57.9137%" y="133" width="0.6102%" height="15" fill="rgb(232,148,31)" fg:x="30180" fg:w="318"/><text x="58.2067%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="58.5239%" y="133" width="0.1497%" height="15" fill="rgb(217,149,8)" fg:x="30498" fg:w="78"/><text x="58.8169%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="59.1591%" y="133" width="0.1132%" height="15" fill="rgb(209,183,11)" fg:x="30829" fg:w="59"/><text x="59.4521%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="59.2723%" y="133" width="0.5335%" height="15" fill="rgb(208,55,20)" fg:x="30888" fg:w="278"/><text x="59.5653%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="59.8058%" y="133" width="0.3320%" height="15" fill="rgb(218,39,14)" fg:x="31166" fg:w="173"/><text x="60.0988%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="60.6233%" y="133" width="0.1132%" height="15" fill="rgb(216,169,33)" fg:x="31592" fg:w="59"/><text x="60.9162%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="60.7365%" y="133" width="0.1804%" height="15" fill="rgb(233,80,24)" fg:x="31651" fg:w="94"/><text x="61.0295%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="60.9169%" y="133" width="0.3320%" height="15" fill="rgb(213,179,31)" fg:x="31745" fg:w="173"/><text x="61.2098%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,050 instructions, 3.93%)</title><rect x="57.8005%" y="149" width="3.9338%" height="15" fill="rgb(209,19,5)" fg:x="30121" fg:w="2050"/><text x="58.0935%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="61.7343%" y="149" width="0.1650%" height="15" fill="rgb(219,18,35)" fg:x="32171" fg:w="86"/><text x="62.0273%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="61.8994%" y="149" width="0.1478%" height="15" fill="rgb(209,169,16)" fg:x="32257" fg:w="77"/><text x="62.1923%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="62.0471%" y="133" width="0.1650%" height="15" fill="rgb(245,90,51)" fg:x="32334" fg:w="86"/><text x="62.3401%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="62.0471%" y="149" width="0.2322%" height="15" fill="rgb(220,99,45)" fg:x="32334" fg:w="121"/><text x="62.3401%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,813 instructions, 7.32%)</title><rect x="56.3095%" y="165" width="7.3169%" height="15" fill="rgb(249,89,25)" fg:x="29344" fg:w="3813"/><text x="56.6025%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="63.6264%" y="117" width="0.1132%" height="15" fill="rgb(239,193,0)" fg:x="33157" fg:w="59"/><text x="63.9194%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="63.6264%" y="133" width="0.1804%" height="15" fill="rgb(231,126,1)" fg:x="33157" fg:w="94"/><text x="63.9194%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="64.2309%" y="117" width="0.1132%" height="15" fill="rgb(243,166,3)" fg:x="33472" fg:w="59"/><text x="64.5239%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="64.2309%" y="133" width="0.1804%" height="15" fill="rgb(223,22,34)" fg:x="33472" fg:w="94"/><text x="64.5239%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (630 instructions, 1.21%)</title><rect x="63.6264%" y="149" width="1.2089%" height="15" fill="rgb(251,52,51)" fg:x="33157" fg:w="630"/><text x="63.9194%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="64.8354%" y="149" width="0.1746%" height="15" fill="rgb(221,165,28)" fg:x="33787" fg:w="91"/><text x="65.1283%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="65.0100%" y="149" width="0.1785%" height="15" fill="rgb(218,121,47)" fg:x="33878" fg:w="93"/><text x="65.3029%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.1884%" y="117" width="0.1132%" height="15" fill="rgb(209,120,9)" fg:x="33971" fg:w="59"/><text x="65.4814%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="65.1884%" y="133" width="0.1804%" height="15" fill="rgb(236,68,12)" fg:x="33971" fg:w="94"/><text x="65.4814%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.7929%" y="117" width="0.1132%" height="15" fill="rgb(225,194,26)" fg:x="34286" fg:w="59"/><text x="66.0859%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="65.7929%" y="133" width="0.1804%" height="15" fill="rgb(231,84,39)" fg:x="34286" fg:w="94"/><text x="66.0859%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.3974%" y="117" width="0.1132%" height="15" fill="rgb(210,11,45)" fg:x="34601" fg:w="59"/><text x="66.6903%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="66.5106%" y="117" width="0.3147%" height="15" fill="rgb(224,54,52)" fg:x="34660" fg:w="164"/><text x="66.8036%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.8253%" y="101" width="0.1132%" height="15" fill="rgb(238,102,14)" fg:x="34824" fg:w="59"/><text x="67.1183%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="66.8253%" y="117" width="0.1785%" height="15" fill="rgb(243,160,52)" fg:x="34824" fg:w="93"/><text x="67.1183%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.78%)</title><rect x="66.3974%" y="133" width="0.7772%" height="15" fill="rgb(216,114,19)" fg:x="34601" fg:w="405"/><text x="66.6903%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,256 instructions, 2.41%)</title><rect x="65.1884%" y="149" width="2.4102%" height="15" fill="rgb(244,166,37)" fg:x="33971" fg:w="1256"/><text x="65.4814%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="67.5986%" y="149" width="0.1612%" height="15" fill="rgb(246,29,44)" fg:x="35227" fg:w="84"/><text x="67.8916%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,993 instructions, 5.74%)</title><rect x="63.6264%" y="165" width="5.7434%" height="15" fill="rgb(215,56,53)" fg:x="33157" fg:w="2993"/><text x="63.9194%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (8,646 instructions, 16.59%)</title><rect x="53.0262%" y="181" width="16.5912%" height="15" fill="rgb(217,60,2)" fg:x="27633" fg:w="8646"/><text x="53.3191%" y="191.50">candid::types::Candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="69.6174%" y="181" width="0.1574%" height="15" fill="rgb(207,26,24)" fg:x="36279" fg:w="82"/><text x="69.9103%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="69.7747%" y="165" width="0.0269%" height="15" fill="rgb(252,210,15)" fg:x="36361" fg:w="14"/><text x="70.0677%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="69.8016%" y="149" width="0.1132%" height="15" fill="rgb(253,209,26)" fg:x="36375" fg:w="59"/><text x="70.0945%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="69.9148%" y="149" width="0.5335%" height="15" fill="rgb(238,170,14)" fg:x="36434" fg:w="278"/><text x="70.2078%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="70.4483%" y="149" width="0.3320%" height="15" fill="rgb(216,178,15)" fg:x="36712" fg:w="173"/><text x="70.7412%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.46%)</title><rect x="69.8016%" y="165" width="1.4642%" height="15" fill="rgb(250,197,2)" fg:x="36375" fg:w="763"/><text x="70.0945%" y="175.50"></text></g><g><title>memcmp (445 instructions, 0.85%)</title><rect x="71.2657%" y="165" width="0.8539%" height="15" fill="rgb(212,70,42)" fg:x="37138" fg:w="445"/><text x="71.5587%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="72.1197%" y="149" width="0.1650%" height="15" fill="rgb(227,213,9)" fg:x="37583" fg:w="86"/><text x="72.4126%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="72.1197%" y="165" width="0.2322%" height="15" fill="rgb(245,99,25)" fg:x="37583" fg:w="121"/><text x="72.4126%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,538 instructions, 2.95%)</title><rect x="69.7747%" y="181" width="2.9513%" height="15" fill="rgb(250,82,29)" fg:x="36361" fg:w="1538"/><text x="70.0677%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.7261%" y="133" width="0.1132%" height="15" fill="rgb(241,226,54)" fg:x="37899" fg:w="59"/><text x="73.0190%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="72.8393%" y="133" width="0.3147%" height="15" fill="rgb(221,99,41)" fg:x="37958" fg:w="164"/><text x="73.1322%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="73.1540%" y="117" width="0.1132%" height="15" fill="rgb(213,90,21)" fg:x="38122" fg:w="59"/><text x="73.4469%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="73.3324%" y="117" width="0.3147%" height="15" fill="rgb(205,208,24)" fg:x="38215" fg:w="164"/><text x="73.6254%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="73.1540%" y="133" width="0.5584%" height="15" fill="rgb(246,31,12)" fg:x="38122" fg:w="291"/><text x="73.4469%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (623 instructions, 1.20%)</title><rect x="72.7261%" y="149" width="1.1955%" height="15" fill="rgb(213,154,6)" fg:x="37899" fg:w="623"/><text x="73.0190%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.3456%" y="133" width="0.1132%" height="15" fill="rgb(222,163,29)" fg:x="38743" fg:w="59"/><text x="74.6386%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.4589%" y="133" width="0.3147%" height="15" fill="rgb(227,201,8)" fg:x="38802" fg:w="164"/><text x="74.7518%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.7736%" y="117" width="0.1132%" height="15" fill="rgb(233,9,32)" fg:x="38966" fg:w="59"/><text x="75.0665%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.9520%" y="117" width="0.3147%" height="15" fill="rgb(217,54,24)" fg:x="39059" fg:w="164"/><text x="75.2450%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="74.7736%" y="133" width="0.5584%" height="15" fill="rgb(235,192,0)" fg:x="38966" fg:w="291"/><text x="75.0665%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (623 instructions, 1.20%)</title><rect x="74.3456%" y="149" width="1.1955%" height="15" fill="rgb(235,45,9)" fg:x="38743" fg:w="623"/><text x="74.6386%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,688 instructions, 3.24%)</title><rect x="72.7261%" y="165" width="3.2392%" height="15" fill="rgb(246,42,40)" fg:x="37899" fg:w="1688"/><text x="73.0190%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (2,018 instructions, 3.87%)</title><rect x="72.7261%" y="181" width="3.8724%" height="15" fill="rgb(248,111,24)" fg:x="37899" fg:w="2018"/><text x="73.0190%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="76.5985%" y="181" width="0.1017%" height="15" fill="rgb(249,65,22)" fg:x="39917" fg:w="53"/><text x="76.8914%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="76.7002%" y="165" width="0.1612%" height="15" fill="rgb(238,111,51)" fg:x="39970" fg:w="84"/><text x="76.9932%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="76.9285%" y="165" width="0.2495%" height="15" fill="rgb(250,118,22)" fg:x="40089" fg:w="130"/><text x="77.2215%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (284 instructions, 0.54%)</title><rect x="76.7002%" y="181" width="0.5450%" height="15" fill="rgb(234,84,26)" fg:x="39970" fg:w="284"/><text x="76.9932%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.28%)</title><rect x="77.2452%" y="117" width="0.2802%" height="15" fill="rgb(243,172,12)" fg:x="40254" fg:w="146"/><text x="77.5381%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (254 instructions, 0.49%)</title><rect x="77.2452%" y="133" width="0.4874%" height="15" fill="rgb(236,150,49)" fg:x="40254" fg:w="254"/><text x="77.5381%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (342 instructions, 0.66%)</title><rect x="77.2452%" y="149" width="0.6563%" height="15" fill="rgb(225,197,26)" fg:x="40254" fg:w="342"/><text x="77.5381%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="77.9014%" y="149" width="0.0249%" height="15" fill="rgb(214,17,42)" fg:x="40596" fg:w="13"/><text x="78.1944%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (423 instructions, 0.81%)</title><rect x="77.2452%" y="165" width="0.8117%" height="15" fill="rgb(224,165,40)" fg:x="40254" fg:w="423"/><text x="77.5381%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.0569%" y="149" width="0.1593%" height="15" fill="rgb(246,100,4)" fg:x="40677" fg:w="83"/><text x="78.3498%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="78.5309%" y="149" width="0.1478%" height="15" fill="rgb(222,103,0)" fg:x="40924" fg:w="77"/><text x="78.8238%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (488 instructions, 0.94%)</title><rect x="78.0569%" y="165" width="0.9364%" height="15" fill="rgb(227,189,26)" fg:x="40677" fg:w="488"/><text x="78.3498%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="78.9933%" y="165" width="0.0249%" height="15" fill="rgb(214,202,17)" fg:x="41165" fg:w="13"/><text x="79.2863%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="79.0183%" y="165" width="0.0249%" height="15" fill="rgb(229,111,3)" fg:x="41178" fg:w="13"/><text x="79.3112%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="79.0432%" y="149" width="0.2322%" height="15" fill="rgb(229,172,15)" fg:x="41191" fg:w="121"/><text x="79.3362%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="79.2754%" y="149" width="0.1900%" height="15" fill="rgb(230,224,35)" fg:x="41312" fg:w="99"/><text x="79.5684%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="79.4654%" y="149" width="0.2360%" height="15" fill="rgb(251,141,6)" fg:x="41411" fg:w="123"/><text x="79.7584%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="79.7014%" y="149" width="0.1151%" height="15" fill="rgb(225,208,6)" fg:x="41534" fg:w="60"/><text x="79.9944%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (500 instructions, 0.96%)</title><rect x="79.0432%" y="165" width="0.9595%" height="15" fill="rgb(246,181,16)" fg:x="41191" fg:w="500"/><text x="79.3362%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="80.0027%" y="149" width="0.0652%" height="15" fill="rgb(227,129,36)" fg:x="41691" fg:w="34"/><text x="80.2957%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="80.0679%" y="149" width="0.0345%" height="15" fill="rgb(248,117,24)" fg:x="41725" fg:w="18"/><text x="80.3609%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="80.1025%" y="149" width="0.0345%" height="15" fill="rgb(214,185,35)" fg:x="41743" fg:w="18"/><text x="80.3954%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="80.1370%" y="133" width="0.1574%" height="15" fill="rgb(236,150,34)" fg:x="41761" fg:w="82"/><text x="80.4300%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="80.2944%" y="133" width="0.1343%" height="15" fill="rgb(243,228,27)" fg:x="41843" fg:w="70"/><text x="80.5873%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="80.4287%" y="133" width="0.1458%" height="15" fill="rgb(245,77,44)" fg:x="41913" fg:w="76"/><text x="80.7217%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.56%)</title><rect x="80.1370%" y="149" width="0.5565%" height="15" fill="rgb(235,214,42)" fg:x="41761" fg:w="290"/><text x="80.4300%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.12%)</title><rect x="80.6935%" y="149" width="0.1209%" height="15" fill="rgb(221,74,3)" fg:x="42051" fg:w="63"/><text x="80.9865%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.8144%" y="149" width="0.1593%" height="15" fill="rgb(206,121,29)" fg:x="42114" fg:w="83"/><text x="81.1074%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.22%)</title><rect x="80.9737%" y="149" width="0.2207%" height="15" fill="rgb(249,131,53)" fg:x="42197" fg:w="115"/><text x="81.2666%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (163 instructions, 0.31%)</title><rect x="81.1944%" y="149" width="0.3128%" height="15" fill="rgb(236,170,29)" fg:x="42312" fg:w="163"/><text x="81.4873%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (965 instructions, 1.85%)</title><rect x="80.0027%" y="165" width="1.8518%" height="15" fill="rgb(247,96,15)" fg:x="41691" fg:w="965"/><text x="80.2957%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8545%" y="165" width="0.0249%" height="15" fill="rgb(211,210,7)" fg:x="42656" fg:w="13"/><text x="82.1474%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8794%" y="165" width="0.0249%" height="15" fill="rgb(240,88,50)" fg:x="42669" fg:w="13"/><text x="82.1724%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="81.9044%" y="149" width="0.1593%" height="15" fill="rgb(209,229,26)" fg:x="42682" fg:w="83"/><text x="82.1973%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="82.0636%" y="149" width="0.1900%" height="15" fill="rgb(210,68,23)" fg:x="42765" fg:w="99"/><text x="82.3566%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="82.2536%" y="149" width="0.0365%" height="15" fill="rgb(229,180,13)" fg:x="42864" fg:w="19"/><text x="82.5466%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="82.2901%" y="149" width="0.2360%" height="15" fill="rgb(236,53,44)" fg:x="42883" fg:w="123"/><text x="82.5830%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="82.5261%" y="149" width="0.1151%" height="15" fill="rgb(244,214,29)" fg:x="43006" fg:w="60"/><text x="82.8191%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (490 instructions, 0.94%)</title><rect x="81.9044%" y="165" width="0.9403%" height="15" fill="rgb(220,75,29)" fg:x="42682" fg:w="490"/><text x="82.1973%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="82.8446%" y="165" width="0.0652%" height="15" fill="rgb(214,183,37)" fg:x="43172" fg:w="34"/><text x="83.1376%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.9099%" y="165" width="0.0345%" height="15" fill="rgb(239,117,29)" fg:x="43206" fg:w="18"/><text x="83.2029%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.9444%" y="165" width="0.0345%" height="15" fill="rgb(237,171,35)" fg:x="43224" fg:w="18"/><text x="83.2374%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="82.9790%" y="149" width="0.0134%" height="15" fill="rgb(229,178,53)" fg:x="43242" fg:w="7"/><text x="83.2719%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="82.9924%" y="149" width="0.1650%" height="15" fill="rgb(210,102,19)" fg:x="43249" fg:w="86"/><text x="83.2854%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="83.1574%" y="149" width="0.0134%" height="15" fill="rgb(235,127,22)" fg:x="43335" fg:w="7"/><text x="83.4504%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="83.1709%" y="149" width="0.2591%" height="15" fill="rgb(244,31,31)" fg:x="43342" fg:w="135"/><text x="83.4638%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (286 instructions, 0.55%)</title><rect x="82.9790%" y="165" width="0.5488%" height="15" fill="rgb(231,43,21)" fg:x="43242" fg:w="286"/><text x="83.2719%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (4,406 instructions, 8.45%)</title><rect x="77.2452%" y="181" width="8.4549%" height="15" fill="rgb(217,131,35)" fg:x="40254" fg:w="4406"/><text x="77.5381%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="85.7000%" y="165" width="0.1650%" height="15" fill="rgb(221,149,4)" fg:x="44660" fg:w="86"/><text x="85.9930%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="85.8651%" y="165" width="0.1650%" height="15" fill="rgb(232,170,28)" fg:x="44746" fg:w="86"/><text x="86.1580%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (225 instructions, 0.43%)</title><rect x="85.7000%" y="181" width="0.4318%" height="15" fill="rgb(238,56,10)" fg:x="44660" fg:w="225"/><text x="85.9930%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.1318%" y="181" width="0.0249%" height="15" fill="rgb(235,196,14)" fg:x="44885" fg:w="13"/><text x="86.4248%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.1567%" y="181" width="0.0249%" height="15" fill="rgb(216,45,48)" fg:x="44898" fg:w="13"/><text x="86.4497%" y="191.50"></text></g><g><title>memcpy (440 instructions, 0.84%)</title><rect x="86.1817%" y="181" width="0.8443%" height="15" fill="rgb(238,213,17)" fg:x="44911" fg:w="440"/><text x="86.4747%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.0260%" y="133" width="0.1650%" height="15" fill="rgb(212,13,2)" fg:x="45351" fg:w="86"/><text x="87.3190%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.1911%" y="117" width="0.1650%" height="15" fill="rgb(240,114,20)" fg:x="45437" fg:w="86"/><text x="87.4840%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.34%)</title><rect x="87.3561%" y="101" width="0.3435%" height="15" fill="rgb(228,41,40)" fg:x="45523" fg:w="179"/><text x="87.6490%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.41%)</title><rect x="87.3561%" y="117" width="0.4107%" height="15" fill="rgb(244,132,35)" fg:x="45523" fg:w="214"/><text x="87.6490%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.7667%" y="117" width="0.1650%" height="15" fill="rgb(253,189,4)" fg:x="45737" fg:w="86"/><text x="88.0597%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="87.9318%" y="117" width="0.0249%" height="15" fill="rgb(224,37,19)" fg:x="45823" fg:w="13"/><text x="88.2247%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="87.9567%" y="117" width="0.3473%" height="15" fill="rgb(235,223,18)" fg:x="45836" fg:w="181"/><text x="88.2497%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="88.3040%" y="117" width="0.1612%" height="15" fill="rgb(235,163,25)" fg:x="46017" fg:w="84"/><text x="88.5970%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (831 instructions, 1.59%)</title><rect x="87.1911%" y="133" width="1.5946%" height="15" fill="rgb(217,145,28)" fg:x="45437" fg:w="831"/><text x="87.4840%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="88.7857%" y="117" width="0.1286%" height="15" fill="rgb(223,223,32)" fg:x="46268" fg:w="67"/><text x="89.0787%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.44%)</title><rect x="88.7857%" y="133" width="0.4375%" height="15" fill="rgb(227,189,39)" fg:x="46268" fg:w="228"/><text x="89.0787%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,266 instructions, 2.43%)</title><rect x="87.0260%" y="149" width="2.4294%" height="15" fill="rgb(248,10,22)" fg:x="45351" fg:w="1266"/><text x="87.3190%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="89.4554%" y="149" width="0.2495%" height="15" fill="rgb(248,46,39)" fg:x="46617" fg:w="130"/><text x="89.7484%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="89.7049%" y="117" width="0.1190%" height="15" fill="rgb(248,113,48)" fg:x="46747" fg:w="62"/><text x="89.9978%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="89.8238%" y="117" width="0.1286%" height="15" fill="rgb(245,16,25)" fg:x="46809" fg:w="67"/><text x="90.1168%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (277 instructions, 0.53%)</title><rect x="89.7049%" y="133" width="0.5315%" height="15" fill="rgb(249,152,16)" fg:x="46747" fg:w="277"/><text x="89.9978%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (312 instructions, 0.60%)</title><rect x="89.7049%" y="149" width="0.5987%" height="15" fill="rgb(250,16,1)" fg:x="46747" fg:w="312"/><text x="89.9978%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.3036%" y="149" width="0.0249%" height="15" fill="rgb(249,138,3)" fg:x="47059" fg:w="13"/><text x="90.5965%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,783 instructions, 3.42%)</title><rect x="87.0260%" y="165" width="3.4215%" height="15" fill="rgb(227,71,41)" fg:x="45351" fg:w="1783"/><text x="87.3190%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,832 instructions, 3.52%)</title><rect x="87.0260%" y="181" width="3.5155%" height="15" fill="rgb(209,184,23)" fg:x="45351" fg:w="1832"/><text x="87.3190%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="90.5415%" y="181" width="0.2533%" height="15" fill="rgb(223,215,31)" fg:x="47183" fg:w="132"/><text x="90.8345%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="90.7948%" y="181" width="0.1151%" height="15" fill="rgb(210,146,28)" fg:x="47315" fg:w="60"/><text x="91.0878%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="90.9100%" y="149" width="0.0269%" height="15" fill="rgb(209,183,41)" fg:x="47375" fg:w="14"/><text x="91.2029%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9368%" y="149" width="0.0249%" height="15" fill="rgb(209,224,45)" fg:x="47389" fg:w="13"/><text x="91.2298%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9618%" y="149" width="0.0249%" height="15" fill="rgb(224,209,51)" fg:x="47402" fg:w="13"/><text x="91.2547%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9867%" y="149" width="0.0249%" height="15" fill="rgb(223,17,39)" fg:x="47415" fg:w="13"/><text x="91.2797%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="91.0117%" y="149" width="0.1785%" height="15" fill="rgb(234,204,37)" fg:x="47428" fg:w="93"/><text x="91.3046%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (390 instructions, 0.75%)</title><rect x="90.9100%" y="165" width="0.7484%" height="15" fill="rgb(236,120,5)" fg:x="47375" fg:w="390"/><text x="91.2029%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.99%)</title><rect x="91.6584%" y="149" width="0.9940%" height="15" fill="rgb(248,97,27)" fg:x="47765" fg:w="518"/><text x="91.9513%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="92.6524%" y="101" width="0.1593%" height="15" fill="rgb(240,66,17)" fg:x="48283" fg:w="83"/><text x="92.9453%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="92.6524%" y="117" width="0.2418%" height="15" fill="rgb(210,79,3)" fg:x="48283" fg:w="126"/><text x="92.9453%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.39%)</title><rect x="92.6524%" y="133" width="0.3934%" height="15" fill="rgb(214,176,27)" fg:x="48283" fg:w="205"/><text x="92.9453%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0457%" y="133" width="0.0288%" height="15" fill="rgb(235,185,3)" fg:x="48488" fg:w="15"/><text x="93.3387%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0745%" y="133" width="0.0288%" height="15" fill="rgb(227,24,12)" fg:x="48503" fg:w="15"/><text x="93.3675%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (423 instructions, 0.81%)</title><rect x="92.6524%" y="149" width="0.8117%" height="15" fill="rgb(252,169,48)" fg:x="48283" fg:w="423"/><text x="92.9453%" y="159.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.99%)</title><rect x="93.4641%" y="149" width="0.9902%" height="15" fill="rgb(212,65,1)" fg:x="48706" fg:w="516"/><text x="93.7570%" y="159.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="94.4543%" y="149" width="0.0134%" height="15" fill="rgb(242,39,24)" fg:x="49222" fg:w="7"/><text x="94.7472%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,557 instructions, 2.99%)</title><rect x="91.6584%" y="165" width="2.9878%" height="15" fill="rgb(249,32,23)" fg:x="47765" fg:w="1557"/><text x="91.9513%" y="175.50">ca..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="94.6461%" y="165" width="0.0134%" height="15" fill="rgb(251,195,23)" fg:x="49322" fg:w="7"/><text x="94.9391%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="94.6596%" y="165" width="0.1151%" height="15" fill="rgb(236,174,8)" fg:x="49329" fg:w="60"/><text x="94.9525%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,620 instructions, 5.03%)</title><rect x="90.9100%" y="181" width="5.0276%" height="15" fill="rgb(220,197,8)" fg:x="47375" fg:w="2620"/><text x="91.2029%" y="191.50">ic_cd..</text></g><g><title>subscriber::update_count_1_::{{closure}} (51,546 instructions, 98.91%)</title><rect x="0.3627%" y="197" width="98.9139%" height="15" fill="rgb(240,108,37)" fg:x="189" fg:w="51546"/><text x="0.6556%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.2766%" y="197" width="0.0269%" height="15" fill="rgb(232,176,24)" fg:x="51735" fg:w="14"/><text x="99.5695%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="99.3053%" y="197" width="0.1650%" height="15" fill="rgb(243,35,29)" fg:x="51750" fg:w="86"/><text x="99.5983%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="99.4704%" y="197" width="0.2533%" height="15" fill="rgb(210,37,18)" fg:x="51836" fg:w="132"/><text x="99.7633%" y="207.50"></text></g><g><title>all (52,112 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(224,184,40)" fg:x="0" fg:w="52112"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (52,112 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(236,39,29)" fg:x="0" fg:w="52112"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>