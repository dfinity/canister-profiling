<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="41500"><g><title>ic_cdk::setup (19 instructions, 0.05%)</title><rect x="0.0000%" y="197" width="0.0458%" height="15" fill="rgb(217,132,38)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="0.0458%" y="197" width="0.1904%" height="15" fill="rgb(242,146,4)" fg:x="19" fg:w="79"/><text x="0.3388%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2361%" y="197" width="0.1831%" height="15" fill="rgb(212,61,9)" fg:x="98" fg:w="76"/><text x="0.5291%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4193%" y="181" width="0.1831%" height="15" fill="rgb(247,126,22)" fg:x="174" fg:w="76"/><text x="0.7122%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="0.6024%" y="165" width="0.1711%" height="15" fill="rgb(220,196,2)" fg:x="250" fg:w="71"/><text x="0.8954%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="0.7735%" y="165" width="0.9639%" height="15" fill="rgb(208,46,4)" fg:x="321" fg:w="400"/><text x="1.0665%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="1.7373%" y="165" width="0.2048%" height="15" fill="rgb(252,104,46)" fg:x="721" fg:w="85"/><text x="2.0303%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="1.9422%" y="165" width="0.1349%" height="15" fill="rgb(237,152,48)" fg:x="806" fg:w="56"/><text x="2.2351%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="2.0771%" y="165" width="0.1349%" height="15" fill="rgb(221,59,37)" fg:x="862" fg:w="56"/><text x="2.3701%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="2.2120%" y="165" width="0.1349%" height="15" fill="rgb(209,202,51)" fg:x="918" fg:w="56"/><text x="2.5050%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="2.3470%" y="165" width="0.1349%" height="15" fill="rgb(228,81,30)" fg:x="974" fg:w="56"/><text x="2.6400%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="2.4819%" y="165" width="0.1711%" height="15" fill="rgb(227,42,39)" fg:x="1030" fg:w="71"/><text x="2.7749%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.17%)</title><rect x="2.6530%" y="165" width="0.1663%" height="15" fill="rgb(221,26,2)" fg:x="1101" fg:w="69"/><text x="2.9460%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="2.8193%" y="165" width="0.9639%" height="15" fill="rgb(254,61,31)" fg:x="1170" fg:w="400"/><text x="3.1122%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.7831%" y="165" width="0.0386%" height="15" fill="rgb(222,173,38)" fg:x="1570" fg:w="16"/><text x="4.0761%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="3.8217%" y="149" width="0.1759%" height="15" fill="rgb(218,50,12)" fg:x="1586" fg:w="73"/><text x="4.1147%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.9976%" y="117" width="0.1446%" height="15" fill="rgb(223,88,40)" fg:x="1659" fg:w="60"/><text x="4.2906%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.9976%" y="133" width="0.2048%" height="15" fill="rgb(237,54,19)" fg:x="1659" fg:w="85"/><text x="4.2906%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.2024%" y="85" width="0.0217%" height="15" fill="rgb(251,129,25)" fg:x="1744" fg:w="9"/><text x="4.4954%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.2241%" y="69" width="0.0723%" height="15" fill="rgb(238,97,19)" fg:x="1753" fg:w="30"/><text x="4.5171%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.2241%" y="85" width="0.1325%" height="15" fill="rgb(240,169,18)" fg:x="1753" fg:w="55"/><text x="4.5171%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.2024%" y="101" width="0.2843%" height="15" fill="rgb(230,187,49)" fg:x="1744" fg:w="118"/><text x="4.4954%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="4.2024%" y="117" width="0.4120%" height="15" fill="rgb(209,44,26)" fg:x="1744" fg:w="171"/><text x="4.4954%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="4.2024%" y="133" width="0.4241%" height="15" fill="rgb(244,0,6)" fg:x="1744" fg:w="176"/><text x="4.4954%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.90%)</title><rect x="3.9976%" y="149" width="0.8964%" height="15" fill="rgb(248,18,21)" fg:x="1659" fg:w="372"/><text x="4.2906%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.42%)</title><rect x="3.8217%" y="165" width="1.4241%" height="15" fill="rgb(245,180,19)" fg:x="1586" fg:w="591"/><text x="4.1147%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.2458%" y="165" width="0.2048%" height="15" fill="rgb(252,118,36)" fg:x="2177" fg:w="85"/><text x="5.5388%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="5.4506%" y="165" width="0.1952%" height="15" fill="rgb(210,224,19)" fg:x="2262" fg:w="81"/><text x="5.7436%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="5.6458%" y="149" width="0.1349%" height="15" fill="rgb(218,30,24)" fg:x="2343" fg:w="56"/><text x="5.9388%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="5.7807%" y="149" width="0.1904%" height="15" fill="rgb(219,75,50)" fg:x="2399" fg:w="79"/><text x="6.0737%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.28%)</title><rect x="5.9711%" y="133" width="0.2819%" height="15" fill="rgb(234,72,50)" fg:x="2478" fg:w="117"/><text x="6.2641%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.29%)</title><rect x="6.2530%" y="101" width="0.2892%" height="15" fill="rgb(219,100,48)" fg:x="2595" fg:w="120"/><text x="6.5460%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.35%)</title><rect x="6.2530%" y="117" width="0.3494%" height="15" fill="rgb(253,5,41)" fg:x="2595" fg:w="145"/><text x="6.5460%" y="127.50"></text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="6.6024%" y="37" width="0.2506%" height="15" fill="rgb(247,181,11)" fg:x="2740" fg:w="104"/><text x="6.8954%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 instructions, 0.33%)</title><rect x="6.6024%" y="53" width="0.3325%" height="15" fill="rgb(222,223,25)" fg:x="2740" fg:w="138"/><text x="6.8954%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.52%)</title><rect x="6.6024%" y="69" width="0.5181%" height="15" fill="rgb(214,198,28)" fg:x="2740" fg:w="215"/><text x="6.8954%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.47%)</title><rect x="7.1205%" y="69" width="0.4699%" height="15" fill="rgb(230,46,43)" fg:x="2955" fg:w="195"/><text x="7.4135%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (442 instructions, 1.07%)</title><rect x="6.6024%" y="85" width="1.0651%" height="15" fill="rgb(233,65,53)" fg:x="2740" fg:w="442"/><text x="6.8954%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.6675%" y="53" width="0.0217%" height="15" fill="rgb(221,121,27)" fg:x="3182" fg:w="9"/><text x="7.9604%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.6892%" y="37" width="0.0723%" height="15" fill="rgb(247,70,47)" fg:x="3191" fg:w="30"/><text x="7.9821%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.6892%" y="53" width="0.1325%" height="15" fill="rgb(228,85,35)" fg:x="3191" fg:w="55"/><text x="7.9821%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.6675%" y="69" width="0.2843%" height="15" fill="rgb(209,50,18)" fg:x="3182" fg:w="118"/><text x="7.9604%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.44%)</title><rect x="7.6675%" y="85" width="0.4410%" height="15" fill="rgb(250,19,35)" fg:x="3182" fg:w="183"/><text x="7.9604%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="8.1084%" y="69" width="0.1084%" height="15" fill="rgb(253,107,29)" fg:x="3365" fg:w="45"/><text x="8.4014%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.17%)</title><rect x="8.1084%" y="85" width="0.1687%" height="15" fill="rgb(252,179,29)" fg:x="3365" fg:w="70"/><text x="8.4014%" y="95.50"></text></g><g><title>core::fmt::write (823 instructions, 1.98%)</title><rect x="6.6024%" y="101" width="1.9831%" height="15" fill="rgb(238,194,6)" fg:x="2740" fg:w="823"/><text x="6.8954%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (878 instructions, 2.12%)</title><rect x="6.6024%" y="117" width="2.1157%" height="15" fill="rgb(238,164,29)" fg:x="2740" fg:w="878"/><text x="6.8954%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,134 instructions, 2.73%)</title><rect x="6.2530%" y="133" width="2.7325%" height="15" fill="rgb(224,25,9)" fg:x="2595" fg:w="1134"/><text x="6.5460%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,397 instructions, 3.37%)</title><rect x="5.9711%" y="149" width="3.3663%" height="15" fill="rgb(244,153,23)" fg:x="2478" fg:w="1397"/><text x="6.2641%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.17%)</title><rect x="9.3373%" y="149" width="0.1735%" height="15" fill="rgb(212,203,14)" fg:x="3875" fg:w="72"/><text x="9.6303%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="9.5108%" y="149" width="0.1325%" height="15" fill="rgb(220,164,20)" fg:x="3947" fg:w="55"/><text x="9.8038%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="9.6434%" y="149" width="0.1590%" height="15" fill="rgb(222,203,48)" fg:x="4002" fg:w="66"/><text x="9.9363%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.8024%" y="117" width="0.1831%" height="15" fill="rgb(215,159,22)" fg:x="4068" fg:w="76"/><text x="10.0954%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="9.8024%" y="133" width="0.2675%" height="15" fill="rgb(216,183,47)" fg:x="4068" fg:w="111"/><text x="10.0954%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (183 instructions, 0.44%)</title><rect x="9.8024%" y="149" width="0.4410%" height="15" fill="rgb(229,195,25)" fg:x="4068" fg:w="183"/><text x="10.0954%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="10.2434%" y="149" width="0.1349%" height="15" fill="rgb(224,132,51)" fg:x="4251" fg:w="56"/><text x="10.5363%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="10.3783%" y="149" width="0.1759%" height="15" fill="rgb(240,63,7)" fg:x="4307" fg:w="73"/><text x="10.6713%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="10.5542%" y="133" width="0.1976%" height="15" fill="rgb(249,182,41)" fg:x="4380" fg:w="82"/><text x="10.8472%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.29%)</title><rect x="10.7518%" y="101" width="0.2892%" height="15" fill="rgb(243,47,26)" fg:x="4462" fg:w="120"/><text x="11.0448%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.35%)</title><rect x="10.7518%" y="117" width="0.3494%" height="15" fill="rgb(233,48,2)" fg:x="4462" fg:w="145"/><text x="11.0448%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.20%)</title><rect x="11.1012%" y="37" width="0.2000%" height="15" fill="rgb(244,165,34)" fg:x="4607" fg:w="83"/><text x="11.3942%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="11.1012%" y="53" width="0.2819%" height="15" fill="rgb(207,89,7)" fg:x="4607" fg:w="117"/><text x="11.3942%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.47%)</title><rect x="11.1012%" y="69" width="0.4675%" height="15" fill="rgb(244,117,36)" fg:x="4607" fg:w="194"/><text x="11.3942%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.47%)</title><rect x="11.5687%" y="69" width="0.4699%" height="15" fill="rgb(226,144,34)" fg:x="4801" fg:w="195"/><text x="11.8616%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.01%)</title><rect x="11.1012%" y="85" width="1.0145%" height="15" fill="rgb(213,23,19)" fg:x="4607" fg:w="421"/><text x="11.3942%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="12.1157%" y="53" width="0.0217%" height="15" fill="rgb(217,75,12)" fg:x="5028" fg:w="9"/><text x="12.4086%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="12.1373%" y="37" width="0.0723%" height="15" fill="rgb(224,159,17)" fg:x="5037" fg:w="30"/><text x="12.4303%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="12.1373%" y="53" width="0.1325%" height="15" fill="rgb(217,118,1)" fg:x="5037" fg:w="55"/><text x="12.4303%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="12.1157%" y="69" width="0.2843%" height="15" fill="rgb(232,180,48)" fg:x="5028" fg:w="118"/><text x="12.4086%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.44%)</title><rect x="12.1157%" y="85" width="0.4410%" height="15" fill="rgb(230,27,33)" fg:x="5028" fg:w="183"/><text x="12.4086%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="12.5566%" y="69" width="0.1084%" height="15" fill="rgb(205,31,21)" fg:x="5211" fg:w="45"/><text x="12.8496%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.17%)</title><rect x="12.5566%" y="85" width="0.1687%" height="15" fill="rgb(253,59,4)" fg:x="5211" fg:w="70"/><text x="12.8496%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 1.93%)</title><rect x="11.1012%" y="101" width="1.9325%" height="15" fill="rgb(224,201,9)" fg:x="4607" fg:w="802"/><text x="11.3942%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.07%)</title><rect x="11.1012%" y="117" width="2.0651%" height="15" fill="rgb(229,206,30)" fg:x="4607" fg:w="857"/><text x="11.3942%" y="127.50"></text></g><g><title>core::fmt::write (1,113 instructions, 2.68%)</title><rect x="10.7518%" y="133" width="2.6819%" height="15" fill="rgb(212,67,47)" fg:x="4462" fg:w="1113"/><text x="11.0448%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.23%)</title><rect x="10.5542%" y="149" width="3.2313%" height="15" fill="rgb(211,96,50)" fg:x="4380" fg:w="1341"/><text x="10.8472%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.17%)</title><rect x="13.7855%" y="149" width="0.1735%" height="15" fill="rgb(252,114,18)" fg:x="5721" fg:w="72"/><text x="14.0785%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="13.9590%" y="149" width="0.1373%" height="15" fill="rgb(223,58,37)" fg:x="5793" fg:w="57"/><text x="14.2520%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="14.0964%" y="149" width="0.1590%" height="15" fill="rgb(237,70,4)" fg:x="5850" fg:w="66"/><text x="14.3894%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="14.2554%" y="149" width="0.1349%" height="15" fill="rgb(244,85,46)" fg:x="5916" fg:w="56"/><text x="14.5484%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="14.3904%" y="133" width="0.1711%" height="15" fill="rgb(223,39,52)" fg:x="5972" fg:w="71"/><text x="14.6833%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.17%)</title><rect x="14.5614%" y="133" width="0.1663%" height="15" fill="rgb(218,200,14)" fg:x="6043" fg:w="69"/><text x="14.8544%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="14.7277%" y="133" width="0.9639%" height="15" fill="rgb(208,171,16)" fg:x="6112" fg:w="400"/><text x="15.0207%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="15.6916%" y="133" width="0.0386%" height="15" fill="rgb(234,200,18)" fg:x="6512" fg:w="16"/><text x="15.9845%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="15.7301%" y="117" width="0.1976%" height="15" fill="rgb(228,45,11)" fg:x="6528" fg:w="82"/><text x="16.0231%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="15.9277%" y="85" width="0.1446%" height="15" fill="rgb(237,182,11)" fg:x="6610" fg:w="60"/><text x="16.2207%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="15.9277%" y="101" width="0.2048%" height="15" fill="rgb(241,175,49)" fg:x="6610" fg:w="85"/><text x="16.2207%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="16.1325%" y="53" width="0.0217%" height="15" fill="rgb(247,38,35)" fg:x="6695" fg:w="9"/><text x="16.4255%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="16.1542%" y="37" width="0.0723%" height="15" fill="rgb(228,39,49)" fg:x="6704" fg:w="30"/><text x="16.4472%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="16.1542%" y="53" width="0.1325%" height="15" fill="rgb(226,101,26)" fg:x="6704" fg:w="55"/><text x="16.4472%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="16.1325%" y="69" width="0.2843%" height="15" fill="rgb(206,141,19)" fg:x="6695" fg:w="118"/><text x="16.4255%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="16.1325%" y="85" width="0.4120%" height="15" fill="rgb(211,200,13)" fg:x="6695" fg:w="171"/><text x="16.4255%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="16.1325%" y="101" width="0.4241%" height="15" fill="rgb(241,121,6)" fg:x="6695" fg:w="176"/><text x="16.4255%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.90%)</title><rect x="15.9277%" y="117" width="0.8964%" height="15" fill="rgb(234,221,29)" fg:x="6610" fg:w="372"/><text x="16.2207%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.45%)</title><rect x="15.7301%" y="133" width="1.4458%" height="15" fill="rgb(229,136,5)" fg:x="6528" fg:w="600"/><text x="16.0231%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="17.1759%" y="133" width="0.2048%" height="15" fill="rgb(238,36,11)" fg:x="7128" fg:w="85"/><text x="17.4689%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="17.3807%" y="133" width="0.1373%" height="15" fill="rgb(251,55,41)" fg:x="7213" fg:w="57"/><text x="17.6737%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="17.5181%" y="117" width="0.1711%" height="15" fill="rgb(242,34,40)" fg:x="7270" fg:w="71"/><text x="17.8110%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (289 instructions, 0.70%)</title><rect x="17.6892%" y="117" width="0.6964%" height="15" fill="rgb(215,42,17)" fg:x="7341" fg:w="289"/><text x="17.9821%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="18.3855%" y="101" width="0.1711%" height="15" fill="rgb(207,44,46)" fg:x="7630" fg:w="71"/><text x="18.6785%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.23%)</title><rect x="18.5566%" y="101" width="0.2289%" height="15" fill="rgb(211,206,28)" fg:x="7701" fg:w="95"/><text x="18.8496%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="18.7855%" y="101" width="0.1590%" height="15" fill="rgb(237,167,16)" fg:x="7796" fg:w="66"/><text x="19.0785%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.68%)</title><rect x="18.3855%" y="117" width="0.6819%" height="15" fill="rgb(233,66,6)" fg:x="7630" fg:w="283"/><text x="18.6785%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="19.0675%" y="117" width="0.1590%" height="15" fill="rgb(246,123,29)" fg:x="7913" fg:w="66"/><text x="19.3604%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (806 instructions, 1.94%)</title><rect x="17.5181%" y="133" width="1.9422%" height="15" fill="rgb(209,62,40)" fg:x="7270" fg:w="806"/><text x="17.8110%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="19.4602%" y="133" width="0.1976%" height="15" fill="rgb(218,4,25)" fg:x="8076" fg:w="82"/><text x="19.7532%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="19.6578%" y="117" width="0.1711%" height="15" fill="rgb(253,91,49)" fg:x="8158" fg:w="71"/><text x="19.9508%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (289 instructions, 0.70%)</title><rect x="19.8289%" y="117" width="0.6964%" height="15" fill="rgb(228,155,29)" fg:x="8229" fg:w="289"/><text x="20.1219%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="20.5253%" y="101" width="0.1711%" height="15" fill="rgb(243,57,37)" fg:x="8518" fg:w="71"/><text x="20.8183%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.23%)</title><rect x="20.6964%" y="101" width="0.2289%" height="15" fill="rgb(244,167,17)" fg:x="8589" fg:w="95"/><text x="20.9894%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="20.9253%" y="101" width="0.1590%" height="15" fill="rgb(207,181,38)" fg:x="8684" fg:w="66"/><text x="21.2183%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.68%)</title><rect x="20.5253%" y="117" width="0.6819%" height="15" fill="rgb(211,8,23)" fg:x="8518" fg:w="283"/><text x="20.8183%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="21.2072%" y="117" width="0.1590%" height="15" fill="rgb(235,11,44)" fg:x="8801" fg:w="66"/><text x="21.5002%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (806 instructions, 1.94%)</title><rect x="19.6578%" y="133" width="1.9422%" height="15" fill="rgb(248,18,52)" fg:x="8158" fg:w="806"/><text x="19.9508%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="21.6000%" y="133" width="0.0506%" height="15" fill="rgb(208,4,7)" fg:x="8964" fg:w="21"/><text x="21.8930%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="21.6506%" y="133" width="0.1590%" height="15" fill="rgb(240,17,39)" fg:x="8985" fg:w="66"/><text x="21.9436%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,416 instructions, 8.23%)</title><rect x="14.3904%" y="149" width="8.2313%" height="15" fill="rgb(207,170,3)" fg:x="5972" fg:w="3416"/><text x="14.6833%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="22.6217%" y="133" width="0.1952%" height="15" fill="rgb(236,100,52)" fg:x="9388" fg:w="81"/><text x="22.9147%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="22.8747%" y="133" width="0.1880%" height="15" fill="rgb(246,78,51)" fg:x="9493" fg:w="78"/><text x="23.1677%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (207 instructions, 0.50%)</title><rect x="22.6217%" y="149" width="0.4988%" height="15" fill="rgb(211,17,15)" fg:x="9388" fg:w="207"/><text x="22.9147%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="23.1205%" y="149" width="0.2892%" height="15" fill="rgb(209,59,46)" fg:x="9595" fg:w="120"/><text x="23.4135%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,018 instructions, 19.32%)</title><rect x="5.6458%" y="165" width="19.3205%" height="15" fill="rgb(210,92,25)" fg:x="2343" fg:w="8018"/><text x="5.9388%" y="175.50">&lt;candid::binary_parser::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.15%)</title><rect x="24.9663%" y="165" width="0.1518%" height="15" fill="rgb(238,174,52)" fg:x="10361" fg:w="63"/><text x="25.2592%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="25.1181%" y="165" width="0.1590%" height="15" fill="rgb(230,73,7)" fg:x="10424" fg:w="66"/><text x="25.4110%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.17%)</title><rect x="25.2771%" y="165" width="0.1663%" height="15" fill="rgb(243,124,40)" fg:x="10490" fg:w="69"/><text x="25.5701%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="25.4434%" y="149" width="0.9639%" height="15" fill="rgb(244,170,11)" fg:x="10559" fg:w="400"/><text x="25.7363%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="26.4072%" y="149" width="0.0386%" height="15" fill="rgb(207,114,54)" fg:x="10959" fg:w="16"/><text x="26.7002%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="26.4458%" y="133" width="0.1904%" height="15" fill="rgb(205,42,20)" fg:x="10975" fg:w="79"/><text x="26.7388%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="26.6361%" y="101" width="0.1446%" height="15" fill="rgb(230,30,28)" fg:x="11054" fg:w="60"/><text x="26.9291%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="26.6361%" y="117" width="0.2048%" height="15" fill="rgb(205,73,54)" fg:x="11054" fg:w="85"/><text x="26.9291%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="26.8410%" y="69" width="0.0217%" height="15" fill="rgb(254,227,23)" fg:x="11139" fg:w="9"/><text x="27.1339%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="26.8627%" y="53" width="0.0723%" height="15" fill="rgb(228,202,34)" fg:x="11148" fg:w="30"/><text x="27.1556%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="26.8627%" y="69" width="0.1325%" height="15" fill="rgb(222,225,37)" fg:x="11148" fg:w="55"/><text x="27.1556%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="26.8410%" y="85" width="0.2843%" height="15" fill="rgb(221,14,54)" fg:x="11139" fg:w="118"/><text x="27.1339%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="26.8410%" y="101" width="0.4120%" height="15" fill="rgb(254,102,2)" fg:x="11139" fg:w="171"/><text x="27.1339%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="26.8410%" y="117" width="0.4241%" height="15" fill="rgb(232,104,17)" fg:x="11139" fg:w="176"/><text x="27.1339%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.90%)</title><rect x="26.6361%" y="133" width="0.8964%" height="15" fill="rgb(250,220,14)" fg:x="11054" fg:w="372"/><text x="26.9291%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (597 instructions, 1.44%)</title><rect x="26.4458%" y="149" width="1.4386%" height="15" fill="rgb(241,158,9)" fg:x="10975" fg:w="597"/><text x="26.7388%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="27.8843%" y="149" width="0.2048%" height="15" fill="rgb(246,9,43)" fg:x="11572" fg:w="85"/><text x="28.1773%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="28.0892%" y="149" width="0.1952%" height="15" fill="rgb(206,73,33)" fg:x="11657" fg:w="81"/><text x="28.3821%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="28.2843%" y="133" width="0.1711%" height="15" fill="rgb(222,79,8)" fg:x="11738" fg:w="71"/><text x="28.5773%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.23%)</title><rect x="28.4554%" y="133" width="0.2289%" height="15" fill="rgb(234,8,54)" fg:x="11809" fg:w="95"/><text x="28.7484%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="28.6843%" y="133" width="0.1590%" height="15" fill="rgb(209,134,38)" fg:x="11904" fg:w="66"/><text x="28.9773%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.68%)</title><rect x="28.2843%" y="149" width="0.6819%" height="15" fill="rgb(230,127,29)" fg:x="11738" fg:w="283"/><text x="28.5773%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.28%)</title><rect x="28.9663%" y="149" width="0.2819%" height="15" fill="rgb(242,44,41)" fg:x="12021" fg:w="117"/><text x="29.2592%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,748 instructions, 4.21%)</title><rect x="25.4434%" y="165" width="4.2120%" height="15" fill="rgb(222,56,43)" fg:x="10559" fg:w="1748"/><text x="25.7363%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="29.6554%" y="165" width="0.1590%" height="15" fill="rgb(238,39,47)" fg:x="12307" fg:w="66"/><text x="29.9484%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="29.8145%" y="165" width="0.1831%" height="15" fill="rgb(226,79,43)" fg:x="12373" fg:w="76"/><text x="30.1074%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="29.9976%" y="149" width="0.1831%" height="15" fill="rgb(242,105,53)" fg:x="12449" fg:w="76"/><text x="30.2906%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.38%)</title><rect x="29.9976%" y="165" width="0.3831%" height="15" fill="rgb(251,132,46)" fg:x="12449" fg:w="159"/><text x="30.2906%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="30.3807%" y="133" width="0.1976%" height="15" fill="rgb(231,77,14)" fg:x="12608" fg:w="82"/><text x="30.6737%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="30.3807%" y="149" width="0.2819%" height="15" fill="rgb(240,135,9)" fg:x="12608" fg:w="117"/><text x="30.6737%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.46%)</title><rect x="30.3807%" y="165" width="0.4554%" height="15" fill="rgb(248,109,14)" fg:x="12608" fg:w="189"/><text x="30.6737%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="30.8361%" y="165" width="0.1976%" height="15" fill="rgb(227,146,52)" fg:x="12797" fg:w="82"/><text x="31.1291%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="31.0337%" y="149" width="0.1976%" height="15" fill="rgb(232,54,3)" fg:x="12879" fg:w="82"/><text x="31.3267%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.40%)</title><rect x="31.0337%" y="165" width="0.3976%" height="15" fill="rgb(229,201,43)" fg:x="12879" fg:w="165"/><text x="31.3267%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="31.4313%" y="165" width="0.1976%" height="15" fill="rgb(252,161,33)" fg:x="13044" fg:w="82"/><text x="31.7243%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="31.6289%" y="149" width="0.1904%" height="15" fill="rgb(226,146,40)" fg:x="13126" fg:w="79"/><text x="31.9219%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="31.8193%" y="117" width="0.2169%" height="15" fill="rgb(219,47,25)" fg:x="13205" fg:w="90"/><text x="32.1122%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.28%)</title><rect x="31.8193%" y="133" width="0.2771%" height="15" fill="rgb(250,135,13)" fg:x="13205" fg:w="115"/><text x="32.1122%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="32.0964%" y="85" width="0.0217%" height="15" fill="rgb(219,229,18)" fg:x="13320" fg:w="9"/><text x="32.3894%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="32.1181%" y="69" width="0.0723%" height="15" fill="rgb(217,152,27)" fg:x="13329" fg:w="30"/><text x="32.4110%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="32.1181%" y="85" width="0.1325%" height="15" fill="rgb(225,71,47)" fg:x="13329" fg:w="55"/><text x="32.4110%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="32.0964%" y="101" width="0.2843%" height="15" fill="rgb(220,139,14)" fg:x="13320" fg:w="118"/><text x="32.3894%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="32.0964%" y="117" width="0.4120%" height="15" fill="rgb(247,54,32)" fg:x="13320" fg:w="171"/><text x="32.3894%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.45%)</title><rect x="32.0964%" y="133" width="0.4482%" height="15" fill="rgb(252,131,39)" fg:x="13320" fg:w="186"/><text x="32.3894%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 0.99%)</title><rect x="31.8193%" y="149" width="0.9928%" height="15" fill="rgb(210,108,39)" fg:x="13205" fg:w="412"/><text x="32.1122%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (637 instructions, 1.53%)</title><rect x="31.6289%" y="165" width="1.5349%" height="15" fill="rgb(205,23,29)" fg:x="13126" fg:w="637"/><text x="31.9219%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="33.1639%" y="149" width="0.1976%" height="15" fill="rgb(246,139,46)" fg:x="13763" fg:w="82"/><text x="33.4568%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.33%)</title><rect x="33.1639%" y="165" width="0.3325%" height="15" fill="rgb(250,81,26)" fg:x="13763" fg:w="138"/><text x="33.4568%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.23%)</title><rect x="33.4964%" y="165" width="0.2289%" height="15" fill="rgb(214,104,7)" fg:x="13901" fg:w="95"/><text x="33.7894%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="33.7253%" y="165" width="0.0313%" height="15" fill="rgb(233,189,8)" fg:x="13996" fg:w="13"/><text x="34.0183%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.23%)</title><rect x="33.7566%" y="165" width="0.2289%" height="15" fill="rgb(228,141,17)" fg:x="14009" fg:w="95"/><text x="34.0496%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="33.9855%" y="149" width="0.1976%" height="15" fill="rgb(247,157,1)" fg:x="14104" fg:w="82"/><text x="34.2785%" y="159.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (114 instructions, 0.27%)</title><rect x="33.9855%" y="165" width="0.2747%" height="15" fill="rgb(249,225,5)" fg:x="14104" fg:w="114"/><text x="34.2785%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.06%)</title><rect x="34.2602%" y="149" width="0.0554%" height="15" fill="rgb(242,55,13)" fg:x="14218" fg:w="23"/><text x="34.5532%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.06%)</title><rect x="34.3157%" y="149" width="0.0554%" height="15" fill="rgb(230,49,50)" fg:x="14241" fg:w="23"/><text x="34.6086%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.32%)</title><rect x="34.2602%" y="165" width="0.3229%" height="15" fill="rgb(241,111,38)" fg:x="14218" fg:w="134"/><text x="34.5532%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.14%)</title><rect x="34.6120%" y="149" width="0.1373%" height="15" fill="rgb(252,155,4)" fg:x="14364" fg:w="57"/><text x="34.9050%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.40%)</title><rect x="34.5831%" y="165" width="0.4000%" height="15" fill="rgb(212,69,32)" fg:x="14352" fg:w="166"/><text x="34.8761%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="34.9831%" y="165" width="0.0313%" height="15" fill="rgb(243,107,47)" fg:x="14518" fg:w="13"/><text x="35.2761%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="35.0145%" y="165" width="0.0169%" height="15" fill="rgb(247,130,12)" fg:x="14531" fg:w="7"/><text x="35.3074%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="35.0313%" y="165" width="0.0289%" height="15" fill="rgb(233,74,16)" fg:x="14538" fg:w="12"/><text x="35.3243%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="35.0602%" y="133" width="0.1759%" height="15" fill="rgb(208,58,18)" fg:x="14550" fg:w="73"/><text x="35.3532%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="35.2361%" y="101" width="0.2169%" height="15" fill="rgb(242,225,1)" fg:x="14623" fg:w="90"/><text x="35.5291%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.28%)</title><rect x="35.2361%" y="117" width="0.2771%" height="15" fill="rgb(249,39,40)" fg:x="14623" fg:w="115"/><text x="35.5291%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="35.5133%" y="69" width="0.0217%" height="15" fill="rgb(207,72,44)" fg:x="14738" fg:w="9"/><text x="35.8062%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="35.5349%" y="53" width="0.0723%" height="15" fill="rgb(215,193,12)" fg:x="14747" fg:w="30"/><text x="35.8279%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="35.5349%" y="69" width="0.1325%" height="15" fill="rgb(248,41,39)" fg:x="14747" fg:w="55"/><text x="35.8279%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="35.5133%" y="85" width="0.2843%" height="15" fill="rgb(253,85,4)" fg:x="14738" fg:w="118"/><text x="35.8062%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="35.5133%" y="101" width="0.4120%" height="15" fill="rgb(243,70,31)" fg:x="14738" fg:w="171"/><text x="35.8062%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.45%)</title><rect x="35.5133%" y="117" width="0.4482%" height="15" fill="rgb(253,195,26)" fg:x="14738" fg:w="186"/><text x="35.8062%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 0.99%)</title><rect x="35.2361%" y="133" width="0.9928%" height="15" fill="rgb(243,42,11)" fg:x="14623" fg:w="412"/><text x="35.5291%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.52%)</title><rect x="35.0602%" y="149" width="1.5205%" height="15" fill="rgb(239,66,17)" fg:x="14550" fg:w="631"/><text x="35.3532%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="36.5807%" y="149" width="0.1976%" height="15" fill="rgb(217,132,21)" fg:x="15181" fg:w="82"/><text x="36.8737%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (825 instructions, 1.99%)</title><rect x="35.0602%" y="165" width="1.9880%" height="15" fill="rgb(252,202,21)" fg:x="14550" fg:w="825"/><text x="35.3532%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.0482%" y="133" width="0.1976%" height="15" fill="rgb(233,98,36)" fg:x="15375" fg:w="82"/><text x="37.3412%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.28%)</title><rect x="37.0482%" y="149" width="0.2819%" height="15" fill="rgb(216,153,54)" fg:x="15375" fg:w="117"/><text x="37.3412%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.46%)</title><rect x="37.0482%" y="165" width="0.4554%" height="15" fill="rgb(250,99,7)" fg:x="15375" fg:w="189"/><text x="37.3412%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.5036%" y="165" width="0.1976%" height="15" fill="rgb(207,56,50)" fg:x="15564" fg:w="82"/><text x="37.7966%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="37.7012%" y="165" width="0.1952%" height="15" fill="rgb(244,61,34)" fg:x="15646" fg:w="81"/><text x="37.9942%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="37.8964%" y="165" width="0.1976%" height="15" fill="rgb(241,50,38)" fg:x="15727" fg:w="82"/><text x="38.1894%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="38.0940%" y="165" width="0.1976%" height="15" fill="rgb(212,166,30)" fg:x="15809" fg:w="82"/><text x="38.3869%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="38.2916%" y="149" width="0.1952%" height="15" fill="rgb(249,127,32)" fg:x="15891" fg:w="81"/><text x="38.5845%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.28%)</title><rect x="38.2916%" y="165" width="0.2771%" height="15" fill="rgb(209,103,0)" fg:x="15891" fg:w="115"/><text x="38.5845%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="38.5687%" y="149" width="0.1518%" height="15" fill="rgb(238,209,51)" fg:x="16006" fg:w="63"/><text x="38.8616%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="38.5687%" y="165" width="0.4048%" height="15" fill="rgb(237,56,23)" fg:x="16006" fg:w="168"/><text x="38.8616%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="38.9735%" y="165" width="0.1952%" height="15" fill="rgb(215,153,46)" fg:x="16174" fg:w="81"/><text x="39.2665%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="39.1687%" y="165" width="0.9181%" height="15" fill="rgb(224,49,31)" fg:x="16255" fg:w="381"/><text x="39.4616%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="40.0867%" y="165" width="0.9181%" height="15" fill="rgb(250,18,42)" fg:x="16636" fg:w="381"/><text x="40.3797%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,489 instructions, 44.55%)</title><rect x="0.6024%" y="181" width="44.5518%" height="15" fill="rgb(215,176,39)" fg:x="250" fg:w="18489"/><text x="0.8954%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (336 instructions, 0.81%)</title><rect x="45.1542%" y="181" width="0.8096%" height="15" fill="rgb(223,77,29)" fg:x="18739" fg:w="336"/><text x="45.4472%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="45.9639%" y="165" width="0.0120%" height="15" fill="rgb(234,94,52)" fg:x="19075" fg:w="5"/><text x="46.2568%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="45.9639%" y="181" width="0.0940%" height="15" fill="rgb(220,154,50)" fg:x="19075" fg:w="39"/><text x="46.2568%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (161 instructions, 0.39%)</title><rect x="46.0578%" y="181" width="0.3880%" height="15" fill="rgb(212,11,10)" fg:x="19114" fg:w="161"/><text x="46.3508%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="46.4458%" y="165" width="0.0120%" height="15" fill="rgb(205,166,19)" fg:x="19275" fg:w="5"/><text x="46.7388%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="46.4578%" y="149" width="0.1277%" height="15" fill="rgb(244,198,16)" fg:x="19280" fg:w="53"/><text x="46.7508%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.64%)</title><rect x="46.5855%" y="149" width="0.6434%" height="15" fill="rgb(219,69,12)" fg:x="19333" fg:w="267"/><text x="46.8785%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="47.2289%" y="149" width="0.3880%" height="15" fill="rgb(245,30,7)" fg:x="19600" fg:w="161"/><text x="47.5219%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (718 instructions, 1.73%)</title><rect x="46.4578%" y="165" width="1.7301%" height="15" fill="rgb(218,221,48)" fg:x="19280" fg:w="718"/><text x="46.7508%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 2.26%)</title><rect x="46.4458%" y="181" width="2.2578%" height="15" fill="rgb(216,66,15)" fg:x="19275" fg:w="937"/><text x="46.7388%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="48.7036%" y="181" width="0.1904%" height="15" fill="rgb(226,122,50)" fg:x="20212" fg:w="79"/><text x="48.9966%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="48.8940%" y="181" width="0.1831%" height="15" fill="rgb(239,156,16)" fg:x="20291" fg:w="76"/><text x="49.1869%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="49.0771%" y="181" width="0.1904%" height="15" fill="rgb(224,27,38)" fg:x="20367" fg:w="79"/><text x="49.3701%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="49.2675%" y="149" width="0.0120%" height="15" fill="rgb(224,39,27)" fg:x="20446" fg:w="5"/><text x="49.5604%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="49.2795%" y="133" width="0.1277%" height="15" fill="rgb(215,92,29)" fg:x="20451" fg:w="53"/><text x="49.5725%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="49.4072%" y="133" width="0.7349%" height="15" fill="rgb(207,159,16)" fg:x="20504" fg:w="305"/><text x="49.7002%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="50.1422%" y="133" width="0.1759%" height="15" fill="rgb(238,163,47)" fg:x="20809" fg:w="73"/><text x="50.4351%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="49.2795%" y="149" width="1.6096%" height="15" fill="rgb(219,91,49)" fg:x="20451" fg:w="668"/><text x="49.5725%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 instructions, 1.90%)</title><rect x="49.2675%" y="165" width="1.8964%" height="15" fill="rgb(227,167,31)" fg:x="20446" fg:w="787"/><text x="49.5604%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="51.1639%" y="165" width="0.1831%" height="15" fill="rgb(234,80,54)" fg:x="21233" fg:w="76"/><text x="51.4568%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="51.3470%" y="149" width="0.0120%" height="15" fill="rgb(212,114,2)" fg:x="21309" fg:w="5"/><text x="51.6400%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="51.3590%" y="133" width="0.1277%" height="15" fill="rgb(234,50,24)" fg:x="21314" fg:w="53"/><text x="51.6520%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="51.4867%" y="133" width="0.7349%" height="15" fill="rgb(221,68,8)" fg:x="21367" fg:w="305"/><text x="51.7797%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="52.2217%" y="133" width="0.1759%" height="15" fill="rgb(254,180,31)" fg:x="21672" fg:w="73"/><text x="52.5147%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="51.3590%" y="149" width="1.6096%" height="15" fill="rgb(247,130,50)" fg:x="21314" fg:w="668"/><text x="51.6520%" y="159.50"></text></g><g><title>candid::types::internal::env_add (887 instructions, 2.14%)</title><rect x="51.3470%" y="165" width="2.1373%" height="15" fill="rgb(211,109,4)" fg:x="21309" fg:w="887"/><text x="51.6400%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="53.4843%" y="165" width="0.1831%" height="15" fill="rgb(238,50,21)" fg:x="22196" fg:w="76"/><text x="53.7773%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.6675%" y="149" width="0.0120%" height="15" fill="rgb(225,57,45)" fg:x="22272" fg:w="5"/><text x="53.9604%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="53.6795%" y="133" width="0.1277%" height="15" fill="rgb(209,196,50)" fg:x="22277" fg:w="53"/><text x="53.9725%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.73%)</title><rect x="53.8072%" y="133" width="0.7349%" height="15" fill="rgb(242,140,13)" fg:x="22330" fg:w="305"/><text x="54.1002%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="54.5422%" y="133" width="0.1759%" height="15" fill="rgb(217,111,7)" fg:x="22635" fg:w="73"/><text x="54.8351%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.61%)</title><rect x="53.6795%" y="149" width="1.6096%" height="15" fill="rgb(253,193,51)" fg:x="22277" fg:w="668"/><text x="53.9725%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.07%)</title><rect x="55.2892%" y="149" width="1.0747%" height="15" fill="rgb(252,70,29)" fg:x="22945" fg:w="446"/><text x="55.5821%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="56.3639%" y="133" width="0.1952%" height="15" fill="rgb(232,127,12)" fg:x="23391" fg:w="81"/><text x="56.6568%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.27%)</title><rect x="56.3639%" y="149" width="0.2675%" height="15" fill="rgb(211,180,21)" fg:x="23391" fg:w="111"/><text x="56.6568%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,399 instructions, 3.37%)</title><rect x="53.6675%" y="165" width="3.3711%" height="15" fill="rgb(229,72,13)" fg:x="22272" fg:w="1399"/><text x="53.9604%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="57.0386%" y="117" width="0.1277%" height="15" fill="rgb(240,211,49)" fg:x="23671" fg:w="53"/><text x="57.3315%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="57.0386%" y="133" width="0.1904%" height="15" fill="rgb(219,149,40)" fg:x="23671" fg:w="79"/><text x="57.3315%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.70%)</title><rect x="57.0386%" y="149" width="0.7036%" height="15" fill="rgb(210,127,46)" fg:x="23671" fg:w="292"/><text x="57.3315%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (9 instructions, 0.02%)</title><rect x="57.7422%" y="149" width="0.0217%" height="15" fill="rgb(220,106,7)" fg:x="23963" fg:w="9"/><text x="58.0351%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (15 instructions, 0.04%)</title><rect x="57.7639%" y="149" width="0.0361%" height="15" fill="rgb(249,31,22)" fg:x="23972" fg:w="15"/><text x="58.0568%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="57.8000%" y="149" width="0.0265%" height="15" fill="rgb(253,1,49)" fg:x="23987" fg:w="11"/><text x="58.0930%" y="159.50"></text></g><g><title>candid::types::internal::env_id (523 instructions, 1.26%)</title><rect x="57.0386%" y="165" width="1.2602%" height="15" fill="rgb(227,144,33)" fg:x="23671" fg:w="523"/><text x="57.3315%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,855 instructions, 9.29%)</title><rect x="49.2675%" y="181" width="9.2892%" height="15" fill="rgb(249,163,44)" fg:x="20446" fg:w="3855"/><text x="49.5604%" y="191.50">candid::typ..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="58.5566%" y="181" width="0.1831%" height="15" fill="rgb(234,15,39)" fg:x="24301" fg:w="76"/><text x="58.8496%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="58.7398%" y="181" width="0.1831%" height="15" fill="rgb(207,66,16)" fg:x="24377" fg:w="76"/><text x="59.0327%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="58.9229%" y="149" width="0.0120%" height="15" fill="rgb(233,112,24)" fg:x="24453" fg:w="5"/><text x="59.2159%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="58.9349%" y="133" width="0.1277%" height="15" fill="rgb(230,90,22)" fg:x="24458" fg:w="53"/><text x="59.2279%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="59.0627%" y="133" width="0.2145%" height="15" fill="rgb(229,61,13)" fg:x="24511" fg:w="89"/><text x="59.3556%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="59.2771%" y="133" width="0.3880%" height="15" fill="rgb(225,57,24)" fg:x="24600" fg:w="161"/><text x="59.5701%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="58.9349%" y="149" width="1.3012%" height="15" fill="rgb(208,169,48)" fg:x="24458" fg:w="540"/><text x="59.2279%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (659 instructions, 1.59%)</title><rect x="58.9229%" y="165" width="1.5880%" height="15" fill="rgb(244,218,51)" fg:x="24453" fg:w="659"/><text x="59.2159%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="60.5108%" y="165" width="0.1904%" height="15" fill="rgb(214,148,10)" fg:x="25112" fg:w="79"/><text x="60.8038%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.7012%" y="149" width="0.0120%" height="15" fill="rgb(225,174,27)" fg:x="25191" fg:w="5"/><text x="60.9942%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="60.7133%" y="133" width="0.1277%" height="15" fill="rgb(230,96,26)" fg:x="25196" fg:w="53"/><text x="61.0062%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="60.8410%" y="133" width="0.2145%" height="15" fill="rgb(232,10,30)" fg:x="25249" fg:w="89"/><text x="61.1339%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="61.0554%" y="133" width="0.3880%" height="15" fill="rgb(222,8,50)" fg:x="25338" fg:w="161"/><text x="61.3484%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="60.7133%" y="149" width="1.3012%" height="15" fill="rgb(213,81,27)" fg:x="25196" fg:w="540"/><text x="61.0062%" y="159.50"></text></g><g><title>candid::types::internal::env_add (759 instructions, 1.83%)</title><rect x="60.7012%" y="165" width="1.8289%" height="15" fill="rgb(245,50,10)" fg:x="25191" fg:w="759"/><text x="60.9942%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="62.5301%" y="165" width="0.1831%" height="15" fill="rgb(216,100,18)" fg:x="25950" fg:w="76"/><text x="62.8231%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="62.7133%" y="149" width="0.0120%" height="15" fill="rgb(236,147,54)" fg:x="26026" fg:w="5"/><text x="63.0062%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="62.7253%" y="133" width="0.1277%" height="15" fill="rgb(205,143,26)" fg:x="26031" fg:w="53"/><text x="63.0183%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="62.8530%" y="133" width="0.2145%" height="15" fill="rgb(236,26,9)" fg:x="26084" fg:w="89"/><text x="63.1460%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="63.0675%" y="133" width="0.3880%" height="15" fill="rgb(221,165,53)" fg:x="26173" fg:w="161"/><text x="63.3604%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="62.7253%" y="149" width="1.3012%" height="15" fill="rgb(214,110,17)" fg:x="26031" fg:w="540"/><text x="63.0183%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="64.0265%" y="149" width="0.1639%" height="15" fill="rgb(237,197,12)" fg:x="26571" fg:w="68"/><text x="64.3195%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="64.1904%" y="133" width="0.1952%" height="15" fill="rgb(205,84,17)" fg:x="26639" fg:w="81"/><text x="64.4833%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.27%)</title><rect x="64.1904%" y="149" width="0.2675%" height="15" fill="rgb(237,18,45)" fg:x="26639" fg:w="111"/><text x="64.4833%" y="159.50"></text></g><g><title>candid::types::internal::env_add (893 instructions, 2.15%)</title><rect x="62.7133%" y="165" width="2.1518%" height="15" fill="rgb(221,87,14)" fg:x="26026" fg:w="893"/><text x="63.0062%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="64.8651%" y="117" width="0.1277%" height="15" fill="rgb(238,186,15)" fg:x="26919" fg:w="53"/><text x="65.1580%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="64.8651%" y="133" width="0.1904%" height="15" fill="rgb(208,115,11)" fg:x="26919" fg:w="79"/><text x="65.1580%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="65.5687%" y="117" width="0.1277%" height="15" fill="rgb(254,175,0)" fg:x="27211" fg:w="53"/><text x="65.8616%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="65.5687%" y="133" width="0.1904%" height="15" fill="rgb(227,24,42)" fg:x="27211" fg:w="79"/><text x="65.8616%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.41%)</title><rect x="64.8651%" y="149" width="1.4072%" height="15" fill="rgb(223,211,37)" fg:x="26919" fg:w="584"/><text x="65.1580%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.20%)</title><rect x="66.2723%" y="149" width="0.1976%" height="15" fill="rgb(235,49,27)" fg:x="27503" fg:w="82"/><text x="66.5653%" y="159.50"></text></g><g><title>memset (84 instructions, 0.20%)</title><rect x="66.4699%" y="149" width="0.2024%" height="15" fill="rgb(254,97,51)" fg:x="27585" fg:w="84"/><text x="66.7628%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="66.6723%" y="117" width="0.1277%" height="15" fill="rgb(249,51,40)" fg:x="27669" fg:w="53"/><text x="66.9653%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="66.6723%" y="133" width="0.1904%" height="15" fill="rgb(210,128,45)" fg:x="27669" fg:w="79"/><text x="66.9653%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="67.3759%" y="117" width="0.1277%" height="15" fill="rgb(224,137,50)" fg:x="27961" fg:w="53"/><text x="67.6689%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="67.3759%" y="133" width="0.1904%" height="15" fill="rgb(242,15,9)" fg:x="27961" fg:w="79"/><text x="67.6689%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="68.0795%" y="117" width="0.1277%" height="15" fill="rgb(233,187,41)" fg:x="28253" fg:w="53"/><text x="68.3725%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="68.2072%" y="117" width="0.3687%" height="15" fill="rgb(227,2,29)" fg:x="28306" fg:w="153"/><text x="68.5002%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="68.5759%" y="101" width="0.1277%" height="15" fill="rgb(222,70,3)" fg:x="28459" fg:w="53"/><text x="68.8689%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="68.5759%" y="117" width="0.1904%" height="15" fill="rgb(213,11,42)" fg:x="28459" fg:w="79"/><text x="68.8689%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.85%)</title><rect x="68.0795%" y="133" width="0.8458%" height="15" fill="rgb(225,150,9)" fg:x="28253" fg:w="351"/><text x="68.3725%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,148 instructions, 2.77%)</title><rect x="66.6723%" y="149" width="2.7663%" height="15" fill="rgb(230,162,45)" fg:x="27669" fg:w="1148"/><text x="66.9653%" y="159.50">co..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="69.4386%" y="149" width="0.1952%" height="15" fill="rgb(222,14,52)" fg:x="28817" fg:w="81"/><text x="69.7315%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,760 instructions, 6.65%)</title><rect x="64.8651%" y="165" width="6.6506%" height="15" fill="rgb(254,198,14)" fg:x="26919" fg:w="2760"/><text x="65.1580%" y="175.50">candid:..</text></g><g><title>candid::types::CandidType::ty (5,333 instructions, 12.85%)</title><rect x="58.9229%" y="181" width="12.8506%" height="15" fill="rgb(220,217,30)" fg:x="24453" fg:w="5333"/><text x="59.2159%" y="191.50">candid::types::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="71.7735%" y="181" width="0.1904%" height="15" fill="rgb(215,146,41)" fg:x="29786" fg:w="79"/><text x="72.0665%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="71.9639%" y="165" width="0.0120%" height="15" fill="rgb(217,27,36)" fg:x="29865" fg:w="5"/><text x="72.2568%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="71.9759%" y="149" width="0.1277%" height="15" fill="rgb(219,218,39)" fg:x="29870" fg:w="53"/><text x="72.2689%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.64%)</title><rect x="72.1036%" y="149" width="0.6434%" height="15" fill="rgb(219,4,42)" fg:x="29923" fg:w="267"/><text x="72.3966%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="72.7470%" y="149" width="0.3880%" height="15" fill="rgb(249,119,36)" fg:x="30190" fg:w="161"/><text x="73.0400%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (718 instructions, 1.73%)</title><rect x="71.9759%" y="165" width="1.7301%" height="15" fill="rgb(209,23,33)" fg:x="29870" fg:w="718"/><text x="72.2689%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.97%)</title><rect x="73.7060%" y="165" width="0.9735%" height="15" fill="rgb(211,10,0)" fg:x="30588" fg:w="404"/><text x="73.9990%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="74.6795%" y="149" width="0.1952%" height="15" fill="rgb(208,99,37)" fg:x="30992" fg:w="81"/><text x="74.9725%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.27%)</title><rect x="74.6795%" y="165" width="0.2675%" height="15" fill="rgb(213,132,31)" fg:x="30992" fg:w="111"/><text x="74.9725%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,407 instructions, 3.39%)</title><rect x="71.9639%" y="181" width="3.3904%" height="15" fill="rgb(243,129,40)" fg:x="29865" fg:w="1407"/><text x="72.2568%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="75.3542%" y="133" width="0.1277%" height="15" fill="rgb(210,66,33)" fg:x="31272" fg:w="53"/><text x="75.6472%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="75.4819%" y="133" width="0.3687%" height="15" fill="rgb(209,189,4)" fg:x="31325" fg:w="153"/><text x="75.7749%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="75.8506%" y="117" width="0.1277%" height="15" fill="rgb(214,107,37)" fg:x="31478" fg:w="53"/><text x="76.1436%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="76.0410%" y="117" width="0.3687%" height="15" fill="rgb(245,88,54)" fg:x="31557" fg:w="153"/><text x="76.3339%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (258 instructions, 0.62%)</title><rect x="75.8506%" y="133" width="0.6217%" height="15" fill="rgb(205,146,20)" fg:x="31478" fg:w="258"/><text x="76.1436%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (542 instructions, 1.31%)</title><rect x="75.3542%" y="149" width="1.3060%" height="15" fill="rgb(220,161,25)" fg:x="31272" fg:w="542"/><text x="75.6472%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="77.1735%" y="133" width="0.1277%" height="15" fill="rgb(215,152,15)" fg:x="32027" fg:w="53"/><text x="77.4665%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="77.3012%" y="133" width="0.3687%" height="15" fill="rgb(233,192,44)" fg:x="32080" fg:w="153"/><text x="77.5942%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="77.6699%" y="117" width="0.1277%" height="15" fill="rgb(240,170,46)" fg:x="32233" fg:w="53"/><text x="77.9628%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="77.8602%" y="117" width="0.3687%" height="15" fill="rgb(207,104,33)" fg:x="32312" fg:w="153"/><text x="78.1532%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (258 instructions, 0.62%)</title><rect x="77.6699%" y="133" width="0.6217%" height="15" fill="rgb(219,21,39)" fg:x="32233" fg:w="258"/><text x="77.9628%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (542 instructions, 1.31%)</title><rect x="77.1735%" y="149" width="1.3060%" height="15" fill="rgb(214,133,29)" fg:x="32027" fg:w="542"/><text x="77.4665%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,510 instructions, 3.64%)</title><rect x="75.3542%" y="165" width="3.6386%" height="15" fill="rgb(226,93,6)" fg:x="31272" fg:w="1510"/><text x="75.6472%" y="175.50">cor..</text></g><g><title>candid::types::internal::env_id (1,792 instructions, 4.32%)</title><rect x="75.3542%" y="181" width="4.3181%" height="15" fill="rgb(252,222,34)" fg:x="31272" fg:w="1792"/><text x="75.6472%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="79.6723%" y="181" width="0.0795%" height="15" fill="rgb(252,92,48)" fg:x="33064" fg:w="33"/><text x="79.9653%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="79.7518%" y="165" width="0.1880%" height="15" fill="rgb(245,223,24)" fg:x="33097" fg:w="78"/><text x="80.0448%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="80.0120%" y="165" width="0.2892%" height="15" fill="rgb(205,176,3)" fg:x="33205" fg:w="120"/><text x="80.3050%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (258 instructions, 0.62%)</title><rect x="79.7518%" y="181" width="0.6217%" height="15" fill="rgb(235,151,15)" fg:x="33097" fg:w="258"/><text x="80.0448%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.32%)</title><rect x="80.3735%" y="149" width="0.3157%" height="15" fill="rgb(237,209,11)" fg:x="33355" fg:w="131"/><text x="80.6665%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="80.6892%" y="149" width="0.0795%" height="15" fill="rgb(243,227,24)" fg:x="33486" fg:w="33"/><text x="80.9821%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (284 instructions, 0.68%)</title><rect x="80.3735%" y="165" width="0.6843%" height="15" fill="rgb(239,193,16)" fg:x="33355" fg:w="284"/><text x="80.6665%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.0578%" y="165" width="0.0265%" height="15" fill="rgb(231,27,9)" fg:x="33639" fg:w="11"/><text x="81.3508%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="81.0843%" y="149" width="0.1831%" height="15" fill="rgb(219,169,10)" fg:x="33650" fg:w="76"/><text x="81.3773%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.18%)</title><rect x="81.6289%" y="149" width="0.1759%" height="15" fill="rgb(244,229,43)" fg:x="33876" fg:w="73"/><text x="81.9219%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (449 instructions, 1.08%)</title><rect x="81.0843%" y="165" width="1.0819%" height="15" fill="rgb(254,38,20)" fg:x="33650" fg:w="449"/><text x="81.3773%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="82.1663%" y="165" width="0.0265%" height="15" fill="rgb(250,47,30)" fg:x="34099" fg:w="11"/><text x="82.4592%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="82.1928%" y="165" width="0.0265%" height="15" fill="rgb(224,124,36)" fg:x="34110" fg:w="11"/><text x="82.4857%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.28%)</title><rect x="82.2193%" y="149" width="0.2819%" height="15" fill="rgb(246,68,51)" fg:x="34121" fg:w="117"/><text x="82.5122%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="82.5012%" y="149" width="0.2169%" height="15" fill="rgb(253,43,49)" fg:x="34238" fg:w="90"/><text x="82.7942%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.27%)</title><rect x="82.7181%" y="149" width="0.2651%" height="15" fill="rgb(219,54,36)" fg:x="34328" fg:w="110"/><text x="83.0110%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="82.9831%" y="149" width="0.1325%" height="15" fill="rgb(227,133,34)" fg:x="34438" fg:w="55"/><text x="83.2761%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (442 instructions, 1.07%)</title><rect x="82.2193%" y="165" width="1.0651%" height="15" fill="rgb(247,227,15)" fg:x="34121" fg:w="442"/><text x="82.5122%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="83.2843%" y="149" width="0.0361%" height="15" fill="rgb(229,96,14)" fg:x="34563" fg:w="15"/><text x="83.5773%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="83.3205%" y="149" width="0.0361%" height="15" fill="rgb(220,79,17)" fg:x="34578" fg:w="15"/><text x="83.6135%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="83.3566%" y="133" width="0.1711%" height="15" fill="rgb(205,131,53)" fg:x="34593" fg:w="71"/><text x="83.6496%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.17%)</title><rect x="83.5277%" y="133" width="0.1663%" height="15" fill="rgb(209,50,29)" fg:x="34664" fg:w="69"/><text x="83.8207%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="83.6940%" y="133" width="0.1590%" height="15" fill="rgb(245,86,46)" fg:x="34733" fg:w="66"/><text x="83.9869%" y="143.50"></text></g><g><title>binread::BinRead::read (250 instructions, 0.60%)</title><rect x="83.3566%" y="149" width="0.6024%" height="15" fill="rgb(235,66,46)" fg:x="34593" fg:w="250"/><text x="83.6496%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.12%)</title><rect x="83.9590%" y="149" width="0.1229%" height="15" fill="rgb(232,148,31)" fg:x="34843" fg:w="51"/><text x="84.2520%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.0819%" y="149" width="0.1831%" height="15" fill="rgb(217,149,8)" fg:x="34894" fg:w="76"/><text x="84.3749%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.25%)</title><rect x="84.2651%" y="149" width="0.2530%" height="15" fill="rgb(209,183,11)" fg:x="34970" fg:w="105"/><text x="84.5580%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.35%)</title><rect x="84.5181%" y="149" width="0.3470%" height="15" fill="rgb(208,55,20)" fg:x="35075" fg:w="144"/><text x="84.8110%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (798 instructions, 1.92%)</title><rect x="83.2843%" y="165" width="1.9229%" height="15" fill="rgb(218,39,14)" fg:x="34563" fg:w="798"/><text x="83.5773%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="85.2072%" y="165" width="0.0265%" height="15" fill="rgb(216,169,33)" fg:x="35361" fg:w="11"/><text x="85.5002%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="85.2337%" y="165" width="0.0265%" height="15" fill="rgb(233,80,24)" fg:x="35372" fg:w="11"/><text x="85.5267%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="85.2602%" y="149" width="0.1831%" height="15" fill="rgb(213,179,31)" fg:x="35383" fg:w="76"/><text x="85.5532%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.22%)</title><rect x="85.4434%" y="149" width="0.2169%" height="15" fill="rgb(209,19,5)" fg:x="35459" fg:w="90"/><text x="85.7363%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="85.6602%" y="149" width="0.0386%" height="15" fill="rgb(219,18,35)" fg:x="35549" fg:w="16"/><text x="85.9532%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.27%)</title><rect x="85.6988%" y="149" width="0.2651%" height="15" fill="rgb(209,169,16)" fg:x="35565" fg:w="110"/><text x="85.9918%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="85.9639%" y="149" width="0.1325%" height="15" fill="rgb(245,90,51)" fg:x="35675" fg:w="55"/><text x="86.2568%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 1.02%)</title><rect x="85.2602%" y="165" width="1.0169%" height="15" fill="rgb(220,99,45)" fg:x="35383" fg:w="422"/><text x="85.5532%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="86.2771%" y="165" width="0.0361%" height="15" fill="rgb(249,89,25)" fg:x="35805" fg:w="15"/><text x="86.5701%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="86.3133%" y="165" width="0.0361%" height="15" fill="rgb(239,193,0)" fg:x="35820" fg:w="15"/><text x="86.6062%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="86.3494%" y="149" width="0.0120%" height="15" fill="rgb(231,126,1)" fg:x="35835" fg:w="5"/><text x="86.6424%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="86.3614%" y="149" width="0.1952%" height="15" fill="rgb(243,166,3)" fg:x="35840" fg:w="81"/><text x="86.6544%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="86.5566%" y="149" width="0.0120%" height="15" fill="rgb(223,22,34)" fg:x="35921" fg:w="5"/><text x="86.8496%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.31%)</title><rect x="86.5687%" y="149" width="0.3060%" height="15" fill="rgb(251,52,51)" fg:x="35926" fg:w="127"/><text x="86.8616%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (249 instructions, 0.60%)</title><rect x="86.3494%" y="165" width="0.6000%" height="15" fill="rgb(221,165,28)" fg:x="35835" fg:w="249"/><text x="86.6424%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,789 instructions, 9.13%)</title><rect x="80.3735%" y="181" width="9.1301%" height="15" fill="rgb(218,121,47)" fg:x="33355" fg:w="3789"/><text x="80.6665%" y="191.50">subscriber:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="89.5036%" y="165" width="0.1952%" height="15" fill="rgb(209,120,9)" fg:x="37144" fg:w="81"/><text x="89.7966%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="89.6988%" y="165" width="0.1952%" height="15" fill="rgb(236,68,12)" fg:x="37225" fg:w="81"/><text x="89.9918%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (204 instructions, 0.49%)</title><rect x="89.5036%" y="181" width="0.4916%" height="15" fill="rgb(225,194,26)" fg:x="37144" fg:w="204"/><text x="89.7966%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.9952%" y="181" width="0.0265%" height="15" fill="rgb(231,84,39)" fg:x="37348" fg:w="11"/><text x="90.2881%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="90.0217%" y="181" width="0.0265%" height="15" fill="rgb(210,11,45)" fg:x="37359" fg:w="11"/><text x="90.3147%" y="191.50"></text></g><g><title>memcpy (411 instructions, 0.99%)</title><rect x="90.0482%" y="181" width="0.9904%" height="15" fill="rgb(224,54,52)" fg:x="37370" fg:w="411"/><text x="90.3412%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="91.0386%" y="149" width="0.1952%" height="15" fill="rgb(238,102,14)" fg:x="37781" fg:w="81"/><text x="91.3315%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="91.2337%" y="133" width="0.1952%" height="15" fill="rgb(243,160,52)" fg:x="37862" fg:w="81"/><text x="91.5267%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (167 instructions, 0.40%)</title><rect x="91.4289%" y="117" width="0.4024%" height="15" fill="rgb(216,114,19)" fg:x="37943" fg:w="167"/><text x="91.7219%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (197 instructions, 0.47%)</title><rect x="91.4289%" y="133" width="0.4747%" height="15" fill="rgb(244,166,37)" fg:x="37943" fg:w="197"/><text x="91.7219%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="91.9036%" y="133" width="0.1952%" height="15" fill="rgb(246,29,44)" fg:x="38140" fg:w="81"/><text x="92.1966%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.0988%" y="133" width="0.0265%" height="15" fill="rgb(215,56,53)" fg:x="38221" fg:w="11"/><text x="92.3918%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (170 instructions, 0.41%)</title><rect x="92.1253%" y="133" width="0.4096%" height="15" fill="rgb(217,60,2)" fg:x="38232" fg:w="170"/><text x="92.4183%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="92.5349%" y="133" width="0.1880%" height="15" fill="rgb(207,26,24)" fg:x="38402" fg:w="78"/><text x="92.8279%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (755 instructions, 1.82%)</title><rect x="91.2337%" y="149" width="1.8193%" height="15" fill="rgb(252,210,15)" fg:x="37862" fg:w="755"/><text x="91.5267%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="93.0530%" y="133" width="0.1518%" height="15" fill="rgb(253,209,26)" fg:x="38617" fg:w="63"/><text x="93.3460%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (207 instructions, 0.50%)</title><rect x="93.0530%" y="149" width="0.4988%" height="15" fill="rgb(238,170,14)" fg:x="38617" fg:w="207"/><text x="93.3460%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,123 instructions, 2.71%)</title><rect x="91.0386%" y="165" width="2.7060%" height="15" fill="rgb(216,178,15)" fg:x="37781" fg:w="1123"/><text x="91.3315%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="93.7446%" y="165" width="0.2892%" height="15" fill="rgb(250,197,2)" fg:x="38904" fg:w="120"/><text x="94.0375%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="94.0337%" y="133" width="0.1518%" height="15" fill="rgb(212,70,42)" fg:x="39024" fg:w="63"/><text x="94.3267%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.59%)</title><rect x="94.0337%" y="149" width="0.5855%" height="15" fill="rgb(227,213,9)" fg:x="39024" fg:w="243"/><text x="94.3267%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (273 instructions, 0.66%)</title><rect x="94.0337%" y="165" width="0.6578%" height="15" fill="rgb(245,99,25)" fg:x="39024" fg:w="273"/><text x="94.3267%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.6916%" y="165" width="0.0265%" height="15" fill="rgb(250,82,29)" fg:x="39297" fg:w="11"/><text x="94.9845%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (1,594 instructions, 3.84%)</title><rect x="91.0386%" y="181" width="3.8410%" height="15" fill="rgb(241,226,54)" fg:x="37781" fg:w="1594"/><text x="91.3315%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.30%)</title><rect x="94.8795%" y="181" width="0.2988%" height="15" fill="rgb(221,99,41)" fg:x="39375" fg:w="124"/><text x="95.1725%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="95.1783%" y="181" width="0.1325%" height="15" fill="rgb(213,90,21)" fg:x="39499" fg:w="55"/><text x="95.4713%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="95.3108%" y="149" width="0.0120%" height="15" fill="rgb(205,208,24)" fg:x="39554" fg:w="5"/><text x="95.6038%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.3229%" y="149" width="0.0265%" height="15" fill="rgb(246,31,12)" fg:x="39559" fg:w="11"/><text x="95.6159%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.3494%" y="149" width="0.0265%" height="15" fill="rgb(213,154,6)" fg:x="39570" fg:w="11"/><text x="95.6424%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="95.3759%" y="149" width="0.0265%" height="15" fill="rgb(222,163,29)" fg:x="39581" fg:w="11"/><text x="95.6689%" y="159.50"></text></g><g><title>memset (136 instructions, 0.33%)</title><rect x="95.4024%" y="149" width="0.3277%" height="15" fill="rgb(227,201,8)" fg:x="39592" fg:w="136"/><text x="95.6954%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (385 instructions, 0.93%)</title><rect x="95.3108%" y="165" width="0.9277%" height="15" fill="rgb(233,9,32)" fg:x="39554" fg:w="385"/><text x="95.6038%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="96.2386%" y="149" width="0.0771%" height="15" fill="rgb(217,54,24)" fg:x="39939" fg:w="32"/><text x="96.5315%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="96.3157%" y="101" width="0.1831%" height="15" fill="rgb(235,192,0)" fg:x="39971" fg:w="76"/><text x="96.6086%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="96.3157%" y="117" width="0.2675%" height="15" fill="rgb(235,45,9)" fg:x="39971" fg:w="111"/><text x="96.6086%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 instructions, 0.43%)</title><rect x="96.3157%" y="133" width="0.4337%" height="15" fill="rgb(246,42,40)" fg:x="39971" fg:w="180"/><text x="96.6086%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="96.7494%" y="133" width="0.0265%" height="15" fill="rgb(248,111,24)" fg:x="40151" fg:w="11"/><text x="97.0424%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="96.7759%" y="133" width="0.0265%" height="15" fill="rgb(249,65,22)" fg:x="40162" fg:w="11"/><text x="97.0689%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (367 instructions, 0.88%)</title><rect x="96.3157%" y="149" width="0.8843%" height="15" fill="rgb(238,111,51)" fg:x="39971" fg:w="367"/><text x="96.6086%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.2000%" y="149" width="0.0723%" height="15" fill="rgb(250,118,22)" fg:x="40338" fg:w="30"/><text x="97.4930%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.2723%" y="149" width="0.0120%" height="15" fill="rgb(234,84,26)" fg:x="40368" fg:w="5"/><text x="97.5653%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (502 instructions, 1.21%)</title><rect x="96.2386%" y="165" width="1.2096%" height="15" fill="rgb(243,172,12)" fg:x="39939" fg:w="502"/><text x="96.5315%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.4482%" y="165" width="0.0120%" height="15" fill="rgb(236,150,49)" fg:x="40441" fg:w="5"/><text x="97.7412%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="97.4602%" y="165" width="0.1325%" height="15" fill="rgb(225,197,26)" fg:x="40446" fg:w="55"/><text x="97.7532%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (1,021 instructions, 2.46%)</title><rect x="95.3108%" y="181" width="2.4602%" height="15" fill="rgb(214,17,42)" fg:x="39554" fg:w="1021"/><text x="95.6038%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (41,006 instructions, 98.81%)</title><rect x="0.4193%" y="197" width="98.8096%" height="15" fill="rgb(224,165,40)" fg:x="174" fg:w="41006"/><text x="0.7122%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2289%" y="197" width="0.0289%" height="15" fill="rgb(246,100,4)" fg:x="41180" fg:w="12"/><text x="99.5219%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.20%)</title><rect x="99.2578%" y="197" width="0.1952%" height="15" fill="rgb(222,103,0)" fg:x="41192" fg:w="81"/><text x="99.5508%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.30%)</title><rect x="99.4530%" y="197" width="0.2988%" height="15" fill="rgb(227,189,26)" fg:x="41273" fg:w="124"/><text x="99.7460%" y="207.50"></text></g><g><title>all (41,500 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(214,202,17)" fg:x="0" fg:w="41500"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (41,500 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(229,111,3)" fg:x="0" fg:w="41500"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>