<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="51818"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="197" width="0.0463%" height="15" fill="rgb(232,180,48)" fg:x="0" fg:w="24"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0463%" y="197" width="0.1602%" height="15" fill="rgb(230,27,33)" fg:x="24" fg:w="83"/><text x="0.3393%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2065%" y="197" width="0.1602%" height="15" fill="rgb(205,31,21)" fg:x="107" fg:w="83"/><text x="0.4995%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3667%" y="181" width="0.1602%" height="15" fill="rgb(253,59,4)" fg:x="190" fg:w="83"/><text x="0.6596%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5268%" y="165" width="0.1582%" height="15" fill="rgb(224,201,9)" fg:x="273" fg:w="82"/><text x="0.8198%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6851%" y="149" width="0.0116%" height="15" fill="rgb(229,206,30)" fg:x="355" fg:w="6"/><text x="0.9781%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.85%)</title><rect x="0.6851%" y="165" width="0.8549%" height="15" fill="rgb(212,67,47)" fg:x="355" fg:w="443"/><text x="0.9781%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="1.5400%" y="165" width="0.1833%" height="15" fill="rgb(211,96,50)" fg:x="798" fg:w="95"/><text x="1.8330%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7233%" y="165" width="0.1158%" height="15" fill="rgb(252,114,18)" fg:x="893" fg:w="60"/><text x="2.0163%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8391%" y="165" width="0.1158%" height="15" fill="rgb(223,58,37)" fg:x="953" fg:w="60"/><text x="2.1321%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9549%" y="165" width="0.1158%" height="15" fill="rgb(237,70,4)" fg:x="1013" fg:w="60"/><text x="2.2479%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0707%" y="165" width="0.1158%" height="15" fill="rgb(244,85,46)" fg:x="1073" fg:w="60"/><text x="2.3637%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.1865%" y="165" width="0.1582%" height="15" fill="rgb(223,39,52)" fg:x="1133" fg:w="82"/><text x="2.4795%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="2.3447%" y="165" width="0.1351%" height="15" fill="rgb(218,200,14)" fg:x="1215" fg:w="70"/><text x="2.6377%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4798%" y="149" width="0.0116%" height="15" fill="rgb(208,171,16)" fg:x="1285" fg:w="6"/><text x="2.7728%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.85%)</title><rect x="2.4798%" y="165" width="0.8549%" height="15" fill="rgb(234,200,18)" fg:x="1285" fg:w="443"/><text x="2.7728%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3347%" y="165" width="0.0367%" height="15" fill="rgb(228,45,11)" fg:x="1728" fg:w="19"/><text x="3.6277%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.16%)</title><rect x="3.3714%" y="149" width="0.1563%" height="15" fill="rgb(237,182,11)" fg:x="1747" fg:w="81"/><text x="3.6644%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.5277%" y="117" width="0.1293%" height="15" fill="rgb(241,175,49)" fg:x="1828" fg:w="67"/><text x="3.8207%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.19%)</title><rect x="3.5277%" y="133" width="0.1853%" height="15" fill="rgb(247,38,35)" fg:x="1828" fg:w="96"/><text x="3.8207%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.7130%" y="85" width="0.0212%" height="15" fill="rgb(228,39,49)" fg:x="1924" fg:w="11"/><text x="4.0060%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.7342%" y="69" width="0.0675%" height="15" fill="rgb(226,101,26)" fg:x="1935" fg:w="35"/><text x="4.0272%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="3.7342%" y="85" width="0.1235%" height="15" fill="rgb(206,141,19)" fg:x="1935" fg:w="64"/><text x="4.0272%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="3.7130%" y="101" width="0.2779%" height="15" fill="rgb(211,200,13)" fg:x="1924" fg:w="144"/><text x="4.0060%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.40%)</title><rect x="3.7130%" y="117" width="0.4033%" height="15" fill="rgb(241,121,6)" fg:x="1924" fg:w="209"/><text x="4.0060%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.42%)</title><rect x="3.7130%" y="133" width="0.4226%" height="15" fill="rgb(234,221,29)" fg:x="1924" fg:w="219"/><text x="4.0060%" y="143.50"></text></g><g><title>core::fmt::write (453 instructions, 0.87%)</title><rect x="3.5277%" y="149" width="0.8742%" height="15" fill="rgb(229,136,5)" fg:x="1828" fg:w="453"/><text x="3.8207%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (672 instructions, 1.30%)</title><rect x="3.3714%" y="165" width="1.2968%" height="15" fill="rgb(238,36,11)" fg:x="1747" fg:w="672"/><text x="3.6644%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="4.6683%" y="165" width="0.1833%" height="15" fill="rgb(251,55,41)" fg:x="2419" fg:w="95"/><text x="4.9612%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="4.8516%" y="165" width="0.1718%" height="15" fill="rgb(242,34,40)" fg:x="2514" fg:w="89"/><text x="5.1446%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="5.0234%" y="149" width="0.1158%" height="15" fill="rgb(215,42,17)" fg:x="2603" fg:w="60"/><text x="5.3163%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="5.1391%" y="149" width="0.1602%" height="15" fill="rgb(207,44,46)" fg:x="2663" fg:w="83"/><text x="5.4321%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.22%)</title><rect x="5.2993%" y="133" width="0.2200%" height="15" fill="rgb(211,206,28)" fg:x="2746" fg:w="114"/><text x="5.5923%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="5.5193%" y="101" width="0.2528%" height="15" fill="rgb(237,167,16)" fg:x="2860" fg:w="131"/><text x="5.8123%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.31%)</title><rect x="5.5193%" y="117" width="0.3088%" height="15" fill="rgb(233,66,6)" fg:x="2860" fg:w="160"/><text x="5.8123%" y="127.50"></text></g><g><title>__rust_realloc (111 instructions, 0.21%)</title><rect x="5.8281%" y="37" width="0.2142%" height="15" fill="rgb(246,123,29)" fg:x="3020" fg:w="111"/><text x="6.1211%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.30%)</title><rect x="5.8281%" y="53" width="0.3011%" height="15" fill="rgb(209,62,40)" fg:x="3020" fg:w="156"/><text x="6.1211%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.47%)</title><rect x="5.8281%" y="69" width="0.4689%" height="15" fill="rgb(218,4,25)" fg:x="3020" fg:w="243"/><text x="6.1211%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="6.2970%" y="69" width="0.3088%" height="15" fill="rgb(253,91,49)" fg:x="3263" fg:w="160"/><text x="6.5900%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (443 instructions, 0.85%)</title><rect x="5.8281%" y="85" width="0.8549%" height="15" fill="rgb(228,155,29)" fg:x="3020" fg:w="443"/><text x="6.1211%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.6830%" y="53" width="0.0212%" height="15" fill="rgb(243,57,37)" fg:x="3463" fg:w="11"/><text x="6.9760%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.7042%" y="37" width="0.0675%" height="15" fill="rgb(244,167,17)" fg:x="3474" fg:w="35"/><text x="6.9972%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="6.7042%" y="53" width="0.1235%" height="15" fill="rgb(207,181,38)" fg:x="3474" fg:w="64"/><text x="6.9972%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="6.6830%" y="69" width="0.2779%" height="15" fill="rgb(211,8,23)" fg:x="3463" fg:w="144"/><text x="6.9760%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.41%)</title><rect x="6.6830%" y="85" width="0.4111%" height="15" fill="rgb(235,11,44)" fg:x="3463" fg:w="213"/><text x="6.9760%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="7.0941%" y="69" width="0.0984%" height="15" fill="rgb(248,18,52)" fg:x="3676" fg:w="51"/><text x="7.3870%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.15%)</title><rect x="7.0941%" y="85" width="0.1544%" height="15" fill="rgb(208,4,7)" fg:x="3676" fg:w="80"/><text x="7.3870%" y="95.50"></text></g><g><title>core::fmt::write (902 instructions, 1.74%)</title><rect x="5.8281%" y="101" width="1.7407%" height="15" fill="rgb(240,17,39)" fg:x="3020" fg:w="902"/><text x="6.1211%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (968 instructions, 1.87%)</title><rect x="5.8281%" y="117" width="1.8681%" height="15" fill="rgb(207,170,3)" fg:x="3020" fg:w="968"/><text x="6.1211%" y="127.50"></text></g><g><title>core::fmt::write (1,266 instructions, 2.44%)</title><rect x="5.5193%" y="133" width="2.4432%" height="15" fill="rgb(236,100,52)" fg:x="2860" fg:w="1266"/><text x="5.8123%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,518 instructions, 2.93%)</title><rect x="5.2993%" y="149" width="2.9295%" height="15" fill="rgb(246,78,51)" fg:x="2746" fg:w="1518"/><text x="5.5923%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="8.2288%" y="149" width="0.1602%" height="15" fill="rgb(211,17,15)" fg:x="4264" fg:w="83"/><text x="8.5218%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="8.3890%" y="149" width="0.1158%" height="15" fill="rgb(209,59,46)" fg:x="4347" fg:w="60"/><text x="8.6819%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.5048%" y="149" width="0.1467%" height="15" fill="rgb(210,92,25)" fg:x="4407" fg:w="76"/><text x="8.7977%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.6514%" y="117" width="0.1602%" height="15" fill="rgb(238,174,52)" fg:x="4483" fg:w="83"/><text x="8.9444%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="8.6514%" y="133" width="0.2432%" height="15" fill="rgb(230,73,7)" fg:x="4483" fg:w="126"/><text x="8.9444%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.41%)</title><rect x="8.6514%" y="149" width="0.4072%" height="15" fill="rgb(243,124,40)" fg:x="4483" fg:w="211"/><text x="8.9444%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="9.0586%" y="149" width="0.1158%" height="15" fill="rgb(244,170,11)" fg:x="4694" fg:w="60"/><text x="9.3516%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.16%)</title><rect x="9.1744%" y="149" width="0.1563%" height="15" fill="rgb(207,114,54)" fg:x="4754" fg:w="81"/><text x="9.4674%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="9.3307%" y="133" width="0.1756%" height="15" fill="rgb(205,42,20)" fg:x="4835" fg:w="91"/><text x="9.6237%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="9.5063%" y="101" width="0.2528%" height="15" fill="rgb(230,30,28)" fg:x="4926" fg:w="131"/><text x="9.7993%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.31%)</title><rect x="9.5063%" y="117" width="0.3088%" height="15" fill="rgb(205,73,54)" fg:x="4926" fg:w="160"/><text x="9.7993%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.17%)</title><rect x="9.8151%" y="37" width="0.1679%" height="15" fill="rgb(254,227,23)" fg:x="5086" fg:w="87"/><text x="10.1081%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.25%)</title><rect x="9.8151%" y="53" width="0.2547%" height="15" fill="rgb(228,202,34)" fg:x="5086" fg:w="132"/><text x="10.1081%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.42%)</title><rect x="9.8151%" y="69" width="0.4226%" height="15" fill="rgb(222,225,37)" fg:x="5086" fg:w="219"/><text x="10.1081%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="10.2378%" y="69" width="0.3088%" height="15" fill="rgb(221,14,54)" fg:x="5305" fg:w="160"/><text x="10.5307%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (419 instructions, 0.81%)</title><rect x="9.8151%" y="85" width="0.8086%" height="15" fill="rgb(254,102,2)" fg:x="5086" fg:w="419"/><text x="10.1081%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="10.6237%" y="53" width="0.0212%" height="15" fill="rgb(232,104,17)" fg:x="5505" fg:w="11"/><text x="10.9167%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="10.6449%" y="37" width="0.0675%" height="15" fill="rgb(250,220,14)" fg:x="5516" fg:w="35"/><text x="10.9379%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="10.6449%" y="53" width="0.1235%" height="15" fill="rgb(241,158,9)" fg:x="5516" fg:w="64"/><text x="10.9379%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="10.6237%" y="69" width="0.2779%" height="15" fill="rgb(246,9,43)" fg:x="5505" fg:w="144"/><text x="10.9167%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.41%)</title><rect x="10.6237%" y="85" width="0.4111%" height="15" fill="rgb(206,73,33)" fg:x="5505" fg:w="213"/><text x="10.9167%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="11.0348%" y="69" width="0.0984%" height="15" fill="rgb(222,79,8)" fg:x="5718" fg:w="51"/><text x="11.3277%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.15%)</title><rect x="11.0348%" y="85" width="0.1544%" height="15" fill="rgb(234,8,54)" fg:x="5718" fg:w="80"/><text x="11.3277%" y="95.50"></text></g><g><title>core::fmt::write (878 instructions, 1.69%)</title><rect x="9.8151%" y="101" width="1.6944%" height="15" fill="rgb(209,134,38)" fg:x="5086" fg:w="878"/><text x="10.1081%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (944 instructions, 1.82%)</title><rect x="9.8151%" y="117" width="1.8218%" height="15" fill="rgb(230,127,29)" fg:x="5086" fg:w="944"/><text x="10.1081%" y="127.50"></text></g><g><title>core::fmt::write (1,242 instructions, 2.40%)</title><rect x="9.5063%" y="133" width="2.3969%" height="15" fill="rgb(242,44,41)" fg:x="4926" fg:w="1242"/><text x="9.7993%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,471 instructions, 2.84%)</title><rect x="9.3307%" y="149" width="2.8388%" height="15" fill="rgb(222,56,43)" fg:x="4835" fg:w="1471"/><text x="9.6237%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="12.1695%" y="149" width="0.1602%" height="15" fill="rgb(238,39,47)" fg:x="6306" fg:w="83"/><text x="12.4625%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="12.3297%" y="149" width="0.1216%" height="15" fill="rgb(226,79,43)" fg:x="6389" fg:w="63"/><text x="12.6227%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="12.4513%" y="149" width="0.1467%" height="15" fill="rgb(242,105,53)" fg:x="6452" fg:w="76"/><text x="12.7442%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="12.5979%" y="149" width="0.1158%" height="15" fill="rgb(251,132,46)" fg:x="6528" fg:w="60"/><text x="12.8909%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="12.7137%" y="133" width="0.1582%" height="15" fill="rgb(231,77,14)" fg:x="6588" fg:w="82"/><text x="13.0067%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="12.8720%" y="133" width="0.1351%" height="15" fill="rgb(240,135,9)" fg:x="6670" fg:w="70"/><text x="13.1649%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="13.0071%" y="117" width="0.0116%" height="15" fill="rgb(248,109,14)" fg:x="6740" fg:w="6"/><text x="13.3000%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.85%)</title><rect x="13.0071%" y="133" width="0.8549%" height="15" fill="rgb(227,146,52)" fg:x="6740" fg:w="443"/><text x="13.3000%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="13.8620%" y="133" width="0.0367%" height="15" fill="rgb(232,54,3)" fg:x="7183" fg:w="19"/><text x="14.1549%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="13.8986%" y="117" width="0.1756%" height="15" fill="rgb(229,201,43)" fg:x="7202" fg:w="91"/><text x="14.1916%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="14.0743%" y="85" width="0.1293%" height="15" fill="rgb(252,161,33)" fg:x="7293" fg:w="67"/><text x="14.3672%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.19%)</title><rect x="14.0743%" y="101" width="0.1853%" height="15" fill="rgb(226,146,40)" fg:x="7293" fg:w="96"/><text x="14.3672%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="14.2595%" y="53" width="0.0212%" height="15" fill="rgb(219,47,25)" fg:x="7389" fg:w="11"/><text x="14.5525%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="14.2808%" y="37" width="0.0675%" height="15" fill="rgb(250,135,13)" fg:x="7400" fg:w="35"/><text x="14.5737%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="14.2808%" y="53" width="0.1235%" height="15" fill="rgb(219,229,18)" fg:x="7400" fg:w="64"/><text x="14.5737%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="14.2595%" y="69" width="0.2779%" height="15" fill="rgb(217,152,27)" fg:x="7389" fg:w="144"/><text x="14.5525%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.40%)</title><rect x="14.2595%" y="85" width="0.4033%" height="15" fill="rgb(225,71,47)" fg:x="7389" fg:w="209"/><text x="14.5525%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.42%)</title><rect x="14.2595%" y="101" width="0.4226%" height="15" fill="rgb(220,139,14)" fg:x="7389" fg:w="219"/><text x="14.5525%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.87%)</title><rect x="14.0743%" y="117" width="0.8742%" height="15" fill="rgb(247,54,32)" fg:x="7293" fg:w="453"/><text x="14.3672%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.32%)</title><rect x="13.8986%" y="133" width="1.3161%" height="15" fill="rgb(252,131,39)" fg:x="7202" fg:w="682"/><text x="14.1916%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="15.2148%" y="133" width="0.1833%" height="15" fill="rgb(210,108,39)" fg:x="7884" fg:w="95"/><text x="15.5078%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="15.3981%" y="133" width="0.1216%" height="15" fill="rgb(205,23,29)" fg:x="7979" fg:w="63"/><text x="15.6911%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="15.5197%" y="117" width="0.1582%" height="15" fill="rgb(246,139,46)" fg:x="8042" fg:w="82"/><text x="15.8127%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.57%)</title><rect x="15.6779%" y="117" width="0.5674%" height="15" fill="rgb(250,81,26)" fg:x="8124" fg:w="294"/><text x="15.9709%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="16.2453%" y="101" width="0.1582%" height="15" fill="rgb(214,104,7)" fg:x="8418" fg:w="82"/><text x="16.5383%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="16.4036%" y="101" width="0.1833%" height="15" fill="rgb(233,189,8)" fg:x="8500" fg:w="95"/><text x="16.6965%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.5869%" y="101" width="0.1467%" height="15" fill="rgb(228,141,17)" fg:x="8595" fg:w="76"/><text x="16.8799%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.64%)</title><rect x="16.2453%" y="117" width="0.6368%" height="15" fill="rgb(247,157,1)" fg:x="8418" fg:w="330"/><text x="16.5383%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.8822%" y="117" width="0.1467%" height="15" fill="rgb(249,225,5)" fg:x="8748" fg:w="76"/><text x="17.1751%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 1.79%)</title><rect x="15.5197%" y="133" width="1.7909%" height="15" fill="rgb(242,55,13)" fg:x="8042" fg:w="928"/><text x="15.8127%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="17.3106%" y="133" width="0.1756%" height="15" fill="rgb(230,49,50)" fg:x="8970" fg:w="91"/><text x="17.6036%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="17.4862%" y="117" width="0.1582%" height="15" fill="rgb(241,111,38)" fg:x="9061" fg:w="82"/><text x="17.7792%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.57%)</title><rect x="17.6444%" y="117" width="0.5674%" height="15" fill="rgb(252,155,4)" fg:x="9143" fg:w="294"/><text x="17.9374%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="18.2118%" y="101" width="0.1582%" height="15" fill="rgb(212,69,32)" fg:x="9437" fg:w="82"/><text x="18.5048%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="18.3701%" y="101" width="0.1833%" height="15" fill="rgb(243,107,47)" fg:x="9519" fg:w="95"/><text x="18.6630%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.5534%" y="101" width="0.1467%" height="15" fill="rgb(247,130,12)" fg:x="9614" fg:w="76"/><text x="18.8464%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.64%)</title><rect x="18.2118%" y="117" width="0.6368%" height="15" fill="rgb(233,74,16)" fg:x="9437" fg:w="330"/><text x="18.5048%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.8487%" y="117" width="0.1467%" height="15" fill="rgb(208,58,18)" fg:x="9767" fg:w="76"/><text x="19.1416%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 1.79%)</title><rect x="17.4862%" y="133" width="1.7909%" height="15" fill="rgb(242,225,1)" fg:x="9061" fg:w="928"/><text x="17.7792%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.05%)</title><rect x="19.2771%" y="133" width="0.0502%" height="15" fill="rgb(249,39,40)" fg:x="9989" fg:w="26"/><text x="19.5701%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="19.3273%" y="133" width="0.1467%" height="15" fill="rgb(207,72,44)" fg:x="10015" fg:w="76"/><text x="19.6202%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,909 instructions, 7.54%)</title><rect x="12.7137%" y="149" width="7.5437%" height="15" fill="rgb(215,193,12)" fg:x="6588" fg:w="3909"/><text x="13.0067%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="20.2594%" y="133" width="0.1718%" height="15" fill="rgb(248,41,39)" fg:x="10498" fg:w="89"/><text x="20.5523%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="20.5064%" y="133" width="0.1602%" height="15" fill="rgb(253,85,4)" fg:x="10626" fg:w="83"/><text x="20.7994%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (250 instructions, 0.48%)</title><rect x="20.2574%" y="149" width="0.4825%" height="15" fill="rgb(243,70,31)" fg:x="10497" fg:w="250"/><text x="20.5504%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="20.7399%" y="133" width="0.0444%" height="15" fill="rgb(253,195,26)" fg:x="10747" fg:w="23"/><text x="21.0329%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.27%)</title><rect x="20.7399%" y="149" width="0.2663%" height="15" fill="rgb(243,42,11)" fg:x="10747" fg:w="138"/><text x="21.0329%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (9,020 instructions, 17.41%)</title><rect x="5.0234%" y="165" width="17.4071%" height="15" fill="rgb(239,66,17)" fg:x="2603" fg:w="9020"/><text x="5.3163%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (65 instructions, 0.13%)</title><rect x="22.4304%" y="165" width="0.1254%" height="15" fill="rgb(217,132,21)" fg:x="11623" fg:w="65"/><text x="22.7234%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="22.5559%" y="165" width="0.1467%" height="15" fill="rgb(252,202,21)" fg:x="11688" fg:w="76"/><text x="22.8488%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="22.7025%" y="165" width="0.1351%" height="15" fill="rgb(233,98,36)" fg:x="11764" fg:w="70"/><text x="22.9955%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="22.8376%" y="133" width="0.0116%" height="15" fill="rgb(216,153,54)" fg:x="11834" fg:w="6"/><text x="23.1306%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.85%)</title><rect x="22.8376%" y="149" width="0.8549%" height="15" fill="rgb(250,99,7)" fg:x="11834" fg:w="443"/><text x="23.1306%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="23.6925%" y="149" width="0.0367%" height="15" fill="rgb(207,56,50)" fg:x="12277" fg:w="19"/><text x="23.9855%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="23.7292%" y="133" width="0.1602%" height="15" fill="rgb(244,61,34)" fg:x="12296" fg:w="83"/><text x="24.0222%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="23.8894%" y="101" width="0.1293%" height="15" fill="rgb(241,50,38)" fg:x="12379" fg:w="67"/><text x="24.1824%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.19%)</title><rect x="23.8894%" y="117" width="0.1853%" height="15" fill="rgb(212,166,30)" fg:x="12379" fg:w="96"/><text x="24.1824%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="24.0746%" y="69" width="0.0212%" height="15" fill="rgb(249,127,32)" fg:x="12475" fg:w="11"/><text x="24.3676%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="24.0959%" y="53" width="0.0675%" height="15" fill="rgb(209,103,0)" fg:x="12486" fg:w="35"/><text x="24.3888%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="24.0959%" y="69" width="0.1235%" height="15" fill="rgb(238,209,51)" fg:x="12486" fg:w="64"/><text x="24.3888%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="24.0746%" y="85" width="0.2779%" height="15" fill="rgb(237,56,23)" fg:x="12475" fg:w="144"/><text x="24.3676%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.40%)</title><rect x="24.0746%" y="101" width="0.4033%" height="15" fill="rgb(215,153,46)" fg:x="12475" fg:w="209"/><text x="24.3676%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.42%)</title><rect x="24.0746%" y="117" width="0.4226%" height="15" fill="rgb(224,49,31)" fg:x="12475" fg:w="219"/><text x="24.3676%" y="127.50"></text></g><g><title>core::fmt::write (453 instructions, 0.87%)</title><rect x="23.8894%" y="133" width="0.8742%" height="15" fill="rgb(250,18,42)" fg:x="12379" fg:w="453"/><text x="24.1824%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.30%)</title><rect x="23.7292%" y="149" width="1.3007%" height="15" fill="rgb(215,176,39)" fg:x="12296" fg:w="674"/><text x="24.0222%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="25.0299%" y="149" width="0.1833%" height="15" fill="rgb(223,77,29)" fg:x="12970" fg:w="95"/><text x="25.3229%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="25.2132%" y="149" width="0.1718%" height="15" fill="rgb(234,94,52)" fg:x="13065" fg:w="89"/><text x="25.5062%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="25.3850%" y="133" width="0.1582%" height="15" fill="rgb(220,154,50)" fg:x="13154" fg:w="82"/><text x="25.6780%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="25.5432%" y="133" width="0.1833%" height="15" fill="rgb(212,11,10)" fg:x="13236" fg:w="95"/><text x="25.8362%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="25.7266%" y="133" width="0.1467%" height="15" fill="rgb(205,166,19)" fg:x="13331" fg:w="76"/><text x="26.0196%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.64%)</title><rect x="25.3850%" y="149" width="0.6368%" height="15" fill="rgb(244,198,16)" fg:x="13154" fg:w="330"/><text x="25.6780%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.22%)</title><rect x="26.0218%" y="149" width="0.2200%" height="15" fill="rgb(219,69,12)" fg:x="13484" fg:w="114"/><text x="26.3148%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,007 instructions, 3.87%)</title><rect x="22.8376%" y="165" width="3.8732%" height="15" fill="rgb(245,30,7)" fg:x="11834" fg:w="2007"/><text x="23.1306%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="26.7108%" y="165" width="0.1467%" height="15" fill="rgb(218,221,48)" fg:x="13841" fg:w="76"/><text x="27.0038%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="26.8575%" y="165" width="0.1602%" height="15" fill="rgb(216,66,15)" fg:x="13917" fg:w="83"/><text x="27.1504%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="27.0176%" y="149" width="0.1602%" height="15" fill="rgb(226,122,50)" fg:x="14000" fg:w="83"/><text x="27.3106%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.35%)</title><rect x="27.0176%" y="165" width="0.3454%" height="15" fill="rgb(239,156,16)" fg:x="14000" fg:w="179"/><text x="27.3106%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="27.3631%" y="133" width="0.1756%" height="15" fill="rgb(224,27,38)" fg:x="14179" fg:w="91"/><text x="27.6560%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="27.3631%" y="149" width="0.2586%" height="15" fill="rgb(224,39,27)" fg:x="14179" fg:w="134"/><text x="27.6560%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.42%)</title><rect x="27.3631%" y="165" width="0.4226%" height="15" fill="rgb(215,92,29)" fg:x="14179" fg:w="219"/><text x="27.6560%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="27.7857%" y="165" width="0.1756%" height="15" fill="rgb(207,159,16)" fg:x="14398" fg:w="91"/><text x="28.0787%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="27.9613%" y="149" width="0.1756%" height="15" fill="rgb(238,163,47)" fg:x="14489" fg:w="91"/><text x="28.2543%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.36%)</title><rect x="27.9613%" y="165" width="0.3609%" height="15" fill="rgb(219,91,49)" fg:x="14489" fg:w="187"/><text x="28.2543%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="28.3222%" y="165" width="0.1756%" height="15" fill="rgb(227,167,31)" fg:x="14676" fg:w="91"/><text x="28.6152%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="28.4978%" y="149" width="0.1602%" height="15" fill="rgb(234,80,54)" fg:x="14767" fg:w="83"/><text x="28.7908%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="28.6580%" y="117" width="0.1911%" height="15" fill="rgb(212,114,2)" fg:x="14850" fg:w="99"/><text x="28.9510%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.25%)</title><rect x="28.6580%" y="133" width="0.2470%" height="15" fill="rgb(234,50,24)" fg:x="14850" fg:w="128"/><text x="28.9510%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.9050%" y="85" width="0.0212%" height="15" fill="rgb(221,68,8)" fg:x="14978" fg:w="11"/><text x="29.1980%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.9262%" y="69" width="0.0675%" height="15" fill="rgb(254,180,31)" fg:x="14989" fg:w="35"/><text x="29.2192%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="28.9262%" y="85" width="0.1235%" height="15" fill="rgb(247,130,50)" fg:x="14989" fg:w="64"/><text x="29.2192%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="28.9050%" y="101" width="0.2779%" height="15" fill="rgb(211,109,4)" fg:x="14978" fg:w="144"/><text x="29.1980%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.40%)</title><rect x="28.9050%" y="117" width="0.4033%" height="15" fill="rgb(238,50,21)" fg:x="14978" fg:w="209"/><text x="29.1980%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.44%)</title><rect x="28.9050%" y="133" width="0.4419%" height="15" fill="rgb(225,57,45)" fg:x="14978" fg:w="229"/><text x="29.1980%" y="143.50"></text></g><g><title>core::fmt::write (495 instructions, 0.96%)</title><rect x="28.6580%" y="149" width="0.9553%" height="15" fill="rgb(209,196,50)" fg:x="14850" fg:w="495"/><text x="28.9510%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (716 instructions, 1.38%)</title><rect x="28.4978%" y="165" width="1.3818%" height="15" fill="rgb(242,140,13)" fg:x="14767" fg:w="716"/><text x="28.7908%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="29.8796%" y="149" width="0.1756%" height="15" fill="rgb(217,111,7)" fg:x="15483" fg:w="91"/><text x="30.1725%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (158 instructions, 0.30%)</title><rect x="29.8796%" y="165" width="0.3049%" height="15" fill="rgb(253,193,51)" fg:x="15483" fg:w="158"/><text x="30.1725%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.1845%" y="165" width="0.1968%" height="15" fill="rgb(252,70,29)" fg:x="15641" fg:w="102"/><text x="30.4775%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="30.3813%" y="165" width="0.0289%" height="15" fill="rgb(232,127,12)" fg:x="15743" fg:w="15"/><text x="30.6743%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.4103%" y="165" width="0.1968%" height="15" fill="rgb(211,180,21)" fg:x="15758" fg:w="102"/><text x="30.7033%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="30.6071%" y="149" width="0.1756%" height="15" fill="rgb(229,72,13)" fg:x="15860" fg:w="91"/><text x="30.9001%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (131 instructions, 0.25%)</title><rect x="30.6071%" y="165" width="0.2528%" height="15" fill="rgb(240,211,49)" fg:x="15860" fg:w="131"/><text x="30.9001%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.8599%" y="149" width="0.0598%" height="15" fill="rgb(219,149,40)" fg:x="15991" fg:w="31"/><text x="31.1529%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.9198%" y="149" width="0.0598%" height="15" fill="rgb(210,127,46)" fg:x="16022" fg:w="31"/><text x="31.2127%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (172 instructions, 0.33%)</title><rect x="30.8599%" y="165" width="0.3319%" height="15" fill="rgb(220,106,7)" fg:x="15991" fg:w="172"/><text x="31.1529%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="31.2227%" y="149" width="0.1216%" height="15" fill="rgb(249,31,22)" fg:x="16179" fg:w="63"/><text x="31.5157%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (184 instructions, 0.36%)</title><rect x="31.1919%" y="165" width="0.3551%" height="15" fill="rgb(253,1,49)" fg:x="16163" fg:w="184"/><text x="31.4848%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="31.5470%" y="165" width="0.0289%" height="15" fill="rgb(227,144,33)" fg:x="16347" fg:w="15"/><text x="31.8399%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="31.5759%" y="165" width="0.0174%" height="15" fill="rgb(249,163,44)" fg:x="16362" fg:w="9"/><text x="31.8689%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.03%)</title><rect x="31.5933%" y="165" width="0.0309%" height="15" fill="rgb(234,15,39)" fg:x="16371" fg:w="16"/><text x="31.8862%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.16%)</title><rect x="31.6241%" y="133" width="0.1563%" height="15" fill="rgb(207,66,16)" fg:x="16387" fg:w="81"/><text x="31.9171%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="31.7805%" y="101" width="0.1911%" height="15" fill="rgb(233,112,24)" fg:x="16468" fg:w="99"/><text x="32.0734%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.25%)</title><rect x="31.7805%" y="117" width="0.2470%" height="15" fill="rgb(230,90,22)" fg:x="16468" fg:w="128"/><text x="32.0734%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="32.0275%" y="69" width="0.0212%" height="15" fill="rgb(229,61,13)" fg:x="16596" fg:w="11"/><text x="32.3204%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="32.0487%" y="53" width="0.0675%" height="15" fill="rgb(225,57,24)" fg:x="16607" fg:w="35"/><text x="32.3417%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="32.0487%" y="69" width="0.1235%" height="15" fill="rgb(208,169,48)" fg:x="16607" fg:w="64"/><text x="32.3417%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="32.0275%" y="85" width="0.2779%" height="15" fill="rgb(244,218,51)" fg:x="16596" fg:w="144"/><text x="32.3204%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.40%)</title><rect x="32.0275%" y="101" width="0.4033%" height="15" fill="rgb(214,148,10)" fg:x="16596" fg:w="209"/><text x="32.3204%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.44%)</title><rect x="32.0275%" y="117" width="0.4419%" height="15" fill="rgb(225,174,27)" fg:x="16596" fg:w="229"/><text x="32.3204%" y="127.50"></text></g><g><title>core::fmt::write (495 instructions, 0.96%)</title><rect x="31.7805%" y="133" width="0.9553%" height="15" fill="rgb(230,96,26)" fg:x="16468" fg:w="495"/><text x="32.0734%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (714 instructions, 1.38%)</title><rect x="31.6241%" y="149" width="1.3779%" height="15" fill="rgb(232,10,30)" fg:x="16387" fg:w="714"/><text x="31.9171%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="33.0020%" y="149" width="0.1756%" height="15" fill="rgb(222,8,50)" fg:x="17101" fg:w="91"/><text x="33.2950%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (931 instructions, 1.80%)</title><rect x="31.6241%" y="165" width="1.7967%" height="15" fill="rgb(213,81,27)" fg:x="16387" fg:w="931"/><text x="31.9171%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="33.4208%" y="133" width="0.1756%" height="15" fill="rgb(245,50,10)" fg:x="17318" fg:w="91"/><text x="33.7138%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="33.4208%" y="149" width="0.2586%" height="15" fill="rgb(216,100,18)" fg:x="17318" fg:w="134"/><text x="33.7138%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.42%)</title><rect x="33.4208%" y="165" width="0.4226%" height="15" fill="rgb(236,147,54)" fg:x="17318" fg:w="219"/><text x="33.7138%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="33.8435%" y="165" width="0.1756%" height="15" fill="rgb(205,143,26)" fg:x="17537" fg:w="91"/><text x="34.1364%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="34.0191%" y="165" width="0.1718%" height="15" fill="rgb(236,26,9)" fg:x="17628" fg:w="89"/><text x="34.3120%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="34.1908%" y="165" width="0.1756%" height="15" fill="rgb(221,165,53)" fg:x="17717" fg:w="91"/><text x="34.4838%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="34.3664%" y="165" width="0.1756%" height="15" fill="rgb(214,110,17)" fg:x="17808" fg:w="91"/><text x="34.6594%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="34.5421%" y="149" width="0.1718%" height="15" fill="rgb(237,197,12)" fg:x="17899" fg:w="89"/><text x="34.8350%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 instructions, 0.25%)</title><rect x="34.5421%" y="165" width="0.2509%" height="15" fill="rgb(205,84,17)" fg:x="17899" fg:w="130"/><text x="34.8350%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="34.7929%" y="149" width="0.0521%" height="15" fill="rgb(237,18,45)" fg:x="18029" fg:w="27"/><text x="35.0859%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="34.8450%" y="149" width="0.1312%" height="15" fill="rgb(221,87,14)" fg:x="18056" fg:w="68"/><text x="35.1380%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.37%)</title><rect x="34.7929%" y="165" width="0.3686%" height="15" fill="rgb(238,186,15)" fg:x="18029" fg:w="191"/><text x="35.0859%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="35.1615%" y="165" width="0.1718%" height="15" fill="rgb(208,115,11)" fg:x="18220" fg:w="89"/><text x="35.4545%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.83%)</title><rect x="35.3333%" y="165" width="0.8260%" height="15" fill="rgb(254,175,0)" fg:x="18309" fg:w="428"/><text x="35.6263%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.83%)</title><rect x="36.1592%" y="165" width="0.8260%" height="15" fill="rgb(227,24,42)" fg:x="18737" fg:w="428"/><text x="36.4522%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (20,964 instructions, 40.46%)</title><rect x="0.5268%" y="181" width="40.4570%" height="15" fill="rgb(223,211,37)" fg:x="273" fg:w="20964"/><text x="0.8198%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (380 instructions, 0.73%)</title><rect x="40.9838%" y="181" width="0.7333%" height="15" fill="rgb(235,49,27)" fg:x="21237" fg:w="380"/><text x="41.2768%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="41.7172%" y="165" width="0.0135%" height="15" fill="rgb(254,97,51)" fg:x="21617" fg:w="7"/><text x="42.0101%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="41.7172%" y="181" width="0.0753%" height="15" fill="rgb(249,51,40)" fg:x="21617" fg:w="39"/><text x="42.0101%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.33%)</title><rect x="41.7924%" y="181" width="0.3339%" height="15" fill="rgb(210,128,45)" fg:x="21656" fg:w="173"/><text x="42.0854%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="42.1263%" y="165" width="0.0135%" height="15" fill="rgb(224,137,50)" fg:x="21829" fg:w="7"/><text x="42.4193%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="42.1398%" y="149" width="0.1139%" height="15" fill="rgb(242,15,9)" fg:x="21836" fg:w="59"/><text x="42.4328%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.54%)</title><rect x="42.2537%" y="149" width="0.5365%" height="15" fill="rgb(233,187,41)" fg:x="21895" fg:w="278"/><text x="42.5466%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="42.7902%" y="149" width="0.3339%" height="15" fill="rgb(227,2,29)" fg:x="22173" fg:w="173"/><text x="43.0831%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.47%)</title><rect x="42.1398%" y="165" width="1.4725%" height="15" fill="rgb(222,70,3)" fg:x="21836" fg:w="763"/><text x="42.4328%" y="175.50"></text></g><g><title>candid::types::internal::env_add (982 instructions, 1.90%)</title><rect x="42.1263%" y="181" width="1.8951%" height="15" fill="rgb(213,11,42)" fg:x="21829" fg:w="982"/><text x="42.4193%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.0214%" y="181" width="0.1602%" height="15" fill="rgb(225,150,9)" fg:x="22811" fg:w="83"/><text x="44.3144%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.1816%" y="181" width="0.1602%" height="15" fill="rgb(230,162,45)" fg:x="22894" fg:w="83"/><text x="44.4745%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.3417%" y="181" width="0.1602%" height="15" fill="rgb(222,14,52)" fg:x="22977" fg:w="83"/><text x="44.6347%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="44.5019%" y="149" width="0.0135%" height="15" fill="rgb(254,198,14)" fg:x="23060" fg:w="7"/><text x="44.7949%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="44.5154%" y="133" width="0.1139%" height="15" fill="rgb(220,217,30)" fg:x="23067" fg:w="59"/><text x="44.8084%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="44.6293%" y="133" width="0.6137%" height="15" fill="rgb(215,146,41)" fg:x="23126" fg:w="318"/><text x="44.9222%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="45.2430%" y="133" width="0.1505%" height="15" fill="rgb(217,27,36)" fg:x="23444" fg:w="78"/><text x="45.5359%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.37%)</title><rect x="44.5154%" y="149" width="1.3663%" height="15" fill="rgb(219,218,39)" fg:x="23067" fg:w="708"/><text x="44.8084%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (833 instructions, 1.61%)</title><rect x="44.5019%" y="165" width="1.6075%" height="15" fill="rgb(219,4,42)" fg:x="23060" fg:w="833"/><text x="44.7949%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="46.1095%" y="165" width="0.1602%" height="15" fill="rgb(249,119,36)" fg:x="23893" fg:w="83"/><text x="46.4024%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="46.2696%" y="149" width="0.0135%" height="15" fill="rgb(209,23,33)" fg:x="23976" fg:w="7"/><text x="46.5626%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="46.2831%" y="133" width="0.1139%" height="15" fill="rgb(211,10,0)" fg:x="23983" fg:w="59"/><text x="46.5761%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="46.3970%" y="133" width="0.6137%" height="15" fill="rgb(208,99,37)" fg:x="24042" fg:w="318"/><text x="46.6900%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="47.0107%" y="133" width="0.1505%" height="15" fill="rgb(213,132,31)" fg:x="24360" fg:w="78"/><text x="47.3037%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.37%)</title><rect x="46.2831%" y="149" width="1.3663%" height="15" fill="rgb(243,129,40)" fg:x="23983" fg:w="708"/><text x="46.5761%" y="159.50"></text></g><g><title>candid::types::internal::env_add (927 instructions, 1.79%)</title><rect x="46.2696%" y="165" width="1.7890%" height="15" fill="rgb(210,66,33)" fg:x="23976" fg:w="927"/><text x="46.5626%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="48.0586%" y="165" width="0.1602%" height="15" fill="rgb(209,189,4)" fg:x="24903" fg:w="83"/><text x="48.3516%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="48.2188%" y="149" width="0.0135%" height="15" fill="rgb(214,107,37)" fg:x="24986" fg:w="7"/><text x="48.5117%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="48.2323%" y="133" width="0.1139%" height="15" fill="rgb(245,88,54)" fg:x="24993" fg:w="59"/><text x="48.5252%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="48.3461%" y="133" width="0.6137%" height="15" fill="rgb(205,146,20)" fg:x="25052" fg:w="318"/><text x="48.6391%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="48.9598%" y="133" width="0.1505%" height="15" fill="rgb(220,161,25)" fg:x="25370" fg:w="78"/><text x="49.2528%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.37%)</title><rect x="48.2323%" y="149" width="1.3663%" height="15" fill="rgb(215,152,15)" fg:x="24993" fg:w="708"/><text x="48.5252%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.95%)</title><rect x="49.5986%" y="149" width="0.9475%" height="15" fill="rgb(233,192,44)" fg:x="25701" fg:w="491"/><text x="49.8916%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="50.5461%" y="133" width="0.1718%" height="15" fill="rgb(240,170,46)" fg:x="26192" fg:w="89"/><text x="50.8391%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.24%)</title><rect x="50.5461%" y="149" width="0.2393%" height="15" fill="rgb(207,104,33)" fg:x="26192" fg:w="124"/><text x="50.8391%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,508 instructions, 2.91%)</title><rect x="48.2188%" y="165" width="2.9102%" height="15" fill="rgb(219,21,39)" fg:x="24986" fg:w="1508"/><text x="48.5117%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="51.1290%" y="117" width="0.1139%" height="15" fill="rgb(214,133,29)" fg:x="26494" fg:w="59"/><text x="51.4219%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="51.1290%" y="133" width="0.1795%" height="15" fill="rgb(226,93,6)" fg:x="26494" fg:w="93"/><text x="51.4219%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.61%)</title><rect x="51.1290%" y="149" width="0.6098%" height="15" fill="rgb(252,222,34)" fg:x="26494" fg:w="316"/><text x="51.4219%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.337 (11 instructions, 0.02%)</title><rect x="51.7388%" y="149" width="0.0212%" height="15" fill="rgb(252,92,48)" fg:x="26810" fg:w="11"/><text x="52.0317%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.337 (18 instructions, 0.03%)</title><rect x="51.7600%" y="149" width="0.0347%" height="15" fill="rgb(245,223,24)" fg:x="26821" fg:w="18"/><text x="52.0530%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="51.7947%" y="149" width="0.0251%" height="15" fill="rgb(205,176,3)" fg:x="26839" fg:w="13"/><text x="52.0877%" y="159.50"></text></g><g><title>candid::types::internal::env_id (582 instructions, 1.12%)</title><rect x="51.1290%" y="165" width="1.1232%" height="15" fill="rgb(235,151,15)" fg:x="26494" fg:w="582"/><text x="51.4219%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,145 instructions, 8.00%)</title><rect x="44.5019%" y="181" width="7.9992%" height="15" fill="rgb(237,209,11)" fg:x="23060" fg:w="4145"/><text x="44.7949%" y="191.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.5011%" y="181" width="0.1602%" height="15" fill="rgb(243,227,24)" fg:x="27205" fg:w="83"/><text x="52.7940%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.6612%" y="181" width="0.1602%" height="15" fill="rgb(239,193,16)" fg:x="27288" fg:w="83"/><text x="52.9542%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="52.8214%" y="149" width="0.0135%" height="15" fill="rgb(231,27,9)" fg:x="27371" fg:w="7"/><text x="53.1144%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="52.8349%" y="133" width="0.1139%" height="15" fill="rgb(219,169,10)" fg:x="27378" fg:w="59"/><text x="53.1279%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="52.9488%" y="133" width="0.1814%" height="15" fill="rgb(244,229,43)" fg:x="27437" fg:w="94"/><text x="53.2418%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="53.1302%" y="133" width="0.3339%" height="15" fill="rgb(254,38,20)" fg:x="27531" fg:w="173"/><text x="53.4232%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.12%)</title><rect x="52.8349%" y="149" width="1.1174%" height="15" fill="rgb(250,47,30)" fg:x="27378" fg:w="579"/><text x="53.1279%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (704 instructions, 1.36%)</title><rect x="52.8214%" y="165" width="1.3586%" height="15" fill="rgb(224,124,36)" fg:x="27371" fg:w="704"/><text x="53.1144%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="54.1800%" y="165" width="0.1602%" height="15" fill="rgb(246,68,51)" fg:x="28075" fg:w="83"/><text x="54.4730%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="54.3402%" y="149" width="0.0135%" height="15" fill="rgb(253,43,49)" fg:x="28158" fg:w="7"/><text x="54.6332%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="54.3537%" y="133" width="0.1139%" height="15" fill="rgb(219,54,36)" fg:x="28165" fg:w="59"/><text x="54.6467%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="54.4676%" y="133" width="0.1814%" height="15" fill="rgb(227,133,34)" fg:x="28224" fg:w="94"/><text x="54.7605%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="54.6490%" y="133" width="0.3339%" height="15" fill="rgb(247,227,15)" fg:x="28318" fg:w="173"/><text x="54.9419%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.12%)</title><rect x="54.3537%" y="149" width="1.1174%" height="15" fill="rgb(229,96,14)" fg:x="28165" fg:w="579"/><text x="54.6467%" y="159.50"></text></g><g><title>candid::types::internal::env_add (798 instructions, 1.54%)</title><rect x="54.3402%" y="165" width="1.5400%" height="15" fill="rgb(220,79,17)" fg:x="28158" fg:w="798"/><text x="54.6332%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="55.8802%" y="165" width="0.1602%" height="15" fill="rgb(205,131,53)" fg:x="28956" fg:w="83"/><text x="56.1732%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="56.0404%" y="149" width="0.0135%" height="15" fill="rgb(209,50,29)" fg:x="29039" fg:w="7"/><text x="56.3333%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="56.0539%" y="133" width="0.1139%" height="15" fill="rgb(245,86,46)" fg:x="29046" fg:w="59"/><text x="56.3468%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="56.1677%" y="133" width="0.1814%" height="15" fill="rgb(235,66,46)" fg:x="29105" fg:w="94"/><text x="56.4607%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="56.3491%" y="133" width="0.3339%" height="15" fill="rgb(232,148,31)" fg:x="29199" fg:w="173"/><text x="56.6421%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.12%)</title><rect x="56.0539%" y="149" width="1.1174%" height="15" fill="rgb(217,149,8)" fg:x="29046" fg:w="579"/><text x="56.3468%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="57.1713%" y="149" width="0.1756%" height="15" fill="rgb(209,183,11)" fg:x="29625" fg:w="91"/><text x="57.4642%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="57.3469%" y="149" width="0.1795%" height="15" fill="rgb(208,55,20)" fg:x="29716" fg:w="93"/><text x="57.6398%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="57.5263%" y="133" width="0.1139%" height="15" fill="rgb(218,39,14)" fg:x="29809" fg:w="59"/><text x="57.8193%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="57.6402%" y="133" width="0.1814%" height="15" fill="rgb(216,169,33)" fg:x="29868" fg:w="94"/><text x="57.9332%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="57.8216%" y="133" width="0.3339%" height="15" fill="rgb(233,80,24)" fg:x="29962" fg:w="173"/><text x="58.1146%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="58.6437%" y="133" width="0.1139%" height="15" fill="rgb(213,179,31)" fg:x="30388" fg:w="59"/><text x="58.9367%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.54%)</title><rect x="58.7576%" y="133" width="0.5365%" height="15" fill="rgb(209,19,5)" fg:x="30447" fg:w="278"/><text x="59.0505%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="59.2941%" y="133" width="0.3339%" height="15" fill="rgb(219,18,35)" fg:x="30725" fg:w="173"/><text x="59.5870%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="60.1162%" y="133" width="0.1139%" height="15" fill="rgb(209,169,16)" fg:x="31151" fg:w="59"/><text x="60.4091%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="60.2300%" y="133" width="0.6137%" height="15" fill="rgb(245,90,51)" fg:x="31210" fg:w="318"/><text x="60.5230%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="60.8437%" y="133" width="0.1505%" height="15" fill="rgb(220,99,45)" fg:x="31528" fg:w="78"/><text x="61.1367%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,050 instructions, 3.96%)</title><rect x="57.5263%" y="149" width="3.9562%" height="15" fill="rgb(249,89,25)" fg:x="29809" fg:w="2050"/><text x="57.8193%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="61.4825%" y="149" width="0.1718%" height="15" fill="rgb(239,193,0)" fg:x="31859" fg:w="89"/><text x="61.7755%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="61.6543%" y="149" width="0.1486%" height="15" fill="rgb(231,126,1)" fg:x="31948" fg:w="77"/><text x="61.9472%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="61.8028%" y="133" width="0.1718%" height="15" fill="rgb(243,166,3)" fg:x="32025" fg:w="89"/><text x="62.0958%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.24%)</title><rect x="61.8028%" y="149" width="0.2393%" height="15" fill="rgb(223,22,34)" fg:x="32025" fg:w="124"/><text x="62.0958%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,808 instructions, 7.35%)</title><rect x="56.0404%" y="165" width="7.3488%" height="15" fill="rgb(251,52,51)" fg:x="29039" fg:w="3808"/><text x="56.3333%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="63.3892%" y="117" width="0.1139%" height="15" fill="rgb(221,165,28)" fg:x="32847" fg:w="59"/><text x="63.6821%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="63.3892%" y="133" width="0.1795%" height="15" fill="rgb(218,121,47)" fg:x="32847" fg:w="93"/><text x="63.6821%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="63.9990%" y="117" width="0.1139%" height="15" fill="rgb(209,120,9)" fg:x="33163" fg:w="59"/><text x="64.2920%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="63.9990%" y="133" width="0.1795%" height="15" fill="rgb(236,68,12)" fg:x="33163" fg:w="93"/><text x="64.2920%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (632 instructions, 1.22%)</title><rect x="63.3892%" y="149" width="1.2197%" height="15" fill="rgb(225,194,26)" fg:x="32847" fg:w="632"/><text x="63.6821%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.18%)</title><rect x="64.6088%" y="149" width="0.1756%" height="15" fill="rgb(231,84,39)" fg:x="33479" fg:w="91"/><text x="64.9018%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="64.7844%" y="149" width="0.1795%" height="15" fill="rgb(210,11,45)" fg:x="33570" fg:w="93"/><text x="65.0774%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="64.9639%" y="117" width="0.1139%" height="15" fill="rgb(224,54,52)" fg:x="33663" fg:w="59"/><text x="65.2569%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="64.9639%" y="133" width="0.1795%" height="15" fill="rgb(238,102,14)" fg:x="33663" fg:w="93"/><text x="65.2569%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.5737%" y="117" width="0.1139%" height="15" fill="rgb(243,160,52)" fg:x="33979" fg:w="59"/><text x="65.8667%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="65.5737%" y="133" width="0.1795%" height="15" fill="rgb(216,114,19)" fg:x="33979" fg:w="93"/><text x="65.8667%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.1836%" y="117" width="0.1139%" height="15" fill="rgb(244,166,37)" fg:x="34295" fg:w="59"/><text x="66.4765%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="66.2974%" y="117" width="0.3165%" height="15" fill="rgb(246,29,44)" fg:x="34354" fg:w="164"/><text x="66.5904%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.6139%" y="101" width="0.1139%" height="15" fill="rgb(215,56,53)" fg:x="34518" fg:w="59"/><text x="66.9069%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="66.6139%" y="117" width="0.1795%" height="15" fill="rgb(217,60,2)" fg:x="34518" fg:w="93"/><text x="66.9069%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (402 instructions, 0.78%)</title><rect x="66.1836%" y="133" width="0.7758%" height="15" fill="rgb(207,26,24)" fg:x="34295" fg:w="402"/><text x="66.4765%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,257 instructions, 2.43%)</title><rect x="64.9639%" y="149" width="2.4258%" height="15" fill="rgb(252,210,15)" fg:x="33663" fg:w="1257"/><text x="65.2569%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="67.3897%" y="149" width="0.1602%" height="15" fill="rgb(253,209,26)" fg:x="34920" fg:w="83"/><text x="67.6827%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,973 instructions, 5.74%)</title><rect x="63.3892%" y="165" width="5.7374%" height="15" fill="rgb(238,170,14)" fg:x="32847" fg:w="2973"/><text x="63.6821%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (8,578 instructions, 16.55%)</title><rect x="52.8214%" y="181" width="16.5541%" height="15" fill="rgb(216,178,15)" fg:x="27371" fg:w="8578"/><text x="53.1144%" y="191.50">candid::types::Candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="69.3755%" y="181" width="0.1602%" height="15" fill="rgb(250,197,2)" fg:x="35949" fg:w="83"/><text x="69.6685%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="69.5357%" y="165" width="0.0135%" height="15" fill="rgb(212,70,42)" fg:x="36032" fg:w="7"/><text x="69.8287%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="69.5492%" y="149" width="0.1139%" height="15" fill="rgb(227,213,9)" fg:x="36039" fg:w="59"/><text x="69.8422%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.54%)</title><rect x="69.6631%" y="149" width="0.5365%" height="15" fill="rgb(245,99,25)" fg:x="36098" fg:w="278"/><text x="69.9560%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="70.1995%" y="149" width="0.3339%" height="15" fill="rgb(250,82,29)" fg:x="36376" fg:w="173"/><text x="70.4925%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.47%)</title><rect x="69.5492%" y="165" width="1.4725%" height="15" fill="rgb(241,226,54)" fg:x="36039" fg:w="763"/><text x="69.8422%" y="175.50"></text></g><g><title>memcmp (445 instructions, 0.86%)</title><rect x="71.0217%" y="165" width="0.8588%" height="15" fill="rgb(221,99,41)" fg:x="36802" fg:w="445"/><text x="71.3146%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="71.8804%" y="149" width="0.1718%" height="15" fill="rgb(213,90,21)" fg:x="37247" fg:w="89"/><text x="72.1734%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.24%)</title><rect x="71.8804%" y="165" width="0.2393%" height="15" fill="rgb(205,208,24)" fg:x="37247" fg:w="124"/><text x="72.1734%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,517 instructions, 2.93%)</title><rect x="69.5357%" y="181" width="2.9276%" height="15" fill="rgb(246,31,12)" fg:x="36032" fg:w="1517"/><text x="69.8287%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.4632%" y="133" width="0.1139%" height="15" fill="rgb(213,154,6)" fg:x="37549" fg:w="59"/><text x="72.7562%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="72.5771%" y="133" width="0.3165%" height="15" fill="rgb(222,163,29)" fg:x="37608" fg:w="164"/><text x="72.8701%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.8936%" y="117" width="0.1139%" height="15" fill="rgb(227,201,8)" fg:x="37772" fg:w="59"/><text x="73.1866%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="73.0731%" y="117" width="0.3165%" height="15" fill="rgb(233,9,32)" fg:x="37865" fg:w="164"/><text x="73.3660%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="72.8936%" y="133" width="0.5616%" height="15" fill="rgb(217,54,24)" fg:x="37772" fg:w="291"/><text x="73.1866%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (620 instructions, 1.20%)</title><rect x="72.4632%" y="149" width="1.1965%" height="15" fill="rgb(235,192,0)" fg:x="37549" fg:w="620"/><text x="72.7562%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.0901%" y="133" width="0.1139%" height="15" fill="rgb(235,45,9)" fg:x="38392" fg:w="59"/><text x="74.3831%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="74.2039%" y="133" width="0.3165%" height="15" fill="rgb(246,42,40)" fg:x="38451" fg:w="164"/><text x="74.4969%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.5204%" y="117" width="0.1139%" height="15" fill="rgb(248,111,24)" fg:x="38615" fg:w="59"/><text x="74.8134%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="74.6999%" y="117" width="0.3165%" height="15" fill="rgb(249,65,22)" fg:x="38708" fg:w="164"/><text x="74.9929%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="74.5204%" y="133" width="0.5616%" height="15" fill="rgb(238,111,51)" fg:x="38615" fg:w="291"/><text x="74.8134%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (620 instructions, 1.20%)</title><rect x="74.0901%" y="149" width="1.1965%" height="15" fill="rgb(250,118,22)" fg:x="38392" fg:w="620"/><text x="74.3831%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,686 instructions, 3.25%)</title><rect x="72.4632%" y="165" width="3.2537%" height="15" fill="rgb(234,84,26)" fg:x="37549" fg:w="1686"/><text x="72.7562%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,983 instructions, 3.83%)</title><rect x="72.4632%" y="181" width="3.8269%" height="15" fill="rgb(243,172,12)" fg:x="37549" fg:w="1983"/><text x="72.7562%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="76.2901%" y="181" width="0.1023%" height="15" fill="rgb(236,150,49)" fg:x="39532" fg:w="53"/><text x="76.5831%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="76.3924%" y="165" width="0.1602%" height="15" fill="rgb(225,197,26)" fg:x="39585" fg:w="83"/><text x="76.6853%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="76.6201%" y="149" width="0.0444%" height="15" fill="rgb(214,17,42)" fg:x="39703" fg:w="23"/><text x="76.9131%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.27%)</title><rect x="76.6201%" y="165" width="0.2663%" height="15" fill="rgb(224,165,40)" fg:x="39703" fg:w="138"/><text x="76.9131%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (291 instructions, 0.56%)</title><rect x="76.3924%" y="181" width="0.5616%" height="15" fill="rgb(246,100,4)" fg:x="39585" fg:w="291"/><text x="76.6853%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.28%)</title><rect x="76.9540%" y="117" width="0.2818%" height="15" fill="rgb(222,103,0)" fg:x="39876" fg:w="146"/><text x="77.2469%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (254 instructions, 0.49%)</title><rect x="76.9540%" y="133" width="0.4902%" height="15" fill="rgb(227,189,26)" fg:x="39876" fg:w="254"/><text x="77.2469%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (342 instructions, 0.66%)</title><rect x="76.9540%" y="149" width="0.6600%" height="15" fill="rgb(214,202,17)" fg:x="39876" fg:w="342"/><text x="77.2469%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.6140%" y="149" width="0.0251%" height="15" fill="rgb(229,111,3)" fg:x="40218" fg:w="13"/><text x="77.9069%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (423 instructions, 0.82%)</title><rect x="76.9540%" y="165" width="0.8163%" height="15" fill="rgb(229,172,15)" fg:x="39876" fg:w="423"/><text x="77.2469%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.7703%" y="149" width="0.1602%" height="15" fill="rgb(230,224,35)" fg:x="40299" fg:w="83"/><text x="78.0632%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.16%)</title><rect x="78.2469%" y="149" width="0.1563%" height="15" fill="rgb(251,141,6)" fg:x="40546" fg:w="81"/><text x="78.5399%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (492 instructions, 0.95%)</title><rect x="77.7703%" y="165" width="0.9495%" height="15" fill="rgb(225,208,6)" fg:x="40299" fg:w="492"/><text x="78.0632%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="78.7197%" y="165" width="0.0251%" height="15" fill="rgb(246,181,16)" fg:x="40791" fg:w="13"/><text x="79.0127%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="78.7448%" y="165" width="0.0251%" height="15" fill="rgb(227,129,36)" fg:x="40804" fg:w="13"/><text x="79.0378%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.22%)</title><rect x="78.7699%" y="149" width="0.2200%" height="15" fill="rgb(248,117,24)" fg:x="40817" fg:w="114"/><text x="79.0629%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="78.9899%" y="149" width="0.1911%" height="15" fill="rgb(214,185,35)" fg:x="40931" fg:w="99"/><text x="79.2829%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="79.1810%" y="149" width="0.2374%" height="15" fill="rgb(236,150,34)" fg:x="41030" fg:w="123"/><text x="79.4739%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="79.4183%" y="149" width="0.1158%" height="15" fill="rgb(243,228,27)" fg:x="41153" fg:w="60"/><text x="79.7113%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (505 instructions, 0.97%)</title><rect x="78.7699%" y="165" width="0.9746%" height="15" fill="rgb(245,77,44)" fg:x="40817" fg:w="505"/><text x="79.0629%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="79.7445%" y="149" width="0.0656%" height="15" fill="rgb(235,214,42)" fg:x="41322" fg:w="34"/><text x="80.0375%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="79.8101%" y="149" width="0.0347%" height="15" fill="rgb(221,74,3)" fg:x="41356" fg:w="18"/><text x="80.1031%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="79.8448%" y="149" width="0.0347%" height="15" fill="rgb(206,121,29)" fg:x="41374" fg:w="18"/><text x="80.1378%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="79.8796%" y="133" width="0.1582%" height="15" fill="rgb(249,131,53)" fg:x="41392" fg:w="82"/><text x="80.1725%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="80.0378%" y="133" width="0.1351%" height="15" fill="rgb(236,170,29)" fg:x="41474" fg:w="70"/><text x="80.3308%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="80.1729%" y="133" width="0.1467%" height="15" fill="rgb(247,96,15)" fg:x="41544" fg:w="76"/><text x="80.4659%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.56%)</title><rect x="79.8796%" y="149" width="0.5597%" height="15" fill="rgb(211,210,7)" fg:x="41392" fg:w="290"/><text x="80.1725%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.12%)</title><rect x="80.4392%" y="149" width="0.1216%" height="15" fill="rgb(240,88,50)" fg:x="41682" fg:w="63"/><text x="80.7322%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.5608%" y="149" width="0.1602%" height="15" fill="rgb(209,229,26)" fg:x="41745" fg:w="83"/><text x="80.8538%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.22%)</title><rect x="80.7210%" y="149" width="0.2219%" height="15" fill="rgb(210,68,23)" fg:x="41828" fg:w="115"/><text x="81.0140%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.31%)</title><rect x="80.9429%" y="149" width="0.3126%" height="15" fill="rgb(229,180,13)" fg:x="41943" fg:w="162"/><text x="81.2359%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (963 instructions, 1.86%)</title><rect x="79.7445%" y="165" width="1.8584%" height="15" fill="rgb(236,53,44)" fg:x="41322" fg:w="963"/><text x="80.0375%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.6029%" y="165" width="0.0251%" height="15" fill="rgb(244,214,29)" fg:x="42285" fg:w="13"/><text x="81.8959%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.6280%" y="165" width="0.0251%" height="15" fill="rgb(220,75,29)" fg:x="42298" fg:w="13"/><text x="81.9210%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="81.6531%" y="149" width="0.1602%" height="15" fill="rgb(214,183,37)" fg:x="42311" fg:w="83"/><text x="81.9461%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="81.8133%" y="149" width="0.1911%" height="15" fill="rgb(239,117,29)" fg:x="42394" fg:w="99"/><text x="82.1062%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="82.0043%" y="149" width="0.0367%" height="15" fill="rgb(237,171,35)" fg:x="42493" fg:w="19"/><text x="82.2973%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="82.0410%" y="149" width="0.2374%" height="15" fill="rgb(229,178,53)" fg:x="42512" fg:w="123"/><text x="82.3340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="82.2784%" y="149" width="0.1158%" height="15" fill="rgb(210,102,19)" fg:x="42635" fg:w="60"/><text x="82.5713%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (502 instructions, 0.97%)</title><rect x="81.6531%" y="165" width="0.9688%" height="15" fill="rgb(235,127,22)" fg:x="42311" fg:w="502"/><text x="81.9461%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="82.6219%" y="165" width="0.0656%" height="15" fill="rgb(244,31,31)" fg:x="42813" fg:w="34"/><text x="82.9148%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.6875%" y="165" width="0.0347%" height="15" fill="rgb(231,43,21)" fg:x="42847" fg:w="18"/><text x="82.9805%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.7222%" y="165" width="0.0347%" height="15" fill="rgb(217,131,35)" fg:x="42865" fg:w="18"/><text x="83.0152%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="82.7570%" y="149" width="0.0135%" height="15" fill="rgb(221,149,4)" fg:x="42883" fg:w="7"/><text x="83.0499%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="82.7705%" y="149" width="0.1718%" height="15" fill="rgb(232,170,28)" fg:x="42890" fg:w="89"/><text x="83.0634%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="82.9422%" y="149" width="0.0135%" height="15" fill="rgb(238,56,10)" fg:x="42979" fg:w="7"/><text x="83.2352%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="82.9557%" y="133" width="0.0521%" height="15" fill="rgb(235,196,14)" fg:x="42986" fg:w="27"/><text x="83.2487%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.28%)</title><rect x="82.9557%" y="149" width="0.2779%" height="15" fill="rgb(216,45,48)" fg:x="42986" fg:w="144"/><text x="83.2487%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (298 instructions, 0.58%)</title><rect x="82.7570%" y="165" width="0.5751%" height="15" fill="rgb(238,213,17)" fg:x="42883" fg:w="298"/><text x="83.0499%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (4,444 instructions, 8.58%)</title><rect x="76.9540%" y="181" width="8.5762%" height="15" fill="rgb(212,13,2)" fg:x="39876" fg:w="4444"/><text x="77.2469%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="85.5301%" y="165" width="0.1718%" height="15" fill="rgb(240,114,20)" fg:x="44320" fg:w="89"/><text x="85.8231%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="85.7019%" y="165" width="0.1718%" height="15" fill="rgb(228,41,40)" fg:x="44409" fg:w="89"/><text x="85.9948%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (231 instructions, 0.45%)</title><rect x="85.5301%" y="181" width="0.4458%" height="15" fill="rgb(244,132,35)" fg:x="44320" fg:w="231"/><text x="85.8231%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="85.9759%" y="181" width="0.0251%" height="15" fill="rgb(253,189,4)" fg:x="44551" fg:w="13"/><text x="86.2689%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="86.0010%" y="181" width="0.0251%" height="15" fill="rgb(224,37,19)" fg:x="44564" fg:w="13"/><text x="86.2940%" y="191.50"></text></g><g><title>memcpy (440 instructions, 0.85%)</title><rect x="86.0261%" y="181" width="0.8491%" height="15" fill="rgb(235,223,18)" fg:x="44577" fg:w="440"/><text x="86.3191%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="86.8752%" y="133" width="0.1718%" height="15" fill="rgb(235,163,25)" fg:x="45017" fg:w="89"/><text x="87.1682%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="87.0470%" y="117" width="0.1718%" height="15" fill="rgb(217,145,28)" fg:x="45106" fg:w="89"/><text x="87.3399%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="87.2187%" y="85" width="0.0521%" height="15" fill="rgb(223,223,32)" fg:x="45195" fg:w="27"/><text x="87.5117%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="87.2708%" y="85" width="0.0521%" height="15" fill="rgb(227,189,39)" fg:x="45222" fg:w="27"/><text x="87.5638%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.37%)</title><rect x="87.2187%" y="101" width="0.3686%" height="15" fill="rgb(248,10,22)" fg:x="45195" fg:w="191"/><text x="87.5117%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (226 instructions, 0.44%)</title><rect x="87.2187%" y="117" width="0.4361%" height="15" fill="rgb(248,46,39)" fg:x="45195" fg:w="226"/><text x="87.5117%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="87.6549%" y="117" width="0.1718%" height="15" fill="rgb(248,113,48)" fg:x="45421" fg:w="89"/><text x="87.9478%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="87.8266%" y="117" width="0.0251%" height="15" fill="rgb(245,16,25)" fg:x="45510" fg:w="13"/><text x="88.1196%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="87.8517%" y="101" width="0.0521%" height="15" fill="rgb(249,152,16)" fg:x="45523" fg:w="27"/><text x="88.1447%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="87.9038%" y="101" width="0.0521%" height="15" fill="rgb(250,16,1)" fg:x="45550" fg:w="27"/><text x="88.1968%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.38%)</title><rect x="87.8517%" y="117" width="0.3802%" height="15" fill="rgb(249,138,3)" fg:x="45523" fg:w="197"/><text x="88.1447%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="88.2319%" y="117" width="0.1602%" height="15" fill="rgb(227,71,41)" fg:x="45720" fg:w="83"/><text x="88.5249%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (864 instructions, 1.67%)</title><rect x="87.0470%" y="133" width="1.6674%" height="15" fill="rgb(209,184,23)" fg:x="45106" fg:w="864"/><text x="87.3399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="88.7143%" y="117" width="0.0444%" height="15" fill="rgb(223,215,31)" fg:x="45970" fg:w="23"/><text x="89.0073%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="88.7587%" y="117" width="0.0521%" height="15" fill="rgb(210,146,28)" fg:x="45993" fg:w="27"/><text x="89.0517%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="88.8108%" y="117" width="0.1312%" height="15" fill="rgb(209,183,41)" fg:x="46020" fg:w="68"/><text x="89.1038%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.46%)</title><rect x="88.7143%" y="133" width="0.4632%" height="15" fill="rgb(209,224,45)" fg:x="45970" fg:w="240"/><text x="89.0073%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,297 instructions, 2.50%)</title><rect x="86.8752%" y="149" width="2.5030%" height="15" fill="rgb(224,209,51)" fg:x="45017" fg:w="1297"/><text x="87.1682%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="89.3782%" y="133" width="0.0444%" height="15" fill="rgb(223,17,39)" fg:x="46314" fg:w="23"/><text x="89.6712%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.27%)</title><rect x="89.3782%" y="149" width="0.2663%" height="15" fill="rgb(234,204,37)" fg:x="46314" fg:w="138"/><text x="89.6712%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="89.6445%" y="117" width="0.0521%" height="15" fill="rgb(236,120,5)" fg:x="46452" fg:w="27"/><text x="89.9375%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.13%)</title><rect x="89.6966%" y="117" width="0.1332%" height="15" fill="rgb(248,97,27)" fg:x="46479" fg:w="69"/><text x="89.9896%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="89.8298%" y="117" width="0.1312%" height="15" fill="rgb(240,66,17)" fg:x="46548" fg:w="68"/><text x="90.1228%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (286 instructions, 0.55%)</title><rect x="89.6445%" y="133" width="0.5519%" height="15" fill="rgb(210,79,3)" fg:x="46452" fg:w="286"/><text x="89.9375%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (321 instructions, 0.62%)</title><rect x="89.6445%" y="149" width="0.6195%" height="15" fill="rgb(214,176,27)" fg:x="46452" fg:w="321"/><text x="89.9375%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.2640%" y="149" width="0.0251%" height="15" fill="rgb(235,185,3)" fg:x="46773" fg:w="13"/><text x="90.5570%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,831 instructions, 3.53%)</title><rect x="86.8752%" y="165" width="3.5335%" height="15" fill="rgb(227,24,12)" fg:x="45017" fg:w="1831"/><text x="87.1682%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,880 instructions, 3.63%)</title><rect x="86.8752%" y="181" width="3.6281%" height="15" fill="rgb(252,169,48)" fg:x="45017" fg:w="1880"/><text x="87.1682%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.5033%" y="165" width="0.0521%" height="15" fill="rgb(212,65,1)" fg:x="46897" fg:w="27"/><text x="90.7963%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.27%)</title><rect x="90.5033%" y="181" width="0.2740%" height="15" fill="rgb(242,39,24)" fg:x="46897" fg:w="142"/><text x="90.7963%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="90.7773%" y="181" width="0.1158%" height="15" fill="rgb(249,32,23)" fg:x="47039" fg:w="60"/><text x="91.0703%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="90.8931%" y="165" width="0.0135%" height="15" fill="rgb(251,195,23)" fg:x="47099" fg:w="7"/><text x="91.1861%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.9066%" y="165" width="0.0251%" height="15" fill="rgb(236,174,8)" fg:x="47106" fg:w="13"/><text x="91.1996%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.9317%" y="165" width="0.0251%" height="15" fill="rgb(220,197,8)" fg:x="47119" fg:w="13"/><text x="91.2247%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.9568%" y="165" width="0.0251%" height="15" fill="rgb(240,108,37)" fg:x="47132" fg:w="13"/><text x="91.2498%" y="175.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="90.9819%" y="165" width="0.1795%" height="15" fill="rgb(232,176,24)" fg:x="47145" fg:w="93"/><text x="91.2749%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (374 instructions, 0.72%)</title><rect x="90.8931%" y="181" width="0.7218%" height="15" fill="rgb(243,35,29)" fg:x="47099" fg:w="374"/><text x="91.1861%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.00%)</title><rect x="91.6149%" y="165" width="0.9997%" height="15" fill="rgb(210,37,18)" fg:x="47473" fg:w="518"/><text x="91.9079%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="92.6145%" y="117" width="0.1602%" height="15" fill="rgb(224,184,40)" fg:x="47991" fg:w="83"/><text x="92.9075%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="92.6145%" y="133" width="0.2432%" height="15" fill="rgb(236,39,29)" fg:x="47991" fg:w="126"/><text x="92.9075%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.40%)</title><rect x="92.6145%" y="149" width="0.4014%" height="15" fill="rgb(232,48,39)" fg:x="47991" fg:w="208"/><text x="92.9075%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0159%" y="149" width="0.0289%" height="15" fill="rgb(236,34,42)" fg:x="48199" fg:w="15"/><text x="93.3089%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0449%" y="149" width="0.0289%" height="15" fill="rgb(243,106,37)" fg:x="48214" fg:w="15"/><text x="93.3379%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.82%)</title><rect x="92.6145%" y="165" width="0.8221%" height="15" fill="rgb(218,96,6)" fg:x="47991" fg:w="426"/><text x="92.9075%" y="175.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.00%)</title><rect x="93.4366%" y="165" width="0.9958%" height="15" fill="rgb(235,130,12)" fg:x="48417" fg:w="516"/><text x="93.7296%" y="175.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="94.4324%" y="165" width="0.0135%" height="15" fill="rgb(231,95,0)" fg:x="48933" fg:w="7"/><text x="94.7254%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,560 instructions, 3.01%)</title><rect x="91.6149%" y="181" width="3.0105%" height="15" fill="rgb(228,12,23)" fg:x="47473" fg:w="1560"/><text x="91.9079%" y="191.50">ca..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="94.6254%" y="165" width="0.0135%" height="15" fill="rgb(216,12,1)" fg:x="49033" fg:w="7"/><text x="94.9184%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="94.6389%" y="165" width="0.1158%" height="15" fill="rgb(219,59,3)" fg:x="49040" fg:w="60"/><text x="94.9319%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (133 instructions, 0.26%)</title><rect x="94.6254%" y="181" width="0.2567%" height="15" fill="rgb(215,208,46)" fg:x="49033" fg:w="133"/><text x="94.9184%" y="191.50"></text></g><g><title>subscriber::__canister_method_update_count::{{closure}} (51,238 instructions, 98.88%)</title><rect x="0.3667%" y="197" width="98.8807%" height="15" fill="rgb(254,224,29)" fg:x="190" fg:w="51238"/><text x="0.6596%" y="207.50">subscriber::__canister_method_update_count::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.2474%" y="197" width="0.0270%" height="15" fill="rgb(232,14,29)" fg:x="51428" fg:w="14"/><text x="99.5403%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="99.4481%" y="181" width="0.0521%" height="15" fill="rgb(208,45,52)" fg:x="51532" fg:w="27"/><text x="99.7410%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.45%)</title><rect x="99.2763%" y="197" width="0.4458%" height="15" fill="rgb(234,191,28)" fg:x="51443" fg:w="231"/><text x="99.5693%" y="207.50"></text></g><g><title>all (51,818 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(244,67,43)" fg:x="0" fg:w="51818"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (51,818 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(236,189,24)" fg:x="0" fg:w="51818"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>