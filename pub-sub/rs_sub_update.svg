<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="45691"><g><title>ic_cdk::setup (7 instructions, 0.02%)</title><rect x="0.0000%" y="229" width="0.0153%" height="15" fill="rgb(214,183,37)" fg:x="0" fg:w="7"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="0.0153%" y="197" width="0.2057%" height="15" fill="rgb(239,117,29)" fg:x="7" fg:w="94"/><text x="0.3083%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="0.0153%" y="213" width="0.2276%" height="15" fill="rgb(237,171,35)" fg:x="7" fg:w="104"/><text x="0.3083%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="0.2495%" y="197" width="0.1970%" height="15" fill="rgb(229,178,53)" fg:x="114" fg:w="90"/><text x="0.5425%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="0.2495%" y="213" width="0.2189%" height="15" fill="rgb(210,102,19)" fg:x="114" fg:w="100"/><text x="0.5425%" y="223.50"></text></g><g><title>__rust_alloc (210 instructions, 0.46%)</title><rect x="0.0153%" y="229" width="0.4596%" height="15" fill="rgb(235,127,22)" fg:x="7" fg:w="210"/><text x="0.3083%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="0.4749%" y="165" width="0.1970%" height="15" fill="rgb(244,31,31)" fg:x="217" fg:w="90"/><text x="0.7679%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="0.4749%" y="181" width="0.2189%" height="15" fill="rgb(231,43,21)" fg:x="217" fg:w="100"/><text x="0.7679%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="0.4749%" y="197" width="0.2254%" height="15" fill="rgb(217,131,35)" fg:x="217" fg:w="103"/><text x="0.7679%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (187 instructions, 0.41%)</title><rect x="0.4749%" y="213" width="0.4093%" height="15" fill="rgb(221,149,4)" fg:x="217" fg:w="187"/><text x="0.7679%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="0.8842%" y="197" width="0.1335%" height="15" fill="rgb(232,170,28)" fg:x="404" fg:w="61"/><text x="1.1772%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.89%)</title><rect x="1.0177%" y="197" width="0.8908%" height="15" fill="rgb(238,56,10)" fg:x="465" fg:w="407"/><text x="1.3107%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.16%)</title><rect x="1.9085%" y="197" width="0.1620%" height="15" fill="rgb(235,196,14)" fg:x="872" fg:w="74"/><text x="2.2014%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0704%" y="197" width="0.1182%" height="15" fill="rgb(216,45,48)" fg:x="946" fg:w="54"/><text x="2.3634%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1886%" y="197" width="0.1182%" height="15" fill="rgb(238,213,17)" fg:x="1000" fg:w="54"/><text x="2.4816%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.3068%" y="197" width="0.1182%" height="15" fill="rgb(212,13,2)" fg:x="1054" fg:w="54"/><text x="2.5998%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.4250%" y="197" width="0.1182%" height="15" fill="rgb(240,114,20)" fg:x="1108" fg:w="54"/><text x="2.7180%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="2.5432%" y="197" width="0.1335%" height="15" fill="rgb(228,41,40)" fg:x="1162" fg:w="61"/><text x="2.8361%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.21%)</title><rect x="2.6767%" y="197" width="0.2123%" height="15" fill="rgb(244,132,35)" fg:x="1223" fg:w="97"/><text x="2.9696%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.89%)</title><rect x="2.8890%" y="197" width="0.8908%" height="15" fill="rgb(253,189,4)" fg:x="1320" fg:w="407"/><text x="3.1819%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.7797%" y="197" width="0.0350%" height="15" fill="rgb(224,37,19)" fg:x="1727" fg:w="16"/><text x="4.0727%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="3.8148%" y="133" width="0.1970%" height="15" fill="rgb(235,223,18)" fg:x="1743" fg:w="90"/><text x="4.1077%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="3.8148%" y="149" width="0.2189%" height="15" fill="rgb(235,163,25)" fg:x="1743" fg:w="100"/><text x="4.1077%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="3.8148%" y="165" width="0.2254%" height="15" fill="rgb(217,145,28)" fg:x="1743" fg:w="103"/><text x="4.1077%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="4.0402%" y="133" width="0.1313%" height="15" fill="rgb(223,223,32)" fg:x="1846" fg:w="60"/><text x="4.3332%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="4.0402%" y="149" width="0.1860%" height="15" fill="rgb(227,189,39)" fg:x="1846" fg:w="85"/><text x="4.3332%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.2262%" y="101" width="0.0197%" height="15" fill="rgb(248,10,22)" fg:x="1931" fg:w="9"/><text x="4.5192%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.2459%" y="85" width="0.0657%" height="15" fill="rgb(248,46,39)" fg:x="1940" fg:w="30"/><text x="4.5389%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="4.2459%" y="101" width="0.1204%" height="15" fill="rgb(248,113,48)" fg:x="1940" fg:w="55"/><text x="4.5389%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="4.2262%" y="117" width="0.2539%" height="15" fill="rgb(245,16,25)" fg:x="1931" fg:w="116"/><text x="4.5192%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.37%)</title><rect x="4.2262%" y="133" width="0.3699%" height="15" fill="rgb(249,152,16)" fg:x="1931" fg:w="169"/><text x="4.5192%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.38%)</title><rect x="4.2262%" y="149" width="0.3808%" height="15" fill="rgb(250,16,1)" fg:x="1931" fg:w="174"/><text x="4.5192%" y="159.50"></text></g><g><title>core::fmt::write (367 instructions, 0.80%)</title><rect x="4.0402%" y="165" width="0.8032%" height="15" fill="rgb(249,138,3)" fg:x="1846" fg:w="367"/><text x="4.3332%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.34%)</title><rect x="3.8148%" y="181" width="1.3416%" height="15" fill="rgb(227,71,41)" fg:x="1743" fg:w="613"/><text x="4.1077%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.16%)</title><rect x="5.1564%" y="181" width="0.1620%" height="15" fill="rgb(209,184,23)" fg:x="2356" fg:w="74"/><text x="5.4493%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="5.3183%" y="181" width="0.1182%" height="15" fill="rgb(223,215,31)" fg:x="2430" fg:w="54"/><text x="5.6113%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.78%)</title><rect x="3.8148%" y="197" width="1.7772%" height="15" fill="rgb(210,146,28)" fg:x="1743" fg:w="812"/><text x="4.1077%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.5919%" y="181" width="0.1182%" height="15" fill="rgb(209,183,41)" fg:x="2555" fg:w="54"/><text x="5.8849%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="5.7101%" y="149" width="0.1970%" height="15" fill="rgb(209,224,45)" fg:x="2609" fg:w="90"/><text x="6.0031%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="5.7101%" y="165" width="0.2189%" height="15" fill="rgb(224,209,51)" fg:x="2609" fg:w="100"/><text x="6.0031%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="5.7101%" y="181" width="0.2254%" height="15" fill="rgb(223,17,39)" fg:x="2609" fg:w="103"/><text x="6.0031%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (176 instructions, 0.39%)</title><rect x="5.9355%" y="133" width="0.3852%" height="15" fill="rgb(234,204,37)" fg:x="2712" fg:w="176"/><text x="6.2285%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (186 instructions, 0.41%)</title><rect x="5.9355%" y="149" width="0.4071%" height="15" fill="rgb(236,120,5)" fg:x="2712" fg:w="186"/><text x="6.2285%" y="159.50"></text></g><g><title>__rust_alloc (189 instructions, 0.41%)</title><rect x="5.9355%" y="165" width="0.4136%" height="15" fill="rgb(248,97,27)" fg:x="2712" fg:w="189"/><text x="6.2285%" y="175.50"></text></g><g><title>memcpy (120 instructions, 0.26%)</title><rect x="6.3492%" y="133" width="0.2626%" height="15" fill="rgb(240,66,17)" fg:x="2901" fg:w="120"/><text x="6.6421%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.32%)</title><rect x="6.3492%" y="149" width="0.3173%" height="15" fill="rgb(210,79,3)" fg:x="2901" fg:w="145"/><text x="6.6421%" y="159.50"></text></g><g><title>__rust_realloc (122 instructions, 0.27%)</title><rect x="6.6665%" y="53" width="0.2670%" height="15" fill="rgb(214,176,27)" fg:x="3046" fg:w="122"/><text x="6.9595%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (159 instructions, 0.35%)</title><rect x="6.6665%" y="69" width="0.3480%" height="15" fill="rgb(235,185,3)" fg:x="3046" fg:w="159"/><text x="6.9595%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (234 instructions, 0.51%)</title><rect x="6.6665%" y="85" width="0.5121%" height="15" fill="rgb(227,24,12)" fg:x="3046" fg:w="234"/><text x="6.9595%" y="95.50"></text></g><g><title>memcpy (195 instructions, 0.43%)</title><rect x="7.1787%" y="85" width="0.4268%" height="15" fill="rgb(252,169,48)" fg:x="3280" fg:w="195"/><text x="7.4716%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (461 instructions, 1.01%)</title><rect x="6.6665%" y="101" width="1.0090%" height="15" fill="rgb(212,65,1)" fg:x="3046" fg:w="461"/><text x="6.9595%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.6755%" y="53" width="0.0197%" height="15" fill="rgb(242,39,24)" fg:x="3507" fg:w="9"/><text x="7.9684%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.6952%" y="37" width="0.0657%" height="15" fill="rgb(249,32,23)" fg:x="3516" fg:w="30"/><text x="7.9881%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.6952%" y="53" width="0.1204%" height="15" fill="rgb(251,195,23)" fg:x="3516" fg:w="55"/><text x="7.9881%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="7.6755%" y="69" width="0.2539%" height="15" fill="rgb(236,174,8)" fg:x="3507" fg:w="116"/><text x="7.9684%" y="79.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::UpperHex for i64&gt;::fmt (180 instructions, 0.39%)</title><rect x="7.6755%" y="85" width="0.3940%" height="15" fill="rgb(220,197,8)" fg:x="3507" fg:w="180"/><text x="7.9684%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.40%)</title><rect x="7.6755%" y="101" width="0.4027%" height="15" fill="rgb(240,108,37)" fg:x="3507" fg:w="184"/><text x="7.9684%" y="111.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="8.0782%" y="85" width="0.0985%" height="15" fill="rgb(232,176,24)" fg:x="3691" fg:w="45"/><text x="8.3711%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.15%)</title><rect x="8.0782%" y="101" width="0.1532%" height="15" fill="rgb(243,35,29)" fg:x="3691" fg:w="70"/><text x="8.3711%" y="111.50"></text></g><g><title>core::fmt::write (840 instructions, 1.84%)</title><rect x="6.6665%" y="117" width="1.8384%" height="15" fill="rgb(210,37,18)" fg:x="3046" fg:w="840"/><text x="6.9595%" y="127.50"></text></g><g><title>core::fmt::Formatter::write_fmt (879 instructions, 1.92%)</title><rect x="6.6665%" y="133" width="1.9238%" height="15" fill="rgb(224,184,40)" fg:x="3046" fg:w="879"/><text x="6.9595%" y="143.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (934 instructions, 2.04%)</title><rect x="6.6665%" y="149" width="2.0442%" height="15" fill="rgb(236,39,29)" fg:x="3046" fg:w="934"/><text x="6.9595%" y="159.50"></text></g><g><title>core::fmt::write (1,187 instructions, 2.60%)</title><rect x="6.3492%" y="165" width="2.5979%" height="15" fill="rgb(232,48,39)" fg:x="2901" fg:w="1187"/><text x="6.6421%" y="175.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,519 instructions, 3.32%)</title><rect x="5.9355%" y="181" width="3.3245%" height="15" fill="rgb(236,34,42)" fg:x="2712" fg:w="1519"/><text x="6.2285%" y="191.50">al..</text></g><g><title>binread::binary_template::write_comment (62 instructions, 0.14%)</title><rect x="9.2600%" y="181" width="0.1357%" height="15" fill="rgb(243,106,37)" fg:x="4231" fg:w="62"/><text x="9.5530%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="9.3957%" y="181" width="0.1182%" height="15" fill="rgb(218,96,6)" fg:x="4293" fg:w="54"/><text x="9.6887%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="9.5139%" y="181" width="0.1226%" height="15" fill="rgb(235,130,12)" fg:x="4347" fg:w="56"/><text x="9.8069%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.19%)</title><rect x="9.6365%" y="117" width="0.1948%" height="15" fill="rgb(231,95,0)" fg:x="4403" fg:w="89"/><text x="9.9294%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.22%)</title><rect x="9.6365%" y="133" width="0.2167%" height="15" fill="rgb(228,12,23)" fg:x="4403" fg:w="99"/><text x="9.9294%" y="143.50"></text></g><g><title>__rust_alloc (102 instructions, 0.22%)</title><rect x="9.6365%" y="149" width="0.2232%" height="15" fill="rgb(216,12,1)" fg:x="4403" fg:w="102"/><text x="9.9294%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.29%)</title><rect x="9.6365%" y="165" width="0.2889%" height="15" fill="rgb(219,59,3)" fg:x="4403" fg:w="132"/><text x="9.9294%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (200 instructions, 0.44%)</title><rect x="9.6365%" y="181" width="0.4377%" height="15" fill="rgb(215,208,46)" fg:x="4403" fg:w="200"/><text x="9.9294%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="10.0742%" y="181" width="0.1182%" height="15" fill="rgb(254,224,29)" fg:x="4603" fg:w="54"/><text x="10.3672%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="10.1924%" y="149" width="0.2057%" height="15" fill="rgb(232,14,29)" fg:x="4657" fg:w="94"/><text x="10.4853%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="10.1924%" y="165" width="0.2276%" height="15" fill="rgb(208,45,52)" fg:x="4657" fg:w="104"/><text x="10.4853%" y="175.50"></text></g><g><title>__rust_alloc (107 instructions, 0.23%)</title><rect x="10.1924%" y="181" width="0.2342%" height="15" fill="rgb(234,191,28)" fg:x="4657" fg:w="107"/><text x="10.4853%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="10.4266%" y="133" width="0.2035%" height="15" fill="rgb(244,67,43)" fg:x="4764" fg:w="93"/><text x="10.7195%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="10.4266%" y="149" width="0.2254%" height="15" fill="rgb(236,189,24)" fg:x="4764" fg:w="103"/><text x="10.7195%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="10.4266%" y="165" width="0.2320%" height="15" fill="rgb(239,214,33)" fg:x="4764" fg:w="106"/><text x="10.7195%" y="175.50"></text></g><g><title>memcpy (120 instructions, 0.26%)</title><rect x="10.6586%" y="133" width="0.2626%" height="15" fill="rgb(226,176,41)" fg:x="4870" fg:w="120"/><text x="10.9515%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.32%)</title><rect x="10.6586%" y="149" width="0.3173%" height="15" fill="rgb(248,47,8)" fg:x="4870" fg:w="145"/><text x="10.9515%" y="159.50"></text></g><g><title>__rust_realloc (97 instructions, 0.21%)</title><rect x="10.9759%" y="53" width="0.2123%" height="15" fill="rgb(218,81,44)" fg:x="5015" fg:w="97"/><text x="11.2689%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.29%)</title><rect x="10.9759%" y="69" width="0.2933%" height="15" fill="rgb(213,98,6)" fg:x="5015" fg:w="134"/><text x="11.2689%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.46%)</title><rect x="10.9759%" y="85" width="0.4574%" height="15" fill="rgb(222,85,22)" fg:x="5015" fg:w="209"/><text x="11.2689%" y="95.50"></text></g><g><title>memcpy (195 instructions, 0.43%)</title><rect x="11.4333%" y="85" width="0.4268%" height="15" fill="rgb(239,46,39)" fg:x="5224" fg:w="195"/><text x="11.7263%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (436 instructions, 0.95%)</title><rect x="10.9759%" y="101" width="0.9542%" height="15" fill="rgb(237,12,29)" fg:x="5015" fg:w="436"/><text x="11.2689%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="11.9301%" y="53" width="0.0197%" height="15" fill="rgb(214,77,8)" fg:x="5451" fg:w="9"/><text x="12.2231%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.9498%" y="37" width="0.0657%" height="15" fill="rgb(217,168,37)" fg:x="5460" fg:w="30"/><text x="12.2428%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.9498%" y="53" width="0.1204%" height="15" fill="rgb(221,217,23)" fg:x="5460" fg:w="55"/><text x="12.2428%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="11.9301%" y="69" width="0.2539%" height="15" fill="rgb(243,229,36)" fg:x="5451" fg:w="116"/><text x="12.2231%" y="79.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::UpperHex for i64&gt;::fmt (180 instructions, 0.39%)</title><rect x="11.9301%" y="85" width="0.3940%" height="15" fill="rgb(251,163,40)" fg:x="5451" fg:w="180"/><text x="12.2231%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.40%)</title><rect x="11.9301%" y="101" width="0.4027%" height="15" fill="rgb(237,222,12)" fg:x="5451" fg:w="184"/><text x="12.2231%" y="111.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="12.3328%" y="85" width="0.0985%" height="15" fill="rgb(248,132,6)" fg:x="5635" fg:w="45"/><text x="12.6258%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.15%)</title><rect x="12.3328%" y="101" width="0.1532%" height="15" fill="rgb(227,167,50)" fg:x="5635" fg:w="70"/><text x="12.6258%" y="111.50"></text></g><g><title>core::fmt::write (815 instructions, 1.78%)</title><rect x="10.9759%" y="117" width="1.7837%" height="15" fill="rgb(242,84,37)" fg:x="5015" fg:w="815"/><text x="11.2689%" y="127.50"></text></g><g><title>core::fmt::Formatter::write_fmt (854 instructions, 1.87%)</title><rect x="10.9759%" y="133" width="1.8691%" height="15" fill="rgb(212,4,50)" fg:x="5015" fg:w="854"/><text x="11.2689%" y="143.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (909 instructions, 1.99%)</title><rect x="10.9759%" y="149" width="1.9895%" height="15" fill="rgb(230,228,32)" fg:x="5015" fg:w="909"/><text x="11.2689%" y="159.50"></text></g><g><title>core::fmt::write (1,162 instructions, 2.54%)</title><rect x="10.6586%" y="165" width="2.5432%" height="15" fill="rgb(248,217,23)" fg:x="4870" fg:w="1162"/><text x="10.9515%" y="175.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,411 instructions, 3.09%)</title><rect x="10.4266%" y="181" width="3.0881%" height="15" fill="rgb(238,197,32)" fg:x="4764" fg:w="1411"/><text x="10.7195%" y="191.50">al..</text></g><g><title>binread::binary_template::write_comment (62 instructions, 0.14%)</title><rect x="13.5147%" y="181" width="0.1357%" height="15" fill="rgb(236,106,1)" fg:x="6175" fg:w="62"/><text x="13.8077%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="13.6504%" y="181" width="0.1204%" height="15" fill="rgb(219,228,13)" fg:x="6237" fg:w="55"/><text x="13.9434%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="13.7708%" y="181" width="0.1226%" height="15" fill="rgb(238,30,35)" fg:x="6292" fg:w="56"/><text x="14.0637%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="13.8933%" y="181" width="0.1182%" height="15" fill="rgb(236,70,23)" fg:x="6348" fg:w="54"/><text x="14.1863%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="14.0115%" y="165" width="0.1335%" height="15" fill="rgb(249,104,48)" fg:x="6402" fg:w="61"/><text x="14.3045%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.21%)</title><rect x="14.1450%" y="165" width="0.2123%" height="15" fill="rgb(254,117,50)" fg:x="6463" fg:w="97"/><text x="14.4380%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.89%)</title><rect x="14.3573%" y="165" width="0.8908%" height="15" fill="rgb(223,152,4)" fg:x="6560" fg:w="407"/><text x="14.6503%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="15.2481%" y="165" width="0.0350%" height="15" fill="rgb(245,6,2)" fg:x="6967" fg:w="16"/><text x="15.5410%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="15.2831%" y="101" width="0.2035%" height="15" fill="rgb(249,150,24)" fg:x="6983" fg:w="93"/><text x="15.5761%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="15.2831%" y="117" width="0.2254%" height="15" fill="rgb(228,185,42)" fg:x="6983" fg:w="103"/><text x="15.5761%" y="127.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="15.2831%" y="133" width="0.2320%" height="15" fill="rgb(226,39,33)" fg:x="6983" fg:w="106"/><text x="15.5761%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="15.5151%" y="101" width="0.1313%" height="15" fill="rgb(221,166,19)" fg:x="7089" fg:w="60"/><text x="15.8081%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="15.5151%" y="117" width="0.1860%" height="15" fill="rgb(209,109,2)" fg:x="7089" fg:w="85"/><text x="15.8081%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="15.7011%" y="69" width="0.0197%" height="15" fill="rgb(252,216,26)" fg:x="7174" fg:w="9"/><text x="15.9941%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="15.7208%" y="53" width="0.0657%" height="15" fill="rgb(227,173,36)" fg:x="7183" fg:w="30"/><text x="16.0138%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="15.7208%" y="69" width="0.1204%" height="15" fill="rgb(209,90,7)" fg:x="7183" fg:w="55"/><text x="16.0138%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="15.7011%" y="85" width="0.2539%" height="15" fill="rgb(250,194,11)" fg:x="7174" fg:w="116"/><text x="15.9941%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.37%)</title><rect x="15.7011%" y="101" width="0.3699%" height="15" fill="rgb(220,72,50)" fg:x="7174" fg:w="169"/><text x="15.9941%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.38%)</title><rect x="15.7011%" y="117" width="0.3808%" height="15" fill="rgb(222,106,48)" fg:x="7174" fg:w="174"/><text x="15.9941%" y="127.50"></text></g><g><title>core::fmt::write (367 instructions, 0.80%)</title><rect x="15.5151%" y="133" width="0.8032%" height="15" fill="rgb(216,220,45)" fg:x="7089" fg:w="367"/><text x="15.8081%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.35%)</title><rect x="15.2831%" y="149" width="1.3482%" height="15" fill="rgb(234,112,18)" fg:x="6983" fg:w="616"/><text x="15.5761%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.16%)</title><rect x="16.6313%" y="149" width="0.1620%" height="15" fill="rgb(206,179,9)" fg:x="7599" fg:w="74"/><text x="16.9243%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="16.7932%" y="149" width="0.1204%" height="15" fill="rgb(215,115,40)" fg:x="7673" fg:w="55"/><text x="17.0862%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 1.79%)</title><rect x="15.2831%" y="165" width="1.7859%" height="15" fill="rgb(222,69,34)" fg:x="6983" fg:w="816"/><text x="15.5761%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="17.0690%" y="149" width="0.1335%" height="15" fill="rgb(209,161,10)" fg:x="7799" fg:w="61"/><text x="17.3620%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (309 instructions, 0.68%)</title><rect x="17.2025%" y="149" width="0.6763%" height="15" fill="rgb(217,6,38)" fg:x="7860" fg:w="309"/><text x="17.4955%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="17.8788%" y="133" width="0.1335%" height="15" fill="rgb(229,229,48)" fg:x="8169" fg:w="61"/><text x="18.1718%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.28%)</title><rect x="18.0123%" y="133" width="0.2758%" height="15" fill="rgb(225,21,28)" fg:x="8230" fg:w="126"/><text x="18.3053%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="18.2881%" y="133" width="0.1226%" height="15" fill="rgb(206,33,13)" fg:x="8356" fg:w="56"/><text x="18.5810%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.67%)</title><rect x="17.8788%" y="149" width="0.6675%" height="15" fill="rgb(242,178,17)" fg:x="8169" fg:w="305"/><text x="18.1718%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="18.5463%" y="149" width="0.1226%" height="15" fill="rgb(220,162,5)" fg:x="8474" fg:w="56"/><text x="18.8393%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::FieldType as binread::BinRead&gt;::read_options (832 instructions, 1.82%)</title><rect x="17.0690%" y="165" width="1.8209%" height="15" fill="rgb(210,33,43)" fg:x="7799" fg:w="832"/><text x="17.3620%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="18.8899%" y="133" width="0.2035%" height="15" fill="rgb(216,116,54)" fg:x="8631" fg:w="93"/><text x="19.1829%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="18.8899%" y="149" width="0.2254%" height="15" fill="rgb(249,92,24)" fg:x="8631" fg:w="103"/><text x="19.1829%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="18.8899%" y="165" width="0.2320%" height="15" fill="rgb(231,189,14)" fg:x="8631" fg:w="106"/><text x="19.1829%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="19.1219%" y="149" width="0.1335%" height="15" fill="rgb(230,8,41)" fg:x="8737" fg:w="61"/><text x="19.4149%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (309 instructions, 0.68%)</title><rect x="19.2554%" y="149" width="0.6763%" height="15" fill="rgb(249,7,27)" fg:x="8798" fg:w="309"/><text x="19.5484%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="19.9317%" y="133" width="0.1335%" height="15" fill="rgb(232,86,5)" fg:x="9107" fg:w="61"/><text x="20.2247%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.28%)</title><rect x="20.0652%" y="133" width="0.2758%" height="15" fill="rgb(224,175,18)" fg:x="9168" fg:w="126"/><text x="20.3582%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="20.3410%" y="133" width="0.1226%" height="15" fill="rgb(220,129,12)" fg:x="9294" fg:w="56"/><text x="20.6340%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.67%)</title><rect x="19.9317%" y="149" width="0.6675%" height="15" fill="rgb(210,19,36)" fg:x="9107" fg:w="305"/><text x="20.2247%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="20.5992%" y="149" width="0.1226%" height="15" fill="rgb(219,96,14)" fg:x="9412" fg:w="56"/><text x="20.8922%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::FieldType as binread::BinRead&gt;::read_options (832 instructions, 1.82%)</title><rect x="19.1219%" y="165" width="1.8209%" height="15" fill="rgb(249,106,1)" fg:x="8737" fg:w="832"/><text x="19.4149%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="20.9429%" y="165" width="0.1226%" height="15" fill="rgb(249,155,20)" fg:x="9569" fg:w="56"/><text x="21.2358%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,626 instructions, 7.94%)</title><rect x="14.0115%" y="181" width="7.9359%" height="15" fill="rgb(244,168,9)" fg:x="6402" fg:w="3626"/><text x="14.3045%" y="191.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="21.9474%" y="165" width="0.1773%" height="15" fill="rgb(216,23,50)" fg:x="10028" fg:w="81"/><text x="22.2404%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="22.1926%" y="165" width="0.2780%" height="15" fill="rgb(224,219,20)" fg:x="10140" fg:w="127"/><text x="22.4855%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (270 instructions, 0.59%)</title><rect x="21.9474%" y="181" width="0.5909%" height="15" fill="rgb(222,156,15)" fg:x="10028" fg:w="270"/><text x="22.2404%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="22.5384%" y="181" width="0.1773%" height="15" fill="rgb(231,97,17)" fg:x="10298" fg:w="81"/><text x="22.8313%" y="191.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,438 instructions, 18.47%)</title><rect x="5.5919%" y="197" width="18.4675%" height="15" fill="rgb(218,70,48)" fg:x="2555" fg:w="8438"/><text x="5.8849%" y="207.50">&lt;candid::binary_parser::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (69 instructions, 0.15%)</title><rect x="24.0594%" y="165" width="0.1510%" height="15" fill="rgb(212,196,52)" fg:x="10993" fg:w="69"/><text x="24.3524%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.17%)</title><rect x="24.0594%" y="181" width="0.1729%" height="15" fill="rgb(243,203,18)" fg:x="10993" fg:w="79"/><text x="24.3524%" y="191.50"></text></g><g><title>__rust_alloc (82 instructions, 0.18%)</title><rect x="24.0594%" y="197" width="0.1795%" height="15" fill="rgb(252,125,41)" fg:x="10993" fg:w="82"/><text x="24.3524%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="24.2389%" y="197" width="0.1226%" height="15" fill="rgb(223,180,33)" fg:x="11075" fg:w="56"/><text x="24.5319%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.21%)</title><rect x="24.3615%" y="197" width="0.2123%" height="15" fill="rgb(254,159,46)" fg:x="11131" fg:w="97"/><text x="24.6544%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.89%)</title><rect x="24.5738%" y="181" width="0.8908%" height="15" fill="rgb(254,38,10)" fg:x="11228" fg:w="407"/><text x="24.8667%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="25.4645%" y="181" width="0.0350%" height="15" fill="rgb(208,217,32)" fg:x="11635" fg:w="16"/><text x="25.7575%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.30%)</title><rect x="25.4996%" y="117" width="0.2977%" height="15" fill="rgb(221,120,13)" fg:x="11651" fg:w="136"/><text x="25.7925%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.32%)</title><rect x="25.4996%" y="133" width="0.3195%" height="15" fill="rgb(246,54,52)" fg:x="11651" fg:w="146"/><text x="25.7925%" y="143.50"></text></g><g><title>__rust_alloc (149 instructions, 0.33%)</title><rect x="25.4996%" y="149" width="0.3261%" height="15" fill="rgb(242,34,25)" fg:x="11651" fg:w="149"/><text x="25.7925%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="25.8257%" y="117" width="0.1313%" height="15" fill="rgb(247,209,9)" fg:x="11800" fg:w="60"/><text x="26.1186%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="25.8257%" y="133" width="0.1860%" height="15" fill="rgb(228,71,26)" fg:x="11800" fg:w="85"/><text x="26.1186%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="26.0117%" y="85" width="0.0197%" height="15" fill="rgb(222,145,49)" fg:x="11885" fg:w="9"/><text x="26.3047%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="26.0314%" y="69" width="0.0657%" height="15" fill="rgb(218,121,17)" fg:x="11894" fg:w="30"/><text x="26.3244%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="26.0314%" y="85" width="0.1204%" height="15" fill="rgb(244,50,7)" fg:x="11894" fg:w="55"/><text x="26.3244%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="26.0117%" y="101" width="0.2539%" height="15" fill="rgb(246,229,37)" fg:x="11885" fg:w="116"/><text x="26.3047%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.37%)</title><rect x="26.0117%" y="117" width="0.3699%" height="15" fill="rgb(225,18,5)" fg:x="11885" fg:w="169"/><text x="26.3047%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.38%)</title><rect x="26.0117%" y="133" width="0.3808%" height="15" fill="rgb(213,204,8)" fg:x="11885" fg:w="174"/><text x="26.3047%" y="143.50"></text></g><g><title>core::fmt::write (367 instructions, 0.80%)</title><rect x="25.8257%" y="149" width="0.8032%" height="15" fill="rgb(238,103,6)" fg:x="11800" fg:w="367"/><text x="26.1186%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (659 instructions, 1.44%)</title><rect x="25.4996%" y="165" width="1.4423%" height="15" fill="rgb(222,25,35)" fg:x="11651" fg:w="659"/><text x="25.7925%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.16%)</title><rect x="26.9418%" y="165" width="0.1620%" height="15" fill="rgb(213,203,35)" fg:x="12310" fg:w="74"/><text x="27.2348%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="27.1038%" y="165" width="0.1182%" height="15" fill="rgb(221,79,53)" fg:x="12384" fg:w="54"/><text x="27.3968%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (858 instructions, 1.88%)</title><rect x="25.4996%" y="181" width="1.8778%" height="15" fill="rgb(243,200,35)" fg:x="11651" fg:w="858"/><text x="25.7925%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="27.3774%" y="165" width="0.1335%" height="15" fill="rgb(248,60,25)" fg:x="12509" fg:w="61"/><text x="27.6704%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.28%)</title><rect x="27.5109%" y="165" width="0.2758%" height="15" fill="rgb(227,53,46)" fg:x="12570" fg:w="126"/><text x="27.8039%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="27.7867%" y="165" width="0.1226%" height="15" fill="rgb(216,120,32)" fg:x="12696" fg:w="56"/><text x="28.0796%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.67%)</title><rect x="27.3774%" y="181" width="0.6675%" height="15" fill="rgb(220,134,1)" fg:x="12509" fg:w="305"/><text x="27.6704%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (176 instructions, 0.39%)</title><rect x="28.0449%" y="149" width="0.3852%" height="15" fill="rgb(237,168,5)" fg:x="12814" fg:w="176"/><text x="28.3379%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (186 instructions, 0.41%)</title><rect x="28.0449%" y="165" width="0.4071%" height="15" fill="rgb(231,100,33)" fg:x="12814" fg:w="186"/><text x="28.3379%" y="175.50"></text></g><g><title>__rust_alloc (189 instructions, 0.41%)</title><rect x="28.0449%" y="181" width="0.4136%" height="15" fill="rgb(236,177,47)" fg:x="12814" fg:w="189"/><text x="28.3379%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,000 instructions, 4.38%)</title><rect x="24.5738%" y="197" width="4.3772%" height="15" fill="rgb(235,7,49)" fg:x="11228" fg:w="2000"/><text x="24.8667%" y="207.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="28.9510%" y="197" width="0.1226%" height="15" fill="rgb(232,119,22)" fg:x="13228" fg:w="56"/><text x="29.2440%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="29.0736%" y="165" width="0.2057%" height="15" fill="rgb(254,73,53)" fg:x="13284" fg:w="94"/><text x="29.3665%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="29.0736%" y="181" width="0.2276%" height="15" fill="rgb(251,35,20)" fg:x="13284" fg:w="104"/><text x="29.3665%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.23%)</title><rect x="29.0736%" y="197" width="0.2342%" height="15" fill="rgb(241,119,20)" fg:x="13284" fg:w="107"/><text x="29.3665%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="29.3077%" y="149" width="0.1970%" height="15" fill="rgb(207,102,14)" fg:x="13391" fg:w="90"/><text x="29.6007%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="29.3077%" y="165" width="0.2189%" height="15" fill="rgb(248,201,50)" fg:x="13391" fg:w="100"/><text x="29.6007%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="29.3077%" y="181" width="0.2254%" height="15" fill="rgb(222,185,44)" fg:x="13391" fg:w="103"/><text x="29.6007%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (183 instructions, 0.40%)</title><rect x="29.3077%" y="197" width="0.4005%" height="15" fill="rgb(218,107,18)" fg:x="13391" fg:w="183"/><text x="29.6007%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.19%)</title><rect x="29.7083%" y="133" width="0.1948%" height="15" fill="rgb(237,177,39)" fg:x="13574" fg:w="89"/><text x="30.0012%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.22%)</title><rect x="29.7083%" y="149" width="0.2167%" height="15" fill="rgb(246,69,6)" fg:x="13574" fg:w="99"/><text x="30.0012%" y="159.50"></text></g><g><title>__rust_alloc (102 instructions, 0.22%)</title><rect x="29.7083%" y="165" width="0.2232%" height="15" fill="rgb(234,208,37)" fg:x="13574" fg:w="102"/><text x="30.0012%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.29%)</title><rect x="29.7083%" y="181" width="0.2889%" height="15" fill="rgb(225,4,6)" fg:x="13574" fg:w="132"/><text x="30.0012%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (200 instructions, 0.44%)</title><rect x="29.7083%" y="197" width="0.4377%" height="15" fill="rgb(233,45,0)" fg:x="13574" fg:w="200"/><text x="30.0012%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="30.1460%" y="165" width="0.2035%" height="15" fill="rgb(226,136,5)" fg:x="13774" fg:w="93"/><text x="30.4389%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="30.1460%" y="181" width="0.2254%" height="15" fill="rgb(211,91,47)" fg:x="13774" fg:w="103"/><text x="30.4389%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="30.1460%" y="197" width="0.2320%" height="15" fill="rgb(242,88,51)" fg:x="13774" fg:w="106"/><text x="30.4389%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="30.3780%" y="149" width="0.2035%" height="15" fill="rgb(230,91,28)" fg:x="13880" fg:w="93"/><text x="30.6709%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="30.3780%" y="165" width="0.2254%" height="15" fill="rgb(254,186,29)" fg:x="13880" fg:w="103"/><text x="30.6709%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="30.3780%" y="181" width="0.2320%" height="15" fill="rgb(238,6,4)" fg:x="13880" fg:w="106"/><text x="30.6709%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (186 instructions, 0.41%)</title><rect x="30.3780%" y="197" width="0.4071%" height="15" fill="rgb(221,151,16)" fg:x="13880" fg:w="186"/><text x="30.6709%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="30.7851%" y="165" width="0.2035%" height="15" fill="rgb(251,143,52)" fg:x="14066" fg:w="93"/><text x="31.0780%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="30.7851%" y="181" width="0.2254%" height="15" fill="rgb(206,90,15)" fg:x="14066" fg:w="103"/><text x="31.0780%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="30.7851%" y="197" width="0.2320%" height="15" fill="rgb(218,35,8)" fg:x="14066" fg:w="106"/><text x="31.0780%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="31.0170%" y="149" width="0.2035%" height="15" fill="rgb(239,215,6)" fg:x="14172" fg:w="93"/><text x="31.3100%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="31.0170%" y="165" width="0.2254%" height="15" fill="rgb(245,116,39)" fg:x="14172" fg:w="103"/><text x="31.3100%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="31.0170%" y="181" width="0.2320%" height="15" fill="rgb(242,65,28)" fg:x="14172" fg:w="106"/><text x="31.3100%" y="191.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="31.2490%" y="149" width="0.1970%" height="15" fill="rgb(252,132,53)" fg:x="14278" fg:w="90"/><text x="31.5420%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.25%)</title><rect x="31.2490%" y="165" width="0.2517%" height="15" fill="rgb(224,159,50)" fg:x="14278" fg:w="115"/><text x="31.5420%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="31.5007%" y="117" width="0.0197%" height="15" fill="rgb(224,93,4)" fg:x="14393" fg:w="9"/><text x="31.7937%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="31.5204%" y="101" width="0.0657%" height="15" fill="rgb(208,81,34)" fg:x="14402" fg:w="30"/><text x="31.8134%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="31.5204%" y="117" width="0.1204%" height="15" fill="rgb(233,92,54)" fg:x="14402" fg:w="55"/><text x="31.8134%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="31.5007%" y="133" width="0.2539%" height="15" fill="rgb(237,21,14)" fg:x="14393" fg:w="116"/><text x="31.7937%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.37%)</title><rect x="31.5007%" y="149" width="0.3699%" height="15" fill="rgb(249,128,51)" fg:x="14393" fg:w="169"/><text x="31.7937%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (184 instructions, 0.40%)</title><rect x="31.5007%" y="165" width="0.4027%" height="15" fill="rgb(223,129,24)" fg:x="14393" fg:w="184"/><text x="31.7937%" y="175.50"></text></g><g><title>core::fmt::write (407 instructions, 0.89%)</title><rect x="31.2490%" y="181" width="0.8908%" height="15" fill="rgb(231,168,25)" fg:x="14278" fg:w="407"/><text x="31.5420%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (656 instructions, 1.44%)</title><rect x="31.0170%" y="197" width="1.4357%" height="15" fill="rgb(224,39,20)" fg:x="14172" fg:w="656"/><text x="31.3100%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="32.4528%" y="149" width="0.2035%" height="15" fill="rgb(225,152,53)" fg:x="14828" fg:w="93"/><text x="32.7457%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="32.4528%" y="165" width="0.2254%" height="15" fill="rgb(252,17,24)" fg:x="14828" fg:w="103"/><text x="32.7457%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="32.4528%" y="181" width="0.2320%" height="15" fill="rgb(250,114,30)" fg:x="14828" fg:w="106"/><text x="32.7457%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (201 instructions, 0.44%)</title><rect x="32.4528%" y="197" width="0.4399%" height="15" fill="rgb(229,5,4)" fg:x="14828" fg:w="201"/><text x="32.7457%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.20%)</title><rect x="32.8927%" y="197" width="0.2014%" height="15" fill="rgb(225,176,49)" fg:x="15029" fg:w="92"/><text x="33.1857%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="33.0940%" y="197" width="0.0285%" height="15" fill="rgb(224,221,49)" fg:x="15121" fg:w="13"/><text x="33.3870%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.20%)</title><rect x="33.1225%" y="197" width="0.2014%" height="15" fill="rgb(253,169,27)" fg:x="15134" fg:w="92"/><text x="33.4155%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="33.3238%" y="149" width="0.2035%" height="15" fill="rgb(211,206,16)" fg:x="15226" fg:w="93"/><text x="33.6168%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="33.3238%" y="165" width="0.2254%" height="15" fill="rgb(244,87,35)" fg:x="15226" fg:w="103"/><text x="33.6168%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="33.3238%" y="181" width="0.2320%" height="15" fill="rgb(246,28,10)" fg:x="15226" fg:w="106"/><text x="33.6168%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (175 instructions, 0.38%)</title><rect x="33.3238%" y="197" width="0.3830%" height="15" fill="rgb(229,12,44)" fg:x="15226" fg:w="175"/><text x="33.6168%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="33.7069%" y="181" width="0.0503%" height="15" fill="rgb(210,145,37)" fg:x="15401" fg:w="23"/><text x="33.9998%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="33.7572%" y="181" width="0.0503%" height="15" fill="rgb(227,112,52)" fg:x="15424" fg:w="23"/><text x="34.0502%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.29%)</title><rect x="33.7069%" y="197" width="0.2933%" height="15" fill="rgb(238,155,34)" fg:x="15401" fg:w="134"/><text x="33.9998%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="34.0483%" y="181" width="0.1204%" height="15" fill="rgb(239,226,36)" fg:x="15557" fg:w="55"/><text x="34.3412%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (179 instructions, 0.39%)</title><rect x="34.0001%" y="197" width="0.3918%" height="15" fill="rgb(230,16,23)" fg:x="15535" fg:w="179"/><text x="34.2931%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="34.3919%" y="197" width="0.0285%" height="15" fill="rgb(236,171,36)" fg:x="15714" fg:w="13"/><text x="34.6849%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.05%)</title><rect x="34.4203%" y="197" width="0.0481%" height="15" fill="rgb(221,22,14)" fg:x="15727" fg:w="22"/><text x="34.7133%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="34.4685%" y="133" width="0.2035%" height="15" fill="rgb(242,43,11)" fg:x="15749" fg:w="93"/><text x="34.7615%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="34.4685%" y="149" width="0.2254%" height="15" fill="rgb(232,69,23)" fg:x="15749" fg:w="103"/><text x="34.7615%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="34.4685%" y="165" width="0.2320%" height="15" fill="rgb(216,180,54)" fg:x="15749" fg:w="106"/><text x="34.7615%" y="175.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="34.7005%" y="133" width="0.1970%" height="15" fill="rgb(216,5,24)" fg:x="15855" fg:w="90"/><text x="34.9935%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.25%)</title><rect x="34.7005%" y="149" width="0.2517%" height="15" fill="rgb(225,89,9)" fg:x="15855" fg:w="115"/><text x="34.9935%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="34.9522%" y="101" width="0.0197%" height="15" fill="rgb(243,75,33)" fg:x="15970" fg:w="9"/><text x="35.2451%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="34.9719%" y="85" width="0.0657%" height="15" fill="rgb(247,141,45)" fg:x="15979" fg:w="30"/><text x="35.2648%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="34.9719%" y="101" width="0.1204%" height="15" fill="rgb(232,177,36)" fg:x="15979" fg:w="55"/><text x="35.2648%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.25%)</title><rect x="34.9522%" y="117" width="0.2539%" height="15" fill="rgb(219,125,36)" fg:x="15970" fg:w="116"/><text x="35.2451%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.37%)</title><rect x="34.9522%" y="133" width="0.3699%" height="15" fill="rgb(227,94,9)" fg:x="15970" fg:w="169"/><text x="35.2451%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (184 instructions, 0.40%)</title><rect x="34.9522%" y="149" width="0.4027%" height="15" fill="rgb(240,34,52)" fg:x="15970" fg:w="184"/><text x="35.2451%" y="159.50"></text></g><g><title>core::fmt::write (407 instructions, 0.89%)</title><rect x="34.7005%" y="165" width="0.8908%" height="15" fill="rgb(216,45,12)" fg:x="15855" fg:w="407"/><text x="34.9935%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (656 instructions, 1.44%)</title><rect x="34.4685%" y="181" width="1.4357%" height="15" fill="rgb(246,21,19)" fg:x="15749" fg:w="656"/><text x="34.7615%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="35.9042%" y="149" width="0.2035%" height="15" fill="rgb(213,98,42)" fg:x="16405" fg:w="93"/><text x="36.1972%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="35.9042%" y="165" width="0.2254%" height="15" fill="rgb(250,136,47)" fg:x="16405" fg:w="103"/><text x="36.1972%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="35.9042%" y="181" width="0.2320%" height="15" fill="rgb(251,124,27)" fg:x="16405" fg:w="106"/><text x="36.1972%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (876 instructions, 1.92%)</title><rect x="34.4685%" y="197" width="1.9172%" height="15" fill="rgb(229,180,14)" fg:x="15749" fg:w="876"/><text x="34.7615%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="36.3857%" y="133" width="0.2035%" height="15" fill="rgb(245,216,25)" fg:x="16625" fg:w="93"/><text x="36.6787%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="36.3857%" y="149" width="0.2254%" height="15" fill="rgb(251,43,5)" fg:x="16625" fg:w="103"/><text x="36.6787%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="36.3857%" y="165" width="0.2320%" height="15" fill="rgb(250,128,24)" fg:x="16625" fg:w="106"/><text x="36.6787%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.30%)</title><rect x="36.3857%" y="181" width="0.2977%" height="15" fill="rgb(217,117,27)" fg:x="16625" fg:w="136"/><text x="36.6787%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.45%)</title><rect x="36.3857%" y="197" width="0.4465%" height="15" fill="rgb(245,147,4)" fg:x="16625" fg:w="204"/><text x="36.6787%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="36.8322%" y="165" width="0.2035%" height="15" fill="rgb(242,201,35)" fg:x="16829" fg:w="93"/><text x="37.1252%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="36.8322%" y="181" width="0.2254%" height="15" fill="rgb(218,181,1)" fg:x="16829" fg:w="103"/><text x="37.1252%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="36.8322%" y="197" width="0.2320%" height="15" fill="rgb(222,6,29)" fg:x="16829" fg:w="106"/><text x="37.1252%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.0642%" y="197" width="0.1773%" height="15" fill="rgb(208,186,3)" fg:x="16935" fg:w="81"/><text x="37.3572%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="37.2415%" y="165" width="0.2035%" height="15" fill="rgb(216,36,26)" fg:x="17016" fg:w="93"/><text x="37.5344%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="37.2415%" y="181" width="0.2254%" height="15" fill="rgb(248,201,23)" fg:x="17016" fg:w="103"/><text x="37.5344%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="37.4735%" y="165" width="0.2035%" height="15" fill="rgb(251,170,31)" fg:x="17122" fg:w="93"/><text x="37.7664%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="37.4735%" y="181" width="0.2254%" height="15" fill="rgb(207,110,25)" fg:x="17122" fg:w="103"/><text x="37.7664%" y="191.50"></text></g><g><title>__rust_alloc (212 instructions, 0.46%)</title><rect x="37.2415%" y="197" width="0.4640%" height="15" fill="rgb(250,54,15)" fg:x="17016" fg:w="212"/><text x="37.5344%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.03%)</title><rect x="37.7055%" y="197" width="0.0306%" height="15" fill="rgb(227,68,33)" fg:x="17228" fg:w="14"/><text x="37.9984%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.7361%" y="181" width="0.1773%" height="15" fill="rgb(238,34,41)" fg:x="17242" fg:w="81"/><text x="38.0291%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::binary_parser::ConsType&gt; (96 instructions, 0.21%)</title><rect x="37.7361%" y="197" width="0.2101%" height="15" fill="rgb(220,11,15)" fg:x="17242" fg:w="96"/><text x="38.0291%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.16%)</title><rect x="37.9462%" y="181" width="0.1554%" height="15" fill="rgb(246,111,35)" fg:x="17338" fg:w="71"/><text x="38.2392%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (174 instructions, 0.38%)</title><rect x="37.9462%" y="197" width="0.3808%" height="15" fill="rgb(209,88,53)" fg:x="17338" fg:w="174"/><text x="38.2392%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="38.3270%" y="197" width="0.1773%" height="15" fill="rgb(231,185,47)" fg:x="17512" fg:w="81"/><text x="38.6200%" y="207.50"></text></g><g><title>memcpy (411 instructions, 0.90%)</title><rect x="38.5043%" y="197" width="0.8995%" height="15" fill="rgb(233,154,1)" fg:x="17593" fg:w="411"/><text x="38.7973%" y="207.50"></text></g><g><title>memcpy (366 instructions, 0.80%)</title><rect x="39.4038%" y="197" width="0.8010%" height="15" fill="rgb(225,15,46)" fg:x="18004" fg:w="366"/><text x="39.6968%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (20,109 instructions, 44.01%)</title><rect x="0.8842%" y="213" width="44.0109%" height="15" fill="rgb(211,135,41)" fg:x="404" fg:w="20109"/><text x="1.1772%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (381 instructions, 0.83%)</title><rect x="44.8951%" y="213" width="0.8339%" height="15" fill="rgb(208,54,0)" fg:x="20513" fg:w="381"/><text x="45.1880%" y="223.50"></text></g><g><title>memcpy (381 instructions, 0.83%)</title><rect x="45.7289%" y="213" width="0.8339%" height="15" fill="rgb(244,136,14)" fg:x="20894" fg:w="381"/><text x="46.0219%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.01%)</title><rect x="46.5628%" y="197" width="0.0131%" height="15" fill="rgb(241,56,14)" fg:x="21275" fg:w="6"/><text x="46.8557%" y="207.50"></text></g><g><title>candid::types::internal::find_type (45 instructions, 0.10%)</title><rect x="46.5628%" y="213" width="0.0985%" height="15" fill="rgb(205,80,24)" fg:x="21275" fg:w="45"/><text x="46.8557%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="46.6613%" y="149" width="0.1182%" height="15" fill="rgb(220,57,4)" fg:x="21320" fg:w="54"/><text x="46.9542%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.39%)</title><rect x="46.6613%" y="165" width="0.3896%" height="15" fill="rgb(226,193,50)" fg:x="21320" fg:w="178"/><text x="46.9542%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (188 instructions, 0.41%)</title><rect x="46.6613%" y="181" width="0.4115%" height="15" fill="rgb(231,168,22)" fg:x="21320" fg:w="188"/><text x="46.9542%" y="191.50"></text></g><g><title>__rust_alloc (191 instructions, 0.42%)</title><rect x="46.6613%" y="197" width="0.4180%" height="15" fill="rgb(254,215,14)" fg:x="21320" fg:w="191"/><text x="46.9542%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (237 instructions, 0.52%)</title><rect x="46.6613%" y="213" width="0.5187%" height="15" fill="rgb(211,115,16)" fg:x="21320" fg:w="237"/><text x="46.9542%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="47.1800%" y="181" width="0.0109%" height="15" fill="rgb(236,210,16)" fg:x="21557" fg:w="5"/><text x="47.4729%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.1909%" y="165" width="0.1160%" height="15" fill="rgb(221,94,12)" fg:x="21562" fg:w="53"/><text x="47.4839%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.58%)</title><rect x="47.3069%" y="165" width="0.5844%" height="15" fill="rgb(235,218,49)" fg:x="21615" fg:w="267"/><text x="47.5999%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.35%)</title><rect x="47.8913%" y="165" width="0.3524%" height="15" fill="rgb(217,114,14)" fg:x="21882" fg:w="161"/><text x="48.1842%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (724 instructions, 1.58%)</title><rect x="47.1909%" y="181" width="1.5846%" height="15" fill="rgb(216,145,22)" fg:x="21562" fg:w="724"/><text x="47.4839%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (974 instructions, 2.13%)</title><rect x="47.1800%" y="197" width="2.1317%" height="15" fill="rgb(217,112,39)" fg:x="21557" fg:w="974"/><text x="47.4729%" y="207.50">s..</text></g><g><title>candid::types::internal::env_add (1,000 instructions, 2.19%)</title><rect x="47.1800%" y="213" width="2.1886%" height="15" fill="rgb(225,85,32)" fg:x="21557" fg:w="1000"/><text x="47.4729%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="49.3686%" y="181" width="0.2057%" height="15" fill="rgb(245,209,47)" fg:x="22557" fg:w="94"/><text x="49.6616%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="49.3686%" y="197" width="0.2276%" height="15" fill="rgb(218,220,15)" fg:x="22557" fg:w="104"/><text x="49.6616%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="49.6028%" y="181" width="0.1970%" height="15" fill="rgb(222,202,31)" fg:x="22664" fg:w="90"/><text x="49.8957%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="49.6028%" y="197" width="0.2189%" height="15" fill="rgb(243,203,4)" fg:x="22664" fg:w="100"/><text x="49.8957%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="49.8282%" y="181" width="0.2057%" height="15" fill="rgb(237,92,17)" fg:x="22767" fg:w="94"/><text x="50.1212%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="49.8282%" y="197" width="0.2276%" height="15" fill="rgb(231,119,7)" fg:x="22767" fg:w="104"/><text x="50.1212%" y="207.50"></text></g><g><title>__rust_alloc (317 instructions, 0.69%)</title><rect x="49.3686%" y="213" width="0.6938%" height="15" fill="rgb(237,82,41)" fg:x="22557" fg:w="317"/><text x="49.6616%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.0624%" y="149" width="0.1160%" height="15" fill="rgb(226,81,48)" fg:x="22874" fg:w="53"/><text x="50.3553%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.67%)</title><rect x="50.1784%" y="149" width="0.6675%" height="15" fill="rgb(234,70,51)" fg:x="22927" fg:w="305"/><text x="50.4713%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.16%)</title><rect x="50.8459%" y="149" width="0.1598%" height="15" fill="rgb(251,86,4)" fg:x="23232" fg:w="73"/><text x="51.1389%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.48%)</title><rect x="50.0624%" y="165" width="1.4751%" height="15" fill="rgb(244,144,28)" fg:x="22874" fg:w="674"/><text x="50.3553%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (754 instructions, 1.65%)</title><rect x="50.0624%" y="181" width="1.6502%" height="15" fill="rgb(232,161,39)" fg:x="22874" fg:w="754"/><text x="50.3553%" y="191.50"></text></g><g><title>candid::types::internal::find_type (793 instructions, 1.74%)</title><rect x="50.0624%" y="197" width="1.7356%" height="15" fill="rgb(247,34,51)" fg:x="22874" fg:w="793"/><text x="50.3553%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="51.7979%" y="149" width="0.1970%" height="15" fill="rgb(225,132,2)" fg:x="23667" fg:w="90"/><text x="52.0909%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="51.7979%" y="165" width="0.2189%" height="15" fill="rgb(209,159,44)" fg:x="23667" fg:w="100"/><text x="52.0909%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="51.7979%" y="181" width="0.2254%" height="15" fill="rgb(251,214,1)" fg:x="23667" fg:w="103"/><text x="52.0909%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (149 instructions, 0.33%)</title><rect x="51.7979%" y="197" width="0.3261%" height="15" fill="rgb(247,84,47)" fg:x="23667" fg:w="149"/><text x="52.0909%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="52.1241%" y="165" width="0.0109%" height="15" fill="rgb(240,111,43)" fg:x="23816" fg:w="5"/><text x="52.4170%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="52.1350%" y="149" width="0.1160%" height="15" fill="rgb(215,214,35)" fg:x="23821" fg:w="53"/><text x="52.4280%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.67%)</title><rect x="52.2510%" y="149" width="0.6675%" height="15" fill="rgb(248,207,23)" fg:x="23874" fg:w="305"/><text x="52.5440%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.16%)</title><rect x="52.9185%" y="149" width="0.1598%" height="15" fill="rgb(214,186,4)" fg:x="24179" fg:w="73"/><text x="53.2115%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.48%)</title><rect x="52.1350%" y="165" width="1.4751%" height="15" fill="rgb(220,133,22)" fg:x="23821" fg:w="674"/><text x="52.4280%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (924 instructions, 2.02%)</title><rect x="52.1241%" y="181" width="2.0223%" height="15" fill="rgb(239,134,19)" fg:x="23816" fg:w="924"/><text x="52.4170%" y="191.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 2.08%)</title><rect x="52.1241%" y="197" width="2.0792%" height="15" fill="rgb(250,140,9)" fg:x="23816" fg:w="950"/><text x="52.4170%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="54.2032%" y="165" width="0.1970%" height="15" fill="rgb(225,59,14)" fg:x="24766" fg:w="90"/><text x="54.4962%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="54.2032%" y="181" width="0.2189%" height="15" fill="rgb(214,152,51)" fg:x="24766" fg:w="100"/><text x="54.4962%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="54.2032%" y="197" width="0.2254%" height="15" fill="rgb(251,227,43)" fg:x="24766" fg:w="103"/><text x="54.4962%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="54.4287%" y="165" width="0.0109%" height="15" fill="rgb(241,96,17)" fg:x="24869" fg:w="5"/><text x="54.7216%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="54.4396%" y="149" width="0.1160%" height="15" fill="rgb(234,198,43)" fg:x="24874" fg:w="53"/><text x="54.7326%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.67%)</title><rect x="54.5556%" y="149" width="0.6675%" height="15" fill="rgb(220,108,29)" fg:x="24927" fg:w="305"/><text x="54.8486%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.16%)</title><rect x="55.2231%" y="149" width="0.1598%" height="15" fill="rgb(226,163,33)" fg:x="25232" fg:w="73"/><text x="55.5161%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.48%)</title><rect x="54.4396%" y="165" width="1.4751%" height="15" fill="rgb(205,194,45)" fg:x="24874" fg:w="674"/><text x="54.7326%" y="175.50"></text></g><g><title>memcmp (446 instructions, 0.98%)</title><rect x="55.9147%" y="165" width="0.9761%" height="15" fill="rgb(206,143,44)" fg:x="25548" fg:w="446"/><text x="56.2077%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="56.8909%" y="149" width="0.1773%" height="15" fill="rgb(236,136,36)" fg:x="25994" fg:w="81"/><text x="57.1838%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.24%)</title><rect x="56.8909%" y="165" width="0.2429%" height="15" fill="rgb(249,172,42)" fg:x="25994" fg:w="111"/><text x="57.1838%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,410 instructions, 3.09%)</title><rect x="54.4287%" y="181" width="3.0859%" height="15" fill="rgb(216,139,23)" fg:x="24869" fg:w="1410"/><text x="54.7216%" y="191.50">st..</text></g><g><title>candid::types::internal::env_add (1,436 instructions, 3.14%)</title><rect x="54.4287%" y="197" width="3.1429%" height="15" fill="rgb(207,166,20)" fg:x="24869" fg:w="1436"/><text x="54.7216%" y="207.50">ca..</text></g><g><title>candid::types::internal::ID::__getit (5 instructions, 0.01%)</title><rect x="57.5715%" y="165" width="0.0109%" height="15" fill="rgb(210,209,22)" fg:x="26305" fg:w="5"/><text x="57.8645%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="57.5825%" y="133" width="0.1160%" height="15" fill="rgb(232,118,20)" fg:x="26310" fg:w="53"/><text x="57.8754%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="57.5825%" y="149" width="0.1707%" height="15" fill="rgb(238,113,42)" fg:x="26310" fg:w="78"/><text x="57.8754%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.66%)</title><rect x="57.5825%" y="165" width="0.6566%" height="15" fill="rgb(231,42,5)" fg:x="26310" fg:w="300"/><text x="57.8754%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="58.2390%" y="165" width="0.0328%" height="15" fill="rgb(243,166,24)" fg:x="26610" fg:w="15"/><text x="58.5320%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (27 instructions, 0.06%)</title><rect x="58.2719%" y="165" width="0.0591%" height="15" fill="rgb(237,226,12)" fg:x="26625" fg:w="27"/><text x="58.5648%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="58.3310%" y="165" width="0.0241%" height="15" fill="rgb(229,133,24)" fg:x="26652" fg:w="11"/><text x="58.6239%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (559 instructions, 1.22%)</title><rect x="57.5715%" y="181" width="1.2234%" height="15" fill="rgb(238,33,43)" fg:x="26305" fg:w="559"/><text x="57.8645%" y="191.50"></text></g><g><title>candid::types::internal::env_id (596 instructions, 1.30%)</title><rect x="57.5715%" y="197" width="1.3044%" height="15" fill="rgb(227,59,38)" fg:x="26305" fg:w="596"/><text x="57.8645%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (4,140 instructions, 9.06%)</title><rect x="50.0624%" y="213" width="9.0609%" height="15" fill="rgb(230,97,0)" fg:x="22874" fg:w="4140"/><text x="50.3553%" y="223.50">candid::typ..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="59.1232%" y="181" width="0.1970%" height="15" fill="rgb(250,173,50)" fg:x="27014" fg:w="90"/><text x="59.4162%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="59.1232%" y="197" width="0.2189%" height="15" fill="rgb(240,15,50)" fg:x="27014" fg:w="100"/><text x="59.4162%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="59.3487%" y="181" width="0.1970%" height="15" fill="rgb(221,93,22)" fg:x="27117" fg:w="90"/><text x="59.6416%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="59.3487%" y="197" width="0.2189%" height="15" fill="rgb(245,180,53)" fg:x="27117" fg:w="100"/><text x="59.6416%" y="207.50"></text></g><g><title>__rust_alloc (206 instructions, 0.45%)</title><rect x="59.1232%" y="213" width="0.4509%" height="15" fill="rgb(231,88,51)" fg:x="27014" fg:w="206"/><text x="59.4162%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="59.5741%" y="149" width="0.1160%" height="15" fill="rgb(240,58,21)" fg:x="27220" fg:w="53"/><text x="59.8671%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.19%)</title><rect x="59.6901%" y="149" width="0.1948%" height="15" fill="rgb(237,21,10)" fg:x="27273" fg:w="89"/><text x="59.9831%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.35%)</title><rect x="59.8849%" y="149" width="0.3524%" height="15" fill="rgb(218,43,11)" fg:x="27362" fg:w="161"/><text x="60.1778%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.19%)</title><rect x="59.5741%" y="165" width="1.1950%" height="15" fill="rgb(218,221,29)" fg:x="27220" fg:w="546"/><text x="59.8671%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (626 instructions, 1.37%)</title><rect x="59.5741%" y="181" width="1.3701%" height="15" fill="rgb(214,118,42)" fg:x="27220" fg:w="626"/><text x="59.8671%" y="191.50"></text></g><g><title>candid::types::internal::find_type (665 instructions, 1.46%)</title><rect x="59.5741%" y="197" width="1.4554%" height="15" fill="rgb(251,200,26)" fg:x="27220" fg:w="665"/><text x="59.8671%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="61.0295%" y="149" width="0.2057%" height="15" fill="rgb(237,101,39)" fg:x="27885" fg:w="94"/><text x="61.3225%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="61.0295%" y="165" width="0.2276%" height="15" fill="rgb(251,117,11)" fg:x="27885" fg:w="104"/><text x="61.3225%" y="175.50"></text></g><g><title>__rust_alloc (107 instructions, 0.23%)</title><rect x="61.0295%" y="181" width="0.2342%" height="15" fill="rgb(216,223,23)" fg:x="27885" fg:w="107"/><text x="61.3225%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (153 instructions, 0.33%)</title><rect x="61.0295%" y="197" width="0.3349%" height="15" fill="rgb(251,54,12)" fg:x="27885" fg:w="153"/><text x="61.3225%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="61.3644%" y="165" width="0.0109%" height="15" fill="rgb(254,176,54)" fg:x="28038" fg:w="5"/><text x="61.6574%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.3753%" y="149" width="0.1160%" height="15" fill="rgb(210,32,8)" fg:x="28043" fg:w="53"/><text x="61.6683%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.19%)</title><rect x="61.4913%" y="149" width="0.1948%" height="15" fill="rgb(235,52,38)" fg:x="28096" fg:w="89"/><text x="61.7843%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.35%)</title><rect x="61.6861%" y="149" width="0.3524%" height="15" fill="rgb(231,4,44)" fg:x="28185" fg:w="161"/><text x="61.9791%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.19%)</title><rect x="61.3753%" y="165" width="1.1950%" height="15" fill="rgb(249,2,32)" fg:x="28043" fg:w="546"/><text x="61.6683%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (796 instructions, 1.74%)</title><rect x="61.3644%" y="181" width="1.7421%" height="15" fill="rgb(224,65,26)" fg:x="28038" fg:w="796"/><text x="61.6574%" y="191.50"></text></g><g><title>candid::types::internal::env_add (822 instructions, 1.80%)</title><rect x="61.3644%" y="197" width="1.7990%" height="15" fill="rgb(250,73,40)" fg:x="28038" fg:w="822"/><text x="61.6574%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="63.1634%" y="165" width="0.1970%" height="15" fill="rgb(253,177,16)" fg:x="28860" fg:w="90"/><text x="63.4564%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="63.1634%" y="181" width="0.2189%" height="15" fill="rgb(217,32,34)" fg:x="28860" fg:w="100"/><text x="63.4564%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="63.1634%" y="197" width="0.2254%" height="15" fill="rgb(212,7,10)" fg:x="28860" fg:w="103"/><text x="63.4564%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="63.3889%" y="165" width="0.0109%" height="15" fill="rgb(245,89,8)" fg:x="28963" fg:w="5"/><text x="63.6818%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.3998%" y="149" width="0.1160%" height="15" fill="rgb(237,16,53)" fg:x="28968" fg:w="53"/><text x="63.6928%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.19%)</title><rect x="63.5158%" y="149" width="0.1948%" height="15" fill="rgb(250,204,30)" fg:x="29021" fg:w="89"/><text x="63.8088%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.35%)</title><rect x="63.7106%" y="149" width="0.3524%" height="15" fill="rgb(208,77,27)" fg:x="29110" fg:w="161"/><text x="64.0035%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (546 instructions, 1.19%)</title><rect x="63.3998%" y="165" width="1.1950%" height="15" fill="rgb(250,204,28)" fg:x="28968" fg:w="546"/><text x="63.6928%" y="175.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="64.5948%" y="165" width="0.1488%" height="15" fill="rgb(244,63,21)" fg:x="29514" fg:w="68"/><text x="64.8877%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="64.7436%" y="149" width="0.1773%" height="15" fill="rgb(236,85,44)" fg:x="29582" fg:w="81"/><text x="65.0366%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.24%)</title><rect x="64.7436%" y="165" width="0.2429%" height="15" fill="rgb(215,98,4)" fg:x="29582" fg:w="111"/><text x="65.0366%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (904 instructions, 1.98%)</title><rect x="63.3889%" y="181" width="1.9785%" height="15" fill="rgb(235,38,11)" fg:x="28963" fg:w="904"/><text x="63.6818%" y="191.50"></text></g><g><title>candid::types::internal::env_add (930 instructions, 2.04%)</title><rect x="63.3889%" y="197" width="2.0354%" height="15" fill="rgb(254,186,25)" fg:x="28963" fg:w="930"/><text x="63.6818%" y="207.50"></text></g><g><title>candid::types::internal::ID::__getit (5 instructions, 0.01%)</title><rect x="65.4243%" y="165" width="0.0109%" height="15" fill="rgb(225,55,31)" fg:x="29893" fg:w="5"/><text x="65.7172%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="65.4352%" y="133" width="0.1160%" height="15" fill="rgb(211,15,21)" fg:x="29898" fg:w="53"/><text x="65.7282%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="65.4352%" y="149" width="0.1707%" height="15" fill="rgb(215,187,41)" fg:x="29898" fg:w="78"/><text x="65.7282%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="66.0918%" y="133" width="0.1160%" height="15" fill="rgb(248,69,32)" fg:x="30198" fg:w="53"/><text x="66.3848%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="66.0918%" y="149" width="0.1707%" height="15" fill="rgb(252,102,52)" fg:x="30198" fg:w="78"/><text x="66.3848%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (600 instructions, 1.31%)</title><rect x="65.4352%" y="165" width="1.3132%" height="15" fill="rgb(253,140,32)" fg:x="29898" fg:w="600"/><text x="65.7282%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.20%)</title><rect x="66.7484%" y="117" width="0.2035%" height="15" fill="rgb(216,56,42)" fg:x="30498" fg:w="93"/><text x="67.0413%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.23%)</title><rect x="66.7484%" y="133" width="0.2254%" height="15" fill="rgb(216,184,14)" fg:x="30498" fg:w="103"/><text x="67.0413%" y="143.50"></text></g><g><title>__rust_alloc (106 instructions, 0.23%)</title><rect x="66.7484%" y="149" width="0.2320%" height="15" fill="rgb(237,187,27)" fg:x="30498" fg:w="106"/><text x="67.0413%" y="159.50"></text></g><g><title>memset (84 instructions, 0.18%)</title><rect x="66.9804%" y="149" width="0.1838%" height="15" fill="rgb(219,65,3)" fg:x="30604" fg:w="84"/><text x="67.2733%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (296 instructions, 0.65%)</title><rect x="66.7484%" y="165" width="0.6478%" height="15" fill="rgb(245,83,25)" fg:x="30498" fg:w="296"/><text x="67.0413%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.3962%" y="133" width="0.1160%" height="15" fill="rgb(214,205,45)" fg:x="30794" fg:w="53"/><text x="67.6892%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="67.3962%" y="149" width="0.1707%" height="15" fill="rgb(241,20,18)" fg:x="30794" fg:w="78"/><text x="67.6892%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.0528%" y="133" width="0.1160%" height="15" fill="rgb(232,163,23)" fg:x="31094" fg:w="53"/><text x="68.3458%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="68.0528%" y="149" width="0.1707%" height="15" fill="rgb(214,5,46)" fg:x="31094" fg:w="78"/><text x="68.3458%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.7094%" y="133" width="0.1160%" height="15" fill="rgb(229,78,17)" fg:x="31394" fg:w="53"/><text x="69.0023%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.33%)</title><rect x="68.8254%" y="133" width="0.3349%" height="15" fill="rgb(248,89,10)" fg:x="31447" fg:w="153"/><text x="69.1183%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.1602%" y="117" width="0.1160%" height="15" fill="rgb(248,54,15)" fg:x="31600" fg:w="53"/><text x="69.4532%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.17%)</title><rect x="69.1602%" y="133" width="0.1707%" height="15" fill="rgb(223,116,6)" fg:x="31600" fg:w="78"/><text x="69.4532%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.77%)</title><rect x="68.7094%" y="149" width="0.7704%" height="15" fill="rgb(205,125,38)" fg:x="31394" fg:w="352"/><text x="69.0023%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,174 instructions, 2.57%)</title><rect x="67.3962%" y="165" width="2.5694%" height="15" fill="rgb(251,78,38)" fg:x="30794" fg:w="1174"/><text x="67.6892%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="69.9656%" y="165" width="0.1773%" height="15" fill="rgb(253,78,28)" fg:x="31968" fg:w="81"/><text x="70.2586%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,994 instructions, 6.55%)</title><rect x="65.4243%" y="181" width="6.5527%" height="15" fill="rgb(209,120,3)" fg:x="29893" fg:w="2994"/><text x="65.7172%" y="191.50">std::th..</text></g><g><title>candid::types::internal::env_id (3,031 instructions, 6.63%)</title><rect x="65.4243%" y="197" width="6.6337%" height="15" fill="rgb(238,229,9)" fg:x="29893" fg:w="3031"/><text x="65.7172%" y="207.50">candid:..</text></g><g><title>candid::types::CandidType::ty (5,817 instructions, 12.73%)</title><rect x="59.5741%" y="213" width="12.7312%" height="15" fill="rgb(253,159,18)" fg:x="27220" fg:w="5817"/><text x="59.8671%" y="223.50">candid::types::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.21%)</title><rect x="72.3053%" y="165" width="0.2057%" height="15" fill="rgb(244,42,34)" fg:x="33037" fg:w="94"/><text x="72.5982%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.23%)</title><rect x="72.3053%" y="181" width="0.2276%" height="15" fill="rgb(224,8,7)" fg:x="33037" fg:w="104"/><text x="72.5982%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.23%)</title><rect x="72.3053%" y="197" width="0.2342%" height="15" fill="rgb(210,201,45)" fg:x="33037" fg:w="107"/><text x="72.5982%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (153 instructions, 0.33%)</title><rect x="72.3053%" y="213" width="0.3349%" height="15" fill="rgb(252,185,21)" fg:x="33037" fg:w="153"/><text x="72.5982%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.6401%" y="181" width="0.0109%" height="15" fill="rgb(223,131,1)" fg:x="33190" fg:w="5"/><text x="72.9331%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="72.6511%" y="165" width="0.1160%" height="15" fill="rgb(245,141,16)" fg:x="33195" fg:w="53"/><text x="72.9440%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (267 instructions, 0.58%)</title><rect x="72.7671%" y="165" width="0.5844%" height="15" fill="rgb(229,55,45)" fg:x="33248" fg:w="267"/><text x="73.0600%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.35%)</title><rect x="73.3514%" y="165" width="0.3524%" height="15" fill="rgb(208,92,15)" fg:x="33515" fg:w="161"/><text x="73.6444%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (724 instructions, 1.58%)</title><rect x="72.6511%" y="181" width="1.5846%" height="15" fill="rgb(234,185,47)" fg:x="33195" fg:w="724"/><text x="72.9440%" y="191.50"></text></g><g><title>memcmp (404 instructions, 0.88%)</title><rect x="74.2356%" y="181" width="0.8842%" height="15" fill="rgb(253,104,50)" fg:x="33919" fg:w="404"/><text x="74.5286%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="75.1198%" y="165" width="0.2780%" height="15" fill="rgb(205,70,7)" fg:x="34323" fg:w="127"/><text x="75.4128%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (157 instructions, 0.34%)</title><rect x="75.1198%" y="181" width="0.3436%" height="15" fill="rgb(240,178,43)" fg:x="34323" fg:w="157"/><text x="75.4128%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,464 instructions, 3.20%)</title><rect x="72.6401%" y="197" width="3.2041%" height="15" fill="rgb(214,112,2)" fg:x="33190" fg:w="1464"/><text x="72.9331%" y="207.50">st..</text></g><g><title>candid::types::internal::env_add (1,490 instructions, 3.26%)</title><rect x="72.6401%" y="213" width="3.2610%" height="15" fill="rgb(206,46,17)" fg:x="33190" fg:w="1490"/><text x="72.9331%" y="223.50">ca..</text></g><g><title>candid::types::internal::ID::__getit (5 instructions, 0.01%)</title><rect x="75.9012%" y="181" width="0.0109%" height="15" fill="rgb(225,220,16)" fg:x="34680" fg:w="5"/><text x="76.1941%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="75.9121%" y="149" width="0.1160%" height="15" fill="rgb(238,65,40)" fg:x="34685" fg:w="53"/><text x="76.2051%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.33%)</title><rect x="76.0281%" y="149" width="0.3349%" height="15" fill="rgb(230,151,21)" fg:x="34738" fg:w="153"/><text x="76.3211%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.3630%" y="133" width="0.1160%" height="15" fill="rgb(218,58,49)" fg:x="34891" fg:w="53"/><text x="76.6559%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.33%)</title><rect x="76.5337%" y="133" width="0.3349%" height="15" fill="rgb(219,179,14)" fg:x="34969" fg:w="153"/><text x="76.8266%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (256 instructions, 0.56%)</title><rect x="76.3630%" y="149" width="0.5603%" height="15" fill="rgb(223,72,1)" fg:x="34891" fg:w="256"/><text x="76.6559%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.19%)</title><rect x="75.9121%" y="165" width="1.1928%" height="15" fill="rgb(238,126,10)" fg:x="34685" fg:w="545"/><text x="76.2051%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.5908%" y="149" width="0.1160%" height="15" fill="rgb(224,206,38)" fg:x="35452" fg:w="53"/><text x="77.8837%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.33%)</title><rect x="77.7068%" y="149" width="0.3349%" height="15" fill="rgb(212,201,54)" fg:x="35505" fg:w="153"/><text x="77.9997%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.0416%" y="133" width="0.1160%" height="15" fill="rgb(218,154,48)" fg:x="35658" fg:w="53"/><text x="78.3346%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.33%)</title><rect x="78.2123%" y="133" width="0.3349%" height="15" fill="rgb(232,93,24)" fg:x="35736" fg:w="153"/><text x="78.5053%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (256 instructions, 0.56%)</title><rect x="78.0416%" y="149" width="0.5603%" height="15" fill="rgb(245,30,21)" fg:x="35658" fg:w="256"/><text x="78.3346%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.19%)</title><rect x="77.5908%" y="165" width="1.1928%" height="15" fill="rgb(242,148,29)" fg:x="35452" fg:w="545"/><text x="77.8837%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,534 instructions, 3.36%)</title><rect x="75.9121%" y="181" width="3.3573%" height="15" fill="rgb(244,153,54)" fg:x="34685" fg:w="1534"/><text x="76.2051%" y="191.50">co..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,907 instructions, 4.17%)</title><rect x="75.9012%" y="197" width="4.1737%" height="15" fill="rgb(252,87,22)" fg:x="34680" fg:w="1907"/><text x="76.1941%" y="207.50">std:..</text></g><g><title>candid::types::internal::env_id (1,944 instructions, 4.25%)</title><rect x="75.9012%" y="213" width="4.2547%" height="15" fill="rgb(210,51,29)" fg:x="34680" fg:w="1944"/><text x="76.1941%" y="223.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (46 instructions, 0.10%)</title><rect x="80.1558%" y="213" width="0.1007%" height="15" fill="rgb(242,136,47)" fg:x="36624" fg:w="46"/><text x="80.4488%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="80.2565%" y="197" width="0.1773%" height="15" fill="rgb(238,68,4)" fg:x="36670" fg:w="81"/><text x="80.5495%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.27%)</title><rect x="80.4994%" y="197" width="0.2692%" height="15" fill="rgb(242,161,30)" fg:x="36781" fg:w="123"/><text x="80.7924%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (264 instructions, 0.58%)</title><rect x="80.2565%" y="213" width="0.5778%" height="15" fill="rgb(218,58,44)" fg:x="36670" fg:w="264"/><text x="80.5495%" y="223.50"></text></g><g><title>memcmp (131 instructions, 0.29%)</title><rect x="80.8343%" y="165" width="0.2867%" height="15" fill="rgb(252,125,32)" fg:x="36934" fg:w="131"/><text x="81.1273%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (282 instructions, 0.62%)</title><rect x="80.8343%" y="181" width="0.6172%" height="15" fill="rgb(219,178,0)" fg:x="36934" fg:w="282"/><text x="81.1273%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.4515%" y="181" width="0.0241%" height="15" fill="rgb(213,152,7)" fg:x="37216" fg:w="11"/><text x="81.7445%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (345 instructions, 0.76%)</title><rect x="80.8343%" y="197" width="0.7551%" height="15" fill="rgb(249,109,34)" fg:x="36934" fg:w="345"/><text x="81.1273%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="81.5894%" y="149" width="0.1970%" height="15" fill="rgb(232,96,21)" fg:x="37279" fg:w="90"/><text x="81.8823%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="81.5894%" y="165" width="0.2189%" height="15" fill="rgb(228,27,39)" fg:x="37279" fg:w="100"/><text x="81.8823%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="81.5894%" y="181" width="0.2254%" height="15" fill="rgb(211,182,52)" fg:x="37279" fg:w="103"/><text x="81.8823%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.19%)</title><rect x="82.1715%" y="149" width="0.1948%" height="15" fill="rgb(234,178,38)" fg:x="37545" fg:w="89"/><text x="82.4645%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.22%)</title><rect x="82.1715%" y="165" width="0.2167%" height="15" fill="rgb(221,111,3)" fg:x="37545" fg:w="99"/><text x="82.4645%" y="175.50"></text></g><g><title>__rust_alloc (102 instructions, 0.22%)</title><rect x="82.1715%" y="181" width="0.2232%" height="15" fill="rgb(228,175,21)" fg:x="37545" fg:w="102"/><text x="82.4645%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (531 instructions, 1.16%)</title><rect x="81.5894%" y="197" width="1.1622%" height="15" fill="rgb(228,174,43)" fg:x="37279" fg:w="531"/><text x="81.8823%" y="207.50"></text></g><g><title>candid::de::Compound::new (39 instructions, 0.09%)</title><rect x="82.7515%" y="197" width="0.0854%" height="15" fill="rgb(211,191,0)" fg:x="37810" fg:w="39"/><text x="83.0445%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (112 instructions, 0.25%)</title><rect x="82.8369%" y="197" width="0.2451%" height="15" fill="rgb(253,117,3)" fg:x="37849" fg:w="112"/><text x="83.1299%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (8 instructions, 0.02%)</title><rect x="83.0820%" y="197" width="0.0175%" height="15" fill="rgb(241,127,19)" fg:x="37961" fg:w="8"/><text x="83.3750%" y="207.50"></text></g><g><title>candid::de::Deserializer::set_field_name (8 instructions, 0.02%)</title><rect x="83.0995%" y="197" width="0.0175%" height="15" fill="rgb(218,103,12)" fg:x="37969" fg:w="8"/><text x="83.3925%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.1170%" y="197" width="0.0241%" height="15" fill="rgb(236,214,43)" fg:x="37977" fg:w="11"/><text x="83.4100%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.1411%" y="197" width="0.0241%" height="15" fill="rgb(244,144,19)" fg:x="37988" fg:w="11"/><text x="83.4341%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.30%)</title><rect x="83.1652%" y="133" width="0.2977%" height="15" fill="rgb(246,188,10)" fg:x="37999" fg:w="136"/><text x="83.4581%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.32%)</title><rect x="83.1652%" y="149" width="0.3195%" height="15" fill="rgb(212,193,33)" fg:x="37999" fg:w="146"/><text x="83.4581%" y="159.50"></text></g><g><title>__rust_alloc (149 instructions, 0.33%)</title><rect x="83.1652%" y="165" width="0.3261%" height="15" fill="rgb(241,51,29)" fg:x="37999" fg:w="149"/><text x="83.4581%" y="175.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.4913%" y="165" width="0.1970%" height="15" fill="rgb(211,58,19)" fg:x="38148" fg:w="90"/><text x="83.7842%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (276 instructions, 0.60%)</title><rect x="83.1652%" y="181" width="0.6041%" height="15" fill="rgb(229,111,26)" fg:x="37999" fg:w="276"/><text x="83.4581%" y="191.50"></text></g><g><title>memcmp (110 instructions, 0.24%)</title><rect x="83.7692%" y="181" width="0.2407%" height="15" fill="rgb(213,115,40)" fg:x="38275" fg:w="110"/><text x="84.0622%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="84.0100%" y="181" width="0.1182%" height="15" fill="rgb(209,56,44)" fg:x="38385" fg:w="54"/><text x="84.3029%" y="191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (509 instructions, 1.11%)</title><rect x="83.1652%" y="197" width="1.1140%" height="15" fill="rgb(230,108,32)" fg:x="37999" fg:w="509"/><text x="83.4581%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.2792%" y="181" width="0.0613%" height="15" fill="rgb(216,165,31)" fg:x="38508" fg:w="28"/><text x="84.5721%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="84.3405%" y="181" width="0.0350%" height="15" fill="rgb(218,122,21)" fg:x="38536" fg:w="16"/><text x="84.6334%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="84.3755%" y="181" width="0.0350%" height="15" fill="rgb(223,224,47)" fg:x="38552" fg:w="16"/><text x="84.6684%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.13%)</title><rect x="84.4105%" y="165" width="0.1335%" height="15" fill="rgb(238,102,44)" fg:x="38568" fg:w="61"/><text x="84.7035%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.21%)</title><rect x="84.5440%" y="165" width="0.2123%" height="15" fill="rgb(236,46,40)" fg:x="38629" fg:w="97"/><text x="84.8370%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.12%)</title><rect x="84.7563%" y="165" width="0.1226%" height="15" fill="rgb(247,202,50)" fg:x="38726" fg:w="56"/><text x="85.0493%" y="175.50"></text></g><g><title>binread::BinRead::read (258 instructions, 0.56%)</title><rect x="84.4105%" y="181" width="0.5647%" height="15" fill="rgb(209,99,20)" fg:x="38568" fg:w="258"/><text x="84.7035%" y="191.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (53 instructions, 0.12%)</title><rect x="84.9752%" y="181" width="0.1160%" height="15" fill="rgb(252,27,34)" fg:x="38826" fg:w="53"/><text x="85.2681%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="85.0912%" y="149" width="0.1970%" height="15" fill="rgb(215,206,23)" fg:x="38879" fg:w="90"/><text x="85.3841%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="85.0912%" y="165" width="0.2189%" height="15" fill="rgb(212,135,36)" fg:x="38879" fg:w="100"/><text x="85.3841%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="85.0912%" y="181" width="0.2254%" height="15" fill="rgb(240,189,1)" fg:x="38879" fg:w="103"/><text x="85.3841%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.23%)</title><rect x="85.3166%" y="181" width="0.2298%" height="15" fill="rgb(242,56,20)" fg:x="38982" fg:w="105"/><text x="85.6096%" y="191.50"></text></g><g><title>core::str::converts::from_utf8 (149 instructions, 0.33%)</title><rect x="85.5464%" y="181" width="0.3261%" height="15" fill="rgb(247,132,33)" fg:x="39087" fg:w="149"/><text x="85.8394%" y="191.50"></text></g><g><title>&lt;&amp;mut candid::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (862 instructions, 1.89%)</title><rect x="84.2792%" y="197" width="1.8866%" height="15" fill="rgb(208,149,11)" fg:x="38508" fg:w="862"/><text x="84.5721%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (112 instructions, 0.25%)</title><rect x="86.1658%" y="197" width="0.2451%" height="15" fill="rgb(211,33,11)" fg:x="39370" fg:w="112"/><text x="86.4587%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (8 instructions, 0.02%)</title><rect x="86.4109%" y="197" width="0.0175%" height="15" fill="rgb(221,29,38)" fg:x="39482" fg:w="8"/><text x="86.7039%" y="207.50"></text></g><g><title>candid::de::Deserializer::set_field_name (8 instructions, 0.02%)</title><rect x="86.4284%" y="197" width="0.0175%" height="15" fill="rgb(206,182,49)" fg:x="39490" fg:w="8"/><text x="86.7214%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.4459%" y="197" width="0.0241%" height="15" fill="rgb(216,140,1)" fg:x="39498" fg:w="11"/><text x="86.7389%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.4700%" y="197" width="0.0241%" height="15" fill="rgb(232,57,40)" fg:x="39509" fg:w="11"/><text x="86.7630%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="86.4941%" y="133" width="0.1970%" height="15" fill="rgb(224,186,18)" fg:x="39520" fg:w="90"/><text x="86.7870%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="86.4941%" y="149" width="0.2189%" height="15" fill="rgb(215,121,11)" fg:x="39520" fg:w="100"/><text x="86.7870%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="86.4941%" y="165" width="0.2254%" height="15" fill="rgb(245,147,10)" fg:x="39520" fg:w="103"/><text x="86.7870%" y="175.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.7195%" y="165" width="0.1970%" height="15" fill="rgb(238,153,13)" fg:x="39623" fg:w="90"/><text x="87.0125%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (230 instructions, 0.50%)</title><rect x="86.4941%" y="181" width="0.5034%" height="15" fill="rgb(233,108,0)" fg:x="39520" fg:w="230"/><text x="86.7870%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.9974%" y="181" width="0.0350%" height="15" fill="rgb(212,157,17)" fg:x="39750" fg:w="16"/><text x="87.2904%" y="191.50"></text></g><g><title>memcmp (110 instructions, 0.24%)</title><rect x="87.0325%" y="181" width="0.2407%" height="15" fill="rgb(225,213,38)" fg:x="39766" fg:w="110"/><text x="87.3254%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="87.2732%" y="181" width="0.1182%" height="15" fill="rgb(248,16,11)" fg:x="39876" fg:w="54"/><text x="87.5662%" y="191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (489 instructions, 1.07%)</title><rect x="86.4941%" y="197" width="1.0702%" height="15" fill="rgb(241,33,4)" fg:x="39520" fg:w="489"/><text x="86.7870%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.5643%" y="197" width="0.0613%" height="15" fill="rgb(222,26,43)" fg:x="40009" fg:w="28"/><text x="87.8573%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="87.6256%" y="197" width="0.0350%" height="15" fill="rgb(243,29,36)" fg:x="40037" fg:w="16"/><text x="87.9185%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="87.6606%" y="197" width="0.0350%" height="15" fill="rgb(241,9,27)" fg:x="40053" fg:w="16"/><text x="87.9536%" y="207.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.6956%" y="181" width="0.0109%" height="15" fill="rgb(205,117,26)" fg:x="40069" fg:w="5"/><text x="87.9886%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.7066%" y="181" width="0.1773%" height="15" fill="rgb(209,80,39)" fg:x="40074" fg:w="81"/><text x="87.9995%" y="191.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.8838%" y="181" width="0.0109%" height="15" fill="rgb(239,155,6)" fg:x="40155" fg:w="5"/><text x="88.1768%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="87.8948%" y="181" width="0.2780%" height="15" fill="rgb(212,104,12)" fg:x="40160" fg:w="127"/><text x="88.1877%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (247 instructions, 0.54%)</title><rect x="87.6956%" y="197" width="0.5406%" height="15" fill="rgb(234,204,3)" fg:x="40069" fg:w="247"/><text x="87.9886%" y="207.50"></text></g><g><title>&lt;&amp;mut candid::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (4,169 instructions, 9.12%)</title><rect x="80.8343%" y="213" width="9.1243%" height="15" fill="rgb(251,218,7)" fg:x="36934" fg:w="4169"/><text x="81.1273%" y="223.50">&lt;&amp;mut candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="89.9586%" y="197" width="0.1773%" height="15" fill="rgb(221,81,32)" fg:x="41103" fg:w="81"/><text x="90.2516%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="90.1359%" y="197" width="0.2780%" height="15" fill="rgb(214,152,26)" fg:x="41184" fg:w="127"/><text x="90.4289%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.55%)</title><rect x="89.9586%" y="213" width="0.5472%" height="15" fill="rgb(223,22,3)" fg:x="41103" fg:w="250"/><text x="90.2516%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.5058%" y="213" width="0.0241%" height="15" fill="rgb(207,174,7)" fg:x="41353" fg:w="11"/><text x="90.7988%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.5299%" y="213" width="0.0241%" height="15" fill="rgb(224,19,52)" fg:x="41364" fg:w="11"/><text x="90.8228%" y="223.50"></text></g><g><title>memcpy (411 instructions, 0.90%)</title><rect x="90.5539%" y="213" width="0.8995%" height="15" fill="rgb(228,24,14)" fg:x="41375" fg:w="411"/><text x="90.8469%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.4535%" y="181" width="0.1773%" height="15" fill="rgb(230,153,43)" fg:x="41786" fg:w="81"/><text x="91.7464%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.6307%" y="165" width="0.1773%" height="15" fill="rgb(231,106,12)" fg:x="41867" fg:w="81"/><text x="91.9237%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.8080%" y="149" width="0.1773%" height="15" fill="rgb(215,92,2)" fg:x="41948" fg:w="81"/><text x="92.1010%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.24%)</title><rect x="91.8080%" y="165" width="0.2429%" height="15" fill="rgb(249,143,25)" fg:x="41948" fg:w="111"/><text x="92.1010%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="92.0510%" y="165" width="0.2780%" height="15" fill="rgb(252,7,35)" fg:x="42059" fg:w="127"/><text x="92.3439%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.3289%" y="165" width="0.0241%" height="15" fill="rgb(216,69,40)" fg:x="42186" fg:w="11"/><text x="92.6219%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.28%)</title><rect x="92.3530%" y="165" width="0.2780%" height="15" fill="rgb(240,36,33)" fg:x="42197" fg:w="127"/><text x="92.6459%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.26%)</title><rect x="92.6309%" y="165" width="0.2626%" height="15" fill="rgb(231,128,14)" fg:x="42324" fg:w="120"/><text x="92.9239%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (714 instructions, 1.56%)</title><rect x="91.6307%" y="181" width="1.5627%" height="15" fill="rgb(245,143,14)" fg:x="41867" fg:w="714"/><text x="91.9237%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.16%)</title><rect x="93.1934%" y="165" width="0.1554%" height="15" fill="rgb(222,130,28)" fg:x="42581" fg:w="71"/><text x="93.4864%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (213 instructions, 0.47%)</title><rect x="93.1934%" y="181" width="0.4662%" height="15" fill="rgb(212,10,48)" fg:x="42581" fg:w="213"/><text x="93.4864%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,136 instructions, 2.49%)</title><rect x="91.4535%" y="197" width="2.4863%" height="15" fill="rgb(254,118,45)" fg:x="41786" fg:w="1136"/><text x="91.7464%" y="207.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.9397%" y="197" width="0.1773%" height="15" fill="rgb(228,6,45)" fg:x="42922" fg:w="81"/><text x="94.2327%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="94.1170%" y="165" width="0.1182%" height="15" fill="rgb(241,18,35)" fg:x="43003" fg:w="54"/><text x="94.4100%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.16%)</title><rect x="94.2352%" y="165" width="0.1554%" height="15" fill="rgb(227,214,53)" fg:x="43057" fg:w="71"/><text x="94.5282%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (251 instructions, 0.55%)</title><rect x="94.1170%" y="181" width="0.5493%" height="15" fill="rgb(224,107,51)" fg:x="43003" fg:w="251"/><text x="94.4100%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (281 instructions, 0.62%)</title><rect x="94.1170%" y="197" width="0.6150%" height="15" fill="rgb(248,60,28)" fg:x="43003" fg:w="281"/><text x="94.4100%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.7320%" y="197" width="0.0241%" height="15" fill="rgb(249,101,23)" fg:x="43284" fg:w="11"/><text x="95.0250%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.7561%" y="197" width="0.0109%" height="15" fill="rgb(228,51,19)" fg:x="43295" fg:w="5"/><text x="95.0490%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (1,628 instructions, 3.56%)</title><rect x="91.4535%" y="213" width="3.5631%" height="15" fill="rgb(213,20,6)" fg:x="41786" fg:w="1628"/><text x="91.7464%" y="223.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.27%)</title><rect x="95.0165%" y="213" width="0.2692%" height="15" fill="rgb(212,124,10)" fg:x="43414" fg:w="123"/><text x="95.3095%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data (43,895 instructions, 96.07%)</title><rect x="0.4749%" y="229" width="96.0692%" height="15" fill="rgb(248,3,40)" fg:x="217" fg:w="43895"/><text x="0.7679%" y="239.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.22%)</title><rect x="96.5442%" y="229" width="0.2189%" height="15" fill="rgb(223,178,23)" fg:x="44112" fg:w="100"/><text x="96.8371%" y="239.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="96.7630%" y="197" width="0.0109%" height="15" fill="rgb(240,132,45)" fg:x="44212" fg:w="5"/><text x="97.0560%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.7740%" y="197" width="0.0241%" height="15" fill="rgb(245,164,36)" fg:x="44217" fg:w="11"/><text x="97.0670%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.7981%" y="197" width="0.0241%" height="15" fill="rgb(231,188,53)" fg:x="44228" fg:w="11"/><text x="97.0910%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.8221%" y="197" width="0.0241%" height="15" fill="rgb(237,198,39)" fg:x="44239" fg:w="11"/><text x="97.1151%" y="207.50"></text></g><g><title>memset (136 instructions, 0.30%)</title><rect x="96.8462%" y="197" width="0.2977%" height="15" fill="rgb(223,120,35)" fg:x="44250" fg:w="136"/><text x="97.1392%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (383 instructions, 0.84%)</title><rect x="96.7630%" y="213" width="0.8382%" height="15" fill="rgb(253,107,49)" fg:x="44212" fg:w="383"/><text x="97.0560%" y="223.50"></text></g><g><title>std::io::Write::write_all (78 instructions, 0.17%)</title><rect x="97.6013%" y="197" width="0.1707%" height="15" fill="rgb(216,44,31)" fg:x="44595" fg:w="78"/><text x="97.8942%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.20%)</title><rect x="97.7720%" y="117" width="0.1970%" height="15" fill="rgb(253,87,21)" fg:x="44673" fg:w="90"/><text x="98.0650%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.22%)</title><rect x="97.7720%" y="133" width="0.2189%" height="15" fill="rgb(226,18,2)" fg:x="44673" fg:w="100"/><text x="98.0650%" y="143.50"></text></g><g><title>__rust_alloc (103 instructions, 0.23%)</title><rect x="97.7720%" y="149" width="0.2254%" height="15" fill="rgb(216,8,46)" fg:x="44673" fg:w="103"/><text x="98.0650%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.29%)</title><rect x="97.7720%" y="165" width="0.2911%" height="15" fill="rgb(226,140,39)" fg:x="44673" fg:w="133"/><text x="98.0650%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (198 instructions, 0.43%)</title><rect x="97.7720%" y="181" width="0.4333%" height="15" fill="rgb(221,194,54)" fg:x="44673" fg:w="198"/><text x="98.0650%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="98.2053%" y="181" width="0.0241%" height="15" fill="rgb(213,92,11)" fg:x="44871" fg:w="11"/><text x="98.4983%" y="191.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="98.2294%" y="181" width="0.0241%" height="15" fill="rgb(229,162,46)" fg:x="44882" fg:w="11"/><text x="98.5224%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (422 instructions, 0.92%)</title><rect x="97.7720%" y="197" width="0.9236%" height="15" fill="rgb(214,111,36)" fg:x="44673" fg:w="422"/><text x="98.0650%" y="207.50"></text></g><g><title>std::io::Write::write_all (76 instructions, 0.17%)</title><rect x="98.6956%" y="197" width="0.1663%" height="15" fill="rgb(207,6,21)" fg:x="45095" fg:w="76"/><text x="98.9886%" y="207.50"></text></g><g><title>std::io::Write::write_all (14 instructions, 0.03%)</title><rect x="98.8619%" y="197" width="0.0306%" height="15" fill="rgb(213,127,38)" fg:x="45171" fg:w="14"/><text x="99.1549%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (670 instructions, 1.47%)</title><rect x="97.6013%" y="213" width="1.4664%" height="15" fill="rgb(238,118,32)" fg:x="44595" fg:w="670"/><text x="97.8942%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="99.0677%" y="213" width="0.0109%" height="15" fill="rgb(240,139,39)" fg:x="45265" fg:w="5"/><text x="99.3606%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.12%)</title><rect x="99.0786%" y="213" width="0.1182%" height="15" fill="rgb(235,10,37)" fg:x="45270" fg:w="54"/><text x="99.3716%" y="223.50"></text></g><g><title>candid::utils::write_args (1,176 instructions, 2.57%)</title><rect x="96.7630%" y="229" width="2.5738%" height="15" fill="rgb(249,171,38)" fg:x="44212" fg:w="1176"/><text x="97.0560%" y="239.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3368%" y="229" width="0.1773%" height="15" fill="rgb(242,144,32)" fg:x="45388" fg:w="81"/><text x="99.6298%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.27%)</title><rect x="99.5141%" y="229" width="0.2692%" height="15" fill="rgb(217,117,21)" fg:x="45469" fg:w="123"/><text x="99.8071%" y="239.50"></text></g><g><title>all (45,691 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(249,87,1)" fg:x="0" fg:w="45691"/><text x="0.2930%" y="271.50"></text></g><g><title>canister_update update_count (45,691 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(248,196,48)" fg:x="0" fg:w="45691"/><text x="0.2930%" y="255.50">canister_update update_count</text></g></svg></svg>