<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="44359"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0428%" height="15" fill="rgb(233,48,2)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0428%" y="197" width="0.1758%" height="15" fill="rgb(244,165,34)" fg:x="19" fg:w="78"/><text x="0.3358%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2187%" y="197" width="0.1713%" height="15" fill="rgb(207,89,7)" fg:x="97" fg:w="76"/><text x="0.5116%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3900%" y="181" width="0.1713%" height="15" fill="rgb(244,117,36)" fg:x="173" fg:w="76"/><text x="0.6830%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5613%" y="165" width="0.1555%" height="15" fill="rgb(226,144,34)" fg:x="249" fg:w="69"/><text x="0.8543%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="0.7169%" y="165" width="0.9153%" height="15" fill="rgb(213,23,19)" fg:x="318" fg:w="406"/><text x="1.0098%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="1.6321%" y="165" width="0.1849%" height="15" fill="rgb(217,75,12)" fg:x="724" fg:w="82"/><text x="1.9251%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8170%" y="165" width="0.1217%" height="15" fill="rgb(224,159,17)" fg:x="806" fg:w="54"/><text x="2.1100%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9387%" y="165" width="0.1217%" height="15" fill="rgb(217,118,1)" fg:x="860" fg:w="54"/><text x="2.2317%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0605%" y="165" width="0.1217%" height="15" fill="rgb(232,180,48)" fg:x="914" fg:w="54"/><text x="2.3534%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1822%" y="165" width="0.1217%" height="15" fill="rgb(230,27,33)" fg:x="968" fg:w="54"/><text x="2.4752%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.3039%" y="165" width="0.1555%" height="15" fill="rgb(205,31,21)" fg:x="1022" fg:w="69"/><text x="2.5969%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4595%" y="165" width="0.1465%" height="15" fill="rgb(253,59,4)" fg:x="1091" fg:w="65"/><text x="2.7524%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="2.6060%" y="165" width="0.9153%" height="15" fill="rgb(224,201,9)" fg:x="1156" fg:w="406"/><text x="2.8990%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5213%" y="165" width="0.0361%" height="15" fill="rgb(229,206,30)" fg:x="1562" fg:w="16"/><text x="3.8142%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="3.5573%" y="149" width="0.1601%" height="15" fill="rgb(212,67,47)" fg:x="1578" fg:w="71"/><text x="3.8503%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7174%" y="117" width="0.1353%" height="15" fill="rgb(211,96,50)" fg:x="1649" fg:w="60"/><text x="4.0104%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7174%" y="133" width="0.1916%" height="15" fill="rgb(252,114,18)" fg:x="1649" fg:w="85"/><text x="4.0104%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9090%" y="85" width="0.0203%" height="15" fill="rgb(223,58,37)" fg:x="1734" fg:w="9"/><text x="4.2020%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9293%" y="69" width="0.0676%" height="15" fill="rgb(237,70,4)" fg:x="1743" fg:w="30"/><text x="4.2223%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9293%" y="85" width="0.1240%" height="15" fill="rgb(244,85,46)" fg:x="1743" fg:w="55"/><text x="4.2223%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="3.9090%" y="101" width="0.2660%" height="15" fill="rgb(223,39,52)" fg:x="1734" fg:w="118"/><text x="4.2020%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="3.9090%" y="117" width="0.3855%" height="15" fill="rgb(218,200,14)" fg:x="1734" fg:w="171"/><text x="4.2020%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="3.9090%" y="133" width="0.3968%" height="15" fill="rgb(208,171,16)" fg:x="1734" fg:w="176"/><text x="4.2020%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="3.7174%" y="149" width="0.8386%" height="15" fill="rgb(234,200,18)" fg:x="1649" fg:w="372"/><text x="4.0104%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.32%)</title><rect x="3.5573%" y="165" width="1.3165%" height="15" fill="rgb(228,45,11)" fg:x="1578" fg:w="584"/><text x="3.8503%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="4.8739%" y="165" width="0.1849%" height="15" fill="rgb(237,182,11)" fg:x="2162" fg:w="82"/><text x="5.1668%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="5.0587%" y="165" width="0.1826%" height="15" fill="rgb(241,175,49)" fg:x="2244" fg:w="81"/><text x="5.3517%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.2413%" y="149" width="0.1217%" height="15" fill="rgb(247,38,35)" fg:x="2325" fg:w="54"/><text x="5.5343%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="5.3631%" y="149" width="0.1758%" height="15" fill="rgb(228,39,49)" fg:x="2379" fg:w="78"/><text x="5.6560%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="5.5389%" y="133" width="0.2660%" height="15" fill="rgb(226,101,26)" fg:x="2457" fg:w="118"/><text x="5.8319%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="5.8049%" y="101" width="0.2705%" height="15" fill="rgb(206,141,19)" fg:x="2575" fg:w="120"/><text x="6.0979%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="5.8049%" y="117" width="0.3269%" height="15" fill="rgb(211,200,13)" fg:x="2575" fg:w="145"/><text x="6.0979%" y="127.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="6.1318%" y="37" width="0.2277%" height="15" fill="rgb(241,121,6)" fg:x="2720" fg:w="101"/><text x="6.4248%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="6.1318%" y="53" width="0.3066%" height="15" fill="rgb(234,221,29)" fg:x="2720" fg:w="136"/><text x="6.4248%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 instructions, 0.48%)</title><rect x="6.1318%" y="69" width="0.4802%" height="15" fill="rgb(229,136,5)" fg:x="2720" fg:w="213"/><text x="6.4248%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="6.6120%" y="69" width="0.4464%" height="15" fill="rgb(238,36,11)" fg:x="2933" fg:w="198"/><text x="6.9049%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (443 instructions, 1.00%)</title><rect x="6.1318%" y="85" width="0.9987%" height="15" fill="rgb(251,55,41)" fg:x="2720" fg:w="443"/><text x="6.4248%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.1305%" y="53" width="0.0203%" height="15" fill="rgb(242,34,40)" fg:x="3163" fg:w="9"/><text x="7.4234%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1507%" y="37" width="0.0676%" height="15" fill="rgb(215,42,17)" fg:x="3172" fg:w="30"/><text x="7.4437%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.1507%" y="53" width="0.1240%" height="15" fill="rgb(207,44,46)" fg:x="3172" fg:w="55"/><text x="7.4437%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.1305%" y="69" width="0.2660%" height="15" fill="rgb(211,206,28)" fg:x="3163" fg:w="118"/><text x="7.4234%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.41%)</title><rect x="7.1305%" y="85" width="0.4148%" height="15" fill="rgb(237,167,16)" fg:x="3163" fg:w="184"/><text x="7.4234%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="7.5453%" y="69" width="0.1014%" height="15" fill="rgb(233,66,6)" fg:x="3347" fg:w="45"/><text x="7.8382%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="7.5453%" y="85" width="0.1578%" height="15" fill="rgb(246,123,29)" fg:x="3347" fg:w="70"/><text x="7.8382%" y="95.50"></text></g><g><title>core::fmt::write (825 instructions, 1.86%)</title><rect x="6.1318%" y="101" width="1.8598%" height="15" fill="rgb(209,62,40)" fg:x="2720" fg:w="825"/><text x="6.4248%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (880 instructions, 1.98%)</title><rect x="6.1318%" y="117" width="1.9838%" height="15" fill="rgb(218,4,25)" fg:x="2720" fg:w="880"/><text x="6.4248%" y="127.50"></text></g><g><title>core::fmt::write (1,136 instructions, 2.56%)</title><rect x="5.8049%" y="133" width="2.5609%" height="15" fill="rgb(253,91,49)" fg:x="2575" fg:w="1136"/><text x="6.0979%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,395 instructions, 3.14%)</title><rect x="5.5389%" y="149" width="3.1448%" height="15" fill="rgb(228,155,29)" fg:x="2457" fg:w="1395"/><text x="5.8319%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="8.6837%" y="149" width="0.1578%" height="15" fill="rgb(243,57,37)" fg:x="3852" fg:w="70"/><text x="8.9767%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="8.8415%" y="149" width="0.1240%" height="15" fill="rgb(244,167,17)" fg:x="3922" fg:w="55"/><text x="9.1345%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="8.9655%" y="149" width="0.1420%" height="15" fill="rgb(207,181,38)" fg:x="3977" fg:w="63"/><text x="9.2585%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="9.1075%" y="117" width="0.1713%" height="15" fill="rgb(211,8,23)" fg:x="4040" fg:w="76"/><text x="9.4005%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="9.1075%" y="133" width="0.2480%" height="15" fill="rgb(235,11,44)" fg:x="4040" fg:w="110"/><text x="9.4005%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="9.1075%" y="149" width="0.4013%" height="15" fill="rgb(248,18,52)" fg:x="4040" fg:w="178"/><text x="9.4005%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="9.5088%" y="149" width="0.1217%" height="15" fill="rgb(208,4,7)" fg:x="4218" fg:w="54"/><text x="9.8017%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="9.6305%" y="149" width="0.1601%" height="15" fill="rgb(240,17,39)" fg:x="4272" fg:w="71"/><text x="9.9235%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="9.7906%" y="133" width="0.1849%" height="15" fill="rgb(207,170,3)" fg:x="4343" fg:w="82"/><text x="10.0835%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="9.9754%" y="101" width="0.2705%" height="15" fill="rgb(236,100,52)" fg:x="4425" fg:w="120"/><text x="10.2684%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="9.9754%" y="117" width="0.3269%" height="15" fill="rgb(246,78,51)" fg:x="4425" fg:w="145"/><text x="10.2684%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.18%)</title><rect x="10.3023%" y="37" width="0.1803%" height="15" fill="rgb(211,17,15)" fg:x="4570" fg:w="80"/><text x="10.5953%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.26%)</title><rect x="10.3023%" y="53" width="0.2592%" height="15" fill="rgb(209,59,46)" fg:x="4570" fg:w="115"/><text x="10.5953%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (192 instructions, 0.43%)</title><rect x="10.3023%" y="69" width="0.4328%" height="15" fill="rgb(210,92,25)" fg:x="4570" fg:w="192"/><text x="10.5953%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="10.7351%" y="69" width="0.4464%" height="15" fill="rgb(238,174,52)" fg:x="4762" fg:w="198"/><text x="11.0281%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (422 instructions, 0.95%)</title><rect x="10.3023%" y="85" width="0.9513%" height="15" fill="rgb(230,73,7)" fg:x="4570" fg:w="422"/><text x="10.5953%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="11.2536%" y="53" width="0.0203%" height="15" fill="rgb(243,124,40)" fg:x="4992" fg:w="9"/><text x="11.5466%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.2739%" y="37" width="0.0676%" height="15" fill="rgb(244,170,11)" fg:x="5001" fg:w="30"/><text x="11.5669%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.2739%" y="53" width="0.1240%" height="15" fill="rgb(207,114,54)" fg:x="5001" fg:w="55"/><text x="11.5669%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="11.2536%" y="69" width="0.2660%" height="15" fill="rgb(205,42,20)" fg:x="4992" fg:w="118"/><text x="11.5466%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.41%)</title><rect x="11.2536%" y="85" width="0.4148%" height="15" fill="rgb(230,30,28)" fg:x="4992" fg:w="184"/><text x="11.5466%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="11.6684%" y="69" width="0.1014%" height="15" fill="rgb(205,73,54)" fg:x="5176" fg:w="45"/><text x="11.9614%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="11.6684%" y="85" width="0.1578%" height="15" fill="rgb(254,227,23)" fg:x="5176" fg:w="70"/><text x="11.9614%" y="95.50"></text></g><g><title>core::fmt::write (804 instructions, 1.81%)</title><rect x="10.3023%" y="101" width="1.8125%" height="15" fill="rgb(228,202,34)" fg:x="4570" fg:w="804"/><text x="10.5953%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (859 instructions, 1.94%)</title><rect x="10.3023%" y="117" width="1.9365%" height="15" fill="rgb(222,225,37)" fg:x="4570" fg:w="859"/><text x="10.5953%" y="127.50"></text></g><g><title>core::fmt::write (1,115 instructions, 2.51%)</title><rect x="9.9754%" y="133" width="2.5136%" height="15" fill="rgb(221,14,54)" fg:x="4425" fg:w="1115"/><text x="10.2684%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,338 instructions, 3.02%)</title><rect x="9.7906%" y="149" width="3.0163%" height="15" fill="rgb(254,102,2)" fg:x="4343" fg:w="1338"/><text x="10.0835%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="12.8069%" y="149" width="0.1578%" height="15" fill="rgb(232,104,17)" fg:x="5681" fg:w="70"/><text x="13.0998%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="12.9647%" y="149" width="0.1262%" height="15" fill="rgb(250,220,14)" fg:x="5751" fg:w="56"/><text x="13.2576%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="13.0909%" y="149" width="0.1420%" height="15" fill="rgb(241,158,9)" fg:x="5807" fg:w="63"/><text x="13.3839%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="13.2329%" y="149" width="0.1217%" height="15" fill="rgb(246,9,43)" fg:x="5870" fg:w="54"/><text x="13.5259%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="13.3547%" y="133" width="0.1555%" height="15" fill="rgb(206,73,33)" fg:x="5924" fg:w="69"/><text x="13.6476%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="13.5102%" y="133" width="0.1465%" height="15" fill="rgb(222,79,8)" fg:x="5993" fg:w="65"/><text x="13.8032%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="13.6568%" y="133" width="0.9153%" height="15" fill="rgb(234,8,54)" fg:x="6058" fg:w="406"/><text x="13.9497%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="14.5720%" y="133" width="0.0361%" height="15" fill="rgb(209,134,38)" fg:x="6464" fg:w="16"/><text x="14.8650%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="14.6081%" y="117" width="0.1849%" height="15" fill="rgb(230,127,29)" fg:x="6480" fg:w="82"/><text x="14.9011%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="14.7929%" y="85" width="0.1353%" height="15" fill="rgb(242,44,41)" fg:x="6562" fg:w="60"/><text x="15.0859%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="14.7929%" y="101" width="0.1916%" height="15" fill="rgb(222,56,43)" fg:x="6562" fg:w="85"/><text x="15.0859%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="14.9846%" y="53" width="0.0203%" height="15" fill="rgb(238,39,47)" fg:x="6647" fg:w="9"/><text x="15.2775%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="15.0048%" y="37" width="0.0676%" height="15" fill="rgb(226,79,43)" fg:x="6656" fg:w="30"/><text x="15.2978%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="15.0048%" y="53" width="0.1240%" height="15" fill="rgb(242,105,53)" fg:x="6656" fg:w="55"/><text x="15.2978%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="14.9846%" y="69" width="0.2660%" height="15" fill="rgb(251,132,46)" fg:x="6647" fg:w="118"/><text x="15.2775%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="14.9846%" y="85" width="0.3855%" height="15" fill="rgb(231,77,14)" fg:x="6647" fg:w="171"/><text x="15.2775%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="14.9846%" y="101" width="0.3968%" height="15" fill="rgb(240,135,9)" fg:x="6647" fg:w="176"/><text x="15.2775%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="14.7929%" y="117" width="0.8386%" height="15" fill="rgb(248,109,14)" fg:x="6562" fg:w="372"/><text x="15.0859%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.34%)</title><rect x="14.6081%" y="133" width="1.3413%" height="15" fill="rgb(227,146,52)" fg:x="6480" fg:w="595"/><text x="14.9011%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="15.9494%" y="133" width="0.1849%" height="15" fill="rgb(232,54,3)" fg:x="7075" fg:w="82"/><text x="16.2424%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="16.1343%" y="133" width="0.1262%" height="15" fill="rgb(229,201,43)" fg:x="7157" fg:w="56"/><text x="16.4272%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="16.2605%" y="117" width="0.1555%" height="15" fill="rgb(252,161,33)" fg:x="7213" fg:w="69"/><text x="16.5535%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.62%)</title><rect x="16.4161%" y="117" width="0.6245%" height="15" fill="rgb(226,146,40)" fg:x="7282" fg:w="277"/><text x="16.7090%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="17.0405%" y="101" width="0.1555%" height="15" fill="rgb(219,47,25)" fg:x="7559" fg:w="69"/><text x="17.3335%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="17.1961%" y="101" width="0.2051%" height="15" fill="rgb(250,135,13)" fg:x="7628" fg:w="91"/><text x="17.4890%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.4012%" y="101" width="0.1420%" height="15" fill="rgb(219,229,18)" fg:x="7719" fg:w="63"/><text x="17.6942%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="17.0405%" y="117" width="0.6357%" height="15" fill="rgb(217,152,27)" fg:x="7559" fg:w="282"/><text x="17.3335%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.6762%" y="117" width="0.1420%" height="15" fill="rgb(225,71,47)" fg:x="7841" fg:w="63"/><text x="17.9692%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.83%)</title><rect x="16.2605%" y="133" width="1.8328%" height="15" fill="rgb(220,139,14)" fg:x="7213" fg:w="813"/><text x="16.5535%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="18.0933%" y="133" width="0.1849%" height="15" fill="rgb(247,54,32)" fg:x="8026" fg:w="82"/><text x="18.3863%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="18.2781%" y="117" width="0.1555%" height="15" fill="rgb(252,131,39)" fg:x="8108" fg:w="69"/><text x="18.5711%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.62%)</title><rect x="18.4337%" y="117" width="0.6245%" height="15" fill="rgb(210,108,39)" fg:x="8177" fg:w="277"/><text x="18.7267%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="19.0581%" y="101" width="0.1555%" height="15" fill="rgb(205,23,29)" fg:x="8454" fg:w="69"/><text x="19.3511%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="19.2137%" y="101" width="0.2051%" height="15" fill="rgb(246,139,46)" fg:x="8523" fg:w="91"/><text x="19.5067%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.4188%" y="101" width="0.1420%" height="15" fill="rgb(250,81,26)" fg:x="8614" fg:w="63"/><text x="19.7118%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="19.0581%" y="117" width="0.6357%" height="15" fill="rgb(214,104,7)" fg:x="8454" fg:w="282"/><text x="19.3511%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.6939%" y="117" width="0.1420%" height="15" fill="rgb(233,189,8)" fg:x="8736" fg:w="63"/><text x="19.9868%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.83%)</title><rect x="18.2781%" y="133" width="1.8328%" height="15" fill="rgb(228,141,17)" fg:x="8108" fg:w="813"/><text x="18.5711%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="20.1109%" y="133" width="0.0473%" height="15" fill="rgb(247,157,1)" fg:x="8921" fg:w="21"/><text x="20.4039%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="20.1583%" y="133" width="0.1420%" height="15" fill="rgb(249,225,5)" fg:x="8942" fg:w="63"/><text x="20.4512%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,418 instructions, 7.71%)</title><rect x="13.3547%" y="149" width="7.7053%" height="15" fill="rgb(242,55,13)" fg:x="5924" fg:w="3418"/><text x="13.6476%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="21.0600%" y="133" width="0.1826%" height="15" fill="rgb(230,49,50)" fg:x="9342" fg:w="81"/><text x="21.3530%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="21.2922%" y="133" width="0.1758%" height="15" fill="rgb(241,111,38)" fg:x="9445" fg:w="78"/><text x="21.5852%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.46%)</title><rect x="21.0600%" y="149" width="0.4576%" height="15" fill="rgb(252,155,4)" fg:x="9342" fg:w="203"/><text x="21.3530%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="21.5176%" y="149" width="0.2705%" height="15" fill="rgb(212,69,32)" fg:x="9545" fg:w="120"/><text x="21.8106%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,985 instructions, 18.00%)</title><rect x="5.2413%" y="165" width="18.0009%" height="15" fill="rgb(243,107,47)" fg:x="2325" fg:w="7985"/><text x="5.5343%" y="175.50">&lt;candid::binary_parser::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.14%)</title><rect x="23.2422%" y="165" width="0.1420%" height="15" fill="rgb(247,130,12)" fg:x="10310" fg:w="63"/><text x="23.5352%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="23.3842%" y="165" width="0.1420%" height="15" fill="rgb(233,74,16)" fg:x="10373" fg:w="63"/><text x="23.6772%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="23.5262%" y="165" width="0.1465%" height="15" fill="rgb(208,58,18)" fg:x="10436" fg:w="65"/><text x="23.8192%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="23.6728%" y="149" width="0.9153%" height="15" fill="rgb(242,225,1)" fg:x="10501" fg:w="406"/><text x="23.9657%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="24.5880%" y="149" width="0.0361%" height="15" fill="rgb(249,39,40)" fg:x="10907" fg:w="16"/><text x="24.8810%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="24.6241%" y="133" width="0.1758%" height="15" fill="rgb(207,72,44)" fg:x="10923" fg:w="78"/><text x="24.9171%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="24.7999%" y="101" width="0.1353%" height="15" fill="rgb(215,193,12)" fg:x="11001" fg:w="60"/><text x="25.0929%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="24.7999%" y="117" width="0.1916%" height="15" fill="rgb(248,41,39)" fg:x="11001" fg:w="85"/><text x="25.0929%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="24.9915%" y="69" width="0.0203%" height="15" fill="rgb(253,85,4)" fg:x="11086" fg:w="9"/><text x="25.2845%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="25.0118%" y="53" width="0.0676%" height="15" fill="rgb(243,70,31)" fg:x="11095" fg:w="30"/><text x="25.3048%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="25.0118%" y="69" width="0.1240%" height="15" fill="rgb(253,195,26)" fg:x="11095" fg:w="55"/><text x="25.3048%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="24.9915%" y="85" width="0.2660%" height="15" fill="rgb(243,42,11)" fg:x="11086" fg:w="118"/><text x="25.2845%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="24.9915%" y="101" width="0.3855%" height="15" fill="rgb(239,66,17)" fg:x="11086" fg:w="171"/><text x="25.2845%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="24.9915%" y="117" width="0.3968%" height="15" fill="rgb(217,132,21)" fg:x="11086" fg:w="176"/><text x="25.2845%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="24.7999%" y="133" width="0.8386%" height="15" fill="rgb(252,202,21)" fg:x="11001" fg:w="372"/><text x="25.0929%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.33%)</title><rect x="24.6241%" y="149" width="1.3323%" height="15" fill="rgb(233,98,36)" fg:x="10923" fg:w="591"/><text x="24.9171%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="25.9564%" y="149" width="0.1849%" height="15" fill="rgb(216,153,54)" fg:x="11514" fg:w="82"/><text x="26.2494%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="26.1413%" y="149" width="0.1826%" height="15" fill="rgb(250,99,7)" fg:x="11596" fg:w="81"/><text x="26.4342%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="26.3239%" y="133" width="0.1555%" height="15" fill="rgb(207,56,50)" fg:x="11677" fg:w="69"/><text x="26.6168%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="26.4794%" y="133" width="0.2051%" height="15" fill="rgb(244,61,34)" fg:x="11746" fg:w="91"/><text x="26.7724%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="26.6846%" y="133" width="0.1420%" height="15" fill="rgb(241,50,38)" fg:x="11837" fg:w="63"/><text x="26.9775%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="26.3239%" y="149" width="0.6357%" height="15" fill="rgb(212,166,30)" fg:x="11677" fg:w="282"/><text x="26.6168%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="26.9596%" y="149" width="0.2660%" height="15" fill="rgb(249,127,32)" fg:x="11959" fg:w="118"/><text x="27.2525%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,779 instructions, 4.01%)</title><rect x="23.6728%" y="165" width="4.0105%" height="15" fill="rgb(209,103,0)" fg:x="10501" fg:w="1779"/><text x="23.9657%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="27.6832%" y="165" width="0.1420%" height="15" fill="rgb(238,209,51)" fg:x="12280" fg:w="63"/><text x="27.9762%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.8252%" y="165" width="0.1713%" height="15" fill="rgb(237,56,23)" fg:x="12343" fg:w="76"/><text x="28.1182%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.9966%" y="149" width="0.1713%" height="15" fill="rgb(215,153,46)" fg:x="12419" fg:w="76"/><text x="28.2895%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="27.9966%" y="165" width="0.3584%" height="15" fill="rgb(224,49,31)" fg:x="12419" fg:w="159"/><text x="28.2895%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="28.3550%" y="133" width="0.1849%" height="15" fill="rgb(250,18,42)" fg:x="12578" fg:w="82"/><text x="28.6480%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="28.3550%" y="149" width="0.2615%" height="15" fill="rgb(215,176,39)" fg:x="12578" fg:w="116"/><text x="28.6480%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.41%)</title><rect x="28.3550%" y="165" width="0.4148%" height="15" fill="rgb(223,77,29)" fg:x="12578" fg:w="184"/><text x="28.6480%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="28.7698%" y="165" width="0.1849%" height="15" fill="rgb(234,94,52)" fg:x="12762" fg:w="82"/><text x="29.0628%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="28.9547%" y="149" width="0.1849%" height="15" fill="rgb(220,154,50)" fg:x="12844" fg:w="82"/><text x="29.2476%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.37%)</title><rect x="28.9547%" y="165" width="0.3720%" height="15" fill="rgb(212,11,10)" fg:x="12844" fg:w="165"/><text x="29.2476%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="29.3266%" y="165" width="0.1849%" height="15" fill="rgb(205,166,19)" fg:x="13009" fg:w="82"/><text x="29.6196%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.5115%" y="149" width="0.1758%" height="15" fill="rgb(244,198,16)" fg:x="13091" fg:w="78"/><text x="29.8045%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="29.6873%" y="117" width="0.2029%" height="15" fill="rgb(219,69,12)" fg:x="13169" fg:w="90"/><text x="29.9803%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="29.6873%" y="133" width="0.2592%" height="15" fill="rgb(245,30,7)" fg:x="13169" fg:w="115"/><text x="29.9803%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="29.9466%" y="85" width="0.0203%" height="15" fill="rgb(218,221,48)" fg:x="13284" fg:w="9"/><text x="30.2395%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="29.9669%" y="69" width="0.0676%" height="15" fill="rgb(216,66,15)" fg:x="13293" fg:w="30"/><text x="30.2598%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="29.9669%" y="85" width="0.1240%" height="15" fill="rgb(226,122,50)" fg:x="13293" fg:w="55"/><text x="30.2598%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="29.9466%" y="101" width="0.2660%" height="15" fill="rgb(239,156,16)" fg:x="13284" fg:w="118"/><text x="30.2395%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="29.9466%" y="117" width="0.3855%" height="15" fill="rgb(224,27,38)" fg:x="13284" fg:w="171"/><text x="30.2395%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="29.9466%" y="133" width="0.4193%" height="15" fill="rgb(224,39,27)" fg:x="13284" fg:w="186"/><text x="30.2395%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="29.6873%" y="149" width="0.9288%" height="15" fill="rgb(215,92,29)" fg:x="13169" fg:w="412"/><text x="29.9803%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.42%)</title><rect x="29.5115%" y="165" width="1.4225%" height="15" fill="rgb(207,159,16)" fg:x="13091" fg:w="631"/><text x="29.8045%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="30.9340%" y="149" width="0.1849%" height="15" fill="rgb(238,163,47)" fg:x="13722" fg:w="82"/><text x="31.2269%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.31%)</title><rect x="30.9340%" y="165" width="0.3111%" height="15" fill="rgb(219,91,49)" fg:x="13722" fg:w="138"/><text x="31.2269%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.21%)</title><rect x="31.2451%" y="165" width="0.2142%" height="15" fill="rgb(227,167,31)" fg:x="13860" fg:w="95"/><text x="31.5380%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="31.4592%" y="165" width="0.0293%" height="15" fill="rgb(234,80,54)" fg:x="13955" fg:w="13"/><text x="31.7522%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.21%)</title><rect x="31.4885%" y="165" width="0.2142%" height="15" fill="rgb(212,114,2)" fg:x="13968" fg:w="95"/><text x="31.7815%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="31.7027%" y="149" width="0.1849%" height="15" fill="rgb(234,50,24)" fg:x="14063" fg:w="82"/><text x="31.9957%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (114 instructions, 0.26%)</title><rect x="31.7027%" y="165" width="0.2570%" height="15" fill="rgb(221,68,8)" fg:x="14063" fg:w="114"/><text x="31.9957%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="31.9597%" y="149" width="0.0518%" height="15" fill="rgb(254,180,31)" fg:x="14177" fg:w="23"/><text x="32.2527%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="32.0115%" y="149" width="0.0518%" height="15" fill="rgb(247,130,50)" fg:x="14200" fg:w="23"/><text x="32.3045%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.30%)</title><rect x="31.9597%" y="165" width="0.3021%" height="15" fill="rgb(211,109,4)" fg:x="14177" fg:w="134"/><text x="32.2527%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.2618%" y="165" width="0.0338%" height="15" fill="rgb(238,50,21)" fg:x="14311" fg:w="15"/><text x="32.5547%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="32.4827%" y="149" width="0.1262%" height="15" fill="rgb(225,57,45)" fg:x="14409" fg:w="56"/><text x="32.7757%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.37%)</title><rect x="32.2956%" y="165" width="0.3697%" height="15" fill="rgb(209,196,50)" fg:x="14326" fg:w="164"/><text x="32.5886%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="32.6653%" y="165" width="0.0293%" height="15" fill="rgb(242,140,13)" fg:x="14490" fg:w="13"/><text x="32.9583%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="32.6946%" y="165" width="0.0158%" height="15" fill="rgb(217,111,7)" fg:x="14503" fg:w="7"/><text x="32.9876%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.7104%" y="165" width="0.0338%" height="15" fill="rgb(253,193,51)" fg:x="14510" fg:w="15"/><text x="33.0034%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="32.7442%" y="133" width="0.1601%" height="15" fill="rgb(252,70,29)" fg:x="14525" fg:w="71"/><text x="33.0372%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="32.9043%" y="101" width="0.2029%" height="15" fill="rgb(232,127,12)" fg:x="14596" fg:w="90"/><text x="33.1972%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="32.9043%" y="117" width="0.2592%" height="15" fill="rgb(211,180,21)" fg:x="14596" fg:w="115"/><text x="33.1972%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="33.1635%" y="69" width="0.0203%" height="15" fill="rgb(229,72,13)" fg:x="14711" fg:w="9"/><text x="33.4565%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="33.1838%" y="53" width="0.0676%" height="15" fill="rgb(240,211,49)" fg:x="14720" fg:w="30"/><text x="33.4768%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="33.1838%" y="69" width="0.1240%" height="15" fill="rgb(219,149,40)" fg:x="14720" fg:w="55"/><text x="33.4768%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="33.1635%" y="85" width="0.2660%" height="15" fill="rgb(210,127,46)" fg:x="14711" fg:w="118"/><text x="33.4565%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="33.1635%" y="101" width="0.3855%" height="15" fill="rgb(220,106,7)" fg:x="14711" fg:w="171"/><text x="33.4565%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="33.1635%" y="117" width="0.4193%" height="15" fill="rgb(249,31,22)" fg:x="14711" fg:w="186"/><text x="33.4565%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="32.9043%" y="133" width="0.9288%" height="15" fill="rgb(253,1,49)" fg:x="14596" fg:w="412"/><text x="33.1972%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (624 instructions, 1.41%)</title><rect x="32.7442%" y="149" width="1.4067%" height="15" fill="rgb(227,144,33)" fg:x="14525" fg:w="624"/><text x="33.0372%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="34.1509%" y="149" width="0.1849%" height="15" fill="rgb(249,163,44)" fg:x="15149" fg:w="82"/><text x="34.4439%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (817 instructions, 1.84%)</title><rect x="32.7442%" y="165" width="1.8418%" height="15" fill="rgb(234,15,39)" fg:x="14525" fg:w="817"/><text x="33.0372%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="34.5860%" y="133" width="0.1849%" height="15" fill="rgb(207,66,16)" fg:x="15342" fg:w="82"/><text x="34.8790%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="34.5860%" y="149" width="0.2615%" height="15" fill="rgb(233,112,24)" fg:x="15342" fg:w="116"/><text x="34.8790%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.41%)</title><rect x="34.5860%" y="165" width="0.4148%" height="15" fill="rgb(230,90,22)" fg:x="15342" fg:w="184"/><text x="34.8790%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="35.0008%" y="165" width="0.1849%" height="15" fill="rgb(229,61,13)" fg:x="15526" fg:w="82"/><text x="35.2938%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.1856%" y="165" width="0.1826%" height="15" fill="rgb(225,57,24)" fg:x="15608" fg:w="81"/><text x="35.4786%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="35.3682%" y="165" width="0.1849%" height="15" fill="rgb(208,169,48)" fg:x="15689" fg:w="82"/><text x="35.6612%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="35.5531%" y="165" width="0.1849%" height="15" fill="rgb(244,218,51)" fg:x="15771" fg:w="82"/><text x="35.8461%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.7380%" y="149" width="0.1826%" height="15" fill="rgb(214,148,10)" fg:x="15853" fg:w="81"/><text x="36.0309%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.26%)</title><rect x="35.7380%" y="165" width="0.2592%" height="15" fill="rgb(225,174,27)" fg:x="15853" fg:w="115"/><text x="36.0309%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="35.9972%" y="149" width="0.1420%" height="15" fill="rgb(230,96,26)" fg:x="15968" fg:w="63"/><text x="36.2902%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.37%)</title><rect x="35.9972%" y="165" width="0.3742%" height="15" fill="rgb(232,10,30)" fg:x="15968" fg:w="166"/><text x="36.2902%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="36.3714%" y="165" width="0.1826%" height="15" fill="rgb(222,8,50)" fg:x="16134" fg:w="81"/><text x="36.6644%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="36.5540%" y="165" width="0.8566%" height="15" fill="rgb(213,81,27)" fg:x="16215" fg:w="380"/><text x="36.8470%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="37.4107%" y="165" width="0.8566%" height="15" fill="rgb(245,50,10)" fg:x="16595" fg:w="380"/><text x="37.7036%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,500 instructions, 41.71%)</title><rect x="0.5613%" y="181" width="41.7052%" height="15" fill="rgb(216,100,18)" fg:x="249" fg:w="18500"/><text x="0.8543%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (335 instructions, 0.76%)</title><rect x="42.2665%" y="181" width="0.7552%" height="15" fill="rgb(236,147,54)" fg:x="18749" fg:w="335"/><text x="42.5595%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="43.0217%" y="165" width="0.0271%" height="15" fill="rgb(205,143,26)" fg:x="19084" fg:w="12"/><text x="43.3147%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="43.0217%" y="181" width="0.1127%" height="15" fill="rgb(236,26,9)" fg:x="19084" fg:w="50"/><text x="43.3147%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="43.1344%" y="165" width="0.1240%" height="15" fill="rgb(221,165,53)" fg:x="19134" fg:w="55"/><text x="43.4274%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.37%)</title><rect x="43.1344%" y="181" width="0.3675%" height="15" fill="rgb(214,110,17)" fg:x="19134" fg:w="163"/><text x="43.4274%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="43.5019%" y="165" width="0.0271%" height="15" fill="rgb(237,197,12)" fg:x="19297" fg:w="12"/><text x="43.7949%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="43.5289%" y="149" width="0.1195%" height="15" fill="rgb(205,84,17)" fg:x="19309" fg:w="53"/><text x="43.8219%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.60%)</title><rect x="43.6484%" y="149" width="0.6042%" height="15" fill="rgb(237,18,45)" fg:x="19362" fg:w="268"/><text x="43.9414%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.2526%" y="149" width="0.3652%" height="15" fill="rgb(221,87,14)" fg:x="19630" fg:w="162"/><text x="44.5455%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.62%)</title><rect x="43.5289%" y="165" width="1.6231%" height="15" fill="rgb(238,186,15)" fg:x="19309" fg:w="720"/><text x="43.8219%" y="175.50"></text></g><g><title>candid::types::internal::env_add (952 instructions, 2.15%)</title><rect x="43.5019%" y="181" width="2.1461%" height="15" fill="rgb(208,115,11)" fg:x="19297" fg:w="952"/><text x="43.7949%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.6480%" y="181" width="0.1758%" height="15" fill="rgb(254,175,0)" fg:x="20249" fg:w="78"/><text x="45.9410%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.8238%" y="181" width="0.1713%" height="15" fill="rgb(227,24,42)" fg:x="20327" fg:w="76"/><text x="46.1168%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.9952%" y="181" width="0.1758%" height="15" fill="rgb(223,211,37)" fg:x="20403" fg:w="78"/><text x="46.2881%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="46.1710%" y="149" width="0.0271%" height="15" fill="rgb(235,49,27)" fg:x="20481" fg:w="12"/><text x="46.4640%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.1981%" y="133" width="0.1195%" height="15" fill="rgb(254,97,51)" fg:x="20493" fg:w="53"/><text x="46.4910%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="46.3175%" y="133" width="0.6898%" height="15" fill="rgb(249,51,40)" fg:x="20546" fg:w="306"/><text x="46.6105%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.0074%" y="133" width="0.1623%" height="15" fill="rgb(210,128,45)" fg:x="20852" fg:w="72"/><text x="47.3003%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="46.1981%" y="149" width="1.5059%" height="15" fill="rgb(224,137,50)" fg:x="20493" fg:w="668"/><text x="46.4910%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 1.79%)</title><rect x="46.1710%" y="165" width="1.7922%" height="15" fill="rgb(242,15,9)" fg:x="20481" fg:w="795"/><text x="46.4640%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="47.9632%" y="165" width="0.1713%" height="15" fill="rgb(233,187,41)" fg:x="21276" fg:w="76"/><text x="48.2562%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="48.1345%" y="149" width="0.0271%" height="15" fill="rgb(227,2,29)" fg:x="21352" fg:w="12"/><text x="48.4275%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="48.1616%" y="133" width="0.1195%" height="15" fill="rgb(222,70,3)" fg:x="21364" fg:w="53"/><text x="48.4546%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="48.2811%" y="133" width="0.6898%" height="15" fill="rgb(213,11,42)" fg:x="21417" fg:w="306"/><text x="48.5740%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="48.9709%" y="133" width="0.1623%" height="15" fill="rgb(225,150,9)" fg:x="21723" fg:w="72"/><text x="49.2639%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="48.1616%" y="149" width="1.5059%" height="15" fill="rgb(230,162,45)" fg:x="21364" fg:w="668"/><text x="48.4546%" y="159.50"></text></g><g><title>candid::types::internal::env_add (900 instructions, 2.03%)</title><rect x="48.1345%" y="165" width="2.0289%" height="15" fill="rgb(222,14,52)" fg:x="21352" fg:w="900"/><text x="48.4275%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="50.1634%" y="165" width="0.1713%" height="15" fill="rgb(254,198,14)" fg:x="22252" fg:w="76"/><text x="50.4564%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="50.3348%" y="149" width="0.0271%" height="15" fill="rgb(220,217,30)" fg:x="22328" fg:w="12"/><text x="50.6277%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.3618%" y="133" width="0.1195%" height="15" fill="rgb(215,146,41)" fg:x="22340" fg:w="53"/><text x="50.6548%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="50.4813%" y="133" width="0.6898%" height="15" fill="rgb(217,27,36)" fg:x="22393" fg:w="306"/><text x="50.7743%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="51.1711%" y="133" width="0.1623%" height="15" fill="rgb(219,218,39)" fg:x="22699" fg:w="72"/><text x="51.4641%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="50.3618%" y="149" width="1.5059%" height="15" fill="rgb(219,4,42)" fg:x="22340" fg:w="668"/><text x="50.6548%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.01%)</title><rect x="51.8677%" y="149" width="1.0054%" height="15" fill="rgb(249,119,36)" fg:x="23008" fg:w="446"/><text x="52.1607%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="52.8731%" y="133" width="0.1826%" height="15" fill="rgb(209,23,33)" fg:x="23454" fg:w="81"/><text x="53.1661%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="52.8731%" y="149" width="0.2435%" height="15" fill="rgb(211,10,0)" fg:x="23454" fg:w="108"/><text x="53.1661%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,418 instructions, 3.20%)</title><rect x="50.3348%" y="165" width="3.1966%" height="15" fill="rgb(208,99,37)" fg:x="22328" fg:w="1418"/><text x="50.6277%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.5314%" y="117" width="0.1195%" height="15" fill="rgb(213,132,31)" fg:x="23746" fg:w="53"/><text x="53.8244%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.5314%" y="133" width="0.1781%" height="15" fill="rgb(243,129,40)" fg:x="23746" fg:w="79"/><text x="53.8244%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="53.5314%" y="149" width="0.6583%" height="15" fill="rgb(210,66,33)" fg:x="23746" fg:w="292"/><text x="53.8244%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1092 (9 instructions, 0.02%)</title><rect x="54.1897%" y="149" width="0.0203%" height="15" fill="rgb(209,189,4)" fg:x="24038" fg:w="9"/><text x="54.4826%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1092 (15 instructions, 0.03%)</title><rect x="54.2100%" y="149" width="0.0338%" height="15" fill="rgb(214,107,37)" fg:x="24047" fg:w="15"/><text x="54.5029%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="54.2438%" y="149" width="0.0248%" height="15" fill="rgb(245,88,54)" fg:x="24062" fg:w="11"/><text x="54.5368%" y="159.50"></text></g><g><title>candid::types::internal::env_id (566 instructions, 1.28%)</title><rect x="53.5314%" y="165" width="1.2760%" height="15" fill="rgb(205,146,20)" fg:x="23746" fg:w="566"/><text x="53.8244%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,938 instructions, 8.88%)</title><rect x="46.1710%" y="181" width="8.8776%" height="15" fill="rgb(220,161,25)" fg:x="20481" fg:w="3938"/><text x="46.4640%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.0486%" y="181" width="0.1713%" height="15" fill="rgb(215,152,15)" fg:x="24419" fg:w="76"/><text x="55.3415%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.2199%" y="181" width="0.1713%" height="15" fill="rgb(233,192,44)" fg:x="24495" fg:w="76"/><text x="55.5129%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="55.3912%" y="149" width="0.0271%" height="15" fill="rgb(240,170,46)" fg:x="24571" fg:w="12"/><text x="55.6842%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="55.4183%" y="133" width="0.1195%" height="15" fill="rgb(207,104,33)" fg:x="24583" fg:w="53"/><text x="55.7113%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="55.5378%" y="133" width="0.1984%" height="15" fill="rgb(219,21,39)" fg:x="24636" fg:w="88"/><text x="55.8307%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="55.7362%" y="133" width="0.3652%" height="15" fill="rgb(214,133,29)" fg:x="24724" fg:w="162"/><text x="56.0291%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="55.4183%" y="149" width="1.2173%" height="15" fill="rgb(226,93,6)" fg:x="24583" fg:w="540"/><text x="55.7113%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.50%)</title><rect x="55.3912%" y="165" width="1.5036%" height="15" fill="rgb(252,222,34)" fg:x="24571" fg:w="667"/><text x="55.6842%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="56.8949%" y="165" width="0.1758%" height="15" fill="rgb(252,92,48)" fg:x="25238" fg:w="78"/><text x="57.1878%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="57.0707%" y="149" width="0.0271%" height="15" fill="rgb(245,223,24)" fg:x="25316" fg:w="12"/><text x="57.3637%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="57.0978%" y="133" width="0.1195%" height="15" fill="rgb(205,176,3)" fg:x="25328" fg:w="53"/><text x="57.3907%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="57.2173%" y="133" width="0.1984%" height="15" fill="rgb(235,151,15)" fg:x="25381" fg:w="88"/><text x="57.5102%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="57.4156%" y="133" width="0.3652%" height="15" fill="rgb(237,209,11)" fg:x="25469" fg:w="162"/><text x="57.7086%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="57.0978%" y="149" width="1.2173%" height="15" fill="rgb(243,227,24)" fg:x="25328" fg:w="540"/><text x="57.3907%" y="159.50"></text></g><g><title>candid::types::internal::env_add (772 instructions, 1.74%)</title><rect x="57.0707%" y="165" width="1.7403%" height="15" fill="rgb(239,193,16)" fg:x="25316" fg:w="772"/><text x="57.3637%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="58.8111%" y="165" width="0.1713%" height="15" fill="rgb(231,27,9)" fg:x="26088" fg:w="76"/><text x="59.1040%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="58.9824%" y="149" width="0.0271%" height="15" fill="rgb(219,169,10)" fg:x="26164" fg:w="12"/><text x="59.2754%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="59.0094%" y="133" width="0.1195%" height="15" fill="rgb(244,229,43)" fg:x="26176" fg:w="53"/><text x="59.3024%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="59.1289%" y="133" width="0.1984%" height="15" fill="rgb(254,38,20)" fg:x="26229" fg:w="88"/><text x="59.4219%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="59.3273%" y="133" width="0.3652%" height="15" fill="rgb(250,47,30)" fg:x="26317" fg:w="162"/><text x="59.6203%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="59.0094%" y="149" width="1.2173%" height="15" fill="rgb(224,124,36)" fg:x="26176" fg:w="540"/><text x="59.3024%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="60.2268%" y="149" width="0.1849%" height="15" fill="rgb(246,68,51)" fg:x="26716" fg:w="82"/><text x="60.5198%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="60.4116%" y="149" width="0.1894%" height="15" fill="rgb(253,43,49)" fg:x="26798" fg:w="84"/><text x="60.7046%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="60.6010%" y="133" width="0.1195%" height="15" fill="rgb(219,54,36)" fg:x="26882" fg:w="53"/><text x="60.8940%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="60.7205%" y="133" width="0.1984%" height="15" fill="rgb(227,133,34)" fg:x="26935" fg:w="88"/><text x="61.0135%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="60.9189%" y="133" width="0.3652%" height="15" fill="rgb(247,227,15)" fg:x="27023" fg:w="162"/><text x="61.2118%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.8183%" y="133" width="0.1195%" height="15" fill="rgb(229,96,14)" fg:x="27422" fg:w="53"/><text x="62.1113%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.60%)</title><rect x="61.9378%" y="133" width="0.6042%" height="15" fill="rgb(220,79,17)" fg:x="27475" fg:w="268"/><text x="62.2308%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="62.5420%" y="133" width="0.3652%" height="15" fill="rgb(205,131,53)" fg:x="27743" fg:w="162"/><text x="62.8350%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.4415%" y="133" width="0.1195%" height="15" fill="rgb(209,50,29)" fg:x="28142" fg:w="53"/><text x="63.7344%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="63.5609%" y="133" width="0.6898%" height="15" fill="rgb(245,86,46)" fg:x="28195" fg:w="306"/><text x="63.8539%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="64.2508%" y="133" width="0.1623%" height="15" fill="rgb(235,66,46)" fg:x="28501" fg:w="72"/><text x="64.5437%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,928 instructions, 4.35%)</title><rect x="60.6010%" y="149" width="4.3464%" height="15" fill="rgb(232,148,31)" fg:x="26882" fg:w="1928"/><text x="60.8940%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="64.9474%" y="149" width="0.1826%" height="15" fill="rgb(217,149,8)" fg:x="28810" fg:w="81"/><text x="65.2403%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="65.1300%" y="149" width="0.1533%" height="15" fill="rgb(209,183,11)" fg:x="28891" fg:w="68"/><text x="65.4229%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.2833%" y="133" width="0.1826%" height="15" fill="rgb(208,55,20)" fg:x="28959" fg:w="81"/><text x="65.5762%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="65.2833%" y="149" width="0.2435%" height="15" fill="rgb(218,39,14)" fg:x="28959" fg:w="108"/><text x="65.5762%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,547 instructions, 8.00%)</title><rect x="58.9824%" y="165" width="7.9961%" height="15" fill="rgb(216,169,33)" fg:x="26164" fg:w="3547"/><text x="59.2754%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="66.9785%" y="117" width="0.1195%" height="15" fill="rgb(233,80,24)" fg:x="29711" fg:w="53"/><text x="67.2715%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="66.9785%" y="133" width="0.1781%" height="15" fill="rgb(213,179,31)" fg:x="29711" fg:w="79"/><text x="67.2715%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.6368%" y="117" width="0.1195%" height="15" fill="rgb(209,19,5)" fg:x="30003" fg:w="53"/><text x="67.9298%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="67.6368%" y="133" width="0.1781%" height="15" fill="rgb(219,18,35)" fg:x="30003" fg:w="79"/><text x="67.9298%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.32%)</title><rect x="66.9785%" y="149" width="1.3165%" height="15" fill="rgb(209,169,16)" fg:x="29711" fg:w="584"/><text x="67.2715%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.18%)</title><rect x="68.2950%" y="149" width="0.1849%" height="15" fill="rgb(245,90,51)" fg:x="30295" fg:w="82"/><text x="68.5880%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="68.4799%" y="149" width="0.1894%" height="15" fill="rgb(220,99,45)" fg:x="30377" fg:w="84"/><text x="68.7729%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.6693%" y="117" width="0.1195%" height="15" fill="rgb(249,89,25)" fg:x="30461" fg:w="53"/><text x="68.9622%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="68.6693%" y="133" width="0.1781%" height="15" fill="rgb(239,193,0)" fg:x="30461" fg:w="79"/><text x="68.9622%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.3275%" y="117" width="0.1195%" height="15" fill="rgb(231,126,1)" fg:x="30753" fg:w="53"/><text x="69.6205%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="69.3275%" y="133" width="0.1781%" height="15" fill="rgb(243,166,3)" fg:x="30753" fg:w="79"/><text x="69.6205%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.9858%" y="117" width="0.1195%" height="15" fill="rgb(223,22,34)" fg:x="31045" fg:w="53"/><text x="70.2788%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="70.1053%" y="117" width="0.3472%" height="15" fill="rgb(251,52,51)" fg:x="31098" fg:w="154"/><text x="70.3982%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.4524%" y="101" width="0.1195%" height="15" fill="rgb(221,165,28)" fg:x="31252" fg:w="53"/><text x="70.7454%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash.1080 (78 instructions, 0.18%)</title><rect x="70.4524%" y="117" width="0.1758%" height="15" fill="rgb(218,121,47)" fg:x="31252" fg:w="78"/><text x="70.7454%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (354 instructions, 0.80%)</title><rect x="69.9858%" y="133" width="0.7980%" height="15" fill="rgb(209,120,9)" fg:x="31045" fg:w="354"/><text x="70.2788%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,151 instructions, 2.59%)</title><rect x="68.6693%" y="149" width="2.5947%" height="15" fill="rgb(236,68,12)" fg:x="30461" fg:w="1151"/><text x="68.9622%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="71.2640%" y="149" width="0.1758%" height="15" fill="rgb(225,194,26)" fg:x="31612" fg:w="78"/><text x="71.5570%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,773 instructions, 6.25%)</title><rect x="66.9785%" y="165" width="6.2513%" height="15" fill="rgb(231,84,39)" fg:x="29711" fg:w="2773"/><text x="67.2715%" y="175.50">candid:..</text></g><g><title>candid::types::CandidType::ty (8,020 instructions, 18.08%)</title><rect x="55.3912%" y="181" width="18.0798%" height="15" fill="rgb(210,11,45)" fg:x="24571" fg:w="8020"/><text x="55.6842%" y="191.50">candid::types::CandidTyp..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="73.4710%" y="181" width="0.1758%" height="15" fill="rgb(224,54,52)" fg:x="32591" fg:w="78"/><text x="73.7640%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.6468%" y="165" width="0.0271%" height="15" fill="rgb(238,102,14)" fg:x="32669" fg:w="12"/><text x="73.9398%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.6739%" y="149" width="0.1195%" height="15" fill="rgb(243,160,52)" fg:x="32681" fg:w="53"/><text x="73.9669%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.60%)</title><rect x="73.7934%" y="149" width="0.6042%" height="15" fill="rgb(216,114,19)" fg:x="32734" fg:w="268"/><text x="74.0863%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="74.3975%" y="149" width="0.3652%" height="15" fill="rgb(244,166,37)" fg:x="33002" fg:w="162"/><text x="74.6905%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.62%)</title><rect x="73.6739%" y="165" width="1.6231%" height="15" fill="rgb(246,29,44)" fg:x="32681" fg:w="720"/><text x="73.9669%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.91%)</title><rect x="75.2970%" y="165" width="0.9108%" height="15" fill="rgb(215,56,53)" fg:x="33401" fg:w="404"/><text x="75.5900%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="76.2078%" y="149" width="0.1826%" height="15" fill="rgb(217,60,2)" fg:x="33805" fg:w="81"/><text x="76.5007%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="76.2078%" y="165" width="0.2435%" height="15" fill="rgb(207,26,24)" fg:x="33805" fg:w="108"/><text x="76.5007%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,428 instructions, 3.22%)</title><rect x="73.6468%" y="181" width="3.2192%" height="15" fill="rgb(252,210,15)" fg:x="32669" fg:w="1428"/><text x="73.9398%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.8660%" y="133" width="0.1195%" height="15" fill="rgb(253,209,26)" fg:x="34097" fg:w="53"/><text x="77.1590%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="76.9855%" y="133" width="0.3472%" height="15" fill="rgb(238,170,14)" fg:x="34150" fg:w="154"/><text x="77.2785%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.3327%" y="117" width="0.1195%" height="15" fill="rgb(216,178,15)" fg:x="34304" fg:w="53"/><text x="77.6256%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="77.5085%" y="117" width="0.3472%" height="15" fill="rgb(250,197,2)" fg:x="34382" fg:w="154"/><text x="77.8015%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash.1080 (257 instructions, 0.58%)</title><rect x="77.3327%" y="133" width="0.5794%" height="15" fill="rgb(212,70,42)" fg:x="34304" fg:w="257"/><text x="77.6256%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (548 instructions, 1.24%)</title><rect x="76.8660%" y="149" width="1.2354%" height="15" fill="rgb(227,213,9)" fg:x="34097" fg:w="548"/><text x="77.1590%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.5816%" y="133" width="0.1195%" height="15" fill="rgb(245,99,25)" fg:x="34858" fg:w="53"/><text x="78.8745%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="78.7011%" y="133" width="0.3472%" height="15" fill="rgb(250,82,29)" fg:x="34911" fg:w="154"/><text x="78.9940%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="79.0482%" y="117" width="0.1195%" height="15" fill="rgb(241,226,54)" fg:x="35065" fg:w="53"/><text x="79.3412%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="79.2241%" y="117" width="0.3472%" height="15" fill="rgb(221,99,41)" fg:x="35143" fg:w="154"/><text x="79.5170%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash.1080 (257 instructions, 0.58%)</title><rect x="79.0482%" y="133" width="0.5794%" height="15" fill="rgb(213,90,21)" fg:x="35065" fg:w="257"/><text x="79.3412%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (548 instructions, 1.24%)</title><rect x="78.5816%" y="149" width="1.2354%" height="15" fill="rgb(205,208,24)" fg:x="34858" fg:w="548"/><text x="78.8745%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,522 instructions, 3.43%)</title><rect x="76.8660%" y="165" width="3.4311%" height="15" fill="rgb(246,31,12)" fg:x="34097" fg:w="1522"/><text x="77.1590%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,856 instructions, 4.18%)</title><rect x="76.8660%" y="181" width="4.1840%" height="15" fill="rgb(213,154,6)" fg:x="34097" fg:w="1856"/><text x="77.1590%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="81.0501%" y="181" width="0.0766%" height="15" fill="rgb(222,163,29)" fg:x="35953" fg:w="34"/><text x="81.3430%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="81.1267%" y="165" width="0.1758%" height="15" fill="rgb(227,201,8)" fg:x="35987" fg:w="78"/><text x="81.4197%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="81.3634%" y="165" width="0.2705%" height="15" fill="rgb(233,9,32)" fg:x="36092" fg:w="120"/><text x="81.6564%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.57%)</title><rect x="81.1267%" y="181" width="0.5681%" height="15" fill="rgb(217,54,24)" fg:x="35987" fg:w="252"/><text x="81.4197%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.30%)</title><rect x="81.6948%" y="117" width="0.2953%" height="15" fill="rgb(235,192,0)" fg:x="36239" fg:w="131"/><text x="81.9878%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (208 instructions, 0.47%)</title><rect x="81.6948%" y="133" width="0.4689%" height="15" fill="rgb(235,45,9)" fg:x="36239" fg:w="208"/><text x="81.9878%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="82.1637%" y="133" width="0.0766%" height="15" fill="rgb(246,42,40)" fg:x="36447" fg:w="34"/><text x="82.4567%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (290 instructions, 0.65%)</title><rect x="81.6948%" y="149" width="0.6538%" height="15" fill="rgb(248,111,24)" fg:x="36239" fg:w="290"/><text x="81.9878%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="82.3486%" y="149" width="0.0248%" height="15" fill="rgb(249,65,22)" fg:x="36529" fg:w="11"/><text x="82.6415%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (353 instructions, 0.80%)</title><rect x="81.6948%" y="165" width="0.7958%" height="15" fill="rgb(238,111,51)" fg:x="36239" fg:w="353"/><text x="81.9878%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.4906%" y="149" width="0.1713%" height="15" fill="rgb(250,118,22)" fg:x="36592" fg:w="76"/><text x="82.7836%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="82.9865%" y="149" width="0.1601%" height="15" fill="rgb(234,84,26)" fg:x="36812" fg:w="71"/><text x="83.2795%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (435 instructions, 0.98%)</title><rect x="82.4906%" y="165" width="0.9806%" height="15" fill="rgb(243,172,12)" fg:x="36592" fg:w="435"/><text x="82.7836%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.4712%" y="165" width="0.0248%" height="15" fill="rgb(236,150,49)" fg:x="37027" fg:w="11"/><text x="83.7642%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.4960%" y="165" width="0.0248%" height="15" fill="rgb(225,197,26)" fg:x="37038" fg:w="11"/><text x="83.7890%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="83.5208%" y="149" width="0.2660%" height="15" fill="rgb(214,17,42)" fg:x="37049" fg:w="118"/><text x="83.8138%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.7868%" y="149" width="0.2029%" height="15" fill="rgb(224,165,40)" fg:x="37167" fg:w="90"/><text x="84.0798%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="83.9897%" y="149" width="0.2480%" height="15" fill="rgb(246,100,4)" fg:x="37257" fg:w="110"/><text x="84.2827%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="84.2377%" y="149" width="0.1240%" height="15" fill="rgb(222,103,0)" fg:x="37367" fg:w="55"/><text x="84.5307%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 instructions, 1.00%)</title><rect x="83.5208%" y="165" width="0.9987%" height="15" fill="rgb(227,189,26)" fg:x="37049" fg:w="443"/><text x="83.8138%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.5195%" y="149" width="0.0631%" height="15" fill="rgb(214,202,17)" fg:x="37492" fg:w="28"/><text x="84.8125%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.5826%" y="149" width="0.0338%" height="15" fill="rgb(229,111,3)" fg:x="37520" fg:w="15"/><text x="84.8756%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.6164%" y="149" width="0.0338%" height="15" fill="rgb(229,172,15)" fg:x="37535" fg:w="15"/><text x="84.9094%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="84.6502%" y="133" width="0.1555%" height="15" fill="rgb(230,224,35)" fg:x="37550" fg:w="69"/><text x="84.9432%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="84.8058%" y="133" width="0.1578%" height="15" fill="rgb(251,141,6)" fg:x="37619" fg:w="70"/><text x="85.0988%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="84.9636%" y="133" width="0.1420%" height="15" fill="rgb(225,208,6)" fg:x="37689" fg:w="63"/><text x="85.2566%" y="143.50"></text></g><g><title>binread::BinRead::read (246 instructions, 0.55%)</title><rect x="84.6502%" y="149" width="0.5546%" height="15" fill="rgb(246,181,16)" fg:x="37550" fg:w="246"/><text x="84.9432%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.11%)</title><rect x="85.2048%" y="149" width="0.1150%" height="15" fill="rgb(227,129,36)" fg:x="37796" fg:w="51"/><text x="85.4978%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.3198%" y="149" width="0.1713%" height="15" fill="rgb(248,117,24)" fg:x="37847" fg:w="76"/><text x="85.6127%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.24%)</title><rect x="85.4911%" y="149" width="0.2367%" height="15" fill="rgb(214,185,35)" fg:x="37923" fg:w="105"/><text x="85.7841%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.32%)</title><rect x="85.7278%" y="149" width="0.3246%" height="15" fill="rgb(236,150,34)" fg:x="38028" fg:w="144"/><text x="86.0208%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (812 instructions, 1.83%)</title><rect x="84.5195%" y="165" width="1.8305%" height="15" fill="rgb(243,228,27)" fg:x="37492" fg:w="812"/><text x="84.8125%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.3500%" y="165" width="0.0248%" height="15" fill="rgb(245,77,44)" fg:x="38304" fg:w="11"/><text x="86.6430%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.3748%" y="165" width="0.0248%" height="15" fill="rgb(235,214,42)" fg:x="38315" fg:w="11"/><text x="86.6678%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="86.3996%" y="149" width="0.1713%" height="15" fill="rgb(221,74,3)" fg:x="38326" fg:w="76"/><text x="86.6926%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.5709%" y="149" width="0.2029%" height="15" fill="rgb(206,121,29)" fg:x="38402" fg:w="90"/><text x="86.8639%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.7738%" y="149" width="0.0361%" height="15" fill="rgb(249,131,53)" fg:x="38492" fg:w="16"/><text x="87.0668%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="86.8099%" y="149" width="0.2480%" height="15" fill="rgb(236,170,29)" fg:x="38508" fg:w="110"/><text x="87.1029%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="87.0579%" y="149" width="0.1240%" height="15" fill="rgb(247,96,15)" fg:x="38618" fg:w="55"/><text x="87.3508%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 0.95%)</title><rect x="86.3996%" y="165" width="0.9513%" height="15" fill="rgb(211,210,7)" fg:x="38326" fg:w="422"/><text x="86.6926%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.3509%" y="165" width="0.0631%" height="15" fill="rgb(240,88,50)" fg:x="38748" fg:w="28"/><text x="87.6439%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.4141%" y="165" width="0.0338%" height="15" fill="rgb(209,229,26)" fg:x="38776" fg:w="15"/><text x="87.7070%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.4479%" y="165" width="0.0338%" height="15" fill="rgb(210,68,23)" fg:x="38791" fg:w="15"/><text x="87.7408%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.4817%" y="149" width="0.0113%" height="15" fill="rgb(229,180,13)" fg:x="38806" fg:w="5"/><text x="87.7747%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.4930%" y="149" width="0.1826%" height="15" fill="rgb(236,53,44)" fg:x="38811" fg:w="81"/><text x="87.7859%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.6756%" y="149" width="0.0113%" height="15" fill="rgb(244,214,29)" fg:x="38892" fg:w="5"/><text x="87.9685%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="87.6868%" y="149" width="0.2840%" height="15" fill="rgb(220,75,29)" fg:x="38897" fg:w="126"/><text x="87.9798%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.56%)</title><rect x="87.4817%" y="165" width="0.5591%" height="15" fill="rgb(214,183,37)" fg:x="38806" fg:w="248"/><text x="87.7747%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,818 instructions, 8.61%)</title><rect x="81.6948%" y="181" width="8.6070%" height="15" fill="rgb(239,117,29)" fg:x="36239" fg:w="3818"/><text x="81.9878%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.3019%" y="165" width="0.1826%" height="15" fill="rgb(237,171,35)" fg:x="40057" fg:w="81"/><text x="90.5948%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.4845%" y="165" width="0.1826%" height="15" fill="rgb(229,178,53)" fg:x="40138" fg:w="81"/><text x="90.7774%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.45%)</title><rect x="90.3019%" y="181" width="0.4531%" height="15" fill="rgb(210,102,19)" fg:x="40057" fg:w="201"/><text x="90.5948%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7550%" y="181" width="0.0248%" height="15" fill="rgb(235,127,22)" fg:x="40258" fg:w="11"/><text x="91.0479%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7798%" y="181" width="0.0248%" height="15" fill="rgb(244,31,31)" fg:x="40269" fg:w="11"/><text x="91.0727%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="90.8046%" y="181" width="0.9243%" height="15" fill="rgb(231,43,21)" fg:x="40280" fg:w="410"/><text x="91.0975%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.7288%" y="133" width="0.1826%" height="15" fill="rgb(217,131,35)" fg:x="40690" fg:w="81"/><text x="92.0218%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.9114%" y="117" width="0.1826%" height="15" fill="rgb(221,149,4)" fg:x="40771" fg:w="81"/><text x="92.2044%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.37%)</title><rect x="92.0941%" y="101" width="0.3720%" height="15" fill="rgb(232,170,28)" fg:x="40852" fg:w="165"/><text x="92.3870%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.43%)</title><rect x="92.0941%" y="117" width="0.4328%" height="15" fill="rgb(238,56,10)" fg:x="40852" fg:w="192"/><text x="92.3870%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="92.5269%" y="117" width="0.1826%" height="15" fill="rgb(235,196,14)" fg:x="41044" fg:w="81"/><text x="92.8199%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.7095%" y="117" width="0.0248%" height="15" fill="rgb(216,45,48)" fg:x="41125" fg:w="11"/><text x="93.0025%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="92.7343%" y="117" width="0.3787%" height="15" fill="rgb(238,213,17)" fg:x="41136" fg:w="168"/><text x="93.0273%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="93.1130%" y="117" width="0.1758%" height="15" fill="rgb(212,13,2)" fg:x="41304" fg:w="78"/><text x="93.4060%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.67%)</title><rect x="91.9114%" y="133" width="1.6660%" height="15" fill="rgb(240,114,20)" fg:x="40771" fg:w="739"/><text x="92.2044%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="93.5774%" y="117" width="0.1420%" height="15" fill="rgb(228,41,40)" fg:x="41510" fg:w="63"/><text x="93.8704%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.46%)</title><rect x="93.5774%" y="133" width="0.4621%" height="15" fill="rgb(244,132,35)" fg:x="41510" fg:w="205"/><text x="93.8704%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,120 instructions, 2.52%)</title><rect x="91.7288%" y="149" width="2.5249%" height="15" fill="rgb(253,189,4)" fg:x="40690" fg:w="1120"/><text x="92.0218%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.2537%" y="149" width="0.2705%" height="15" fill="rgb(224,37,19)" fg:x="41810" fg:w="120"/><text x="94.5467%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="94.5242%" y="117" width="0.1240%" height="15" fill="rgb(235,223,18)" fg:x="41930" fg:w="55"/><text x="94.8172%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="94.6482%" y="117" width="0.1420%" height="15" fill="rgb(235,163,25)" fg:x="41985" fg:w="63"/><text x="94.9412%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.55%)</title><rect x="94.5242%" y="133" width="0.5501%" height="15" fill="rgb(217,145,28)" fg:x="41930" fg:w="244"/><text x="94.8172%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (271 instructions, 0.61%)</title><rect x="94.5242%" y="149" width="0.6109%" height="15" fill="rgb(223,223,32)" fg:x="41930" fg:w="271"/><text x="94.8172%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.1351%" y="149" width="0.0248%" height="15" fill="rgb(227,189,39)" fg:x="42201" fg:w="11"/><text x="95.4281%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,564 instructions, 3.53%)</title><rect x="91.7288%" y="165" width="3.5258%" height="15" fill="rgb(248,10,22)" fg:x="40690" fg:w="1564"/><text x="92.0218%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,598 instructions, 3.60%)</title><rect x="91.7288%" y="181" width="3.6024%" height="15" fill="rgb(248,46,39)" fg:x="40690" fg:w="1598"/><text x="92.0218%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="95.3313%" y="181" width="0.2773%" height="15" fill="rgb(248,113,48)" fg:x="42288" fg:w="123"/><text x="95.6242%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="95.6086%" y="181" width="0.1240%" height="15" fill="rgb(245,16,25)" fg:x="42411" fg:w="55"/><text x="95.9015%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="95.7325%" y="149" width="0.0271%" height="15" fill="rgb(249,152,16)" fg:x="42466" fg:w="12"/><text x="96.0255%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7596%" y="149" width="0.0248%" height="15" fill="rgb(250,16,1)" fg:x="42478" fg:w="11"/><text x="96.0526%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7844%" y="149" width="0.0248%" height="15" fill="rgb(249,138,3)" fg:x="42489" fg:w="11"/><text x="96.0774%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8092%" y="149" width="0.0248%" height="15" fill="rgb(227,71,41)" fg:x="42500" fg:w="11"/><text x="96.1022%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="95.8340%" y="149" width="0.1894%" height="15" fill="rgb(209,184,23)" fg:x="42511" fg:w="84"/><text x="96.1270%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (339 instructions, 0.76%)</title><rect x="95.7325%" y="165" width="0.7642%" height="15" fill="rgb(223,215,31)" fg:x="42466" fg:w="339"/><text x="96.0255%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="96.4968%" y="149" width="0.0721%" height="15" fill="rgb(210,146,28)" fg:x="42805" fg:w="32"/><text x="96.7897%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="96.5689%" y="101" width="0.1713%" height="15" fill="rgb(209,183,41)" fg:x="42837" fg:w="76"/><text x="96.8619%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="96.5689%" y="117" width="0.2480%" height="15" fill="rgb(209,224,45)" fg:x="42837" fg:w="110"/><text x="96.8619%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="96.5689%" y="133" width="0.3945%" height="15" fill="rgb(224,209,51)" fg:x="42837" fg:w="175"/><text x="96.8619%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9634%" y="133" width="0.0248%" height="15" fill="rgb(223,17,39)" fg:x="43012" fg:w="11"/><text x="97.2564%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9882%" y="133" width="0.0248%" height="15" fill="rgb(234,204,37)" fg:x="43023" fg:w="11"/><text x="97.2812%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.81%)</title><rect x="96.5689%" y="149" width="0.8093%" height="15" fill="rgb(236,120,5)" fg:x="42837" fg:w="359"/><text x="96.8619%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.3782%" y="149" width="0.0676%" height="15" fill="rgb(248,97,27)" fg:x="43196" fg:w="30"/><text x="97.6712%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.4458%" y="149" width="0.0113%" height="15" fill="rgb(240,66,17)" fg:x="43226" fg:w="5"/><text x="97.7388%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (494 instructions, 1.11%)</title><rect x="96.4968%" y="165" width="1.1136%" height="15" fill="rgb(210,79,3)" fg:x="42805" fg:w="494"/><text x="96.7897%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.6104%" y="165" width="0.0113%" height="15" fill="rgb(214,176,27)" fg:x="43299" fg:w="5"/><text x="97.9034%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="97.6217%" y="165" width="0.1240%" height="15" fill="rgb(235,185,3)" fg:x="43304" fg:w="55"/><text x="97.9146%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (967 instructions, 2.18%)</title><rect x="95.7325%" y="181" width="2.1799%" height="15" fill="rgb(227,24,12)" fg:x="42466" fg:w="967"/><text x="96.0255%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (43,872 instructions, 98.90%)</title><rect x="0.3900%" y="197" width="98.9021%" height="15" fill="rgb(252,169,48)" fg:x="173" fg:w="43872"/><text x="0.6830%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2921%" y="197" width="0.0271%" height="15" fill="rgb(212,65,1)" fg:x="44045" fg:w="12"/><text x="99.5851%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3192%" y="197" width="0.1826%" height="15" fill="rgb(242,39,24)" fg:x="44057" fg:w="81"/><text x="99.6122%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="99.5018%" y="197" width="0.2773%" height="15" fill="rgb(249,32,23)" fg:x="44138" fg:w="123"/><text x="99.7948%" y="207.50"></text></g><g><title>all (44,359 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(251,195,23)" fg:x="0" fg:w="44359"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (44,359 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(236,174,8)" fg:x="0" fg:w="44359"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>