<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="44008"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0432%" height="15" fill="rgb(244,165,34)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0432%" y="197" width="0.1772%" height="15" fill="rgb(207,89,7)" fg:x="19" fg:w="78"/><text x="0.3361%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2204%" y="197" width="0.1727%" height="15" fill="rgb(244,117,36)" fg:x="97" fg:w="76"/><text x="0.5134%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3931%" y="181" width="0.1727%" height="15" fill="rgb(226,144,34)" fg:x="173" fg:w="76"/><text x="0.6861%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="0.5658%" y="165" width="0.1613%" height="15" fill="rgb(213,23,19)" fg:x="249" fg:w="71"/><text x="0.8588%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="0.7271%" y="165" width="0.9135%" height="15" fill="rgb(217,75,12)" fg:x="320" fg:w="402"/><text x="1.0201%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="1.6406%" y="165" width="0.1886%" height="15" fill="rgb(224,159,17)" fg:x="722" fg:w="83"/><text x="1.9336%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8292%" y="165" width="0.1227%" height="15" fill="rgb(217,118,1)" fg:x="805" fg:w="54"/><text x="2.1222%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9519%" y="165" width="0.1227%" height="15" fill="rgb(232,180,48)" fg:x="859" fg:w="54"/><text x="2.2449%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0746%" y="165" width="0.1227%" height="15" fill="rgb(230,27,33)" fg:x="913" fg:w="54"/><text x="2.3676%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1973%" y="165" width="0.1227%" height="15" fill="rgb(205,31,21)" fg:x="967" fg:w="54"/><text x="2.4903%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="2.3200%" y="165" width="0.1613%" height="15" fill="rgb(253,59,4)" fg:x="1021" fg:w="71"/><text x="2.6130%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4814%" y="165" width="0.1477%" height="15" fill="rgb(224,201,9)" fg:x="1092" fg:w="65"/><text x="2.7743%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="2.6291%" y="165" width="0.9135%" height="15" fill="rgb(229,206,30)" fg:x="1157" fg:w="402"/><text x="2.9220%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5425%" y="165" width="0.0364%" height="15" fill="rgb(212,67,47)" fg:x="1559" fg:w="16"/><text x="3.8355%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="3.5789%" y="149" width="0.1613%" height="15" fill="rgb(211,96,50)" fg:x="1575" fg:w="71"/><text x="3.8719%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7402%" y="117" width="0.1363%" height="15" fill="rgb(252,114,18)" fg:x="1646" fg:w="60"/><text x="4.0332%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7402%" y="133" width="0.1931%" height="15" fill="rgb(223,58,37)" fg:x="1646" fg:w="85"/><text x="4.0332%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9334%" y="85" width="0.0205%" height="15" fill="rgb(237,70,4)" fg:x="1731" fg:w="9"/><text x="4.2263%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9538%" y="69" width="0.0682%" height="15" fill="rgb(244,85,46)" fg:x="1740" fg:w="30"/><text x="4.2468%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9538%" y="85" width="0.1250%" height="15" fill="rgb(223,39,52)" fg:x="1740" fg:w="55"/><text x="4.2468%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="3.9334%" y="101" width="0.2590%" height="15" fill="rgb(218,200,14)" fg:x="1731" fg:w="114"/><text x="4.2263%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="3.9334%" y="117" width="0.3795%" height="15" fill="rgb(208,171,16)" fg:x="1731" fg:w="167"/><text x="4.2263%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="3.9334%" y="133" width="0.3908%" height="15" fill="rgb(234,200,18)" fg:x="1731" fg:w="172"/><text x="4.2263%" y="143.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="3.7402%" y="149" width="0.8362%" height="15" fill="rgb(228,45,11)" fg:x="1646" fg:w="368"/><text x="4.0332%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (560 instructions, 1.27%)</title><rect x="3.5789%" y="165" width="1.2725%" height="15" fill="rgb(237,182,11)" fg:x="1575" fg:w="560"/><text x="3.8719%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="4.8514%" y="165" width="0.1886%" height="15" fill="rgb(241,175,49)" fg:x="2135" fg:w="83"/><text x="5.1444%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="5.0400%" y="165" width="0.1841%" height="15" fill="rgb(247,38,35)" fg:x="2218" fg:w="81"/><text x="5.3330%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.2241%" y="149" width="0.1227%" height="15" fill="rgb(228,39,49)" fg:x="2299" fg:w="54"/><text x="5.5170%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="5.3468%" y="149" width="0.1772%" height="15" fill="rgb(226,101,26)" fg:x="2353" fg:w="78"/><text x="5.6397%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="5.5240%" y="133" width="0.2568%" height="15" fill="rgb(206,141,19)" fg:x="2431" fg:w="113"/><text x="5.8170%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="5.7808%" y="101" width="0.2727%" height="15" fill="rgb(211,200,13)" fg:x="2544" fg:w="120"/><text x="6.0737%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="5.7808%" y="117" width="0.3295%" height="15" fill="rgb(241,121,6)" fg:x="2544" fg:w="145"/><text x="6.0737%" y="127.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="6.1103%" y="37" width="0.2295%" height="15" fill="rgb(234,221,29)" fg:x="2689" fg:w="101"/><text x="6.4032%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="6.1103%" y="53" width="0.3090%" height="15" fill="rgb(229,136,5)" fg:x="2689" fg:w="136"/><text x="6.4032%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.48%)</title><rect x="6.1103%" y="69" width="0.4795%" height="15" fill="rgb(238,36,11)" fg:x="2689" fg:w="211"/><text x="6.4032%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.34%)</title><rect x="6.5897%" y="69" width="0.3363%" height="15" fill="rgb(251,55,41)" fg:x="2900" fg:w="148"/><text x="6.8827%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (391 instructions, 0.89%)</title><rect x="6.1103%" y="85" width="0.8885%" height="15" fill="rgb(242,34,40)" fg:x="2689" fg:w="391"/><text x="6.4032%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.9987%" y="53" width="0.0205%" height="15" fill="rgb(215,42,17)" fg:x="3080" fg:w="9"/><text x="7.2917%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.0192%" y="37" width="0.0682%" height="15" fill="rgb(207,44,46)" fg:x="3089" fg:w="30"/><text x="7.3121%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.0192%" y="53" width="0.1250%" height="15" fill="rgb(211,206,28)" fg:x="3089" fg:w="55"/><text x="7.3121%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="6.9987%" y="69" width="0.2590%" height="15" fill="rgb(237,167,16)" fg:x="3080" fg:w="114"/><text x="7.2917%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.39%)</title><rect x="6.9987%" y="85" width="0.3931%" height="15" fill="rgb(233,66,6)" fg:x="3080" fg:w="173"/><text x="7.2917%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="7.3918%" y="69" width="0.1023%" height="15" fill="rgb(246,123,29)" fg:x="3253" fg:w="45"/><text x="7.6848%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="7.3918%" y="85" width="0.1591%" height="15" fill="rgb(209,62,40)" fg:x="3253" fg:w="70"/><text x="7.6848%" y="95.50"></text></g><g><title>core::fmt::write (762 instructions, 1.73%)</title><rect x="6.1103%" y="101" width="1.7315%" height="15" fill="rgb(218,4,25)" fg:x="2689" fg:w="762"/><text x="6.4032%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (819 instructions, 1.86%)</title><rect x="6.1103%" y="117" width="1.8610%" height="15" fill="rgb(253,91,49)" fg:x="2689" fg:w="819"/><text x="6.4032%" y="127.50"></text></g><g><title>core::fmt::write (1,075 instructions, 2.44%)</title><rect x="5.7808%" y="133" width="2.4427%" height="15" fill="rgb(228,155,29)" fg:x="2544" fg:w="1075"/><text x="6.0737%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,309 instructions, 2.97%)</title><rect x="5.5240%" y="149" width="2.9745%" height="15" fill="rgb(243,57,37)" fg:x="2431" fg:w="1309"/><text x="5.8170%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.16%)</title><rect x="8.4985%" y="149" width="0.1636%" height="15" fill="rgb(244,167,17)" fg:x="3740" fg:w="72"/><text x="8.7914%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="8.6621%" y="149" width="0.1250%" height="15" fill="rgb(207,181,38)" fg:x="3812" fg:w="55"/><text x="8.9550%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="8.7870%" y="149" width="0.1477%" height="15" fill="rgb(211,8,23)" fg:x="3867" fg:w="65"/><text x="9.0800%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.9347%" y="117" width="0.1727%" height="15" fill="rgb(235,11,44)" fg:x="3932" fg:w="76"/><text x="9.2277%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="8.9347%" y="133" width="0.2500%" height="15" fill="rgb(248,18,52)" fg:x="3932" fg:w="110"/><text x="9.2277%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="8.9347%" y="149" width="0.4090%" height="15" fill="rgb(208,4,7)" fg:x="3932" fg:w="180"/><text x="9.2277%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="9.3438%" y="149" width="0.1227%" height="15" fill="rgb(240,17,39)" fg:x="4112" fg:w="54"/><text x="9.6367%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="9.4665%" y="149" width="0.1613%" height="15" fill="rgb(207,170,3)" fg:x="4166" fg:w="71"/><text x="9.7594%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.6278%" y="133" width="0.1863%" height="15" fill="rgb(236,100,52)" fg:x="4237" fg:w="82"/><text x="9.9208%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="9.8141%" y="101" width="0.2727%" height="15" fill="rgb(246,78,51)" fg:x="4319" fg:w="120"/><text x="10.1071%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="9.8141%" y="117" width="0.3295%" height="15" fill="rgb(211,17,15)" fg:x="4319" fg:w="145"/><text x="10.1071%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.18%)</title><rect x="10.1436%" y="37" width="0.1818%" height="15" fill="rgb(209,59,46)" fg:x="4464" fg:w="80"/><text x="10.4366%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.26%)</title><rect x="10.1436%" y="53" width="0.2613%" height="15" fill="rgb(210,92,25)" fg:x="4464" fg:w="115"/><text x="10.4366%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.43%)</title><rect x="10.1436%" y="69" width="0.4317%" height="15" fill="rgb(238,174,52)" fg:x="4464" fg:w="190"/><text x="10.4366%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.34%)</title><rect x="10.5753%" y="69" width="0.3363%" height="15" fill="rgb(230,73,7)" fg:x="4654" fg:w="148"/><text x="10.8683%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (370 instructions, 0.84%)</title><rect x="10.1436%" y="85" width="0.8408%" height="15" fill="rgb(243,124,40)" fg:x="4464" fg:w="370"/><text x="10.4366%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="10.9844%" y="53" width="0.0205%" height="15" fill="rgb(244,170,11)" fg:x="4834" fg:w="9"/><text x="11.2773%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.0048%" y="37" width="0.0682%" height="15" fill="rgb(207,114,54)" fg:x="4843" fg:w="30"/><text x="11.2978%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.0048%" y="53" width="0.1250%" height="15" fill="rgb(205,42,20)" fg:x="4843" fg:w="55"/><text x="11.2978%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="10.9844%" y="69" width="0.2590%" height="15" fill="rgb(230,30,28)" fg:x="4834" fg:w="114"/><text x="11.2773%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.39%)</title><rect x="10.9844%" y="85" width="0.3931%" height="15" fill="rgb(205,73,54)" fg:x="4834" fg:w="173"/><text x="11.2773%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="11.3775%" y="69" width="0.1023%" height="15" fill="rgb(254,227,23)" fg:x="5007" fg:w="45"/><text x="11.6704%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="11.3775%" y="85" width="0.1591%" height="15" fill="rgb(228,202,34)" fg:x="5007" fg:w="70"/><text x="11.6704%" y="95.50"></text></g><g><title>core::fmt::write (741 instructions, 1.68%)</title><rect x="10.1436%" y="101" width="1.6838%" height="15" fill="rgb(222,225,37)" fg:x="4464" fg:w="741"/><text x="10.4366%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (798 instructions, 1.81%)</title><rect x="10.1436%" y="117" width="1.8133%" height="15" fill="rgb(221,14,54)" fg:x="4464" fg:w="798"/><text x="10.4366%" y="127.50"></text></g><g><title>core::fmt::write (1,054 instructions, 2.40%)</title><rect x="9.8141%" y="133" width="2.3950%" height="15" fill="rgb(254,102,2)" fg:x="4319" fg:w="1054"/><text x="10.1071%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,257 instructions, 2.86%)</title><rect x="9.6278%" y="149" width="2.8563%" height="15" fill="rgb(232,104,17)" fg:x="4237" fg:w="1257"/><text x="9.9208%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.16%)</title><rect x="12.4841%" y="149" width="0.1636%" height="15" fill="rgb(250,220,14)" fg:x="5494" fg:w="72"/><text x="12.7771%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="12.6477%" y="149" width="0.1272%" height="15" fill="rgb(241,158,9)" fg:x="5566" fg:w="56"/><text x="12.9407%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="12.7750%" y="149" width="0.1477%" height="15" fill="rgb(246,9,43)" fg:x="5622" fg:w="65"/><text x="13.0679%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="12.9227%" y="149" width="0.1227%" height="15" fill="rgb(206,73,33)" fg:x="5687" fg:w="54"/><text x="13.2156%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="13.0454%" y="133" width="0.1613%" height="15" fill="rgb(222,79,8)" fg:x="5741" fg:w="71"/><text x="13.3383%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="13.2067%" y="133" width="0.1477%" height="15" fill="rgb(234,8,54)" fg:x="5812" fg:w="65"/><text x="13.4997%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="13.3544%" y="133" width="0.9135%" height="15" fill="rgb(209,134,38)" fg:x="5877" fg:w="402"/><text x="13.6474%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="14.2679%" y="133" width="0.0364%" height="15" fill="rgb(230,127,29)" fg:x="6279" fg:w="16"/><text x="14.5608%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="14.3042%" y="117" width="0.1863%" height="15" fill="rgb(242,44,41)" fg:x="6295" fg:w="82"/><text x="14.5972%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="14.4905%" y="85" width="0.1363%" height="15" fill="rgb(222,56,43)" fg:x="6377" fg:w="60"/><text x="14.7835%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="14.4905%" y="101" width="0.1931%" height="15" fill="rgb(238,39,47)" fg:x="6377" fg:w="85"/><text x="14.7835%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="14.6837%" y="53" width="0.0205%" height="15" fill="rgb(226,79,43)" fg:x="6462" fg:w="9"/><text x="14.9767%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="14.7041%" y="37" width="0.0682%" height="15" fill="rgb(242,105,53)" fg:x="6471" fg:w="30"/><text x="14.9971%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="14.7041%" y="53" width="0.1250%" height="15" fill="rgb(251,132,46)" fg:x="6471" fg:w="55"/><text x="14.9971%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="14.6837%" y="69" width="0.2590%" height="15" fill="rgb(231,77,14)" fg:x="6462" fg:w="114"/><text x="14.9767%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="14.6837%" y="85" width="0.3795%" height="15" fill="rgb(240,135,9)" fg:x="6462" fg:w="167"/><text x="14.9767%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="14.6837%" y="101" width="0.3908%" height="15" fill="rgb(248,109,14)" fg:x="6462" fg:w="172"/><text x="14.9767%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="14.4905%" y="117" width="0.8362%" height="15" fill="rgb(227,146,52)" fg:x="6377" fg:w="368"/><text x="14.7835%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.30%)</title><rect x="14.3042%" y="133" width="1.2975%" height="15" fill="rgb(232,54,3)" fg:x="6295" fg:w="571"/><text x="14.5972%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="15.6017%" y="133" width="0.1886%" height="15" fill="rgb(229,201,43)" fg:x="6866" fg:w="83"/><text x="15.8947%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="15.7903%" y="133" width="0.1272%" height="15" fill="rgb(252,161,33)" fg:x="6949" fg:w="56"/><text x="16.0833%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="15.9176%" y="117" width="0.1613%" height="15" fill="rgb(226,146,40)" fg:x="7005" fg:w="71"/><text x="16.2105%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (269 instructions, 0.61%)</title><rect x="16.0789%" y="117" width="0.6113%" height="15" fill="rgb(219,47,25)" fg:x="7076" fg:w="269"/><text x="16.3719%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="16.6901%" y="101" width="0.1613%" height="15" fill="rgb(250,135,13)" fg:x="7345" fg:w="71"/><text x="16.9831%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="16.8515%" y="101" width="0.2045%" height="15" fill="rgb(219,229,18)" fg:x="7416" fg:w="90"/><text x="17.1445%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="17.0560%" y="101" width="0.1477%" height="15" fill="rgb(217,152,27)" fg:x="7506" fg:w="65"/><text x="17.3490%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="16.6901%" y="117" width="0.6476%" height="15" fill="rgb(225,71,47)" fg:x="7345" fg:w="285"/><text x="16.9831%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="17.3378%" y="117" width="0.1477%" height="15" fill="rgb(220,139,14)" fg:x="7630" fg:w="65"/><text x="17.6307%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.85%)</title><rect x="15.9176%" y="133" width="1.8474%" height="15" fill="rgb(247,54,32)" fg:x="7005" fg:w="813"/><text x="16.2105%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.7650%" y="133" width="0.1863%" height="15" fill="rgb(252,131,39)" fg:x="7818" fg:w="82"/><text x="18.0579%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="17.9513%" y="117" width="0.1613%" height="15" fill="rgb(210,108,39)" fg:x="7900" fg:w="71"/><text x="18.2443%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (269 instructions, 0.61%)</title><rect x="18.1126%" y="117" width="0.6113%" height="15" fill="rgb(205,23,29)" fg:x="7971" fg:w="269"/><text x="18.4056%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="18.7239%" y="101" width="0.1613%" height="15" fill="rgb(246,139,46)" fg:x="8240" fg:w="71"/><text x="19.0168%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="18.8852%" y="101" width="0.2045%" height="15" fill="rgb(250,81,26)" fg:x="8311" fg:w="90"/><text x="19.1782%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.0897%" y="101" width="0.1477%" height="15" fill="rgb(214,104,7)" fg:x="8401" fg:w="65"/><text x="19.3827%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="18.7239%" y="117" width="0.6476%" height="15" fill="rgb(233,189,8)" fg:x="8240" fg:w="285"/><text x="19.0168%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.3715%" y="117" width="0.1477%" height="15" fill="rgb(228,141,17)" fg:x="8525" fg:w="65"/><text x="19.6644%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.85%)</title><rect x="17.9513%" y="133" width="1.8474%" height="15" fill="rgb(247,157,1)" fg:x="7900" fg:w="813"/><text x="18.2443%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="19.7987%" y="133" width="0.0477%" height="15" fill="rgb(249,225,5)" fg:x="8713" fg:w="21"/><text x="20.0916%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.8464%" y="133" width="0.1477%" height="15" fill="rgb(242,55,13)" fg:x="8734" fg:w="65"/><text x="20.1394%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,395 instructions, 7.71%)</title><rect x="13.0454%" y="149" width="7.7145%" height="15" fill="rgb(230,49,50)" fg:x="5741" fg:w="3395"/><text x="13.3383%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="20.7599%" y="133" width="0.1841%" height="15" fill="rgb(241,111,38)" fg:x="9136" fg:w="81"/><text x="21.0528%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="20.9939%" y="133" width="0.1772%" height="15" fill="rgb(252,155,4)" fg:x="9239" fg:w="78"/><text x="21.2869%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.46%)</title><rect x="20.7599%" y="149" width="0.4613%" height="15" fill="rgb(212,69,32)" fg:x="9136" fg:w="203"/><text x="21.0528%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="21.2211%" y="149" width="0.2727%" height="15" fill="rgb(243,107,47)" fg:x="9339" fg:w="120"/><text x="21.5141%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,807 instructions, 17.74%)</title><rect x="5.2241%" y="165" width="17.7400%" height="15" fill="rgb(247,130,12)" fg:x="2299" fg:w="7807"/><text x="5.5170%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.14%)</title><rect x="22.9640%" y="165" width="0.1432%" height="15" fill="rgb(233,74,16)" fg:x="10106" fg:w="63"/><text x="23.2570%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="23.1072%" y="165" width="0.1477%" height="15" fill="rgb(208,58,18)" fg:x="10169" fg:w="65"/><text x="23.4001%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="23.2549%" y="165" width="0.1477%" height="15" fill="rgb(242,225,1)" fg:x="10234" fg:w="65"/><text x="23.5478%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="23.4026%" y="149" width="0.9135%" height="15" fill="rgb(249,39,40)" fg:x="10299" fg:w="402"/><text x="23.6955%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="24.3160%" y="149" width="0.0364%" height="15" fill="rgb(207,72,44)" fg:x="10701" fg:w="16"/><text x="24.6090%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="24.3524%" y="133" width="0.1772%" height="15" fill="rgb(215,193,12)" fg:x="10717" fg:w="78"/><text x="24.6454%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="24.5296%" y="101" width="0.1363%" height="15" fill="rgb(248,41,39)" fg:x="10795" fg:w="60"/><text x="24.8226%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="24.5296%" y="117" width="0.1931%" height="15" fill="rgb(253,85,4)" fg:x="10795" fg:w="85"/><text x="24.8226%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="24.7228%" y="69" width="0.0205%" height="15" fill="rgb(243,70,31)" fg:x="10880" fg:w="9"/><text x="25.0157%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="24.7432%" y="53" width="0.0682%" height="15" fill="rgb(253,195,26)" fg:x="10889" fg:w="30"/><text x="25.0362%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="24.7432%" y="69" width="0.1250%" height="15" fill="rgb(243,42,11)" fg:x="10889" fg:w="55"/><text x="25.0362%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="24.7228%" y="85" width="0.2590%" height="15" fill="rgb(239,66,17)" fg:x="10880" fg:w="114"/><text x="25.0157%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="24.7228%" y="101" width="0.3795%" height="15" fill="rgb(217,132,21)" fg:x="10880" fg:w="167"/><text x="25.0157%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="24.7228%" y="117" width="0.3908%" height="15" fill="rgb(252,202,21)" fg:x="10880" fg:w="172"/><text x="25.0157%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="24.5296%" y="133" width="0.8362%" height="15" fill="rgb(233,98,36)" fg:x="10795" fg:w="368"/><text x="24.8226%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (567 instructions, 1.29%)</title><rect x="24.3524%" y="149" width="1.2884%" height="15" fill="rgb(216,153,54)" fg:x="10717" fg:w="567"/><text x="24.6454%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="25.6408%" y="149" width="0.1886%" height="15" fill="rgb(250,99,7)" fg:x="11284" fg:w="83"/><text x="25.9338%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.8294%" y="149" width="0.1841%" height="15" fill="rgb(207,56,50)" fg:x="11367" fg:w="81"/><text x="26.1224%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="26.0135%" y="133" width="0.1613%" height="15" fill="rgb(244,61,34)" fg:x="11448" fg:w="71"/><text x="26.3064%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="26.1748%" y="133" width="0.2045%" height="15" fill="rgb(241,50,38)" fg:x="11519" fg:w="90"/><text x="26.4678%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="26.3793%" y="133" width="0.1477%" height="15" fill="rgb(212,166,30)" fg:x="11609" fg:w="65"/><text x="26.6723%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="26.0135%" y="149" width="0.6476%" height="15" fill="rgb(249,127,32)" fg:x="11448" fg:w="285"/><text x="26.3064%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="26.6611%" y="149" width="0.2568%" height="15" fill="rgb(209,103,0)" fg:x="11733" fg:w="113"/><text x="26.9540%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,750 instructions, 3.98%)</title><rect x="23.4026%" y="165" width="3.9765%" height="15" fill="rgb(238,209,51)" fg:x="10299" fg:w="1750"/><text x="23.6955%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="27.3791%" y="165" width="0.1477%" height="15" fill="rgb(237,56,23)" fg:x="12049" fg:w="65"/><text x="27.6721%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.5268%" y="165" width="0.1727%" height="15" fill="rgb(215,153,46)" fg:x="12114" fg:w="76"/><text x="27.8198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.6995%" y="149" width="0.1727%" height="15" fill="rgb(224,49,31)" fg:x="12190" fg:w="76"/><text x="27.9925%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="27.6995%" y="165" width="0.3613%" height="15" fill="rgb(250,18,42)" fg:x="12190" fg:w="159"/><text x="27.9925%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.0608%" y="133" width="0.1863%" height="15" fill="rgb(215,176,39)" fg:x="12349" fg:w="82"/><text x="28.3538%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="28.0608%" y="149" width="0.2636%" height="15" fill="rgb(223,77,29)" fg:x="12349" fg:w="116"/><text x="28.3538%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.42%)</title><rect x="28.0608%" y="165" width="0.4227%" height="15" fill="rgb(234,94,52)" fg:x="12349" fg:w="186"/><text x="28.3538%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.4835%" y="165" width="0.1863%" height="15" fill="rgb(220,154,50)" fg:x="12535" fg:w="82"/><text x="28.7764%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.6698%" y="149" width="0.1863%" height="15" fill="rgb(212,11,10)" fg:x="12617" fg:w="82"/><text x="28.9628%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.37%)</title><rect x="28.6698%" y="165" width="0.3749%" height="15" fill="rgb(205,166,19)" fg:x="12617" fg:w="165"/><text x="28.9628%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.0447%" y="165" width="0.1863%" height="15" fill="rgb(244,198,16)" fg:x="12782" fg:w="82"/><text x="29.3377%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.2310%" y="149" width="0.1772%" height="15" fill="rgb(219,69,12)" fg:x="12864" fg:w="78"/><text x="29.5240%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="29.4083%" y="117" width="0.2045%" height="15" fill="rgb(245,30,7)" fg:x="12942" fg:w="90"/><text x="29.7013%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="29.4083%" y="133" width="0.2613%" height="15" fill="rgb(218,221,48)" fg:x="12942" fg:w="115"/><text x="29.7013%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="29.6696%" y="85" width="0.0205%" height="15" fill="rgb(216,66,15)" fg:x="13057" fg:w="9"/><text x="29.9626%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="29.6901%" y="69" width="0.0682%" height="15" fill="rgb(226,122,50)" fg:x="13066" fg:w="30"/><text x="29.9830%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="29.6901%" y="85" width="0.1250%" height="15" fill="rgb(239,156,16)" fg:x="13066" fg:w="55"/><text x="29.9830%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="29.6696%" y="101" width="0.2590%" height="15" fill="rgb(224,27,38)" fg:x="13057" fg:w="114"/><text x="29.9626%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="29.6696%" y="117" width="0.3795%" height="15" fill="rgb(224,39,27)" fg:x="13057" fg:w="167"/><text x="29.9626%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.41%)</title><rect x="29.6696%" y="133" width="0.4136%" height="15" fill="rgb(215,92,29)" fg:x="13057" fg:w="182"/><text x="29.9626%" y="143.50"></text></g><g><title>core::fmt::write (408 instructions, 0.93%)</title><rect x="29.4083%" y="149" width="0.9271%" height="15" fill="rgb(207,159,16)" fg:x="12942" fg:w="408"/><text x="29.7013%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (607 instructions, 1.38%)</title><rect x="29.2310%" y="165" width="1.3793%" height="15" fill="rgb(238,163,47)" fg:x="12864" fg:w="607"/><text x="29.5240%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="30.6103%" y="149" width="0.1863%" height="15" fill="rgb(219,91,49)" fg:x="13471" fg:w="82"/><text x="30.9033%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (137 instructions, 0.31%)</title><rect x="30.6103%" y="165" width="0.3113%" height="15" fill="rgb(227,167,31)" fg:x="13471" fg:w="137"/><text x="30.9033%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="30.9217%" y="165" width="0.2159%" height="15" fill="rgb(234,80,54)" fg:x="13608" fg:w="95"/><text x="31.2146%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="31.1375%" y="165" width="0.0295%" height="15" fill="rgb(212,114,2)" fg:x="13703" fg:w="13"/><text x="31.4305%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.1671%" y="165" width="0.2159%" height="15" fill="rgb(234,50,24)" fg:x="13716" fg:w="95"/><text x="31.4600%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.3829%" y="149" width="0.1863%" height="15" fill="rgb(221,68,8)" fg:x="13811" fg:w="82"/><text x="31.6759%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (115 instructions, 0.26%)</title><rect x="31.3829%" y="165" width="0.2613%" height="15" fill="rgb(254,180,31)" fg:x="13811" fg:w="115"/><text x="31.6759%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (24 instructions, 0.05%)</title><rect x="31.6442%" y="149" width="0.0545%" height="15" fill="rgb(247,130,50)" fg:x="13926" fg:w="24"/><text x="31.9372%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (24 instructions, 0.05%)</title><rect x="31.6988%" y="149" width="0.0545%" height="15" fill="rgb(211,109,4)" fg:x="13950" fg:w="24"/><text x="31.9918%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (137 instructions, 0.31%)</title><rect x="31.6442%" y="165" width="0.3113%" height="15" fill="rgb(238,50,21)" fg:x="13926" fg:w="137"/><text x="31.9372%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="31.9556%" y="165" width="0.0341%" height="15" fill="rgb(225,57,45)" fg:x="14063" fg:w="15"/><text x="32.2485%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="32.1782%" y="149" width="0.1272%" height="15" fill="rgb(209,196,50)" fg:x="14161" fg:w="56"/><text x="32.4712%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.37%)</title><rect x="31.9896%" y="165" width="0.3727%" height="15" fill="rgb(242,140,13)" fg:x="14078" fg:w="164"/><text x="32.2826%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="32.3623%" y="165" width="0.0295%" height="15" fill="rgb(217,111,7)" fg:x="14242" fg:w="13"/><text x="32.6553%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="32.3918%" y="165" width="0.0159%" height="15" fill="rgb(253,193,51)" fg:x="14255" fg:w="7"/><text x="32.6848%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.4077%" y="165" width="0.0341%" height="15" fill="rgb(252,70,29)" fg:x="14262" fg:w="15"/><text x="32.7007%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="32.4418%" y="133" width="0.1613%" height="15" fill="rgb(232,127,12)" fg:x="14277" fg:w="71"/><text x="32.7348%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="32.6032%" y="101" width="0.2045%" height="15" fill="rgb(211,180,21)" fg:x="14348" fg:w="90"/><text x="32.8961%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="32.6032%" y="117" width="0.2613%" height="15" fill="rgb(229,72,13)" fg:x="14348" fg:w="115"/><text x="32.8961%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="32.8645%" y="69" width="0.0205%" height="15" fill="rgb(240,211,49)" fg:x="14463" fg:w="9"/><text x="33.1574%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="32.8849%" y="53" width="0.0682%" height="15" fill="rgb(219,149,40)" fg:x="14472" fg:w="30"/><text x="33.1779%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="32.8849%" y="69" width="0.1250%" height="15" fill="rgb(210,127,46)" fg:x="14472" fg:w="55"/><text x="33.1779%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="32.8645%" y="85" width="0.2590%" height="15" fill="rgb(220,106,7)" fg:x="14463" fg:w="114"/><text x="33.1574%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="32.8645%" y="101" width="0.3795%" height="15" fill="rgb(249,31,22)" fg:x="14463" fg:w="167"/><text x="33.1574%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.41%)</title><rect x="32.8645%" y="117" width="0.4136%" height="15" fill="rgb(253,1,49)" fg:x="14463" fg:w="182"/><text x="33.1574%" y="127.50"></text></g><g><title>core::fmt::write (408 instructions, 0.93%)</title><rect x="32.6032%" y="133" width="0.9271%" height="15" fill="rgb(227,144,33)" fg:x="14348" fg:w="408"/><text x="32.8961%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.36%)</title><rect x="32.4418%" y="149" width="1.3634%" height="15" fill="rgb(249,163,44)" fg:x="14277" fg:w="600"/><text x="32.7348%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="33.8052%" y="149" width="0.1863%" height="15" fill="rgb(234,15,39)" fg:x="14877" fg:w="82"/><text x="34.0982%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (793 instructions, 1.80%)</title><rect x="32.4418%" y="165" width="1.8019%" height="15" fill="rgb(207,66,16)" fg:x="14277" fg:w="793"/><text x="32.7348%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.2438%" y="133" width="0.1863%" height="15" fill="rgb(233,112,24)" fg:x="15070" fg:w="82"/><text x="34.5367%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="34.2438%" y="149" width="0.2636%" height="15" fill="rgb(230,90,22)" fg:x="15070" fg:w="116"/><text x="34.5367%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.42%)</title><rect x="34.2438%" y="165" width="0.4227%" height="15" fill="rgb(229,61,13)" fg:x="15070" fg:w="186"/><text x="34.5367%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6664%" y="165" width="0.1863%" height="15" fill="rgb(225,57,24)" fg:x="15256" fg:w="82"/><text x="34.9594%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="34.8528%" y="165" width="0.1841%" height="15" fill="rgb(208,169,48)" fg:x="15338" fg:w="81"/><text x="35.1457%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.0368%" y="165" width="0.1863%" height="15" fill="rgb(244,218,51)" fg:x="15419" fg:w="82"/><text x="35.3298%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.2231%" y="165" width="0.1863%" height="15" fill="rgb(214,148,10)" fg:x="15501" fg:w="82"/><text x="35.5161%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.4095%" y="149" width="0.1841%" height="15" fill="rgb(225,174,27)" fg:x="15583" fg:w="81"/><text x="35.7024%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 instructions, 0.25%)</title><rect x="35.4095%" y="165" width="0.2545%" height="15" fill="rgb(230,96,26)" fg:x="15583" fg:w="112"/><text x="35.7024%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="35.6640%" y="149" width="0.1432%" height="15" fill="rgb(232,10,30)" fg:x="15695" fg:w="63"/><text x="35.9569%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.38%)</title><rect x="35.6640%" y="165" width="0.3772%" height="15" fill="rgb(222,8,50)" fg:x="15695" fg:w="166"/><text x="35.9569%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="36.0412%" y="165" width="0.1841%" height="15" fill="rgb(213,81,27)" fg:x="15861" fg:w="81"/><text x="36.3341%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.91%)</title><rect x="36.2252%" y="165" width="0.9067%" height="15" fill="rgb(245,50,10)" fg:x="15942" fg:w="399"/><text x="36.5182%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.91%)</title><rect x="37.1319%" y="165" width="0.9067%" height="15" fill="rgb(216,100,18)" fg:x="16341" fg:w="399"/><text x="37.4249%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,295 instructions, 41.57%)</title><rect x="0.5658%" y="181" width="41.5720%" height="15" fill="rgb(236,147,54)" fg:x="249" fg:w="18295"/><text x="0.8588%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="42.1378%" y="181" width="0.8044%" height="15" fill="rgb(205,143,26)" fg:x="18544" fg:w="354"/><text x="42.4308%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="42.9422%" y="165" width="0.0273%" height="15" fill="rgb(236,26,9)" fg:x="18898" fg:w="12"/><text x="43.2352%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="42.9422%" y="181" width="0.1136%" height="15" fill="rgb(221,165,53)" fg:x="18898" fg:w="50"/><text x="43.2352%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="43.0558%" y="165" width="0.1250%" height="15" fill="rgb(214,110,17)" fg:x="18948" fg:w="55"/><text x="43.3488%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.36%)</title><rect x="43.0558%" y="181" width="0.3613%" height="15" fill="rgb(237,197,12)" fg:x="18948" fg:w="159"/><text x="43.3488%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="43.4171%" y="165" width="0.0273%" height="15" fill="rgb(205,84,17)" fg:x="19107" fg:w="12"/><text x="43.7101%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="43.4444%" y="149" width="0.1204%" height="15" fill="rgb(237,18,45)" fg:x="19119" fg:w="53"/><text x="43.7373%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="43.5648%" y="149" width="0.6090%" height="15" fill="rgb(221,87,14)" fg:x="19172" fg:w="268"/><text x="43.8578%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.1738%" y="149" width="0.3681%" height="15" fill="rgb(238,186,15)" fg:x="19440" fg:w="162"/><text x="44.4668%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.64%)</title><rect x="43.4444%" y="165" width="1.6361%" height="15" fill="rgb(208,115,11)" fg:x="19119" fg:w="720"/><text x="43.7373%" y="175.50"></text></g><g><title>candid::types::internal::env_add (940 instructions, 2.14%)</title><rect x="43.4171%" y="181" width="2.1360%" height="15" fill="rgb(254,175,0)" fg:x="19107" fg:w="940"/><text x="43.7101%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.5531%" y="181" width="0.1772%" height="15" fill="rgb(227,24,42)" fg:x="20047" fg:w="78"/><text x="45.8461%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.7303%" y="181" width="0.1727%" height="15" fill="rgb(223,211,37)" fg:x="20125" fg:w="76"/><text x="46.0233%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.9030%" y="181" width="0.1772%" height="15" fill="rgb(235,49,27)" fg:x="20201" fg:w="78"/><text x="46.1960%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="46.0803%" y="149" width="0.0273%" height="15" fill="rgb(254,97,51)" fg:x="20279" fg:w="12"/><text x="46.3732%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.1075%" y="133" width="0.1204%" height="15" fill="rgb(249,51,40)" fg:x="20291" fg:w="53"/><text x="46.4005%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="46.2280%" y="133" width="0.6953%" height="15" fill="rgb(210,128,45)" fg:x="20344" fg:w="306"/><text x="46.5209%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="46.9233%" y="133" width="0.1636%" height="15" fill="rgb(224,137,50)" fg:x="20650" fg:w="72"/><text x="47.2163%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="46.1075%" y="149" width="1.5179%" height="15" fill="rgb(242,15,9)" fg:x="20291" fg:w="668"/><text x="46.4005%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 1.81%)</title><rect x="46.0803%" y="165" width="1.8065%" height="15" fill="rgb(233,187,41)" fg:x="20279" fg:w="795"/><text x="46.3732%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="47.8867%" y="165" width="0.1727%" height="15" fill="rgb(227,2,29)" fg:x="21074" fg:w="76"/><text x="48.1797%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="48.0594%" y="149" width="0.0273%" height="15" fill="rgb(222,70,3)" fg:x="21150" fg:w="12"/><text x="48.3524%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="48.0867%" y="133" width="0.1204%" height="15" fill="rgb(213,11,42)" fg:x="21162" fg:w="53"/><text x="48.3797%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="48.2071%" y="133" width="0.6953%" height="15" fill="rgb(225,150,9)" fg:x="21215" fg:w="306"/><text x="48.5001%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="48.9025%" y="133" width="0.1636%" height="15" fill="rgb(230,162,45)" fg:x="21521" fg:w="72"/><text x="49.1954%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="48.0867%" y="149" width="1.5179%" height="15" fill="rgb(222,14,52)" fg:x="21162" fg:w="668"/><text x="48.3797%" y="159.50"></text></g><g><title>candid::types::internal::env_add (888 instructions, 2.02%)</title><rect x="48.0594%" y="165" width="2.0178%" height="15" fill="rgb(254,198,14)" fg:x="21150" fg:w="888"/><text x="48.3524%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="50.0773%" y="165" width="0.1727%" height="15" fill="rgb(220,217,30)" fg:x="22038" fg:w="76"/><text x="50.3702%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="50.2500%" y="149" width="0.0273%" height="15" fill="rgb(215,146,41)" fg:x="22114" fg:w="12"/><text x="50.5429%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.2772%" y="133" width="0.1204%" height="15" fill="rgb(217,27,36)" fg:x="22126" fg:w="53"/><text x="50.5702%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="50.3977%" y="133" width="0.6953%" height="15" fill="rgb(219,218,39)" fg:x="22179" fg:w="306"/><text x="50.6906%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="51.0930%" y="133" width="0.1636%" height="15" fill="rgb(219,4,42)" fg:x="22485" fg:w="72"/><text x="51.3860%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="50.2772%" y="149" width="1.5179%" height="15" fill="rgb(249,119,36)" fg:x="22126" fg:w="668"/><text x="50.5702%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.01%)</title><rect x="51.7951%" y="149" width="1.0135%" height="15" fill="rgb(209,23,33)" fg:x="22794" fg:w="446"/><text x="52.0881%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="52.8086%" y="133" width="0.1841%" height="15" fill="rgb(211,10,0)" fg:x="23240" fg:w="81"/><text x="53.1015%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="52.8086%" y="149" width="0.2454%" height="15" fill="rgb(208,99,37)" fg:x="23240" fg:w="108"/><text x="53.1015%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 3.18%)</title><rect x="50.2500%" y="165" width="3.1835%" height="15" fill="rgb(213,132,31)" fg:x="22114" fg:w="1401"/><text x="50.5429%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.4335%" y="117" width="0.1204%" height="15" fill="rgb(243,129,40)" fg:x="23515" fg:w="53"/><text x="53.7264%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.4335%" y="133" width="0.1795%" height="15" fill="rgb(210,66,33)" fg:x="23515" fg:w="79"/><text x="53.7264%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="53.4335%" y="149" width="0.6635%" height="15" fill="rgb(209,189,4)" fg:x="23515" fg:w="292"/><text x="53.7264%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (9 instructions, 0.02%)</title><rect x="54.0970%" y="149" width="0.0205%" height="15" fill="rgb(214,107,37)" fg:x="23807" fg:w="9"/><text x="54.3900%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (15 instructions, 0.03%)</title><rect x="54.1174%" y="149" width="0.0341%" height="15" fill="rgb(245,88,54)" fg:x="23816" fg:w="15"/><text x="54.4104%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="54.1515%" y="149" width="0.0250%" height="15" fill="rgb(205,146,20)" fg:x="23831" fg:w="11"/><text x="54.4445%" y="159.50"></text></g><g><title>candid::types::internal::env_id (542 instructions, 1.23%)</title><rect x="53.4335%" y="165" width="1.2316%" height="15" fill="rgb(220,161,25)" fg:x="23515" fg:w="542"/><text x="53.7264%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,875 instructions, 8.81%)</title><rect x="46.0803%" y="181" width="8.8052%" height="15" fill="rgb(215,152,15)" fg:x="20279" fg:w="3875"/><text x="46.3732%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="54.8855%" y="181" width="0.1727%" height="15" fill="rgb(233,192,44)" fg:x="24154" fg:w="76"/><text x="55.1784%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.0582%" y="181" width="0.1727%" height="15" fill="rgb(240,170,46)" fg:x="24230" fg:w="76"/><text x="55.3511%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="55.2309%" y="149" width="0.0273%" height="15" fill="rgb(207,104,33)" fg:x="24306" fg:w="12"/><text x="55.5238%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="55.2581%" y="133" width="0.1204%" height="15" fill="rgb(219,21,39)" fg:x="24318" fg:w="53"/><text x="55.5511%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="55.3786%" y="133" width="0.2000%" height="15" fill="rgb(214,133,29)" fg:x="24371" fg:w="88"/><text x="55.6715%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="55.5785%" y="133" width="0.3681%" height="15" fill="rgb(226,93,6)" fg:x="24459" fg:w="162"/><text x="55.8715%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="55.2581%" y="149" width="1.2270%" height="15" fill="rgb(252,222,34)" fg:x="24318" fg:w="540"/><text x="55.5511%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.52%)</title><rect x="55.2309%" y="165" width="1.5156%" height="15" fill="rgb(252,92,48)" fg:x="24306" fg:w="667"/><text x="55.5238%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="56.7465%" y="165" width="0.1772%" height="15" fill="rgb(245,223,24)" fg:x="24973" fg:w="78"/><text x="57.0395%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="56.9237%" y="149" width="0.0273%" height="15" fill="rgb(205,176,3)" fg:x="25051" fg:w="12"/><text x="57.2167%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="56.9510%" y="133" width="0.1204%" height="15" fill="rgb(235,151,15)" fg:x="25063" fg:w="53"/><text x="57.2440%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="57.0714%" y="133" width="0.2000%" height="15" fill="rgb(237,209,11)" fg:x="25116" fg:w="88"/><text x="57.3644%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="57.2714%" y="133" width="0.3681%" height="15" fill="rgb(243,227,24)" fg:x="25204" fg:w="162"/><text x="57.5644%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="56.9510%" y="149" width="1.2270%" height="15" fill="rgb(239,193,16)" fg:x="25063" fg:w="540"/><text x="57.2440%" y="159.50"></text></g><g><title>candid::types::internal::env_add (760 instructions, 1.73%)</title><rect x="56.9237%" y="165" width="1.7270%" height="15" fill="rgb(231,27,9)" fg:x="25051" fg:w="760"/><text x="57.2167%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="58.6507%" y="165" width="0.1727%" height="15" fill="rgb(219,169,10)" fg:x="25811" fg:w="76"/><text x="58.9437%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="58.8234%" y="149" width="0.0273%" height="15" fill="rgb(244,229,43)" fg:x="25887" fg:w="12"/><text x="59.1164%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="58.8507%" y="133" width="0.1204%" height="15" fill="rgb(254,38,20)" fg:x="25899" fg:w="53"/><text x="59.1436%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="58.9711%" y="133" width="0.2000%" height="15" fill="rgb(250,47,30)" fg:x="25952" fg:w="88"/><text x="59.2641%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="59.1711%" y="133" width="0.3681%" height="15" fill="rgb(224,124,36)" fg:x="26040" fg:w="162"/><text x="59.4640%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="58.8507%" y="149" width="1.2270%" height="15" fill="rgb(246,68,51)" fg:x="25899" fg:w="540"/><text x="59.1436%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="60.0777%" y="149" width="0.1863%" height="15" fill="rgb(253,43,49)" fg:x="26439" fg:w="82"/><text x="60.3707%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="60.2640%" y="149" width="0.1909%" height="15" fill="rgb(219,54,36)" fg:x="26521" fg:w="84"/><text x="60.5570%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="60.4549%" y="133" width="0.1204%" height="15" fill="rgb(227,133,34)" fg:x="26605" fg:w="53"/><text x="60.7479%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="60.5753%" y="133" width="0.6953%" height="15" fill="rgb(247,227,15)" fg:x="26658" fg:w="306"/><text x="60.8683%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="61.2707%" y="133" width="0.1636%" height="15" fill="rgb(229,96,14)" fg:x="26964" fg:w="72"/><text x="61.5636%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.9728%" y="133" width="0.1204%" height="15" fill="rgb(220,79,17)" fg:x="27273" fg:w="53"/><text x="62.2658%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="62.0933%" y="133" width="0.6090%" height="15" fill="rgb(205,131,53)" fg:x="27326" fg:w="268"/><text x="62.3862%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="62.7022%" y="133" width="0.3681%" height="15" fill="rgb(209,50,29)" fg:x="27594" fg:w="162"/><text x="62.9952%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.6089%" y="133" width="0.1204%" height="15" fill="rgb(245,86,46)" fg:x="27993" fg:w="53"/><text x="63.9019%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="63.7293%" y="133" width="0.2000%" height="15" fill="rgb(235,66,46)" fg:x="28046" fg:w="88"/><text x="64.0223%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="63.9293%" y="133" width="0.3681%" height="15" fill="rgb(232,148,31)" fg:x="28134" fg:w="162"/><text x="64.2223%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,928 instructions, 4.38%)</title><rect x="60.4549%" y="149" width="4.3810%" height="15" fill="rgb(217,149,8)" fg:x="26605" fg:w="1928"/><text x="60.7479%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="64.8359%" y="149" width="0.1841%" height="15" fill="rgb(209,183,11)" fg:x="28533" fg:w="81"/><text x="65.1289%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="65.0200%" y="149" width="0.1545%" height="15" fill="rgb(208,55,20)" fg:x="28614" fg:w="68"/><text x="65.3130%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.1745%" y="133" width="0.1841%" height="15" fill="rgb(218,39,14)" fg:x="28682" fg:w="81"/><text x="65.4675%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="65.1745%" y="149" width="0.2454%" height="15" fill="rgb(216,169,33)" fg:x="28682" fg:w="108"/><text x="65.4675%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,527 instructions, 8.01%)</title><rect x="58.8234%" y="165" width="8.0145%" height="15" fill="rgb(233,80,24)" fg:x="25887" fg:w="3527"/><text x="59.1164%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="66.8378%" y="117" width="0.1204%" height="15" fill="rgb(213,179,31)" fg:x="29414" fg:w="53"/><text x="67.1308%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="66.8378%" y="133" width="0.1795%" height="15" fill="rgb(209,19,5)" fg:x="29414" fg:w="79"/><text x="67.1308%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.5014%" y="117" width="0.1204%" height="15" fill="rgb(219,18,35)" fg:x="29706" fg:w="53"/><text x="67.7943%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="67.5014%" y="133" width="0.1795%" height="15" fill="rgb(209,169,16)" fg:x="29706" fg:w="79"/><text x="67.7943%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.33%)</title><rect x="66.8378%" y="149" width="1.3270%" height="15" fill="rgb(245,90,51)" fg:x="29414" fg:w="584"/><text x="67.1308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="68.1649%" y="149" width="0.1863%" height="15" fill="rgb(220,99,45)" fg:x="29998" fg:w="82"/><text x="68.4578%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="68.3512%" y="149" width="0.1909%" height="15" fill="rgb(249,89,25)" fg:x="30080" fg:w="84"/><text x="68.6442%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.5421%" y="117" width="0.1204%" height="15" fill="rgb(239,193,0)" fg:x="30164" fg:w="53"/><text x="68.8351%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="68.5421%" y="133" width="0.1795%" height="15" fill="rgb(231,126,1)" fg:x="30164" fg:w="79"/><text x="68.8351%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.2056%" y="117" width="0.1204%" height="15" fill="rgb(243,166,3)" fg:x="30456" fg:w="53"/><text x="69.4986%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="69.2056%" y="133" width="0.1795%" height="15" fill="rgb(223,22,34)" fg:x="30456" fg:w="79"/><text x="69.4986%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.8691%" y="117" width="0.1204%" height="15" fill="rgb(251,52,51)" fg:x="30748" fg:w="53"/><text x="70.1621%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="69.9895%" y="117" width="0.3499%" height="15" fill="rgb(221,165,28)" fg:x="30801" fg:w="154"/><text x="70.2825%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.3395%" y="101" width="0.1204%" height="15" fill="rgb(218,121,47)" fg:x="30955" fg:w="53"/><text x="70.6325%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="70.3395%" y="117" width="0.1795%" height="15" fill="rgb(209,120,9)" fg:x="30955" fg:w="79"/><text x="70.6325%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (355 instructions, 0.81%)</title><rect x="69.8691%" y="133" width="0.8067%" height="15" fill="rgb(236,68,12)" fg:x="30748" fg:w="355"/><text x="70.1621%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,152 instructions, 2.62%)</title><rect x="68.5421%" y="149" width="2.6177%" height="15" fill="rgb(225,194,26)" fg:x="30164" fg:w="1152"/><text x="68.8351%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="71.1598%" y="149" width="0.1772%" height="15" fill="rgb(231,84,39)" fg:x="31316" fg:w="78"/><text x="71.4528%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,746 instructions, 6.24%)</title><rect x="66.8378%" y="165" width="6.2398%" height="15" fill="rgb(210,11,45)" fg:x="29414" fg:w="2746"/><text x="67.1308%" y="175.50">candid:..</text></g><g><title>candid::types::CandidType::ty (7,951 instructions, 18.07%)</title><rect x="55.2309%" y="181" width="18.0672%" height="15" fill="rgb(224,54,52)" fg:x="24306" fg:w="7951"/><text x="55.5238%" y="191.50">candid::types::CandidTyp..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="73.2980%" y="181" width="0.1772%" height="15" fill="rgb(238,102,14)" fg:x="32257" fg:w="78"/><text x="73.5910%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.4753%" y="165" width="0.0273%" height="15" fill="rgb(243,160,52)" fg:x="32335" fg:w="12"/><text x="73.7682%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.5025%" y="149" width="0.1204%" height="15" fill="rgb(216,114,19)" fg:x="32347" fg:w="53"/><text x="73.7955%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="73.6230%" y="149" width="0.6090%" height="15" fill="rgb(244,166,37)" fg:x="32400" fg:w="268"/><text x="73.9159%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="74.2320%" y="149" width="0.3681%" height="15" fill="rgb(246,29,44)" fg:x="32668" fg:w="162"/><text x="74.5249%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.64%)</title><rect x="73.5025%" y="165" width="1.6361%" height="15" fill="rgb(215,56,53)" fg:x="32347" fg:w="720"/><text x="73.7955%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.92%)</title><rect x="75.1386%" y="165" width="0.9180%" height="15" fill="rgb(217,60,2)" fg:x="33067" fg:w="404"/><text x="75.4316%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="76.0566%" y="149" width="0.1841%" height="15" fill="rgb(207,26,24)" fg:x="33471" fg:w="81"/><text x="76.3496%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.0566%" y="165" width="0.2454%" height="15" fill="rgb(252,210,15)" fg:x="33471" fg:w="108"/><text x="76.3496%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,411 instructions, 3.21%)</title><rect x="73.4753%" y="181" width="3.2062%" height="15" fill="rgb(253,209,26)" fg:x="32335" fg:w="1411"/><text x="73.7682%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.6815%" y="133" width="0.1204%" height="15" fill="rgb(238,170,14)" fg:x="33746" fg:w="53"/><text x="76.9745%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="76.8019%" y="133" width="0.3499%" height="15" fill="rgb(216,178,15)" fg:x="33799" fg:w="154"/><text x="77.0949%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.1519%" y="117" width="0.1204%" height="15" fill="rgb(250,197,2)" fg:x="33953" fg:w="53"/><text x="77.4449%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="77.3314%" y="117" width="0.3499%" height="15" fill="rgb(212,70,42)" fg:x="34032" fg:w="154"/><text x="77.6244%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (259 instructions, 0.59%)</title><rect x="77.1519%" y="133" width="0.5885%" height="15" fill="rgb(227,213,9)" fg:x="33953" fg:w="259"/><text x="77.4449%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (550 instructions, 1.25%)</title><rect x="76.6815%" y="149" width="1.2498%" height="15" fill="rgb(245,99,25)" fg:x="33746" fg:w="550"/><text x="76.9745%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.4153%" y="133" width="0.1204%" height="15" fill="rgb(250,82,29)" fg:x="34509" fg:w="53"/><text x="78.7083%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="78.5357%" y="133" width="0.3499%" height="15" fill="rgb(241,226,54)" fg:x="34562" fg:w="154"/><text x="78.8287%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.8857%" y="117" width="0.1204%" height="15" fill="rgb(221,99,41)" fg:x="34716" fg:w="53"/><text x="79.1786%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="79.0652%" y="117" width="0.3499%" height="15" fill="rgb(213,90,21)" fg:x="34795" fg:w="154"/><text x="79.3581%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (259 instructions, 0.59%)</title><rect x="78.8857%" y="133" width="0.5885%" height="15" fill="rgb(205,208,24)" fg:x="34716" fg:w="259"/><text x="79.1786%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (550 instructions, 1.25%)</title><rect x="78.4153%" y="149" width="1.2498%" height="15" fill="rgb(246,31,12)" fg:x="34509" fg:w="550"/><text x="78.7083%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,526 instructions, 3.47%)</title><rect x="76.6815%" y="165" width="3.4676%" height="15" fill="rgb(213,154,6)" fg:x="33746" fg:w="1526"/><text x="76.9745%" y="175.50">cor..</text></g><g><title>candid::types::internal::env_id (1,833 instructions, 4.17%)</title><rect x="76.6815%" y="181" width="4.1652%" height="15" fill="rgb(222,163,29)" fg:x="33746" fg:w="1833"/><text x="76.9745%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="80.8467%" y="181" width="0.1023%" height="15" fill="rgb(227,201,8)" fg:x="35579" fg:w="45"/><text x="81.1396%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="80.9489%" y="165" width="0.1772%" height="15" fill="rgb(233,9,32)" fg:x="35624" fg:w="78"/><text x="81.2419%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="81.1875%" y="165" width="0.2727%" height="15" fill="rgb(217,54,24)" fg:x="35729" fg:w="120"/><text x="81.4805%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.57%)</title><rect x="80.9489%" y="181" width="0.5726%" height="15" fill="rgb(235,192,0)" fg:x="35624" fg:w="252"/><text x="81.2419%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.30%)</title><rect x="81.5215%" y="117" width="0.2977%" height="15" fill="rgb(235,45,9)" fg:x="35876" fg:w="131"/><text x="81.8145%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (227 instructions, 0.52%)</title><rect x="81.5215%" y="133" width="0.5158%" height="15" fill="rgb(246,42,40)" fg:x="35876" fg:w="227"/><text x="81.8145%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (301 instructions, 0.68%)</title><rect x="81.5215%" y="149" width="0.6840%" height="15" fill="rgb(248,111,24)" fg:x="35876" fg:w="301"/><text x="81.8145%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="82.2055%" y="149" width="0.0250%" height="15" fill="rgb(249,65,22)" fg:x="36177" fg:w="11"/><text x="82.4985%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (364 instructions, 0.83%)</title><rect x="81.5215%" y="165" width="0.8271%" height="15" fill="rgb(238,111,51)" fg:x="35876" fg:w="364"/><text x="81.8145%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.3487%" y="149" width="0.1727%" height="15" fill="rgb(250,118,22)" fg:x="36240" fg:w="76"/><text x="82.6416%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="82.8531%" y="149" width="0.1613%" height="15" fill="rgb(234,84,26)" fg:x="36462" fg:w="71"/><text x="83.1461%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (439 instructions, 1.00%)</title><rect x="82.3487%" y="165" width="0.9975%" height="15" fill="rgb(243,172,12)" fg:x="36240" fg:w="439"/><text x="82.6416%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3462%" y="165" width="0.0250%" height="15" fill="rgb(236,150,49)" fg:x="36679" fg:w="11"/><text x="83.6392%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3712%" y="165" width="0.0250%" height="15" fill="rgb(225,197,26)" fg:x="36690" fg:w="11"/><text x="83.6642%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="83.3962%" y="149" width="0.2568%" height="15" fill="rgb(214,17,42)" fg:x="36701" fg:w="113"/><text x="83.6892%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.6530%" y="149" width="0.2045%" height="15" fill="rgb(224,165,40)" fg:x="36814" fg:w="90"/><text x="83.9459%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="83.8575%" y="149" width="0.2500%" height="15" fill="rgb(246,100,4)" fg:x="36904" fg:w="110"/><text x="84.1504%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="84.1074%" y="149" width="0.1250%" height="15" fill="rgb(222,103,0)" fg:x="37014" fg:w="55"/><text x="84.4004%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (438 instructions, 1.00%)</title><rect x="83.3962%" y="165" width="0.9953%" height="15" fill="rgb(227,189,26)" fg:x="36701" fg:w="438"/><text x="83.6892%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.3915%" y="149" width="0.0636%" height="15" fill="rgb(214,202,17)" fg:x="37139" fg:w="28"/><text x="84.6844%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.4551%" y="149" width="0.0341%" height="15" fill="rgb(229,111,3)" fg:x="37167" fg:w="15"/><text x="84.7481%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.4892%" y="149" width="0.0341%" height="15" fill="rgb(229,172,15)" fg:x="37182" fg:w="15"/><text x="84.7822%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="84.5233%" y="133" width="0.1613%" height="15" fill="rgb(230,224,35)" fg:x="37197" fg:w="71"/><text x="84.8162%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.6846%" y="133" width="0.1477%" height="15" fill="rgb(251,141,6)" fg:x="37268" fg:w="65"/><text x="84.9776%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="84.8323%" y="133" width="0.1477%" height="15" fill="rgb(225,208,6)" fg:x="37333" fg:w="65"/><text x="85.1253%" y="143.50"></text></g><g><title>binread::BinRead::read (245 instructions, 0.56%)</title><rect x="84.5233%" y="149" width="0.5567%" height="15" fill="rgb(246,181,16)" fg:x="37197" fg:w="245"/><text x="84.8162%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.12%)</title><rect x="85.0800%" y="149" width="0.1250%" height="15" fill="rgb(227,129,36)" fg:x="37442" fg:w="55"/><text x="85.3730%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.2050%" y="149" width="0.1727%" height="15" fill="rgb(248,117,24)" fg:x="37497" fg:w="76"/><text x="85.4979%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.24%)</title><rect x="85.3777%" y="149" width="0.2386%" height="15" fill="rgb(214,185,35)" fg:x="37573" fg:w="105"/><text x="85.6706%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.33%)</title><rect x="85.6163%" y="149" width="0.3272%" height="15" fill="rgb(236,150,34)" fg:x="37678" fg:w="144"/><text x="85.9092%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (817 instructions, 1.86%)</title><rect x="84.3915%" y="165" width="1.8565%" height="15" fill="rgb(243,228,27)" fg:x="37139" fg:w="817"/><text x="84.6844%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2480%" y="165" width="0.0250%" height="15" fill="rgb(245,77,44)" fg:x="37956" fg:w="11"/><text x="86.5409%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2730%" y="165" width="0.0250%" height="15" fill="rgb(235,214,42)" fg:x="37967" fg:w="11"/><text x="86.5659%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="86.2979%" y="149" width="0.1727%" height="15" fill="rgb(221,74,3)" fg:x="37978" fg:w="76"/><text x="86.5909%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.4706%" y="149" width="0.2045%" height="15" fill="rgb(206,121,29)" fg:x="38054" fg:w="90"/><text x="86.7636%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.6751%" y="149" width="0.0364%" height="15" fill="rgb(249,131,53)" fg:x="38144" fg:w="16"/><text x="86.9681%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="86.7115%" y="149" width="0.2500%" height="15" fill="rgb(236,170,29)" fg:x="38160" fg:w="110"/><text x="87.0045%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="86.9615%" y="149" width="0.1250%" height="15" fill="rgb(247,96,15)" fg:x="38270" fg:w="55"/><text x="87.2544%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 0.96%)</title><rect x="86.2979%" y="165" width="0.9589%" height="15" fill="rgb(211,210,7)" fg:x="37978" fg:w="422"/><text x="86.5909%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.2569%" y="165" width="0.0636%" height="15" fill="rgb(240,88,50)" fg:x="38400" fg:w="28"/><text x="87.5498%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3205%" y="165" width="0.0341%" height="15" fill="rgb(209,229,26)" fg:x="38428" fg:w="15"/><text x="87.6135%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3546%" y="165" width="0.0341%" height="15" fill="rgb(210,68,23)" fg:x="38443" fg:w="15"/><text x="87.6475%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.3887%" y="149" width="0.0114%" height="15" fill="rgb(229,180,13)" fg:x="38458" fg:w="5"/><text x="87.6816%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.4000%" y="149" width="0.1841%" height="15" fill="rgb(236,53,44)" fg:x="38463" fg:w="81"/><text x="87.6930%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.5841%" y="149" width="0.0114%" height="15" fill="rgb(244,214,29)" fg:x="38544" fg:w="5"/><text x="87.8770%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="87.5954%" y="149" width="0.2863%" height="15" fill="rgb(220,75,29)" fg:x="38549" fg:w="126"/><text x="87.8884%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.56%)</title><rect x="87.3887%" y="165" width="0.5635%" height="15" fill="rgb(214,183,37)" fg:x="38458" fg:w="248"/><text x="87.6816%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,830 instructions, 8.70%)</title><rect x="81.5215%" y="181" width="8.7030%" height="15" fill="rgb(239,117,29)" fg:x="35876" fg:w="3830"/><text x="81.8145%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.2245%" y="165" width="0.1841%" height="15" fill="rgb(237,171,35)" fg:x="39706" fg:w="81"/><text x="90.5175%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.4086%" y="165" width="0.1841%" height="15" fill="rgb(229,178,53)" fg:x="39787" fg:w="81"/><text x="90.7015%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.46%)</title><rect x="90.2245%" y="181" width="0.4567%" height="15" fill="rgb(210,102,19)" fg:x="39706" fg:w="201"/><text x="90.5175%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.6812%" y="181" width="0.0250%" height="15" fill="rgb(235,127,22)" fg:x="39907" fg:w="11"/><text x="90.9742%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7062%" y="181" width="0.0250%" height="15" fill="rgb(244,31,31)" fg:x="39918" fg:w="11"/><text x="90.9992%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.93%)</title><rect x="90.7312%" y="181" width="0.9316%" height="15" fill="rgb(231,43,21)" fg:x="39929" fg:w="410"/><text x="91.0242%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.6629%" y="133" width="0.1841%" height="15" fill="rgb(217,131,35)" fg:x="40339" fg:w="81"/><text x="91.9558%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.8469%" y="117" width="0.1841%" height="15" fill="rgb(221,149,4)" fg:x="40420" fg:w="81"/><text x="92.1399%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.37%)</title><rect x="92.0310%" y="101" width="0.3749%" height="15" fill="rgb(232,170,28)" fg:x="40501" fg:w="165"/><text x="92.3240%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.44%)</title><rect x="92.0310%" y="117" width="0.4363%" height="15" fill="rgb(238,56,10)" fg:x="40501" fg:w="192"/><text x="92.3240%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="92.4673%" y="117" width="0.1841%" height="15" fill="rgb(235,196,14)" fg:x="40693" fg:w="81"/><text x="92.7602%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.6513%" y="117" width="0.0250%" height="15" fill="rgb(216,45,48)" fg:x="40774" fg:w="11"/><text x="92.9443%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="92.6763%" y="117" width="0.3817%" height="15" fill="rgb(238,213,17)" fg:x="40785" fg:w="168"/><text x="92.9693%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="93.0581%" y="117" width="0.1772%" height="15" fill="rgb(212,13,2)" fg:x="40953" fg:w="78"/><text x="93.3510%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.68%)</title><rect x="91.8469%" y="133" width="1.6792%" height="15" fill="rgb(240,114,20)" fg:x="40420" fg:w="739"/><text x="92.1399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="93.5262%" y="117" width="0.1432%" height="15" fill="rgb(228,41,40)" fg:x="41159" fg:w="63"/><text x="93.8191%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.47%)</title><rect x="93.5262%" y="133" width="0.4658%" height="15" fill="rgb(244,132,35)" fg:x="41159" fg:w="205"/><text x="93.8191%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,122 instructions, 2.55%)</title><rect x="91.6629%" y="149" width="2.5495%" height="15" fill="rgb(253,189,4)" fg:x="40339" fg:w="1122"/><text x="91.9558%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.2124%" y="149" width="0.2727%" height="15" fill="rgb(224,37,19)" fg:x="41461" fg:w="120"/><text x="94.5054%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="94.4851%" y="117" width="0.1250%" height="15" fill="rgb(235,223,18)" fg:x="41581" fg:w="55"/><text x="94.7781%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="94.6101%" y="117" width="0.1432%" height="15" fill="rgb(235,163,25)" fg:x="41636" fg:w="63"/><text x="94.9030%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.55%)</title><rect x="94.4851%" y="133" width="0.5544%" height="15" fill="rgb(217,145,28)" fg:x="41581" fg:w="244"/><text x="94.7781%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (271 instructions, 0.62%)</title><rect x="94.4851%" y="149" width="0.6158%" height="15" fill="rgb(223,223,32)" fg:x="41581" fg:w="271"/><text x="94.7781%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.1009%" y="149" width="0.0250%" height="15" fill="rgb(227,189,39)" fg:x="41852" fg:w="11"/><text x="95.3939%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,564 instructions, 3.55%)</title><rect x="91.6629%" y="165" width="3.5539%" height="15" fill="rgb(248,10,22)" fg:x="40339" fg:w="1564"/><text x="91.9558%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,601 instructions, 3.64%)</title><rect x="91.6629%" y="181" width="3.6380%" height="15" fill="rgb(248,46,39)" fg:x="40339" fg:w="1601"/><text x="91.9558%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="95.3009%" y="181" width="0.2795%" height="15" fill="rgb(248,113,48)" fg:x="41940" fg:w="123"/><text x="95.5938%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="95.5803%" y="181" width="0.1250%" height="15" fill="rgb(245,16,25)" fg:x="42063" fg:w="55"/><text x="95.8733%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="95.7053%" y="149" width="0.0273%" height="15" fill="rgb(249,152,16)" fg:x="42118" fg:w="12"/><text x="95.9983%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7326%" y="149" width="0.0250%" height="15" fill="rgb(250,16,1)" fg:x="42130" fg:w="11"/><text x="96.0256%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7576%" y="149" width="0.0250%" height="15" fill="rgb(249,138,3)" fg:x="42141" fg:w="11"/><text x="96.0506%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7826%" y="149" width="0.0250%" height="15" fill="rgb(227,71,41)" fg:x="42152" fg:w="11"/><text x="96.0756%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="95.8076%" y="149" width="0.1909%" height="15" fill="rgb(209,184,23)" fg:x="42163" fg:w="84"/><text x="96.1005%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (339 instructions, 0.77%)</title><rect x="95.7053%" y="165" width="0.7703%" height="15" fill="rgb(223,215,31)" fg:x="42118" fg:w="339"/><text x="95.9983%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="96.4756%" y="149" width="0.0727%" height="15" fill="rgb(210,146,28)" fg:x="42457" fg:w="32"/><text x="96.7686%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="96.5484%" y="101" width="0.1727%" height="15" fill="rgb(209,183,41)" fg:x="42489" fg:w="76"/><text x="96.8413%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="96.5484%" y="117" width="0.2500%" height="15" fill="rgb(209,224,45)" fg:x="42489" fg:w="110"/><text x="96.8413%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="96.5484%" y="133" width="0.4022%" height="15" fill="rgb(224,209,51)" fg:x="42489" fg:w="177"/><text x="96.8413%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9506%" y="133" width="0.0250%" height="15" fill="rgb(223,17,39)" fg:x="42666" fg:w="11"/><text x="97.2435%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9755%" y="133" width="0.0250%" height="15" fill="rgb(234,204,37)" fg:x="42677" fg:w="11"/><text x="97.2685%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 0.82%)</title><rect x="96.5484%" y="149" width="0.8203%" height="15" fill="rgb(236,120,5)" fg:x="42489" fg:w="361"/><text x="96.8413%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.3687%" y="149" width="0.0682%" height="15" fill="rgb(248,97,27)" fg:x="42850" fg:w="30"/><text x="97.6616%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.4368%" y="149" width="0.0114%" height="15" fill="rgb(240,66,17)" fg:x="42880" fg:w="5"/><text x="97.7298%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (496 instructions, 1.13%)</title><rect x="96.4756%" y="165" width="1.1271%" height="15" fill="rgb(210,79,3)" fg:x="42457" fg:w="496"/><text x="96.7686%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.6027%" y="165" width="0.0114%" height="15" fill="rgb(214,176,27)" fg:x="42953" fg:w="5"/><text x="97.8957%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="97.6141%" y="165" width="0.1250%" height="15" fill="rgb(235,185,3)" fg:x="42958" fg:w="55"/><text x="97.9070%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (969 instructions, 2.20%)</title><rect x="95.7053%" y="181" width="2.2019%" height="15" fill="rgb(227,24,12)" fg:x="42118" fg:w="969"/><text x="95.9983%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (43,521 instructions, 98.89%)</title><rect x="0.3931%" y="197" width="98.8934%" height="15" fill="rgb(252,169,48)" fg:x="173" fg:w="43521"/><text x="0.6861%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2865%" y="197" width="0.0273%" height="15" fill="rgb(212,65,1)" fg:x="43694" fg:w="12"/><text x="99.5795%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3138%" y="197" width="0.1841%" height="15" fill="rgb(242,39,24)" fg:x="43706" fg:w="81"/><text x="99.6067%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="99.4978%" y="197" width="0.2795%" height="15" fill="rgb(249,32,23)" fg:x="43787" fg:w="123"/><text x="99.7908%" y="207.50"></text></g><g><title>all (44,008 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(251,195,23)" fg:x="0" fg:w="44008"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (44,008 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(236,174,8)" fg:x="0" fg:w="44008"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>