<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="53351"><g><title>ic_cdk::setup (24 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0450%" height="15" fill="rgb(211,206,28)" fg:x="0" fg:w="24"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0450%" y="197" width="0.1556%" height="15" fill="rgb(237,167,16)" fg:x="24" fg:w="83"/><text x="0.3380%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2006%" y="197" width="0.1556%" height="15" fill="rgb(233,66,6)" fg:x="107" fg:w="83"/><text x="0.4935%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3561%" y="181" width="0.1556%" height="15" fill="rgb(246,123,29)" fg:x="190" fg:w="83"/><text x="0.6491%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="0.5117%" y="165" width="0.1537%" height="15" fill="rgb(209,62,40)" fg:x="273" fg:w="82"/><text x="0.8047%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6654%" y="149" width="0.0112%" height="15" fill="rgb(218,4,25)" fg:x="355" fg:w="6"/><text x="0.9584%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.83%)</title><rect x="0.6654%" y="165" width="0.8303%" height="15" fill="rgb(253,91,49)" fg:x="355" fg:w="443"/><text x="0.9584%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="1.4958%" y="165" width="0.1781%" height="15" fill="rgb(228,155,29)" fg:x="798" fg:w="95"/><text x="1.7887%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="1.6738%" y="165" width="0.1125%" height="15" fill="rgb(243,57,37)" fg:x="893" fg:w="60"/><text x="1.9668%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="1.7863%" y="165" width="0.1125%" height="15" fill="rgb(244,167,17)" fg:x="953" fg:w="60"/><text x="2.0793%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="1.8987%" y="165" width="0.1125%" height="15" fill="rgb(207,181,38)" fg:x="1013" fg:w="60"/><text x="2.1917%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="2.0112%" y="165" width="0.1125%" height="15" fill="rgb(211,8,23)" fg:x="1073" fg:w="60"/><text x="2.3042%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="2.1237%" y="165" width="0.1537%" height="15" fill="rgb(235,11,44)" fg:x="1133" fg:w="82"/><text x="2.4166%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="2.2774%" y="165" width="0.1312%" height="15" fill="rgb(248,18,52)" fg:x="1215" fg:w="70"/><text x="2.5703%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4086%" y="149" width="0.0112%" height="15" fill="rgb(208,4,7)" fg:x="1285" fg:w="6"/><text x="2.7015%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.83%)</title><rect x="2.4086%" y="165" width="0.8303%" height="15" fill="rgb(240,17,39)" fg:x="1285" fg:w="443"/><text x="2.7015%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.2389%" y="165" width="0.0356%" height="15" fill="rgb(207,170,3)" fg:x="1728" fg:w="19"/><text x="3.5319%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="3.2745%" y="149" width="0.1556%" height="15" fill="rgb(236,100,52)" fg:x="1747" fg:w="83"/><text x="3.5675%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.4301%" y="117" width="0.1256%" height="15" fill="rgb(246,78,51)" fg:x="1830" fg:w="67"/><text x="3.7231%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.18%)</title><rect x="3.4301%" y="133" width="0.1799%" height="15" fill="rgb(211,17,15)" fg:x="1830" fg:w="96"/><text x="3.7231%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.6101%" y="85" width="0.0206%" height="15" fill="rgb(209,59,46)" fg:x="1926" fg:w="11"/><text x="3.9030%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.6307%" y="69" width="0.0656%" height="15" fill="rgb(210,92,25)" fg:x="1937" fg:w="35"/><text x="3.9236%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="3.6307%" y="85" width="0.1200%" height="15" fill="rgb(238,174,52)" fg:x="1937" fg:w="64"/><text x="3.9236%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="3.6101%" y="101" width="0.2699%" height="15" fill="rgb(230,73,7)" fg:x="1926" fg:w="144"/><text x="3.9030%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.39%)</title><rect x="3.6101%" y="117" width="0.3917%" height="15" fill="rgb(243,124,40)" fg:x="1926" fg:w="209"/><text x="3.9030%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.41%)</title><rect x="3.6101%" y="133" width="0.4105%" height="15" fill="rgb(244,170,11)" fg:x="1926" fg:w="219"/><text x="3.9030%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 0.86%)</title><rect x="3.4301%" y="149" width="0.8566%" height="15" fill="rgb(207,114,54)" fg:x="1830" fg:w="457"/><text x="3.7231%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.27%)</title><rect x="3.2745%" y="165" width="1.2708%" height="15" fill="rgb(205,42,20)" fg:x="1747" fg:w="678"/><text x="3.5675%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="4.5454%" y="165" width="0.1781%" height="15" fill="rgb(230,30,28)" fg:x="2425" fg:w="95"/><text x="4.8383%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.11%)</title><rect x="4.7234%" y="165" width="0.1125%" height="15" fill="rgb(205,73,54)" fg:x="2520" fg:w="60"/><text x="5.0164%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="4.8359%" y="149" width="0.1125%" height="15" fill="rgb(254,227,23)" fg:x="2580" fg:w="60"/><text x="5.1289%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="4.9484%" y="149" width="0.1556%" height="15" fill="rgb(228,202,34)" fg:x="2640" fg:w="83"/><text x="5.2413%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="5.1039%" y="133" width="0.1556%" height="15" fill="rgb(222,225,37)" fg:x="2723" fg:w="83"/><text x="5.3969%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="5.2595%" y="101" width="0.2455%" height="15" fill="rgb(221,14,54)" fg:x="2806" fg:w="131"/><text x="5.5525%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.30%)</title><rect x="5.2595%" y="117" width="0.2999%" height="15" fill="rgb(254,102,2)" fg:x="2806" fg:w="160"/><text x="5.5525%" y="127.50"></text></g><g><title>__rust_realloc (111 instructions, 0.21%)</title><rect x="5.5594%" y="37" width="0.2081%" height="15" fill="rgb(232,104,17)" fg:x="2966" fg:w="111"/><text x="5.8524%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.29%)</title><rect x="5.5594%" y="53" width="0.2924%" height="15" fill="rgb(250,220,14)" fg:x="2966" fg:w="156"/><text x="5.8524%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.46%)</title><rect x="5.5594%" y="69" width="0.4555%" height="15" fill="rgb(241,158,9)" fg:x="2966" fg:w="243"/><text x="5.8524%" y="79.50"></text></g><g><title>memcpy (211 instructions, 0.40%)</title><rect x="6.0149%" y="69" width="0.3955%" height="15" fill="rgb(246,9,43)" fg:x="3209" fg:w="211"/><text x="6.3079%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (494 instructions, 0.93%)</title><rect x="5.5594%" y="85" width="0.9259%" height="15" fill="rgb(206,73,33)" fg:x="2966" fg:w="494"/><text x="5.8524%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.4854%" y="53" width="0.0206%" height="15" fill="rgb(222,79,8)" fg:x="3460" fg:w="11"/><text x="6.7783%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.5060%" y="37" width="0.0656%" height="15" fill="rgb(234,8,54)" fg:x="3471" fg:w="35"/><text x="6.7989%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="6.5060%" y="53" width="0.1200%" height="15" fill="rgb(209,134,38)" fg:x="3471" fg:w="64"/><text x="6.7989%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="6.4854%" y="69" width="0.2699%" height="15" fill="rgb(230,127,29)" fg:x="3460" fg:w="144"/><text x="6.7783%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.40%)</title><rect x="6.4854%" y="85" width="0.3992%" height="15" fill="rgb(242,44,41)" fg:x="3460" fg:w="213"/><text x="6.7783%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="6.8846%" y="69" width="0.0956%" height="15" fill="rgb(222,56,43)" fg:x="3673" fg:w="51"/><text x="7.1776%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.15%)</title><rect x="6.8846%" y="85" width="0.1500%" height="15" fill="rgb(238,39,47)" fg:x="3673" fg:w="80"/><text x="7.1776%" y="95.50"></text></g><g><title>core::fmt::write (957 instructions, 1.79%)</title><rect x="5.5594%" y="101" width="1.7938%" height="15" fill="rgb(226,79,43)" fg:x="2966" fg:w="957"/><text x="5.8524%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,023 instructions, 1.92%)</title><rect x="5.5594%" y="117" width="1.9175%" height="15" fill="rgb(242,105,53)" fg:x="2966" fg:w="1023"/><text x="5.8524%" y="127.50"></text></g><g><title>core::fmt::write (1,325 instructions, 2.48%)</title><rect x="5.2595%" y="133" width="2.4836%" height="15" fill="rgb(251,132,46)" fg:x="2806" fg:w="1325"/><text x="5.5525%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,546 instructions, 2.90%)</title><rect x="5.1039%" y="149" width="2.8978%" height="15" fill="rgb(231,77,14)" fg:x="2723" fg:w="1546"/><text x="5.3969%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="8.0017%" y="149" width="0.1556%" height="15" fill="rgb(240,135,9)" fg:x="4269" fg:w="83"/><text x="8.2947%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.11%)</title><rect x="8.1573%" y="149" width="0.1125%" height="15" fill="rgb(248,109,14)" fg:x="4352" fg:w="60"/><text x="8.4503%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="8.2698%" y="149" width="0.1425%" height="15" fill="rgb(227,146,52)" fg:x="4412" fg:w="76"/><text x="8.5627%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="8.4122%" y="117" width="0.1706%" height="15" fill="rgb(232,54,3)" fg:x="4488" fg:w="91"/><text x="8.7052%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.25%)</title><rect x="8.4122%" y="133" width="0.2512%" height="15" fill="rgb(229,201,43)" fg:x="4488" fg:w="134"/><text x="8.7052%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.41%)</title><rect x="8.4122%" y="149" width="0.4105%" height="15" fill="rgb(252,161,33)" fg:x="4488" fg:w="219"/><text x="8.7052%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="8.8227%" y="149" width="0.1125%" height="15" fill="rgb(226,146,40)" fg:x="4707" fg:w="60"/><text x="9.1157%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.9352%" y="149" width="0.1556%" height="15" fill="rgb(219,47,25)" fg:x="4767" fg:w="83"/><text x="9.2281%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="9.0907%" y="133" width="0.1556%" height="15" fill="rgb(250,135,13)" fg:x="4850" fg:w="83"/><text x="9.3837%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="9.2463%" y="101" width="0.2455%" height="15" fill="rgb(219,229,18)" fg:x="4933" fg:w="131"/><text x="9.5393%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.30%)</title><rect x="9.2463%" y="117" width="0.2999%" height="15" fill="rgb(217,152,27)" fg:x="4933" fg:w="160"/><text x="9.5393%" y="127.50"></text></g><g><title>__rust_realloc (104 instructions, 0.19%)</title><rect x="9.5462%" y="37" width="0.1949%" height="15" fill="rgb(225,71,47)" fg:x="5093" fg:w="104"/><text x="9.8392%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (149 instructions, 0.28%)</title><rect x="9.5462%" y="53" width="0.2793%" height="15" fill="rgb(220,139,14)" fg:x="5093" fg:w="149"/><text x="9.8392%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (236 instructions, 0.44%)</title><rect x="9.5462%" y="69" width="0.4424%" height="15" fill="rgb(247,54,32)" fg:x="5093" fg:w="236"/><text x="9.8392%" y="79.50"></text></g><g><title>memcpy (211 instructions, 0.40%)</title><rect x="9.9886%" y="69" width="0.3955%" height="15" fill="rgb(252,131,39)" fg:x="5329" fg:w="211"/><text x="10.2815%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (487 instructions, 0.91%)</title><rect x="9.5462%" y="85" width="0.9128%" height="15" fill="rgb(210,108,39)" fg:x="5093" fg:w="487"/><text x="9.8392%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="10.4590%" y="53" width="0.0206%" height="15" fill="rgb(205,23,29)" fg:x="5580" fg:w="11"/><text x="10.7520%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="10.4797%" y="37" width="0.0656%" height="15" fill="rgb(246,139,46)" fg:x="5591" fg:w="35"/><text x="10.7726%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="10.4797%" y="53" width="0.1200%" height="15" fill="rgb(250,81,26)" fg:x="5591" fg:w="64"/><text x="10.7726%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="10.4590%" y="69" width="0.2699%" height="15" fill="rgb(214,104,7)" fg:x="5580" fg:w="144"/><text x="10.7520%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.40%)</title><rect x="10.4590%" y="85" width="0.3992%" height="15" fill="rgb(233,189,8)" fg:x="5580" fg:w="213"/><text x="10.7520%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="10.8583%" y="69" width="0.0956%" height="15" fill="rgb(228,141,17)" fg:x="5793" fg:w="51"/><text x="11.1512%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.15%)</title><rect x="10.8583%" y="85" width="0.1500%" height="15" fill="rgb(247,157,1)" fg:x="5793" fg:w="80"/><text x="11.1512%" y="95.50"></text></g><g><title>core::fmt::write (950 instructions, 1.78%)</title><rect x="9.5462%" y="101" width="1.7807%" height="15" fill="rgb(249,225,5)" fg:x="5093" fg:w="950"/><text x="9.8392%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,016 instructions, 1.90%)</title><rect x="9.5462%" y="117" width="1.9044%" height="15" fill="rgb(242,55,13)" fg:x="5093" fg:w="1016"/><text x="9.8392%" y="127.50"></text></g><g><title>core::fmt::write (1,318 instructions, 2.47%)</title><rect x="9.2463%" y="133" width="2.4704%" height="15" fill="rgb(230,49,50)" fg:x="4933" fg:w="1318"/><text x="9.5393%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,539 instructions, 2.88%)</title><rect x="9.0907%" y="149" width="2.8847%" height="15" fill="rgb(241,111,38)" fg:x="4850" fg:w="1539"/><text x="9.3837%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="11.9754%" y="149" width="0.1556%" height="15" fill="rgb(252,155,4)" fg:x="6389" fg:w="83"/><text x="12.2684%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="12.1310%" y="149" width="0.1668%" height="15" fill="rgb(212,69,32)" fg:x="6472" fg:w="89"/><text x="12.4240%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="12.2978%" y="149" width="0.1425%" height="15" fill="rgb(243,107,47)" fg:x="6561" fg:w="76"/><text x="12.5908%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.11%)</title><rect x="12.4403%" y="149" width="0.1125%" height="15" fill="rgb(247,130,12)" fg:x="6637" fg:w="60"/><text x="12.7332%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="12.5527%" y="133" width="0.1537%" height="15" fill="rgb(233,74,16)" fg:x="6697" fg:w="82"/><text x="12.8457%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="12.7064%" y="133" width="0.1312%" height="15" fill="rgb(208,58,18)" fg:x="6779" fg:w="70"/><text x="12.9994%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="12.8376%" y="117" width="0.0112%" height="15" fill="rgb(242,225,1)" fg:x="6849" fg:w="6"/><text x="13.1306%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.83%)</title><rect x="12.8376%" y="133" width="0.8303%" height="15" fill="rgb(249,39,40)" fg:x="6849" fg:w="443"/><text x="13.1306%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="13.6680%" y="133" width="0.0356%" height="15" fill="rgb(207,72,44)" fg:x="7292" fg:w="19"/><text x="13.9609%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.21%)</title><rect x="13.7036%" y="117" width="0.2137%" height="15" fill="rgb(215,193,12)" fg:x="7311" fg:w="114"/><text x="13.9966%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="13.9173%" y="85" width="0.1256%" height="15" fill="rgb(248,41,39)" fg:x="7425" fg:w="67"/><text x="14.2102%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.18%)</title><rect x="13.9173%" y="101" width="0.1799%" height="15" fill="rgb(253,85,4)" fg:x="7425" fg:w="96"/><text x="14.2102%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="14.0972%" y="53" width="0.0206%" height="15" fill="rgb(243,70,31)" fg:x="7521" fg:w="11"/><text x="14.3902%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="14.1178%" y="37" width="0.0656%" height="15" fill="rgb(253,195,26)" fg:x="7532" fg:w="35"/><text x="14.4108%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="14.1178%" y="53" width="0.1200%" height="15" fill="rgb(243,42,11)" fg:x="7532" fg:w="64"/><text x="14.4108%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="14.0972%" y="69" width="0.2699%" height="15" fill="rgb(239,66,17)" fg:x="7521" fg:w="144"/><text x="14.3902%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.39%)</title><rect x="14.0972%" y="85" width="0.3917%" height="15" fill="rgb(217,132,21)" fg:x="7521" fg:w="209"/><text x="14.3902%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.41%)</title><rect x="14.0972%" y="101" width="0.4105%" height="15" fill="rgb(252,202,21)" fg:x="7521" fg:w="219"/><text x="14.3902%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.86%)</title><rect x="13.9173%" y="117" width="0.8566%" height="15" fill="rgb(233,98,36)" fg:x="7425" fg:w="457"/><text x="14.2102%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.33%)</title><rect x="13.7036%" y="133" width="1.3289%" height="15" fill="rgb(216,153,54)" fg:x="7311" fg:w="709"/><text x="13.9966%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="15.0325%" y="133" width="0.1781%" height="15" fill="rgb(250,99,7)" fg:x="8020" fg:w="95"/><text x="15.3255%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.11%)</title><rect x="15.2106%" y="133" width="0.1125%" height="15" fill="rgb(207,56,50)" fg:x="8115" fg:w="60"/><text x="15.5036%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="15.3230%" y="117" width="0.1537%" height="15" fill="rgb(244,61,34)" fg:x="8175" fg:w="82"/><text x="15.6160%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.55%)</title><rect x="15.4767%" y="117" width="0.5511%" height="15" fill="rgb(241,50,38)" fg:x="8257" fg:w="294"/><text x="15.7697%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="16.0278%" y="101" width="0.1537%" height="15" fill="rgb(212,166,30)" fg:x="8551" fg:w="82"/><text x="16.3208%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="16.1815%" y="101" width="0.1781%" height="15" fill="rgb(249,127,32)" fg:x="8633" fg:w="95"/><text x="16.4745%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="16.3596%" y="101" width="0.1425%" height="15" fill="rgb(209,103,0)" fg:x="8728" fg:w="76"/><text x="16.6525%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.62%)</title><rect x="16.0278%" y="117" width="0.6185%" height="15" fill="rgb(238,209,51)" fg:x="8551" fg:w="330"/><text x="16.3208%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="16.6464%" y="117" width="0.1425%" height="15" fill="rgb(237,56,23)" fg:x="8881" fg:w="76"/><text x="16.9393%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 1.74%)</title><rect x="15.3230%" y="133" width="1.7394%" height="15" fill="rgb(215,153,46)" fg:x="8175" fg:w="928"/><text x="15.6160%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.29%)</title><rect x="17.0625%" y="133" width="0.2943%" height="15" fill="rgb(224,49,31)" fg:x="9103" fg:w="157"/><text x="17.3554%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="17.3568%" y="117" width="0.1537%" height="15" fill="rgb(250,18,42)" fg:x="9260" fg:w="82"/><text x="17.6497%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.55%)</title><rect x="17.5104%" y="117" width="0.5511%" height="15" fill="rgb(215,176,39)" fg:x="9342" fg:w="294"/><text x="17.8034%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="18.0615%" y="101" width="0.1537%" height="15" fill="rgb(223,77,29)" fg:x="9636" fg:w="82"/><text x="18.3545%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="18.2152%" y="101" width="0.1781%" height="15" fill="rgb(234,94,52)" fg:x="9718" fg:w="95"/><text x="18.5082%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="18.3933%" y="101" width="0.1425%" height="15" fill="rgb(220,154,50)" fg:x="9813" fg:w="76"/><text x="18.6863%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.62%)</title><rect x="18.0615%" y="117" width="0.6185%" height="15" fill="rgb(212,11,10)" fg:x="9636" fg:w="330"/><text x="18.3545%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="18.6801%" y="117" width="0.1425%" height="15" fill="rgb(205,166,19)" fg:x="9966" fg:w="76"/><text x="18.9730%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 1.74%)</title><rect x="17.3568%" y="133" width="1.7394%" height="15" fill="rgb(244,198,16)" fg:x="9260" fg:w="928"/><text x="17.6497%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.05%)</title><rect x="19.0962%" y="133" width="0.0487%" height="15" fill="rgb(219,69,12)" fg:x="10188" fg:w="26"/><text x="19.3891%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="19.1449%" y="133" width="0.1425%" height="15" fill="rgb(245,30,7)" fg:x="10214" fg:w="76"/><text x="19.4379%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (4,010 instructions, 7.52%)</title><rect x="12.5527%" y="149" width="7.5163%" height="15" fill="rgb(218,221,48)" fg:x="6697" fg:w="4010"/><text x="12.8457%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="20.0709%" y="133" width="0.1668%" height="15" fill="rgb(216,66,15)" fg:x="10708" fg:w="89"/><text x="20.3638%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="20.3108%" y="117" width="0.0506%" height="15" fill="rgb(226,122,50)" fg:x="10836" fg:w="27"/><text x="20.6037%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="20.3614%" y="117" width="0.0506%" height="15" fill="rgb(239,156,16)" fg:x="10863" fg:w="27"/><text x="20.6543%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.37%)</title><rect x="20.3108%" y="133" width="0.3693%" height="15" fill="rgb(224,27,38)" fg:x="10836" fg:w="197"/><text x="20.6037%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (364 instructions, 0.68%)</title><rect x="20.0690%" y="149" width="0.6823%" height="15" fill="rgb(224,39,27)" fg:x="10707" fg:w="364"/><text x="20.3619%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="20.7513%" y="149" width="0.1181%" height="15" fill="rgb(215,92,29)" fg:x="11071" fg:w="63"/><text x="21.0442%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (9,297 instructions, 17.43%)</title><rect x="4.8359%" y="165" width="17.4261%" height="15" fill="rgb(207,159,16)" fg:x="2580" fg:w="9297"/><text x="5.1289%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="22.2620%" y="165" width="0.1706%" height="15" fill="rgb(238,163,47)" fg:x="11877" fg:w="91"/><text x="22.5550%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="22.4326%" y="165" width="0.1425%" height="15" fill="rgb(219,91,49)" fg:x="11968" fg:w="76"/><text x="22.7255%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="22.5750%" y="165" width="0.1312%" height="15" fill="rgb(227,167,31)" fg:x="12044" fg:w="70"/><text x="22.8680%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="22.7062%" y="133" width="0.0112%" height="15" fill="rgb(234,80,54)" fg:x="12114" fg:w="6"/><text x="22.9992%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.83%)</title><rect x="22.7062%" y="149" width="0.8303%" height="15" fill="rgb(212,114,2)" fg:x="12114" fg:w="443"/><text x="22.9992%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="23.5366%" y="149" width="0.0356%" height="15" fill="rgb(234,50,24)" fg:x="12557" fg:w="19"/><text x="23.8295%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.15%)</title><rect x="23.5722%" y="133" width="0.1518%" height="15" fill="rgb(221,68,8)" fg:x="12576" fg:w="81"/><text x="23.8652%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="23.7240%" y="101" width="0.1256%" height="15" fill="rgb(254,180,31)" fg:x="12657" fg:w="67"/><text x="24.0170%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.18%)</title><rect x="23.7240%" y="117" width="0.1799%" height="15" fill="rgb(247,130,50)" fg:x="12657" fg:w="96"/><text x="24.0170%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="23.9040%" y="69" width="0.0206%" height="15" fill="rgb(211,109,4)" fg:x="12753" fg:w="11"/><text x="24.1969%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="23.9246%" y="53" width="0.0656%" height="15" fill="rgb(238,50,21)" fg:x="12764" fg:w="35"/><text x="24.2175%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="23.9246%" y="69" width="0.1200%" height="15" fill="rgb(225,57,45)" fg:x="12764" fg:w="64"/><text x="24.2175%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="23.9040%" y="85" width="0.2699%" height="15" fill="rgb(209,196,50)" fg:x="12753" fg:w="144"/><text x="24.1969%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.39%)</title><rect x="23.9040%" y="101" width="0.3917%" height="15" fill="rgb(242,140,13)" fg:x="12753" fg:w="209"/><text x="24.1969%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.41%)</title><rect x="23.9040%" y="117" width="0.4105%" height="15" fill="rgb(217,111,7)" fg:x="12753" fg:w="219"/><text x="24.1969%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.86%)</title><rect x="23.7240%" y="133" width="0.8566%" height="15" fill="rgb(253,193,51)" fg:x="12657" fg:w="457"/><text x="24.0170%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.27%)</title><rect x="23.5722%" y="149" width="1.2671%" height="15" fill="rgb(252,70,29)" fg:x="12576" fg:w="676"/><text x="23.8652%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="24.8393%" y="149" width="0.1781%" height="15" fill="rgb(232,127,12)" fg:x="13252" fg:w="95"/><text x="25.1322%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="25.0173%" y="149" width="0.1668%" height="15" fill="rgb(211,180,21)" fg:x="13347" fg:w="89"/><text x="25.3103%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="25.1842%" y="133" width="0.1537%" height="15" fill="rgb(229,72,13)" fg:x="13436" fg:w="82"/><text x="25.4771%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="25.3379%" y="133" width="0.1781%" height="15" fill="rgb(240,211,49)" fg:x="13518" fg:w="95"/><text x="25.6308%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="25.5159%" y="133" width="0.1425%" height="15" fill="rgb(219,149,40)" fg:x="13613" fg:w="76"/><text x="25.8089%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.62%)</title><rect x="25.1842%" y="149" width="0.6185%" height="15" fill="rgb(210,127,46)" fg:x="13436" fg:w="330"/><text x="25.4771%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.21%)</title><rect x="25.8027%" y="149" width="0.2137%" height="15" fill="rgb(220,106,7)" fg:x="13766" fg:w="114"/><text x="26.0957%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,006 instructions, 3.76%)</title><rect x="22.7062%" y="165" width="3.7600%" height="15" fill="rgb(249,31,22)" fg:x="12114" fg:w="2006"/><text x="22.9992%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="26.4662%" y="165" width="0.1425%" height="15" fill="rgb(253,1,49)" fg:x="14120" fg:w="76"/><text x="26.7592%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.15%)</title><rect x="26.6087%" y="165" width="0.1518%" height="15" fill="rgb(227,144,33)" fg:x="14196" fg:w="81"/><text x="26.9017%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="26.7605%" y="149" width="0.1706%" height="15" fill="rgb(249,163,44)" fg:x="14277" fg:w="91"/><text x="27.0535%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.35%)</title><rect x="26.7605%" y="165" width="0.3505%" height="15" fill="rgb(234,15,39)" fg:x="14277" fg:w="187"/><text x="27.0535%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.1110%" y="133" width="0.1706%" height="15" fill="rgb(207,66,16)" fg:x="14464" fg:w="91"/><text x="27.4040%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.25%)</title><rect x="27.1110%" y="149" width="0.2512%" height="15" fill="rgb(233,112,24)" fg:x="14464" fg:w="134"/><text x="27.4040%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.41%)</title><rect x="27.1110%" y="165" width="0.4105%" height="15" fill="rgb(230,90,22)" fg:x="14464" fg:w="219"/><text x="27.4040%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.5215%" y="165" width="0.1706%" height="15" fill="rgb(229,61,13)" fg:x="14683" fg:w="91"/><text x="27.8145%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.6921%" y="149" width="0.1706%" height="15" fill="rgb(225,57,24)" fg:x="14774" fg:w="91"/><text x="27.9850%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.35%)</title><rect x="27.6921%" y="165" width="0.3505%" height="15" fill="rgb(208,169,48)" fg:x="14774" fg:w="187"/><text x="27.9850%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="28.0426%" y="165" width="0.1706%" height="15" fill="rgb(244,218,51)" fg:x="14961" fg:w="91"/><text x="28.3356%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="28.2132%" y="149" width="0.1556%" height="15" fill="rgb(214,148,10)" fg:x="15052" fg:w="83"/><text x="28.5061%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="28.3687%" y="117" width="0.1856%" height="15" fill="rgb(225,174,27)" fg:x="15135" fg:w="99"/><text x="28.6617%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.24%)</title><rect x="28.3687%" y="133" width="0.2399%" height="15" fill="rgb(230,96,26)" fg:x="15135" fg:w="128"/><text x="28.6617%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.6086%" y="85" width="0.0206%" height="15" fill="rgb(232,10,30)" fg:x="15263" fg:w="11"/><text x="28.9016%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.6293%" y="69" width="0.0656%" height="15" fill="rgb(222,8,50)" fg:x="15274" fg:w="35"/><text x="28.9222%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="28.6293%" y="85" width="0.1200%" height="15" fill="rgb(213,81,27)" fg:x="15274" fg:w="64"/><text x="28.9222%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="28.6086%" y="101" width="0.2699%" height="15" fill="rgb(245,50,10)" fg:x="15263" fg:w="144"/><text x="28.9016%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.39%)</title><rect x="28.6086%" y="117" width="0.3917%" height="15" fill="rgb(216,100,18)" fg:x="15263" fg:w="209"/><text x="28.9016%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.43%)</title><rect x="28.6086%" y="133" width="0.4292%" height="15" fill="rgb(236,147,54)" fg:x="15263" fg:w="229"/><text x="28.9016%" y="143.50"></text></g><g><title>core::fmt::write (499 instructions, 0.94%)</title><rect x="28.3687%" y="149" width="0.9353%" height="15" fill="rgb(205,143,26)" fg:x="15135" fg:w="499"/><text x="28.6617%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (720 instructions, 1.35%)</title><rect x="28.2132%" y="165" width="1.3496%" height="15" fill="rgb(236,26,9)" fg:x="15052" fg:w="720"/><text x="28.5061%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="29.5627%" y="149" width="0.1706%" height="15" fill="rgb(221,165,53)" fg:x="15772" fg:w="91"/><text x="29.8557%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (159 instructions, 0.30%)</title><rect x="29.5627%" y="165" width="0.2980%" height="15" fill="rgb(214,110,17)" fg:x="15772" fg:w="159"/><text x="29.8557%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.19%)</title><rect x="29.8607%" y="165" width="0.1912%" height="15" fill="rgb(237,197,12)" fg:x="15931" fg:w="102"/><text x="30.1537%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="30.0519%" y="165" width="0.0281%" height="15" fill="rgb(205,84,17)" fg:x="16033" fg:w="15"/><text x="30.3449%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.19%)</title><rect x="30.0800%" y="165" width="0.1912%" height="15" fill="rgb(237,18,45)" fg:x="16048" fg:w="102"/><text x="30.3730%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="30.2712%" y="133" width="0.1706%" height="15" fill="rgb(221,87,14)" fg:x="16150" fg:w="91"/><text x="30.5642%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (132 instructions, 0.25%)</title><rect x="30.2712%" y="149" width="0.2474%" height="15" fill="rgb(238,186,15)" fg:x="16150" fg:w="132"/><text x="30.5642%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.27%)</title><rect x="30.5186%" y="133" width="0.2737%" height="15" fill="rgb(208,115,11)" fg:x="16282" fg:w="146"/><text x="30.8116%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.43%)</title><rect x="30.5186%" y="149" width="0.4311%" height="15" fill="rgb(254,175,0)" fg:x="16282" fg:w="230"/><text x="30.8116%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.27%)</title><rect x="30.9497%" y="133" width="0.2737%" height="15" fill="rgb(227,24,42)" fg:x="16512" fg:w="146"/><text x="31.2427%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (233 instructions, 0.44%)</title><rect x="30.9497%" y="149" width="0.4367%" height="15" fill="rgb(223,211,37)" fg:x="16512" fg:w="233"/><text x="31.2427%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (733 instructions, 1.37%)</title><rect x="30.2712%" y="165" width="1.3739%" height="15" fill="rgb(235,49,27)" fg:x="16150" fg:w="733"/><text x="30.5642%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="31.6451%" y="165" width="0.0281%" height="15" fill="rgb(254,97,51)" fg:x="16883" fg:w="15"/><text x="31.9381%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 instructions, 0.18%)</title><rect x="31.6733%" y="165" width="0.1837%" height="15" fill="rgb(249,51,40)" fg:x="16898" fg:w="98"/><text x="31.9662%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="31.8569%" y="165" width="0.0281%" height="15" fill="rgb(210,128,45)" fg:x="16996" fg:w="15"/><text x="32.1499%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="31.8851%" y="149" width="0.1181%" height="15" fill="rgb(224,137,50)" fg:x="17011" fg:w="63"/><text x="32.1780%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (135 instructions, 0.25%)</title><rect x="31.8851%" y="165" width="0.2530%" height="15" fill="rgb(242,15,9)" fg:x="17011" fg:w="135"/><text x="32.1780%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="32.1381%" y="133" width="0.1706%" height="15" fill="rgb(233,187,41)" fg:x="17146" fg:w="91"/><text x="32.4311%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="32.3087%" y="101" width="0.1856%" height="15" fill="rgb(227,2,29)" fg:x="17237" fg:w="99"/><text x="32.6016%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.24%)</title><rect x="32.3087%" y="117" width="0.2399%" height="15" fill="rgb(222,70,3)" fg:x="17237" fg:w="128"/><text x="32.6016%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="32.5486%" y="69" width="0.0206%" height="15" fill="rgb(213,11,42)" fg:x="17365" fg:w="11"/><text x="32.8416%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="32.5692%" y="53" width="0.0656%" height="15" fill="rgb(225,150,9)" fg:x="17376" fg:w="35"/><text x="32.8622%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.12%)</title><rect x="32.5692%" y="69" width="0.1200%" height="15" fill="rgb(230,162,45)" fg:x="17376" fg:w="64"/><text x="32.8622%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.27%)</title><rect x="32.5486%" y="85" width="0.2699%" height="15" fill="rgb(222,14,52)" fg:x="17365" fg:w="144"/><text x="32.8416%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.39%)</title><rect x="32.5486%" y="101" width="0.3917%" height="15" fill="rgb(254,198,14)" fg:x="17365" fg:w="209"/><text x="32.8416%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.43%)</title><rect x="32.5486%" y="117" width="0.4292%" height="15" fill="rgb(220,217,30)" fg:x="17365" fg:w="229"/><text x="32.8416%" y="127.50"></text></g><g><title>core::fmt::write (499 instructions, 0.94%)</title><rect x="32.3087%" y="133" width="0.9353%" height="15" fill="rgb(215,146,41)" fg:x="17237" fg:w="499"/><text x="32.6016%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (728 instructions, 1.36%)</title><rect x="32.1381%" y="149" width="1.3645%" height="15" fill="rgb(217,27,36)" fg:x="17146" fg:w="728"/><text x="32.4311%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.5027%" y="149" width="0.1706%" height="15" fill="rgb(219,218,39)" fg:x="17874" fg:w="91"/><text x="33.7956%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (945 instructions, 1.77%)</title><rect x="32.1381%" y="165" width="1.7713%" height="15" fill="rgb(219,4,42)" fg:x="17146" fg:w="945"/><text x="32.4311%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.9094%" y="133" width="0.1706%" height="15" fill="rgb(249,119,36)" fg:x="18091" fg:w="91"/><text x="34.2024%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.25%)</title><rect x="33.9094%" y="149" width="0.2512%" height="15" fill="rgb(209,23,33)" fg:x="18091" fg:w="134"/><text x="34.2024%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.41%)</title><rect x="33.9094%" y="165" width="0.4105%" height="15" fill="rgb(211,10,0)" fg:x="18091" fg:w="219"/><text x="34.2024%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.3199%" y="165" width="0.1706%" height="15" fill="rgb(208,99,37)" fg:x="18310" fg:w="91"/><text x="34.6129%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="34.4905%" y="165" width="0.1668%" height="15" fill="rgb(213,132,31)" fg:x="18401" fg:w="89"/><text x="34.7834%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.6573%" y="165" width="0.1706%" height="15" fill="rgb(243,129,40)" fg:x="18490" fg:w="91"/><text x="34.9502%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.8278%" y="165" width="0.1706%" height="15" fill="rgb(210,66,33)" fg:x="18581" fg:w="91"/><text x="35.1208%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="34.9984%" y="149" width="0.1668%" height="15" fill="rgb(209,189,4)" fg:x="18672" fg:w="89"/><text x="35.2914%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 instructions, 0.25%)</title><rect x="34.9984%" y="165" width="0.2512%" height="15" fill="rgb(214,107,37)" fg:x="18672" fg:w="134"/><text x="35.2914%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="35.2496%" y="165" width="0.1668%" height="15" fill="rgb(245,88,54)" fg:x="18806" fg:w="89"/><text x="35.5425%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="35.4164%" y="165" width="0.1668%" height="15" fill="rgb(205,146,20)" fg:x="18895" fg:w="89"/><text x="35.7094%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.73%)</title><rect x="35.5832%" y="165" width="0.7348%" height="15" fill="rgb(220,161,25)" fg:x="18984" fg:w="392"/><text x="35.8762%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.73%)</title><rect x="36.3180%" y="165" width="0.7348%" height="15" fill="rgb(215,152,15)" fg:x="19376" fg:w="392"/><text x="36.6109%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.94%)</title><rect x="37.0527%" y="165" width="0.9447%" height="15" fill="rgb(233,192,44)" fg:x="19768" fg:w="504"/><text x="37.3457%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (21,888 instructions, 41.03%)</title><rect x="0.5117%" y="181" width="41.0264%" height="15" fill="rgb(240,170,46)" fg:x="273" fg:w="21888"/><text x="0.8047%" y="191.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (344 instructions, 0.64%)</title><rect x="41.5381%" y="181" width="0.6448%" height="15" fill="rgb(207,104,33)" fg:x="22161" fg:w="344"/><text x="41.8311%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="42.1829%" y="165" width="0.0131%" height="15" fill="rgb(219,21,39)" fg:x="22505" fg:w="7"/><text x="42.4759%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.07%)</title><rect x="42.1829%" y="181" width="0.0731%" height="15" fill="rgb(214,133,29)" fg:x="22505" fg:w="39"/><text x="42.4759%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.21%)</title><rect x="42.2560%" y="181" width="0.2137%" height="15" fill="rgb(226,93,6)" fg:x="22544" fg:w="114"/><text x="42.5490%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="42.4697%" y="165" width="0.0131%" height="15" fill="rgb(252,222,34)" fg:x="22658" fg:w="7"/><text x="42.7627%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="42.4828%" y="149" width="0.1106%" height="15" fill="rgb(252,92,48)" fg:x="22665" fg:w="59"/><text x="42.7758%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.52%)</title><rect x="42.5934%" y="149" width="0.5211%" height="15" fill="rgb(245,223,24)" fg:x="22724" fg:w="278"/><text x="42.8864%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="43.1145%" y="149" width="0.3243%" height="15" fill="rgb(205,176,3)" fg:x="23002" fg:w="173"/><text x="43.4074%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.43%)</title><rect x="42.4828%" y="165" width="1.4302%" height="15" fill="rgb(235,151,15)" fg:x="22665" fg:w="763"/><text x="42.7758%" y="175.50"></text></g><g><title>candid::types::internal::env_add (981 instructions, 1.84%)</title><rect x="42.4697%" y="181" width="1.8388%" height="15" fill="rgb(237,209,11)" fg:x="22658" fg:w="981"/><text x="42.7627%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.3084%" y="181" width="0.1556%" height="15" fill="rgb(243,227,24)" fg:x="23639" fg:w="83"/><text x="44.6014%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.15%)</title><rect x="44.4640%" y="181" width="0.1518%" height="15" fill="rgb(239,193,16)" fg:x="23722" fg:w="81"/><text x="44.7570%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.21%)</title><rect x="44.6158%" y="181" width="0.2137%" height="15" fill="rgb(231,27,9)" fg:x="23803" fg:w="114"/><text x="44.9088%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="44.8295%" y="149" width="0.0131%" height="15" fill="rgb(219,169,10)" fg:x="23917" fg:w="7"/><text x="45.1225%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="44.8426%" y="133" width="0.1106%" height="15" fill="rgb(244,229,43)" fg:x="23924" fg:w="59"/><text x="45.1356%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.60%)</title><rect x="44.9532%" y="133" width="0.5961%" height="15" fill="rgb(254,38,20)" fg:x="23983" fg:w="318"/><text x="45.2462%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="45.5493%" y="133" width="0.1462%" height="15" fill="rgb(250,47,30)" fg:x="24301" fg:w="78"/><text x="45.8423%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.33%)</title><rect x="44.8426%" y="149" width="1.3271%" height="15" fill="rgb(224,124,36)" fg:x="23924" fg:w="708"/><text x="45.1356%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (833 instructions, 1.56%)</title><rect x="44.8295%" y="165" width="1.5614%" height="15" fill="rgb(246,68,51)" fg:x="23917" fg:w="833"/><text x="45.1225%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.29%)</title><rect x="46.3909%" y="165" width="0.2943%" height="15" fill="rgb(253,43,49)" fg:x="24750" fg:w="157"/><text x="46.6839%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="46.6852%" y="149" width="0.0131%" height="15" fill="rgb(219,54,36)" fg:x="24907" fg:w="7"/><text x="46.9781%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="46.6983%" y="133" width="0.1106%" height="15" fill="rgb(227,133,34)" fg:x="24914" fg:w="59"/><text x="46.9912%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.60%)</title><rect x="46.8089%" y="133" width="0.5961%" height="15" fill="rgb(247,227,15)" fg:x="24973" fg:w="318"/><text x="47.1018%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="47.4049%" y="133" width="0.1462%" height="15" fill="rgb(229,96,14)" fg:x="25291" fg:w="78"/><text x="47.6979%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.33%)</title><rect x="46.6983%" y="149" width="1.3271%" height="15" fill="rgb(220,79,17)" fg:x="24914" fg:w="708"/><text x="46.9912%" y="159.50"></text></g><g><title>candid::types::internal::env_add (926 instructions, 1.74%)</title><rect x="46.6852%" y="165" width="1.7357%" height="15" fill="rgb(205,131,53)" fg:x="24907" fg:w="926"/><text x="46.9781%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="48.4208%" y="165" width="0.1556%" height="15" fill="rgb(209,50,29)" fg:x="25833" fg:w="83"/><text x="48.7138%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="48.5764%" y="149" width="0.0131%" height="15" fill="rgb(245,86,46)" fg:x="25916" fg:w="7"/><text x="48.8694%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="48.5895%" y="133" width="0.1106%" height="15" fill="rgb(235,66,46)" fg:x="25923" fg:w="59"/><text x="48.8825%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.60%)</title><rect x="48.7001%" y="133" width="0.5961%" height="15" fill="rgb(232,148,31)" fg:x="25982" fg:w="318"/><text x="48.9931%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="49.2962%" y="133" width="0.1462%" height="15" fill="rgb(217,149,8)" fg:x="26300" fg:w="78"/><text x="49.5891%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.33%)</title><rect x="48.5895%" y="149" width="1.3271%" height="15" fill="rgb(209,183,11)" fg:x="25923" fg:w="708"/><text x="48.8825%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.92%)</title><rect x="49.9166%" y="149" width="0.9203%" height="15" fill="rgb(208,55,20)" fg:x="26631" fg:w="491"/><text x="50.2096%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="50.8369%" y="133" width="0.1668%" height="15" fill="rgb(218,39,14)" fg:x="27122" fg:w="89"/><text x="51.1299%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.25%)</title><rect x="50.8369%" y="149" width="0.2493%" height="15" fill="rgb(216,169,33)" fg:x="27122" fg:w="133"/><text x="51.1299%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,518 instructions, 2.85%)</title><rect x="48.5764%" y="165" width="2.8453%" height="15" fill="rgb(233,80,24)" fg:x="25916" fg:w="1518"/><text x="48.8694%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="51.4217%" y="117" width="0.1106%" height="15" fill="rgb(213,179,31)" fg:x="27434" fg:w="59"/><text x="51.7147%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.19%)</title><rect x="51.4217%" y="133" width="0.1912%" height="15" fill="rgb(209,19,5)" fg:x="27434" fg:w="102"/><text x="51.7147%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.61%)</title><rect x="51.4217%" y="149" width="0.6054%" height="15" fill="rgb(219,18,35)" fg:x="27434" fg:w="323"/><text x="51.7147%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.321 (27 instructions, 0.05%)</title><rect x="52.0271%" y="149" width="0.0506%" height="15" fill="rgb(209,169,16)" fg:x="27757" fg:w="27"/><text x="52.3201%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.321 (34 instructions, 0.06%)</title><rect x="52.0777%" y="149" width="0.0637%" height="15" fill="rgb(245,90,51)" fg:x="27784" fg:w="34"/><text x="52.3707%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="52.1415%" y="149" width="0.0244%" height="15" fill="rgb(220,99,45)" fg:x="27818" fg:w="13"/><text x="52.4344%" y="159.50"></text></g><g><title>candid::types::internal::env_id (624 instructions, 1.17%)</title><rect x="51.4217%" y="165" width="1.1696%" height="15" fill="rgb(249,89,25)" fg:x="27434" fg:w="624"/><text x="51.7147%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,270 instructions, 8.00%)</title><rect x="44.8295%" y="181" width="8.0036%" height="15" fill="rgb(239,193,0)" fg:x="23917" fg:w="4270"/><text x="45.1225%" y="191.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.8331%" y="181" width="0.1556%" height="15" fill="rgb(231,126,1)" fg:x="28187" fg:w="83"/><text x="53.1261%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.9887%" y="181" width="0.1556%" height="15" fill="rgb(243,166,3)" fg:x="28270" fg:w="83"/><text x="53.2817%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="53.1443%" y="149" width="0.0131%" height="15" fill="rgb(223,22,34)" fg:x="28353" fg:w="7"/><text x="53.4372%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="53.1574%" y="133" width="0.1106%" height="15" fill="rgb(251,52,51)" fg:x="28360" fg:w="59"/><text x="53.4504%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="53.2680%" y="133" width="0.1762%" height="15" fill="rgb(221,165,28)" fg:x="28419" fg:w="94"/><text x="53.5609%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="53.4442%" y="133" width="0.3243%" height="15" fill="rgb(218,121,47)" fg:x="28513" fg:w="173"/><text x="53.7371%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.09%)</title><rect x="53.1574%" y="149" width="1.0853%" height="15" fill="rgb(209,120,9)" fg:x="28360" fg:w="579"/><text x="53.4504%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (704 instructions, 1.32%)</title><rect x="53.1443%" y="165" width="1.3196%" height="15" fill="rgb(236,68,12)" fg:x="28353" fg:w="704"/><text x="53.4372%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="54.4638%" y="165" width="0.1556%" height="15" fill="rgb(225,194,26)" fg:x="29057" fg:w="83"/><text x="54.7568%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="54.6194%" y="149" width="0.0131%" height="15" fill="rgb(231,84,39)" fg:x="29140" fg:w="7"/><text x="54.9124%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="54.6325%" y="133" width="0.1106%" height="15" fill="rgb(210,11,45)" fg:x="29147" fg:w="59"/><text x="54.9255%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="54.7431%" y="133" width="0.1762%" height="15" fill="rgb(224,54,52)" fg:x="29206" fg:w="94"/><text x="55.0361%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="54.9193%" y="133" width="0.3243%" height="15" fill="rgb(238,102,14)" fg:x="29300" fg:w="173"/><text x="55.2123%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.09%)</title><rect x="54.6325%" y="149" width="1.0853%" height="15" fill="rgb(243,160,52)" fg:x="29147" fg:w="579"/><text x="54.9255%" y="159.50"></text></g><g><title>candid::types::internal::env_add (797 instructions, 1.49%)</title><rect x="54.6194%" y="165" width="1.4939%" height="15" fill="rgb(216,114,19)" fg:x="29140" fg:w="797"/><text x="54.9124%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="56.1133%" y="165" width="0.1556%" height="15" fill="rgb(244,166,37)" fg:x="29937" fg:w="83"/><text x="56.4063%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="56.2689%" y="149" width="0.0131%" height="15" fill="rgb(246,29,44)" fg:x="30020" fg:w="7"/><text x="56.5618%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="56.2820%" y="133" width="0.1106%" height="15" fill="rgb(215,56,53)" fg:x="30027" fg:w="59"/><text x="56.5750%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="56.3926%" y="133" width="0.1762%" height="15" fill="rgb(217,60,2)" fg:x="30086" fg:w="94"/><text x="56.6855%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="56.5688%" y="133" width="0.3243%" height="15" fill="rgb(207,26,24)" fg:x="30180" fg:w="173"/><text x="56.8617%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.09%)</title><rect x="56.2820%" y="149" width="1.0853%" height="15" fill="rgb(252,210,15)" fg:x="30027" fg:w="579"/><text x="56.5750%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="57.3672%" y="149" width="0.1706%" height="15" fill="rgb(253,209,26)" fg:x="30606" fg:w="91"/><text x="57.6602%" y="159.50"></text></g><g><title>memset (93 instructions, 0.17%)</title><rect x="57.5378%" y="149" width="0.1743%" height="15" fill="rgb(238,170,14)" fg:x="30697" fg:w="93"/><text x="57.8308%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="57.7121%" y="133" width="0.1106%" height="15" fill="rgb(216,178,15)" fg:x="30790" fg:w="59"/><text x="58.0051%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.52%)</title><rect x="57.8227%" y="133" width="0.5211%" height="15" fill="rgb(250,197,2)" fg:x="30849" fg:w="278"/><text x="58.1157%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="58.3438%" y="133" width="0.3243%" height="15" fill="rgb(212,70,42)" fg:x="31127" fg:w="173"/><text x="58.6368%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="59.1423%" y="133" width="0.1106%" height="15" fill="rgb(227,213,9)" fg:x="31553" fg:w="59"/><text x="59.4353%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="59.2529%" y="133" width="0.1762%" height="15" fill="rgb(245,99,25)" fg:x="31612" fg:w="94"/><text x="59.5458%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="59.4291%" y="133" width="0.3243%" height="15" fill="rgb(250,82,29)" fg:x="31706" fg:w="173"/><text x="59.7220%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="60.2275%" y="133" width="0.1106%" height="15" fill="rgb(241,226,54)" fg:x="32132" fg:w="59"/><text x="60.5205%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.60%)</title><rect x="60.3381%" y="133" width="0.5961%" height="15" fill="rgb(221,99,41)" fg:x="32191" fg:w="318"/><text x="60.6311%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="60.9342%" y="133" width="0.1462%" height="15" fill="rgb(213,90,21)" fg:x="32509" fg:w="78"/><text x="61.2272%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,050 instructions, 3.84%)</title><rect x="57.7121%" y="149" width="3.8425%" height="15" fill="rgb(205,208,24)" fg:x="30790" fg:w="2050"/><text x="58.0051%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="61.5546%" y="149" width="0.1668%" height="15" fill="rgb(246,31,12)" fg:x="32840" fg:w="89"/><text x="61.8476%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.14%)</title><rect x="61.7214%" y="149" width="0.1443%" height="15" fill="rgb(213,154,6)" fg:x="32929" fg:w="77"/><text x="62.0144%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="61.8658%" y="133" width="0.1668%" height="15" fill="rgb(222,163,29)" fg:x="33006" fg:w="89"/><text x="62.1587%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.25%)</title><rect x="61.8658%" y="149" width="0.2493%" height="15" fill="rgb(227,201,8)" fg:x="33006" fg:w="133"/><text x="62.1587%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,818 instructions, 7.16%)</title><rect x="56.2689%" y="165" width="7.1564%" height="15" fill="rgb(233,9,32)" fg:x="30020" fg:w="3818"/><text x="56.5618%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="63.4252%" y="117" width="0.1106%" height="15" fill="rgb(217,54,24)" fg:x="33838" fg:w="59"/><text x="63.7182%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.19%)</title><rect x="63.4252%" y="133" width="0.1912%" height="15" fill="rgb(235,192,0)" fg:x="33838" fg:w="102"/><text x="63.7182%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="64.0307%" y="117" width="0.1106%" height="15" fill="rgb(235,45,9)" fg:x="34161" fg:w="59"/><text x="64.3236%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.19%)</title><rect x="64.0307%" y="133" width="0.1912%" height="15" fill="rgb(246,42,40)" fg:x="34161" fg:w="102"/><text x="64.3236%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (646 instructions, 1.21%)</title><rect x="63.4252%" y="149" width="1.2108%" height="15" fill="rgb(248,111,24)" fg:x="33838" fg:w="646"/><text x="63.7182%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="64.6361%" y="149" width="0.1706%" height="15" fill="rgb(249,65,22)" fg:x="34484" fg:w="91"/><text x="64.9291%" y="159.50"></text></g><g><title>memset (93 instructions, 0.17%)</title><rect x="64.8067%" y="149" width="0.1743%" height="15" fill="rgb(238,111,51)" fg:x="34575" fg:w="93"/><text x="65.0996%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="64.9810%" y="117" width="0.1106%" height="15" fill="rgb(250,118,22)" fg:x="34668" fg:w="59"/><text x="65.2739%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.19%)</title><rect x="64.9810%" y="133" width="0.1912%" height="15" fill="rgb(234,84,26)" fg:x="34668" fg:w="102"/><text x="65.2739%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.5864%" y="117" width="0.1106%" height="15" fill="rgb(243,172,12)" fg:x="34991" fg:w="59"/><text x="65.8794%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.19%)</title><rect x="65.5864%" y="133" width="0.1912%" height="15" fill="rgb(236,150,49)" fg:x="34991" fg:w="102"/><text x="65.8794%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.1918%" y="117" width="0.1106%" height="15" fill="rgb(225,197,26)" fg:x="35314" fg:w="59"/><text x="66.4848%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="66.3024%" y="117" width="0.3074%" height="15" fill="rgb(214,17,42)" fg:x="35373" fg:w="164"/><text x="66.5954%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.6098%" y="101" width="0.1106%" height="15" fill="rgb(224,165,40)" fg:x="35537" fg:w="59"/><text x="66.9028%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (101 instructions, 0.19%)</title><rect x="66.6098%" y="117" width="0.1893%" height="15" fill="rgb(246,100,4)" fg:x="35537" fg:w="101"/><text x="66.9028%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (421 instructions, 0.79%)</title><rect x="66.1918%" y="133" width="0.7891%" height="15" fill="rgb(222,103,0)" fg:x="35314" fg:w="421"/><text x="66.4848%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,288 instructions, 2.41%)</title><rect x="64.9810%" y="149" width="2.4142%" height="15" fill="rgb(227,189,26)" fg:x="34668" fg:w="1288"/><text x="65.2739%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="67.3952%" y="149" width="0.1556%" height="15" fill="rgb(214,202,17)" fg:x="35956" fg:w="83"/><text x="67.6881%" y="159.50"></text></g><g><title>candid::types::internal::env_id (3,020 instructions, 5.66%)</title><rect x="63.4252%" y="165" width="5.6606%" height="15" fill="rgb(229,111,3)" fg:x="33838" fg:w="3020"/><text x="63.7182%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (8,634 instructions, 16.18%)</title><rect x="53.1443%" y="181" width="16.1834%" height="15" fill="rgb(229,172,15)" fg:x="28353" fg:w="8634"/><text x="53.4372%" y="191.50">candid::types::Candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="69.3277%" y="181" width="0.1556%" height="15" fill="rgb(230,224,35)" fg:x="36987" fg:w="83"/><text x="69.6206%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="69.4832%" y="165" width="0.0131%" height="15" fill="rgb(251,141,6)" fg:x="37070" fg:w="7"/><text x="69.7762%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="69.4964%" y="149" width="0.1106%" height="15" fill="rgb(225,208,6)" fg:x="37077" fg:w="59"/><text x="69.7893%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.52%)</title><rect x="69.6069%" y="149" width="0.5211%" height="15" fill="rgb(246,181,16)" fg:x="37136" fg:w="278"/><text x="69.8999%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.32%)</title><rect x="70.1280%" y="149" width="0.3243%" height="15" fill="rgb(227,129,36)" fg:x="37414" fg:w="173"/><text x="70.4210%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.43%)</title><rect x="69.4964%" y="165" width="1.4302%" height="15" fill="rgb(248,117,24)" fg:x="37077" fg:w="763"/><text x="69.7893%" y="175.50"></text></g><g><title>memcmp (445 instructions, 0.83%)</title><rect x="70.9265%" y="165" width="0.8341%" height="15" fill="rgb(214,185,35)" fg:x="37840" fg:w="445"/><text x="71.2195%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="71.7606%" y="149" width="0.1668%" height="15" fill="rgb(236,150,34)" fg:x="38285" fg:w="89"/><text x="72.0536%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.25%)</title><rect x="71.7606%" y="165" width="0.2493%" height="15" fill="rgb(243,228,27)" fg:x="38285" fg:w="133"/><text x="72.0536%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,527 instructions, 2.86%)</title><rect x="69.4832%" y="181" width="2.8622%" height="15" fill="rgb(245,77,44)" fg:x="37070" fg:w="1527"/><text x="69.7762%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.3454%" y="133" width="0.1106%" height="15" fill="rgb(235,214,42)" fg:x="38597" fg:w="59"/><text x="72.6384%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="72.4560%" y="133" width="0.3074%" height="15" fill="rgb(221,74,3)" fg:x="38656" fg:w="164"/><text x="72.7490%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.7634%" y="117" width="0.1106%" height="15" fill="rgb(206,121,29)" fg:x="38820" fg:w="59"/><text x="73.0564%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="72.9527%" y="117" width="0.3074%" height="15" fill="rgb(249,131,53)" fg:x="38921" fg:w="164"/><text x="73.2457%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (307 instructions, 0.58%)</title><rect x="72.7634%" y="133" width="0.5754%" height="15" fill="rgb(236,170,29)" fg:x="38820" fg:w="307"/><text x="73.0564%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (647 instructions, 1.21%)</title><rect x="72.3454%" y="149" width="1.2127%" height="15" fill="rgb(247,96,15)" fg:x="38597" fg:w="647"/><text x="72.6384%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="73.9724%" y="133" width="0.1106%" height="15" fill="rgb(211,210,7)" fg:x="39465" fg:w="59"/><text x="74.2653%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.0830%" y="133" width="0.3074%" height="15" fill="rgb(240,88,50)" fg:x="39524" fg:w="164"/><text x="74.3759%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.3904%" y="117" width="0.1106%" height="15" fill="rgb(209,229,26)" fg:x="39688" fg:w="59"/><text x="74.6833%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.5797%" y="117" width="0.3074%" height="15" fill="rgb(210,68,23)" fg:x="39789" fg:w="164"/><text x="74.8726%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (307 instructions, 0.58%)</title><rect x="74.3904%" y="133" width="0.5754%" height="15" fill="rgb(229,180,13)" fg:x="39688" fg:w="307"/><text x="74.6833%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (647 instructions, 1.21%)</title><rect x="73.9724%" y="149" width="1.2127%" height="15" fill="rgb(236,53,44)" fg:x="39465" fg:w="647"/><text x="74.2653%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,736 instructions, 3.25%)</title><rect x="72.3454%" y="165" width="3.2539%" height="15" fill="rgb(244,214,29)" fg:x="38597" fg:w="1736"/><text x="72.6384%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (2,038 instructions, 3.82%)</title><rect x="72.3454%" y="181" width="3.8200%" height="15" fill="rgb(220,75,29)" fg:x="38597" fg:w="2038"/><text x="72.6384%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.09%)</title><rect x="76.1654%" y="181" width="0.0918%" height="15" fill="rgb(214,183,37)" fg:x="40635" fg:w="49"/><text x="76.4584%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="76.2572%" y="165" width="0.1556%" height="15" fill="rgb(239,117,29)" fg:x="40684" fg:w="83"/><text x="76.5502%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="76.4953%" y="149" width="0.0431%" height="15" fill="rgb(237,171,35)" fg:x="40811" fg:w="23"/><text x="76.7883%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.26%)</title><rect x="76.4953%" y="165" width="0.2587%" height="15" fill="rgb(229,178,53)" fg:x="40811" fg:w="138"/><text x="76.7883%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309 instructions, 0.58%)</title><rect x="76.2572%" y="181" width="0.5792%" height="15" fill="rgb(210,102,19)" fg:x="40684" fg:w="309"/><text x="76.5502%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.27%)</title><rect x="76.8364%" y="117" width="0.2737%" height="15" fill="rgb(235,127,22)" fg:x="40993" fg:w="146"/><text x="77.1294%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.43%)</title><rect x="76.8364%" y="133" width="0.4311%" height="15" fill="rgb(244,31,31)" fg:x="40993" fg:w="230"/><text x="77.1294%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.09%)</title><rect x="77.2675%" y="133" width="0.0918%" height="15" fill="rgb(231,43,21)" fg:x="41223" fg:w="49"/><text x="77.5605%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (348 instructions, 0.65%)</title><rect x="76.8364%" y="149" width="0.6523%" height="15" fill="rgb(217,131,35)" fg:x="40993" fg:w="348"/><text x="77.1294%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="77.4887%" y="149" width="0.0244%" height="15" fill="rgb(221,149,4)" fg:x="41341" fg:w="13"/><text x="77.7817%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (446 instructions, 0.84%)</title><rect x="76.8364%" y="165" width="0.8360%" height="15" fill="rgb(232,170,28)" fg:x="40993" fg:w="446"/><text x="77.1294%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="77.6724%" y="165" width="0.0619%" height="15" fill="rgb(238,56,10)" fg:x="41439" fg:w="33"/><text x="77.9654%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.7343%" y="149" width="0.1556%" height="15" fill="rgb(235,196,14)" fg:x="41472" fg:w="83"/><text x="78.0272%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.1804%" y="149" width="0.1556%" height="15" fill="rgb(216,45,48)" fg:x="41710" fg:w="83"/><text x="78.4733%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (476 instructions, 0.89%)</title><rect x="77.7343%" y="165" width="0.8922%" height="15" fill="rgb(238,213,17)" fg:x="41472" fg:w="476"/><text x="78.0272%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="78.6265%" y="165" width="0.0619%" height="15" fill="rgb(212,13,2)" fg:x="41948" fg:w="33"/><text x="78.9194%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="78.6883%" y="165" width="0.0244%" height="15" fill="rgb(240,114,20)" fg:x="41981" fg:w="13"/><text x="78.9813%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="78.7127%" y="165" width="0.0244%" height="15" fill="rgb(228,41,40)" fg:x="41994" fg:w="13"/><text x="79.0056%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="78.7370%" y="149" width="0.0619%" height="15" fill="rgb(244,132,35)" fg:x="42007" fg:w="33"/><text x="79.0300%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.15%)</title><rect x="78.7989%" y="149" width="0.1518%" height="15" fill="rgb(253,189,4)" fg:x="42040" fg:w="81"/><text x="79.0919%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="78.9507%" y="149" width="0.1856%" height="15" fill="rgb(224,37,19)" fg:x="42121" fg:w="99"/><text x="79.2437%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.23%)</title><rect x="79.1363%" y="149" width="0.2305%" height="15" fill="rgb(235,223,18)" fg:x="42220" fg:w="123"/><text x="79.4293%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="79.3668%" y="149" width="0.1668%" height="15" fill="rgb(235,163,25)" fg:x="42343" fg:w="89"/><text x="79.6598%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (559 instructions, 1.05%)</title><rect x="78.7370%" y="165" width="1.0478%" height="15" fill="rgb(217,145,28)" fg:x="42007" fg:w="559"/><text x="79.0300%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="79.7848%" y="165" width="0.0619%" height="15" fill="rgb(223,223,32)" fg:x="42566" fg:w="33"/><text x="80.0778%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="79.8467%" y="149" width="0.0656%" height="15" fill="rgb(227,189,39)" fg:x="42599" fg:w="35"/><text x="80.1396%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="79.9123%" y="149" width="0.0637%" height="15" fill="rgb(248,10,22)" fg:x="42634" fg:w="34"/><text x="80.2052%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="79.9760%" y="149" width="0.0637%" height="15" fill="rgb(248,46,39)" fg:x="42668" fg:w="34"/><text x="80.2690%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.15%)</title><rect x="80.0397%" y="133" width="0.1537%" height="15" fill="rgb(248,113,48)" fg:x="42702" fg:w="82"/><text x="80.3327%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="80.1934%" y="133" width="0.1312%" height="15" fill="rgb(245,16,25)" fg:x="42784" fg:w="70"/><text x="80.4864%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.14%)</title><rect x="80.3246%" y="133" width="0.1425%" height="15" fill="rgb(249,152,16)" fg:x="42854" fg:w="76"/><text x="80.6176%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.54%)</title><rect x="80.0397%" y="149" width="0.5436%" height="15" fill="rgb(250,16,1)" fg:x="42702" fg:w="290"/><text x="80.3327%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="80.5833%" y="149" width="0.0619%" height="15" fill="rgb(249,138,3)" fg:x="42992" fg:w="33"/><text x="80.8763%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.12%)</title><rect x="80.6452%" y="149" width="0.1181%" height="15" fill="rgb(227,71,41)" fg:x="43025" fg:w="63"/><text x="80.9381%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.7632%" y="149" width="0.1556%" height="15" fill="rgb(209,184,23)" fg:x="43088" fg:w="83"/><text x="81.0562%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.22%)</title><rect x="80.9188%" y="149" width="0.2156%" height="15" fill="rgb(223,215,31)" fg:x="43171" fg:w="115"/><text x="81.2118%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.30%)</title><rect x="81.1344%" y="149" width="0.3036%" height="15" fill="rgb(210,146,28)" fg:x="43286" fg:w="162"/><text x="81.4273%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,049 instructions, 1.97%)</title><rect x="79.8467%" y="165" width="1.9662%" height="15" fill="rgb(209,183,41)" fg:x="42599" fg:w="1049"/><text x="80.1396%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="81.8129%" y="165" width="0.0619%" height="15" fill="rgb(209,224,45)" fg:x="43648" fg:w="33"/><text x="82.1059%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8748%" y="165" width="0.0244%" height="15" fill="rgb(224,209,51)" fg:x="43681" fg:w="13"/><text x="82.1677%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8991%" y="165" width="0.0244%" height="15" fill="rgb(223,17,39)" fg:x="43694" fg:w="13"/><text x="82.1921%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="81.9235%" y="149" width="0.0619%" height="15" fill="rgb(234,204,37)" fg:x="43707" fg:w="33"/><text x="82.2165%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.21%)</title><rect x="81.9853%" y="149" width="0.2137%" height="15" fill="rgb(236,120,5)" fg:x="43740" fg:w="114"/><text x="82.2783%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="82.1990%" y="149" width="0.1856%" height="15" fill="rgb(248,97,27)" fg:x="43854" fg:w="99"/><text x="82.4920%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="82.3846%" y="149" width="0.0356%" height="15" fill="rgb(240,66,17)" fg:x="43953" fg:w="19"/><text x="82.6776%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.23%)</title><rect x="82.4202%" y="149" width="0.2305%" height="15" fill="rgb(210,79,3)" fg:x="43972" fg:w="123"/><text x="82.7132%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.11%)</title><rect x="82.6507%" y="149" width="0.1125%" height="15" fill="rgb(214,176,27)" fg:x="44095" fg:w="60"/><text x="82.9437%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (591 instructions, 1.11%)</title><rect x="81.9235%" y="165" width="1.1078%" height="15" fill="rgb(235,185,3)" fg:x="43707" fg:w="591"/><text x="82.2165%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="83.0312%" y="165" width="0.0619%" height="15" fill="rgb(227,24,12)" fg:x="44298" fg:w="33"/><text x="83.3242%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="83.0931%" y="165" width="0.0656%" height="15" fill="rgb(252,169,48)" fg:x="44331" fg:w="35"/><text x="83.3861%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="83.1587%" y="165" width="0.0637%" height="15" fill="rgb(212,65,1)" fg:x="44366" fg:w="34"/><text x="83.4517%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="83.2224%" y="165" width="0.0637%" height="15" fill="rgb(242,39,24)" fg:x="44400" fg:w="34"/><text x="83.5154%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="83.2862%" y="165" width="0.0619%" height="15" fill="rgb(249,32,23)" fg:x="44434" fg:w="33"/><text x="83.5791%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="83.3480%" y="165" width="0.0619%" height="15" fill="rgb(251,195,23)" fg:x="44467" fg:w="33"/><text x="83.6410%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="83.4099%" y="149" width="0.0131%" height="15" fill="rgb(236,174,8)" fg:x="44500" fg:w="7"/><text x="83.7028%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="83.4230%" y="149" width="0.1668%" height="15" fill="rgb(220,197,8)" fg:x="44507" fg:w="89"/><text x="83.7160%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="83.5898%" y="149" width="0.0131%" height="15" fill="rgb(240,108,37)" fg:x="44596" fg:w="7"/><text x="83.8828%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="83.6029%" y="133" width="0.0506%" height="15" fill="rgb(232,176,24)" fg:x="44603" fg:w="27"/><text x="83.8959%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.27%)</title><rect x="83.6029%" y="149" width="0.2699%" height="15" fill="rgb(243,35,29)" fg:x="44603" fg:w="144"/><text x="83.8959%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (296 instructions, 0.55%)</title><rect x="83.4099%" y="165" width="0.5548%" height="15" fill="rgb(210,37,18)" fg:x="44500" fg:w="296"/><text x="83.7028%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (5,078 instructions, 9.52%)</title><rect x="76.8364%" y="181" width="9.5181%" height="15" fill="rgb(224,184,40)" fg:x="40993" fg:w="5078"/><text x="77.1294%" y="191.50">subscriber:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="86.5213%" y="149" width="0.0506%" height="15" fill="rgb(236,39,29)" fg:x="46160" fg:w="27"/><text x="86.8143%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.44%)</title><rect x="86.3545%" y="165" width="0.4367%" height="15" fill="rgb(232,48,39)" fg:x="46071" fg:w="233"/><text x="86.6475%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (295 instructions, 0.55%)</title><rect x="86.3545%" y="181" width="0.5529%" height="15" fill="rgb(236,34,42)" fg:x="46071" fg:w="295"/><text x="86.6475%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.9075%" y="181" width="0.0244%" height="15" fill="rgb(243,106,37)" fg:x="46366" fg:w="13"/><text x="87.2004%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.9318%" y="181" width="0.0244%" height="15" fill="rgb(218,96,6)" fg:x="46379" fg:w="13"/><text x="87.2248%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.08%)</title><rect x="86.9562%" y="181" width="0.0806%" height="15" fill="rgb(235,130,12)" fg:x="46392" fg:w="43"/><text x="87.2492%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="87.0368%" y="149" width="0.1668%" height="15" fill="rgb(231,95,0)" fg:x="46435" fg:w="89"/><text x="87.3298%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="87.2036%" y="133" width="0.1668%" height="15" fill="rgb(228,12,23)" fg:x="46524" fg:w="89"/><text x="87.4966%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="87.3704%" y="117" width="0.1556%" height="15" fill="rgb(216,12,1)" fg:x="46613" fg:w="83"/><text x="87.6634%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 instructions, 0.24%)</title><rect x="87.3704%" y="133" width="0.2380%" height="15" fill="rgb(219,59,3)" fg:x="46613" fg:w="127"/><text x="87.6634%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="87.6085%" y="133" width="0.1668%" height="15" fill="rgb(215,208,46)" fg:x="46740" fg:w="89"/><text x="87.9014%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="87.7753%" y="133" width="0.0244%" height="15" fill="rgb(254,224,29)" fg:x="46829" fg:w="13"/><text x="88.0683%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="87.7997%" y="117" width="0.0431%" height="15" fill="rgb(232,14,29)" fg:x="46842" fg:w="23"/><text x="88.0926%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="87.8428%" y="117" width="0.0506%" height="15" fill="rgb(208,45,52)" fg:x="46865" fg:w="27"/><text x="88.1357%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.36%)</title><rect x="87.7997%" y="133" width="0.3618%" height="15" fill="rgb(234,191,28)" fg:x="46842" fg:w="193"/><text x="88.0926%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="88.1614%" y="133" width="0.1556%" height="15" fill="rgb(244,67,43)" fg:x="47035" fg:w="83"/><text x="88.4544%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (784 instructions, 1.47%)</title><rect x="87.2036%" y="149" width="1.4695%" height="15" fill="rgb(236,189,24)" fg:x="46524" fg:w="784"/><text x="87.4966%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="88.6731%" y="133" width="0.0431%" height="15" fill="rgb(239,214,33)" fg:x="47308" fg:w="23"/><text x="88.9661%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="88.7162%" y="133" width="0.0506%" height="15" fill="rgb(226,176,41)" fg:x="47331" fg:w="27"/><text x="89.0092%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="88.7668%" y="133" width="0.1275%" height="15" fill="rgb(248,47,8)" fg:x="47358" fg:w="68"/><text x="89.0598%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (240 instructions, 0.45%)</title><rect x="88.6731%" y="149" width="0.4499%" height="15" fill="rgb(218,81,44)" fg:x="47308" fg:w="240"/><text x="88.9661%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,215 instructions, 2.28%)</title><rect x="87.0368%" y="165" width="2.2774%" height="15" fill="rgb(213,98,6)" fg:x="46435" fg:w="1215"/><text x="87.3298%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="89.3142%" y="149" width="0.0506%" height="15" fill="rgb(222,85,22)" fg:x="47650" fg:w="27"/><text x="89.6071%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.25%)</title><rect x="89.3142%" y="165" width="0.2549%" height="15" fill="rgb(239,46,39)" fg:x="47650" fg:w="136"/><text x="89.6071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="89.5691%" y="133" width="0.0431%" height="15" fill="rgb(237,12,29)" fg:x="47786" fg:w="23"/><text x="89.8620%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.13%)</title><rect x="89.6122%" y="133" width="0.1293%" height="15" fill="rgb(214,77,8)" fg:x="47809" fg:w="69"/><text x="89.9052%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="89.7415%" y="133" width="0.1275%" height="15" fill="rgb(217,168,37)" fg:x="47878" fg:w="68"/><text x="90.0345%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (282 instructions, 0.53%)</title><rect x="89.5691%" y="149" width="0.5286%" height="15" fill="rgb(221,217,23)" fg:x="47786" fg:w="282"/><text x="89.8620%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (326 instructions, 0.61%)</title><rect x="89.5691%" y="165" width="0.6110%" height="15" fill="rgb(243,229,36)" fg:x="47786" fg:w="326"/><text x="89.8620%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.1801%" y="165" width="0.0244%" height="15" fill="rgb(251,163,40)" fg:x="48112" fg:w="13"/><text x="90.4731%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,750 instructions, 3.28%)</title><rect x="87.0368%" y="181" width="3.2802%" height="15" fill="rgb(237,222,12)" fg:x="46435" fg:w="1750"/><text x="87.3298%" y="191.50">co..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.4838%" y="165" width="0.0506%" height="15" fill="rgb(248,132,6)" fg:x="48274" fg:w="27"/><text x="90.7767%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.13%)</title><rect x="90.5344%" y="165" width="0.1293%" height="15" fill="rgb(227,167,50)" fg:x="48301" fg:w="69"/><text x="90.8274%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="90.6637%" y="165" width="0.1275%" height="15" fill="rgb(242,84,37)" fg:x="48370" fg:w="68"/><text x="90.9567%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (375 instructions, 0.70%)</title><rect x="90.3170%" y="181" width="0.7029%" height="15" fill="rgb(212,4,50)" fg:x="48185" fg:w="375"/><text x="90.6099%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="91.0198%" y="149" width="0.0131%" height="15" fill="rgb(230,228,32)" fg:x="48560" fg:w="7"/><text x="91.3128%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="91.0330%" y="149" width="0.0244%" height="15" fill="rgb(248,217,23)" fg:x="48567" fg:w="13"/><text x="91.3259%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="91.0573%" y="149" width="0.0244%" height="15" fill="rgb(238,197,32)" fg:x="48580" fg:w="13"/><text x="91.3503%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="91.0817%" y="149" width="0.0244%" height="15" fill="rgb(236,106,1)" fg:x="48593" fg:w="13"/><text x="91.3747%" y="159.50"></text></g><g><title>memset (93 instructions, 0.17%)</title><rect x="91.1061%" y="149" width="0.1743%" height="15" fill="rgb(219,228,13)" fg:x="48606" fg:w="93"/><text x="91.3990%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (377 instructions, 0.71%)</title><rect x="91.0198%" y="165" width="0.7066%" height="15" fill="rgb(238,30,35)" fg:x="48560" fg:w="377"/><text x="91.3128%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.97%)</title><rect x="91.7265%" y="149" width="0.9709%" height="15" fill="rgb(236,70,23)" fg:x="48937" fg:w="518"/><text x="92.0195%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="92.6974%" y="101" width="0.1556%" height="15" fill="rgb(249,104,48)" fg:x="49455" fg:w="83"/><text x="92.9904%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="92.6974%" y="117" width="0.2362%" height="15" fill="rgb(254,117,50)" fg:x="49455" fg:w="126"/><text x="92.9904%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.39%)</title><rect x="92.6974%" y="133" width="0.3899%" height="15" fill="rgb(223,152,4)" fg:x="49455" fg:w="208"/><text x="92.9904%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0873%" y="133" width="0.0281%" height="15" fill="rgb(245,6,2)" fg:x="49663" fg:w="15"/><text x="93.3803%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.1154%" y="133" width="0.0281%" height="15" fill="rgb(249,150,24)" fg:x="49678" fg:w="15"/><text x="93.4084%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.80%)</title><rect x="92.6974%" y="149" width="0.7985%" height="15" fill="rgb(228,185,42)" fg:x="49455" fg:w="426"/><text x="92.9904%" y="159.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.97%)</title><rect x="93.4959%" y="149" width="0.9672%" height="15" fill="rgb(226,39,33)" fg:x="49881" fg:w="516"/><text x="93.7889%" y="159.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="94.4631%" y="149" width="0.0131%" height="15" fill="rgb(221,166,19)" fg:x="50397" fg:w="7"/><text x="94.7561%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,564 instructions, 2.93%)</title><rect x="91.7265%" y="165" width="2.9315%" height="15" fill="rgb(209,109,2)" fg:x="48937" fg:w="1564"/><text x="92.0195%" y="175.50">ca..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="94.6580%" y="165" width="0.0131%" height="15" fill="rgb(252,216,26)" fg:x="50501" fg:w="7"/><text x="94.9510%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="94.6711%" y="165" width="0.1668%" height="15" fill="rgb(227,173,36)" fg:x="50508" fg:w="89"/><text x="94.9641%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,641 instructions, 4.95%)</title><rect x="91.0198%" y="181" width="4.9502%" height="15" fill="rgb(209,90,7)" fg:x="48560" fg:w="2641"/><text x="91.3128%" y="191.50">ic_cd..</text></g><g><title>subscriber::__canister_method_update_count::{{closure}} (52,777 instructions, 98.92%)</title><rect x="0.3561%" y="197" width="98.9241%" height="15" fill="rgb(250,194,11)" fg:x="190" fg:w="52777"/><text x="0.6491%" y="207.50">subscriber::__canister_method_update_count::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.2802%" y="197" width="0.0262%" height="15" fill="rgb(220,72,50)" fg:x="52967" fg:w="14"/><text x="99.5732%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="99.4639%" y="181" width="0.0506%" height="15" fill="rgb(222,106,48)" fg:x="53065" fg:w="27"/><text x="99.7569%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (225 instructions, 0.42%)</title><rect x="99.3084%" y="197" width="0.4217%" height="15" fill="rgb(216,220,45)" fg:x="52982" fg:w="225"/><text x="99.6013%" y="207.50"></text></g><g><title>all (53,351 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(234,112,18)" fg:x="0" fg:w="53351"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (53,351 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(206,179,9)" fg:x="0" fg:w="53351"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>