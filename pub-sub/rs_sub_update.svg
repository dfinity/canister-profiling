<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="52116"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="197" width="0.0461%" height="15" fill="rgb(244,165,34)" fg:x="0" fg:w="24"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.0461%" y="197" width="0.1573%" height="15" fill="rgb(207,89,7)" fg:x="24" fg:w="82"/><text x="0.3390%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2034%" y="197" width="0.1593%" height="15" fill="rgb(244,117,36)" fg:x="106" fg:w="83"/><text x="0.4964%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3627%" y="181" width="0.1593%" height="15" fill="rgb(226,144,34)" fg:x="189" fg:w="83"/><text x="0.6556%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5219%" y="165" width="0.1573%" height="15" fill="rgb(213,23,19)" fg:x="272" fg:w="82"/><text x="0.8149%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6793%" y="149" width="0.0115%" height="15" fill="rgb(217,75,12)" fg:x="354" fg:w="6"/><text x="0.9722%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="0.6793%" y="165" width="0.8443%" height="15" fill="rgb(224,159,17)" fg:x="354" fg:w="440"/><text x="0.9722%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="1.5235%" y="165" width="0.1823%" height="15" fill="rgb(217,118,1)" fg:x="794" fg:w="95"/><text x="1.8165%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7058%" y="165" width="0.1151%" height="15" fill="rgb(232,180,48)" fg:x="889" fg:w="60"/><text x="1.9988%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8209%" y="165" width="0.1151%" height="15" fill="rgb(230,27,33)" fg:x="949" fg:w="60"/><text x="2.1139%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9361%" y="165" width="0.1151%" height="15" fill="rgb(205,31,21)" fg:x="1009" fg:w="60"/><text x="2.2290%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0512%" y="165" width="0.1151%" height="15" fill="rgb(253,59,4)" fg:x="1069" fg:w="60"/><text x="2.3442%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.1663%" y="165" width="0.1573%" height="15" fill="rgb(224,201,9)" fg:x="1129" fg:w="82"/><text x="2.4593%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="2.3237%" y="165" width="0.1343%" height="15" fill="rgb(229,206,30)" fg:x="1211" fg:w="70"/><text x="2.6166%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4580%" y="149" width="0.0115%" height="15" fill="rgb(212,67,47)" fg:x="1281" fg:w="6"/><text x="2.7509%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="2.4580%" y="165" width="0.8443%" height="15" fill="rgb(211,96,50)" fg:x="1281" fg:w="440"/><text x="2.7509%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3022%" y="165" width="0.0365%" height="15" fill="rgb(252,114,18)" fg:x="1721" fg:w="19"/><text x="3.5952%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="3.3387%" y="149" width="0.1477%" height="15" fill="rgb(223,58,37)" fg:x="1740" fg:w="77"/><text x="3.6317%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.4865%" y="117" width="0.1286%" height="15" fill="rgb(237,70,4)" fg:x="1817" fg:w="67"/><text x="3.7794%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="3.4865%" y="133" width="0.1880%" height="15" fill="rgb(244,85,46)" fg:x="1817" fg:w="98"/><text x="3.7794%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.6745%" y="85" width="0.0211%" height="15" fill="rgb(223,39,52)" fg:x="1915" fg:w="11"/><text x="3.9675%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.6956%" y="69" width="0.0672%" height="15" fill="rgb(218,200,14)" fg:x="1926" fg:w="35"/><text x="3.9886%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="3.6956%" y="85" width="0.1266%" height="15" fill="rgb(208,171,16)" fg:x="1926" fg:w="66"/><text x="3.9886%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="3.6745%" y="101" width="0.2821%" height="15" fill="rgb(234,200,18)" fg:x="1915" fg:w="147"/><text x="3.9675%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="3.6745%" y="117" width="0.4068%" height="15" fill="rgb(228,45,11)" fg:x="1915" fg:w="212"/><text x="3.9675%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="3.6745%" y="133" width="0.4260%" height="15" fill="rgb(237,182,11)" fg:x="1915" fg:w="222"/><text x="3.9675%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="3.4865%" y="149" width="0.8846%" height="15" fill="rgb(241,175,49)" fg:x="1817" fg:w="461"/><text x="3.7794%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (683 instructions, 1.31%)</title><rect x="3.3387%" y="165" width="1.3105%" height="15" fill="rgb(247,38,35)" fg:x="1740" fg:w="683"/><text x="3.6317%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="4.6492%" y="165" width="0.1823%" height="15" fill="rgb(228,39,49)" fg:x="2423" fg:w="95"/><text x="4.9422%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="4.8315%" y="165" width="0.1650%" height="15" fill="rgb(226,101,26)" fg:x="2518" fg:w="86"/><text x="5.1245%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="4.9965%" y="149" width="0.1151%" height="15" fill="rgb(206,141,19)" fg:x="2604" fg:w="60"/><text x="5.2895%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="5.1117%" y="149" width="0.1573%" height="15" fill="rgb(211,200,13)" fg:x="2664" fg:w="82"/><text x="5.4046%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="5.2690%" y="133" width="0.2322%" height="15" fill="rgb(241,121,6)" fg:x="2746" fg:w="121"/><text x="5.5620%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="5.5012%" y="101" width="0.2514%" height="15" fill="rgb(234,221,29)" fg:x="2867" fg:w="131"/><text x="5.7942%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.31%)</title><rect x="5.5012%" y="117" width="0.3108%" height="15" fill="rgb(229,136,5)" fg:x="2867" fg:w="162"/><text x="5.7942%" y="127.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="5.8120%" y="37" width="0.2111%" height="15" fill="rgb(238,36,11)" fg:x="3029" fg:w="110"/><text x="6.1050%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="5.8120%" y="53" width="0.2974%" height="15" fill="rgb(251,55,41)" fg:x="3029" fg:w="155"/><text x="6.1050%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.47%)</title><rect x="5.8120%" y="69" width="0.4663%" height="15" fill="rgb(242,34,40)" fg:x="3029" fg:w="243"/><text x="6.1050%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="6.2783%" y="69" width="0.3070%" height="15" fill="rgb(215,42,17)" fg:x="3272" fg:w="160"/><text x="6.5713%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (445 instructions, 0.85%)</title><rect x="5.8120%" y="85" width="0.8539%" height="15" fill="rgb(207,44,46)" fg:x="3029" fg:w="445"/><text x="6.1050%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.6659%" y="53" width="0.0211%" height="15" fill="rgb(211,206,28)" fg:x="3474" fg:w="11"/><text x="6.9589%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.6870%" y="37" width="0.0672%" height="15" fill="rgb(237,167,16)" fg:x="3485" fg:w="35"/><text x="6.9800%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="6.6870%" y="53" width="0.1266%" height="15" fill="rgb(233,66,6)" fg:x="3485" fg:w="66"/><text x="6.9800%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="6.6659%" y="69" width="0.2821%" height="15" fill="rgb(246,123,29)" fg:x="3474" fg:w="147"/><text x="6.9589%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.41%)</title><rect x="6.6659%" y="85" width="0.4145%" height="15" fill="rgb(209,62,40)" fg:x="3474" fg:w="216"/><text x="6.9589%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="7.0804%" y="69" width="0.0979%" height="15" fill="rgb(218,4,25)" fg:x="3690" fg:w="51"/><text x="7.3733%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.16%)</title><rect x="7.0804%" y="85" width="0.1573%" height="15" fill="rgb(253,91,49)" fg:x="3690" fg:w="82"/><text x="7.3733%" y="95.50"></text></g><g><title>core::fmt::write (911 instructions, 1.75%)</title><rect x="5.8120%" y="101" width="1.7480%" height="15" fill="rgb(228,155,29)" fg:x="3029" fg:w="911"/><text x="6.1050%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (977 instructions, 1.87%)</title><rect x="5.8120%" y="117" width="1.8747%" height="15" fill="rgb(243,57,37)" fg:x="3029" fg:w="977"/><text x="6.1050%" y="127.50"></text></g><g><title>core::fmt::write (1,280 instructions, 2.46%)</title><rect x="5.5012%" y="133" width="2.4561%" height="15" fill="rgb(244,167,17)" fg:x="2867" fg:w="1280"/><text x="5.7942%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,546 instructions, 2.97%)</title><rect x="5.2690%" y="149" width="2.9665%" height="15" fill="rgb(207,181,38)" fg:x="2746" fg:w="1546"/><text x="5.5620%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="8.2355%" y="149" width="0.1593%" height="15" fill="rgb(211,8,23)" fg:x="4292" fg:w="83"/><text x="8.5284%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="8.3947%" y="149" width="0.1151%" height="15" fill="rgb(235,11,44)" fg:x="4375" fg:w="60"/><text x="8.6877%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.5099%" y="149" width="0.1458%" height="15" fill="rgb(248,18,52)" fg:x="4435" fg:w="76"/><text x="8.8028%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.6557%" y="117" width="0.1593%" height="15" fill="rgb(208,4,7)" fg:x="4511" fg:w="83"/><text x="8.9487%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="8.6557%" y="133" width="0.2418%" height="15" fill="rgb(240,17,39)" fg:x="4511" fg:w="126"/><text x="8.9487%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.40%)</title><rect x="8.6557%" y="149" width="0.3991%" height="15" fill="rgb(207,170,3)" fg:x="4511" fg:w="208"/><text x="8.9487%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="9.0548%" y="149" width="0.1151%" height="15" fill="rgb(236,100,52)" fg:x="4719" fg:w="60"/><text x="9.3478%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="9.1699%" y="149" width="0.1477%" height="15" fill="rgb(246,78,51)" fg:x="4779" fg:w="77"/><text x="9.4629%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="9.3177%" y="133" width="0.1746%" height="15" fill="rgb(211,17,15)" fg:x="4856" fg:w="91"/><text x="9.6106%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.25%)</title><rect x="9.4923%" y="101" width="0.2514%" height="15" fill="rgb(209,59,46)" fg:x="4947" fg:w="131"/><text x="9.7853%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.31%)</title><rect x="9.4923%" y="117" width="0.3108%" height="15" fill="rgb(210,92,25)" fg:x="4947" fg:w="162"/><text x="9.7853%" y="127.50"></text></g><g><title>__rust_realloc (86 instructions, 0.17%)</title><rect x="9.8031%" y="37" width="0.1650%" height="15" fill="rgb(238,174,52)" fg:x="5109" fg:w="86"/><text x="10.0961%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.25%)</title><rect x="9.8031%" y="53" width="0.2514%" height="15" fill="rgb(230,73,7)" fg:x="5109" fg:w="131"/><text x="10.0961%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.42%)</title><rect x="9.8031%" y="69" width="0.4202%" height="15" fill="rgb(243,124,40)" fg:x="5109" fg:w="219"/><text x="10.0961%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.31%)</title><rect x="10.2233%" y="69" width="0.3070%" height="15" fill="rgb(244,170,11)" fg:x="5328" fg:w="160"/><text x="10.5163%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 0.81%)</title><rect x="9.8031%" y="85" width="0.8078%" height="15" fill="rgb(207,114,54)" fg:x="5109" fg:w="421"/><text x="10.0961%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="10.6109%" y="53" width="0.0211%" height="15" fill="rgb(205,42,20)" fg:x="5530" fg:w="11"/><text x="10.9039%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="10.6321%" y="37" width="0.0672%" height="15" fill="rgb(230,30,28)" fg:x="5541" fg:w="35"/><text x="10.9250%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="10.6321%" y="53" width="0.1266%" height="15" fill="rgb(205,73,54)" fg:x="5541" fg:w="66"/><text x="10.9250%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="10.6109%" y="69" width="0.2821%" height="15" fill="rgb(254,227,23)" fg:x="5530" fg:w="147"/><text x="10.9039%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.41%)</title><rect x="10.6109%" y="85" width="0.4145%" height="15" fill="rgb(228,202,34)" fg:x="5530" fg:w="216"/><text x="10.9039%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="11.0254%" y="69" width="0.0979%" height="15" fill="rgb(222,225,37)" fg:x="5746" fg:w="51"/><text x="11.3184%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.16%)</title><rect x="11.0254%" y="85" width="0.1573%" height="15" fill="rgb(221,14,54)" fg:x="5746" fg:w="82"/><text x="11.3184%" y="95.50"></text></g><g><title>core::fmt::write (887 instructions, 1.70%)</title><rect x="9.8031%" y="101" width="1.7020%" height="15" fill="rgb(254,102,2)" fg:x="5109" fg:w="887"/><text x="10.0961%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (953 instructions, 1.83%)</title><rect x="9.8031%" y="117" width="1.8286%" height="15" fill="rgb(232,104,17)" fg:x="5109" fg:w="953"/><text x="10.0961%" y="127.50"></text></g><g><title>core::fmt::write (1,256 instructions, 2.41%)</title><rect x="9.4923%" y="133" width="2.4100%" height="15" fill="rgb(250,220,14)" fg:x="4947" fg:w="1256"/><text x="9.7853%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,492 instructions, 2.86%)</title><rect x="9.3177%" y="149" width="2.8628%" height="15" fill="rgb(241,158,9)" fg:x="4856" fg:w="1492"/><text x="9.6106%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.16%)</title><rect x="12.1805%" y="149" width="0.1593%" height="15" fill="rgb(246,9,43)" fg:x="6348" fg:w="83"/><text x="12.4735%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="12.3398%" y="149" width="0.1209%" height="15" fill="rgb(206,73,33)" fg:x="6431" fg:w="63"/><text x="12.6327%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="12.4607%" y="149" width="0.1458%" height="15" fill="rgb(222,79,8)" fg:x="6494" fg:w="76"/><text x="12.7536%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="12.6065%" y="149" width="0.1151%" height="15" fill="rgb(234,8,54)" fg:x="6570" fg:w="60"/><text x="12.8995%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="12.7216%" y="133" width="0.1573%" height="15" fill="rgb(209,134,38)" fg:x="6630" fg:w="82"/><text x="13.0146%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="12.8790%" y="133" width="0.1343%" height="15" fill="rgb(230,127,29)" fg:x="6712" fg:w="70"/><text x="13.1719%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="13.0133%" y="117" width="0.0115%" height="15" fill="rgb(242,44,41)" fg:x="6782" fg:w="6"/><text x="13.3062%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="13.0133%" y="133" width="0.8443%" height="15" fill="rgb(222,56,43)" fg:x="6782" fg:w="440"/><text x="13.3062%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="13.8575%" y="133" width="0.0365%" height="15" fill="rgb(238,39,47)" fg:x="7222" fg:w="19"/><text x="14.1505%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="13.8940%" y="117" width="0.1746%" height="15" fill="rgb(226,79,43)" fg:x="7241" fg:w="91"/><text x="14.1870%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="14.0686%" y="85" width="0.1286%" height="15" fill="rgb(242,105,53)" fg:x="7332" fg:w="67"/><text x="14.3616%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="14.0686%" y="101" width="0.1880%" height="15" fill="rgb(251,132,46)" fg:x="7332" fg:w="98"/><text x="14.3616%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="14.2567%" y="53" width="0.0211%" height="15" fill="rgb(231,77,14)" fg:x="7430" fg:w="11"/><text x="14.5496%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="14.2778%" y="37" width="0.0672%" height="15" fill="rgb(240,135,9)" fg:x="7441" fg:w="35"/><text x="14.5707%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="14.2778%" y="53" width="0.1266%" height="15" fill="rgb(248,109,14)" fg:x="7441" fg:w="66"/><text x="14.5707%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="14.2567%" y="69" width="0.2821%" height="15" fill="rgb(227,146,52)" fg:x="7430" fg:w="147"/><text x="14.5496%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="14.2567%" y="85" width="0.4068%" height="15" fill="rgb(232,54,3)" fg:x="7430" fg:w="212"/><text x="14.5496%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="14.2567%" y="101" width="0.4260%" height="15" fill="rgb(229,201,43)" fg:x="7430" fg:w="222"/><text x="14.5496%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="14.0686%" y="117" width="0.8846%" height="15" fill="rgb(252,161,33)" fg:x="7332" fg:w="461"/><text x="14.3616%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.34%)</title><rect x="13.8940%" y="133" width="1.3374%" height="15" fill="rgb(226,146,40)" fg:x="7241" fg:w="697"/><text x="14.1870%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="15.2314%" y="133" width="0.1823%" height="15" fill="rgb(219,47,25)" fg:x="7938" fg:w="95"/><text x="15.5244%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="15.4137%" y="133" width="0.1209%" height="15" fill="rgb(250,135,13)" fg:x="8033" fg:w="63"/><text x="15.7067%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="15.5346%" y="117" width="0.1573%" height="15" fill="rgb(219,229,18)" fg:x="8096" fg:w="82"/><text x="15.8275%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.56%)</title><rect x="15.6919%" y="117" width="0.5641%" height="15" fill="rgb(217,152,27)" fg:x="8178" fg:w="294"/><text x="15.9849%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="16.2560%" y="101" width="0.1573%" height="15" fill="rgb(225,71,47)" fg:x="8472" fg:w="82"/><text x="16.5490%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="16.4134%" y="101" width="0.1823%" height="15" fill="rgb(220,139,14)" fg:x="8554" fg:w="95"/><text x="16.7064%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.5957%" y="101" width="0.1458%" height="15" fill="rgb(247,54,32)" fg:x="8649" fg:w="76"/><text x="16.8886%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="16.2560%" y="117" width="0.6332%" height="15" fill="rgb(252,131,39)" fg:x="8472" fg:w="330"/><text x="16.5490%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="16.8892%" y="117" width="0.1458%" height="15" fill="rgb(210,108,39)" fg:x="8802" fg:w="76"/><text x="17.1822%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 instructions, 1.78%)</title><rect x="15.5346%" y="133" width="1.7845%" height="15" fill="rgb(205,23,29)" fg:x="8096" fg:w="930"/><text x="15.8275%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="17.3191%" y="133" width="0.1746%" height="15" fill="rgb(246,139,46)" fg:x="9026" fg:w="91"/><text x="17.6120%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="17.4937%" y="117" width="0.1573%" height="15" fill="rgb(250,81,26)" fg:x="9117" fg:w="82"/><text x="17.7866%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.56%)</title><rect x="17.6510%" y="117" width="0.5641%" height="15" fill="rgb(214,104,7)" fg:x="9199" fg:w="294"/><text x="17.9440%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="18.2151%" y="101" width="0.1573%" height="15" fill="rgb(233,189,8)" fg:x="9493" fg:w="82"/><text x="18.5081%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="18.3725%" y="101" width="0.1823%" height="15" fill="rgb(228,141,17)" fg:x="9575" fg:w="95"/><text x="18.6654%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.5548%" y="101" width="0.1458%" height="15" fill="rgb(247,157,1)" fg:x="9670" fg:w="76"/><text x="18.8477%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="18.2151%" y="117" width="0.6332%" height="15" fill="rgb(249,225,5)" fg:x="9493" fg:w="330"/><text x="18.5081%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="18.8483%" y="117" width="0.1458%" height="15" fill="rgb(242,55,13)" fg:x="9823" fg:w="76"/><text x="19.1413%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 instructions, 1.78%)</title><rect x="17.4937%" y="133" width="1.7845%" height="15" fill="rgb(230,49,50)" fg:x="9117" fg:w="930"/><text x="17.7866%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.05%)</title><rect x="19.2781%" y="133" width="0.0499%" height="15" fill="rgb(241,111,38)" fg:x="10047" fg:w="26"/><text x="19.5711%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="19.3280%" y="133" width="0.1458%" height="15" fill="rgb(252,155,4)" fg:x="10073" fg:w="76"/><text x="19.6210%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,922 instructions, 7.53%)</title><rect x="12.7216%" y="149" width="7.5255%" height="15" fill="rgb(212,69,32)" fg:x="6630" fg:w="3922"/><text x="13.0146%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="20.2491%" y="133" width="0.1650%" height="15" fill="rgb(243,107,47)" fg:x="10553" fg:w="86"/><text x="20.5420%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="20.4889%" y="133" width="0.1612%" height="15" fill="rgb(247,130,12)" fg:x="10678" fg:w="84"/><text x="20.7819%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (248 instructions, 0.48%)</title><rect x="20.2471%" y="149" width="0.4759%" height="15" fill="rgb(233,74,16)" fg:x="10552" fg:w="248"/><text x="20.5401%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="20.7230%" y="149" width="0.2494%" height="15" fill="rgb(208,58,18)" fg:x="10800" fg:w="130"/><text x="21.0160%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (9,070 instructions, 17.40%)</title><rect x="4.9965%" y="165" width="17.4035%" height="15" fill="rgb(242,225,1)" fg:x="2604" fg:w="9070"/><text x="5.2895%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.13%)</title><rect x="22.4000%" y="165" width="0.1343%" height="15" fill="rgb(249,39,40)" fg:x="11674" fg:w="70"/><text x="22.6930%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="22.5343%" y="165" width="0.1458%" height="15" fill="rgb(207,72,44)" fg:x="11744" fg:w="76"/><text x="22.8273%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="22.6802%" y="165" width="0.1343%" height="15" fill="rgb(215,193,12)" fg:x="11820" fg:w="70"/><text x="22.9731%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="22.8145%" y="133" width="0.0115%" height="15" fill="rgb(248,41,39)" fg:x="11890" fg:w="6"/><text x="23.1075%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="22.8145%" y="149" width="0.8443%" height="15" fill="rgb(253,85,4)" fg:x="11890" fg:w="440"/><text x="23.1075%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="23.6588%" y="149" width="0.0365%" height="15" fill="rgb(243,70,31)" fg:x="12330" fg:w="19"/><text x="23.9517%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.6952%" y="133" width="0.1573%" height="15" fill="rgb(253,195,26)" fg:x="12349" fg:w="82"/><text x="23.9882%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="23.8526%" y="101" width="0.1286%" height="15" fill="rgb(243,42,11)" fg:x="12431" fg:w="67"/><text x="24.1455%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="23.8526%" y="117" width="0.1880%" height="15" fill="rgb(239,66,17)" fg:x="12431" fg:w="98"/><text x="24.1455%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="24.0406%" y="69" width="0.0211%" height="15" fill="rgb(217,132,21)" fg:x="12529" fg:w="11"/><text x="24.3336%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="24.0617%" y="53" width="0.0672%" height="15" fill="rgb(252,202,21)" fg:x="12540" fg:w="35"/><text x="24.3547%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="24.0617%" y="69" width="0.1266%" height="15" fill="rgb(233,98,36)" fg:x="12540" fg:w="66"/><text x="24.3547%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="24.0406%" y="85" width="0.2821%" height="15" fill="rgb(216,153,54)" fg:x="12529" fg:w="147"/><text x="24.3336%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="24.0406%" y="101" width="0.4068%" height="15" fill="rgb(250,99,7)" fg:x="12529" fg:w="212"/><text x="24.3336%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="24.0406%" y="117" width="0.4260%" height="15" fill="rgb(207,56,50)" fg:x="12529" fg:w="222"/><text x="24.3336%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="23.8526%" y="133" width="0.8846%" height="15" fill="rgb(244,61,34)" fg:x="12431" fg:w="461"/><text x="24.1455%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (688 instructions, 1.32%)</title><rect x="23.6952%" y="149" width="1.3201%" height="15" fill="rgb(241,50,38)" fg:x="12349" fg:w="688"/><text x="23.9882%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="25.0154%" y="149" width="0.1823%" height="15" fill="rgb(212,166,30)" fg:x="13037" fg:w="95"/><text x="25.3083%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="25.1976%" y="149" width="0.1650%" height="15" fill="rgb(249,127,32)" fg:x="13132" fg:w="86"/><text x="25.4906%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="25.3627%" y="133" width="0.1573%" height="15" fill="rgb(209,103,0)" fg:x="13218" fg:w="82"/><text x="25.6556%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="25.5200%" y="133" width="0.1823%" height="15" fill="rgb(238,209,51)" fg:x="13300" fg:w="95"/><text x="25.8130%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="25.7023%" y="133" width="0.1458%" height="15" fill="rgb(237,56,23)" fg:x="13395" fg:w="76"/><text x="25.9952%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="25.3627%" y="149" width="0.6332%" height="15" fill="rgb(215,153,46)" fg:x="13218" fg:w="330"/><text x="25.6556%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="25.9959%" y="149" width="0.2322%" height="15" fill="rgb(224,49,31)" fg:x="13548" fg:w="121"/><text x="26.2888%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,024 instructions, 3.88%)</title><rect x="22.8145%" y="165" width="3.8836%" height="15" fill="rgb(250,18,42)" fg:x="11890" fg:w="2024"/><text x="23.1075%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="26.6981%" y="165" width="0.1458%" height="15" fill="rgb(215,176,39)" fg:x="13914" fg:w="76"/><text x="26.9911%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="26.8440%" y="165" width="0.1593%" height="15" fill="rgb(223,77,29)" fg:x="13990" fg:w="83"/><text x="27.1369%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="27.0032%" y="149" width="0.1593%" height="15" fill="rgb(234,94,52)" fg:x="14073" fg:w="83"/><text x="27.2962%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.34%)</title><rect x="27.0032%" y="165" width="0.3435%" height="15" fill="rgb(220,154,50)" fg:x="14073" fg:w="179"/><text x="27.2962%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.3467%" y="133" width="0.1746%" height="15" fill="rgb(212,11,10)" fg:x="14252" fg:w="91"/><text x="27.6397%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="27.3467%" y="149" width="0.2571%" height="15" fill="rgb(205,166,19)" fg:x="14252" fg:w="134"/><text x="27.6397%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.41%)</title><rect x="27.3467%" y="165" width="0.4145%" height="15" fill="rgb(244,198,16)" fg:x="14252" fg:w="216"/><text x="27.6397%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.7611%" y="165" width="0.1746%" height="15" fill="rgb(219,69,12)" fg:x="14468" fg:w="91"/><text x="28.0541%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="27.9358%" y="149" width="0.1746%" height="15" fill="rgb(245,30,7)" fg:x="14559" fg:w="91"/><text x="28.2287%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.36%)</title><rect x="27.9358%" y="165" width="0.3588%" height="15" fill="rgb(218,221,48)" fg:x="14559" fg:w="187"/><text x="28.2287%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="28.2946%" y="165" width="0.1746%" height="15" fill="rgb(216,66,15)" fg:x="14746" fg:w="91"/><text x="28.5875%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="28.4692%" y="149" width="0.1573%" height="15" fill="rgb(226,122,50)" fg:x="14837" fg:w="82"/><text x="28.7622%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="28.6265%" y="117" width="0.1900%" height="15" fill="rgb(239,156,16)" fg:x="14919" fg:w="99"/><text x="28.9195%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.25%)</title><rect x="28.6265%" y="133" width="0.2494%" height="15" fill="rgb(224,27,38)" fg:x="14919" fg:w="130"/><text x="28.9195%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.8760%" y="85" width="0.0211%" height="15" fill="rgb(224,39,27)" fg:x="15049" fg:w="11"/><text x="29.1689%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.8971%" y="69" width="0.0672%" height="15" fill="rgb(215,92,29)" fg:x="15060" fg:w="35"/><text x="29.1900%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="28.8971%" y="85" width="0.1266%" height="15" fill="rgb(207,159,16)" fg:x="15060" fg:w="66"/><text x="29.1900%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="28.8760%" y="101" width="0.2821%" height="15" fill="rgb(238,163,47)" fg:x="15049" fg:w="147"/><text x="29.1689%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="28.8760%" y="117" width="0.4068%" height="15" fill="rgb(219,91,49)" fg:x="15049" fg:w="212"/><text x="29.1689%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.45%)</title><rect x="28.8760%" y="133" width="0.4452%" height="15" fill="rgb(227,167,31)" fg:x="15049" fg:w="232"/><text x="29.1689%" y="143.50"></text></g><g><title>core::fmt::write (503 instructions, 0.97%)</title><rect x="28.6265%" y="149" width="0.9652%" height="15" fill="rgb(234,80,54)" fg:x="14919" fg:w="503"/><text x="28.9195%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (730 instructions, 1.40%)</title><rect x="28.4692%" y="165" width="1.4007%" height="15" fill="rgb(212,114,2)" fg:x="14837" fg:w="730"/><text x="28.7622%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="29.8699%" y="149" width="0.1746%" height="15" fill="rgb(234,50,24)" fg:x="15567" fg:w="91"/><text x="30.1629%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (158 instructions, 0.30%)</title><rect x="29.8699%" y="165" width="0.3032%" height="15" fill="rgb(221,68,8)" fg:x="15567" fg:w="158"/><text x="30.1629%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.1731%" y="165" width="0.1957%" height="15" fill="rgb(254,180,31)" fg:x="15725" fg:w="102"/><text x="30.4660%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="30.3688%" y="165" width="0.0288%" height="15" fill="rgb(247,130,50)" fg:x="15827" fg:w="15"/><text x="30.6618%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.20%)</title><rect x="30.3976%" y="165" width="0.1957%" height="15" fill="rgb(211,109,4)" fg:x="15842" fg:w="102"/><text x="30.6905%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="30.5933%" y="149" width="0.1746%" height="15" fill="rgb(238,50,21)" fg:x="15944" fg:w="91"/><text x="30.8863%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (131 instructions, 0.25%)</title><rect x="30.5933%" y="165" width="0.2514%" height="15" fill="rgb(225,57,45)" fg:x="15944" fg:w="131"/><text x="30.8863%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.8447%" y="149" width="0.0595%" height="15" fill="rgb(209,196,50)" fg:x="16075" fg:w="31"/><text x="31.1376%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.06%)</title><rect x="30.9041%" y="149" width="0.0595%" height="15" fill="rgb(242,140,13)" fg:x="16106" fg:w="31"/><text x="31.1971%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (172 instructions, 0.33%)</title><rect x="30.8447%" y="165" width="0.3300%" height="15" fill="rgb(217,111,7)" fg:x="16075" fg:w="172"/><text x="31.1376%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="31.1747%" y="165" width="0.0345%" height="15" fill="rgb(253,193,51)" fg:x="16247" fg:w="18"/><text x="31.4677%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.12%)</title><rect x="31.3819%" y="149" width="0.1209%" height="15" fill="rgb(252,70,29)" fg:x="16355" fg:w="63"/><text x="31.6749%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (187 instructions, 0.36%)</title><rect x="31.2092%" y="165" width="0.3588%" height="15" fill="rgb(232,127,12)" fg:x="16265" fg:w="187"/><text x="31.5022%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="31.5680%" y="165" width="0.0288%" height="15" fill="rgb(211,180,21)" fg:x="16452" fg:w="15"/><text x="31.8610%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="31.5968%" y="165" width="0.0173%" height="15" fill="rgb(229,72,13)" fg:x="16467" fg:w="9"/><text x="31.8898%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="31.6141%" y="165" width="0.0345%" height="15" fill="rgb(240,211,49)" fg:x="16476" fg:w="18"/><text x="31.9071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="31.6486%" y="133" width="0.1477%" height="15" fill="rgb(219,149,40)" fg:x="16494" fg:w="77"/><text x="31.9416%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="31.7964%" y="101" width="0.1900%" height="15" fill="rgb(210,127,46)" fg:x="16571" fg:w="99"/><text x="32.0893%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.25%)</title><rect x="31.7964%" y="117" width="0.2494%" height="15" fill="rgb(220,106,7)" fg:x="16571" fg:w="130"/><text x="32.0893%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="32.0458%" y="69" width="0.0211%" height="15" fill="rgb(249,31,22)" fg:x="16701" fg:w="11"/><text x="32.3388%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="32.0669%" y="53" width="0.0672%" height="15" fill="rgb(253,1,49)" fg:x="16712" fg:w="35"/><text x="32.3599%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="32.0669%" y="69" width="0.1266%" height="15" fill="rgb(227,144,33)" fg:x="16712" fg:w="66"/><text x="32.3599%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="32.0458%" y="85" width="0.2821%" height="15" fill="rgb(249,163,44)" fg:x="16701" fg:w="147"/><text x="32.3388%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="32.0458%" y="101" width="0.4068%" height="15" fill="rgb(234,15,39)" fg:x="16701" fg:w="212"/><text x="32.3388%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.45%)</title><rect x="32.0458%" y="117" width="0.4452%" height="15" fill="rgb(207,66,16)" fg:x="16701" fg:w="232"/><text x="32.3388%" y="127.50"></text></g><g><title>core::fmt::write (503 instructions, 0.97%)</title><rect x="31.7964%" y="133" width="0.9652%" height="15" fill="rgb(233,112,24)" fg:x="16571" fg:w="503"/><text x="32.0893%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (725 instructions, 1.39%)</title><rect x="31.6486%" y="149" width="1.3911%" height="15" fill="rgb(230,90,22)" fg:x="16494" fg:w="725"/><text x="31.9416%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.0398%" y="149" width="0.1746%" height="15" fill="rgb(229,61,13)" fg:x="17219" fg:w="91"/><text x="33.3327%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (942 instructions, 1.81%)</title><rect x="31.6486%" y="165" width="1.8075%" height="15" fill="rgb(225,57,24)" fg:x="16494" fg:w="942"/><text x="31.9416%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.4561%" y="133" width="0.1746%" height="15" fill="rgb(208,169,48)" fg:x="17436" fg:w="91"/><text x="33.7491%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.26%)</title><rect x="33.4561%" y="149" width="0.2571%" height="15" fill="rgb(244,218,51)" fg:x="17436" fg:w="134"/><text x="33.7491%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.41%)</title><rect x="33.4561%" y="165" width="0.4145%" height="15" fill="rgb(214,148,10)" fg:x="17436" fg:w="216"/><text x="33.7491%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="33.8706%" y="165" width="0.1746%" height="15" fill="rgb(225,174,27)" fg:x="17652" fg:w="91"/><text x="34.1636%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="34.0452%" y="165" width="0.1650%" height="15" fill="rgb(230,96,26)" fg:x="17743" fg:w="86"/><text x="34.3382%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.2102%" y="165" width="0.1746%" height="15" fill="rgb(232,10,30)" fg:x="17829" fg:w="91"/><text x="34.5032%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="34.3848%" y="165" width="0.1746%" height="15" fill="rgb(222,8,50)" fg:x="17920" fg:w="91"/><text x="34.6778%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="34.5594%" y="149" width="0.1650%" height="15" fill="rgb(213,81,27)" fg:x="18011" fg:w="86"/><text x="34.8524%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 instructions, 0.24%)</title><rect x="34.5594%" y="165" width="0.2437%" height="15" fill="rgb(245,50,10)" fg:x="18011" fg:w="127"/><text x="34.8524%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="34.8031%" y="149" width="0.1286%" height="15" fill="rgb(216,100,18)" fg:x="18138" fg:w="67"/><text x="35.0961%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (184 instructions, 0.35%)</title><rect x="34.8031%" y="165" width="0.3531%" height="15" fill="rgb(236,147,54)" fg:x="18138" fg:w="184"/><text x="35.0961%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="35.1562%" y="165" width="0.1650%" height="15" fill="rgb(205,143,26)" fg:x="18322" fg:w="86"/><text x="35.4492%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="35.3212%" y="165" width="0.8212%" height="15" fill="rgb(236,26,9)" fg:x="18408" fg:w="428"/><text x="35.6142%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="36.1425%" y="165" width="0.8212%" height="15" fill="rgb(221,165,53)" fg:x="18836" fg:w="428"/><text x="36.4354%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (21,090 instructions, 40.47%)</title><rect x="0.5219%" y="181" width="40.4674%" height="15" fill="rgb(214,110,17)" fg:x="272" fg:w="21090"/><text x="0.8149%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (380 instructions, 0.73%)</title><rect x="40.9893%" y="181" width="0.7291%" height="15" fill="rgb(237,197,12)" fg:x="21362" fg:w="380"/><text x="41.2823%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="41.7185%" y="165" width="0.0269%" height="15" fill="rgb(205,84,17)" fg:x="21742" fg:w="14"/><text x="42.0114%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.12%)</title><rect x="41.7185%" y="181" width="0.1209%" height="15" fill="rgb(237,18,45)" fg:x="21742" fg:w="63"/><text x="42.0114%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="41.8394%" y="165" width="0.1190%" height="15" fill="rgb(221,87,14)" fg:x="21805" fg:w="62"/><text x="42.1323%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.35%)</title><rect x="41.8394%" y="181" width="0.3492%" height="15" fill="rgb(238,186,15)" fg:x="21805" fg:w="182"/><text x="42.1323%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="42.1886%" y="165" width="0.0269%" height="15" fill="rgb(208,115,11)" fg:x="21987" fg:w="14"/><text x="42.4815%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="42.2154%" y="149" width="0.1132%" height="15" fill="rgb(254,175,0)" fg:x="22001" fg:w="59"/><text x="42.5084%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="42.3287%" y="149" width="0.5334%" height="15" fill="rgb(227,24,42)" fg:x="22060" fg:w="278"/><text x="42.6216%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="42.8621%" y="149" width="0.3320%" height="15" fill="rgb(223,211,37)" fg:x="22338" fg:w="173"/><text x="43.1550%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.46%)</title><rect x="42.2154%" y="165" width="1.4640%" height="15" fill="rgb(235,49,27)" fg:x="22001" fg:w="763"/><text x="42.5084%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,005 instructions, 1.93%)</title><rect x="42.1886%" y="181" width="1.9284%" height="15" fill="rgb(254,97,51)" fg:x="21987" fg:w="1005"/><text x="42.4815%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="44.1170%" y="181" width="0.1573%" height="15" fill="rgb(249,51,40)" fg:x="22992" fg:w="82"/><text x="44.4099%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="44.2743%" y="181" width="0.1593%" height="15" fill="rgb(210,128,45)" fg:x="23074" fg:w="83"/><text x="44.5673%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="44.4336%" y="181" width="0.1573%" height="15" fill="rgb(224,137,50)" fg:x="23157" fg:w="82"/><text x="44.7265%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="44.5909%" y="149" width="0.0269%" height="15" fill="rgb(242,15,9)" fg:x="23239" fg:w="14"/><text x="44.8839%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="44.6178%" y="133" width="0.1132%" height="15" fill="rgb(233,187,41)" fg:x="23253" fg:w="59"/><text x="44.9107%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="44.7310%" y="133" width="0.6102%" height="15" fill="rgb(227,2,29)" fg:x="23312" fg:w="318"/><text x="45.0240%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="45.3412%" y="133" width="0.1497%" height="15" fill="rgb(222,70,3)" fg:x="23630" fg:w="78"/><text x="45.6341%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="44.6178%" y="149" width="1.3585%" height="15" fill="rgb(213,11,42)" fg:x="23253" fg:w="708"/><text x="44.9107%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.64%)</title><rect x="44.5909%" y="165" width="1.6387%" height="15" fill="rgb(225,150,9)" fg:x="23239" fg:w="854"/><text x="44.8839%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="46.2296%" y="165" width="0.1593%" height="15" fill="rgb(230,162,45)" fg:x="24093" fg:w="83"/><text x="46.5225%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="46.3888%" y="149" width="0.0269%" height="15" fill="rgb(222,14,52)" fg:x="24176" fg:w="14"/><text x="46.6818%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="46.4157%" y="133" width="0.1132%" height="15" fill="rgb(254,198,14)" fg:x="24190" fg:w="59"/><text x="46.7087%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="46.5289%" y="133" width="0.6102%" height="15" fill="rgb(220,217,30)" fg:x="24249" fg:w="318"/><text x="46.8219%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="47.1391%" y="133" width="0.1497%" height="15" fill="rgb(215,146,41)" fg:x="24567" fg:w="78"/><text x="47.4320%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="46.4157%" y="149" width="1.3585%" height="15" fill="rgb(217,27,36)" fg:x="24190" fg:w="708"/><text x="46.7087%" y="159.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.82%)</title><rect x="46.3888%" y="165" width="1.8229%" height="15" fill="rgb(219,218,39)" fg:x="24176" fg:w="950"/><text x="46.6818%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="48.2117%" y="165" width="0.1593%" height="15" fill="rgb(219,4,42)" fg:x="25126" fg:w="83"/><text x="48.5047%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="48.3709%" y="149" width="0.0269%" height="15" fill="rgb(249,119,36)" fg:x="25209" fg:w="14"/><text x="48.6639%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="48.3978%" y="133" width="0.1132%" height="15" fill="rgb(209,23,33)" fg:x="25223" fg:w="59"/><text x="48.6908%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="48.5110%" y="133" width="0.6102%" height="15" fill="rgb(211,10,0)" fg:x="25282" fg:w="318"/><text x="48.8040%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="49.1212%" y="133" width="0.1497%" height="15" fill="rgb(208,99,37)" fg:x="25600" fg:w="78"/><text x="49.4142%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.36%)</title><rect x="48.3978%" y="149" width="1.3585%" height="15" fill="rgb(213,132,31)" fg:x="25223" fg:w="708"/><text x="48.6908%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.94%)</title><rect x="49.7563%" y="149" width="0.9421%" height="15" fill="rgb(243,129,40)" fg:x="25931" fg:w="491"/><text x="50.0493%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="50.6984%" y="133" width="0.1650%" height="15" fill="rgb(210,66,33)" fg:x="26422" fg:w="86"/><text x="50.9914%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="50.6984%" y="149" width="0.2322%" height="15" fill="rgb(209,189,4)" fg:x="26422" fg:w="121"/><text x="50.9914%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 2.93%)</title><rect x="48.3709%" y="165" width="2.9338%" height="15" fill="rgb(214,107,37)" fg:x="25209" fg:w="1529"/><text x="48.6639%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="51.3048%" y="117" width="0.1132%" height="15" fill="rgb(245,88,54)" fg:x="26738" fg:w="59"/><text x="51.5978%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="51.3048%" y="133" width="0.1804%" height="15" fill="rgb(205,146,20)" fg:x="26738" fg:w="94"/><text x="51.5978%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.60%)</title><rect x="51.3048%" y="149" width="0.6044%" height="15" fill="rgb(220,161,25)" fg:x="26738" fg:w="315"/><text x="51.5978%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (11 instructions, 0.02%)</title><rect x="51.9092%" y="149" width="0.0211%" height="15" fill="rgb(215,152,15)" fg:x="27053" fg:w="11"/><text x="52.2022%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (18 instructions, 0.03%)</title><rect x="51.9303%" y="149" width="0.0345%" height="15" fill="rgb(233,192,44)" fg:x="27064" fg:w="18"/><text x="52.2233%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="51.9648%" y="149" width="0.0249%" height="15" fill="rgb(240,170,46)" fg:x="27082" fg:w="13"/><text x="52.2578%" y="159.50"></text></g><g><title>candid::types::internal::env_id (604 instructions, 1.16%)</title><rect x="51.3048%" y="165" width="1.1590%" height="15" fill="rgb(207,104,33)" fg:x="26738" fg:w="604"/><text x="51.5978%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,232 instructions, 8.12%)</title><rect x="44.5909%" y="181" width="8.1203%" height="15" fill="rgb(219,21,39)" fg:x="23239" fg:w="4232"/><text x="44.8839%" y="191.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.7113%" y="181" width="0.1593%" height="15" fill="rgb(214,133,29)" fg:x="27471" fg:w="83"/><text x="53.0042%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="52.8705%" y="181" width="0.1593%" height="15" fill="rgb(226,93,6)" fg:x="27554" fg:w="83"/><text x="53.1635%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="53.0298%" y="149" width="0.0269%" height="15" fill="rgb(252,222,34)" fg:x="27637" fg:w="14"/><text x="53.3227%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="53.0566%" y="133" width="0.1132%" height="15" fill="rgb(252,92,48)" fg:x="27651" fg:w="59"/><text x="53.3496%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="53.1699%" y="133" width="0.1804%" height="15" fill="rgb(245,223,24)" fg:x="27710" fg:w="94"/><text x="53.4628%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="53.3502%" y="133" width="0.3320%" height="15" fill="rgb(205,176,3)" fg:x="27804" fg:w="173"/><text x="53.6432%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="53.0566%" y="149" width="1.1110%" height="15" fill="rgb(235,151,15)" fg:x="27651" fg:w="579"/><text x="53.3496%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (725 instructions, 1.39%)</title><rect x="53.0298%" y="165" width="1.3911%" height="15" fill="rgb(237,209,11)" fg:x="27637" fg:w="725"/><text x="53.3227%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="54.4209%" y="165" width="0.1573%" height="15" fill="rgb(243,227,24)" fg:x="28362" fg:w="82"/><text x="54.7139%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="54.5782%" y="149" width="0.0269%" height="15" fill="rgb(239,193,16)" fg:x="28444" fg:w="14"/><text x="54.8712%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="54.6051%" y="133" width="0.1132%" height="15" fill="rgb(231,27,9)" fg:x="28458" fg:w="59"/><text x="54.8981%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="54.7183%" y="133" width="0.1804%" height="15" fill="rgb(219,169,10)" fg:x="28517" fg:w="94"/><text x="55.0113%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="54.8987%" y="133" width="0.3320%" height="15" fill="rgb(244,229,43)" fg:x="28611" fg:w="173"/><text x="55.1917%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="54.6051%" y="149" width="1.1110%" height="15" fill="rgb(254,38,20)" fg:x="28458" fg:w="579"/><text x="54.8981%" y="159.50"></text></g><g><title>candid::types::internal::env_add (821 instructions, 1.58%)</title><rect x="54.5782%" y="165" width="1.5753%" height="15" fill="rgb(250,47,30)" fg:x="28444" fg:w="821"/><text x="54.8712%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="56.1536%" y="165" width="0.1593%" height="15" fill="rgb(224,124,36)" fg:x="29265" fg:w="83"/><text x="56.4465%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="56.3128%" y="149" width="0.0269%" height="15" fill="rgb(246,68,51)" fg:x="29348" fg:w="14"/><text x="56.6058%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="56.3397%" y="133" width="0.1132%" height="15" fill="rgb(253,43,49)" fg:x="29362" fg:w="59"/><text x="56.6327%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="56.4529%" y="133" width="0.1804%" height="15" fill="rgb(219,54,36)" fg:x="29421" fg:w="94"/><text x="56.7459%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="56.6333%" y="133" width="0.3320%" height="15" fill="rgb(227,133,34)" fg:x="29515" fg:w="173"/><text x="56.9262%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="56.3397%" y="149" width="1.1110%" height="15" fill="rgb(247,227,15)" fg:x="29362" fg:w="579"/><text x="56.6327%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="57.4507%" y="149" width="0.1746%" height="15" fill="rgb(229,96,14)" fg:x="29941" fg:w="91"/><text x="57.7437%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="57.6253%" y="149" width="0.1784%" height="15" fill="rgb(220,79,17)" fg:x="30032" fg:w="93"/><text x="57.9183%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="57.8037%" y="133" width="0.1132%" height="15" fill="rgb(205,131,53)" fg:x="30125" fg:w="59"/><text x="58.0967%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="57.9170%" y="133" width="0.1804%" height="15" fill="rgb(209,50,29)" fg:x="30184" fg:w="94"/><text x="58.2099%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="58.0973%" y="133" width="0.3320%" height="15" fill="rgb(245,86,46)" fg:x="30278" fg:w="173"/><text x="58.3903%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="58.9147%" y="133" width="0.1132%" height="15" fill="rgb(235,66,46)" fg:x="30704" fg:w="59"/><text x="59.2077%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="59.0279%" y="133" width="0.5334%" height="15" fill="rgb(232,148,31)" fg:x="30763" fg:w="278"/><text x="59.3209%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="59.5614%" y="133" width="0.3320%" height="15" fill="rgb(217,149,8)" fg:x="31041" fg:w="173"/><text x="59.8543%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="60.3788%" y="133" width="0.1132%" height="15" fill="rgb(209,183,11)" fg:x="31467" fg:w="59"/><text x="60.6717%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.61%)</title><rect x="60.4920%" y="133" width="0.6102%" height="15" fill="rgb(208,55,20)" fg:x="31526" fg:w="318"/><text x="60.7849%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="61.1022%" y="133" width="0.1497%" height="15" fill="rgb(218,39,14)" fg:x="31844" fg:w="78"/><text x="61.3951%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,050 instructions, 3.93%)</title><rect x="57.8037%" y="149" width="3.9335%" height="15" fill="rgb(216,169,33)" fg:x="30125" fg:w="2050"/><text x="58.0967%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="61.7373%" y="149" width="0.1650%" height="15" fill="rgb(233,80,24)" fg:x="32175" fg:w="86"/><text x="62.0302%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="61.9023%" y="149" width="0.1477%" height="15" fill="rgb(213,179,31)" fg:x="32261" fg:w="77"/><text x="62.1953%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="62.0500%" y="133" width="0.1650%" height="15" fill="rgb(209,19,5)" fg:x="32338" fg:w="86"/><text x="62.3430%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="62.0500%" y="149" width="0.2322%" height="15" fill="rgb(219,18,35)" fg:x="32338" fg:w="121"/><text x="62.3430%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,813 instructions, 7.32%)</title><rect x="56.3128%" y="165" width="7.3164%" height="15" fill="rgb(209,169,16)" fg:x="29348" fg:w="3813"/><text x="56.6058%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="63.6292%" y="117" width="0.1132%" height="15" fill="rgb(245,90,51)" fg:x="33161" fg:w="59"/><text x="63.9222%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="63.6292%" y="133" width="0.1804%" height="15" fill="rgb(220,99,45)" fg:x="33161" fg:w="94"/><text x="63.9222%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="64.2336%" y="117" width="0.1132%" height="15" fill="rgb(249,89,25)" fg:x="33476" fg:w="59"/><text x="64.5266%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="64.2336%" y="133" width="0.1804%" height="15" fill="rgb(239,193,0)" fg:x="33476" fg:w="94"/><text x="64.5266%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (630 instructions, 1.21%)</title><rect x="63.6292%" y="149" width="1.2088%" height="15" fill="rgb(231,126,1)" fg:x="33161" fg:w="630"/><text x="63.9222%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.17%)</title><rect x="64.8381%" y="149" width="0.1746%" height="15" fill="rgb(243,166,3)" fg:x="33791" fg:w="91"/><text x="65.1310%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="65.0127%" y="149" width="0.1784%" height="15" fill="rgb(223,22,34)" fg:x="33882" fg:w="93"/><text x="65.3056%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.1911%" y="117" width="0.1132%" height="15" fill="rgb(251,52,51)" fg:x="33975" fg:w="59"/><text x="65.4841%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="65.1911%" y="133" width="0.1804%" height="15" fill="rgb(221,165,28)" fg:x="33975" fg:w="94"/><text x="65.4841%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="65.7955%" y="117" width="0.1132%" height="15" fill="rgb(218,121,47)" fg:x="34290" fg:w="59"/><text x="66.0885%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="65.7955%" y="133" width="0.1804%" height="15" fill="rgb(209,120,9)" fg:x="34290" fg:w="94"/><text x="66.0885%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.4000%" y="117" width="0.1132%" height="15" fill="rgb(236,68,12)" fg:x="34605" fg:w="59"/><text x="66.6929%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="66.5132%" y="117" width="0.3147%" height="15" fill="rgb(225,194,26)" fg:x="34664" fg:w="164"/><text x="66.8061%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="66.8278%" y="101" width="0.1132%" height="15" fill="rgb(231,84,39)" fg:x="34828" fg:w="59"/><text x="67.1208%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="66.8278%" y="117" width="0.1784%" height="15" fill="rgb(210,11,45)" fg:x="34828" fg:w="93"/><text x="67.1208%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.78%)</title><rect x="66.4000%" y="133" width="0.7771%" height="15" fill="rgb(224,54,52)" fg:x="34605" fg:w="405"/><text x="66.6929%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,256 instructions, 2.41%)</title><rect x="65.1911%" y="149" width="2.4100%" height="15" fill="rgb(238,102,14)" fg:x="33975" fg:w="1256"/><text x="65.4841%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="67.6011%" y="149" width="0.1612%" height="15" fill="rgb(243,160,52)" fg:x="35231" fg:w="84"/><text x="67.8941%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,993 instructions, 5.74%)</title><rect x="63.6292%" y="165" width="5.7430%" height="15" fill="rgb(216,114,19)" fg:x="33161" fg:w="2993"/><text x="63.9222%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (8,646 instructions, 16.59%)</title><rect x="53.0298%" y="181" width="16.5899%" height="15" fill="rgb(244,166,37)" fg:x="27637" fg:w="8646"/><text x="53.3227%" y="191.50">candid::types::Candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="69.6197%" y="181" width="0.1573%" height="15" fill="rgb(246,29,44)" fg:x="36283" fg:w="82"/><text x="69.9127%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="69.7770%" y="165" width="0.0269%" height="15" fill="rgb(215,56,53)" fg:x="36365" fg:w="14"/><text x="70.0700%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="69.8039%" y="149" width="0.1132%" height="15" fill="rgb(217,60,2)" fg:x="36379" fg:w="59"/><text x="70.0969%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (278 instructions, 0.53%)</title><rect x="69.9171%" y="149" width="0.5334%" height="15" fill="rgb(207,26,24)" fg:x="36438" fg:w="278"/><text x="70.2101%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="70.4505%" y="149" width="0.3320%" height="15" fill="rgb(252,210,15)" fg:x="36716" fg:w="173"/><text x="70.7435%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (763 instructions, 1.46%)</title><rect x="69.8039%" y="165" width="1.4640%" height="15" fill="rgb(253,209,26)" fg:x="36379" fg:w="763"/><text x="70.0969%" y="175.50"></text></g><g><title>memcmp (445 instructions, 0.85%)</title><rect x="71.2679%" y="165" width="0.8539%" height="15" fill="rgb(238,170,14)" fg:x="37142" fg:w="445"/><text x="71.5609%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="72.1218%" y="149" width="0.1650%" height="15" fill="rgb(216,178,15)" fg:x="37587" fg:w="86"/><text x="72.4148%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="72.1218%" y="165" width="0.2322%" height="15" fill="rgb(250,197,2)" fg:x="37587" fg:w="121"/><text x="72.4148%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,538 instructions, 2.95%)</title><rect x="69.7770%" y="181" width="2.9511%" height="15" fill="rgb(212,70,42)" fg:x="36365" fg:w="1538"/><text x="70.0700%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="72.7281%" y="133" width="0.1132%" height="15" fill="rgb(227,213,9)" fg:x="37903" fg:w="59"/><text x="73.0211%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="72.8414%" y="133" width="0.3147%" height="15" fill="rgb(245,99,25)" fg:x="37962" fg:w="164"/><text x="73.1343%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="73.1560%" y="117" width="0.1132%" height="15" fill="rgb(250,82,29)" fg:x="38126" fg:w="59"/><text x="73.4490%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="73.3345%" y="117" width="0.3147%" height="15" fill="rgb(241,226,54)" fg:x="38219" fg:w="164"/><text x="73.6275%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="73.1560%" y="133" width="0.5584%" height="15" fill="rgb(221,99,41)" fg:x="38126" fg:w="291"/><text x="73.4490%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (623 instructions, 1.20%)</title><rect x="72.7281%" y="149" width="1.1954%" height="15" fill="rgb(213,90,21)" fg:x="37903" fg:w="623"/><text x="73.0211%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.3476%" y="133" width="0.1132%" height="15" fill="rgb(205,208,24)" fg:x="38747" fg:w="59"/><text x="74.6406%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.4608%" y="133" width="0.3147%" height="15" fill="rgb(246,31,12)" fg:x="38806" fg:w="164"/><text x="74.7538%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="74.7755%" y="117" width="0.1132%" height="15" fill="rgb(213,154,6)" fg:x="38970" fg:w="59"/><text x="75.0685%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="74.9539%" y="117" width="0.3147%" height="15" fill="rgb(222,163,29)" fg:x="39063" fg:w="164"/><text x="75.2469%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (291 instructions, 0.56%)</title><rect x="74.7755%" y="133" width="0.5584%" height="15" fill="rgb(227,201,8)" fg:x="38970" fg:w="291"/><text x="75.0685%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (623 instructions, 1.20%)</title><rect x="74.3476%" y="149" width="1.1954%" height="15" fill="rgb(233,9,32)" fg:x="38747" fg:w="623"/><text x="74.6406%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,688 instructions, 3.24%)</title><rect x="72.7281%" y="165" width="3.2389%" height="15" fill="rgb(217,54,24)" fg:x="37903" fg:w="1688"/><text x="73.0211%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (2,018 instructions, 3.87%)</title><rect x="72.7281%" y="181" width="3.8721%" height="15" fill="rgb(235,192,0)" fg:x="37903" fg:w="2018"/><text x="73.0211%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="76.6003%" y="181" width="0.1017%" height="15" fill="rgb(235,45,9)" fg:x="39921" fg:w="53"/><text x="76.8932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="76.7020%" y="165" width="0.1612%" height="15" fill="rgb(246,42,40)" fg:x="39974" fg:w="84"/><text x="76.9949%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="76.9303%" y="165" width="0.2494%" height="15" fill="rgb(248,111,24)" fg:x="40093" fg:w="130"/><text x="77.2233%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (284 instructions, 0.54%)</title><rect x="76.7020%" y="181" width="0.5449%" height="15" fill="rgb(249,65,22)" fg:x="39974" fg:w="284"/><text x="76.9949%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.28%)</title><rect x="77.2469%" y="117" width="0.2801%" height="15" fill="rgb(238,111,51)" fg:x="40258" fg:w="146"/><text x="77.5399%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (254 instructions, 0.49%)</title><rect x="77.2469%" y="133" width="0.4874%" height="15" fill="rgb(250,118,22)" fg:x="40258" fg:w="254"/><text x="77.5399%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (342 instructions, 0.66%)</title><rect x="77.2469%" y="149" width="0.6562%" height="15" fill="rgb(234,84,26)" fg:x="40258" fg:w="342"/><text x="77.5399%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="77.9031%" y="149" width="0.0249%" height="15" fill="rgb(243,172,12)" fg:x="40600" fg:w="13"/><text x="78.1961%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (423 instructions, 0.81%)</title><rect x="77.2469%" y="165" width="0.8117%" height="15" fill="rgb(236,150,49)" fg:x="40258" fg:w="423"/><text x="77.5399%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.0586%" y="149" width="0.1593%" height="15" fill="rgb(225,197,26)" fg:x="40681" fg:w="83"/><text x="78.3515%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.15%)</title><rect x="78.5325%" y="149" width="0.1477%" height="15" fill="rgb(214,17,42)" fg:x="40928" fg:w="77"/><text x="78.8255%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (488 instructions, 0.94%)</title><rect x="78.0586%" y="165" width="0.9364%" height="15" fill="rgb(224,165,40)" fg:x="40681" fg:w="488"/><text x="78.3515%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="78.9949%" y="165" width="0.0249%" height="15" fill="rgb(246,100,4)" fg:x="41169" fg:w="13"/><text x="79.2879%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="79.0199%" y="165" width="0.0249%" height="15" fill="rgb(222,103,0)" fg:x="41182" fg:w="13"/><text x="79.3128%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.23%)</title><rect x="79.0448%" y="149" width="0.2322%" height="15" fill="rgb(227,189,26)" fg:x="41195" fg:w="121"/><text x="79.3378%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="79.2770%" y="149" width="0.1900%" height="15" fill="rgb(214,202,17)" fg:x="41316" fg:w="99"/><text x="79.5700%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="79.4670%" y="149" width="0.2360%" height="15" fill="rgb(229,111,3)" fg:x="41415" fg:w="123"/><text x="79.7599%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="79.7030%" y="149" width="0.1151%" height="15" fill="rgb(229,172,15)" fg:x="41538" fg:w="60"/><text x="79.9959%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (500 instructions, 0.96%)</title><rect x="79.0448%" y="165" width="0.9594%" height="15" fill="rgb(230,224,35)" fg:x="41195" fg:w="500"/><text x="79.3378%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="80.0042%" y="149" width="0.0652%" height="15" fill="rgb(251,141,6)" fg:x="41695" fg:w="34"/><text x="80.2972%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="80.0695%" y="149" width="0.0345%" height="15" fill="rgb(225,208,6)" fg:x="41729" fg:w="18"/><text x="80.3624%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="80.1040%" y="149" width="0.0345%" height="15" fill="rgb(246,181,16)" fg:x="41747" fg:w="18"/><text x="80.3970%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="80.1385%" y="133" width="0.1573%" height="15" fill="rgb(227,129,36)" fg:x="41765" fg:w="82"/><text x="80.4315%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="80.2959%" y="133" width="0.1343%" height="15" fill="rgb(248,117,24)" fg:x="41847" fg:w="70"/><text x="80.5888%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="80.4302%" y="133" width="0.1458%" height="15" fill="rgb(214,185,35)" fg:x="41917" fg:w="76"/><text x="80.7232%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.56%)</title><rect x="80.1385%" y="149" width="0.5565%" height="15" fill="rgb(236,150,34)" fg:x="41765" fg:w="290"/><text x="80.4315%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.12%)</title><rect x="80.6950%" y="149" width="0.1209%" height="15" fill="rgb(243,228,27)" fg:x="42055" fg:w="63"/><text x="80.9880%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.8159%" y="149" width="0.1593%" height="15" fill="rgb(245,77,44)" fg:x="42118" fg:w="83"/><text x="81.1088%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.22%)</title><rect x="80.9751%" y="149" width="0.2207%" height="15" fill="rgb(235,214,42)" fg:x="42201" fg:w="115"/><text x="81.2681%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (163 instructions, 0.31%)</title><rect x="81.1958%" y="149" width="0.3128%" height="15" fill="rgb(221,74,3)" fg:x="42316" fg:w="163"/><text x="81.4888%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (965 instructions, 1.85%)</title><rect x="80.0042%" y="165" width="1.8516%" height="15" fill="rgb(206,121,29)" fg:x="41695" fg:w="965"/><text x="80.2972%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8559%" y="165" width="0.0249%" height="15" fill="rgb(249,131,53)" fg:x="42660" fg:w="13"/><text x="82.1488%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.8808%" y="165" width="0.0249%" height="15" fill="rgb(236,170,29)" fg:x="42673" fg:w="13"/><text x="82.1738%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="81.9057%" y="149" width="0.1593%" height="15" fill="rgb(247,96,15)" fg:x="42686" fg:w="83"/><text x="82.1987%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.19%)</title><rect x="82.0650%" y="149" width="0.1900%" height="15" fill="rgb(211,210,7)" fg:x="42769" fg:w="99"/><text x="82.3580%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="82.2550%" y="149" width="0.0365%" height="15" fill="rgb(240,88,50)" fg:x="42868" fg:w="19"/><text x="82.5479%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.24%)</title><rect x="82.2914%" y="149" width="0.2360%" height="15" fill="rgb(209,229,26)" fg:x="42887" fg:w="123"/><text x="82.5844%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="82.5274%" y="149" width="0.1151%" height="15" fill="rgb(210,68,23)" fg:x="43010" fg:w="60"/><text x="82.8204%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (490 instructions, 0.94%)</title><rect x="81.9057%" y="165" width="0.9402%" height="15" fill="rgb(229,180,13)" fg:x="42686" fg:w="490"/><text x="82.1987%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="82.8460%" y="165" width="0.0652%" height="15" fill="rgb(236,53,44)" fg:x="43176" fg:w="34"/><text x="83.1389%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.9112%" y="165" width="0.0345%" height="15" fill="rgb(244,214,29)" fg:x="43210" fg:w="18"/><text x="83.2042%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="82.9457%" y="165" width="0.0345%" height="15" fill="rgb(220,75,29)" fg:x="43228" fg:w="18"/><text x="83.2387%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="82.9803%" y="149" width="0.0134%" height="15" fill="rgb(214,183,37)" fg:x="43246" fg:w="7"/><text x="83.2732%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="82.9937%" y="149" width="0.1650%" height="15" fill="rgb(239,117,29)" fg:x="43253" fg:w="86"/><text x="83.2867%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="83.1587%" y="149" width="0.0134%" height="15" fill="rgb(237,171,35)" fg:x="43339" fg:w="7"/><text x="83.4517%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="83.1722%" y="149" width="0.2590%" height="15" fill="rgb(229,178,53)" fg:x="43346" fg:w="135"/><text x="83.4651%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (286 instructions, 0.55%)</title><rect x="82.9803%" y="165" width="0.5488%" height="15" fill="rgb(210,102,19)" fg:x="43246" fg:w="286"/><text x="83.2732%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (4,406 instructions, 8.45%)</title><rect x="77.2469%" y="181" width="8.4542%" height="15" fill="rgb(235,127,22)" fg:x="40258" fg:w="4406"/><text x="77.5399%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="85.7011%" y="165" width="0.1650%" height="15" fill="rgb(244,31,31)" fg:x="44664" fg:w="86"/><text x="85.9941%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="85.8661%" y="165" width="0.1650%" height="15" fill="rgb(231,43,21)" fg:x="44750" fg:w="86"/><text x="86.1591%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (225 instructions, 0.43%)</title><rect x="85.7011%" y="181" width="0.4317%" height="15" fill="rgb(217,131,35)" fg:x="44664" fg:w="225"/><text x="85.9941%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.1329%" y="181" width="0.0249%" height="15" fill="rgb(221,149,4)" fg:x="44889" fg:w="13"/><text x="86.4258%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="86.1578%" y="181" width="0.0249%" height="15" fill="rgb(232,170,28)" fg:x="44902" fg:w="13"/><text x="86.4508%" y="191.50"></text></g><g><title>memcpy (440 instructions, 0.84%)</title><rect x="86.1827%" y="181" width="0.8443%" height="15" fill="rgb(238,56,10)" fg:x="44915" fg:w="440"/><text x="86.4757%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.0270%" y="133" width="0.1650%" height="15" fill="rgb(235,196,14)" fg:x="45355" fg:w="86"/><text x="87.3200%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.1920%" y="117" width="0.1650%" height="15" fill="rgb(216,45,48)" fg:x="45441" fg:w="86"/><text x="87.4850%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.34%)</title><rect x="87.3570%" y="101" width="0.3435%" height="15" fill="rgb(238,213,17)" fg:x="45527" fg:w="179"/><text x="87.6500%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.41%)</title><rect x="87.3570%" y="117" width="0.4106%" height="15" fill="rgb(212,13,2)" fg:x="45527" fg:w="214"/><text x="87.6500%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="87.7677%" y="117" width="0.1650%" height="15" fill="rgb(240,114,20)" fg:x="45741" fg:w="86"/><text x="88.0606%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="87.9327%" y="117" width="0.0249%" height="15" fill="rgb(228,41,40)" fg:x="45827" fg:w="13"/><text x="88.2257%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="87.9576%" y="117" width="0.3473%" height="15" fill="rgb(244,132,35)" fg:x="45840" fg:w="181"/><text x="88.2506%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="88.3049%" y="117" width="0.1612%" height="15" fill="rgb(253,189,4)" fg:x="46021" fg:w="84"/><text x="88.5979%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (831 instructions, 1.59%)</title><rect x="87.1920%" y="133" width="1.5945%" height="15" fill="rgb(224,37,19)" fg:x="45441" fg:w="831"/><text x="87.4850%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="88.7866%" y="117" width="0.1286%" height="15" fill="rgb(235,223,18)" fg:x="46272" fg:w="67"/><text x="89.0795%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.44%)</title><rect x="88.7866%" y="133" width="0.4375%" height="15" fill="rgb(235,163,25)" fg:x="46272" fg:w="228"/><text x="89.0795%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,266 instructions, 2.43%)</title><rect x="87.0270%" y="149" width="2.4292%" height="15" fill="rgb(217,145,28)" fg:x="45355" fg:w="1266"/><text x="87.3200%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="89.4562%" y="149" width="0.2494%" height="15" fill="rgb(223,223,32)" fg:x="46621" fg:w="130"/><text x="89.7492%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="89.7057%" y="117" width="0.1190%" height="15" fill="rgb(227,189,39)" fg:x="46751" fg:w="62"/><text x="89.9986%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="89.8246%" y="117" width="0.1286%" height="15" fill="rgb(248,10,22)" fg:x="46813" fg:w="67"/><text x="90.1176%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (277 instructions, 0.53%)</title><rect x="89.7057%" y="133" width="0.5315%" height="15" fill="rgb(248,46,39)" fg:x="46751" fg:w="277"/><text x="89.9986%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (312 instructions, 0.60%)</title><rect x="89.7057%" y="149" width="0.5987%" height="15" fill="rgb(248,113,48)" fg:x="46751" fg:w="312"/><text x="89.9986%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.3043%" y="149" width="0.0249%" height="15" fill="rgb(245,16,25)" fg:x="47063" fg:w="13"/><text x="90.5973%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,783 instructions, 3.42%)</title><rect x="87.0270%" y="165" width="3.4212%" height="15" fill="rgb(249,152,16)" fg:x="45355" fg:w="1783"/><text x="87.3200%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,832 instructions, 3.52%)</title><rect x="87.0270%" y="181" width="3.5152%" height="15" fill="rgb(250,16,1)" fg:x="45355" fg:w="1832"/><text x="87.3200%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="90.5423%" y="181" width="0.2533%" height="15" fill="rgb(249,138,3)" fg:x="47187" fg:w="132"/><text x="90.8352%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="90.7955%" y="181" width="0.1151%" height="15" fill="rgb(227,71,41)" fg:x="47319" fg:w="60"/><text x="91.0885%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="90.9107%" y="149" width="0.0269%" height="15" fill="rgb(209,184,23)" fg:x="47379" fg:w="14"/><text x="91.2036%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9375%" y="149" width="0.0249%" height="15" fill="rgb(223,215,31)" fg:x="47393" fg:w="13"/><text x="91.2305%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9625%" y="149" width="0.0249%" height="15" fill="rgb(210,146,28)" fg:x="47406" fg:w="13"/><text x="91.2554%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.9874%" y="149" width="0.0249%" height="15" fill="rgb(209,183,41)" fg:x="47419" fg:w="13"/><text x="91.2804%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="91.0124%" y="149" width="0.1784%" height="15" fill="rgb(209,224,45)" fg:x="47432" fg:w="93"/><text x="91.3053%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (390 instructions, 0.75%)</title><rect x="90.9107%" y="165" width="0.7483%" height="15" fill="rgb(224,209,51)" fg:x="47379" fg:w="390"/><text x="91.2036%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.99%)</title><rect x="91.6590%" y="149" width="0.9939%" height="15" fill="rgb(223,17,39)" fg:x="47769" fg:w="518"/><text x="91.9520%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="92.6529%" y="101" width="0.1593%" height="15" fill="rgb(234,204,37)" fg:x="48287" fg:w="83"/><text x="92.9459%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="92.6529%" y="117" width="0.2418%" height="15" fill="rgb(236,120,5)" fg:x="48287" fg:w="126"/><text x="92.9459%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.39%)</title><rect x="92.6529%" y="133" width="0.3934%" height="15" fill="rgb(248,97,27)" fg:x="48287" fg:w="205"/><text x="92.9459%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0463%" y="133" width="0.0288%" height="15" fill="rgb(240,66,17)" fg:x="48492" fg:w="15"/><text x="93.3393%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="93.0751%" y="133" width="0.0288%" height="15" fill="rgb(210,79,3)" fg:x="48507" fg:w="15"/><text x="93.3680%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (423 instructions, 0.81%)</title><rect x="92.6529%" y="149" width="0.8117%" height="15" fill="rgb(214,176,27)" fg:x="48287" fg:w="423"/><text x="92.9459%" y="159.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.99%)</title><rect x="93.4646%" y="149" width="0.9901%" height="15" fill="rgb(235,185,3)" fg:x="48710" fg:w="516"/><text x="93.7575%" y="159.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="94.4547%" y="149" width="0.0134%" height="15" fill="rgb(227,24,12)" fg:x="49226" fg:w="7"/><text x="94.7476%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,557 instructions, 2.99%)</title><rect x="91.6590%" y="165" width="2.9876%" height="15" fill="rgb(252,169,48)" fg:x="47769" fg:w="1557"/><text x="91.9520%" y="175.50">ca..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="94.6466%" y="165" width="0.0134%" height="15" fill="rgb(212,65,1)" fg:x="49326" fg:w="7"/><text x="94.9395%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="94.6600%" y="165" width="0.1151%" height="15" fill="rgb(242,39,24)" fg:x="49333" fg:w="60"/><text x="94.9530%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,620 instructions, 5.03%)</title><rect x="90.9107%" y="181" width="5.0272%" height="15" fill="rgb(249,32,23)" fg:x="47379" fg:w="2620"/><text x="91.2036%" y="191.50">ic_cd..</text></g><g><title>subscriber::__canister_method_update_count::{{closure}} (51,550 instructions, 98.91%)</title><rect x="0.3627%" y="197" width="98.9140%" height="15" fill="rgb(251,195,23)" fg:x="189" fg:w="51550"/><text x="0.6556%" y="207.50">subscriber::__canister_method_update_count::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.2766%" y="197" width="0.0269%" height="15" fill="rgb(236,174,8)" fg:x="51739" fg:w="14"/><text x="99.5696%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="99.3054%" y="197" width="0.1650%" height="15" fill="rgb(220,197,8)" fg:x="51754" fg:w="86"/><text x="99.5984%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="99.4704%" y="197" width="0.2533%" height="15" fill="rgb(240,108,37)" fg:x="51840" fg:w="132"/><text x="99.7634%" y="207.50"></text></g><g><title>all (52,116 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(232,176,24)" fg:x="0" fg:w="52116"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (52,116 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(243,35,29)" fg:x="0" fg:w="52116"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>