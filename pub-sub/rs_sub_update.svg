<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="44132"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0431%" height="15" fill="rgb(230,187,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0431%" y="197" width="0.1767%" height="15" fill="rgb(209,44,26)" fg:x="19" fg:w="78"/><text x="0.3360%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2198%" y="197" width="0.1722%" height="15" fill="rgb(244,0,6)" fg:x="97" fg:w="76"/><text x="0.5128%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3920%" y="181" width="0.1722%" height="15" fill="rgb(248,18,21)" fg:x="173" fg:w="76"/><text x="0.6850%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5642%" y="165" width="0.1563%" height="15" fill="rgb(245,180,19)" fg:x="249" fg:w="69"/><text x="0.8572%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="0.7206%" y="165" width="0.9200%" height="15" fill="rgb(252,118,36)" fg:x="318" fg:w="406"/><text x="1.0135%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="1.6405%" y="165" width="0.1858%" height="15" fill="rgb(210,224,19)" fg:x="724" fg:w="82"/><text x="1.9335%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8263%" y="165" width="0.1224%" height="15" fill="rgb(218,30,24)" fg:x="806" fg:w="54"/><text x="2.1193%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9487%" y="165" width="0.1224%" height="15" fill="rgb(219,75,50)" fg:x="860" fg:w="54"/><text x="2.2417%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0711%" y="165" width="0.1224%" height="15" fill="rgb(234,72,50)" fg:x="914" fg:w="54"/><text x="2.3640%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1934%" y="165" width="0.1224%" height="15" fill="rgb(219,100,48)" fg:x="968" fg:w="54"/><text x="2.4864%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.3158%" y="165" width="0.1563%" height="15" fill="rgb(253,5,41)" fg:x="1022" fg:w="69"/><text x="2.6087%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4721%" y="165" width="0.1473%" height="15" fill="rgb(247,181,11)" fg:x="1091" fg:w="65"/><text x="2.7651%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="2.6194%" y="165" width="0.9200%" height="15" fill="rgb(222,223,25)" fg:x="1156" fg:w="406"/><text x="2.9124%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5394%" y="165" width="0.0363%" height="15" fill="rgb(214,198,28)" fg:x="1562" fg:w="16"/><text x="3.8324%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="3.5756%" y="149" width="0.1609%" height="15" fill="rgb(230,46,43)" fg:x="1578" fg:w="71"/><text x="3.8686%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7365%" y="117" width="0.1360%" height="15" fill="rgb(233,65,53)" fg:x="1649" fg:w="60"/><text x="4.0295%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7365%" y="133" width="0.1926%" height="15" fill="rgb(221,121,27)" fg:x="1649" fg:w="85"/><text x="4.0295%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9291%" y="85" width="0.0204%" height="15" fill="rgb(247,70,47)" fg:x="1734" fg:w="9"/><text x="4.2221%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9495%" y="69" width="0.0680%" height="15" fill="rgb(228,85,35)" fg:x="1743" fg:w="30"/><text x="4.2425%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9495%" y="85" width="0.1246%" height="15" fill="rgb(209,50,18)" fg:x="1743" fg:w="55"/><text x="4.2425%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="3.9291%" y="101" width="0.2674%" height="15" fill="rgb(250,19,35)" fg:x="1734" fg:w="118"/><text x="4.2221%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="3.9291%" y="117" width="0.3875%" height="15" fill="rgb(253,107,29)" fg:x="1734" fg:w="171"/><text x="4.2221%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="3.9291%" y="133" width="0.3988%" height="15" fill="rgb(252,179,29)" fg:x="1734" fg:w="176"/><text x="4.2221%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="3.7365%" y="149" width="0.8429%" height="15" fill="rgb(238,194,6)" fg:x="1649" fg:w="372"/><text x="4.0295%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.32%)</title><rect x="3.5756%" y="165" width="1.3233%" height="15" fill="rgb(238,164,29)" fg:x="1578" fg:w="584"/><text x="3.8686%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="4.8989%" y="165" width="0.1858%" height="15" fill="rgb(224,25,9)" fg:x="2162" fg:w="82"/><text x="5.1919%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="5.0847%" y="165" width="0.1835%" height="15" fill="rgb(244,153,23)" fg:x="2244" fg:w="81"/><text x="5.3777%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.2683%" y="149" width="0.1224%" height="15" fill="rgb(212,203,14)" fg:x="2325" fg:w="54"/><text x="5.5613%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="5.3906%" y="149" width="0.1767%" height="15" fill="rgb(220,164,20)" fg:x="2379" fg:w="78"/><text x="5.6836%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="5.5674%" y="133" width="0.2674%" height="15" fill="rgb(222,203,48)" fg:x="2457" fg:w="118"/><text x="5.8604%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="5.8348%" y="101" width="0.2719%" height="15" fill="rgb(215,159,22)" fg:x="2575" fg:w="120"/><text x="6.1277%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="5.8348%" y="117" width="0.3286%" height="15" fill="rgb(216,183,47)" fg:x="2575" fg:w="145"/><text x="6.1277%" y="127.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="6.1633%" y="37" width="0.2289%" height="15" fill="rgb(229,195,25)" fg:x="2720" fg:w="101"/><text x="6.4563%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="6.1633%" y="53" width="0.3082%" height="15" fill="rgb(224,132,51)" fg:x="2720" fg:w="136"/><text x="6.4563%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 instructions, 0.48%)</title><rect x="6.1633%" y="69" width="0.4826%" height="15" fill="rgb(240,63,7)" fg:x="2720" fg:w="213"/><text x="6.4563%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="6.6460%" y="69" width="0.4487%" height="15" fill="rgb(249,182,41)" fg:x="2933" fg:w="198"/><text x="6.9389%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (443 instructions, 1.00%)</title><rect x="6.1633%" y="85" width="1.0038%" height="15" fill="rgb(243,47,26)" fg:x="2720" fg:w="443"/><text x="6.4563%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.1671%" y="53" width="0.0204%" height="15" fill="rgb(233,48,2)" fg:x="3163" fg:w="9"/><text x="7.4601%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1875%" y="37" width="0.0680%" height="15" fill="rgb(244,165,34)" fg:x="3172" fg:w="30"/><text x="7.4805%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.1875%" y="53" width="0.1246%" height="15" fill="rgb(207,89,7)" fg:x="3172" fg:w="55"/><text x="7.4805%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.1671%" y="69" width="0.2674%" height="15" fill="rgb(244,117,36)" fg:x="3163" fg:w="118"/><text x="7.4601%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.42%)</title><rect x="7.1671%" y="85" width="0.4169%" height="15" fill="rgb(226,144,34)" fg:x="3163" fg:w="184"/><text x="7.4601%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="7.5841%" y="69" width="0.1020%" height="15" fill="rgb(213,23,19)" fg:x="3347" fg:w="45"/><text x="7.8770%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="7.5841%" y="85" width="0.1586%" height="15" fill="rgb(217,75,12)" fg:x="3347" fg:w="70"/><text x="7.8770%" y="95.50"></text></g><g><title>core::fmt::write (825 instructions, 1.87%)</title><rect x="6.1633%" y="101" width="1.8694%" height="15" fill="rgb(224,159,17)" fg:x="2720" fg:w="825"/><text x="6.4563%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (880 instructions, 1.99%)</title><rect x="6.1633%" y="117" width="1.9940%" height="15" fill="rgb(217,118,1)" fg:x="2720" fg:w="880"/><text x="6.4563%" y="127.50"></text></g><g><title>core::fmt::write (1,136 instructions, 2.57%)</title><rect x="5.8348%" y="133" width="2.5741%" height="15" fill="rgb(232,180,48)" fg:x="2575" fg:w="1136"/><text x="6.1277%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,395 instructions, 3.16%)</title><rect x="5.5674%" y="149" width="3.1610%" height="15" fill="rgb(230,27,33)" fg:x="2457" fg:w="1395"/><text x="5.8604%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="8.7284%" y="149" width="0.1586%" height="15" fill="rgb(205,31,21)" fg:x="3852" fg:w="70"/><text x="9.0213%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="8.8870%" y="149" width="0.1246%" height="15" fill="rgb(253,59,4)" fg:x="3922" fg:w="55"/><text x="9.1799%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.0116%" y="149" width="0.1428%" height="15" fill="rgb(224,201,9)" fg:x="3977" fg:w="63"/><text x="9.3046%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="9.1544%" y="117" width="0.1722%" height="15" fill="rgb(229,206,30)" fg:x="4040" fg:w="76"/><text x="9.4473%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="9.1544%" y="133" width="0.2493%" height="15" fill="rgb(212,67,47)" fg:x="4040" fg:w="110"/><text x="9.4473%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="9.1544%" y="149" width="0.4033%" height="15" fill="rgb(211,96,50)" fg:x="4040" fg:w="178"/><text x="9.4473%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="9.5577%" y="149" width="0.1224%" height="15" fill="rgb(252,114,18)" fg:x="4218" fg:w="54"/><text x="9.8507%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="9.6801%" y="149" width="0.1609%" height="15" fill="rgb(223,58,37)" fg:x="4272" fg:w="71"/><text x="9.9730%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8409%" y="133" width="0.1858%" height="15" fill="rgb(237,70,4)" fg:x="4343" fg:w="82"/><text x="10.1339%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="10.0267%" y="101" width="0.2719%" height="15" fill="rgb(244,85,46)" fg:x="4425" fg:w="120"/><text x="10.3197%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="10.0267%" y="117" width="0.3286%" height="15" fill="rgb(223,39,52)" fg:x="4425" fg:w="145"/><text x="10.3197%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.18%)</title><rect x="10.3553%" y="37" width="0.1813%" height="15" fill="rgb(218,200,14)" fg:x="4570" fg:w="80"/><text x="10.6483%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.26%)</title><rect x="10.3553%" y="53" width="0.2606%" height="15" fill="rgb(208,171,16)" fg:x="4570" fg:w="115"/><text x="10.6483%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (192 instructions, 0.44%)</title><rect x="10.3553%" y="69" width="0.4351%" height="15" fill="rgb(234,200,18)" fg:x="4570" fg:w="192"/><text x="10.6483%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="10.7904%" y="69" width="0.4487%" height="15" fill="rgb(228,45,11)" fg:x="4762" fg:w="198"/><text x="11.0833%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (422 instructions, 0.96%)</title><rect x="10.3553%" y="85" width="0.9562%" height="15" fill="rgb(237,182,11)" fg:x="4570" fg:w="422"/><text x="10.6483%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="11.3115%" y="53" width="0.0204%" height="15" fill="rgb(241,175,49)" fg:x="4992" fg:w="9"/><text x="11.6045%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.3319%" y="37" width="0.0680%" height="15" fill="rgb(247,38,35)" fg:x="5001" fg:w="30"/><text x="11.6249%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.3319%" y="53" width="0.1246%" height="15" fill="rgb(228,39,49)" fg:x="5001" fg:w="55"/><text x="11.6249%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="11.3115%" y="69" width="0.2674%" height="15" fill="rgb(226,101,26)" fg:x="4992" fg:w="118"/><text x="11.6045%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.42%)</title><rect x="11.3115%" y="85" width="0.4169%" height="15" fill="rgb(206,141,19)" fg:x="4992" fg:w="184"/><text x="11.6045%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="11.7285%" y="69" width="0.1020%" height="15" fill="rgb(211,200,13)" fg:x="5176" fg:w="45"/><text x="12.0214%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="11.7285%" y="85" width="0.1586%" height="15" fill="rgb(241,121,6)" fg:x="5176" fg:w="70"/><text x="12.0214%" y="95.50"></text></g><g><title>core::fmt::write (804 instructions, 1.82%)</title><rect x="10.3553%" y="101" width="1.8218%" height="15" fill="rgb(234,221,29)" fg:x="4570" fg:w="804"/><text x="10.6483%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (859 instructions, 1.95%)</title><rect x="10.3553%" y="117" width="1.9464%" height="15" fill="rgb(229,136,5)" fg:x="4570" fg:w="859"/><text x="10.6483%" y="127.50"></text></g><g><title>core::fmt::write (1,115 instructions, 2.53%)</title><rect x="10.0267%" y="133" width="2.5265%" height="15" fill="rgb(238,36,11)" fg:x="4425" fg:w="1115"/><text x="10.3197%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,338 instructions, 3.03%)</title><rect x="9.8409%" y="149" width="3.0318%" height="15" fill="rgb(251,55,41)" fg:x="4343" fg:w="1338"/><text x="10.1339%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="12.8727%" y="149" width="0.1586%" height="15" fill="rgb(242,34,40)" fg:x="5681" fg:w="70"/><text x="13.1657%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="13.0314%" y="149" width="0.1269%" height="15" fill="rgb(215,42,17)" fg:x="5751" fg:w="56"/><text x="13.3243%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="13.1583%" y="149" width="0.1428%" height="15" fill="rgb(207,44,46)" fg:x="5807" fg:w="63"/><text x="13.4512%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="13.3010%" y="149" width="0.1224%" height="15" fill="rgb(211,206,28)" fg:x="5870" fg:w="54"/><text x="13.5940%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="13.4234%" y="133" width="0.1563%" height="15" fill="rgb(237,167,16)" fg:x="5924" fg:w="69"/><text x="13.7163%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="13.5797%" y="133" width="0.1473%" height="15" fill="rgb(233,66,6)" fg:x="5993" fg:w="65"/><text x="13.8727%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="13.7270%" y="133" width="0.9200%" height="15" fill="rgb(246,123,29)" fg:x="6058" fg:w="406"/><text x="14.0200%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="14.6470%" y="133" width="0.0363%" height="15" fill="rgb(209,62,40)" fg:x="6464" fg:w="16"/><text x="14.9399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="14.6832%" y="117" width="0.1858%" height="15" fill="rgb(218,4,25)" fg:x="6480" fg:w="82"/><text x="14.9762%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="14.8690%" y="85" width="0.1360%" height="15" fill="rgb(253,91,49)" fg:x="6562" fg:w="60"/><text x="15.1620%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="14.8690%" y="101" width="0.1926%" height="15" fill="rgb(228,155,29)" fg:x="6562" fg:w="85"/><text x="15.1620%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="15.0616%" y="53" width="0.0204%" height="15" fill="rgb(243,57,37)" fg:x="6647" fg:w="9"/><text x="15.3546%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="15.0820%" y="37" width="0.0680%" height="15" fill="rgb(244,167,17)" fg:x="6656" fg:w="30"/><text x="15.3750%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="15.0820%" y="53" width="0.1246%" height="15" fill="rgb(207,181,38)" fg:x="6656" fg:w="55"/><text x="15.3750%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="15.0616%" y="69" width="0.2674%" height="15" fill="rgb(211,8,23)" fg:x="6647" fg:w="118"/><text x="15.3546%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="15.0616%" y="85" width="0.3875%" height="15" fill="rgb(235,11,44)" fg:x="6647" fg:w="171"/><text x="15.3546%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="15.0616%" y="101" width="0.3988%" height="15" fill="rgb(248,18,52)" fg:x="6647" fg:w="176"/><text x="15.3546%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="14.8690%" y="117" width="0.8429%" height="15" fill="rgb(208,4,7)" fg:x="6562" fg:w="372"/><text x="15.1620%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.35%)</title><rect x="14.6832%" y="133" width="1.3482%" height="15" fill="rgb(240,17,39)" fg:x="6480" fg:w="595"/><text x="14.9762%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="16.0315%" y="133" width="0.1858%" height="15" fill="rgb(207,170,3)" fg:x="7075" fg:w="82"/><text x="16.3244%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="16.2173%" y="133" width="0.1269%" height="15" fill="rgb(236,100,52)" fg:x="7157" fg:w="56"/><text x="16.5102%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="16.3441%" y="117" width="0.1563%" height="15" fill="rgb(246,78,51)" fg:x="7213" fg:w="69"/><text x="16.6371%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.63%)</title><rect x="16.5005%" y="117" width="0.6277%" height="15" fill="rgb(211,17,15)" fg:x="7282" fg:w="277"/><text x="16.7935%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="17.1282%" y="101" width="0.1563%" height="15" fill="rgb(209,59,46)" fg:x="7559" fg:w="69"/><text x="17.4211%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="17.2845%" y="101" width="0.2062%" height="15" fill="rgb(210,92,25)" fg:x="7628" fg:w="91"/><text x="17.5775%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.4907%" y="101" width="0.1428%" height="15" fill="rgb(238,174,52)" fg:x="7719" fg:w="63"/><text x="17.7837%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="17.1282%" y="117" width="0.6390%" height="15" fill="rgb(230,73,7)" fg:x="7559" fg:w="282"/><text x="17.4211%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.7672%" y="117" width="0.1428%" height="15" fill="rgb(243,124,40)" fg:x="7841" fg:w="63"/><text x="18.0601%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.84%)</title><rect x="16.3441%" y="133" width="1.8422%" height="15" fill="rgb(244,170,11)" fg:x="7213" fg:w="813"/><text x="16.6371%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.1864%" y="133" width="0.1858%" height="15" fill="rgb(207,114,54)" fg:x="8026" fg:w="82"/><text x="18.4793%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="18.3722%" y="117" width="0.1563%" height="15" fill="rgb(205,42,20)" fg:x="8108" fg:w="69"/><text x="18.6651%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.63%)</title><rect x="18.5285%" y="117" width="0.6277%" height="15" fill="rgb(230,30,28)" fg:x="8177" fg:w="277"/><text x="18.8215%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="19.1562%" y="101" width="0.1563%" height="15" fill="rgb(205,73,54)" fg:x="8454" fg:w="69"/><text x="19.4491%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="19.3125%" y="101" width="0.2062%" height="15" fill="rgb(254,227,23)" fg:x="8523" fg:w="91"/><text x="19.6055%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.5187%" y="101" width="0.1428%" height="15" fill="rgb(228,202,34)" fg:x="8614" fg:w="63"/><text x="19.8117%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="19.1562%" y="117" width="0.6390%" height="15" fill="rgb(222,225,37)" fg:x="8454" fg:w="282"/><text x="19.4491%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.7952%" y="117" width="0.1428%" height="15" fill="rgb(221,14,54)" fg:x="8736" fg:w="63"/><text x="20.0881%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.84%)</title><rect x="18.3722%" y="133" width="1.8422%" height="15" fill="rgb(254,102,2)" fg:x="8108" fg:w="813"/><text x="18.6651%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="20.2144%" y="133" width="0.0476%" height="15" fill="rgb(232,104,17)" fg:x="8921" fg:w="21"/><text x="20.5073%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="20.2619%" y="133" width="0.1428%" height="15" fill="rgb(250,220,14)" fg:x="8942" fg:w="63"/><text x="20.5549%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,418 instructions, 7.74%)</title><rect x="13.4234%" y="149" width="7.7449%" height="15" fill="rgb(241,158,9)" fg:x="5924" fg:w="3418"/><text x="13.7163%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="21.1683%" y="133" width="0.1835%" height="15" fill="rgb(246,9,43)" fg:x="9342" fg:w="81"/><text x="21.4613%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="21.4017%" y="133" width="0.1767%" height="15" fill="rgb(206,73,33)" fg:x="9445" fg:w="78"/><text x="21.6947%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.46%)</title><rect x="21.1683%" y="149" width="0.4600%" height="15" fill="rgb(222,79,8)" fg:x="9342" fg:w="203"/><text x="21.4613%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="21.6283%" y="149" width="0.2719%" height="15" fill="rgb(234,8,54)" fg:x="9545" fg:w="120"/><text x="21.9213%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,985 instructions, 18.09%)</title><rect x="5.2683%" y="165" width="18.0934%" height="15" fill="rgb(209,134,38)" fg:x="2325" fg:w="7985"/><text x="5.5613%" y="175.50">&lt;candid::binary_parser::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.14%)</title><rect x="23.3617%" y="165" width="0.1428%" height="15" fill="rgb(230,127,29)" fg:x="10310" fg:w="63"/><text x="23.6547%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="23.5045%" y="165" width="0.1428%" height="15" fill="rgb(242,44,41)" fg:x="10373" fg:w="63"/><text x="23.7975%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="23.6472%" y="165" width="0.1473%" height="15" fill="rgb(222,56,43)" fg:x="10436" fg:w="65"/><text x="23.9402%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="23.7945%" y="149" width="0.9200%" height="15" fill="rgb(238,39,47)" fg:x="10501" fg:w="406"/><text x="24.0875%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="24.7145%" y="149" width="0.0363%" height="15" fill="rgb(226,79,43)" fg:x="10907" fg:w="16"/><text x="25.0075%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="24.7507%" y="133" width="0.1767%" height="15" fill="rgb(242,105,53)" fg:x="10923" fg:w="78"/><text x="25.0437%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="24.9275%" y="101" width="0.1360%" height="15" fill="rgb(251,132,46)" fg:x="11001" fg:w="60"/><text x="25.2205%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="24.9275%" y="117" width="0.1926%" height="15" fill="rgb(231,77,14)" fg:x="11001" fg:w="85"/><text x="25.2205%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="25.1201%" y="69" width="0.0204%" height="15" fill="rgb(240,135,9)" fg:x="11086" fg:w="9"/><text x="25.4131%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="25.1405%" y="53" width="0.0680%" height="15" fill="rgb(248,109,14)" fg:x="11095" fg:w="30"/><text x="25.4335%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="25.1405%" y="69" width="0.1246%" height="15" fill="rgb(227,146,52)" fg:x="11095" fg:w="55"/><text x="25.4335%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="25.1201%" y="85" width="0.2674%" height="15" fill="rgb(232,54,3)" fg:x="11086" fg:w="118"/><text x="25.4131%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="25.1201%" y="101" width="0.3875%" height="15" fill="rgb(229,201,43)" fg:x="11086" fg:w="171"/><text x="25.4131%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="25.1201%" y="117" width="0.3988%" height="15" fill="rgb(252,161,33)" fg:x="11086" fg:w="176"/><text x="25.4131%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="24.9275%" y="133" width="0.8429%" height="15" fill="rgb(226,146,40)" fg:x="11001" fg:w="372"/><text x="25.2205%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.34%)</title><rect x="24.7507%" y="149" width="1.3392%" height="15" fill="rgb(219,47,25)" fg:x="10923" fg:w="591"/><text x="25.0437%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="26.0899%" y="149" width="0.1858%" height="15" fill="rgb(250,135,13)" fg:x="11514" fg:w="82"/><text x="26.3829%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="26.2757%" y="149" width="0.1835%" height="15" fill="rgb(219,229,18)" fg:x="11596" fg:w="81"/><text x="26.5687%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="26.4593%" y="133" width="0.1563%" height="15" fill="rgb(217,152,27)" fg:x="11677" fg:w="69"/><text x="26.7522%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="26.6156%" y="133" width="0.2062%" height="15" fill="rgb(225,71,47)" fg:x="11746" fg:w="91"/><text x="26.9086%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="26.8218%" y="133" width="0.1428%" height="15" fill="rgb(220,139,14)" fg:x="11837" fg:w="63"/><text x="27.1148%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="26.4593%" y="149" width="0.6390%" height="15" fill="rgb(247,54,32)" fg:x="11677" fg:w="282"/><text x="26.7522%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="27.0983%" y="149" width="0.2674%" height="15" fill="rgb(252,131,39)" fg:x="11959" fg:w="118"/><text x="27.3912%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,779 instructions, 4.03%)</title><rect x="23.7945%" y="165" width="4.0311%" height="15" fill="rgb(210,108,39)" fg:x="10501" fg:w="1779"/><text x="24.0875%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="27.8256%" y="165" width="0.1428%" height="15" fill="rgb(205,23,29)" fg:x="12280" fg:w="63"/><text x="28.1186%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.9684%" y="165" width="0.1722%" height="15" fill="rgb(246,139,46)" fg:x="12343" fg:w="76"/><text x="28.2613%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="28.1406%" y="149" width="0.1722%" height="15" fill="rgb(250,81,26)" fg:x="12419" fg:w="76"/><text x="28.4335%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="28.1406%" y="165" width="0.3603%" height="15" fill="rgb(214,104,7)" fg:x="12419" fg:w="159"/><text x="28.4335%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.5009%" y="133" width="0.1858%" height="15" fill="rgb(233,189,8)" fg:x="12578" fg:w="82"/><text x="28.7938%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="28.5009%" y="149" width="0.2628%" height="15" fill="rgb(228,141,17)" fg:x="12578" fg:w="116"/><text x="28.7938%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="28.5009%" y="165" width="0.4169%" height="15" fill="rgb(247,157,1)" fg:x="12578" fg:w="184"/><text x="28.7938%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.9178%" y="165" width="0.1858%" height="15" fill="rgb(249,225,5)" fg:x="12762" fg:w="82"/><text x="29.2108%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.1036%" y="149" width="0.1858%" height="15" fill="rgb(242,55,13)" fg:x="12844" fg:w="82"/><text x="29.3966%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.37%)</title><rect x="29.1036%" y="165" width="0.3739%" height="15" fill="rgb(230,49,50)" fg:x="12844" fg:w="165"/><text x="29.3966%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.4775%" y="165" width="0.1858%" height="15" fill="rgb(241,111,38)" fg:x="13009" fg:w="82"/><text x="29.7704%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.6633%" y="149" width="0.1767%" height="15" fill="rgb(252,155,4)" fg:x="13091" fg:w="78"/><text x="29.9563%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="29.8400%" y="117" width="0.2039%" height="15" fill="rgb(212,69,32)" fg:x="13169" fg:w="90"/><text x="30.1330%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="29.8400%" y="133" width="0.2606%" height="15" fill="rgb(243,107,47)" fg:x="13169" fg:w="115"/><text x="30.1330%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.1006%" y="85" width="0.0204%" height="15" fill="rgb(247,130,12)" fg:x="13284" fg:w="9"/><text x="30.3936%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.1210%" y="69" width="0.0680%" height="15" fill="rgb(233,74,16)" fg:x="13293" fg:w="30"/><text x="30.4140%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.1210%" y="85" width="0.1246%" height="15" fill="rgb(208,58,18)" fg:x="13293" fg:w="55"/><text x="30.4140%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="30.1006%" y="101" width="0.2674%" height="15" fill="rgb(242,225,1)" fg:x="13284" fg:w="118"/><text x="30.3936%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="30.1006%" y="117" width="0.3875%" height="15" fill="rgb(249,39,40)" fg:x="13284" fg:w="171"/><text x="30.3936%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="30.1006%" y="133" width="0.4215%" height="15" fill="rgb(207,72,44)" fg:x="13284" fg:w="186"/><text x="30.3936%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="29.8400%" y="149" width="0.9336%" height="15" fill="rgb(215,193,12)" fg:x="13169" fg:w="412"/><text x="30.1330%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.43%)</title><rect x="29.6633%" y="165" width="1.4298%" height="15" fill="rgb(248,41,39)" fg:x="13091" fg:w="631"/><text x="29.9563%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.0931%" y="149" width="0.1858%" height="15" fill="rgb(253,85,4)" fg:x="13722" fg:w="82"/><text x="31.3861%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.31%)</title><rect x="31.0931%" y="165" width="0.3127%" height="15" fill="rgb(243,70,31)" fg:x="13722" fg:w="138"/><text x="31.3861%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.4058%" y="165" width="0.2153%" height="15" fill="rgb(253,195,26)" fg:x="13860" fg:w="95"/><text x="31.6988%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="31.6210%" y="165" width="0.0295%" height="15" fill="rgb(243,42,11)" fg:x="13955" fg:w="13"/><text x="31.9140%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.6505%" y="165" width="0.2153%" height="15" fill="rgb(239,66,17)" fg:x="13968" fg:w="95"/><text x="31.9435%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.8658%" y="149" width="0.1858%" height="15" fill="rgb(217,132,21)" fg:x="14063" fg:w="82"/><text x="32.1587%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (114 instructions, 0.26%)</title><rect x="31.8658%" y="165" width="0.2583%" height="15" fill="rgb(252,202,21)" fg:x="14063" fg:w="114"/><text x="32.1587%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="32.1241%" y="149" width="0.0521%" height="15" fill="rgb(233,98,36)" fg:x="14177" fg:w="23"/><text x="32.4171%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="32.1762%" y="149" width="0.0521%" height="15" fill="rgb(216,153,54)" fg:x="14200" fg:w="23"/><text x="32.4692%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.30%)</title><rect x="32.1241%" y="165" width="0.3036%" height="15" fill="rgb(250,99,7)" fg:x="14177" fg:w="134"/><text x="32.4171%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.4277%" y="165" width="0.0340%" height="15" fill="rgb(207,56,50)" fg:x="14311" fg:w="15"/><text x="32.7207%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="32.6498%" y="149" width="0.1269%" height="15" fill="rgb(244,61,34)" fg:x="14409" fg:w="56"/><text x="32.9427%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.37%)</title><rect x="32.4617%" y="165" width="0.3716%" height="15" fill="rgb(241,50,38)" fg:x="14326" fg:w="164"/><text x="32.7547%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="32.8333%" y="165" width="0.0295%" height="15" fill="rgb(212,166,30)" fg:x="14490" fg:w="13"/><text x="33.1263%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="32.8628%" y="165" width="0.0159%" height="15" fill="rgb(249,127,32)" fg:x="14503" fg:w="7"/><text x="33.1557%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.8786%" y="165" width="0.0340%" height="15" fill="rgb(209,103,0)" fg:x="14510" fg:w="15"/><text x="33.1716%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="32.9126%" y="133" width="0.1609%" height="15" fill="rgb(238,209,51)" fg:x="14525" fg:w="71"/><text x="33.2056%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="33.0735%" y="101" width="0.2039%" height="15" fill="rgb(237,56,23)" fg:x="14596" fg:w="90"/><text x="33.3665%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="33.0735%" y="117" width="0.2606%" height="15" fill="rgb(215,153,46)" fg:x="14596" fg:w="115"/><text x="33.3665%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="33.3341%" y="69" width="0.0204%" height="15" fill="rgb(224,49,31)" fg:x="14711" fg:w="9"/><text x="33.6271%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="33.3545%" y="53" width="0.0680%" height="15" fill="rgb(250,18,42)" fg:x="14720" fg:w="30"/><text x="33.6475%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="33.3545%" y="69" width="0.1246%" height="15" fill="rgb(215,176,39)" fg:x="14720" fg:w="55"/><text x="33.6475%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="33.3341%" y="85" width="0.2674%" height="15" fill="rgb(223,77,29)" fg:x="14711" fg:w="118"/><text x="33.6271%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="33.3341%" y="101" width="0.3875%" height="15" fill="rgb(234,94,52)" fg:x="14711" fg:w="171"/><text x="33.6271%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="33.3341%" y="117" width="0.4215%" height="15" fill="rgb(220,154,50)" fg:x="14711" fg:w="186"/><text x="33.6271%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="33.0735%" y="133" width="0.9336%" height="15" fill="rgb(212,11,10)" fg:x="14596" fg:w="412"/><text x="33.3665%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (624 instructions, 1.41%)</title><rect x="32.9126%" y="149" width="1.4139%" height="15" fill="rgb(205,166,19)" fg:x="14525" fg:w="624"/><text x="33.2056%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.3266%" y="149" width="0.1858%" height="15" fill="rgb(244,198,16)" fg:x="15149" fg:w="82"/><text x="34.6195%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (817 instructions, 1.85%)</title><rect x="32.9126%" y="165" width="1.8513%" height="15" fill="rgb(219,69,12)" fg:x="14525" fg:w="817"/><text x="33.2056%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.7639%" y="133" width="0.1858%" height="15" fill="rgb(245,30,7)" fg:x="15342" fg:w="82"/><text x="35.0569%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="34.7639%" y="149" width="0.2628%" height="15" fill="rgb(218,221,48)" fg:x="15342" fg:w="116"/><text x="35.0569%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="34.7639%" y="165" width="0.4169%" height="15" fill="rgb(216,66,15)" fg:x="15342" fg:w="184"/><text x="35.0569%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.1808%" y="165" width="0.1858%" height="15" fill="rgb(226,122,50)" fg:x="15526" fg:w="82"/><text x="35.4738%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.3666%" y="165" width="0.1835%" height="15" fill="rgb(239,156,16)" fg:x="15608" fg:w="81"/><text x="35.6596%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.5502%" y="165" width="0.1858%" height="15" fill="rgb(224,27,38)" fg:x="15689" fg:w="82"/><text x="35.8431%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.7360%" y="165" width="0.1858%" height="15" fill="rgb(224,39,27)" fg:x="15771" fg:w="82"/><text x="36.0289%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.9218%" y="149" width="0.1835%" height="15" fill="rgb(215,92,29)" fg:x="15853" fg:w="81"/><text x="36.2147%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.26%)</title><rect x="35.9218%" y="165" width="0.2606%" height="15" fill="rgb(207,159,16)" fg:x="15853" fg:w="115"/><text x="36.2147%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="36.1824%" y="149" width="0.1428%" height="15" fill="rgb(238,163,47)" fg:x="15968" fg:w="63"/><text x="36.4753%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.38%)</title><rect x="36.1824%" y="165" width="0.3761%" height="15" fill="rgb(219,91,49)" fg:x="15968" fg:w="166"/><text x="36.4753%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="36.5585%" y="165" width="0.1835%" height="15" fill="rgb(227,167,31)" fg:x="16134" fg:w="81"/><text x="36.8515%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="36.7420%" y="165" width="0.9041%" height="15" fill="rgb(234,80,54)" fg:x="16215" fg:w="399"/><text x="37.0350%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="37.6462%" y="165" width="0.9041%" height="15" fill="rgb(212,114,2)" fg:x="16614" fg:w="399"/><text x="37.9391%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,550 instructions, 42.03%)</title><rect x="0.5642%" y="181" width="42.0330%" height="15" fill="rgb(234,50,24)" fg:x="249" fg:w="18550"/><text x="0.8572%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="42.5972%" y="181" width="0.8021%" height="15" fill="rgb(221,68,8)" fg:x="18799" fg:w="354"/><text x="42.8902%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="43.3993%" y="165" width="0.0113%" height="15" fill="rgb(254,180,31)" fg:x="19153" fg:w="5"/><text x="43.6923%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="43.3993%" y="181" width="0.0884%" height="15" fill="rgb(247,130,50)" fg:x="19153" fg:w="39"/><text x="43.6923%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="43.4877%" y="165" width="0.1246%" height="15" fill="rgb(211,109,4)" fg:x="19192" fg:w="55"/><text x="43.7807%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.37%)</title><rect x="43.4877%" y="181" width="0.3693%" height="15" fill="rgb(238,50,21)" fg:x="19192" fg:w="163"/><text x="43.7807%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="43.8571%" y="165" width="0.0113%" height="15" fill="rgb(225,57,45)" fg:x="19355" fg:w="5"/><text x="44.1500%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="43.8684%" y="149" width="0.1201%" height="15" fill="rgb(209,196,50)" fg:x="19360" fg:w="53"/><text x="44.1614%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="43.9885%" y="149" width="0.6073%" height="15" fill="rgb(242,140,13)" fg:x="19413" fg:w="268"/><text x="44.2815%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.5958%" y="149" width="0.3671%" height="15" fill="rgb(217,111,7)" fg:x="19681" fg:w="162"/><text x="44.8887%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.63%)</title><rect x="43.8684%" y="165" width="1.6315%" height="15" fill="rgb(253,193,51)" fg:x="19360" fg:w="720"/><text x="44.1614%" y="175.50"></text></g><g><title>candid::types::internal::env_add (929 instructions, 2.11%)</title><rect x="43.8571%" y="181" width="2.1050%" height="15" fill="rgb(252,70,29)" fg:x="19355" fg:w="929"/><text x="44.1500%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.9621%" y="181" width="0.1767%" height="15" fill="rgb(232,127,12)" fg:x="20284" fg:w="78"/><text x="46.2551%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="46.1389%" y="181" width="0.1722%" height="15" fill="rgb(211,180,21)" fg:x="20362" fg:w="76"/><text x="46.4318%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="46.3111%" y="181" width="0.1767%" height="15" fill="rgb(229,72,13)" fg:x="20438" fg:w="78"/><text x="46.6040%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="46.4878%" y="149" width="0.0113%" height="15" fill="rgb(240,211,49)" fg:x="20516" fg:w="5"/><text x="46.7808%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.4991%" y="133" width="0.1201%" height="15" fill="rgb(219,149,40)" fg:x="20521" fg:w="53"/><text x="46.7921%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="46.6192%" y="133" width="0.6934%" height="15" fill="rgb(210,127,46)" fg:x="20574" fg:w="306"/><text x="46.9122%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.3126%" y="133" width="0.1631%" height="15" fill="rgb(220,106,7)" fg:x="20880" fg:w="72"/><text x="47.6056%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="46.4991%" y="149" width="1.5136%" height="15" fill="rgb(249,31,22)" fg:x="20521" fg:w="668"/><text x="46.7921%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.78%)</title><rect x="46.4878%" y="165" width="1.7810%" height="15" fill="rgb(253,1,49)" fg:x="20516" fg:w="786"/><text x="46.7808%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="48.2688%" y="165" width="0.1722%" height="15" fill="rgb(227,144,33)" fg:x="21302" fg:w="76"/><text x="48.5618%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="48.4410%" y="149" width="0.0113%" height="15" fill="rgb(249,163,44)" fg:x="21378" fg:w="5"/><text x="48.7340%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="48.4524%" y="133" width="0.1201%" height="15" fill="rgb(234,15,39)" fg:x="21383" fg:w="53"/><text x="48.7453%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="48.5725%" y="133" width="0.6934%" height="15" fill="rgb(207,66,16)" fg:x="21436" fg:w="306"/><text x="48.8654%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="49.2658%" y="133" width="0.1631%" height="15" fill="rgb(233,112,24)" fg:x="21742" fg:w="72"/><text x="49.5588%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="48.4524%" y="149" width="1.5136%" height="15" fill="rgb(230,90,22)" fg:x="21383" fg:w="668"/><text x="48.7453%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.99%)</title><rect x="48.4410%" y="165" width="1.9872%" height="15" fill="rgb(229,61,13)" fg:x="21378" fg:w="877"/><text x="48.7340%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="50.4283%" y="165" width="0.1722%" height="15" fill="rgb(225,57,24)" fg:x="22255" fg:w="76"/><text x="50.7212%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="50.6005%" y="149" width="0.0113%" height="15" fill="rgb(208,169,48)" fg:x="22331" fg:w="5"/><text x="50.8934%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.6118%" y="133" width="0.1201%" height="15" fill="rgb(244,218,51)" fg:x="22336" fg:w="53"/><text x="50.9048%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="50.7319%" y="133" width="0.6934%" height="15" fill="rgb(214,148,10)" fg:x="22389" fg:w="306"/><text x="51.0249%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="51.4253%" y="133" width="0.1631%" height="15" fill="rgb(225,174,27)" fg:x="22695" fg:w="72"/><text x="51.7182%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.51%)</title><rect x="50.6118%" y="149" width="1.5136%" height="15" fill="rgb(230,96,26)" fg:x="22336" fg:w="668"/><text x="50.9048%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.01%)</title><rect x="52.1254%" y="149" width="1.0106%" height="15" fill="rgb(232,10,30)" fg:x="23004" fg:w="446"/><text x="52.4184%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="53.1360%" y="133" width="0.1835%" height="15" fill="rgb(222,8,50)" fg:x="23450" fg:w="81"/><text x="53.4290%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="53.1360%" y="149" width="0.2447%" height="15" fill="rgb(213,81,27)" fg:x="23450" fg:w="108"/><text x="53.4290%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 3.16%)</title><rect x="50.6005%" y="165" width="3.1632%" height="15" fill="rgb(245,50,10)" fg:x="22331" fg:w="1396"/><text x="50.8934%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.7637%" y="117" width="0.1201%" height="15" fill="rgb(216,100,18)" fg:x="23727" fg:w="53"/><text x="54.0567%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="53.7637%" y="133" width="0.1767%" height="15" fill="rgb(236,147,54)" fg:x="23727" fg:w="78"/><text x="54.0567%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="53.7637%" y="149" width="0.6639%" height="15" fill="rgb(205,143,26)" fg:x="23727" fg:w="293"/><text x="54.0567%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (9 instructions, 0.02%)</title><rect x="54.4276%" y="149" width="0.0204%" height="15" fill="rgb(236,26,9)" fg:x="24020" fg:w="9"/><text x="54.7206%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (15 instructions, 0.03%)</title><rect x="54.4480%" y="149" width="0.0340%" height="15" fill="rgb(221,165,53)" fg:x="24029" fg:w="15"/><text x="54.7410%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="54.4820%" y="149" width="0.0249%" height="15" fill="rgb(214,110,17)" fg:x="24044" fg:w="11"/><text x="54.7750%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.18%)</title><rect x="53.7637%" y="165" width="1.1828%" height="15" fill="rgb(237,197,12)" fg:x="23727" fg:w="522"/><text x="54.0567%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,840 instructions, 8.70%)</title><rect x="46.4878%" y="181" width="8.7012%" height="15" fill="rgb(205,84,17)" fg:x="20516" fg:w="3840"/><text x="46.7808%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.1890%" y="181" width="0.1722%" height="15" fill="rgb(237,18,45)" fg:x="24356" fg:w="76"/><text x="55.4819%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.3612%" y="181" width="0.1722%" height="15" fill="rgb(221,87,14)" fg:x="24432" fg:w="76"/><text x="55.6542%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="55.5334%" y="149" width="0.0113%" height="15" fill="rgb(238,186,15)" fg:x="24508" fg:w="5"/><text x="55.8264%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="55.5447%" y="133" width="0.1201%" height="15" fill="rgb(208,115,11)" fg:x="24513" fg:w="53"/><text x="55.8377%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="55.6648%" y="133" width="0.1994%" height="15" fill="rgb(254,175,0)" fg:x="24566" fg:w="88"/><text x="55.9578%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="55.8642%" y="133" width="0.3671%" height="15" fill="rgb(227,24,42)" fg:x="24654" fg:w="162"/><text x="56.1572%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="55.5447%" y="149" width="1.2236%" height="15" fill="rgb(223,211,37)" fg:x="24513" fg:w="540"/><text x="55.8377%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.49%)</title><rect x="55.5334%" y="165" width="1.4910%" height="15" fill="rgb(235,49,27)" fg:x="24508" fg:w="658"/><text x="55.8264%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="57.0244%" y="165" width="0.1767%" height="15" fill="rgb(254,97,51)" fg:x="25166" fg:w="78"/><text x="57.3174%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="57.2011%" y="149" width="0.0113%" height="15" fill="rgb(249,51,40)" fg:x="25244" fg:w="5"/><text x="57.4941%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="57.2125%" y="133" width="0.1201%" height="15" fill="rgb(210,128,45)" fg:x="25249" fg:w="53"/><text x="57.5054%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="57.3325%" y="133" width="0.1994%" height="15" fill="rgb(224,137,50)" fg:x="25302" fg:w="88"/><text x="57.6255%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="57.5319%" y="133" width="0.3671%" height="15" fill="rgb(242,15,9)" fg:x="25390" fg:w="162"/><text x="57.8249%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="57.2125%" y="149" width="1.2236%" height="15" fill="rgb(233,187,41)" fg:x="25249" fg:w="540"/><text x="57.5054%" y="159.50"></text></g><g><title>candid::types::internal::env_add (749 instructions, 1.70%)</title><rect x="57.2011%" y="165" width="1.6972%" height="15" fill="rgb(227,2,29)" fg:x="25244" fg:w="749"/><text x="57.4941%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="58.8983%" y="165" width="0.1722%" height="15" fill="rgb(222,70,3)" fg:x="25993" fg:w="76"/><text x="59.1913%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="59.0705%" y="149" width="0.0113%" height="15" fill="rgb(213,11,42)" fg:x="26069" fg:w="5"/><text x="59.3635%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="59.0818%" y="133" width="0.1201%" height="15" fill="rgb(225,150,9)" fg:x="26074" fg:w="53"/><text x="59.3748%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="59.2019%" y="133" width="0.1994%" height="15" fill="rgb(230,162,45)" fg:x="26127" fg:w="88"/><text x="59.4949%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="59.4013%" y="133" width="0.3671%" height="15" fill="rgb(222,14,52)" fg:x="26215" fg:w="162"/><text x="59.6943%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="59.0818%" y="149" width="1.2236%" height="15" fill="rgb(254,198,14)" fg:x="26074" fg:w="540"/><text x="59.3748%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="60.3054%" y="149" width="0.1858%" height="15" fill="rgb(220,217,30)" fg:x="26614" fg:w="82"/><text x="60.5984%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="60.4913%" y="149" width="0.1903%" height="15" fill="rgb(215,146,41)" fg:x="26696" fg:w="84"/><text x="60.7842%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="60.6816%" y="133" width="0.1201%" height="15" fill="rgb(217,27,36)" fg:x="26780" fg:w="53"/><text x="60.9746%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="60.8017%" y="133" width="0.1994%" height="15" fill="rgb(219,218,39)" fg:x="26833" fg:w="88"/><text x="61.0947%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="61.0011%" y="133" width="0.3671%" height="15" fill="rgb(219,4,42)" fg:x="26921" fg:w="162"/><text x="61.2941%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.9052%" y="133" width="0.1201%" height="15" fill="rgb(249,119,36)" fg:x="27320" fg:w="53"/><text x="62.1982%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="62.0253%" y="133" width="0.6073%" height="15" fill="rgb(209,23,33)" fg:x="27373" fg:w="268"/><text x="62.3183%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="62.6326%" y="133" width="0.3671%" height="15" fill="rgb(211,10,0)" fg:x="27641" fg:w="162"/><text x="62.9255%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.5367%" y="133" width="0.1201%" height="15" fill="rgb(208,99,37)" fg:x="28040" fg:w="53"/><text x="63.8296%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="63.6568%" y="133" width="0.6934%" height="15" fill="rgb(213,132,31)" fg:x="28093" fg:w="306"/><text x="63.9497%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="64.3501%" y="133" width="0.1631%" height="15" fill="rgb(243,129,40)" fg:x="28399" fg:w="72"/><text x="64.6431%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,928 instructions, 4.37%)</title><rect x="60.6816%" y="149" width="4.3687%" height="15" fill="rgb(210,66,33)" fg:x="26780" fg:w="1928"/><text x="60.9746%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.0503%" y="149" width="0.1835%" height="15" fill="rgb(209,189,4)" fg:x="28708" fg:w="81"/><text x="65.3433%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="65.2338%" y="149" width="0.1541%" height="15" fill="rgb(214,107,37)" fg:x="28789" fg:w="68"/><text x="65.5268%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.3879%" y="133" width="0.1835%" height="15" fill="rgb(245,88,54)" fg:x="28857" fg:w="81"/><text x="65.6809%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="65.3879%" y="149" width="0.2447%" height="15" fill="rgb(205,146,20)" fg:x="28857" fg:w="108"/><text x="65.6809%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,525 instructions, 7.99%)</title><rect x="59.0705%" y="165" width="7.9874%" height="15" fill="rgb(220,161,25)" fg:x="26069" fg:w="3525"/><text x="59.3635%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.0579%" y="117" width="0.1201%" height="15" fill="rgb(215,152,15)" fg:x="29594" fg:w="53"/><text x="67.3509%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="67.0579%" y="133" width="0.1767%" height="15" fill="rgb(233,192,44)" fg:x="29594" fg:w="78"/><text x="67.3509%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.7218%" y="117" width="0.1201%" height="15" fill="rgb(240,170,46)" fg:x="29887" fg:w="53"/><text x="68.0148%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="67.7218%" y="133" width="0.1767%" height="15" fill="rgb(207,104,33)" fg:x="29887" fg:w="78"/><text x="68.0148%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.33%)</title><rect x="67.0579%" y="149" width="1.3278%" height="15" fill="rgb(219,21,39)" fg:x="29594" fg:w="586"/><text x="67.3509%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="68.3858%" y="149" width="0.1858%" height="15" fill="rgb(214,133,29)" fg:x="30180" fg:w="82"/><text x="68.6787%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="68.5716%" y="149" width="0.1903%" height="15" fill="rgb(226,93,6)" fg:x="30262" fg:w="84"/><text x="68.8645%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.7619%" y="117" width="0.1201%" height="15" fill="rgb(252,222,34)" fg:x="30346" fg:w="53"/><text x="69.0549%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="68.7619%" y="133" width="0.1767%" height="15" fill="rgb(252,92,48)" fg:x="30346" fg:w="78"/><text x="69.0549%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.4258%" y="117" width="0.1201%" height="15" fill="rgb(245,223,24)" fg:x="30639" fg:w="53"/><text x="69.7188%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="69.4258%" y="133" width="0.1767%" height="15" fill="rgb(205,176,3)" fg:x="30639" fg:w="78"/><text x="69.7188%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.0897%" y="117" width="0.1201%" height="15" fill="rgb(235,151,15)" fg:x="30932" fg:w="53"/><text x="70.3827%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="70.2098%" y="117" width="0.3490%" height="15" fill="rgb(237,209,11)" fg:x="30985" fg:w="154"/><text x="70.5028%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.5588%" y="101" width="0.1201%" height="15" fill="rgb(243,227,24)" fg:x="31139" fg:w="53"/><text x="70.8517%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="70.5588%" y="117" width="0.1767%" height="15" fill="rgb(239,193,16)" fg:x="31139" fg:w="78"/><text x="70.8517%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.80%)</title><rect x="70.0897%" y="133" width="0.7953%" height="15" fill="rgb(231,27,9)" fg:x="30932" fg:w="351"/><text x="70.3827%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,152 instructions, 2.61%)</title><rect x="68.7619%" y="149" width="2.6104%" height="15" fill="rgb(219,169,10)" fg:x="30346" fg:w="1152"/><text x="69.0549%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="71.3722%" y="149" width="0.1767%" height="15" fill="rgb(244,229,43)" fg:x="31498" fg:w="78"/><text x="71.6652%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,715 instructions, 6.15%)</title><rect x="67.0579%" y="165" width="6.1520%" height="15" fill="rgb(254,38,20)" fg:x="29594" fg:w="2715"/><text x="67.3509%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (7,908 instructions, 17.92%)</title><rect x="55.5334%" y="181" width="17.9190%" height="15" fill="rgb(250,47,30)" fg:x="24508" fg:w="7908"/><text x="55.8264%" y="191.50">candid::types::CandidTy..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="73.4524%" y="181" width="0.1767%" height="15" fill="rgb(224,124,36)" fg:x="32416" fg:w="78"/><text x="73.7453%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.6291%" y="165" width="0.0113%" height="15" fill="rgb(246,68,51)" fg:x="32494" fg:w="5"/><text x="73.9221%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.6404%" y="149" width="0.1201%" height="15" fill="rgb(253,43,49)" fg:x="32499" fg:w="53"/><text x="73.9334%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="73.7605%" y="149" width="0.6073%" height="15" fill="rgb(219,54,36)" fg:x="32552" fg:w="268"/><text x="74.0535%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="74.3678%" y="149" width="0.3671%" height="15" fill="rgb(227,133,34)" fg:x="32820" fg:w="162"/><text x="74.6608%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.63%)</title><rect x="73.6404%" y="165" width="1.6315%" height="15" fill="rgb(247,227,15)" fg:x="32499" fg:w="720"/><text x="73.9334%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.92%)</title><rect x="75.2719%" y="165" width="0.9154%" height="15" fill="rgb(229,96,14)" fg:x="33219" fg:w="404"/><text x="75.5649%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="76.1873%" y="149" width="0.1835%" height="15" fill="rgb(220,79,17)" fg:x="33623" fg:w="81"/><text x="76.4803%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="76.1873%" y="165" width="0.2447%" height="15" fill="rgb(205,131,53)" fg:x="33623" fg:w="108"/><text x="76.4803%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,406 instructions, 3.19%)</title><rect x="73.6291%" y="181" width="3.1859%" height="15" fill="rgb(209,50,29)" fg:x="32494" fg:w="1406"/><text x="73.9221%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.8150%" y="133" width="0.1201%" height="15" fill="rgb(245,86,46)" fg:x="33900" fg:w="53"/><text x="77.1080%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="76.9351%" y="133" width="0.3490%" height="15" fill="rgb(235,66,46)" fg:x="33953" fg:w="154"/><text x="77.2281%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.2841%" y="117" width="0.1201%" height="15" fill="rgb(232,148,31)" fg:x="34107" fg:w="53"/><text x="77.5770%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="77.4608%" y="117" width="0.3490%" height="15" fill="rgb(217,149,8)" fg:x="34185" fg:w="154"/><text x="77.7538%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (257 instructions, 0.58%)</title><rect x="77.2841%" y="133" width="0.5823%" height="15" fill="rgb(209,183,11)" fg:x="34107" fg:w="257"/><text x="77.5770%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.23%)</title><rect x="76.8150%" y="149" width="1.2349%" height="15" fill="rgb(208,55,20)" fg:x="33900" fg:w="545"/><text x="77.1080%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.5371%" y="133" width="0.1201%" height="15" fill="rgb(218,39,14)" fg:x="34660" fg:w="53"/><text x="78.8301%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="78.6572%" y="133" width="0.3490%" height="15" fill="rgb(216,169,33)" fg:x="34713" fg:w="154"/><text x="78.9502%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="79.0062%" y="117" width="0.1201%" height="15" fill="rgb(233,80,24)" fg:x="34867" fg:w="53"/><text x="79.2991%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="79.1829%" y="117" width="0.3490%" height="15" fill="rgb(213,179,31)" fg:x="34945" fg:w="154"/><text x="79.4759%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (257 instructions, 0.58%)</title><rect x="79.0062%" y="133" width="0.5823%" height="15" fill="rgb(209,19,5)" fg:x="34867" fg:w="257"/><text x="79.2991%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.23%)</title><rect x="78.5371%" y="149" width="1.2349%" height="15" fill="rgb(219,18,35)" fg:x="34660" fg:w="545"/><text x="78.8301%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,520 instructions, 3.44%)</title><rect x="76.8150%" y="165" width="3.4442%" height="15" fill="rgb(209,169,16)" fg:x="33900" fg:w="1520"/><text x="77.1080%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,793 instructions, 4.06%)</title><rect x="76.8150%" y="181" width="4.0628%" height="15" fill="rgb(245,90,51)" fg:x="33900" fg:w="1793"/><text x="77.1080%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="80.8778%" y="181" width="0.1065%" height="15" fill="rgb(220,99,45)" fg:x="35693" fg:w="47"/><text x="81.1708%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="80.9843%" y="165" width="0.1767%" height="15" fill="rgb(249,89,25)" fg:x="35740" fg:w="78"/><text x="81.2773%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="81.2222%" y="165" width="0.2719%" height="15" fill="rgb(239,193,0)" fg:x="35845" fg:w="120"/><text x="81.5152%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.57%)</title><rect x="80.9843%" y="181" width="0.5710%" height="15" fill="rgb(231,126,1)" fg:x="35740" fg:w="252"/><text x="81.2773%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.30%)</title><rect x="81.5553%" y="117" width="0.2968%" height="15" fill="rgb(243,166,3)" fg:x="35992" fg:w="131"/><text x="81.8483%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (229 instructions, 0.52%)</title><rect x="81.5553%" y="133" width="0.5189%" height="15" fill="rgb(223,22,34)" fg:x="35992" fg:w="229"/><text x="81.8483%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (305 instructions, 0.69%)</title><rect x="81.5553%" y="149" width="0.6911%" height="15" fill="rgb(251,52,51)" fg:x="35992" fg:w="305"/><text x="81.8483%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="82.2464%" y="149" width="0.0249%" height="15" fill="rgb(221,165,28)" fg:x="36297" fg:w="11"/><text x="82.5394%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (368 instructions, 0.83%)</title><rect x="81.5553%" y="165" width="0.8339%" height="15" fill="rgb(218,121,47)" fg:x="35992" fg:w="368"/><text x="81.8483%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.3892%" y="149" width="0.1722%" height="15" fill="rgb(209,120,9)" fg:x="36360" fg:w="76"/><text x="82.6822%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="82.8877%" y="149" width="0.1609%" height="15" fill="rgb(236,68,12)" fg:x="36580" fg:w="71"/><text x="83.1807%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (435 instructions, 0.99%)</title><rect x="82.3892%" y="165" width="0.9857%" height="15" fill="rgb(225,194,26)" fg:x="36360" fg:w="435"/><text x="82.6822%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3749%" y="165" width="0.0249%" height="15" fill="rgb(231,84,39)" fg:x="36795" fg:w="11"/><text x="83.6678%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3998%" y="165" width="0.0249%" height="15" fill="rgb(210,11,45)" fg:x="36806" fg:w="11"/><text x="83.6928%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="83.4247%" y="149" width="0.2674%" height="15" fill="rgb(224,54,52)" fg:x="36817" fg:w="118"/><text x="83.7177%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.6921%" y="149" width="0.2039%" height="15" fill="rgb(238,102,14)" fg:x="36935" fg:w="90"/><text x="83.9851%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="83.8960%" y="149" width="0.2493%" height="15" fill="rgb(243,160,52)" fg:x="37025" fg:w="110"/><text x="84.1890%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="84.1453%" y="149" width="0.1246%" height="15" fill="rgb(216,114,19)" fg:x="37135" fg:w="55"/><text x="84.4383%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 instructions, 1.00%)</title><rect x="83.4247%" y="165" width="1.0038%" height="15" fill="rgb(244,166,37)" fg:x="36817" fg:w="443"/><text x="83.7177%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.4285%" y="149" width="0.0634%" height="15" fill="rgb(246,29,44)" fg:x="37260" fg:w="28"/><text x="84.7215%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.4920%" y="149" width="0.0340%" height="15" fill="rgb(215,56,53)" fg:x="37288" fg:w="15"/><text x="84.7849%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.5260%" y="149" width="0.0340%" height="15" fill="rgb(217,60,2)" fg:x="37303" fg:w="15"/><text x="84.8189%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="84.5600%" y="133" width="0.1563%" height="15" fill="rgb(207,26,24)" fg:x="37318" fg:w="69"/><text x="84.8529%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.7163%" y="133" width="0.1473%" height="15" fill="rgb(252,210,15)" fg:x="37387" fg:w="65"/><text x="85.0093%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="84.8636%" y="133" width="0.1428%" height="15" fill="rgb(253,209,26)" fg:x="37452" fg:w="63"/><text x="85.1566%" y="143.50"></text></g><g><title>binread::BinRead::read (241 instructions, 0.55%)</title><rect x="84.5600%" y="149" width="0.5461%" height="15" fill="rgb(238,170,14)" fg:x="37318" fg:w="241"/><text x="84.8529%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.12%)</title><rect x="85.1060%" y="149" width="0.1246%" height="15" fill="rgb(216,178,15)" fg:x="37559" fg:w="55"/><text x="85.3990%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.2307%" y="149" width="0.1722%" height="15" fill="rgb(250,197,2)" fg:x="37614" fg:w="76"/><text x="85.5236%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.24%)</title><rect x="85.4029%" y="149" width="0.2379%" height="15" fill="rgb(212,70,42)" fg:x="37690" fg:w="105"/><text x="85.6959%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.33%)</title><rect x="85.6408%" y="149" width="0.3263%" height="15" fill="rgb(227,213,9)" fg:x="37795" fg:w="144"/><text x="85.9338%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (813 instructions, 1.84%)</title><rect x="84.4285%" y="165" width="1.8422%" height="15" fill="rgb(245,99,25)" fg:x="37260" fg:w="813"/><text x="84.7215%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2707%" y="165" width="0.0249%" height="15" fill="rgb(250,82,29)" fg:x="38073" fg:w="11"/><text x="86.5637%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2957%" y="165" width="0.0249%" height="15" fill="rgb(241,226,54)" fg:x="38084" fg:w="11"/><text x="86.5886%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="86.3206%" y="149" width="0.1722%" height="15" fill="rgb(221,99,41)" fg:x="38095" fg:w="76"/><text x="86.6136%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.4928%" y="149" width="0.2039%" height="15" fill="rgb(213,90,21)" fg:x="38171" fg:w="90"/><text x="86.7858%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.6967%" y="149" width="0.0363%" height="15" fill="rgb(205,208,24)" fg:x="38261" fg:w="16"/><text x="86.9897%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="86.7330%" y="149" width="0.2493%" height="15" fill="rgb(246,31,12)" fg:x="38277" fg:w="110"/><text x="87.0260%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="86.9822%" y="149" width="0.1246%" height="15" fill="rgb(213,154,6)" fg:x="38387" fg:w="55"/><text x="87.2752%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 0.96%)</title><rect x="86.3206%" y="165" width="0.9562%" height="15" fill="rgb(222,163,29)" fg:x="38095" fg:w="422"/><text x="86.6136%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.2768%" y="165" width="0.0634%" height="15" fill="rgb(227,201,8)" fg:x="38517" fg:w="28"/><text x="87.5698%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3403%" y="165" width="0.0340%" height="15" fill="rgb(233,9,32)" fg:x="38545" fg:w="15"/><text x="87.6332%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3742%" y="165" width="0.0340%" height="15" fill="rgb(217,54,24)" fg:x="38560" fg:w="15"/><text x="87.6672%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.4082%" y="149" width="0.0113%" height="15" fill="rgb(235,192,0)" fg:x="38575" fg:w="5"/><text x="87.7012%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.4196%" y="149" width="0.1835%" height="15" fill="rgb(235,45,9)" fg:x="38580" fg:w="81"/><text x="87.7125%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.6031%" y="149" width="0.0113%" height="15" fill="rgb(246,42,40)" fg:x="38661" fg:w="5"/><text x="87.8961%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="87.6144%" y="149" width="0.2855%" height="15" fill="rgb(248,111,24)" fg:x="38666" fg:w="126"/><text x="87.9074%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.56%)</title><rect x="87.4082%" y="165" width="0.5620%" height="15" fill="rgb(249,65,22)" fg:x="38575" fg:w="248"/><text x="87.7012%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,828 instructions, 8.67%)</title><rect x="81.5553%" y="181" width="8.6740%" height="15" fill="rgb(238,111,51)" fg:x="35992" fg:w="3828"/><text x="81.8483%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.2293%" y="165" width="0.1835%" height="15" fill="rgb(250,118,22)" fg:x="39820" fg:w="81"/><text x="90.5223%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.4129%" y="165" width="0.1835%" height="15" fill="rgb(234,84,26)" fg:x="39901" fg:w="81"/><text x="90.7058%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.46%)</title><rect x="90.2293%" y="181" width="0.4555%" height="15" fill="rgb(243,172,12)" fg:x="39820" fg:w="201"/><text x="90.5223%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.6848%" y="181" width="0.0249%" height="15" fill="rgb(236,150,49)" fg:x="40021" fg:w="11"/><text x="90.9777%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7097%" y="181" width="0.0249%" height="15" fill="rgb(225,197,26)" fg:x="40032" fg:w="11"/><text x="91.0027%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.93%)</title><rect x="90.7346%" y="181" width="0.9290%" height="15" fill="rgb(214,17,42)" fg:x="40043" fg:w="410"/><text x="91.0276%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.6636%" y="133" width="0.1835%" height="15" fill="rgb(224,165,40)" fg:x="40453" fg:w="81"/><text x="91.9566%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.8472%" y="117" width="0.1835%" height="15" fill="rgb(246,100,4)" fg:x="40534" fg:w="81"/><text x="92.1402%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.37%)</title><rect x="92.0307%" y="101" width="0.3739%" height="15" fill="rgb(222,103,0)" fg:x="40615" fg:w="165"/><text x="92.3237%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.44%)</title><rect x="92.0307%" y="117" width="0.4351%" height="15" fill="rgb(227,189,26)" fg:x="40615" fg:w="192"/><text x="92.3237%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="92.4658%" y="117" width="0.1835%" height="15" fill="rgb(214,202,17)" fg:x="40807" fg:w="81"/><text x="92.7588%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.6493%" y="117" width="0.0249%" height="15" fill="rgb(229,111,3)" fg:x="40888" fg:w="11"/><text x="92.9423%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="92.6742%" y="117" width="0.3807%" height="15" fill="rgb(229,172,15)" fg:x="40899" fg:w="168"/><text x="92.9672%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="93.0549%" y="117" width="0.1767%" height="15" fill="rgb(230,224,35)" fg:x="41067" fg:w="78"/><text x="93.3479%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.67%)</title><rect x="91.8472%" y="133" width="1.6745%" height="15" fill="rgb(251,141,6)" fg:x="40534" fg:w="739"/><text x="92.1402%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="93.5217%" y="117" width="0.1428%" height="15" fill="rgb(225,208,6)" fg:x="41273" fg:w="63"/><text x="93.8147%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.46%)</title><rect x="93.5217%" y="133" width="0.4645%" height="15" fill="rgb(246,181,16)" fg:x="41273" fg:w="205"/><text x="93.8147%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,120 instructions, 2.54%)</title><rect x="91.6636%" y="149" width="2.5378%" height="15" fill="rgb(227,129,36)" fg:x="40453" fg:w="1120"/><text x="91.9566%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.2015%" y="149" width="0.2719%" height="15" fill="rgb(248,117,24)" fg:x="41573" fg:w="120"/><text x="94.4945%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="94.4734%" y="117" width="0.1246%" height="15" fill="rgb(214,185,35)" fg:x="41693" fg:w="55"/><text x="94.7664%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="94.5980%" y="117" width="0.1428%" height="15" fill="rgb(236,150,34)" fg:x="41748" fg:w="63"/><text x="94.8910%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.55%)</title><rect x="94.4734%" y="133" width="0.5529%" height="15" fill="rgb(243,228,27)" fg:x="41693" fg:w="244"/><text x="94.7664%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (271 instructions, 0.61%)</title><rect x="94.4734%" y="149" width="0.6141%" height="15" fill="rgb(245,77,44)" fg:x="41693" fg:w="271"/><text x="94.7664%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.0875%" y="149" width="0.0249%" height="15" fill="rgb(235,214,42)" fg:x="41964" fg:w="11"/><text x="95.3804%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,562 instructions, 3.54%)</title><rect x="91.6636%" y="165" width="3.5394%" height="15" fill="rgb(221,74,3)" fg:x="40453" fg:w="1562"/><text x="91.9566%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,600 instructions, 3.63%)</title><rect x="91.6636%" y="181" width="3.6255%" height="15" fill="rgb(206,121,29)" fg:x="40453" fg:w="1600"/><text x="91.9566%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="95.2891%" y="181" width="0.2787%" height="15" fill="rgb(249,131,53)" fg:x="42053" fg:w="123"/><text x="95.5821%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="95.5678%" y="181" width="0.1246%" height="15" fill="rgb(236,170,29)" fg:x="42176" fg:w="55"/><text x="95.8608%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="95.6925%" y="149" width="0.0113%" height="15" fill="rgb(247,96,15)" fg:x="42231" fg:w="5"/><text x="95.9854%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7038%" y="149" width="0.0249%" height="15" fill="rgb(211,210,7)" fg:x="42236" fg:w="11"/><text x="95.9968%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7287%" y="149" width="0.0249%" height="15" fill="rgb(240,88,50)" fg:x="42247" fg:w="11"/><text x="96.0217%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7536%" y="149" width="0.0249%" height="15" fill="rgb(209,229,26)" fg:x="42258" fg:w="11"/><text x="96.0466%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="95.7786%" y="149" width="0.1903%" height="15" fill="rgb(210,68,23)" fg:x="42269" fg:w="84"/><text x="96.0715%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (334 instructions, 0.76%)</title><rect x="95.6925%" y="165" width="0.7568%" height="15" fill="rgb(229,180,13)" fg:x="42231" fg:w="334"/><text x="95.9854%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="96.4493%" y="149" width="0.0725%" height="15" fill="rgb(236,53,44)" fg:x="42565" fg:w="32"/><text x="96.7423%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="96.5218%" y="101" width="0.1722%" height="15" fill="rgb(244,214,29)" fg:x="42597" fg:w="76"/><text x="96.8148%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="96.5218%" y="117" width="0.2493%" height="15" fill="rgb(220,75,29)" fg:x="42597" fg:w="110"/><text x="96.8148%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="96.5218%" y="133" width="0.3965%" height="15" fill="rgb(214,183,37)" fg:x="42597" fg:w="175"/><text x="96.8148%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9183%" y="133" width="0.0249%" height="15" fill="rgb(239,117,29)" fg:x="42772" fg:w="11"/><text x="97.2113%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9433%" y="133" width="0.0249%" height="15" fill="rgb(237,171,35)" fg:x="42783" fg:w="11"/><text x="97.2362%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.81%)</title><rect x="96.5218%" y="149" width="0.8135%" height="15" fill="rgb(229,178,53)" fg:x="42597" fg:w="359"/><text x="96.8148%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.3353%" y="149" width="0.0680%" height="15" fill="rgb(210,102,19)" fg:x="42956" fg:w="30"/><text x="97.6282%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.4032%" y="149" width="0.0113%" height="15" fill="rgb(235,127,22)" fg:x="42986" fg:w="5"/><text x="97.6962%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (494 instructions, 1.12%)</title><rect x="96.4493%" y="165" width="1.1194%" height="15" fill="rgb(244,31,31)" fg:x="42565" fg:w="494"/><text x="96.7423%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.5687%" y="165" width="0.0113%" height="15" fill="rgb(231,43,21)" fg:x="43059" fg:w="5"/><text x="97.8616%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="97.5800%" y="165" width="0.1246%" height="15" fill="rgb(217,131,35)" fg:x="43064" fg:w="55"/><text x="97.8730%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (962 instructions, 2.18%)</title><rect x="95.6925%" y="181" width="2.1798%" height="15" fill="rgb(221,149,4)" fg:x="42231" fg:w="962"/><text x="95.9854%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (43,645 instructions, 98.90%)</title><rect x="0.3920%" y="197" width="98.8965%" height="15" fill="rgb(232,170,28)" fg:x="173" fg:w="43645"/><text x="0.6850%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2885%" y="197" width="0.0272%" height="15" fill="rgb(238,56,10)" fg:x="43818" fg:w="12"/><text x="99.5815%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3157%" y="197" width="0.1835%" height="15" fill="rgb(235,196,14)" fg:x="43830" fg:w="81"/><text x="99.6087%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="99.4992%" y="197" width="0.2787%" height="15" fill="rgb(216,45,48)" fg:x="43911" fg:w="123"/><text x="99.7922%" y="207.50"></text></g><g><title>all (44,132 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,213,17)" fg:x="0" fg:w="44132"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (44,132 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(212,13,2)" fg:x="0" fg:w="44132"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>