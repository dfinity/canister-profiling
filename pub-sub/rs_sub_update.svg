<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="42449"><g><title>ic_cdk::setup (24 instructions, 0.06%)</title><rect x="0.0000%" y="197" width="0.0565%" height="15" fill="rgb(249,192,27)" fg:x="0" fg:w="24"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="0.0565%" y="197" width="0.1955%" height="15" fill="rgb(208,204,44)" fg:x="24" fg:w="83"/><text x="0.3495%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="0.2521%" y="197" width="0.1955%" height="15" fill="rgb(208,93,54)" fg:x="107" fg:w="83"/><text x="0.5450%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="0.4476%" y="181" width="0.1908%" height="15" fill="rgb(242,1,31)" fg:x="190" fg:w="81"/><text x="0.7406%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="0.6384%" y="165" width="0.1932%" height="15" fill="rgb(241,83,25)" fg:x="271" fg:w="82"/><text x="0.9314%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.8316%" y="149" width="0.0141%" height="15" fill="rgb(205,169,50)" fg:x="353" fg:w="6"/><text x="1.1246%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="0.8316%" y="165" width="1.0436%" height="15" fill="rgb(239,186,37)" fg:x="353" fg:w="443"/><text x="1.1246%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="1.8752%" y="165" width="0.2238%" height="15" fill="rgb(205,221,10)" fg:x="796" fg:w="95"/><text x="2.1682%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="2.0990%" y="165" width="0.1413%" height="15" fill="rgb(218,196,15)" fg:x="891" fg:w="60"/><text x="2.3920%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="2.2403%" y="165" width="0.1413%" height="15" fill="rgb(218,196,35)" fg:x="951" fg:w="60"/><text x="2.5333%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="2.3817%" y="165" width="0.1413%" height="15" fill="rgb(233,63,24)" fg:x="1011" fg:w="60"/><text x="2.6747%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="2.5230%" y="165" width="0.1413%" height="15" fill="rgb(225,8,4)" fg:x="1071" fg:w="60"/><text x="2.8160%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="2.6644%" y="165" width="0.1932%" height="15" fill="rgb(234,105,35)" fg:x="1131" fg:w="82"/><text x="2.9573%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="2.8575%" y="165" width="0.1649%" height="15" fill="rgb(236,21,32)" fg:x="1213" fg:w="70"/><text x="3.1505%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="3.0225%" y="149" width="0.0141%" height="15" fill="rgb(228,109,6)" fg:x="1283" fg:w="6"/><text x="3.3154%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="3.0225%" y="165" width="1.0436%" height="15" fill="rgb(229,215,31)" fg:x="1283" fg:w="443"/><text x="3.3154%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="4.0661%" y="165" width="0.0448%" height="15" fill="rgb(221,52,54)" fg:x="1726" fg:w="19"/><text x="4.3590%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="4.1108%" y="149" width="0.2686%" height="15" fill="rgb(252,129,43)" fg:x="1745" fg:w="114"/><text x="4.4038%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="4.3794%" y="117" width="0.1578%" height="15" fill="rgb(248,183,27)" fg:x="1859" fg:w="67"/><text x="4.6723%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="4.3794%" y="133" width="0.2262%" height="15" fill="rgb(250,0,22)" fg:x="1859" fg:w="96"/><text x="4.6723%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="4.6055%" y="85" width="0.0259%" height="15" fill="rgb(213,166,10)" fg:x="1955" fg:w="11"/><text x="4.8985%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="4.6314%" y="69" width="0.0825%" height="15" fill="rgb(207,163,36)" fg:x="1966" fg:w="35"/><text x="4.9244%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="4.6314%" y="85" width="0.1508%" height="15" fill="rgb(208,122,22)" fg:x="1966" fg:w="64"/><text x="4.9244%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="4.6055%" y="101" width="0.3392%" height="15" fill="rgb(207,104,49)" fg:x="1955" fg:w="144"/><text x="4.8985%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="4.6055%" y="117" width="0.4924%" height="15" fill="rgb(248,211,50)" fg:x="1955" fg:w="209"/><text x="4.8985%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.52%)</title><rect x="4.6055%" y="133" width="0.5159%" height="15" fill="rgb(217,13,45)" fg:x="1955" fg:w="219"/><text x="4.8985%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 1.08%)</title><rect x="4.3794%" y="149" width="1.0766%" height="15" fill="rgb(211,216,49)" fg:x="1859" fg:w="457"/><text x="4.6723%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.67%)</title><rect x="4.1108%" y="165" width="1.6702%" height="15" fill="rgb(221,58,53)" fg:x="1745" fg:w="709"/><text x="4.4038%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="5.7811%" y="165" width="0.2238%" height="15" fill="rgb(220,112,41)" fg:x="2454" fg:w="95"/><text x="6.0740%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="6.0049%" y="165" width="0.1413%" height="15" fill="rgb(236,38,28)" fg:x="2549" fg:w="60"/><text x="6.2978%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="6.1462%" y="149" width="0.1413%" height="15" fill="rgb(227,195,22)" fg:x="2609" fg:w="60"/><text x="6.4392%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="6.2875%" y="149" width="0.1955%" height="15" fill="rgb(214,55,33)" fg:x="2669" fg:w="83"/><text x="6.5805%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="6.4831%" y="133" width="0.1955%" height="15" fill="rgb(248,80,13)" fg:x="2752" fg:w="83"/><text x="6.7760%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="6.6786%" y="101" width="0.3086%" height="15" fill="rgb(238,52,6)" fg:x="2835" fg:w="131"/><text x="6.9716%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.38%)</title><rect x="6.6786%" y="117" width="0.3769%" height="15" fill="rgb(224,198,47)" fg:x="2835" fg:w="160"/><text x="6.9716%" y="127.50"></text></g><g><title>__rust_realloc (111 instructions, 0.26%)</title><rect x="7.0555%" y="37" width="0.2615%" height="15" fill="rgb(233,171,20)" fg:x="2995" fg:w="111"/><text x="7.3485%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.37%)</title><rect x="7.0555%" y="53" width="0.3675%" height="15" fill="rgb(241,30,25)" fg:x="2995" fg:w="156"/><text x="7.3485%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.57%)</title><rect x="7.0555%" y="69" width="0.5725%" height="15" fill="rgb(207,171,38)" fg:x="2995" fg:w="243"/><text x="7.3485%" y="79.50"></text></g><g><title>memcpy (211 instructions, 0.50%)</title><rect x="7.6280%" y="69" width="0.4971%" height="15" fill="rgb(234,70,1)" fg:x="3238" fg:w="211"/><text x="7.9209%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (494 instructions, 1.16%)</title><rect x="7.0555%" y="85" width="1.1637%" height="15" fill="rgb(232,178,18)" fg:x="2995" fg:w="494"/><text x="7.3485%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="8.2193%" y="53" width="0.0259%" height="15" fill="rgb(241,78,40)" fg:x="3489" fg:w="11"/><text x="8.5122%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="8.2452%" y="37" width="0.0825%" height="15" fill="rgb(222,35,25)" fg:x="3500" fg:w="35"/><text x="8.5382%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="8.2452%" y="53" width="0.1508%" height="15" fill="rgb(207,92,16)" fg:x="3500" fg:w="64"/><text x="8.5382%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="8.2193%" y="69" width="0.3392%" height="15" fill="rgb(216,59,51)" fg:x="3489" fg:w="144"/><text x="8.5122%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.50%)</title><rect x="8.2193%" y="85" width="0.5018%" height="15" fill="rgb(213,80,28)" fg:x="3489" fg:w="213"/><text x="8.5122%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="8.7211%" y="69" width="0.1201%" height="15" fill="rgb(220,93,7)" fg:x="3702" fg:w="51"/><text x="9.0140%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.19%)</title><rect x="8.7211%" y="85" width="0.1885%" height="15" fill="rgb(225,24,44)" fg:x="3702" fg:w="80"/><text x="9.0140%" y="95.50"></text></g><g><title>core::fmt::write (957 instructions, 2.25%)</title><rect x="7.0555%" y="101" width="2.2545%" height="15" fill="rgb(243,74,40)" fg:x="2995" fg:w="957"/><text x="7.3485%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,023 instructions, 2.41%)</title><rect x="7.0555%" y="117" width="2.4100%" height="15" fill="rgb(228,39,7)" fg:x="2995" fg:w="1023"/><text x="7.3485%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,325 instructions, 3.12%)</title><rect x="6.6786%" y="133" width="3.1214%" height="15" fill="rgb(227,79,8)" fg:x="2835" fg:w="1325"/><text x="6.9716%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,546 instructions, 3.64%)</title><rect x="6.4831%" y="149" width="3.6420%" height="15" fill="rgb(236,58,11)" fg:x="2752" fg:w="1546"/><text x="6.7760%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.20%)</title><rect x="10.1251%" y="149" width="0.1955%" height="15" fill="rgb(249,63,35)" fg:x="4298" fg:w="83"/><text x="10.4181%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="10.3206%" y="149" width="0.1413%" height="15" fill="rgb(252,114,16)" fg:x="4381" fg:w="60"/><text x="10.6136%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="10.4620%" y="149" width="0.1790%" height="15" fill="rgb(254,151,24)" fg:x="4441" fg:w="76"/><text x="10.7549%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (218 instructions, 0.51%)</title><rect x="10.6410%" y="117" width="0.5136%" height="15" fill="rgb(253,54,39)" fg:x="4517" fg:w="218"/><text x="10.9340%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (261 instructions, 0.61%)</title><rect x="10.6410%" y="133" width="0.6149%" height="15" fill="rgb(243,25,45)" fg:x="4517" fg:w="261"/><text x="10.9340%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (346 instructions, 0.82%)</title><rect x="10.6410%" y="149" width="0.8151%" height="15" fill="rgb(234,134,9)" fg:x="4517" fg:w="346"/><text x="10.9340%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="11.4561%" y="149" width="0.1413%" height="15" fill="rgb(227,166,31)" fg:x="4863" fg:w="60"/><text x="11.7491%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="11.5974%" y="149" width="0.1955%" height="15" fill="rgb(245,143,41)" fg:x="4923" fg:w="83"/><text x="11.8904%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="11.7930%" y="133" width="0.1955%" height="15" fill="rgb(238,181,32)" fg:x="5006" fg:w="83"/><text x="12.0859%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="11.9885%" y="101" width="0.3086%" height="15" fill="rgb(224,113,18)" fg:x="5089" fg:w="131"/><text x="12.2815%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.38%)</title><rect x="11.9885%" y="117" width="0.3769%" height="15" fill="rgb(240,229,28)" fg:x="5089" fg:w="160"/><text x="12.2815%" y="127.50"></text></g><g><title>__rust_realloc (111 instructions, 0.26%)</title><rect x="12.3654%" y="37" width="0.2615%" height="15" fill="rgb(250,185,3)" fg:x="5249" fg:w="111"/><text x="12.6584%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.37%)</title><rect x="12.3654%" y="53" width="0.3675%" height="15" fill="rgb(212,59,25)" fg:x="5249" fg:w="156"/><text x="12.6584%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.57%)</title><rect x="12.3654%" y="69" width="0.5725%" height="15" fill="rgb(221,87,20)" fg:x="5249" fg:w="243"/><text x="12.6584%" y="79.50"></text></g><g><title>memcpy (211 instructions, 0.50%)</title><rect x="12.9379%" y="69" width="0.4971%" height="15" fill="rgb(213,74,28)" fg:x="5492" fg:w="211"/><text x="13.2308%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (494 instructions, 1.16%)</title><rect x="12.3654%" y="85" width="1.1637%" height="15" fill="rgb(224,132,34)" fg:x="5249" fg:w="494"/><text x="12.6584%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="13.5292%" y="53" width="0.0259%" height="15" fill="rgb(222,101,24)" fg:x="5743" fg:w="11"/><text x="13.8221%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="13.5551%" y="37" width="0.0825%" height="15" fill="rgb(254,142,4)" fg:x="5754" fg:w="35"/><text x="13.8481%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="13.5551%" y="53" width="0.1508%" height="15" fill="rgb(230,229,49)" fg:x="5754" fg:w="64"/><text x="13.8481%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="13.5292%" y="69" width="0.3392%" height="15" fill="rgb(238,70,47)" fg:x="5743" fg:w="144"/><text x="13.8221%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.50%)</title><rect x="13.5292%" y="85" width="0.5018%" height="15" fill="rgb(231,160,17)" fg:x="5743" fg:w="213"/><text x="13.8221%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="14.0310%" y="69" width="0.1201%" height="15" fill="rgb(218,68,53)" fg:x="5956" fg:w="51"/><text x="14.3239%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.19%)</title><rect x="14.0310%" y="85" width="0.1885%" height="15" fill="rgb(236,111,10)" fg:x="5956" fg:w="80"/><text x="14.3239%" y="95.50"></text></g><g><title>core::fmt::write (957 instructions, 2.25%)</title><rect x="12.3654%" y="101" width="2.2545%" height="15" fill="rgb(224,34,41)" fg:x="5249" fg:w="957"/><text x="12.6584%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,023 instructions, 2.41%)</title><rect x="12.3654%" y="117" width="2.4100%" height="15" fill="rgb(241,118,19)" fg:x="5249" fg:w="1023"/><text x="12.6584%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,325 instructions, 3.12%)</title><rect x="11.9885%" y="133" width="3.1214%" height="15" fill="rgb(238,129,25)" fg:x="5089" fg:w="1325"/><text x="12.2815%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,546 instructions, 3.64%)</title><rect x="11.7930%" y="149" width="3.6420%" height="15" fill="rgb(238,22,31)" fg:x="5006" fg:w="1546"/><text x="12.0859%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.20%)</title><rect x="15.4350%" y="149" width="0.1955%" height="15" fill="rgb(222,174,48)" fg:x="6552" fg:w="83"/><text x="15.7280%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="15.6305%" y="149" width="0.1413%" height="15" fill="rgb(206,152,40)" fg:x="6635" fg:w="60"/><text x="15.9235%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="15.7719%" y="149" width="0.1790%" height="15" fill="rgb(218,99,54)" fg:x="6695" fg:w="76"/><text x="16.0648%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="15.9509%" y="149" width="0.1413%" height="15" fill="rgb(220,174,26)" fg:x="6771" fg:w="60"/><text x="16.2439%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="16.0923%" y="133" width="0.1932%" height="15" fill="rgb(245,116,9)" fg:x="6831" fg:w="82"/><text x="16.3852%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="16.2854%" y="133" width="0.1649%" height="15" fill="rgb(209,72,35)" fg:x="6913" fg:w="70"/><text x="16.5784%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="16.4503%" y="117" width="0.0141%" height="15" fill="rgb(226,126,21)" fg:x="6983" fg:w="6"/><text x="16.7433%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="16.4503%" y="133" width="1.0436%" height="15" fill="rgb(227,192,1)" fg:x="6983" fg:w="443"/><text x="16.7433%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="17.4939%" y="133" width="0.0448%" height="15" fill="rgb(237,180,29)" fg:x="7426" fg:w="19"/><text x="17.7869%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="17.5387%" y="117" width="0.1955%" height="15" fill="rgb(230,197,35)" fg:x="7445" fg:w="83"/><text x="17.8317%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="17.7342%" y="85" width="0.1578%" height="15" fill="rgb(246,193,31)" fg:x="7528" fg:w="67"/><text x="18.0272%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="17.7342%" y="101" width="0.2262%" height="15" fill="rgb(241,36,4)" fg:x="7528" fg:w="96"/><text x="18.0272%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="17.9604%" y="53" width="0.0259%" height="15" fill="rgb(241,130,17)" fg:x="7624" fg:w="11"/><text x="18.2533%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="17.9863%" y="37" width="0.0825%" height="15" fill="rgb(206,137,32)" fg:x="7635" fg:w="35"/><text x="18.2793%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="17.9863%" y="53" width="0.1508%" height="15" fill="rgb(237,228,51)" fg:x="7635" fg:w="64"/><text x="18.2793%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="17.9604%" y="69" width="0.3392%" height="15" fill="rgb(243,6,42)" fg:x="7624" fg:w="144"/><text x="18.2533%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="17.9604%" y="85" width="0.4924%" height="15" fill="rgb(251,74,28)" fg:x="7624" fg:w="209"/><text x="18.2533%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.52%)</title><rect x="17.9604%" y="101" width="0.5159%" height="15" fill="rgb(218,20,49)" fg:x="7624" fg:w="219"/><text x="18.2533%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 1.08%)</title><rect x="17.7342%" y="117" width="1.0766%" height="15" fill="rgb(238,28,14)" fg:x="7528" fg:w="457"/><text x="18.0272%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.60%)</title><rect x="17.5387%" y="133" width="1.5972%" height="15" fill="rgb(229,40,46)" fg:x="7445" fg:w="678"/><text x="17.8317%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="19.1359%" y="133" width="0.2238%" height="15" fill="rgb(244,195,20)" fg:x="8123" fg:w="95"/><text x="19.4289%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="19.3597%" y="133" width="0.1413%" height="15" fill="rgb(253,56,35)" fg:x="8218" fg:w="60"/><text x="19.6527%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="19.5010%" y="117" width="0.1932%" height="15" fill="rgb(210,149,44)" fg:x="8278" fg:w="82"/><text x="19.7940%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.69%)</title><rect x="19.6942%" y="117" width="0.6926%" height="15" fill="rgb(240,135,12)" fg:x="8360" fg:w="294"/><text x="19.9872%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="20.3868%" y="101" width="0.1932%" height="15" fill="rgb(251,24,50)" fg:x="8654" fg:w="82"/><text x="20.6798%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="20.5800%" y="101" width="0.2238%" height="15" fill="rgb(243,200,47)" fg:x="8736" fg:w="95"/><text x="20.8730%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="20.8038%" y="101" width="0.1790%" height="15" fill="rgb(224,166,26)" fg:x="8831" fg:w="76"/><text x="21.0968%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.78%)</title><rect x="20.3868%" y="117" width="0.7774%" height="15" fill="rgb(233,0,47)" fg:x="8654" fg:w="330"/><text x="20.6798%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="21.1642%" y="117" width="0.1790%" height="15" fill="rgb(253,80,5)" fg:x="8984" fg:w="76"/><text x="21.4572%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 2.19%)</title><rect x="19.5010%" y="133" width="2.1862%" height="15" fill="rgb(214,133,25)" fg:x="8278" fg:w="928"/><text x="19.7940%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="21.6872%" y="133" width="0.1955%" height="15" fill="rgb(209,27,14)" fg:x="9206" fg:w="83"/><text x="21.9802%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="21.8827%" y="117" width="0.1932%" height="15" fill="rgb(219,102,51)" fg:x="9289" fg:w="82"/><text x="22.1757%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.69%)</title><rect x="22.0759%" y="117" width="0.6926%" height="15" fill="rgb(237,18,16)" fg:x="9371" fg:w="294"/><text x="22.3689%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="22.7685%" y="101" width="0.1932%" height="15" fill="rgb(241,85,17)" fg:x="9665" fg:w="82"/><text x="23.0615%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="22.9617%" y="101" width="0.2238%" height="15" fill="rgb(236,90,42)" fg:x="9747" fg:w="95"/><text x="23.2546%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="23.1855%" y="101" width="0.1790%" height="15" fill="rgb(249,57,21)" fg:x="9842" fg:w="76"/><text x="23.4784%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.78%)</title><rect x="22.7685%" y="117" width="0.7774%" height="15" fill="rgb(243,12,36)" fg:x="9665" fg:w="330"/><text x="23.0615%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="23.5459%" y="117" width="0.1790%" height="15" fill="rgb(253,128,47)" fg:x="9995" fg:w="76"/><text x="23.8389%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 2.19%)</title><rect x="21.8827%" y="133" width="2.1862%" height="15" fill="rgb(207,33,20)" fg:x="9289" fg:w="928"/><text x="22.1757%" y="143.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.06%)</title><rect x="24.0689%" y="133" width="0.0612%" height="15" fill="rgb(233,215,35)" fg:x="10217" fg:w="26"/><text x="24.3619%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="24.1301%" y="133" width="0.1790%" height="15" fill="rgb(249,188,52)" fg:x="10243" fg:w="76"/><text x="24.4231%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,905 instructions, 9.20%)</title><rect x="16.0923%" y="149" width="9.1993%" height="15" fill="rgb(225,12,32)" fg:x="6831" fg:w="3905"/><text x="16.3852%" y="159.50">&lt;candid::bi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="25.2939%" y="117" width="0.0636%" height="15" fill="rgb(247,98,14)" fg:x="10737" fg:w="27"/><text x="25.5869%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="25.2939%" y="133" width="0.3345%" height="15" fill="rgb(247,219,48)" fg:x="10737" fg:w="142"/><text x="25.5869%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="25.7203%" y="133" width="0.2097%" height="15" fill="rgb(253,60,48)" fg:x="10918" fg:w="89"/><text x="26.0132%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (309 instructions, 0.73%)</title><rect x="25.2915%" y="149" width="0.7279%" height="15" fill="rgb(245,15,52)" fg:x="10736" fg:w="309"/><text x="25.5845%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="26.0195%" y="133" width="0.0636%" height="15" fill="rgb(220,133,28)" fg:x="11045" fg:w="27"/><text x="26.3124%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="26.0195%" y="149" width="0.3345%" height="15" fill="rgb(217,180,4)" fg:x="11045" fg:w="142"/><text x="26.3124%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (9,321 instructions, 21.96%)</title><rect x="6.1462%" y="165" width="21.9581%" height="15" fill="rgb(251,24,1)" fg:x="2609" fg:w="9321"/><text x="6.4392%" y="175.50">&lt;candid::binary_parser::ConsT..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="28.1043%" y="165" width="0.2144%" height="15" fill="rgb(212,185,49)" fg:x="11930" fg:w="91"/><text x="28.3973%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="28.3187%" y="165" width="0.1790%" height="15" fill="rgb(215,175,22)" fg:x="12021" fg:w="76"/><text x="28.6117%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="28.4977%" y="165" width="0.1649%" height="15" fill="rgb(250,205,14)" fg:x="12097" fg:w="70"/><text x="28.7907%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="28.6626%" y="133" width="0.0141%" height="15" fill="rgb(225,211,22)" fg:x="12167" fg:w="6"/><text x="28.9556%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="28.6626%" y="149" width="1.0436%" height="15" fill="rgb(251,179,42)" fg:x="12167" fg:w="443"/><text x="28.9556%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="29.7062%" y="149" width="0.0448%" height="15" fill="rgb(208,216,51)" fg:x="12610" fg:w="19"/><text x="29.9992%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="29.7510%" y="133" width="0.1955%" height="15" fill="rgb(235,36,11)" fg:x="12629" fg:w="83"/><text x="30.0440%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="29.9465%" y="101" width="0.1578%" height="15" fill="rgb(213,189,28)" fg:x="12712" fg:w="67"/><text x="30.2395%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="29.9465%" y="117" width="0.2262%" height="15" fill="rgb(227,203,42)" fg:x="12712" fg:w="96"/><text x="30.2395%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="30.1727%" y="69" width="0.0259%" height="15" fill="rgb(244,72,36)" fg:x="12808" fg:w="11"/><text x="30.4656%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="30.1986%" y="53" width="0.0825%" height="15" fill="rgb(213,53,17)" fg:x="12819" fg:w="35"/><text x="30.4916%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="30.1986%" y="69" width="0.1508%" height="15" fill="rgb(207,167,3)" fg:x="12819" fg:w="64"/><text x="30.4916%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="30.1727%" y="85" width="0.3392%" height="15" fill="rgb(216,98,30)" fg:x="12808" fg:w="144"/><text x="30.4656%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="30.1727%" y="101" width="0.4924%" height="15" fill="rgb(236,123,15)" fg:x="12808" fg:w="209"/><text x="30.4656%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.52%)</title><rect x="30.1727%" y="117" width="0.5159%" height="15" fill="rgb(248,81,50)" fg:x="12808" fg:w="219"/><text x="30.4656%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 1.08%)</title><rect x="29.9465%" y="133" width="1.0766%" height="15" fill="rgb(214,120,4)" fg:x="12712" fg:w="457"/><text x="30.2395%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.60%)</title><rect x="29.7510%" y="149" width="1.5972%" height="15" fill="rgb(208,179,34)" fg:x="12629" fg:w="678"/><text x="30.0440%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="31.3482%" y="149" width="0.2238%" height="15" fill="rgb(227,140,7)" fg:x="13307" fg:w="95"/><text x="31.6412%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="31.5720%" y="149" width="0.1413%" height="15" fill="rgb(214,22,6)" fg:x="13402" fg:w="60"/><text x="31.8650%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="31.7134%" y="133" width="0.1932%" height="15" fill="rgb(207,137,27)" fg:x="13462" fg:w="82"/><text x="32.0063%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="31.9065%" y="133" width="0.2238%" height="15" fill="rgb(210,8,46)" fg:x="13544" fg:w="95"/><text x="32.1995%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="32.1303%" y="133" width="0.1790%" height="15" fill="rgb(240,16,54)" fg:x="13639" fg:w="76"/><text x="32.4233%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.78%)</title><rect x="31.7134%" y="149" width="0.7774%" height="15" fill="rgb(211,209,29)" fg:x="13462" fg:w="330"/><text x="32.0063%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="32.4908%" y="149" width="0.1955%" height="15" fill="rgb(226,228,24)" fg:x="13792" fg:w="83"/><text x="32.7837%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,954 instructions, 4.60%)</title><rect x="28.6626%" y="165" width="4.6032%" height="15" fill="rgb(222,84,9)" fg:x="12167" fg:w="1954"/><text x="28.9556%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="33.2658%" y="165" width="0.1790%" height="15" fill="rgb(234,203,30)" fg:x="14121" fg:w="76"/><text x="33.5588%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="33.4448%" y="165" width="0.1908%" height="15" fill="rgb(238,109,14)" fg:x="14197" fg:w="81"/><text x="33.7378%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="33.6357%" y="149" width="0.2686%" height="15" fill="rgb(233,206,34)" fg:x="14278" fg:w="114"/><text x="33.9286%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (210 instructions, 0.49%)</title><rect x="33.6357%" y="165" width="0.4947%" height="15" fill="rgb(220,167,47)" fg:x="14278" fg:w="210"/><text x="33.9286%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.37%)</title><rect x="34.1304%" y="133" width="0.3699%" height="15" fill="rgb(238,105,10)" fg:x="14488" fg:w="157"/><text x="34.4233%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (200 instructions, 0.47%)</title><rect x="34.1304%" y="149" width="0.4712%" height="15" fill="rgb(213,227,17)" fg:x="14488" fg:w="200"/><text x="34.4233%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (285 instructions, 0.67%)</title><rect x="34.1304%" y="165" width="0.6714%" height="15" fill="rgb(217,132,38)" fg:x="14488" fg:w="285"/><text x="34.4233%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="34.8018%" y="165" width="0.1955%" height="15" fill="rgb(242,146,4)" fg:x="14773" fg:w="83"/><text x="35.0947%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="34.9973%" y="149" width="0.1955%" height="15" fill="rgb(212,61,9)" fg:x="14856" fg:w="83"/><text x="35.2903%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.42%)</title><rect x="34.9973%" y="165" width="0.4217%" height="15" fill="rgb(247,126,22)" fg:x="14856" fg:w="179"/><text x="35.2903%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.4190%" y="165" width="0.2144%" height="15" fill="rgb(220,196,2)" fg:x="15035" fg:w="91"/><text x="35.7119%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="35.6333%" y="149" width="0.1955%" height="15" fill="rgb(208,46,4)" fg:x="15126" fg:w="83"/><text x="35.9263%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="35.8289%" y="117" width="0.2332%" height="15" fill="rgb(252,104,46)" fg:x="15209" fg:w="99"/><text x="36.1218%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.30%)</title><rect x="35.8289%" y="133" width="0.3015%" height="15" fill="rgb(237,152,48)" fg:x="15209" fg:w="128"/><text x="36.1218%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="36.1304%" y="85" width="0.0259%" height="15" fill="rgb(221,59,37)" fg:x="15337" fg:w="11"/><text x="36.4234%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="36.1563%" y="69" width="0.0825%" height="15" fill="rgb(209,202,51)" fg:x="15348" fg:w="35"/><text x="36.4493%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="36.1563%" y="85" width="0.1508%" height="15" fill="rgb(228,81,30)" fg:x="15348" fg:w="64"/><text x="36.4493%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="36.1304%" y="101" width="0.3392%" height="15" fill="rgb(227,42,39)" fg:x="15337" fg:w="144"/><text x="36.4234%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="36.1304%" y="117" width="0.4924%" height="15" fill="rgb(221,26,2)" fg:x="15337" fg:w="209"/><text x="36.4234%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.54%)</title><rect x="36.1304%" y="133" width="0.5395%" height="15" fill="rgb(254,61,31)" fg:x="15337" fg:w="229"/><text x="36.4234%" y="143.50"></text></g><g><title>core::fmt::write (499 instructions, 1.18%)</title><rect x="35.8289%" y="149" width="1.1755%" height="15" fill="rgb(222,173,38)" fg:x="15209" fg:w="499"/><text x="36.1218%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (720 instructions, 1.70%)</title><rect x="35.6333%" y="165" width="1.6962%" height="15" fill="rgb(218,50,12)" fg:x="15126" fg:w="720"/><text x="35.9263%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="37.3295%" y="149" width="0.2144%" height="15" fill="rgb(223,88,40)" fg:x="15846" fg:w="91"/><text x="37.6225%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (159 instructions, 0.37%)</title><rect x="37.3295%" y="165" width="0.3746%" height="15" fill="rgb(237,54,19)" fg:x="15846" fg:w="159"/><text x="37.6225%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 instructions, 0.25%)</title><rect x="37.7041%" y="165" width="0.2497%" height="15" fill="rgb(251,129,25)" fg:x="16005" fg:w="106"/><text x="37.9970%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="37.9538%" y="165" width="0.0353%" height="15" fill="rgb(238,97,19)" fg:x="16111" fg:w="15"/><text x="38.2467%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 instructions, 0.25%)</title><rect x="37.9891%" y="165" width="0.2497%" height="15" fill="rgb(240,169,18)" fg:x="16126" fg:w="106"/><text x="38.2821%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="38.2388%" y="133" width="0.2144%" height="15" fill="rgb(230,187,49)" fg:x="16232" fg:w="91"/><text x="38.5318%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (132 instructions, 0.31%)</title><rect x="38.2388%" y="149" width="0.3110%" height="15" fill="rgb(209,44,26)" fg:x="16232" fg:w="132"/><text x="38.5318%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="38.5498%" y="133" width="0.3439%" height="15" fill="rgb(244,0,6)" fg:x="16364" fg:w="146"/><text x="38.8428%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.54%)</title><rect x="38.5498%" y="149" width="0.5418%" height="15" fill="rgb(248,18,21)" fg:x="16364" fg:w="230"/><text x="38.8428%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="39.0916%" y="133" width="0.3439%" height="15" fill="rgb(245,180,19)" fg:x="16594" fg:w="146"/><text x="39.3846%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (233 instructions, 0.55%)</title><rect x="39.0916%" y="149" width="0.5489%" height="15" fill="rgb(252,118,36)" fg:x="16594" fg:w="233"/><text x="39.3846%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (733 instructions, 1.73%)</title><rect x="38.2388%" y="165" width="1.7268%" height="15" fill="rgb(210,224,19)" fg:x="16232" fg:w="733"/><text x="38.5318%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="39.9656%" y="165" width="0.0353%" height="15" fill="rgb(218,30,24)" fg:x="16965" fg:w="15"/><text x="40.2586%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.24%)</title><rect x="40.0009%" y="165" width="0.2403%" height="15" fill="rgb(219,75,50)" fg:x="16980" fg:w="102"/><text x="40.2939%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="40.2412%" y="165" width="0.0353%" height="15" fill="rgb(234,72,50)" fg:x="17082" fg:w="15"/><text x="40.5342%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="40.2766%" y="149" width="0.1484%" height="15" fill="rgb(219,100,48)" fg:x="17097" fg:w="63"/><text x="40.5695%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (129 instructions, 0.30%)</title><rect x="40.2766%" y="165" width="0.3039%" height="15" fill="rgb(253,5,41)" fg:x="17097" fg:w="129"/><text x="40.5695%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="40.5805%" y="133" width="0.1955%" height="15" fill="rgb(247,181,11)" fg:x="17226" fg:w="83"/><text x="40.8734%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="40.7760%" y="101" width="0.2332%" height="15" fill="rgb(222,223,25)" fg:x="17309" fg:w="99"/><text x="41.0690%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.30%)</title><rect x="40.7760%" y="117" width="0.3015%" height="15" fill="rgb(214,198,28)" fg:x="17309" fg:w="128"/><text x="41.0690%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="41.0775%" y="69" width="0.0259%" height="15" fill="rgb(230,46,43)" fg:x="17437" fg:w="11"/><text x="41.3705%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="41.1034%" y="53" width="0.0825%" height="15" fill="rgb(233,65,53)" fg:x="17448" fg:w="35"/><text x="41.3964%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="41.1034%" y="69" width="0.1508%" height="15" fill="rgb(221,121,27)" fg:x="17448" fg:w="64"/><text x="41.3964%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="41.0775%" y="85" width="0.3392%" height="15" fill="rgb(247,70,47)" fg:x="17437" fg:w="144"/><text x="41.3705%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="41.0775%" y="101" width="0.4924%" height="15" fill="rgb(228,85,35)" fg:x="17437" fg:w="209"/><text x="41.3705%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.54%)</title><rect x="41.0775%" y="117" width="0.5395%" height="15" fill="rgb(209,50,18)" fg:x="17437" fg:w="229"/><text x="41.3705%" y="127.50"></text></g><g><title>core::fmt::write (499 instructions, 1.18%)</title><rect x="40.7760%" y="133" width="1.1755%" height="15" fill="rgb(250,19,35)" fg:x="17309" fg:w="499"/><text x="41.0690%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (720 instructions, 1.70%)</title><rect x="40.5805%" y="149" width="1.6962%" height="15" fill="rgb(253,107,29)" fg:x="17226" fg:w="720"/><text x="40.8734%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="42.2766%" y="149" width="0.2144%" height="15" fill="rgb(252,179,29)" fg:x="17946" fg:w="91"/><text x="42.5696%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (937 instructions, 2.21%)</title><rect x="40.5805%" y="165" width="2.2074%" height="15" fill="rgb(238,194,6)" fg:x="17226" fg:w="937"/><text x="40.8734%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="42.7878%" y="133" width="0.1908%" height="15" fill="rgb(238,164,29)" fg:x="18163" fg:w="81"/><text x="43.0808%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.29%)</title><rect x="42.7878%" y="149" width="0.2921%" height="15" fill="rgb(224,25,9)" fg:x="18163" fg:w="124"/><text x="43.0808%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (209 instructions, 0.49%)</title><rect x="42.7878%" y="165" width="0.4924%" height="15" fill="rgb(244,153,23)" fg:x="18163" fg:w="209"/><text x="43.0808%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="43.2802%" y="165" width="0.2144%" height="15" fill="rgb(212,203,14)" fg:x="18372" fg:w="91"/><text x="43.5731%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="43.4945%" y="165" width="0.2097%" height="15" fill="rgb(220,164,20)" fg:x="18463" fg:w="89"/><text x="43.7875%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="43.7042%" y="165" width="0.2144%" height="15" fill="rgb(222,203,48)" fg:x="18552" fg:w="91"/><text x="43.9972%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="43.9186%" y="165" width="0.2144%" height="15" fill="rgb(215,159,22)" fg:x="18643" fg:w="91"/><text x="44.2116%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="44.1330%" y="133" width="0.0636%" height="15" fill="rgb(216,183,47)" fg:x="18734" fg:w="27"/><text x="44.4259%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.34%)</title><rect x="44.1330%" y="149" width="0.3392%" height="15" fill="rgb(229,195,25)" fg:x="18734" fg:w="144"/><text x="44.4259%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (189 instructions, 0.45%)</title><rect x="44.1330%" y="165" width="0.4452%" height="15" fill="rgb(224,132,51)" fg:x="18734" fg:w="189"/><text x="44.4259%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="44.7879%" y="149" width="0.0636%" height="15" fill="rgb(240,63,7)" fg:x="19012" fg:w="27"/><text x="45.0808%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.55%)</title><rect x="44.5782%" y="165" width="0.5489%" height="15" fill="rgb(249,182,41)" fg:x="18923" fg:w="233"/><text x="44.8712%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.92%)</title><rect x="45.1271%" y="165" width="0.9235%" height="15" fill="rgb(243,47,26)" fg:x="19156" fg:w="392"/><text x="45.4201%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.92%)</title><rect x="46.0506%" y="165" width="0.9235%" height="15" fill="rgb(233,48,2)" fg:x="19548" fg:w="392"/><text x="46.3435%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.19%)</title><rect x="46.9740%" y="165" width="1.1873%" height="15" fill="rgb(244,165,34)" fg:x="19940" fg:w="504"/><text x="47.2670%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (22,159 instructions, 52.20%)</title><rect x="0.6384%" y="181" width="52.2015%" height="15" fill="rgb(207,89,7)" fg:x="271" fg:w="22159"/><text x="0.9314%" y="191.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (344 instructions, 0.81%)</title><rect x="52.8399%" y="181" width="0.8104%" height="15" fill="rgb(244,117,36)" fg:x="22430" fg:w="344"/><text x="53.1328%" y="191.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.05%)</title><rect x="53.6503%" y="181" width="0.0542%" height="15" fill="rgb(226,144,34)" fg:x="22774" fg:w="23"/><text x="53.9432%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="53.7044%" y="181" width="0.2686%" height="15" fill="rgb(213,23,19)" fg:x="22797" fg:w="114"/><text x="53.9974%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.37%)</title><rect x="53.9730%" y="165" width="0.3699%" height="15" fill="rgb(217,75,12)" fg:x="22911" fg:w="157"/><text x="54.2660%" y="175.50"></text></g><g><title>candid::types::internal::env_add (240 instructions, 0.57%)</title><rect x="53.9730%" y="181" width="0.5654%" height="15" fill="rgb(224,159,17)" fg:x="22911" fg:w="240"/><text x="54.2660%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="54.5384%" y="181" width="0.1955%" height="15" fill="rgb(217,118,1)" fg:x="23151" fg:w="83"/><text x="54.8314%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="54.7339%" y="181" width="0.1908%" height="15" fill="rgb(232,180,48)" fg:x="23234" fg:w="81"/><text x="55.0269%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="54.9247%" y="181" width="0.2686%" height="15" fill="rgb(230,27,33)" fg:x="23315" fg:w="114"/><text x="55.2177%" y="191.50"></text></g><g><title>candid::types::internal::find_type (99 instructions, 0.23%)</title><rect x="55.1933%" y="165" width="0.2332%" height="15" fill="rgb(205,31,21)" fg:x="23429" fg:w="99"/><text x="55.4863%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="55.4265%" y="165" width="0.1955%" height="15" fill="rgb(253,59,4)" fg:x="23528" fg:w="83"/><text x="55.7195%" y="175.50"></text></g><g><title>candid::types::internal::env_add (182 instructions, 0.43%)</title><rect x="55.6220%" y="165" width="0.4287%" height="15" fill="rgb(224,201,9)" fg:x="23611" fg:w="182"/><text x="55.9150%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="56.0508%" y="165" width="0.2144%" height="15" fill="rgb(229,206,30)" fg:x="23793" fg:w="91"/><text x="56.3438%" y="175.50"></text></g><g><title>memcmp (491 instructions, 1.16%)</title><rect x="56.2652%" y="149" width="1.1567%" height="15" fill="rgb(212,67,47)" fg:x="23884" fg:w="491"/><text x="56.5581%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="57.4218%" y="133" width="0.1413%" height="15" fill="rgb(211,96,50)" fg:x="24375" fg:w="60"/><text x="57.7148%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 instructions, 0.24%)</title><rect x="57.4218%" y="149" width="0.2450%" height="15" fill="rgb(252,114,18)" fg:x="24375" fg:w="104"/><text x="57.7148%" y="159.50"></text></g><g><title>candid::types::internal::env_add (806 instructions, 1.90%)</title><rect x="56.2652%" y="165" width="1.8987%" height="15" fill="rgb(223,58,37)" fg:x="23884" fg:w="806"/><text x="56.5581%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.12%)</title><rect x="58.1639%" y="149" width="0.1201%" height="15" fill="rgb(237,70,4)" fg:x="24690" fg:w="51"/><text x="58.4569%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="58.2841%" y="149" width="0.0306%" height="15" fill="rgb(244,85,46)" fg:x="24741" fg:w="13"/><text x="58.5770%" y="159.50"></text></g><g><title>candid::types::internal::env_id (198 instructions, 0.47%)</title><rect x="58.1639%" y="165" width="0.4664%" height="15" fill="rgb(223,39,52)" fg:x="24690" fg:w="198"/><text x="58.4569%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (1,588 instructions, 3.74%)</title><rect x="55.1933%" y="181" width="3.7410%" height="15" fill="rgb(218,200,14)" fg:x="23429" fg:w="1588"/><text x="55.4863%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="58.9343%" y="181" width="0.1955%" height="15" fill="rgb(208,171,16)" fg:x="25017" fg:w="83"/><text x="59.2272%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="59.1298%" y="181" width="0.1955%" height="15" fill="rgb(234,200,18)" fg:x="25100" fg:w="83"/><text x="59.4227%" y="191.50"></text></g><g><title>candid::types::internal::find_type (112 instructions, 0.26%)</title><rect x="59.3253%" y="165" width="0.2638%" height="15" fill="rgb(228,45,11)" fg:x="25183" fg:w="112"/><text x="59.6183%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="59.5892%" y="165" width="0.2144%" height="15" fill="rgb(237,182,11)" fg:x="25295" fg:w="91"/><text x="59.8821%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.52%)</title><rect x="59.8035%" y="149" width="0.5183%" height="15" fill="rgb(241,175,49)" fg:x="25386" fg:w="220"/><text x="60.0965%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.22%)</title><rect x="60.3218%" y="149" width="0.2167%" height="15" fill="rgb(247,38,35)" fg:x="25606" fg:w="92"/><text x="60.6148%" y="159.50"></text></g><g><title>candid::types::internal::env_add (543 instructions, 1.28%)</title><rect x="59.8035%" y="165" width="1.2792%" height="15" fill="rgb(228,39,49)" fg:x="25386" fg:w="543"/><text x="60.0965%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="61.0827%" y="165" width="0.2144%" height="15" fill="rgb(226,101,26)" fg:x="25929" fg:w="91"/><text x="61.3757%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.18%)</title><rect x="61.2971%" y="149" width="0.1814%" height="15" fill="rgb(206,141,19)" fg:x="26020" fg:w="77"/><text x="61.5901%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="61.4785%" y="133" width="0.2097%" height="15" fill="rgb(211,200,13)" fg:x="26097" fg:w="89"/><text x="61.7714%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.31%)</title><rect x="61.4785%" y="149" width="0.3133%" height="15" fill="rgb(241,121,6)" fg:x="26097" fg:w="133"/><text x="61.7714%" y="159.50"></text></g><g><title>candid::types::internal::env_add (421 instructions, 0.99%)</title><rect x="61.2971%" y="165" width="0.9918%" height="15" fill="rgb(234,221,29)" fg:x="26020" fg:w="421"/><text x="61.5901%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.07%)</title><rect x="62.2889%" y="149" width="0.0730%" height="15" fill="rgb(229,136,5)" fg:x="26441" fg:w="31"/><text x="62.5818%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.07%)</title><rect x="62.3619%" y="149" width="0.0730%" height="15" fill="rgb(238,36,11)" fg:x="26472" fg:w="31"/><text x="62.6549%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.52%)</title><rect x="62.4349%" y="149" width="0.5183%" height="15" fill="rgb(251,55,41)" fg:x="26503" fg:w="220"/><text x="62.7279%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.52%)</title><rect x="62.9532%" y="149" width="0.5183%" height="15" fill="rgb(242,34,40)" fg:x="26723" fg:w="220"/><text x="63.2462%" y="159.50"></text></g><g><title>candid::types::internal::env_id (783 instructions, 1.84%)</title><rect x="62.2889%" y="165" width="1.8446%" height="15" fill="rgb(215,42,17)" fg:x="26441" fg:w="783"/><text x="62.5818%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (2,170 instructions, 5.11%)</title><rect x="59.3253%" y="181" width="5.1120%" height="15" fill="rgb(207,44,46)" fg:x="25183" fg:w="2170"/><text x="59.6183%" y="191.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="64.4373%" y="181" width="0.1955%" height="15" fill="rgb(211,206,28)" fg:x="27353" fg:w="83"/><text x="64.7303%" y="191.50"></text></g><g><title>memcmp (445 instructions, 1.05%)</title><rect x="64.6329%" y="165" width="1.0483%" height="15" fill="rgb(237,167,16)" fg:x="27436" fg:w="445"/><text x="64.9258%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="65.6812%" y="149" width="0.2097%" height="15" fill="rgb(233,66,6)" fg:x="27881" fg:w="89"/><text x="65.9741%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.31%)</title><rect x="65.6812%" y="165" width="0.3133%" height="15" fill="rgb(246,123,29)" fg:x="27881" fg:w="133"/><text x="65.9741%" y="175.50"></text></g><g><title>candid::types::internal::env_add (750 instructions, 1.77%)</title><rect x="64.6329%" y="181" width="1.7668%" height="15" fill="rgb(209,62,40)" fg:x="27436" fg:w="750"/><text x="64.9258%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.10%)</title><rect x="66.3997%" y="165" width="0.1037%" height="15" fill="rgb(218,4,25)" fg:x="28186" fg:w="44"/><text x="66.6926%" y="175.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="66.6070%" y="133" width="0.2898%" height="15" fill="rgb(253,91,49)" fg:x="28274" fg:w="123"/><text x="66.9000%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.10%)</title><rect x="66.8967%" y="133" width="0.1013%" height="15" fill="rgb(228,155,29)" fg:x="28397" fg:w="43"/><text x="67.1897%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (309 instructions, 0.73%)</title><rect x="66.6070%" y="149" width="0.7279%" height="15" fill="rgb(243,57,37)" fg:x="28274" fg:w="309"/><text x="66.9000%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (430 instructions, 1.01%)</title><rect x="66.5033%" y="165" width="1.0130%" height="15" fill="rgb(244,167,17)" fg:x="28230" fg:w="430"/><text x="66.7963%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.07%)</title><rect x="67.5163%" y="165" width="0.0730%" height="15" fill="rgb(207,181,38)" fg:x="28660" fg:w="31"/><text x="67.8093%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.10%)</title><rect x="67.5893%" y="165" width="0.1037%" height="15" fill="rgb(211,8,23)" fg:x="28691" fg:w="44"/><text x="67.8823%" y="175.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="67.7967%" y="133" width="0.2898%" height="15" fill="rgb(235,11,44)" fg:x="28779" fg:w="123"/><text x="68.0896%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.10%)</title><rect x="68.0864%" y="133" width="0.1013%" height="15" fill="rgb(248,18,52)" fg:x="28902" fg:w="43"/><text x="68.3794%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (309 instructions, 0.73%)</title><rect x="67.7967%" y="149" width="0.7279%" height="15" fill="rgb(208,4,7)" fg:x="28779" fg:w="309"/><text x="68.0896%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (430 instructions, 1.01%)</title><rect x="67.6930%" y="165" width="1.0130%" height="15" fill="rgb(240,17,39)" fg:x="28735" fg:w="430"/><text x="67.9860%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.07%)</title><rect x="68.7060%" y="165" width="0.0730%" height="15" fill="rgb(207,170,3)" fg:x="29165" fg:w="31"/><text x="68.9989%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.22%)</title><rect x="68.7790%" y="165" width="0.2167%" height="15" fill="rgb(236,100,52)" fg:x="29196" fg:w="92"/><text x="69.0720%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.52%)</title><rect x="68.9957%" y="165" width="0.5183%" height="15" fill="rgb(246,78,51)" fg:x="29288" fg:w="220"/><text x="69.2887%" y="175.50"></text></g><g><title>candid::types::internal::env_id (1,801 instructions, 4.24%)</title><rect x="66.3997%" y="181" width="4.2427%" height="15" fill="rgb(211,17,15)" fg:x="28186" fg:w="1801"/><text x="66.6926%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.12%)</title><rect x="70.6424%" y="181" width="0.1154%" height="15" fill="rgb(209,59,46)" fg:x="29987" fg:w="49"/><text x="70.9354%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.20%)</title><rect x="70.7579%" y="165" width="0.1955%" height="15" fill="rgb(210,92,25)" fg:x="30036" fg:w="83"/><text x="71.0508%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="71.0570%" y="149" width="0.0542%" height="15" fill="rgb(238,174,52)" fg:x="30163" fg:w="23"/><text x="71.3500%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.33%)</title><rect x="71.0570%" y="165" width="0.3251%" height="15" fill="rgb(230,73,7)" fg:x="30163" fg:w="138"/><text x="71.3500%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309 instructions, 0.73%)</title><rect x="70.7579%" y="181" width="0.7279%" height="15" fill="rgb(243,124,40)" fg:x="30036" fg:w="309"/><text x="71.0508%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="71.4858%" y="117" width="0.3439%" height="15" fill="rgb(244,170,11)" fg:x="30345" fg:w="146"/><text x="71.7788%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.54%)</title><rect x="71.4858%" y="133" width="0.5418%" height="15" fill="rgb(207,114,54)" fg:x="30345" fg:w="230"/><text x="71.7788%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.12%)</title><rect x="72.0276%" y="133" width="0.1154%" height="15" fill="rgb(205,42,20)" fg:x="30575" fg:w="49"/><text x="72.3206%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (348 instructions, 0.82%)</title><rect x="71.4858%" y="149" width="0.8198%" height="15" fill="rgb(230,30,28)" fg:x="30345" fg:w="348"/><text x="71.7788%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="72.3056%" y="149" width="0.0306%" height="15" fill="rgb(205,73,54)" fg:x="30693" fg:w="13"/><text x="72.5986%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (446 instructions, 1.05%)</title><rect x="71.4858%" y="165" width="1.0507%" height="15" fill="rgb(254,227,23)" fg:x="30345" fg:w="446"/><text x="71.7788%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="72.5365%" y="165" width="0.0777%" height="15" fill="rgb(228,202,34)" fg:x="30791" fg:w="33"/><text x="72.8294%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="72.6142%" y="149" width="0.1908%" height="15" fill="rgb(222,225,37)" fg:x="30824" fg:w="81"/><text x="72.9072%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="73.1702%" y="149" width="0.2686%" height="15" fill="rgb(221,14,54)" fg:x="31060" fg:w="114"/><text x="73.4631%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (505 instructions, 1.19%)</title><rect x="72.6142%" y="165" width="1.1897%" height="15" fill="rgb(254,102,2)" fg:x="30824" fg:w="505"/><text x="72.9072%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="73.8039%" y="165" width="0.0777%" height="15" fill="rgb(232,104,17)" fg:x="31329" fg:w="33"/><text x="74.0968%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="73.8816%" y="165" width="0.0306%" height="15" fill="rgb(250,220,14)" fg:x="31362" fg:w="13"/><text x="74.1746%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="73.9122%" y="165" width="0.0306%" height="15" fill="rgb(241,158,9)" fg:x="31375" fg:w="13"/><text x="74.2052%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="73.9428%" y="149" width="0.0777%" height="15" fill="rgb(246,9,43)" fg:x="31388" fg:w="33"/><text x="74.2358%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="74.0206%" y="149" width="0.1908%" height="15" fill="rgb(206,73,33)" fg:x="31421" fg:w="81"/><text x="74.3136%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="74.2114%" y="149" width="0.2332%" height="15" fill="rgb(222,79,8)" fg:x="31502" fg:w="99"/><text x="74.5044%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="74.4446%" y="149" width="0.2898%" height="15" fill="rgb(234,8,54)" fg:x="31601" fg:w="123"/><text x="74.7376%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="74.7344%" y="149" width="0.2097%" height="15" fill="rgb(209,134,38)" fg:x="31724" fg:w="89"/><text x="75.0274%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (559 instructions, 1.32%)</title><rect x="73.9428%" y="165" width="1.3169%" height="15" fill="rgb(230,127,29)" fg:x="31388" fg:w="559"/><text x="74.2358%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="75.2597%" y="165" width="0.0777%" height="15" fill="rgb(242,44,41)" fg:x="31947" fg:w="33"/><text x="75.5527%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.08%)</title><rect x="75.3375%" y="149" width="0.0825%" height="15" fill="rgb(222,56,43)" fg:x="31980" fg:w="35"/><text x="75.6304%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="75.4199%" y="149" width="0.0801%" height="15" fill="rgb(238,39,47)" fg:x="32015" fg:w="34"/><text x="75.7129%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="75.5000%" y="149" width="0.0801%" height="15" fill="rgb(226,79,43)" fg:x="32049" fg:w="34"/><text x="75.7930%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="75.5801%" y="133" width="0.1932%" height="15" fill="rgb(242,105,53)" fg:x="32083" fg:w="82"/><text x="75.8731%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="75.7733%" y="133" width="0.1649%" height="15" fill="rgb(251,132,46)" fg:x="32165" fg:w="70"/><text x="76.0662%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="75.9382%" y="133" width="0.1790%" height="15" fill="rgb(231,77,14)" fg:x="32235" fg:w="76"/><text x="76.2312%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.68%)</title><rect x="75.5801%" y="149" width="0.6832%" height="15" fill="rgb(240,135,9)" fg:x="32083" fg:w="290"/><text x="75.8731%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="76.2633%" y="149" width="0.0777%" height="15" fill="rgb(248,109,14)" fg:x="32373" fg:w="33"/><text x="76.5562%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.15%)</title><rect x="76.3410%" y="149" width="0.1484%" height="15" fill="rgb(227,146,52)" fg:x="32406" fg:w="63"/><text x="76.6340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="76.4894%" y="149" width="0.1955%" height="15" fill="rgb(232,54,3)" fg:x="32469" fg:w="83"/><text x="76.7824%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.27%)</title><rect x="76.6850%" y="149" width="0.2709%" height="15" fill="rgb(229,201,43)" fg:x="32552" fg:w="115"/><text x="76.9779%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.38%)</title><rect x="76.9559%" y="149" width="0.3816%" height="15" fill="rgb(252,161,33)" fg:x="32667" fg:w="162"/><text x="77.2488%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,053 instructions, 2.48%)</title><rect x="75.3375%" y="165" width="2.4806%" height="15" fill="rgb(226,146,40)" fg:x="31980" fg:w="1053"/><text x="75.6304%" y="175.50">s..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="77.8181%" y="165" width="0.0777%" height="15" fill="rgb(219,47,25)" fg:x="33033" fg:w="33"/><text x="78.1111%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.8958%" y="165" width="0.0306%" height="15" fill="rgb(250,135,13)" fg:x="33066" fg:w="13"/><text x="78.1888%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.9265%" y="165" width="0.0306%" height="15" fill="rgb(219,229,18)" fg:x="33079" fg:w="13"/><text x="78.2194%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="77.9571%" y="149" width="0.0777%" height="15" fill="rgb(217,152,27)" fg:x="33092" fg:w="33"/><text x="78.2500%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="78.0348%" y="149" width="0.2686%" height="15" fill="rgb(225,71,47)" fg:x="33125" fg:w="114"/><text x="78.3278%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="78.3034%" y="149" width="0.2332%" height="15" fill="rgb(220,139,14)" fg:x="33239" fg:w="99"/><text x="78.5963%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="78.5366%" y="149" width="0.0448%" height="15" fill="rgb(247,54,32)" fg:x="33338" fg:w="19"/><text x="78.8296%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="78.5814%" y="149" width="0.2898%" height="15" fill="rgb(252,131,39)" fg:x="33357" fg:w="123"/><text x="78.8743%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="78.8711%" y="149" width="0.1413%" height="15" fill="rgb(210,108,39)" fg:x="33480" fg:w="60"/><text x="79.1641%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (591 instructions, 1.39%)</title><rect x="77.9571%" y="165" width="1.3923%" height="15" fill="rgb(205,23,29)" fg:x="33092" fg:w="591"/><text x="78.2500%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="79.3493%" y="165" width="0.0777%" height="15" fill="rgb(246,139,46)" fg:x="33683" fg:w="33"/><text x="79.6423%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.08%)</title><rect x="79.4271%" y="165" width="0.0825%" height="15" fill="rgb(250,81,26)" fg:x="33716" fg:w="35"/><text x="79.7200%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="79.5095%" y="165" width="0.0801%" height="15" fill="rgb(214,104,7)" fg:x="33751" fg:w="34"/><text x="79.8025%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="79.5896%" y="165" width="0.0801%" height="15" fill="rgb(233,189,8)" fg:x="33785" fg:w="34"/><text x="79.8826%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="79.6697%" y="165" width="0.0777%" height="15" fill="rgb(228,141,17)" fg:x="33819" fg:w="33"/><text x="79.9627%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="79.7475%" y="165" width="0.0777%" height="15" fill="rgb(247,157,1)" fg:x="33852" fg:w="33"/><text x="80.0404%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="79.8252%" y="149" width="0.0165%" height="15" fill="rgb(249,225,5)" fg:x="33885" fg:w="7"/><text x="80.1182%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="79.8417%" y="149" width="0.2097%" height="15" fill="rgb(242,55,13)" fg:x="33892" fg:w="89"/><text x="80.1347%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="80.0514%" y="149" width="0.0165%" height="15" fill="rgb(230,49,50)" fg:x="33981" fg:w="7"/><text x="80.3443%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.20%)</title><rect x="80.0678%" y="149" width="0.1955%" height="15" fill="rgb(241,111,38)" fg:x="33988" fg:w="83"/><text x="80.3608%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (235 instructions, 0.55%)</title><rect x="79.8252%" y="165" width="0.5536%" height="15" fill="rgb(252,155,4)" fg:x="33885" fg:w="235"/><text x="80.1182%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (5,050 instructions, 11.90%)</title><rect x="71.4858%" y="181" width="11.8966%" height="15" fill="rgb(212,69,32)" fg:x="30345" fg:w="5050"/><text x="71.7788%" y="191.50">subscriber::_::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="83.3824%" y="149" width="0.0542%" height="15" fill="rgb(243,107,47)" fg:x="35395" fg:w="23"/><text x="83.6754%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.33%)</title><rect x="83.3824%" y="165" width="0.3251%" height="15" fill="rgb(247,130,12)" fg:x="35395" fg:w="138"/><text x="83.6754%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="83.7075%" y="165" width="0.2097%" height="15" fill="rgb(233,74,16)" fg:x="35533" fg:w="89"/><text x="84.0005%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (289 instructions, 0.68%)</title><rect x="83.3824%" y="181" width="0.6808%" height="15" fill="rgb(208,58,18)" fg:x="35395" fg:w="289"/><text x="83.6754%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="84.0632%" y="181" width="0.0306%" height="15" fill="rgb(242,225,1)" fg:x="35684" fg:w="13"/><text x="84.3562%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="84.0939%" y="181" width="0.0306%" height="15" fill="rgb(249,39,40)" fg:x="35697" fg:w="13"/><text x="84.3868%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.10%)</title><rect x="84.1245%" y="181" width="0.1013%" height="15" fill="rgb(207,72,44)" fg:x="35710" fg:w="43"/><text x="84.4174%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="84.2258%" y="149" width="0.2097%" height="15" fill="rgb(215,193,12)" fg:x="35753" fg:w="89"/><text x="84.5187%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="84.4354%" y="117" width="0.0636%" height="15" fill="rgb(248,41,39)" fg:x="35842" fg:w="27"/><text x="84.7284%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.33%)</title><rect x="84.4354%" y="133" width="0.3251%" height="15" fill="rgb(253,85,4)" fg:x="35842" fg:w="138"/><text x="84.7284%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="84.7605%" y="101" width="0.0636%" height="15" fill="rgb(243,70,31)" fg:x="35980" fg:w="27"/><text x="85.0535%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="84.7605%" y="117" width="0.3345%" height="15" fill="rgb(253,195,26)" fg:x="35980" fg:w="142"/><text x="85.0535%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (186 instructions, 0.44%)</title><rect x="84.7605%" y="133" width="0.4382%" height="15" fill="rgb(243,42,11)" fg:x="35980" fg:w="186"/><text x="85.0535%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="85.1987%" y="133" width="0.2097%" height="15" fill="rgb(239,66,17)" fg:x="36166" fg:w="89"/><text x="85.4917%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="85.4084%" y="133" width="0.0306%" height="15" fill="rgb(217,132,21)" fg:x="36255" fg:w="13"/><text x="85.7013%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="85.4390%" y="117" width="0.0636%" height="15" fill="rgb(252,202,21)" fg:x="36268" fg:w="27"/><text x="85.7320%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.32%)</title><rect x="85.4390%" y="133" width="0.3204%" height="15" fill="rgb(233,98,36)" fg:x="36268" fg:w="136"/><text x="85.7320%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.20%)</title><rect x="85.7594%" y="133" width="0.1955%" height="15" fill="rgb(216,153,54)" fg:x="36404" fg:w="83"/><text x="86.0524%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (835 instructions, 1.97%)</title><rect x="84.4354%" y="149" width="1.9671%" height="15" fill="rgb(250,99,7)" fg:x="35842" fg:w="835"/><text x="84.7284%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="86.4025%" y="133" width="0.0542%" height="15" fill="rgb(207,56,50)" fg:x="36677" fg:w="23"/><text x="86.6955%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="86.4567%" y="133" width="0.0542%" height="15" fill="rgb(244,61,34)" fg:x="36700" fg:w="23"/><text x="86.7497%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.16%)</title><rect x="86.5109%" y="133" width="0.1602%" height="15" fill="rgb(241,50,38)" fg:x="36723" fg:w="68"/><text x="86.8038%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (236 instructions, 0.56%)</title><rect x="86.4025%" y="149" width="0.5560%" height="15" fill="rgb(212,166,30)" fg:x="36677" fg:w="236"/><text x="86.6955%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,262 instructions, 2.97%)</title><rect x="84.2258%" y="165" width="2.9730%" height="15" fill="rgb(249,127,32)" fg:x="35753" fg:w="1262"/><text x="84.5187%" y="175.50">&lt;a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.16%)</title><rect x="87.1988%" y="149" width="0.1625%" height="15" fill="rgb(209,103,0)" fg:x="37015" fg:w="69"/><text x="87.4917%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.37%)</title><rect x="87.1988%" y="165" width="0.3699%" height="15" fill="rgb(238,209,51)" fg:x="37015" fg:w="157"/><text x="87.4917%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="87.5686%" y="133" width="0.0542%" height="15" fill="rgb(237,56,23)" fg:x="37172" fg:w="23"/><text x="87.8616%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="87.6228%" y="133" width="0.0636%" height="15" fill="rgb(215,153,46)" fg:x="37195" fg:w="27"/><text x="87.9158%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.45%)</title><rect x="87.5686%" y="149" width="0.4547%" height="15" fill="rgb(224,49,31)" fg:x="37172" fg:w="193"/><text x="87.8616%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (237 instructions, 0.56%)</title><rect x="87.5686%" y="165" width="0.5583%" height="15" fill="rgb(250,18,42)" fg:x="37172" fg:w="237"/><text x="87.8616%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.1269%" y="165" width="0.0306%" height="15" fill="rgb(215,176,39)" fg:x="37409" fg:w="13"/><text x="88.4199%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,729 instructions, 4.07%)</title><rect x="84.2258%" y="181" width="4.0731%" height="15" fill="rgb(223,77,29)" fg:x="35753" fg:w="1729"/><text x="84.5187%" y="191.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="88.4944%" y="165" width="0.0636%" height="15" fill="rgb(234,94,52)" fg:x="37565" fg:w="27"/><text x="88.7874%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (227 instructions, 0.53%)</title><rect x="88.2989%" y="181" width="0.5348%" height="15" fill="rgb(220,154,50)" fg:x="37482" fg:w="227"/><text x="88.5919%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.8337%" y="149" width="0.0306%" height="15" fill="rgb(212,11,10)" fg:x="37709" fg:w="13"/><text x="89.1266%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.8643%" y="149" width="0.0306%" height="15" fill="rgb(205,166,19)" fg:x="37722" fg:w="13"/><text x="89.1573%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.8949%" y="149" width="0.0306%" height="15" fill="rgb(244,198,16)" fg:x="37735" fg:w="13"/><text x="89.1879%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="88.9255%" y="149" width="0.2097%" height="15" fill="rgb(219,69,12)" fg:x="37748" fg:w="89"/><text x="89.2185%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 0.82%)</title><rect x="88.8337%" y="165" width="0.8198%" height="15" fill="rgb(245,30,7)" fg:x="37709" fg:w="348"/><text x="89.1266%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.22%)</title><rect x="89.6535%" y="149" width="1.2203%" height="15" fill="rgb(218,221,48)" fg:x="38057" fg:w="518"/><text x="89.9464%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.20%)</title><rect x="90.8738%" y="101" width="0.1955%" height="15" fill="rgb(216,66,15)" fg:x="38575" fg:w="83"/><text x="91.1667%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.30%)</title><rect x="90.8738%" y="117" width="0.2968%" height="15" fill="rgb(226,122,50)" fg:x="38575" fg:w="126"/><text x="91.1667%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.49%)</title><rect x="90.8738%" y="133" width="0.4900%" height="15" fill="rgb(239,156,16)" fg:x="38575" fg:w="208"/><text x="91.1667%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="91.3638%" y="133" width="0.0353%" height="15" fill="rgb(224,27,38)" fg:x="38783" fg:w="15"/><text x="91.6567%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="91.3991%" y="133" width="0.0353%" height="15" fill="rgb(224,39,27)" fg:x="38798" fg:w="15"/><text x="91.6921%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (424 instructions, 1.00%)</title><rect x="90.8738%" y="149" width="0.9988%" height="15" fill="rgb(215,92,29)" fg:x="38575" fg:w="424"/><text x="91.1667%" y="159.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.22%)</title><rect x="91.8726%" y="149" width="1.2156%" height="15" fill="rgb(207,159,16)" fg:x="38999" fg:w="516"/><text x="92.1656%" y="159.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="93.0882%" y="149" width="0.0165%" height="15" fill="rgb(238,163,47)" fg:x="39515" fg:w="7"/><text x="93.3811%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,562 instructions, 3.68%)</title><rect x="89.6535%" y="165" width="3.6797%" height="15" fill="rgb(219,91,49)" fg:x="38057" fg:w="1562"/><text x="89.9464%" y="175.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="93.3332%" y="165" width="0.0165%" height="15" fill="rgb(227,167,31)" fg:x="39619" fg:w="7"/><text x="93.6261%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="93.3497%" y="165" width="0.0165%" height="15" fill="rgb(234,80,54)" fg:x="39626" fg:w="7"/><text x="93.6426%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="93.3662%" y="165" width="0.1413%" height="15" fill="rgb(212,114,2)" fg:x="39633" fg:w="60"/><text x="93.6591%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,588 instructions, 6.10%)</title><rect x="88.8337%" y="181" width="6.0967%" height="15" fill="rgb(234,50,24)" fg:x="37709" fg:w="2588"/><text x="89.1266%" y="191.50">ic_cdk..</text></g><g><title>subscriber::__canister_method_update_count::{{closure}} (41,873 instructions, 98.64%)</title><rect x="0.4476%" y="197" width="98.6431%" height="15" fill="rgb(221,68,8)" fg:x="190" fg:w="41873"/><text x="0.7406%" y="207.50">subscriber::__canister_method_update_count::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.0907%" y="197" width="0.0330%" height="15" fill="rgb(254,180,31)" fg:x="42063" fg:w="14"/><text x="99.3836%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="99.3357%" y="181" width="0.0542%" height="15" fill="rgb(247,130,50)" fg:x="42167" fg:w="23"/><text x="99.6286%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (227 instructions, 0.53%)</title><rect x="99.1260%" y="197" width="0.5348%" height="15" fill="rgb(211,109,4)" fg:x="42078" fg:w="227"/><text x="99.4190%" y="207.50"></text></g><g><title>all (42,449 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,50,21)" fg:x="0" fg:w="42449"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (42,449 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(225,57,45)" fg:x="0" fg:w="42449"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>