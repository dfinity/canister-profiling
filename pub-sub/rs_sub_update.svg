<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="44011"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0432%" height="15" fill="rgb(244,165,34)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0432%" y="197" width="0.1772%" height="15" fill="rgb(207,89,7)" fg:x="19" fg:w="78"/><text x="0.3361%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2204%" y="197" width="0.1727%" height="15" fill="rgb(244,117,36)" fg:x="97" fg:w="76"/><text x="0.5134%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3931%" y="181" width="0.1727%" height="15" fill="rgb(226,144,34)" fg:x="173" fg:w="76"/><text x="0.6861%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="0.5658%" y="165" width="0.1613%" height="15" fill="rgb(213,23,19)" fg:x="249" fg:w="71"/><text x="0.8587%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="0.7271%" y="165" width="0.9134%" height="15" fill="rgb(217,75,12)" fg:x="320" fg:w="402"/><text x="1.0201%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="1.6405%" y="165" width="0.1886%" height="15" fill="rgb(224,159,17)" fg:x="722" fg:w="83"/><text x="1.9335%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8291%" y="165" width="0.1227%" height="15" fill="rgb(217,118,1)" fg:x="805" fg:w="54"/><text x="2.1221%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9518%" y="165" width="0.1227%" height="15" fill="rgb(232,180,48)" fg:x="859" fg:w="54"/><text x="2.2448%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0745%" y="165" width="0.1227%" height="15" fill="rgb(230,27,33)" fg:x="913" fg:w="54"/><text x="2.3675%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1972%" y="165" width="0.1227%" height="15" fill="rgb(205,31,21)" fg:x="967" fg:w="54"/><text x="2.4901%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="2.3199%" y="165" width="0.1613%" height="15" fill="rgb(253,59,4)" fg:x="1021" fg:w="71"/><text x="2.6128%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4812%" y="165" width="0.1477%" height="15" fill="rgb(224,201,9)" fg:x="1092" fg:w="65"/><text x="2.7742%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="2.6289%" y="165" width="0.9134%" height="15" fill="rgb(229,206,30)" fg:x="1157" fg:w="402"/><text x="2.9219%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5423%" y="165" width="0.0364%" height="15" fill="rgb(212,67,47)" fg:x="1559" fg:w="16"/><text x="3.8353%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="3.5787%" y="149" width="0.1613%" height="15" fill="rgb(211,96,50)" fg:x="1575" fg:w="71"/><text x="3.8716%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7400%" y="117" width="0.1363%" height="15" fill="rgb(252,114,18)" fg:x="1646" fg:w="60"/><text x="4.0329%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7400%" y="133" width="0.1931%" height="15" fill="rgb(223,58,37)" fg:x="1646" fg:w="85"/><text x="4.0329%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9331%" y="85" width="0.0204%" height="15" fill="rgb(237,70,4)" fg:x="1731" fg:w="9"/><text x="4.2261%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9536%" y="69" width="0.0682%" height="15" fill="rgb(244,85,46)" fg:x="1740" fg:w="30"/><text x="4.2465%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9536%" y="85" width="0.1250%" height="15" fill="rgb(223,39,52)" fg:x="1740" fg:w="55"/><text x="4.2465%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="3.9331%" y="101" width="0.2590%" height="15" fill="rgb(218,200,14)" fg:x="1731" fg:w="114"/><text x="4.2261%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="3.9331%" y="117" width="0.3795%" height="15" fill="rgb(208,171,16)" fg:x="1731" fg:w="167"/><text x="4.2261%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="3.9331%" y="133" width="0.3908%" height="15" fill="rgb(234,200,18)" fg:x="1731" fg:w="172"/><text x="4.2261%" y="143.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="3.7400%" y="149" width="0.8362%" height="15" fill="rgb(228,45,11)" fg:x="1646" fg:w="368"/><text x="4.0329%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (560 instructions, 1.27%)</title><rect x="3.5787%" y="165" width="1.2724%" height="15" fill="rgb(237,182,11)" fg:x="1575" fg:w="560"/><text x="3.8716%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="4.8511%" y="165" width="0.1886%" height="15" fill="rgb(241,175,49)" fg:x="2135" fg:w="83"/><text x="5.1440%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="5.0396%" y="165" width="0.1840%" height="15" fill="rgb(247,38,35)" fg:x="2218" fg:w="81"/><text x="5.3326%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.2237%" y="149" width="0.1227%" height="15" fill="rgb(228,39,49)" fg:x="2299" fg:w="54"/><text x="5.5167%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="5.3464%" y="149" width="0.1772%" height="15" fill="rgb(226,101,26)" fg:x="2353" fg:w="78"/><text x="5.6394%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="5.5236%" y="133" width="0.2568%" height="15" fill="rgb(206,141,19)" fg:x="2431" fg:w="113"/><text x="5.8166%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="5.7804%" y="101" width="0.2727%" height="15" fill="rgb(211,200,13)" fg:x="2544" fg:w="120"/><text x="6.0733%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="5.7804%" y="117" width="0.3295%" height="15" fill="rgb(241,121,6)" fg:x="2544" fg:w="145"/><text x="6.0733%" y="127.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="6.1098%" y="37" width="0.2295%" height="15" fill="rgb(234,221,29)" fg:x="2689" fg:w="101"/><text x="6.4028%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="6.1098%" y="53" width="0.3090%" height="15" fill="rgb(229,136,5)" fg:x="2689" fg:w="136"/><text x="6.4028%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.48%)</title><rect x="6.1098%" y="69" width="0.4794%" height="15" fill="rgb(238,36,11)" fg:x="2689" fg:w="211"/><text x="6.4028%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.34%)</title><rect x="6.5893%" y="69" width="0.3363%" height="15" fill="rgb(251,55,41)" fg:x="2900" fg:w="148"/><text x="6.8822%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (391 instructions, 0.89%)</title><rect x="6.1098%" y="85" width="0.8884%" height="15" fill="rgb(242,34,40)" fg:x="2689" fg:w="391"/><text x="6.4028%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.9983%" y="53" width="0.0204%" height="15" fill="rgb(215,42,17)" fg:x="3080" fg:w="9"/><text x="7.2912%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.0187%" y="37" width="0.0682%" height="15" fill="rgb(207,44,46)" fg:x="3089" fg:w="30"/><text x="7.3117%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.0187%" y="53" width="0.1250%" height="15" fill="rgb(211,206,28)" fg:x="3089" fg:w="55"/><text x="7.3117%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="6.9983%" y="69" width="0.2590%" height="15" fill="rgb(237,167,16)" fg:x="3080" fg:w="114"/><text x="7.2912%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.39%)</title><rect x="6.9983%" y="85" width="0.3931%" height="15" fill="rgb(233,66,6)" fg:x="3080" fg:w="173"/><text x="7.2912%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="7.3913%" y="69" width="0.1022%" height="15" fill="rgb(246,123,29)" fg:x="3253" fg:w="45"/><text x="7.6843%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="7.3913%" y="85" width="0.1591%" height="15" fill="rgb(209,62,40)" fg:x="3253" fg:w="70"/><text x="7.6843%" y="95.50"></text></g><g><title>core::fmt::write (762 instructions, 1.73%)</title><rect x="6.1098%" y="101" width="1.7314%" height="15" fill="rgb(218,4,25)" fg:x="2689" fg:w="762"/><text x="6.4028%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (819 instructions, 1.86%)</title><rect x="6.1098%" y="117" width="1.8609%" height="15" fill="rgb(253,91,49)" fg:x="2689" fg:w="819"/><text x="6.4028%" y="127.50"></text></g><g><title>core::fmt::write (1,075 instructions, 2.44%)</title><rect x="5.7804%" y="133" width="2.4426%" height="15" fill="rgb(228,155,29)" fg:x="2544" fg:w="1075"/><text x="6.0733%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,309 instructions, 2.97%)</title><rect x="5.5236%" y="149" width="2.9743%" height="15" fill="rgb(243,57,37)" fg:x="2431" fg:w="1309"/><text x="5.8166%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.16%)</title><rect x="8.4979%" y="149" width="0.1636%" height="15" fill="rgb(244,167,17)" fg:x="3740" fg:w="72"/><text x="8.7908%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="8.6615%" y="149" width="0.1250%" height="15" fill="rgb(207,181,38)" fg:x="3812" fg:w="55"/><text x="8.9544%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="8.7864%" y="149" width="0.1477%" height="15" fill="rgb(211,8,23)" fg:x="3867" fg:w="65"/><text x="9.0794%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.9341%" y="117" width="0.1727%" height="15" fill="rgb(235,11,44)" fg:x="3932" fg:w="76"/><text x="9.2271%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="8.9341%" y="133" width="0.2499%" height="15" fill="rgb(248,18,52)" fg:x="3932" fg:w="110"/><text x="9.2271%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="8.9341%" y="149" width="0.4090%" height="15" fill="rgb(208,4,7)" fg:x="3932" fg:w="180"/><text x="9.2271%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="9.3431%" y="149" width="0.1227%" height="15" fill="rgb(240,17,39)" fg:x="4112" fg:w="54"/><text x="9.6361%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="9.4658%" y="149" width="0.1613%" height="15" fill="rgb(207,170,3)" fg:x="4166" fg:w="71"/><text x="9.7588%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.6271%" y="133" width="0.1863%" height="15" fill="rgb(236,100,52)" fg:x="4237" fg:w="82"/><text x="9.9201%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="9.8135%" y="101" width="0.2727%" height="15" fill="rgb(246,78,51)" fg:x="4319" fg:w="120"/><text x="10.1064%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="9.8135%" y="117" width="0.3295%" height="15" fill="rgb(211,17,15)" fg:x="4319" fg:w="145"/><text x="10.1064%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.18%)</title><rect x="10.1429%" y="37" width="0.1818%" height="15" fill="rgb(209,59,46)" fg:x="4464" fg:w="80"/><text x="10.4359%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.26%)</title><rect x="10.1429%" y="53" width="0.2613%" height="15" fill="rgb(210,92,25)" fg:x="4464" fg:w="115"/><text x="10.4359%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.43%)</title><rect x="10.1429%" y="69" width="0.4317%" height="15" fill="rgb(238,174,52)" fg:x="4464" fg:w="190"/><text x="10.4359%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.34%)</title><rect x="10.5746%" y="69" width="0.3363%" height="15" fill="rgb(230,73,7)" fg:x="4654" fg:w="148"/><text x="10.8676%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (370 instructions, 0.84%)</title><rect x="10.1429%" y="85" width="0.8407%" height="15" fill="rgb(243,124,40)" fg:x="4464" fg:w="370"/><text x="10.4359%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="10.9836%" y="53" width="0.0204%" height="15" fill="rgb(244,170,11)" fg:x="4834" fg:w="9"/><text x="11.2766%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.0041%" y="37" width="0.0682%" height="15" fill="rgb(207,114,54)" fg:x="4843" fg:w="30"/><text x="11.2970%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.0041%" y="53" width="0.1250%" height="15" fill="rgb(205,42,20)" fg:x="4843" fg:w="55"/><text x="11.2970%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="10.9836%" y="69" width="0.2590%" height="15" fill="rgb(230,30,28)" fg:x="4834" fg:w="114"/><text x="11.2766%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.39%)</title><rect x="10.9836%" y="85" width="0.3931%" height="15" fill="rgb(205,73,54)" fg:x="4834" fg:w="173"/><text x="11.2766%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="11.3767%" y="69" width="0.1022%" height="15" fill="rgb(254,227,23)" fg:x="5007" fg:w="45"/><text x="11.6697%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="11.3767%" y="85" width="0.1591%" height="15" fill="rgb(228,202,34)" fg:x="5007" fg:w="70"/><text x="11.6697%" y="95.50"></text></g><g><title>core::fmt::write (741 instructions, 1.68%)</title><rect x="10.1429%" y="101" width="1.6837%" height="15" fill="rgb(222,225,37)" fg:x="4464" fg:w="741"/><text x="10.4359%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (798 instructions, 1.81%)</title><rect x="10.1429%" y="117" width="1.8132%" height="15" fill="rgb(221,14,54)" fg:x="4464" fg:w="798"/><text x="10.4359%" y="127.50"></text></g><g><title>core::fmt::write (1,054 instructions, 2.39%)</title><rect x="9.8135%" y="133" width="2.3949%" height="15" fill="rgb(254,102,2)" fg:x="4319" fg:w="1054"/><text x="10.1064%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,257 instructions, 2.86%)</title><rect x="9.6271%" y="149" width="2.8561%" height="15" fill="rgb(232,104,17)" fg:x="4237" fg:w="1257"/><text x="9.9201%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.16%)</title><rect x="12.4832%" y="149" width="0.1636%" height="15" fill="rgb(250,220,14)" fg:x="5494" fg:w="72"/><text x="12.7762%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="12.6468%" y="149" width="0.1272%" height="15" fill="rgb(241,158,9)" fg:x="5566" fg:w="56"/><text x="12.9398%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="12.7741%" y="149" width="0.1477%" height="15" fill="rgb(246,9,43)" fg:x="5622" fg:w="65"/><text x="13.0670%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="12.9218%" y="149" width="0.1227%" height="15" fill="rgb(206,73,33)" fg:x="5687" fg:w="54"/><text x="13.2147%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="13.0445%" y="133" width="0.1613%" height="15" fill="rgb(222,79,8)" fg:x="5741" fg:w="71"/><text x="13.3374%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="13.2058%" y="133" width="0.1477%" height="15" fill="rgb(234,8,54)" fg:x="5812" fg:w="65"/><text x="13.4988%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="13.3535%" y="133" width="0.9134%" height="15" fill="rgb(209,134,38)" fg:x="5877" fg:w="402"/><text x="13.6464%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="14.2669%" y="133" width="0.0364%" height="15" fill="rgb(230,127,29)" fg:x="6279" fg:w="16"/><text x="14.5599%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="14.3032%" y="117" width="0.1863%" height="15" fill="rgb(242,44,41)" fg:x="6295" fg:w="82"/><text x="14.5962%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="14.4896%" y="85" width="0.1363%" height="15" fill="rgb(222,56,43)" fg:x="6377" fg:w="60"/><text x="14.7825%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="14.4896%" y="101" width="0.1931%" height="15" fill="rgb(238,39,47)" fg:x="6377" fg:w="85"/><text x="14.7825%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="14.6827%" y="53" width="0.0204%" height="15" fill="rgb(226,79,43)" fg:x="6462" fg:w="9"/><text x="14.9757%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="14.7031%" y="37" width="0.0682%" height="15" fill="rgb(242,105,53)" fg:x="6471" fg:w="30"/><text x="14.9961%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="14.7031%" y="53" width="0.1250%" height="15" fill="rgb(251,132,46)" fg:x="6471" fg:w="55"/><text x="14.9961%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="14.6827%" y="69" width="0.2590%" height="15" fill="rgb(231,77,14)" fg:x="6462" fg:w="114"/><text x="14.9757%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="14.6827%" y="85" width="0.3795%" height="15" fill="rgb(240,135,9)" fg:x="6462" fg:w="167"/><text x="14.9757%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="14.6827%" y="101" width="0.3908%" height="15" fill="rgb(248,109,14)" fg:x="6462" fg:w="172"/><text x="14.9757%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="14.4896%" y="117" width="0.8362%" height="15" fill="rgb(227,146,52)" fg:x="6377" fg:w="368"/><text x="14.7825%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.30%)</title><rect x="14.3032%" y="133" width="1.2974%" height="15" fill="rgb(232,54,3)" fg:x="6295" fg:w="571"/><text x="14.5962%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="15.6006%" y="133" width="0.1886%" height="15" fill="rgb(229,201,43)" fg:x="6866" fg:w="83"/><text x="15.8936%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="15.7892%" y="133" width="0.1272%" height="15" fill="rgb(252,161,33)" fg:x="6949" fg:w="56"/><text x="16.0822%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="15.9165%" y="117" width="0.1613%" height="15" fill="rgb(226,146,40)" fg:x="7005" fg:w="71"/><text x="16.2094%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (269 instructions, 0.61%)</title><rect x="16.0778%" y="117" width="0.6112%" height="15" fill="rgb(219,47,25)" fg:x="7076" fg:w="269"/><text x="16.3708%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="16.6890%" y="101" width="0.1613%" height="15" fill="rgb(250,135,13)" fg:x="7345" fg:w="71"/><text x="16.9820%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="16.8503%" y="101" width="0.2045%" height="15" fill="rgb(219,229,18)" fg:x="7416" fg:w="90"/><text x="17.1433%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="17.0548%" y="101" width="0.1477%" height="15" fill="rgb(217,152,27)" fg:x="7506" fg:w="65"/><text x="17.3478%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="16.6890%" y="117" width="0.6476%" height="15" fill="rgb(225,71,47)" fg:x="7345" fg:w="285"/><text x="16.9820%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="17.3366%" y="117" width="0.1477%" height="15" fill="rgb(220,139,14)" fg:x="7630" fg:w="65"/><text x="17.6295%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.85%)</title><rect x="15.9165%" y="133" width="1.8473%" height="15" fill="rgb(247,54,32)" fg:x="7005" fg:w="813"/><text x="16.2094%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="17.7637%" y="133" width="0.1863%" height="15" fill="rgb(252,131,39)" fg:x="7818" fg:w="82"/><text x="18.0567%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="17.9501%" y="117" width="0.1613%" height="15" fill="rgb(210,108,39)" fg:x="7900" fg:w="71"/><text x="18.2430%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (269 instructions, 0.61%)</title><rect x="18.1114%" y="117" width="0.6112%" height="15" fill="rgb(205,23,29)" fg:x="7971" fg:w="269"/><text x="18.4043%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="18.7226%" y="101" width="0.1613%" height="15" fill="rgb(246,139,46)" fg:x="8240" fg:w="71"/><text x="19.0156%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="18.8839%" y="101" width="0.2045%" height="15" fill="rgb(250,81,26)" fg:x="8311" fg:w="90"/><text x="19.1769%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.0884%" y="101" width="0.1477%" height="15" fill="rgb(214,104,7)" fg:x="8401" fg:w="65"/><text x="19.3814%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="18.7226%" y="117" width="0.6476%" height="15" fill="rgb(233,189,8)" fg:x="8240" fg:w="285"/><text x="19.0156%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.3702%" y="117" width="0.1477%" height="15" fill="rgb(228,141,17)" fg:x="8525" fg:w="65"/><text x="19.6631%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.85%)</title><rect x="17.9501%" y="133" width="1.8473%" height="15" fill="rgb(247,157,1)" fg:x="7900" fg:w="813"/><text x="18.2430%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="19.7973%" y="133" width="0.0477%" height="15" fill="rgb(249,225,5)" fg:x="8713" fg:w="21"/><text x="20.0903%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="19.8450%" y="133" width="0.1477%" height="15" fill="rgb(242,55,13)" fg:x="8734" fg:w="65"/><text x="20.1380%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,395 instructions, 7.71%)</title><rect x="13.0445%" y="149" width="7.7140%" height="15" fill="rgb(230,49,50)" fg:x="5741" fg:w="3395"/><text x="13.3374%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="20.7584%" y="133" width="0.1840%" height="15" fill="rgb(241,111,38)" fg:x="9136" fg:w="81"/><text x="21.0514%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="20.9925%" y="133" width="0.1772%" height="15" fill="rgb(252,155,4)" fg:x="9239" fg:w="78"/><text x="21.2854%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.46%)</title><rect x="20.7584%" y="149" width="0.4612%" height="15" fill="rgb(212,69,32)" fg:x="9136" fg:w="203"/><text x="21.0514%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="21.2197%" y="149" width="0.2727%" height="15" fill="rgb(243,107,47)" fg:x="9339" fg:w="120"/><text x="21.5127%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,807 instructions, 17.74%)</title><rect x="5.2237%" y="165" width="17.7387%" height="15" fill="rgb(247,130,12)" fg:x="2299" fg:w="7807"/><text x="5.5167%" y="175.50">&lt;candid::binary_parser:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.14%)</title><rect x="22.9624%" y="165" width="0.1431%" height="15" fill="rgb(233,74,16)" fg:x="10106" fg:w="63"/><text x="23.2554%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="23.1056%" y="165" width="0.1477%" height="15" fill="rgb(208,58,18)" fg:x="10169" fg:w="65"/><text x="23.3986%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="23.2533%" y="165" width="0.1477%" height="15" fill="rgb(242,225,1)" fg:x="10234" fg:w="65"/><text x="23.5462%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="23.4010%" y="149" width="0.9134%" height="15" fill="rgb(249,39,40)" fg:x="10299" fg:w="402"/><text x="23.6939%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="24.3144%" y="149" width="0.0364%" height="15" fill="rgb(207,72,44)" fg:x="10701" fg:w="16"/><text x="24.6073%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="24.3507%" y="133" width="0.1772%" height="15" fill="rgb(215,193,12)" fg:x="10717" fg:w="78"/><text x="24.6437%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="24.5280%" y="101" width="0.1363%" height="15" fill="rgb(248,41,39)" fg:x="10795" fg:w="60"/><text x="24.8209%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="24.5280%" y="117" width="0.1931%" height="15" fill="rgb(253,85,4)" fg:x="10795" fg:w="85"/><text x="24.8209%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="24.7211%" y="69" width="0.0204%" height="15" fill="rgb(243,70,31)" fg:x="10880" fg:w="9"/><text x="25.0141%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="24.7415%" y="53" width="0.0682%" height="15" fill="rgb(253,195,26)" fg:x="10889" fg:w="30"/><text x="25.0345%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="24.7415%" y="69" width="0.1250%" height="15" fill="rgb(243,42,11)" fg:x="10889" fg:w="55"/><text x="25.0345%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="24.7211%" y="85" width="0.2590%" height="15" fill="rgb(239,66,17)" fg:x="10880" fg:w="114"/><text x="25.0141%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="24.7211%" y="101" width="0.3795%" height="15" fill="rgb(217,132,21)" fg:x="10880" fg:w="167"/><text x="25.0141%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="24.7211%" y="117" width="0.3908%" height="15" fill="rgb(252,202,21)" fg:x="10880" fg:w="172"/><text x="25.0141%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.84%)</title><rect x="24.5280%" y="133" width="0.8362%" height="15" fill="rgb(233,98,36)" fg:x="10795" fg:w="368"/><text x="24.8209%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (567 instructions, 1.29%)</title><rect x="24.3507%" y="149" width="1.2883%" height="15" fill="rgb(216,153,54)" fg:x="10717" fg:w="567"/><text x="24.6437%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="25.6390%" y="149" width="0.1886%" height="15" fill="rgb(250,99,7)" fg:x="11284" fg:w="83"/><text x="25.9320%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.8276%" y="149" width="0.1840%" height="15" fill="rgb(207,56,50)" fg:x="11367" fg:w="81"/><text x="26.1206%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="26.0117%" y="133" width="0.1613%" height="15" fill="rgb(244,61,34)" fg:x="11448" fg:w="71"/><text x="26.3046%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="26.1730%" y="133" width="0.2045%" height="15" fill="rgb(241,50,38)" fg:x="11519" fg:w="90"/><text x="26.4660%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="26.3775%" y="133" width="0.1477%" height="15" fill="rgb(212,166,30)" fg:x="11609" fg:w="65"/><text x="26.6705%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.65%)</title><rect x="26.0117%" y="149" width="0.6476%" height="15" fill="rgb(249,127,32)" fg:x="11448" fg:w="285"/><text x="26.3046%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="26.6592%" y="149" width="0.2568%" height="15" fill="rgb(209,103,0)" fg:x="11733" fg:w="113"/><text x="26.9522%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,750 instructions, 3.98%)</title><rect x="23.4010%" y="165" width="3.9763%" height="15" fill="rgb(238,209,51)" fg:x="10299" fg:w="1750"/><text x="23.6939%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="27.3772%" y="165" width="0.1477%" height="15" fill="rgb(237,56,23)" fg:x="12049" fg:w="65"/><text x="27.6702%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.5249%" y="165" width="0.1727%" height="15" fill="rgb(215,153,46)" fg:x="12114" fg:w="76"/><text x="27.8179%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="27.6976%" y="149" width="0.1727%" height="15" fill="rgb(224,49,31)" fg:x="12190" fg:w="76"/><text x="27.9906%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="27.6976%" y="165" width="0.3613%" height="15" fill="rgb(250,18,42)" fg:x="12190" fg:w="159"/><text x="27.9906%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.0589%" y="133" width="0.1863%" height="15" fill="rgb(215,176,39)" fg:x="12349" fg:w="82"/><text x="28.3519%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="28.0589%" y="149" width="0.2636%" height="15" fill="rgb(223,77,29)" fg:x="12349" fg:w="116"/><text x="28.3519%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.42%)</title><rect x="28.0589%" y="165" width="0.4226%" height="15" fill="rgb(234,94,52)" fg:x="12349" fg:w="186"/><text x="28.3519%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.4815%" y="165" width="0.1863%" height="15" fill="rgb(220,154,50)" fg:x="12535" fg:w="82"/><text x="28.7745%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.6678%" y="149" width="0.1863%" height="15" fill="rgb(212,11,10)" fg:x="12617" fg:w="82"/><text x="28.9608%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.37%)</title><rect x="28.6678%" y="165" width="0.3749%" height="15" fill="rgb(205,166,19)" fg:x="12617" fg:w="165"/><text x="28.9608%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.0427%" y="165" width="0.1863%" height="15" fill="rgb(244,198,16)" fg:x="12782" fg:w="82"/><text x="29.3357%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.2291%" y="149" width="0.1772%" height="15" fill="rgb(219,69,12)" fg:x="12864" fg:w="78"/><text x="29.5220%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="29.4063%" y="117" width="0.2045%" height="15" fill="rgb(245,30,7)" fg:x="12942" fg:w="90"/><text x="29.6993%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="29.4063%" y="133" width="0.2613%" height="15" fill="rgb(218,221,48)" fg:x="12942" fg:w="115"/><text x="29.6993%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="29.6676%" y="85" width="0.0204%" height="15" fill="rgb(216,66,15)" fg:x="13057" fg:w="9"/><text x="29.9606%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="29.6880%" y="69" width="0.0682%" height="15" fill="rgb(226,122,50)" fg:x="13066" fg:w="30"/><text x="29.9810%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="29.6880%" y="85" width="0.1250%" height="15" fill="rgb(239,156,16)" fg:x="13066" fg:w="55"/><text x="29.9810%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="29.6676%" y="101" width="0.2590%" height="15" fill="rgb(224,27,38)" fg:x="13057" fg:w="114"/><text x="29.9606%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="29.6676%" y="117" width="0.3795%" height="15" fill="rgb(224,39,27)" fg:x="13057" fg:w="167"/><text x="29.9606%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.41%)</title><rect x="29.6676%" y="133" width="0.4135%" height="15" fill="rgb(215,92,29)" fg:x="13057" fg:w="182"/><text x="29.9606%" y="143.50"></text></g><g><title>core::fmt::write (408 instructions, 0.93%)</title><rect x="29.4063%" y="149" width="0.9270%" height="15" fill="rgb(207,159,16)" fg:x="12942" fg:w="408"/><text x="29.6993%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (607 instructions, 1.38%)</title><rect x="29.2291%" y="165" width="1.3792%" height="15" fill="rgb(238,163,47)" fg:x="12864" fg:w="607"/><text x="29.5220%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="30.6083%" y="149" width="0.1863%" height="15" fill="rgb(219,91,49)" fg:x="13471" fg:w="82"/><text x="30.9012%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (137 instructions, 0.31%)</title><rect x="30.6083%" y="165" width="0.3113%" height="15" fill="rgb(227,167,31)" fg:x="13471" fg:w="137"/><text x="30.9012%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="30.9195%" y="165" width="0.2159%" height="15" fill="rgb(234,80,54)" fg:x="13608" fg:w="95"/><text x="31.2125%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="31.1354%" y="165" width="0.0295%" height="15" fill="rgb(212,114,2)" fg:x="13703" fg:w="13"/><text x="31.4284%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.1649%" y="165" width="0.2159%" height="15" fill="rgb(234,50,24)" fg:x="13716" fg:w="95"/><text x="31.4579%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.3808%" y="149" width="0.1863%" height="15" fill="rgb(221,68,8)" fg:x="13811" fg:w="82"/><text x="31.6738%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (115 instructions, 0.26%)</title><rect x="31.3808%" y="165" width="0.2613%" height="15" fill="rgb(254,180,31)" fg:x="13811" fg:w="115"/><text x="31.6738%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (24 instructions, 0.05%)</title><rect x="31.6421%" y="149" width="0.0545%" height="15" fill="rgb(247,130,50)" fg:x="13926" fg:w="24"/><text x="31.9351%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (24 instructions, 0.05%)</title><rect x="31.6966%" y="149" width="0.0545%" height="15" fill="rgb(211,109,4)" fg:x="13950" fg:w="24"/><text x="31.9896%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (137 instructions, 0.31%)</title><rect x="31.6421%" y="165" width="0.3113%" height="15" fill="rgb(238,50,21)" fg:x="13926" fg:w="137"/><text x="31.9351%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="31.9534%" y="165" width="0.0341%" height="15" fill="rgb(225,57,45)" fg:x="14063" fg:w="15"/><text x="32.2463%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="32.1760%" y="149" width="0.1272%" height="15" fill="rgb(209,196,50)" fg:x="14161" fg:w="56"/><text x="32.4690%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.37%)</title><rect x="31.9875%" y="165" width="0.3726%" height="15" fill="rgb(242,140,13)" fg:x="14078" fg:w="164"/><text x="32.2804%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="32.3601%" y="165" width="0.0295%" height="15" fill="rgb(217,111,7)" fg:x="14242" fg:w="13"/><text x="32.6531%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="32.3896%" y="165" width="0.0159%" height="15" fill="rgb(253,193,51)" fg:x="14255" fg:w="7"/><text x="32.6826%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.4055%" y="165" width="0.0341%" height="15" fill="rgb(252,70,29)" fg:x="14262" fg:w="15"/><text x="32.6985%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="32.4396%" y="133" width="0.1613%" height="15" fill="rgb(232,127,12)" fg:x="14277" fg:w="71"/><text x="32.7326%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="32.6009%" y="101" width="0.2045%" height="15" fill="rgb(211,180,21)" fg:x="14348" fg:w="90"/><text x="32.8939%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="32.6009%" y="117" width="0.2613%" height="15" fill="rgb(229,72,13)" fg:x="14348" fg:w="115"/><text x="32.8939%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="32.8622%" y="69" width="0.0204%" height="15" fill="rgb(240,211,49)" fg:x="14463" fg:w="9"/><text x="33.1552%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="32.8827%" y="53" width="0.0682%" height="15" fill="rgb(219,149,40)" fg:x="14472" fg:w="30"/><text x="33.1757%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="32.8827%" y="69" width="0.1250%" height="15" fill="rgb(210,127,46)" fg:x="14472" fg:w="55"/><text x="33.1757%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="32.8622%" y="85" width="0.2590%" height="15" fill="rgb(220,106,7)" fg:x="14463" fg:w="114"/><text x="33.1552%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="32.8622%" y="101" width="0.3795%" height="15" fill="rgb(249,31,22)" fg:x="14463" fg:w="167"/><text x="33.1552%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.41%)</title><rect x="32.8622%" y="117" width="0.4135%" height="15" fill="rgb(253,1,49)" fg:x="14463" fg:w="182"/><text x="33.1552%" y="127.50"></text></g><g><title>core::fmt::write (408 instructions, 0.93%)</title><rect x="32.6009%" y="133" width="0.9270%" height="15" fill="rgb(227,144,33)" fg:x="14348" fg:w="408"/><text x="32.8939%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.36%)</title><rect x="32.4396%" y="149" width="1.3633%" height="15" fill="rgb(249,163,44)" fg:x="14277" fg:w="600"/><text x="32.7326%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="33.8029%" y="149" width="0.1863%" height="15" fill="rgb(234,15,39)" fg:x="14877" fg:w="82"/><text x="34.0959%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (793 instructions, 1.80%)</title><rect x="32.4396%" y="165" width="1.8018%" height="15" fill="rgb(207,66,16)" fg:x="14277" fg:w="793"/><text x="32.7326%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.2414%" y="133" width="0.1863%" height="15" fill="rgb(233,112,24)" fg:x="15070" fg:w="82"/><text x="34.5344%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="34.2414%" y="149" width="0.2636%" height="15" fill="rgb(230,90,22)" fg:x="15070" fg:w="116"/><text x="34.5344%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.42%)</title><rect x="34.2414%" y="165" width="0.4226%" height="15" fill="rgb(229,61,13)" fg:x="15070" fg:w="186"/><text x="34.5344%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.6641%" y="165" width="0.1863%" height="15" fill="rgb(225,57,24)" fg:x="15256" fg:w="82"/><text x="34.9570%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="34.8504%" y="165" width="0.1840%" height="15" fill="rgb(208,169,48)" fg:x="15338" fg:w="81"/><text x="35.1433%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.0344%" y="165" width="0.1863%" height="15" fill="rgb(244,218,51)" fg:x="15419" fg:w="82"/><text x="35.3274%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.2207%" y="165" width="0.1863%" height="15" fill="rgb(214,148,10)" fg:x="15501" fg:w="82"/><text x="35.5137%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.4071%" y="149" width="0.1840%" height="15" fill="rgb(225,174,27)" fg:x="15583" fg:w="81"/><text x="35.7000%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 instructions, 0.25%)</title><rect x="35.4071%" y="165" width="0.2545%" height="15" fill="rgb(230,96,26)" fg:x="15583" fg:w="112"/><text x="35.7000%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="35.6615%" y="149" width="0.1431%" height="15" fill="rgb(232,10,30)" fg:x="15695" fg:w="63"/><text x="35.9545%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.38%)</title><rect x="35.6615%" y="165" width="0.3772%" height="15" fill="rgb(222,8,50)" fg:x="15695" fg:w="166"/><text x="35.9545%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="36.0387%" y="165" width="0.1840%" height="15" fill="rgb(213,81,27)" fg:x="15861" fg:w="81"/><text x="36.3317%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.91%)</title><rect x="36.2228%" y="165" width="0.9066%" height="15" fill="rgb(245,50,10)" fg:x="15942" fg:w="399"/><text x="36.5157%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.91%)</title><rect x="37.1294%" y="165" width="0.9066%" height="15" fill="rgb(216,100,18)" fg:x="16341" fg:w="399"/><text x="37.4223%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,295 instructions, 41.57%)</title><rect x="0.5658%" y="181" width="41.5692%" height="15" fill="rgb(236,147,54)" fg:x="249" fg:w="18295"/><text x="0.8587%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="42.1349%" y="181" width="0.8043%" height="15" fill="rgb(205,143,26)" fg:x="18544" fg:w="354"/><text x="42.4279%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="42.9393%" y="165" width="0.0273%" height="15" fill="rgb(236,26,9)" fg:x="18898" fg:w="12"/><text x="43.2322%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="42.9393%" y="181" width="0.1136%" height="15" fill="rgb(221,165,53)" fg:x="18898" fg:w="50"/><text x="43.2322%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="43.0529%" y="165" width="0.1250%" height="15" fill="rgb(214,110,17)" fg:x="18948" fg:w="55"/><text x="43.3458%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.36%)</title><rect x="43.0529%" y="181" width="0.3613%" height="15" fill="rgb(237,197,12)" fg:x="18948" fg:w="159"/><text x="43.3458%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="43.4141%" y="165" width="0.0273%" height="15" fill="rgb(205,84,17)" fg:x="19107" fg:w="12"/><text x="43.7071%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="43.4414%" y="149" width="0.1204%" height="15" fill="rgb(237,18,45)" fg:x="19119" fg:w="53"/><text x="43.7344%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="43.5618%" y="149" width="0.6089%" height="15" fill="rgb(221,87,14)" fg:x="19172" fg:w="268"/><text x="43.8548%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.1708%" y="149" width="0.3681%" height="15" fill="rgb(238,186,15)" fg:x="19440" fg:w="162"/><text x="44.4637%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.64%)</title><rect x="43.4414%" y="165" width="1.6360%" height="15" fill="rgb(208,115,11)" fg:x="19119" fg:w="720"/><text x="43.7344%" y="175.50"></text></g><g><title>candid::types::internal::env_add (940 instructions, 2.14%)</title><rect x="43.4141%" y="181" width="2.1358%" height="15" fill="rgb(254,175,0)" fg:x="19107" fg:w="940"/><text x="43.7071%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.5500%" y="181" width="0.1772%" height="15" fill="rgb(227,24,42)" fg:x="20047" fg:w="78"/><text x="45.8429%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.7272%" y="181" width="0.1727%" height="15" fill="rgb(223,211,37)" fg:x="20125" fg:w="76"/><text x="46.0202%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.8999%" y="181" width="0.1772%" height="15" fill="rgb(235,49,27)" fg:x="20201" fg:w="78"/><text x="46.1929%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="46.0771%" y="149" width="0.0273%" height="15" fill="rgb(254,97,51)" fg:x="20279" fg:w="12"/><text x="46.3701%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.1044%" y="133" width="0.1204%" height="15" fill="rgb(249,51,40)" fg:x="20291" fg:w="53"/><text x="46.3974%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="46.2248%" y="133" width="0.6953%" height="15" fill="rgb(210,128,45)" fg:x="20344" fg:w="306"/><text x="46.5178%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="46.9201%" y="133" width="0.1636%" height="15" fill="rgb(224,137,50)" fg:x="20650" fg:w="72"/><text x="47.2131%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="46.1044%" y="149" width="1.5178%" height="15" fill="rgb(242,15,9)" fg:x="20291" fg:w="668"/><text x="46.3974%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 1.81%)</title><rect x="46.0771%" y="165" width="1.8064%" height="15" fill="rgb(233,187,41)" fg:x="20279" fg:w="795"/><text x="46.3701%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="47.8835%" y="165" width="0.1727%" height="15" fill="rgb(227,2,29)" fg:x="21074" fg:w="76"/><text x="48.1765%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="48.0562%" y="149" width="0.0273%" height="15" fill="rgb(222,70,3)" fg:x="21150" fg:w="12"/><text x="48.3491%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="48.0834%" y="133" width="0.1204%" height="15" fill="rgb(213,11,42)" fg:x="21162" fg:w="53"/><text x="48.3764%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="48.2039%" y="133" width="0.6953%" height="15" fill="rgb(225,150,9)" fg:x="21215" fg:w="306"/><text x="48.4968%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="48.8991%" y="133" width="0.1636%" height="15" fill="rgb(230,162,45)" fg:x="21521" fg:w="72"/><text x="49.1921%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="48.0834%" y="149" width="1.5178%" height="15" fill="rgb(222,14,52)" fg:x="21162" fg:w="668"/><text x="48.3764%" y="159.50"></text></g><g><title>candid::types::internal::env_add (888 instructions, 2.02%)</title><rect x="48.0562%" y="165" width="2.0177%" height="15" fill="rgb(254,198,14)" fg:x="21150" fg:w="888"/><text x="48.3491%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="50.0738%" y="165" width="0.1727%" height="15" fill="rgb(220,217,30)" fg:x="22038" fg:w="76"/><text x="50.3668%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="50.2465%" y="149" width="0.0273%" height="15" fill="rgb(215,146,41)" fg:x="22114" fg:w="12"/><text x="50.5395%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.2738%" y="133" width="0.1204%" height="15" fill="rgb(217,27,36)" fg:x="22126" fg:w="53"/><text x="50.5668%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="50.3942%" y="133" width="0.6953%" height="15" fill="rgb(219,218,39)" fg:x="22179" fg:w="306"/><text x="50.6872%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="51.0895%" y="133" width="0.1636%" height="15" fill="rgb(219,4,42)" fg:x="22485" fg:w="72"/><text x="51.3825%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="50.2738%" y="149" width="1.5178%" height="15" fill="rgb(249,119,36)" fg:x="22126" fg:w="668"/><text x="50.5668%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.01%)</title><rect x="51.7916%" y="149" width="1.0134%" height="15" fill="rgb(209,23,33)" fg:x="22794" fg:w="446"/><text x="52.0846%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="52.8050%" y="133" width="0.1840%" height="15" fill="rgb(211,10,0)" fg:x="23240" fg:w="81"/><text x="53.0979%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="52.8050%" y="149" width="0.2454%" height="15" fill="rgb(208,99,37)" fg:x="23240" fg:w="108"/><text x="53.0979%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 3.18%)</title><rect x="50.2465%" y="165" width="3.1833%" height="15" fill="rgb(213,132,31)" fg:x="22114" fg:w="1401"/><text x="50.5395%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.4298%" y="117" width="0.1204%" height="15" fill="rgb(243,129,40)" fg:x="23515" fg:w="53"/><text x="53.7228%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.4298%" y="133" width="0.1795%" height="15" fill="rgb(210,66,33)" fg:x="23515" fg:w="79"/><text x="53.7228%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (294 instructions, 0.67%)</title><rect x="53.4298%" y="149" width="0.6680%" height="15" fill="rgb(209,189,4)" fg:x="23515" fg:w="294"/><text x="53.7228%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.582 (9 instructions, 0.02%)</title><rect x="54.0978%" y="149" width="0.0204%" height="15" fill="rgb(214,107,37)" fg:x="23809" fg:w="9"/><text x="54.3908%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.582 (15 instructions, 0.03%)</title><rect x="54.1183%" y="149" width="0.0341%" height="15" fill="rgb(245,88,54)" fg:x="23818" fg:w="15"/><text x="54.4113%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="54.1524%" y="149" width="0.0250%" height="15" fill="rgb(205,146,20)" fg:x="23833" fg:w="11"/><text x="54.4453%" y="159.50"></text></g><g><title>candid::types::internal::env_id (542 instructions, 1.23%)</title><rect x="53.4298%" y="165" width="1.2315%" height="15" fill="rgb(220,161,25)" fg:x="23515" fg:w="542"/><text x="53.7228%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,875 instructions, 8.80%)</title><rect x="46.0771%" y="181" width="8.8046%" height="15" fill="rgb(215,152,15)" fg:x="20279" fg:w="3875"/><text x="46.3701%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="54.8817%" y="181" width="0.1727%" height="15" fill="rgb(233,192,44)" fg:x="24154" fg:w="76"/><text x="55.1747%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.0544%" y="181" width="0.1727%" height="15" fill="rgb(240,170,46)" fg:x="24230" fg:w="76"/><text x="55.3474%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="55.2271%" y="149" width="0.0273%" height="15" fill="rgb(207,104,33)" fg:x="24306" fg:w="12"/><text x="55.5201%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="55.2544%" y="133" width="0.1204%" height="15" fill="rgb(219,21,39)" fg:x="24318" fg:w="53"/><text x="55.5473%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="55.3748%" y="133" width="0.2000%" height="15" fill="rgb(214,133,29)" fg:x="24371" fg:w="88"/><text x="55.6678%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="55.5747%" y="133" width="0.3681%" height="15" fill="rgb(226,93,6)" fg:x="24459" fg:w="162"/><text x="55.8677%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="55.2544%" y="149" width="1.2270%" height="15" fill="rgb(252,222,34)" fg:x="24318" fg:w="540"/><text x="55.5473%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.52%)</title><rect x="55.2271%" y="165" width="1.5155%" height="15" fill="rgb(252,92,48)" fg:x="24306" fg:w="667"/><text x="55.5201%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="56.7426%" y="165" width="0.1772%" height="15" fill="rgb(245,223,24)" fg:x="24973" fg:w="78"/><text x="57.0356%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="56.9199%" y="149" width="0.0273%" height="15" fill="rgb(205,176,3)" fg:x="25051" fg:w="12"/><text x="57.2128%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="56.9471%" y="133" width="0.1204%" height="15" fill="rgb(235,151,15)" fg:x="25063" fg:w="53"/><text x="57.2401%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="57.0676%" y="133" width="0.2000%" height="15" fill="rgb(237,209,11)" fg:x="25116" fg:w="88"/><text x="57.3605%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="57.2675%" y="133" width="0.3681%" height="15" fill="rgb(243,227,24)" fg:x="25204" fg:w="162"/><text x="57.5605%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="56.9471%" y="149" width="1.2270%" height="15" fill="rgb(239,193,16)" fg:x="25063" fg:w="540"/><text x="57.2401%" y="159.50"></text></g><g><title>candid::types::internal::env_add (760 instructions, 1.73%)</title><rect x="56.9199%" y="165" width="1.7268%" height="15" fill="rgb(231,27,9)" fg:x="25051" fg:w="760"/><text x="57.2128%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="58.6467%" y="165" width="0.1727%" height="15" fill="rgb(219,169,10)" fg:x="25811" fg:w="76"/><text x="58.9397%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="58.8194%" y="149" width="0.0273%" height="15" fill="rgb(244,229,43)" fg:x="25887" fg:w="12"/><text x="59.1124%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="58.8467%" y="133" width="0.1204%" height="15" fill="rgb(254,38,20)" fg:x="25899" fg:w="53"/><text x="59.1396%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="58.9671%" y="133" width="0.2000%" height="15" fill="rgb(250,47,30)" fg:x="25952" fg:w="88"/><text x="59.2600%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="59.1670%" y="133" width="0.3681%" height="15" fill="rgb(224,124,36)" fg:x="26040" fg:w="162"/><text x="59.4600%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="58.8467%" y="149" width="1.2270%" height="15" fill="rgb(246,68,51)" fg:x="25899" fg:w="540"/><text x="59.1396%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="60.0736%" y="149" width="0.1863%" height="15" fill="rgb(253,43,49)" fg:x="26439" fg:w="82"/><text x="60.3666%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="60.2599%" y="149" width="0.1909%" height="15" fill="rgb(219,54,36)" fg:x="26521" fg:w="84"/><text x="60.5529%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="60.4508%" y="133" width="0.1204%" height="15" fill="rgb(227,133,34)" fg:x="26605" fg:w="53"/><text x="60.7438%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.70%)</title><rect x="60.5712%" y="133" width="0.6953%" height="15" fill="rgb(247,227,15)" fg:x="26658" fg:w="306"/><text x="60.8642%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="61.2665%" y="133" width="0.1636%" height="15" fill="rgb(229,96,14)" fg:x="26964" fg:w="72"/><text x="61.5595%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.9686%" y="133" width="0.1204%" height="15" fill="rgb(220,79,17)" fg:x="27273" fg:w="53"/><text x="62.2616%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="62.0890%" y="133" width="0.2000%" height="15" fill="rgb(205,131,53)" fg:x="27326" fg:w="88"/><text x="62.3820%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="62.2890%" y="133" width="0.3681%" height="15" fill="rgb(209,50,29)" fg:x="27414" fg:w="162"/><text x="62.5819%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.1956%" y="133" width="0.1204%" height="15" fill="rgb(245,86,46)" fg:x="27813" fg:w="53"/><text x="63.4885%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="63.3160%" y="133" width="0.6089%" height="15" fill="rgb(235,66,46)" fg:x="27866" fg:w="268"/><text x="63.6090%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="63.9249%" y="133" width="0.3681%" height="15" fill="rgb(232,148,31)" fg:x="28134" fg:w="162"/><text x="64.2179%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,928 instructions, 4.38%)</title><rect x="60.4508%" y="149" width="4.3807%" height="15" fill="rgb(217,149,8)" fg:x="26605" fg:w="1928"/><text x="60.7438%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="64.8315%" y="149" width="0.1840%" height="15" fill="rgb(209,183,11)" fg:x="28533" fg:w="81"/><text x="65.1245%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="65.0156%" y="149" width="0.1545%" height="15" fill="rgb(208,55,20)" fg:x="28614" fg:w="68"/><text x="65.3085%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.1701%" y="133" width="0.1840%" height="15" fill="rgb(218,39,14)" fg:x="28682" fg:w="81"/><text x="65.4630%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="65.1701%" y="149" width="0.2454%" height="15" fill="rgb(216,169,33)" fg:x="28682" fg:w="108"/><text x="65.4630%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,527 instructions, 8.01%)</title><rect x="58.8194%" y="165" width="8.0139%" height="15" fill="rgb(233,80,24)" fg:x="25887" fg:w="3527"/><text x="59.1124%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="66.8333%" y="117" width="0.1204%" height="15" fill="rgb(213,179,31)" fg:x="29414" fg:w="53"/><text x="67.1263%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="66.8333%" y="133" width="0.1795%" height="15" fill="rgb(209,19,5)" fg:x="29414" fg:w="79"/><text x="67.1263%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.5013%" y="117" width="0.1204%" height="15" fill="rgb(219,18,35)" fg:x="29708" fg:w="53"/><text x="67.7943%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="67.5013%" y="133" width="0.1795%" height="15" fill="rgb(209,169,16)" fg:x="29708" fg:w="79"/><text x="67.7943%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (588 instructions, 1.34%)</title><rect x="66.8333%" y="149" width="1.3360%" height="15" fill="rgb(245,90,51)" fg:x="29414" fg:w="588"/><text x="67.1263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="68.1693%" y="149" width="0.1863%" height="15" fill="rgb(220,99,45)" fg:x="30002" fg:w="82"/><text x="68.4623%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="68.3556%" y="149" width="0.1909%" height="15" fill="rgb(249,89,25)" fg:x="30084" fg:w="84"/><text x="68.6486%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.5465%" y="117" width="0.1204%" height="15" fill="rgb(239,193,0)" fg:x="30168" fg:w="53"/><text x="68.8395%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="68.5465%" y="133" width="0.1795%" height="15" fill="rgb(231,126,1)" fg:x="30168" fg:w="79"/><text x="68.8395%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.2145%" y="117" width="0.1204%" height="15" fill="rgb(243,166,3)" fg:x="30462" fg:w="53"/><text x="69.5075%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="69.2145%" y="133" width="0.1795%" height="15" fill="rgb(223,22,34)" fg:x="30462" fg:w="79"/><text x="69.5075%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.8825%" y="117" width="0.1204%" height="15" fill="rgb(251,52,51)" fg:x="30756" fg:w="53"/><text x="70.1755%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="70.0030%" y="117" width="0.3499%" height="15" fill="rgb(221,165,28)" fg:x="30809" fg:w="154"/><text x="70.2959%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.3529%" y="101" width="0.1204%" height="15" fill="rgb(218,121,47)" fg:x="30963" fg:w="53"/><text x="70.6458%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="70.3529%" y="117" width="0.1795%" height="15" fill="rgb(209,120,9)" fg:x="30963" fg:w="79"/><text x="70.6458%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (353 instructions, 0.80%)</title><rect x="69.8825%" y="133" width="0.8021%" height="15" fill="rgb(236,68,12)" fg:x="30756" fg:w="353"/><text x="70.1755%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,156 instructions, 2.63%)</title><rect x="68.5465%" y="149" width="2.6266%" height="15" fill="rgb(225,194,26)" fg:x="30168" fg:w="1156"/><text x="68.8395%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="71.1731%" y="149" width="0.1772%" height="15" fill="rgb(231,84,39)" fg:x="31324" fg:w="78"/><text x="71.4661%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,753 instructions, 6.26%)</title><rect x="66.8333%" y="165" width="6.2553%" height="15" fill="rgb(210,11,45)" fg:x="29414" fg:w="2753"/><text x="67.1263%" y="175.50">candid:..</text></g><g><title>candid::types::CandidType::ty (7,958 instructions, 18.08%)</title><rect x="55.2271%" y="181" width="18.0818%" height="15" fill="rgb(224,54,52)" fg:x="24306" fg:w="7958"/><text x="55.5201%" y="191.50">candid::types::CandidTyp..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="73.3089%" y="181" width="0.1772%" height="15" fill="rgb(238,102,14)" fg:x="32264" fg:w="78"/><text x="73.6019%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.4862%" y="165" width="0.0273%" height="15" fill="rgb(243,160,52)" fg:x="32342" fg:w="12"/><text x="73.7791%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.5134%" y="149" width="0.1204%" height="15" fill="rgb(216,114,19)" fg:x="32354" fg:w="53"/><text x="73.8064%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="73.6339%" y="149" width="0.6089%" height="15" fill="rgb(244,166,37)" fg:x="32407" fg:w="268"/><text x="73.9268%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="74.2428%" y="149" width="0.3681%" height="15" fill="rgb(246,29,44)" fg:x="32675" fg:w="162"/><text x="74.5358%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.64%)</title><rect x="73.5134%" y="165" width="1.6360%" height="15" fill="rgb(215,56,53)" fg:x="32354" fg:w="720"/><text x="73.8064%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.92%)</title><rect x="75.1494%" y="165" width="0.9180%" height="15" fill="rgb(217,60,2)" fg:x="33074" fg:w="404"/><text x="75.4424%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="76.0673%" y="149" width="0.1840%" height="15" fill="rgb(207,26,24)" fg:x="33478" fg:w="81"/><text x="76.3603%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.0673%" y="165" width="0.2454%" height="15" fill="rgb(252,210,15)" fg:x="33478" fg:w="108"/><text x="76.3603%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,411 instructions, 3.21%)</title><rect x="73.4862%" y="181" width="3.2060%" height="15" fill="rgb(253,209,26)" fg:x="32342" fg:w="1411"/><text x="73.7791%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.6922%" y="133" width="0.1204%" height="15" fill="rgb(238,170,14)" fg:x="33753" fg:w="53"/><text x="76.9852%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="76.8126%" y="133" width="0.3499%" height="15" fill="rgb(216,178,15)" fg:x="33806" fg:w="154"/><text x="77.1056%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.1625%" y="117" width="0.1204%" height="15" fill="rgb(250,197,2)" fg:x="33960" fg:w="53"/><text x="77.4555%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="77.3420%" y="117" width="0.3499%" height="15" fill="rgb(212,70,42)" fg:x="34039" fg:w="154"/><text x="77.6350%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (259 instructions, 0.59%)</title><rect x="77.1625%" y="133" width="0.5885%" height="15" fill="rgb(227,213,9)" fg:x="33960" fg:w="259"/><text x="77.4555%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (548 instructions, 1.25%)</title><rect x="76.6922%" y="149" width="1.2451%" height="15" fill="rgb(245,99,25)" fg:x="33753" fg:w="548"/><text x="76.9852%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.4258%" y="133" width="0.1204%" height="15" fill="rgb(250,82,29)" fg:x="34516" fg:w="53"/><text x="78.7188%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="78.5463%" y="133" width="0.3499%" height="15" fill="rgb(241,226,54)" fg:x="34569" fg:w="154"/><text x="78.8392%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.8962%" y="117" width="0.1204%" height="15" fill="rgb(221,99,41)" fg:x="34723" fg:w="53"/><text x="79.1892%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="79.0757%" y="117" width="0.3499%" height="15" fill="rgb(213,90,21)" fg:x="34802" fg:w="154"/><text x="79.3687%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (259 instructions, 0.59%)</title><rect x="78.8962%" y="133" width="0.5885%" height="15" fill="rgb(205,208,24)" fg:x="34723" fg:w="259"/><text x="79.1892%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (548 instructions, 1.25%)</title><rect x="78.4258%" y="149" width="1.2451%" height="15" fill="rgb(246,31,12)" fg:x="34516" fg:w="548"/><text x="78.7188%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,526 instructions, 3.47%)</title><rect x="76.6922%" y="165" width="3.4673%" height="15" fill="rgb(213,154,6)" fg:x="33753" fg:w="1526"/><text x="76.9852%" y="175.50">cor..</text></g><g><title>candid::types::internal::env_id (1,829 instructions, 4.16%)</title><rect x="76.6922%" y="181" width="4.1558%" height="15" fill="rgb(222,163,29)" fg:x="33753" fg:w="1829"/><text x="76.9852%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="80.8480%" y="181" width="0.1022%" height="15" fill="rgb(227,201,8)" fg:x="35582" fg:w="45"/><text x="81.1409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="80.9502%" y="165" width="0.1772%" height="15" fill="rgb(233,9,32)" fg:x="35627" fg:w="78"/><text x="81.2432%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="81.1888%" y="165" width="0.2727%" height="15" fill="rgb(217,54,24)" fg:x="35732" fg:w="120"/><text x="81.4818%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.57%)</title><rect x="80.9502%" y="181" width="0.5726%" height="15" fill="rgb(235,192,0)" fg:x="35627" fg:w="252"/><text x="81.2432%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.30%)</title><rect x="81.5228%" y="117" width="0.2977%" height="15" fill="rgb(235,45,9)" fg:x="35879" fg:w="131"/><text x="81.8158%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (227 instructions, 0.52%)</title><rect x="81.5228%" y="133" width="0.5158%" height="15" fill="rgb(246,42,40)" fg:x="35879" fg:w="227"/><text x="81.8158%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (301 instructions, 0.68%)</title><rect x="81.5228%" y="149" width="0.6839%" height="15" fill="rgb(248,111,24)" fg:x="35879" fg:w="301"/><text x="81.8158%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="82.2067%" y="149" width="0.0250%" height="15" fill="rgb(249,65,22)" fg:x="36180" fg:w="11"/><text x="82.4997%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (364 instructions, 0.83%)</title><rect x="81.5228%" y="165" width="0.8271%" height="15" fill="rgb(238,111,51)" fg:x="35879" fg:w="364"/><text x="81.8158%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.3499%" y="149" width="0.1727%" height="15" fill="rgb(250,118,22)" fg:x="36243" fg:w="76"/><text x="82.6428%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="82.8543%" y="149" width="0.1613%" height="15" fill="rgb(234,84,26)" fg:x="36465" fg:w="71"/><text x="83.1473%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (439 instructions, 1.00%)</title><rect x="82.3499%" y="165" width="0.9975%" height="15" fill="rgb(243,172,12)" fg:x="36243" fg:w="439"/><text x="82.6428%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3473%" y="165" width="0.0250%" height="15" fill="rgb(236,150,49)" fg:x="36682" fg:w="11"/><text x="83.6403%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.3723%" y="165" width="0.0250%" height="15" fill="rgb(225,197,26)" fg:x="36693" fg:w="11"/><text x="83.6653%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.26%)</title><rect x="83.3973%" y="149" width="0.2568%" height="15" fill="rgb(214,17,42)" fg:x="36704" fg:w="113"/><text x="83.6903%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.6541%" y="149" width="0.2045%" height="15" fill="rgb(224,165,40)" fg:x="36817" fg:w="90"/><text x="83.9471%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="83.8586%" y="149" width="0.2499%" height="15" fill="rgb(246,100,4)" fg:x="36907" fg:w="110"/><text x="84.1515%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="84.1085%" y="149" width="0.1250%" height="15" fill="rgb(222,103,0)" fg:x="37017" fg:w="55"/><text x="84.4015%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (438 instructions, 1.00%)</title><rect x="83.3973%" y="165" width="0.9952%" height="15" fill="rgb(227,189,26)" fg:x="36704" fg:w="438"/><text x="83.6903%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.3925%" y="149" width="0.0636%" height="15" fill="rgb(214,202,17)" fg:x="37142" fg:w="28"/><text x="84.6855%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.4562%" y="149" width="0.0341%" height="15" fill="rgb(229,111,3)" fg:x="37170" fg:w="15"/><text x="84.7491%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.4902%" y="149" width="0.0341%" height="15" fill="rgb(229,172,15)" fg:x="37185" fg:w="15"/><text x="84.7832%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="84.5243%" y="133" width="0.1613%" height="15" fill="rgb(230,224,35)" fg:x="37200" fg:w="71"/><text x="84.8173%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.6856%" y="133" width="0.1477%" height="15" fill="rgb(251,141,6)" fg:x="37271" fg:w="65"/><text x="84.9786%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="84.8333%" y="133" width="0.1477%" height="15" fill="rgb(225,208,6)" fg:x="37336" fg:w="65"/><text x="85.1263%" y="143.50"></text></g><g><title>binread::BinRead::read (245 instructions, 0.56%)</title><rect x="84.5243%" y="149" width="0.5567%" height="15" fill="rgb(246,181,16)" fg:x="37200" fg:w="245"/><text x="84.8173%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.12%)</title><rect x="85.0810%" y="149" width="0.1250%" height="15" fill="rgb(227,129,36)" fg:x="37445" fg:w="55"/><text x="85.3740%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.2060%" y="149" width="0.1727%" height="15" fill="rgb(248,117,24)" fg:x="37500" fg:w="76"/><text x="85.4989%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.24%)</title><rect x="85.3787%" y="149" width="0.2386%" height="15" fill="rgb(214,185,35)" fg:x="37576" fg:w="105"/><text x="85.6716%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.33%)</title><rect x="85.6172%" y="149" width="0.3272%" height="15" fill="rgb(236,150,34)" fg:x="37681" fg:w="144"/><text x="85.9102%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (817 instructions, 1.86%)</title><rect x="84.3925%" y="165" width="1.8564%" height="15" fill="rgb(243,228,27)" fg:x="37142" fg:w="817"/><text x="84.6855%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2489%" y="165" width="0.0250%" height="15" fill="rgb(245,77,44)" fg:x="37959" fg:w="11"/><text x="86.5419%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2739%" y="165" width="0.0250%" height="15" fill="rgb(235,214,42)" fg:x="37970" fg:w="11"/><text x="86.5669%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="86.2989%" y="149" width="0.1727%" height="15" fill="rgb(221,74,3)" fg:x="37981" fg:w="76"/><text x="86.5918%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.4716%" y="149" width="0.2045%" height="15" fill="rgb(206,121,29)" fg:x="38057" fg:w="90"/><text x="86.7645%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.6761%" y="149" width="0.0364%" height="15" fill="rgb(249,131,53)" fg:x="38147" fg:w="16"/><text x="86.9690%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="86.7124%" y="149" width="0.2499%" height="15" fill="rgb(236,170,29)" fg:x="38163" fg:w="110"/><text x="87.0054%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="86.9624%" y="149" width="0.1250%" height="15" fill="rgb(247,96,15)" fg:x="38273" fg:w="55"/><text x="87.2553%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 0.96%)</title><rect x="86.2989%" y="165" width="0.9589%" height="15" fill="rgb(211,210,7)" fg:x="37981" fg:w="422"/><text x="86.5918%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.2577%" y="165" width="0.0636%" height="15" fill="rgb(240,88,50)" fg:x="38403" fg:w="28"/><text x="87.5507%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3214%" y="165" width="0.0341%" height="15" fill="rgb(209,229,26)" fg:x="38431" fg:w="15"/><text x="87.6143%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3554%" y="165" width="0.0341%" height="15" fill="rgb(210,68,23)" fg:x="38446" fg:w="15"/><text x="87.6484%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.3895%" y="149" width="0.0114%" height="15" fill="rgb(229,180,13)" fg:x="38461" fg:w="5"/><text x="87.6825%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.4009%" y="149" width="0.1840%" height="15" fill="rgb(236,53,44)" fg:x="38466" fg:w="81"/><text x="87.6938%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.5849%" y="149" width="0.0114%" height="15" fill="rgb(244,214,29)" fg:x="38547" fg:w="5"/><text x="87.8779%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="87.5963%" y="149" width="0.2863%" height="15" fill="rgb(220,75,29)" fg:x="38552" fg:w="126"/><text x="87.8893%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.56%)</title><rect x="87.3895%" y="165" width="0.5635%" height="15" fill="rgb(214,183,37)" fg:x="38461" fg:w="248"/><text x="87.6825%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,830 instructions, 8.70%)</title><rect x="81.5228%" y="181" width="8.7024%" height="15" fill="rgb(239,117,29)" fg:x="35879" fg:w="3830"/><text x="81.8158%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.2252%" y="165" width="0.1840%" height="15" fill="rgb(237,171,35)" fg:x="39709" fg:w="81"/><text x="90.5181%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.4092%" y="165" width="0.1840%" height="15" fill="rgb(229,178,53)" fg:x="39790" fg:w="81"/><text x="90.7022%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.46%)</title><rect x="90.2252%" y="181" width="0.4567%" height="15" fill="rgb(210,102,19)" fg:x="39709" fg:w="201"/><text x="90.5181%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.6819%" y="181" width="0.0250%" height="15" fill="rgb(235,127,22)" fg:x="39910" fg:w="11"/><text x="90.9748%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7069%" y="181" width="0.0250%" height="15" fill="rgb(244,31,31)" fg:x="39921" fg:w="11"/><text x="90.9998%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.93%)</title><rect x="90.7319%" y="181" width="0.9316%" height="15" fill="rgb(231,43,21)" fg:x="39932" fg:w="410"/><text x="91.0248%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.6634%" y="133" width="0.1840%" height="15" fill="rgb(217,131,35)" fg:x="40342" fg:w="81"/><text x="91.9564%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.8475%" y="117" width="0.1840%" height="15" fill="rgb(221,149,4)" fg:x="40423" fg:w="81"/><text x="92.1405%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.37%)</title><rect x="92.0315%" y="101" width="0.3749%" height="15" fill="rgb(232,170,28)" fg:x="40504" fg:w="165"/><text x="92.3245%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.44%)</title><rect x="92.0315%" y="117" width="0.4363%" height="15" fill="rgb(238,56,10)" fg:x="40504" fg:w="192"/><text x="92.3245%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="92.4678%" y="117" width="0.1840%" height="15" fill="rgb(235,196,14)" fg:x="40696" fg:w="81"/><text x="92.7608%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.6518%" y="117" width="0.0250%" height="15" fill="rgb(216,45,48)" fg:x="40777" fg:w="11"/><text x="92.9448%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="92.6768%" y="117" width="0.3817%" height="15" fill="rgb(238,213,17)" fg:x="40788" fg:w="168"/><text x="92.9698%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="93.0586%" y="117" width="0.1772%" height="15" fill="rgb(212,13,2)" fg:x="40956" fg:w="78"/><text x="93.3515%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.68%)</title><rect x="91.8475%" y="133" width="1.6791%" height="15" fill="rgb(240,114,20)" fg:x="40423" fg:w="739"/><text x="92.1405%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="93.5266%" y="117" width="0.1431%" height="15" fill="rgb(228,41,40)" fg:x="41162" fg:w="63"/><text x="93.8196%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.47%)</title><rect x="93.5266%" y="133" width="0.4658%" height="15" fill="rgb(244,132,35)" fg:x="41162" fg:w="205"/><text x="93.8196%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,122 instructions, 2.55%)</title><rect x="91.6634%" y="149" width="2.5494%" height="15" fill="rgb(253,189,4)" fg:x="40342" fg:w="1122"/><text x="91.9564%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.2128%" y="149" width="0.2727%" height="15" fill="rgb(224,37,19)" fg:x="41464" fg:w="120"/><text x="94.5058%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="94.4855%" y="117" width="0.1250%" height="15" fill="rgb(235,223,18)" fg:x="41584" fg:w="55"/><text x="94.7784%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="94.6104%" y="117" width="0.1431%" height="15" fill="rgb(235,163,25)" fg:x="41639" fg:w="63"/><text x="94.9034%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.55%)</title><rect x="94.4855%" y="133" width="0.5544%" height="15" fill="rgb(217,145,28)" fg:x="41584" fg:w="244"/><text x="94.7784%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (271 instructions, 0.62%)</title><rect x="94.4855%" y="149" width="0.6158%" height="15" fill="rgb(223,223,32)" fg:x="41584" fg:w="271"/><text x="94.7784%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.1012%" y="149" width="0.0250%" height="15" fill="rgb(227,189,39)" fg:x="41855" fg:w="11"/><text x="95.3942%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,564 instructions, 3.55%)</title><rect x="91.6634%" y="165" width="3.5537%" height="15" fill="rgb(248,10,22)" fg:x="40342" fg:w="1564"/><text x="91.9564%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,601 instructions, 3.64%)</title><rect x="91.6634%" y="181" width="3.6377%" height="15" fill="rgb(248,46,39)" fg:x="40342" fg:w="1601"/><text x="91.9564%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="95.3012%" y="181" width="0.2795%" height="15" fill="rgb(248,113,48)" fg:x="41943" fg:w="123"/><text x="95.5941%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="95.5807%" y="181" width="0.1250%" height="15" fill="rgb(245,16,25)" fg:x="42066" fg:w="55"/><text x="95.8736%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="95.7056%" y="149" width="0.0273%" height="15" fill="rgb(249,152,16)" fg:x="42121" fg:w="12"/><text x="95.9986%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7329%" y="149" width="0.0250%" height="15" fill="rgb(250,16,1)" fg:x="42133" fg:w="11"/><text x="96.0259%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7579%" y="149" width="0.0250%" height="15" fill="rgb(249,138,3)" fg:x="42144" fg:w="11"/><text x="96.0508%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7829%" y="149" width="0.0250%" height="15" fill="rgb(227,71,41)" fg:x="42155" fg:w="11"/><text x="96.0758%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="95.8079%" y="149" width="0.1909%" height="15" fill="rgb(209,184,23)" fg:x="42166" fg:w="84"/><text x="96.1008%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (339 instructions, 0.77%)</title><rect x="95.7056%" y="165" width="0.7703%" height="15" fill="rgb(223,215,31)" fg:x="42121" fg:w="339"/><text x="95.9986%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="96.4759%" y="149" width="0.0727%" height="15" fill="rgb(210,146,28)" fg:x="42460" fg:w="32"/><text x="96.7688%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="96.5486%" y="101" width="0.1727%" height="15" fill="rgb(209,183,41)" fg:x="42492" fg:w="76"/><text x="96.8416%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="96.5486%" y="117" width="0.2499%" height="15" fill="rgb(209,224,45)" fg:x="42492" fg:w="110"/><text x="96.8416%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="96.5486%" y="133" width="0.4022%" height="15" fill="rgb(224,209,51)" fg:x="42492" fg:w="177"/><text x="96.8416%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9508%" y="133" width="0.0250%" height="15" fill="rgb(223,17,39)" fg:x="42669" fg:w="11"/><text x="97.2437%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9758%" y="133" width="0.0250%" height="15" fill="rgb(234,204,37)" fg:x="42680" fg:w="11"/><text x="97.2687%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 0.82%)</title><rect x="96.5486%" y="149" width="0.8202%" height="15" fill="rgb(236,120,5)" fg:x="42492" fg:w="361"/><text x="96.8416%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.3688%" y="149" width="0.0682%" height="15" fill="rgb(248,97,27)" fg:x="42853" fg:w="30"/><text x="97.6618%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.4370%" y="149" width="0.0114%" height="15" fill="rgb(240,66,17)" fg:x="42883" fg:w="5"/><text x="97.7300%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (496 instructions, 1.13%)</title><rect x="96.4759%" y="165" width="1.1270%" height="15" fill="rgb(210,79,3)" fg:x="42460" fg:w="496"/><text x="96.7688%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.6029%" y="165" width="0.0114%" height="15" fill="rgb(214,176,27)" fg:x="42956" fg:w="5"/><text x="97.8958%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="97.6142%" y="165" width="0.1250%" height="15" fill="rgb(235,185,3)" fg:x="42961" fg:w="55"/><text x="97.9072%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (969 instructions, 2.20%)</title><rect x="95.7056%" y="181" width="2.2017%" height="15" fill="rgb(227,24,12)" fg:x="42121" fg:w="969"/><text x="95.9986%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (43,524 instructions, 98.89%)</title><rect x="0.3931%" y="197" width="98.8935%" height="15" fill="rgb(252,169,48)" fg:x="173" fg:w="43524"/><text x="0.6861%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2865%" y="197" width="0.0273%" height="15" fill="rgb(212,65,1)" fg:x="43697" fg:w="12"/><text x="99.5795%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3138%" y="197" width="0.1840%" height="15" fill="rgb(242,39,24)" fg:x="43709" fg:w="81"/><text x="99.6068%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="99.4979%" y="197" width="0.2795%" height="15" fill="rgb(249,32,23)" fg:x="43790" fg:w="123"/><text x="99.7908%" y="207.50"></text></g><g><title>all (44,011 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(251,195,23)" fg:x="0" fg:w="44011"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (44,011 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(236,174,8)" fg:x="0" fg:w="44011"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>