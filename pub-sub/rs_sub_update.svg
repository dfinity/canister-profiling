<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Update subscriber (callback from pub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="44068"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="197" width="0.0431%" height="15" fill="rgb(230,187,49)" fg:x="0" fg:w="19"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="0.0431%" y="197" width="0.1770%" height="15" fill="rgb(209,44,26)" fg:x="19" fg:w="78"/><text x="0.3361%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2201%" y="197" width="0.1725%" height="15" fill="rgb(244,0,6)" fg:x="97" fg:w="76"/><text x="0.5131%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3926%" y="181" width="0.1725%" height="15" fill="rgb(248,18,21)" fg:x="173" fg:w="76"/><text x="0.6855%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5650%" y="165" width="0.1566%" height="15" fill="rgb(245,180,19)" fg:x="249" fg:w="69"/><text x="0.8580%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="0.7216%" y="165" width="0.9213%" height="15" fill="rgb(252,118,36)" fg:x="318" fg:w="406"/><text x="1.0146%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="1.6429%" y="165" width="0.1861%" height="15" fill="rgb(210,224,19)" fg:x="724" fg:w="82"/><text x="1.9359%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8290%" y="165" width="0.1225%" height="15" fill="rgb(218,30,24)" fg:x="806" fg:w="54"/><text x="2.1220%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9515%" y="165" width="0.1225%" height="15" fill="rgb(219,75,50)" fg:x="860" fg:w="54"/><text x="2.2445%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0741%" y="165" width="0.1225%" height="15" fill="rgb(234,72,50)" fg:x="914" fg:w="54"/><text x="2.3670%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1966%" y="165" width="0.1225%" height="15" fill="rgb(219,100,48)" fg:x="968" fg:w="54"/><text x="2.4896%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.3191%" y="165" width="0.1566%" height="15" fill="rgb(253,5,41)" fg:x="1022" fg:w="69"/><text x="2.6121%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4757%" y="165" width="0.1475%" height="15" fill="rgb(247,181,11)" fg:x="1091" fg:w="65"/><text x="2.7687%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="2.6232%" y="165" width="0.9213%" height="15" fill="rgb(222,223,25)" fg:x="1156" fg:w="406"/><text x="2.9162%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5445%" y="165" width="0.0363%" height="15" fill="rgb(214,198,28)" fg:x="1562" fg:w="16"/><text x="3.8375%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="3.5808%" y="149" width="0.1611%" height="15" fill="rgb(230,46,43)" fg:x="1578" fg:w="71"/><text x="3.8738%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7419%" y="117" width="0.1362%" height="15" fill="rgb(233,65,53)" fg:x="1649" fg:w="60"/><text x="4.0349%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7419%" y="133" width="0.1929%" height="15" fill="rgb(221,121,27)" fg:x="1649" fg:w="85"/><text x="4.0349%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9348%" y="85" width="0.0204%" height="15" fill="rgb(247,70,47)" fg:x="1734" fg:w="9"/><text x="4.2278%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9553%" y="69" width="0.0681%" height="15" fill="rgb(228,85,35)" fg:x="1743" fg:w="30"/><text x="4.2482%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9553%" y="85" width="0.1248%" height="15" fill="rgb(209,50,18)" fg:x="1743" fg:w="55"/><text x="4.2482%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="3.9348%" y="101" width="0.2678%" height="15" fill="rgb(250,19,35)" fg:x="1734" fg:w="118"/><text x="4.2278%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="3.9348%" y="117" width="0.3880%" height="15" fill="rgb(253,107,29)" fg:x="1734" fg:w="171"/><text x="4.2278%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="3.9348%" y="133" width="0.3994%" height="15" fill="rgb(252,179,29)" fg:x="1734" fg:w="176"/><text x="4.2278%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="3.7419%" y="149" width="0.8441%" height="15" fill="rgb(238,194,6)" fg:x="1649" fg:w="372"/><text x="4.0349%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (584 instructions, 1.33%)</title><rect x="3.5808%" y="165" width="1.3252%" height="15" fill="rgb(238,164,29)" fg:x="1578" fg:w="584"/><text x="3.8738%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="4.9061%" y="165" width="0.1861%" height="15" fill="rgb(224,25,9)" fg:x="2162" fg:w="82"/><text x="5.1990%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="5.0921%" y="165" width="0.1838%" height="15" fill="rgb(244,153,23)" fg:x="2244" fg:w="81"/><text x="5.3851%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="5.2759%" y="149" width="0.1225%" height="15" fill="rgb(212,203,14)" fg:x="2325" fg:w="54"/><text x="5.5689%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="5.3985%" y="149" width="0.1770%" height="15" fill="rgb(220,164,20)" fg:x="2379" fg:w="78"/><text x="5.6914%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="5.5755%" y="133" width="0.2678%" height="15" fill="rgb(222,203,48)" fg:x="2457" fg:w="118"/><text x="5.8684%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="5.8432%" y="101" width="0.2723%" height="15" fill="rgb(215,159,22)" fg:x="2575" fg:w="120"/><text x="6.1362%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="5.8432%" y="117" width="0.3290%" height="15" fill="rgb(216,183,47)" fg:x="2575" fg:w="145"/><text x="6.1362%" y="127.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="6.1723%" y="37" width="0.2292%" height="15" fill="rgb(229,195,25)" fg:x="2720" fg:w="101"/><text x="6.4652%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="6.1723%" y="53" width="0.3086%" height="15" fill="rgb(224,132,51)" fg:x="2720" fg:w="136"/><text x="6.4652%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 instructions, 0.48%)</title><rect x="6.1723%" y="69" width="0.4833%" height="15" fill="rgb(240,63,7)" fg:x="2720" fg:w="213"/><text x="6.4652%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="6.6556%" y="69" width="0.4493%" height="15" fill="rgb(249,182,41)" fg:x="2933" fg:w="198"/><text x="6.9486%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (443 instructions, 1.01%)</title><rect x="6.1723%" y="85" width="1.0053%" height="15" fill="rgb(243,47,26)" fg:x="2720" fg:w="443"/><text x="6.4652%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.1775%" y="53" width="0.0204%" height="15" fill="rgb(233,48,2)" fg:x="3163" fg:w="9"/><text x="7.4705%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.1980%" y="37" width="0.0681%" height="15" fill="rgb(244,165,34)" fg:x="3172" fg:w="30"/><text x="7.4909%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="7.1980%" y="53" width="0.1248%" height="15" fill="rgb(207,89,7)" fg:x="3172" fg:w="55"/><text x="7.4909%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="7.1775%" y="69" width="0.2678%" height="15" fill="rgb(244,117,36)" fg:x="3163" fg:w="118"/><text x="7.4705%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.42%)</title><rect x="7.1775%" y="85" width="0.4175%" height="15" fill="rgb(226,144,34)" fg:x="3163" fg:w="184"/><text x="7.4705%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="7.5951%" y="69" width="0.1021%" height="15" fill="rgb(213,23,19)" fg:x="3347" fg:w="45"/><text x="7.8880%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="7.5951%" y="85" width="0.1588%" height="15" fill="rgb(217,75,12)" fg:x="3347" fg:w="70"/><text x="7.8880%" y="95.50"></text></g><g><title>core::fmt::write (825 instructions, 1.87%)</title><rect x="6.1723%" y="101" width="1.8721%" height="15" fill="rgb(224,159,17)" fg:x="2720" fg:w="825"/><text x="6.4652%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (880 instructions, 2.00%)</title><rect x="6.1723%" y="117" width="1.9969%" height="15" fill="rgb(217,118,1)" fg:x="2720" fg:w="880"/><text x="6.4652%" y="127.50"></text></g><g><title>core::fmt::write (1,136 instructions, 2.58%)</title><rect x="5.8432%" y="133" width="2.5778%" height="15" fill="rgb(232,180,48)" fg:x="2575" fg:w="1136"/><text x="6.1362%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,395 instructions, 3.17%)</title><rect x="5.5755%" y="149" width="3.1656%" height="15" fill="rgb(230,27,33)" fg:x="2457" fg:w="1395"/><text x="5.8684%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="8.7410%" y="149" width="0.1588%" height="15" fill="rgb(205,31,21)" fg:x="3852" fg:w="70"/><text x="9.0340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="8.8999%" y="149" width="0.1248%" height="15" fill="rgb(253,59,4)" fg:x="3922" fg:w="55"/><text x="9.1929%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.0247%" y="149" width="0.1430%" height="15" fill="rgb(224,201,9)" fg:x="3977" fg:w="63"/><text x="9.3177%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="9.1676%" y="117" width="0.1725%" height="15" fill="rgb(229,206,30)" fg:x="4040" fg:w="76"/><text x="9.4606%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="9.1676%" y="133" width="0.2496%" height="15" fill="rgb(212,67,47)" fg:x="4040" fg:w="110"/><text x="9.4606%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="9.1676%" y="149" width="0.4039%" height="15" fill="rgb(211,96,50)" fg:x="4040" fg:w="178"/><text x="9.4606%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="9.5716%" y="149" width="0.1225%" height="15" fill="rgb(252,114,18)" fg:x="4218" fg:w="54"/><text x="9.8645%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="9.6941%" y="149" width="0.1611%" height="15" fill="rgb(223,58,37)" fg:x="4272" fg:w="71"/><text x="9.9871%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="9.8552%" y="133" width="0.1861%" height="15" fill="rgb(237,70,4)" fg:x="4343" fg:w="82"/><text x="10.1482%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.27%)</title><rect x="10.0413%" y="101" width="0.2723%" height="15" fill="rgb(244,85,46)" fg:x="4425" fg:w="120"/><text x="10.3343%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.33%)</title><rect x="10.0413%" y="117" width="0.3290%" height="15" fill="rgb(223,39,52)" fg:x="4425" fg:w="145"/><text x="10.3343%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.18%)</title><rect x="10.3703%" y="37" width="0.1815%" height="15" fill="rgb(218,200,14)" fg:x="4570" fg:w="80"/><text x="10.6633%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.26%)</title><rect x="10.3703%" y="53" width="0.2610%" height="15" fill="rgb(208,171,16)" fg:x="4570" fg:w="115"/><text x="10.6633%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (192 instructions, 0.44%)</title><rect x="10.3703%" y="69" width="0.4357%" height="15" fill="rgb(234,200,18)" fg:x="4570" fg:w="192"/><text x="10.6633%" y="79.50"></text></g><g><title>memcpy (198 instructions, 0.45%)</title><rect x="10.8060%" y="69" width="0.4493%" height="15" fill="rgb(228,45,11)" fg:x="4762" fg:w="198"/><text x="11.0990%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (422 instructions, 0.96%)</title><rect x="10.3703%" y="85" width="0.9576%" height="15" fill="rgb(237,182,11)" fg:x="4570" fg:w="422"/><text x="10.6633%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="11.3279%" y="53" width="0.0204%" height="15" fill="rgb(241,175,49)" fg:x="4992" fg:w="9"/><text x="11.6209%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="11.3484%" y="37" width="0.0681%" height="15" fill="rgb(247,38,35)" fg:x="5001" fg:w="30"/><text x="11.6413%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="11.3484%" y="53" width="0.1248%" height="15" fill="rgb(228,39,49)" fg:x="5001" fg:w="55"/><text x="11.6413%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="11.3279%" y="69" width="0.2678%" height="15" fill="rgb(226,101,26)" fg:x="4992" fg:w="118"/><text x="11.6209%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.42%)</title><rect x="11.3279%" y="85" width="0.4175%" height="15" fill="rgb(206,141,19)" fg:x="4992" fg:w="184"/><text x="11.6209%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="11.7455%" y="69" width="0.1021%" height="15" fill="rgb(211,200,13)" fg:x="5176" fg:w="45"/><text x="12.0385%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.16%)</title><rect x="11.7455%" y="85" width="0.1588%" height="15" fill="rgb(241,121,6)" fg:x="5176" fg:w="70"/><text x="12.0385%" y="95.50"></text></g><g><title>core::fmt::write (804 instructions, 1.82%)</title><rect x="10.3703%" y="101" width="1.8245%" height="15" fill="rgb(234,221,29)" fg:x="4570" fg:w="804"/><text x="10.6633%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (859 instructions, 1.95%)</title><rect x="10.3703%" y="117" width="1.9493%" height="15" fill="rgb(229,136,5)" fg:x="4570" fg:w="859"/><text x="10.6633%" y="127.50"></text></g><g><title>core::fmt::write (1,115 instructions, 2.53%)</title><rect x="10.0413%" y="133" width="2.5302%" height="15" fill="rgb(238,36,11)" fg:x="4425" fg:w="1115"/><text x="10.3343%" y="143.50">c..</text></g><g><title>alloc::fmt::format::format_inner (1,338 instructions, 3.04%)</title><rect x="9.8552%" y="149" width="3.0362%" height="15" fill="rgb(251,55,41)" fg:x="4343" fg:w="1338"/><text x="10.1482%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.16%)</title><rect x="12.8914%" y="149" width="0.1588%" height="15" fill="rgb(242,34,40)" fg:x="5681" fg:w="70"/><text x="13.1844%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="13.0503%" y="149" width="0.1271%" height="15" fill="rgb(215,42,17)" fg:x="5751" fg:w="56"/><text x="13.3433%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="13.1774%" y="149" width="0.1430%" height="15" fill="rgb(207,44,46)" fg:x="5807" fg:w="63"/><text x="13.4703%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="13.3203%" y="149" width="0.1225%" height="15" fill="rgb(211,206,28)" fg:x="5870" fg:w="54"/><text x="13.6133%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="13.4429%" y="133" width="0.1566%" height="15" fill="rgb(237,167,16)" fg:x="5924" fg:w="69"/><text x="13.7358%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="13.5994%" y="133" width="0.1475%" height="15" fill="rgb(233,66,6)" fg:x="5993" fg:w="65"/><text x="13.8924%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="13.7469%" y="133" width="0.9213%" height="15" fill="rgb(246,123,29)" fg:x="6058" fg:w="406"/><text x="14.0399%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="14.6682%" y="133" width="0.0363%" height="15" fill="rgb(209,62,40)" fg:x="6464" fg:w="16"/><text x="14.9612%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="14.7045%" y="117" width="0.1861%" height="15" fill="rgb(218,4,25)" fg:x="6480" fg:w="82"/><text x="14.9975%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="14.8906%" y="85" width="0.1362%" height="15" fill="rgb(253,91,49)" fg:x="6562" fg:w="60"/><text x="15.1836%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="14.8906%" y="101" width="0.1929%" height="15" fill="rgb(228,155,29)" fg:x="6562" fg:w="85"/><text x="15.1836%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="15.0835%" y="53" width="0.0204%" height="15" fill="rgb(243,57,37)" fg:x="6647" fg:w="9"/><text x="15.3765%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="15.1039%" y="37" width="0.0681%" height="15" fill="rgb(244,167,17)" fg:x="6656" fg:w="30"/><text x="15.3969%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="15.1039%" y="53" width="0.1248%" height="15" fill="rgb(207,181,38)" fg:x="6656" fg:w="55"/><text x="15.3969%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="15.0835%" y="69" width="0.2678%" height="15" fill="rgb(211,8,23)" fg:x="6647" fg:w="118"/><text x="15.3765%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="15.0835%" y="85" width="0.3880%" height="15" fill="rgb(235,11,44)" fg:x="6647" fg:w="171"/><text x="15.3765%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="15.0835%" y="101" width="0.3994%" height="15" fill="rgb(248,18,52)" fg:x="6647" fg:w="176"/><text x="15.3765%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="14.8906%" y="117" width="0.8441%" height="15" fill="rgb(208,4,7)" fg:x="6562" fg:w="372"/><text x="15.1836%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.35%)</title><rect x="14.7045%" y="133" width="1.3502%" height="15" fill="rgb(240,17,39)" fg:x="6480" fg:w="595"/><text x="14.9975%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="16.0547%" y="133" width="0.1861%" height="15" fill="rgb(207,170,3)" fg:x="7075" fg:w="82"/><text x="16.3477%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="16.2408%" y="133" width="0.1271%" height="15" fill="rgb(236,100,52)" fg:x="7157" fg:w="56"/><text x="16.5338%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="16.3679%" y="117" width="0.1566%" height="15" fill="rgb(246,78,51)" fg:x="7213" fg:w="69"/><text x="16.6609%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.63%)</title><rect x="16.5245%" y="117" width="0.6286%" height="15" fill="rgb(211,17,15)" fg:x="7282" fg:w="277"/><text x="16.8174%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="17.1530%" y="101" width="0.1566%" height="15" fill="rgb(209,59,46)" fg:x="7559" fg:w="69"/><text x="17.4460%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="17.3096%" y="101" width="0.2065%" height="15" fill="rgb(210,92,25)" fg:x="7628" fg:w="91"/><text x="17.6026%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.5161%" y="101" width="0.1430%" height="15" fill="rgb(238,174,52)" fg:x="7719" fg:w="63"/><text x="17.8091%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="17.1530%" y="117" width="0.6399%" height="15" fill="rgb(230,73,7)" fg:x="7559" fg:w="282"/><text x="17.4460%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="17.7930%" y="117" width="0.1430%" height="15" fill="rgb(243,124,40)" fg:x="7841" fg:w="63"/><text x="18.0859%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.84%)</title><rect x="16.3679%" y="133" width="1.8449%" height="15" fill="rgb(244,170,11)" fg:x="7213" fg:w="813"/><text x="16.6609%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="18.2128%" y="133" width="0.1861%" height="15" fill="rgb(207,114,54)" fg:x="8026" fg:w="82"/><text x="18.5057%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="18.3988%" y="117" width="0.1566%" height="15" fill="rgb(205,42,20)" fg:x="8108" fg:w="69"/><text x="18.6918%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.63%)</title><rect x="18.5554%" y="117" width="0.6286%" height="15" fill="rgb(230,30,28)" fg:x="8177" fg:w="277"/><text x="18.8484%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="19.1840%" y="101" width="0.1566%" height="15" fill="rgb(205,73,54)" fg:x="8454" fg:w="69"/><text x="19.4770%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="19.3406%" y="101" width="0.2065%" height="15" fill="rgb(254,227,23)" fg:x="8523" fg:w="91"/><text x="19.6335%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.5471%" y="101" width="0.1430%" height="15" fill="rgb(228,202,34)" fg:x="8614" fg:w="63"/><text x="19.8400%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="19.1840%" y="117" width="0.6399%" height="15" fill="rgb(222,225,37)" fg:x="8454" fg:w="282"/><text x="19.4770%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="19.8239%" y="117" width="0.1430%" height="15" fill="rgb(221,14,54)" fg:x="8736" fg:w="63"/><text x="20.1169%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 1.84%)</title><rect x="18.3988%" y="133" width="1.8449%" height="15" fill="rgb(254,102,2)" fg:x="8108" fg:w="813"/><text x="18.6918%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.05%)</title><rect x="20.2437%" y="133" width="0.0477%" height="15" fill="rgb(232,104,17)" fg:x="8921" fg:w="21"/><text x="20.5367%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="20.2914%" y="133" width="0.1430%" height="15" fill="rgb(250,220,14)" fg:x="8942" fg:w="63"/><text x="20.5843%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (3,418 instructions, 7.76%)</title><rect x="13.4429%" y="149" width="7.7562%" height="15" fill="rgb(241,158,9)" fg:x="5924" fg:w="3418"/><text x="13.7358%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="21.1991%" y="133" width="0.1838%" height="15" fill="rgb(246,9,43)" fg:x="9342" fg:w="81"/><text x="21.4920%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="21.4328%" y="133" width="0.1770%" height="15" fill="rgb(206,73,33)" fg:x="9445" fg:w="78"/><text x="21.7258%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.46%)</title><rect x="21.1991%" y="149" width="0.4607%" height="15" fill="rgb(222,79,8)" fg:x="9342" fg:w="203"/><text x="21.4920%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="21.6597%" y="149" width="0.2723%" height="15" fill="rgb(234,8,54)" fg:x="9545" fg:w="120"/><text x="21.9527%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,985 instructions, 18.12%)</title><rect x="5.2759%" y="165" width="18.1197%" height="15" fill="rgb(209,134,38)" fg:x="2325" fg:w="7985"/><text x="5.5689%" y="175.50">&lt;candid::binary_parser::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.14%)</title><rect x="23.3957%" y="165" width="0.1430%" height="15" fill="rgb(230,127,29)" fg:x="10310" fg:w="63"/><text x="23.6886%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="23.5386%" y="165" width="0.1430%" height="15" fill="rgb(242,44,41)" fg:x="10373" fg:w="63"/><text x="23.8316%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="23.6816%" y="165" width="0.1475%" height="15" fill="rgb(222,56,43)" fg:x="10436" fg:w="65"/><text x="23.9746%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="23.8291%" y="149" width="0.9213%" height="15" fill="rgb(238,39,47)" fg:x="10501" fg:w="406"/><text x="24.1221%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="24.7504%" y="149" width="0.0363%" height="15" fill="rgb(226,79,43)" fg:x="10907" fg:w="16"/><text x="25.0434%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="24.7867%" y="133" width="0.1770%" height="15" fill="rgb(242,105,53)" fg:x="10923" fg:w="78"/><text x="25.0797%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="24.9637%" y="101" width="0.1362%" height="15" fill="rgb(251,132,46)" fg:x="11001" fg:w="60"/><text x="25.2567%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="24.9637%" y="117" width="0.1929%" height="15" fill="rgb(231,77,14)" fg:x="11001" fg:w="85"/><text x="25.2567%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="25.1566%" y="69" width="0.0204%" height="15" fill="rgb(240,135,9)" fg:x="11086" fg:w="9"/><text x="25.4495%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="25.1770%" y="53" width="0.0681%" height="15" fill="rgb(248,109,14)" fg:x="11095" fg:w="30"/><text x="25.4700%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="25.1770%" y="69" width="0.1248%" height="15" fill="rgb(227,146,52)" fg:x="11095" fg:w="55"/><text x="25.4700%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="25.1566%" y="85" width="0.2678%" height="15" fill="rgb(232,54,3)" fg:x="11086" fg:w="118"/><text x="25.4495%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="25.1566%" y="101" width="0.3880%" height="15" fill="rgb(229,201,43)" fg:x="11086" fg:w="171"/><text x="25.4495%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="25.1566%" y="117" width="0.3994%" height="15" fill="rgb(252,161,33)" fg:x="11086" fg:w="176"/><text x="25.4495%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="24.9637%" y="133" width="0.8441%" height="15" fill="rgb(226,146,40)" fg:x="11001" fg:w="372"/><text x="25.2567%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (591 instructions, 1.34%)</title><rect x="24.7867%" y="149" width="1.3411%" height="15" fill="rgb(219,47,25)" fg:x="10923" fg:w="591"/><text x="25.0797%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.19%)</title><rect x="26.1278%" y="149" width="0.1861%" height="15" fill="rgb(250,135,13)" fg:x="11514" fg:w="82"/><text x="26.4208%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="26.3139%" y="149" width="0.1838%" height="15" fill="rgb(219,229,18)" fg:x="11596" fg:w="81"/><text x="26.6068%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="26.4977%" y="133" width="0.1566%" height="15" fill="rgb(217,152,27)" fg:x="11677" fg:w="69"/><text x="26.7907%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="26.6543%" y="133" width="0.2065%" height="15" fill="rgb(225,71,47)" fg:x="11746" fg:w="91"/><text x="26.9472%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="26.8608%" y="133" width="0.1430%" height="15" fill="rgb(220,139,14)" fg:x="11837" fg:w="63"/><text x="27.1537%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="26.4977%" y="149" width="0.6399%" height="15" fill="rgb(247,54,32)" fg:x="11677" fg:w="282"/><text x="26.7907%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="27.1376%" y="149" width="0.2678%" height="15" fill="rgb(252,131,39)" fg:x="11959" fg:w="118"/><text x="27.4306%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,779 instructions, 4.04%)</title><rect x="23.8291%" y="165" width="4.0369%" height="15" fill="rgb(210,108,39)" fg:x="10501" fg:w="1779"/><text x="24.1221%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="27.8660%" y="165" width="0.1430%" height="15" fill="rgb(205,23,29)" fg:x="12280" fg:w="63"/><text x="28.1590%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="28.0090%" y="165" width="0.1725%" height="15" fill="rgb(246,139,46)" fg:x="12343" fg:w="76"/><text x="28.3020%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="28.1814%" y="149" width="0.1725%" height="15" fill="rgb(250,81,26)" fg:x="12419" fg:w="76"/><text x="28.4744%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="28.1814%" y="165" width="0.3608%" height="15" fill="rgb(214,104,7)" fg:x="12419" fg:w="159"/><text x="28.4744%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.5423%" y="133" width="0.1861%" height="15" fill="rgb(233,189,8)" fg:x="12578" fg:w="82"/><text x="28.8352%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="28.5423%" y="149" width="0.2632%" height="15" fill="rgb(228,141,17)" fg:x="12578" fg:w="116"/><text x="28.8352%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="28.5423%" y="165" width="0.4175%" height="15" fill="rgb(247,157,1)" fg:x="12578" fg:w="184"/><text x="28.8352%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="28.9598%" y="165" width="0.1861%" height="15" fill="rgb(249,225,5)" fg:x="12762" fg:w="82"/><text x="29.2528%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.1459%" y="149" width="0.1861%" height="15" fill="rgb(242,55,13)" fg:x="12844" fg:w="82"/><text x="29.4388%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.37%)</title><rect x="29.1459%" y="165" width="0.3744%" height="15" fill="rgb(230,49,50)" fg:x="12844" fg:w="165"/><text x="29.4388%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="29.5203%" y="165" width="0.1861%" height="15" fill="rgb(241,111,38)" fg:x="13009" fg:w="82"/><text x="29.8133%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="29.7064%" y="149" width="0.1770%" height="15" fill="rgb(252,155,4)" fg:x="13091" fg:w="78"/><text x="29.9993%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="29.8834%" y="117" width="0.2042%" height="15" fill="rgb(212,69,32)" fg:x="13169" fg:w="90"/><text x="30.1763%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="29.8834%" y="133" width="0.2610%" height="15" fill="rgb(243,107,47)" fg:x="13169" fg:w="115"/><text x="30.1763%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.1443%" y="85" width="0.0204%" height="15" fill="rgb(247,130,12)" fg:x="13284" fg:w="9"/><text x="30.4373%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.1647%" y="69" width="0.0681%" height="15" fill="rgb(233,74,16)" fg:x="13293" fg:w="30"/><text x="30.4577%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.1647%" y="85" width="0.1248%" height="15" fill="rgb(208,58,18)" fg:x="13293" fg:w="55"/><text x="30.4577%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="30.1443%" y="101" width="0.2678%" height="15" fill="rgb(242,225,1)" fg:x="13284" fg:w="118"/><text x="30.4373%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="30.1443%" y="117" width="0.3880%" height="15" fill="rgb(249,39,40)" fg:x="13284" fg:w="171"/><text x="30.4373%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="30.1443%" y="133" width="0.4221%" height="15" fill="rgb(207,72,44)" fg:x="13284" fg:w="186"/><text x="30.4373%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="29.8834%" y="149" width="0.9349%" height="15" fill="rgb(215,193,12)" fg:x="13169" fg:w="412"/><text x="30.1763%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.43%)</title><rect x="29.7064%" y="165" width="1.4319%" height="15" fill="rgb(248,41,39)" fg:x="13091" fg:w="631"/><text x="29.9993%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.1382%" y="149" width="0.1861%" height="15" fill="rgb(253,85,4)" fg:x="13722" fg:w="82"/><text x="31.4312%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.31%)</title><rect x="31.1382%" y="165" width="0.3132%" height="15" fill="rgb(243,70,31)" fg:x="13722" fg:w="138"/><text x="31.4312%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.4514%" y="165" width="0.2156%" height="15" fill="rgb(253,195,26)" fg:x="13860" fg:w="95"/><text x="31.7444%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="31.6670%" y="165" width="0.0295%" height="15" fill="rgb(243,42,11)" fg:x="13955" fg:w="13"/><text x="31.9599%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.22%)</title><rect x="31.6965%" y="165" width="0.2156%" height="15" fill="rgb(239,66,17)" fg:x="13968" fg:w="95"/><text x="31.9894%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="31.9120%" y="149" width="0.1861%" height="15" fill="rgb(217,132,21)" fg:x="14063" fg:w="82"/><text x="32.2050%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (114 instructions, 0.26%)</title><rect x="31.9120%" y="165" width="0.2587%" height="15" fill="rgb(252,202,21)" fg:x="14063" fg:w="114"/><text x="32.2050%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="32.1707%" y="149" width="0.0522%" height="15" fill="rgb(233,98,36)" fg:x="14177" fg:w="23"/><text x="32.4637%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.05%)</title><rect x="32.2229%" y="149" width="0.0522%" height="15" fill="rgb(216,153,54)" fg:x="14200" fg:w="23"/><text x="32.5159%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (134 instructions, 0.30%)</title><rect x="32.1707%" y="165" width="0.3041%" height="15" fill="rgb(250,99,7)" fg:x="14177" fg:w="134"/><text x="32.4637%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.4748%" y="165" width="0.0340%" height="15" fill="rgb(207,56,50)" fg:x="14311" fg:w="15"/><text x="32.7678%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.13%)</title><rect x="32.6972%" y="149" width="0.1271%" height="15" fill="rgb(244,61,34)" fg:x="14409" fg:w="56"/><text x="32.9902%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.37%)</title><rect x="32.5088%" y="165" width="0.3722%" height="15" fill="rgb(241,50,38)" fg:x="14326" fg:w="164"/><text x="32.8018%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="32.8810%" y="165" width="0.0295%" height="15" fill="rgb(212,166,30)" fg:x="14490" fg:w="13"/><text x="33.1740%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="32.9105%" y="165" width="0.0159%" height="15" fill="rgb(249,127,32)" fg:x="14503" fg:w="7"/><text x="33.2035%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="32.9264%" y="165" width="0.0340%" height="15" fill="rgb(209,103,0)" fg:x="14510" fg:w="15"/><text x="33.2194%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="32.9604%" y="133" width="0.1611%" height="15" fill="rgb(238,209,51)" fg:x="14525" fg:w="71"/><text x="33.2534%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="33.1215%" y="101" width="0.2042%" height="15" fill="rgb(237,56,23)" fg:x="14596" fg:w="90"/><text x="33.4145%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.26%)</title><rect x="33.1215%" y="117" width="0.2610%" height="15" fill="rgb(215,153,46)" fg:x="14596" fg:w="115"/><text x="33.4145%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="33.3825%" y="69" width="0.0204%" height="15" fill="rgb(224,49,31)" fg:x="14711" fg:w="9"/><text x="33.6755%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="33.4029%" y="53" width="0.0681%" height="15" fill="rgb(250,18,42)" fg:x="14720" fg:w="30"/><text x="33.6959%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="33.4029%" y="69" width="0.1248%" height="15" fill="rgb(215,176,39)" fg:x="14720" fg:w="55"/><text x="33.6959%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="33.3825%" y="85" width="0.2678%" height="15" fill="rgb(223,77,29)" fg:x="14711" fg:w="118"/><text x="33.6755%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="33.3825%" y="101" width="0.3880%" height="15" fill="rgb(234,94,52)" fg:x="14711" fg:w="171"/><text x="33.6755%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.42%)</title><rect x="33.3825%" y="117" width="0.4221%" height="15" fill="rgb(220,154,50)" fg:x="14711" fg:w="186"/><text x="33.6755%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 0.93%)</title><rect x="33.1215%" y="133" width="0.9349%" height="15" fill="rgb(212,11,10)" fg:x="14596" fg:w="412"/><text x="33.4145%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (624 instructions, 1.42%)</title><rect x="32.9604%" y="149" width="1.4160%" height="15" fill="rgb(205,166,19)" fg:x="14525" fg:w="624"/><text x="33.2534%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.3764%" y="149" width="0.1861%" height="15" fill="rgb(244,198,16)" fg:x="15149" fg:w="82"/><text x="34.6694%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (817 instructions, 1.85%)</title><rect x="32.9604%" y="165" width="1.8540%" height="15" fill="rgb(219,69,12)" fg:x="14525" fg:w="817"/><text x="33.2534%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="34.8144%" y="133" width="0.1861%" height="15" fill="rgb(245,30,7)" fg:x="15342" fg:w="82"/><text x="35.1073%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.26%)</title><rect x="34.8144%" y="149" width="0.2632%" height="15" fill="rgb(218,221,48)" fg:x="15342" fg:w="116"/><text x="35.1073%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.42%)</title><rect x="34.8144%" y="165" width="0.4175%" height="15" fill="rgb(216,66,15)" fg:x="15342" fg:w="184"/><text x="35.1073%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.2319%" y="165" width="0.1861%" height="15" fill="rgb(226,122,50)" fg:x="15526" fg:w="82"/><text x="35.5249%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.4180%" y="165" width="0.1838%" height="15" fill="rgb(239,156,16)" fg:x="15608" fg:w="81"/><text x="35.7110%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.6018%" y="165" width="0.1861%" height="15" fill="rgb(224,27,38)" fg:x="15689" fg:w="82"/><text x="35.8948%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="35.7879%" y="165" width="0.1861%" height="15" fill="rgb(224,39,27)" fg:x="15771" fg:w="82"/><text x="36.0808%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="35.9739%" y="149" width="0.1838%" height="15" fill="rgb(215,92,29)" fg:x="15853" fg:w="81"/><text x="36.2669%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.26%)</title><rect x="35.9739%" y="165" width="0.2610%" height="15" fill="rgb(207,159,16)" fg:x="15853" fg:w="115"/><text x="36.2669%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="36.2349%" y="149" width="0.1430%" height="15" fill="rgb(238,163,47)" fg:x="15968" fg:w="63"/><text x="36.5279%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.38%)</title><rect x="36.2349%" y="165" width="0.3767%" height="15" fill="rgb(219,91,49)" fg:x="15968" fg:w="166"/><text x="36.5279%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="36.6116%" y="165" width="0.1838%" height="15" fill="rgb(227,167,31)" fg:x="16134" fg:w="81"/><text x="36.9046%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="36.7954%" y="165" width="0.8623%" height="15" fill="rgb(234,80,54)" fg:x="16215" fg:w="380"/><text x="37.0884%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="37.6577%" y="165" width="0.8623%" height="15" fill="rgb(212,114,2)" fg:x="16595" fg:w="380"/><text x="37.9507%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,529 instructions, 42.05%)</title><rect x="0.5650%" y="181" width="42.0464%" height="15" fill="rgb(234,50,24)" fg:x="249" fg:w="18529"/><text x="0.8580%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (335 instructions, 0.76%)</title><rect x="42.6114%" y="181" width="0.7602%" height="15" fill="rgb(221,68,8)" fg:x="18778" fg:w="335"/><text x="42.9044%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="43.3716%" y="165" width="0.0113%" height="15" fill="rgb(254,180,31)" fg:x="19113" fg:w="5"/><text x="43.6646%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="43.3716%" y="181" width="0.0885%" height="15" fill="rgb(247,130,50)" fg:x="19113" fg:w="39"/><text x="43.6646%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="43.4601%" y="165" width="0.1248%" height="15" fill="rgb(211,109,4)" fg:x="19152" fg:w="55"/><text x="43.7531%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.37%)</title><rect x="43.4601%" y="181" width="0.3699%" height="15" fill="rgb(238,50,21)" fg:x="19152" fg:w="163"/><text x="43.7531%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="43.8300%" y="165" width="0.0113%" height="15" fill="rgb(225,57,45)" fg:x="19315" fg:w="5"/><text x="44.1230%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="43.8413%" y="149" width="0.1203%" height="15" fill="rgb(209,196,50)" fg:x="19320" fg:w="53"/><text x="44.1343%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="43.9616%" y="149" width="0.6082%" height="15" fill="rgb(242,140,13)" fg:x="19373" fg:w="268"/><text x="44.2546%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.5698%" y="149" width="0.3676%" height="15" fill="rgb(217,111,7)" fg:x="19641" fg:w="162"/><text x="44.8627%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.63%)</title><rect x="43.8413%" y="165" width="1.6338%" height="15" fill="rgb(253,193,51)" fg:x="19320" fg:w="720"/><text x="44.1343%" y="175.50"></text></g><g><title>candid::types::internal::env_add (929 instructions, 2.11%)</title><rect x="43.8300%" y="181" width="2.1081%" height="15" fill="rgb(252,70,29)" fg:x="19315" fg:w="929"/><text x="44.1230%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="45.9381%" y="181" width="0.1770%" height="15" fill="rgb(232,127,12)" fg:x="20244" fg:w="78"/><text x="46.2311%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="46.1151%" y="181" width="0.1725%" height="15" fill="rgb(211,180,21)" fg:x="20322" fg:w="76"/><text x="46.4081%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="46.2876%" y="181" width="0.1770%" height="15" fill="rgb(229,72,13)" fg:x="20398" fg:w="78"/><text x="46.5805%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="46.4646%" y="149" width="0.0113%" height="15" fill="rgb(240,211,49)" fg:x="20476" fg:w="5"/><text x="46.7575%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.4759%" y="133" width="0.1203%" height="15" fill="rgb(219,149,40)" fg:x="20481" fg:w="53"/><text x="46.7689%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="46.5962%" y="133" width="0.6944%" height="15" fill="rgb(210,127,46)" fg:x="20534" fg:w="306"/><text x="46.8891%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.2906%" y="133" width="0.1634%" height="15" fill="rgb(220,106,7)" fg:x="20840" fg:w="72"/><text x="47.5835%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="46.4759%" y="149" width="1.5158%" height="15" fill="rgb(249,31,22)" fg:x="20481" fg:w="668"/><text x="46.7689%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.78%)</title><rect x="46.4646%" y="165" width="1.7836%" height="15" fill="rgb(253,1,49)" fg:x="20476" fg:w="786"/><text x="46.7575%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="48.2482%" y="165" width="0.1725%" height="15" fill="rgb(227,144,33)" fg:x="21262" fg:w="76"/><text x="48.5411%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="48.4206%" y="149" width="0.0113%" height="15" fill="rgb(249,163,44)" fg:x="21338" fg:w="5"/><text x="48.7136%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="48.4320%" y="133" width="0.1203%" height="15" fill="rgb(234,15,39)" fg:x="21343" fg:w="53"/><text x="48.7249%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="48.5522%" y="133" width="0.6944%" height="15" fill="rgb(207,66,16)" fg:x="21396" fg:w="306"/><text x="48.8452%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="49.2466%" y="133" width="0.1634%" height="15" fill="rgb(233,112,24)" fg:x="21702" fg:w="72"/><text x="49.5396%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="48.4320%" y="149" width="1.5158%" height="15" fill="rgb(230,90,22)" fg:x="21343" fg:w="668"/><text x="48.7249%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.99%)</title><rect x="48.4206%" y="165" width="1.9901%" height="15" fill="rgb(229,61,13)" fg:x="21338" fg:w="877"/><text x="48.7136%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="50.4107%" y="165" width="0.1725%" height="15" fill="rgb(225,57,24)" fg:x="22215" fg:w="76"/><text x="50.7037%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="50.5832%" y="149" width="0.0113%" height="15" fill="rgb(208,169,48)" fg:x="22291" fg:w="5"/><text x="50.8762%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="50.5945%" y="133" width="0.1203%" height="15" fill="rgb(244,218,51)" fg:x="22296" fg:w="53"/><text x="50.8875%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="50.7148%" y="133" width="0.6944%" height="15" fill="rgb(214,148,10)" fg:x="22349" fg:w="306"/><text x="51.0078%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="51.4092%" y="133" width="0.1634%" height="15" fill="rgb(225,174,27)" fg:x="22655" fg:w="72"/><text x="51.7022%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.52%)</title><rect x="50.5945%" y="149" width="1.5158%" height="15" fill="rgb(230,96,26)" fg:x="22296" fg:w="668"/><text x="50.8875%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.01%)</title><rect x="52.1104%" y="149" width="1.0121%" height="15" fill="rgb(232,10,30)" fg:x="22964" fg:w="446"/><text x="52.4033%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="53.1224%" y="133" width="0.1838%" height="15" fill="rgb(222,8,50)" fg:x="23410" fg:w="81"/><text x="53.4154%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="53.1224%" y="149" width="0.2451%" height="15" fill="rgb(213,81,27)" fg:x="23410" fg:w="108"/><text x="53.4154%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 3.17%)</title><rect x="50.5832%" y="165" width="3.1678%" height="15" fill="rgb(245,50,10)" fg:x="22291" fg:w="1396"/><text x="50.8762%" y="175.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.7510%" y="117" width="0.1203%" height="15" fill="rgb(216,100,18)" fg:x="23687" fg:w="53"/><text x="54.0440%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="53.7510%" y="133" width="0.1770%" height="15" fill="rgb(236,147,54)" fg:x="23687" fg:w="78"/><text x="54.0440%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="53.7510%" y="149" width="0.6649%" height="15" fill="rgb(205,143,26)" fg:x="23687" fg:w="293"/><text x="54.0440%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (9 instructions, 0.02%)</title><rect x="54.4159%" y="149" width="0.0204%" height="15" fill="rgb(236,26,9)" fg:x="23980" fg:w="9"/><text x="54.7089%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (15 instructions, 0.03%)</title><rect x="54.4363%" y="149" width="0.0340%" height="15" fill="rgb(221,165,53)" fg:x="23989" fg:w="15"/><text x="54.7293%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="54.4704%" y="149" width="0.0250%" height="15" fill="rgb(214,110,17)" fg:x="24004" fg:w="11"/><text x="54.7633%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.18%)</title><rect x="53.7510%" y="165" width="1.1845%" height="15" fill="rgb(237,197,12)" fg:x="23687" fg:w="522"/><text x="54.0440%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,840 instructions, 8.71%)</title><rect x="46.4646%" y="181" width="8.7138%" height="15" fill="rgb(205,84,17)" fg:x="20476" fg:w="3840"/><text x="46.7575%" y="191.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.1784%" y="181" width="0.1725%" height="15" fill="rgb(237,18,45)" fg:x="24316" fg:w="76"/><text x="55.4713%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="55.3508%" y="181" width="0.1725%" height="15" fill="rgb(221,87,14)" fg:x="24392" fg:w="76"/><text x="55.6438%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="55.5233%" y="149" width="0.0113%" height="15" fill="rgb(238,186,15)" fg:x="24468" fg:w="5"/><text x="55.8163%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="55.5346%" y="133" width="0.1203%" height="15" fill="rgb(208,115,11)" fg:x="24473" fg:w="53"/><text x="55.8276%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="55.6549%" y="133" width="0.1997%" height="15" fill="rgb(254,175,0)" fg:x="24526" fg:w="88"/><text x="55.9479%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="55.8546%" y="133" width="0.3676%" height="15" fill="rgb(227,24,42)" fg:x="24614" fg:w="162"/><text x="56.1476%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="55.5346%" y="149" width="1.2254%" height="15" fill="rgb(223,211,37)" fg:x="24473" fg:w="540"/><text x="55.8276%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.49%)</title><rect x="55.5233%" y="165" width="1.4931%" height="15" fill="rgb(235,49,27)" fg:x="24468" fg:w="658"/><text x="55.8163%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="57.0164%" y="165" width="0.1770%" height="15" fill="rgb(254,97,51)" fg:x="25126" fg:w="78"/><text x="57.3094%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="57.1934%" y="149" width="0.0113%" height="15" fill="rgb(249,51,40)" fg:x="25204" fg:w="5"/><text x="57.4864%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="57.2048%" y="133" width="0.1203%" height="15" fill="rgb(210,128,45)" fg:x="25209" fg:w="53"/><text x="57.4977%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="57.3250%" y="133" width="0.1997%" height="15" fill="rgb(224,137,50)" fg:x="25262" fg:w="88"/><text x="57.6180%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="57.5247%" y="133" width="0.3676%" height="15" fill="rgb(242,15,9)" fg:x="25350" fg:w="162"/><text x="57.8177%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="57.2048%" y="149" width="1.2254%" height="15" fill="rgb(233,187,41)" fg:x="25209" fg:w="540"/><text x="57.4977%" y="159.50"></text></g><g><title>candid::types::internal::env_add (749 instructions, 1.70%)</title><rect x="57.1934%" y="165" width="1.6996%" height="15" fill="rgb(227,2,29)" fg:x="25204" fg:w="749"/><text x="57.4864%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="58.8931%" y="165" width="0.1725%" height="15" fill="rgb(222,70,3)" fg:x="25953" fg:w="76"/><text x="59.1860%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="59.0655%" y="149" width="0.0113%" height="15" fill="rgb(213,11,42)" fg:x="26029" fg:w="5"/><text x="59.3585%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="59.0769%" y="133" width="0.1203%" height="15" fill="rgb(225,150,9)" fg:x="26034" fg:w="53"/><text x="59.3698%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="59.1971%" y="133" width="0.1997%" height="15" fill="rgb(230,162,45)" fg:x="26087" fg:w="88"/><text x="59.4901%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="59.3968%" y="133" width="0.3676%" height="15" fill="rgb(222,14,52)" fg:x="26175" fg:w="162"/><text x="59.6898%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.23%)</title><rect x="59.0769%" y="149" width="1.2254%" height="15" fill="rgb(254,198,14)" fg:x="26034" fg:w="540"/><text x="59.3698%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="60.3023%" y="149" width="0.1861%" height="15" fill="rgb(220,217,30)" fg:x="26574" fg:w="82"/><text x="60.5952%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="60.4883%" y="149" width="0.1906%" height="15" fill="rgb(215,146,41)" fg:x="26656" fg:w="84"/><text x="60.7813%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="60.6790%" y="133" width="0.1203%" height="15" fill="rgb(217,27,36)" fg:x="26740" fg:w="53"/><text x="60.9719%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="60.7992%" y="133" width="0.1997%" height="15" fill="rgb(219,218,39)" fg:x="26793" fg:w="88"/><text x="61.0922%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="60.9989%" y="133" width="0.3676%" height="15" fill="rgb(219,4,42)" fg:x="26881" fg:w="162"/><text x="61.2919%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="61.9043%" y="133" width="0.1203%" height="15" fill="rgb(249,119,36)" fg:x="27280" fg:w="53"/><text x="62.1973%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="62.0246%" y="133" width="0.6082%" height="15" fill="rgb(209,23,33)" fg:x="27333" fg:w="268"/><text x="62.3176%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="62.6327%" y="133" width="0.3676%" height="15" fill="rgb(211,10,0)" fg:x="27601" fg:w="162"/><text x="62.9257%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="63.5382%" y="133" width="0.1203%" height="15" fill="rgb(208,99,37)" fg:x="28000" fg:w="53"/><text x="63.8311%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.69%)</title><rect x="63.6584%" y="133" width="0.6944%" height="15" fill="rgb(213,132,31)" fg:x="28053" fg:w="306"/><text x="63.9514%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="64.3528%" y="133" width="0.1634%" height="15" fill="rgb(243,129,40)" fg:x="28359" fg:w="72"/><text x="64.6458%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,928 instructions, 4.38%)</title><rect x="60.6790%" y="149" width="4.3751%" height="15" fill="rgb(210,66,33)" fg:x="26740" fg:w="1928"/><text x="60.9719%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.0540%" y="149" width="0.1838%" height="15" fill="rgb(209,189,4)" fg:x="28668" fg:w="81"/><text x="65.3470%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="65.2378%" y="149" width="0.1543%" height="15" fill="rgb(214,107,37)" fg:x="28749" fg:w="68"/><text x="65.5308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="65.3921%" y="133" width="0.1838%" height="15" fill="rgb(245,88,54)" fg:x="28817" fg:w="81"/><text x="65.6851%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="65.3921%" y="149" width="0.2451%" height="15" fill="rgb(205,146,20)" fg:x="28817" fg:w="108"/><text x="65.6851%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,525 instructions, 8.00%)</title><rect x="59.0655%" y="165" width="7.9990%" height="15" fill="rgb(220,161,25)" fg:x="26029" fg:w="3525"/><text x="59.3585%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.0645%" y="117" width="0.1203%" height="15" fill="rgb(215,152,15)" fg:x="29554" fg:w="53"/><text x="67.3575%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="67.0645%" y="133" width="0.1770%" height="15" fill="rgb(233,192,44)" fg:x="29554" fg:w="78"/><text x="67.3575%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="67.7294%" y="117" width="0.1203%" height="15" fill="rgb(240,170,46)" fg:x="29847" fg:w="53"/><text x="68.0224%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="67.7294%" y="133" width="0.1770%" height="15" fill="rgb(207,104,33)" fg:x="29847" fg:w="78"/><text x="68.0224%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.33%)</title><rect x="67.0645%" y="149" width="1.3298%" height="15" fill="rgb(219,21,39)" fg:x="29554" fg:w="586"/><text x="67.3575%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="68.3943%" y="149" width="0.1861%" height="15" fill="rgb(214,133,29)" fg:x="30140" fg:w="82"/><text x="68.6873%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="68.5804%" y="149" width="0.1906%" height="15" fill="rgb(226,93,6)" fg:x="30222" fg:w="84"/><text x="68.8733%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="68.7710%" y="117" width="0.1203%" height="15" fill="rgb(252,222,34)" fg:x="30306" fg:w="53"/><text x="69.0640%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="68.7710%" y="133" width="0.1770%" height="15" fill="rgb(252,92,48)" fg:x="30306" fg:w="78"/><text x="69.0640%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="69.4359%" y="117" width="0.1203%" height="15" fill="rgb(245,223,24)" fg:x="30599" fg:w="53"/><text x="69.7288%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="69.4359%" y="133" width="0.1770%" height="15" fill="rgb(205,176,3)" fg:x="30599" fg:w="78"/><text x="69.7288%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.1008%" y="117" width="0.1203%" height="15" fill="rgb(235,151,15)" fg:x="30892" fg:w="53"/><text x="70.3937%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="70.2210%" y="117" width="0.3495%" height="15" fill="rgb(237,209,11)" fg:x="30945" fg:w="154"/><text x="70.5140%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="70.5705%" y="101" width="0.1203%" height="15" fill="rgb(243,227,24)" fg:x="31099" fg:w="53"/><text x="70.8635%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="70.5705%" y="117" width="0.1770%" height="15" fill="rgb(239,193,16)" fg:x="31099" fg:w="78"/><text x="70.8635%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.80%)</title><rect x="70.1008%" y="133" width="0.7965%" height="15" fill="rgb(231,27,9)" fg:x="30892" fg:w="351"/><text x="70.3937%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,152 instructions, 2.61%)</title><rect x="68.7710%" y="149" width="2.6141%" height="15" fill="rgb(219,169,10)" fg:x="30306" fg:w="1152"/><text x="69.0640%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="71.3851%" y="149" width="0.1770%" height="15" fill="rgb(244,229,43)" fg:x="31458" fg:w="78"/><text x="71.6781%" y="159.50"></text></g><g><title>candid::types::internal::env_id (2,715 instructions, 6.16%)</title><rect x="67.0645%" y="165" width="6.1609%" height="15" fill="rgb(254,38,20)" fg:x="29554" fg:w="2715"/><text x="67.3575%" y="175.50">candid..</text></g><g><title>candid::types::CandidType::ty (7,908 instructions, 17.94%)</title><rect x="55.5233%" y="181" width="17.9450%" height="15" fill="rgb(250,47,30)" fg:x="24468" fg:w="7908"/><text x="55.8163%" y="191.50">candid::types::CandidTy..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="73.4683%" y="181" width="0.1770%" height="15" fill="rgb(224,124,36)" fg:x="32376" fg:w="78"/><text x="73.7612%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="73.6453%" y="165" width="0.0113%" height="15" fill="rgb(246,68,51)" fg:x="32454" fg:w="5"/><text x="73.9382%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="73.6566%" y="149" width="0.1203%" height="15" fill="rgb(253,43,49)" fg:x="32459" fg:w="53"/><text x="73.9496%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (268 instructions, 0.61%)</title><rect x="73.7769%" y="149" width="0.6082%" height="15" fill="rgb(219,54,36)" fg:x="32512" fg:w="268"/><text x="74.0699%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="74.3850%" y="149" width="0.3676%" height="15" fill="rgb(227,133,34)" fg:x="32780" fg:w="162"/><text x="74.6780%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (720 instructions, 1.63%)</title><rect x="73.6566%" y="165" width="1.6338%" height="15" fill="rgb(247,227,15)" fg:x="32459" fg:w="720"/><text x="73.9496%" y="175.50"></text></g><g><title>memcmp (404 instructions, 0.92%)</title><rect x="75.2905%" y="165" width="0.9168%" height="15" fill="rgb(229,96,14)" fg:x="33179" fg:w="404"/><text x="75.5834%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="76.2072%" y="149" width="0.1838%" height="15" fill="rgb(220,79,17)" fg:x="33583" fg:w="81"/><text x="76.5002%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.25%)</title><rect x="76.2072%" y="165" width="0.2451%" height="15" fill="rgb(205,131,53)" fg:x="33583" fg:w="108"/><text x="76.5002%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,406 instructions, 3.19%)</title><rect x="73.6453%" y="181" width="3.1905%" height="15" fill="rgb(209,50,29)" fg:x="32454" fg:w="1406"/><text x="73.9382%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.8358%" y="133" width="0.1203%" height="15" fill="rgb(245,86,46)" fg:x="33860" fg:w="53"/><text x="77.1288%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="76.9561%" y="133" width="0.3495%" height="15" fill="rgb(235,66,46)" fg:x="33913" fg:w="154"/><text x="77.2490%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="77.3055%" y="117" width="0.1203%" height="15" fill="rgb(232,148,31)" fg:x="34067" fg:w="53"/><text x="77.5985%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="77.4825%" y="117" width="0.3495%" height="15" fill="rgb(217,149,8)" fg:x="34145" fg:w="154"/><text x="77.7755%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (257 instructions, 0.58%)</title><rect x="77.3055%" y="133" width="0.5832%" height="15" fill="rgb(209,183,11)" fg:x="34067" fg:w="257"/><text x="77.5985%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.24%)</title><rect x="76.8358%" y="149" width="1.2367%" height="15" fill="rgb(208,55,20)" fg:x="33860" fg:w="545"/><text x="77.1288%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="78.5604%" y="133" width="0.1203%" height="15" fill="rgb(218,39,14)" fg:x="34620" fg:w="53"/><text x="78.8534%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="78.6807%" y="133" width="0.3495%" height="15" fill="rgb(216,169,33)" fg:x="34673" fg:w="154"/><text x="78.9736%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="79.0301%" y="117" width="0.1203%" height="15" fill="rgb(233,80,24)" fg:x="34827" fg:w="53"/><text x="79.3231%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="79.2071%" y="117" width="0.3495%" height="15" fill="rgb(213,179,31)" fg:x="34905" fg:w="154"/><text x="79.5001%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (257 instructions, 0.58%)</title><rect x="79.0301%" y="133" width="0.5832%" height="15" fill="rgb(209,19,5)" fg:x="34827" fg:w="257"/><text x="79.3231%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (545 instructions, 1.24%)</title><rect x="78.5604%" y="149" width="1.2367%" height="15" fill="rgb(219,18,35)" fg:x="34620" fg:w="545"/><text x="78.8534%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,520 instructions, 3.45%)</title><rect x="76.8358%" y="165" width="3.4492%" height="15" fill="rgb(209,169,16)" fg:x="33860" fg:w="1520"/><text x="77.1288%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,793 instructions, 4.07%)</title><rect x="76.8358%" y="181" width="4.0687%" height="15" fill="rgb(245,90,51)" fg:x="33860" fg:w="1793"/><text x="77.1288%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="80.9045%" y="181" width="0.1067%" height="15" fill="rgb(220,99,45)" fg:x="35653" fg:w="47"/><text x="81.1975%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="81.0112%" y="165" width="0.1770%" height="15" fill="rgb(249,89,25)" fg:x="35700" fg:w="78"/><text x="81.3041%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="81.2494%" y="165" width="0.2723%" height="15" fill="rgb(239,193,0)" fg:x="35805" fg:w="120"/><text x="81.5424%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.57%)</title><rect x="81.0112%" y="181" width="0.5718%" height="15" fill="rgb(231,126,1)" fg:x="35700" fg:w="252"/><text x="81.3041%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.30%)</title><rect x="81.5830%" y="117" width="0.2973%" height="15" fill="rgb(243,166,3)" fg:x="35952" fg:w="131"/><text x="81.8760%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (229 instructions, 0.52%)</title><rect x="81.5830%" y="133" width="0.5197%" height="15" fill="rgb(223,22,34)" fg:x="35952" fg:w="229"/><text x="81.8760%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (305 instructions, 0.69%)</title><rect x="81.5830%" y="149" width="0.6921%" height="15" fill="rgb(251,52,51)" fg:x="35952" fg:w="305"/><text x="81.8760%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="82.2751%" y="149" width="0.0250%" height="15" fill="rgb(221,165,28)" fg:x="36257" fg:w="11"/><text x="82.5681%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (368 instructions, 0.84%)</title><rect x="81.5830%" y="165" width="0.8351%" height="15" fill="rgb(218,121,47)" fg:x="35952" fg:w="368"/><text x="81.8760%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.4181%" y="149" width="0.1725%" height="15" fill="rgb(209,120,9)" fg:x="36320" fg:w="76"/><text x="82.7110%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.16%)</title><rect x="82.9173%" y="149" width="0.1611%" height="15" fill="rgb(236,68,12)" fg:x="36540" fg:w="71"/><text x="83.2103%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (435 instructions, 0.99%)</title><rect x="82.4181%" y="165" width="0.9871%" height="15" fill="rgb(225,194,26)" fg:x="36320" fg:w="435"/><text x="82.7110%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.4052%" y="165" width="0.0250%" height="15" fill="rgb(231,84,39)" fg:x="36755" fg:w="11"/><text x="83.6982%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="83.4302%" y="165" width="0.0250%" height="15" fill="rgb(210,11,45)" fg:x="36766" fg:w="11"/><text x="83.7231%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.27%)</title><rect x="83.4551%" y="149" width="0.2678%" height="15" fill="rgb(224,54,52)" fg:x="36777" fg:w="118"/><text x="83.7481%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="83.7229%" y="149" width="0.2042%" height="15" fill="rgb(238,102,14)" fg:x="36895" fg:w="90"/><text x="84.0159%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="83.9271%" y="149" width="0.2496%" height="15" fill="rgb(243,160,52)" fg:x="36985" fg:w="110"/><text x="84.2201%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="84.1767%" y="149" width="0.1248%" height="15" fill="rgb(216,114,19)" fg:x="37095" fg:w="55"/><text x="84.4697%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (443 instructions, 1.01%)</title><rect x="83.4551%" y="165" width="1.0053%" height="15" fill="rgb(244,166,37)" fg:x="36777" fg:w="443"/><text x="83.7481%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="84.4604%" y="149" width="0.0635%" height="15" fill="rgb(246,29,44)" fg:x="37220" fg:w="28"/><text x="84.7533%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.5239%" y="149" width="0.0340%" height="15" fill="rgb(215,56,53)" fg:x="37248" fg:w="15"/><text x="84.8169%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="84.5580%" y="149" width="0.0340%" height="15" fill="rgb(217,60,2)" fg:x="37263" fg:w="15"/><text x="84.8509%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="84.5920%" y="133" width="0.1566%" height="15" fill="rgb(207,26,24)" fg:x="37278" fg:w="69"/><text x="84.8850%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="84.7486%" y="133" width="0.1475%" height="15" fill="rgb(252,210,15)" fg:x="37347" fg:w="65"/><text x="85.0415%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="84.8961%" y="133" width="0.1430%" height="15" fill="rgb(253,209,26)" fg:x="37412" fg:w="63"/><text x="85.1890%" y="143.50"></text></g><g><title>binread::BinRead::read (241 instructions, 0.55%)</title><rect x="84.5920%" y="149" width="0.5469%" height="15" fill="rgb(238,170,14)" fg:x="37278" fg:w="241"/><text x="84.8850%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.12%)</title><rect x="85.1389%" y="149" width="0.1157%" height="15" fill="rgb(216,178,15)" fg:x="37519" fg:w="51"/><text x="85.4318%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.2546%" y="149" width="0.1725%" height="15" fill="rgb(250,197,2)" fg:x="37570" fg:w="76"/><text x="85.5476%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.24%)</title><rect x="85.4271%" y="149" width="0.2383%" height="15" fill="rgb(212,70,42)" fg:x="37646" fg:w="105"/><text x="85.7200%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.33%)</title><rect x="85.6653%" y="149" width="0.3268%" height="15" fill="rgb(227,213,9)" fg:x="37751" fg:w="144"/><text x="85.9583%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (807 instructions, 1.83%)</title><rect x="84.4604%" y="165" width="1.8313%" height="15" fill="rgb(245,99,25)" fg:x="37220" fg:w="807"/><text x="84.7533%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.2916%" y="165" width="0.0250%" height="15" fill="rgb(250,82,29)" fg:x="38027" fg:w="11"/><text x="86.5846%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.3166%" y="165" width="0.0250%" height="15" fill="rgb(241,226,54)" fg:x="38038" fg:w="11"/><text x="86.6096%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="86.3416%" y="149" width="0.1725%" height="15" fill="rgb(221,99,41)" fg:x="38049" fg:w="76"/><text x="86.6345%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.20%)</title><rect x="86.5140%" y="149" width="0.2042%" height="15" fill="rgb(213,90,21)" fg:x="38125" fg:w="90"/><text x="86.8070%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="86.7183%" y="149" width="0.0363%" height="15" fill="rgb(205,208,24)" fg:x="38215" fg:w="16"/><text x="87.0112%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.25%)</title><rect x="86.7546%" y="149" width="0.2496%" height="15" fill="rgb(246,31,12)" fg:x="38231" fg:w="110"/><text x="87.0475%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="87.0042%" y="149" width="0.1248%" height="15" fill="rgb(213,154,6)" fg:x="38341" fg:w="55"/><text x="87.2971%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (422 instructions, 0.96%)</title><rect x="86.3416%" y="165" width="0.9576%" height="15" fill="rgb(222,163,29)" fg:x="38049" fg:w="422"/><text x="86.6345%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="87.2992%" y="165" width="0.0635%" height="15" fill="rgb(227,201,8)" fg:x="38471" fg:w="28"/><text x="87.5921%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3627%" y="165" width="0.0340%" height="15" fill="rgb(233,9,32)" fg:x="38499" fg:w="15"/><text x="87.6557%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="87.3968%" y="165" width="0.0340%" height="15" fill="rgb(217,54,24)" fg:x="38514" fg:w="15"/><text x="87.6897%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.4308%" y="149" width="0.0113%" height="15" fill="rgb(235,192,0)" fg:x="38529" fg:w="5"/><text x="87.7238%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.4421%" y="149" width="0.1838%" height="15" fill="rgb(235,45,9)" fg:x="38534" fg:w="81"/><text x="87.7351%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="87.6259%" y="149" width="0.0113%" height="15" fill="rgb(246,42,40)" fg:x="38615" fg:w="5"/><text x="87.9189%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.29%)</title><rect x="87.6373%" y="149" width="0.2859%" height="15" fill="rgb(248,111,24)" fg:x="38620" fg:w="126"/><text x="87.9303%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.56%)</title><rect x="87.4308%" y="165" width="0.5628%" height="15" fill="rgb(249,65,22)" fg:x="38529" fg:w="248"/><text x="87.7238%" y="175.50"></text></g><g><title>subscriber::_::&lt;impl serde::de::Deserialize for subscriber::Counter&gt;::deserialize (3,818 instructions, 8.66%)</title><rect x="81.5830%" y="181" width="8.6639%" height="15" fill="rgb(238,111,51)" fg:x="35952" fg:w="3818"/><text x="81.8760%" y="191.50">subscriber..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.2469%" y="165" width="0.1838%" height="15" fill="rgb(250,118,22)" fg:x="39770" fg:w="81"/><text x="90.5399%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="90.4307%" y="165" width="0.1838%" height="15" fill="rgb(234,84,26)" fg:x="39851" fg:w="81"/><text x="90.7237%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (201 instructions, 0.46%)</title><rect x="90.2469%" y="181" width="0.4561%" height="15" fill="rgb(243,172,12)" fg:x="39770" fg:w="201"/><text x="90.5399%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7030%" y="181" width="0.0250%" height="15" fill="rgb(236,150,49)" fg:x="39971" fg:w="11"/><text x="90.9960%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="90.7280%" y="181" width="0.0250%" height="15" fill="rgb(225,197,26)" fg:x="39982" fg:w="11"/><text x="91.0209%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.93%)</title><rect x="90.7529%" y="181" width="0.9304%" height="15" fill="rgb(214,17,42)" fg:x="39993" fg:w="410"/><text x="91.0459%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.6833%" y="133" width="0.1838%" height="15" fill="rgb(224,165,40)" fg:x="40403" fg:w="81"/><text x="91.9763%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="91.8671%" y="117" width="0.1838%" height="15" fill="rgb(246,100,4)" fg:x="40484" fg:w="81"/><text x="92.1601%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.37%)</title><rect x="92.0509%" y="101" width="0.3744%" height="15" fill="rgb(222,103,0)" fg:x="40565" fg:w="165"/><text x="92.3439%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.44%)</title><rect x="92.0509%" y="117" width="0.4357%" height="15" fill="rgb(227,189,26)" fg:x="40565" fg:w="192"/><text x="92.3439%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="92.4866%" y="117" width="0.1838%" height="15" fill="rgb(214,202,17)" fg:x="40757" fg:w="81"/><text x="92.7796%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="92.6704%" y="117" width="0.0250%" height="15" fill="rgb(229,111,3)" fg:x="40838" fg:w="11"/><text x="92.9634%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="92.6954%" y="117" width="0.3812%" height="15" fill="rgb(229,172,15)" fg:x="40849" fg:w="168"/><text x="92.9883%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="93.0766%" y="117" width="0.1770%" height="15" fill="rgb(230,224,35)" fg:x="41017" fg:w="78"/><text x="93.3696%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (739 instructions, 1.68%)</title><rect x="91.8671%" y="133" width="1.6770%" height="15" fill="rgb(251,141,6)" fg:x="40484" fg:w="739"/><text x="92.1601%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="93.5441%" y="117" width="0.1430%" height="15" fill="rgb(225,208,6)" fg:x="41223" fg:w="63"/><text x="93.8370%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.47%)</title><rect x="93.5441%" y="133" width="0.4652%" height="15" fill="rgb(246,181,16)" fg:x="41223" fg:w="205"/><text x="93.8370%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,120 instructions, 2.54%)</title><rect x="91.6833%" y="149" width="2.5415%" height="15" fill="rgb(227,129,36)" fg:x="40403" fg:w="1120"/><text x="91.9763%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.2248%" y="149" width="0.2723%" height="15" fill="rgb(248,117,24)" fg:x="41523" fg:w="120"/><text x="94.5178%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="94.4971%" y="117" width="0.1248%" height="15" fill="rgb(214,185,35)" fg:x="41643" fg:w="55"/><text x="94.7901%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="94.6219%" y="117" width="0.1430%" height="15" fill="rgb(236,150,34)" fg:x="41698" fg:w="63"/><text x="94.9149%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.55%)</title><rect x="94.4971%" y="133" width="0.5537%" height="15" fill="rgb(243,228,27)" fg:x="41643" fg:w="244"/><text x="94.7901%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (271 instructions, 0.61%)</title><rect x="94.4971%" y="149" width="0.6150%" height="15" fill="rgb(245,77,44)" fg:x="41643" fg:w="271"/><text x="94.7901%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.1121%" y="149" width="0.0250%" height="15" fill="rgb(235,214,42)" fg:x="41914" fg:w="11"/><text x="95.4051%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,564 instructions, 3.55%)</title><rect x="91.6833%" y="165" width="3.5491%" height="15" fill="rgb(221,74,3)" fg:x="40403" fg:w="1564"/><text x="91.9763%" y="175.50">cor..</text></g><g><title>candid::de::IDLDeserialize::done (1,599 instructions, 3.63%)</title><rect x="91.6833%" y="181" width="3.6285%" height="15" fill="rgb(206,121,29)" fg:x="40403" fg:w="1599"/><text x="91.9763%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="95.3118%" y="181" width="0.2791%" height="15" fill="rgb(249,131,53)" fg:x="42002" fg:w="123"/><text x="95.6048%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="95.5909%" y="181" width="0.1248%" height="15" fill="rgb(236,170,29)" fg:x="42125" fg:w="55"/><text x="95.8839%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="95.7157%" y="149" width="0.0113%" height="15" fill="rgb(247,96,15)" fg:x="42180" fg:w="5"/><text x="96.0087%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7271%" y="149" width="0.0250%" height="15" fill="rgb(211,210,7)" fg:x="42185" fg:w="11"/><text x="96.0200%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7520%" y="149" width="0.0250%" height="15" fill="rgb(240,88,50)" fg:x="42196" fg:w="11"/><text x="96.0450%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.7770%" y="149" width="0.0250%" height="15" fill="rgb(209,229,26)" fg:x="42207" fg:w="11"/><text x="96.0699%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="95.8019%" y="149" width="0.1906%" height="15" fill="rgb(210,68,23)" fg:x="42218" fg:w="84"/><text x="96.0949%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (334 instructions, 0.76%)</title><rect x="95.7157%" y="165" width="0.7579%" height="15" fill="rgb(229,180,13)" fg:x="42180" fg:w="334"/><text x="96.0087%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="96.4736%" y="149" width="0.0726%" height="15" fill="rgb(236,53,44)" fg:x="42514" fg:w="32"/><text x="96.7666%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="96.5462%" y="101" width="0.1725%" height="15" fill="rgb(244,214,29)" fg:x="42546" fg:w="76"/><text x="96.8392%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="96.5462%" y="117" width="0.2496%" height="15" fill="rgb(220,75,29)" fg:x="42546" fg:w="110"/><text x="96.8392%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.40%)</title><rect x="96.5462%" y="133" width="0.3971%" height="15" fill="rgb(214,183,37)" fg:x="42546" fg:w="175"/><text x="96.8392%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9434%" y="133" width="0.0250%" height="15" fill="rgb(239,117,29)" fg:x="42721" fg:w="11"/><text x="97.2363%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9683%" y="133" width="0.0250%" height="15" fill="rgb(237,171,35)" fg:x="42732" fg:w="11"/><text x="97.2613%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 0.81%)</title><rect x="96.5462%" y="149" width="0.8147%" height="15" fill="rgb(229,178,53)" fg:x="42546" fg:w="359"/><text x="96.8392%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.07%)</title><rect x="97.3609%" y="149" width="0.0681%" height="15" fill="rgb(210,102,19)" fg:x="42905" fg:w="30"/><text x="97.6539%" y="159.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="97.4290%" y="149" width="0.0113%" height="15" fill="rgb(235,127,22)" fg:x="42935" fg:w="5"/><text x="97.7219%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (494 instructions, 1.12%)</title><rect x="96.4736%" y="165" width="1.1210%" height="15" fill="rgb(244,31,31)" fg:x="42514" fg:w="494"/><text x="96.7666%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="97.5946%" y="165" width="0.0113%" height="15" fill="rgb(231,43,21)" fg:x="43008" fg:w="5"/><text x="97.8876%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="97.6060%" y="165" width="0.1248%" height="15" fill="rgb(217,131,35)" fg:x="43013" fg:w="55"/><text x="97.8989%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (962 instructions, 2.18%)</title><rect x="95.7157%" y="181" width="2.1830%" height="15" fill="rgb(221,149,4)" fg:x="42180" fg:w="962"/><text x="96.0087%" y="191.50">i..</text></g><g><title>subscriber::update_count_1_::{{closure}} (43,581 instructions, 98.89%)</title><rect x="0.3926%" y="197" width="98.8949%" height="15" fill="rgb(232,170,28)" fg:x="173" fg:w="43581"/><text x="0.6855%" y="207.50">subscriber::update_count_1_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="99.2875%" y="197" width="0.0272%" height="15" fill="rgb(238,56,10)" fg:x="43754" fg:w="12"/><text x="99.5804%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="99.3147%" y="197" width="0.1838%" height="15" fill="rgb(235,196,14)" fg:x="43766" fg:w="81"/><text x="99.6077%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="99.4985%" y="197" width="0.2791%" height="15" fill="rgb(216,45,48)" fg:x="43847" fg:w="123"/><text x="99.7915%" y="207.50"></text></g><g><title>all (44,068 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,213,17)" fg:x="0" fg:w="44068"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update update_count (44,068 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(212,13,2)" fg:x="0" fg:w="44068"/><text x="0.2930%" y="223.50">canister_update update_count</text></g></svg></svg>