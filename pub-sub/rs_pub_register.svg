<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="42859"><g><title>ic_cdk::setup (58 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1353%" height="15" fill="rgb(238,83,0)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (683 instructions, 1.59%)</title><rect x="0.1353%" y="197" width="1.5936%" height="15" fill="rgb(221,39,39)" fg:x="58" fg:w="683"/><text x="0.4283%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.7289%" y="197" width="0.2123%" height="15" fill="rgb(222,119,46)" fg:x="741" fg:w="91"/><text x="2.0219%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.9412%" y="181" width="0.2123%" height="15" fill="rgb(222,165,49)" fg:x="832" fg:w="91"/><text x="2.2342%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.13%)</title><rect x="2.1536%" y="149" width="0.1330%" height="15" fill="rgb(219,113,52)" fg:x="923" fg:w="57"/><text x="2.4465%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.36%)</title><rect x="2.1536%" y="165" width="0.3617%" height="15" fill="rgb(214,7,15)" fg:x="923" fg:w="155"/><text x="2.4465%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5152%" y="149" width="0.0140%" height="15" fill="rgb(235,32,4)" fg:x="1078" fg:w="6"/><text x="2.8082%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 1.03%)</title><rect x="2.5152%" y="165" width="1.0266%" height="15" fill="rgb(238,90,54)" fg:x="1078" fg:w="440"/><text x="2.8082%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="3.5418%" y="165" width="0.2217%" height="15" fill="rgb(213,208,19)" fg:x="1518" fg:w="95"/><text x="3.8348%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.7635%" y="165" width="0.1400%" height="15" fill="rgb(233,156,4)" fg:x="1613" fg:w="60"/><text x="4.0565%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.9035%" y="165" width="0.1400%" height="15" fill="rgb(207,194,5)" fg:x="1673" fg:w="60"/><text x="4.1965%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="4.0435%" y="165" width="0.1400%" height="15" fill="rgb(206,111,30)" fg:x="1733" fg:w="60"/><text x="4.3365%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="4.1835%" y="165" width="0.1400%" height="15" fill="rgb(243,70,54)" fg:x="1793" fg:w="60"/><text x="4.4765%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="4.3235%" y="165" width="0.1913%" height="15" fill="rgb(242,28,8)" fg:x="1853" fg:w="82"/><text x="4.6164%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="4.5148%" y="165" width="0.1633%" height="15" fill="rgb(219,106,18)" fg:x="1935" fg:w="70"/><text x="4.8078%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="4.6781%" y="149" width="0.0140%" height="15" fill="rgb(244,222,10)" fg:x="2005" fg:w="6"/><text x="4.9711%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 1.03%)</title><rect x="4.6781%" y="165" width="1.0266%" height="15" fill="rgb(236,179,52)" fg:x="2005" fg:w="440"/><text x="4.9711%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="5.7048%" y="165" width="0.0443%" height="15" fill="rgb(213,23,39)" fg:x="2445" fg:w="19"/><text x="5.9977%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="5.7491%" y="149" width="0.2123%" height="15" fill="rgb(238,48,10)" fg:x="2464" fg:w="91"/><text x="6.0421%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="5.9614%" y="117" width="0.1563%" height="15" fill="rgb(251,196,23)" fg:x="2555" fg:w="67"/><text x="6.2544%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.23%)</title><rect x="5.9614%" y="133" width="0.2287%" height="15" fill="rgb(250,152,24)" fg:x="2555" fg:w="98"/><text x="6.2544%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="6.1901%" y="85" width="0.0257%" height="15" fill="rgb(209,150,17)" fg:x="2653" fg:w="11"/><text x="6.4830%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="6.2157%" y="69" width="0.0817%" height="15" fill="rgb(234,202,34)" fg:x="2664" fg:w="35"/><text x="6.5087%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="6.2157%" y="85" width="0.1540%" height="15" fill="rgb(253,148,53)" fg:x="2664" fg:w="66"/><text x="6.5087%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="6.1901%" y="101" width="0.3430%" height="15" fill="rgb(218,129,16)" fg:x="2653" fg:w="147"/><text x="6.4830%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.49%)</title><rect x="6.1901%" y="117" width="0.4946%" height="15" fill="rgb(216,85,19)" fg:x="2653" fg:w="212"/><text x="6.4830%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.52%)</title><rect x="6.1901%" y="133" width="0.5180%" height="15" fill="rgb(235,228,7)" fg:x="2653" fg:w="222"/><text x="6.4830%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 1.08%)</title><rect x="5.9614%" y="149" width="1.0756%" height="15" fill="rgb(245,175,0)" fg:x="2555" fg:w="461"/><text x="6.2544%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.63%)</title><rect x="5.7491%" y="165" width="1.6263%" height="15" fill="rgb(208,168,36)" fg:x="2464" fg:w="697"/><text x="6.0421%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="7.3753%" y="165" width="0.2217%" height="15" fill="rgb(246,171,24)" fg:x="3161" fg:w="95"/><text x="7.6683%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="7.5970%" y="165" width="0.1470%" height="15" fill="rgb(215,142,24)" fg:x="3256" fg:w="63"/><text x="7.8900%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="7.7440%" y="149" width="0.1400%" height="15" fill="rgb(250,187,7)" fg:x="3319" fg:w="60"/><text x="8.0370%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="7.8840%" y="149" width="0.2123%" height="15" fill="rgb(228,66,33)" fg:x="3379" fg:w="91"/><text x="8.1770%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="8.0963%" y="133" width="0.2123%" height="15" fill="rgb(234,215,21)" fg:x="3470" fg:w="91"/><text x="8.3893%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="8.3086%" y="101" width="0.3057%" height="15" fill="rgb(222,191,20)" fg:x="3561" fg:w="131"/><text x="8.6016%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.38%)</title><rect x="8.3086%" y="117" width="0.3780%" height="15" fill="rgb(245,79,54)" fg:x="3561" fg:w="162"/><text x="8.6016%" y="127.50"></text></g><g><title>__rust_realloc (86 instructions, 0.20%)</title><rect x="8.6866%" y="37" width="0.2007%" height="15" fill="rgb(240,10,37)" fg:x="3723" fg:w="86"/><text x="8.9796%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.31%)</title><rect x="8.6866%" y="53" width="0.3057%" height="15" fill="rgb(214,192,32)" fg:x="3723" fg:w="131"/><text x="8.9796%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.51%)</title><rect x="8.6866%" y="69" width="0.5110%" height="15" fill="rgb(209,36,54)" fg:x="3723" fg:w="219"/><text x="8.9796%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.37%)</title><rect x="9.1976%" y="69" width="0.3733%" height="15" fill="rgb(220,10,11)" fg:x="3942" fg:w="160"/><text x="9.4906%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 0.98%)</title><rect x="8.6866%" y="85" width="0.9823%" height="15" fill="rgb(221,106,17)" fg:x="3723" fg:w="421"/><text x="8.9796%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="9.6689%" y="53" width="0.0257%" height="15" fill="rgb(251,142,44)" fg:x="4144" fg:w="11"/><text x="9.9619%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="9.6946%" y="37" width="0.0817%" height="15" fill="rgb(238,13,15)" fg:x="4155" fg:w="35"/><text x="9.9875%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="9.6946%" y="53" width="0.1540%" height="15" fill="rgb(208,107,27)" fg:x="4155" fg:w="66"/><text x="9.9875%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="9.6689%" y="69" width="0.3430%" height="15" fill="rgb(205,136,37)" fg:x="4144" fg:w="147"/><text x="9.9619%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.50%)</title><rect x="9.6689%" y="85" width="0.5040%" height="15" fill="rgb(250,205,27)" fg:x="4144" fg:w="216"/><text x="9.9619%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="10.1729%" y="69" width="0.1190%" height="15" fill="rgb(210,80,43)" fg:x="4360" fg:w="51"/><text x="10.4659%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.19%)</title><rect x="10.1729%" y="85" width="0.1913%" height="15" fill="rgb(247,160,36)" fg:x="4360" fg:w="82"/><text x="10.4659%" y="95.50"></text></g><g><title>core::fmt::write (887 instructions, 2.07%)</title><rect x="8.6866%" y="101" width="2.0696%" height="15" fill="rgb(234,13,49)" fg:x="3723" fg:w="887"/><text x="8.9796%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (953 instructions, 2.22%)</title><rect x="8.6866%" y="117" width="2.2236%" height="15" fill="rgb(234,122,0)" fg:x="3723" fg:w="953"/><text x="8.9796%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,256 instructions, 2.93%)</title><rect x="8.3086%" y="133" width="2.9305%" height="15" fill="rgb(207,146,38)" fg:x="3561" fg:w="1256"/><text x="8.6016%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,492 instructions, 3.48%)</title><rect x="8.0963%" y="149" width="3.4812%" height="15" fill="rgb(207,177,25)" fg:x="3470" fg:w="1492"/><text x="8.3893%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="11.5775%" y="149" width="0.1937%" height="15" fill="rgb(211,178,42)" fg:x="4962" fg:w="83"/><text x="11.8705%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="11.7712%" y="149" width="0.1470%" height="15" fill="rgb(230,69,54)" fg:x="5045" fg:w="63"/><text x="12.0641%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="11.9182%" y="149" width="0.1773%" height="15" fill="rgb(214,135,41)" fg:x="5108" fg:w="76"/><text x="12.2111%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.0955%" y="117" width="0.2123%" height="15" fill="rgb(237,67,25)" fg:x="5184" fg:w="91"/><text x="12.3884%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="12.0955%" y="133" width="0.3127%" height="15" fill="rgb(222,189,50)" fg:x="5184" fg:w="134"/><text x="12.3884%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.50%)</title><rect x="12.0955%" y="149" width="0.5040%" height="15" fill="rgb(245,148,34)" fg:x="5184" fg:w="216"/><text x="12.3884%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="12.5995%" y="149" width="0.1400%" height="15" fill="rgb(222,29,6)" fg:x="5400" fg:w="60"/><text x="12.8924%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.7394%" y="149" width="0.2123%" height="15" fill="rgb(221,189,43)" fg:x="5460" fg:w="91"/><text x="13.0324%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.9518%" y="133" width="0.2123%" height="15" fill="rgb(207,36,27)" fg:x="5551" fg:w="91"/><text x="13.2447%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="13.1641%" y="101" width="0.3057%" height="15" fill="rgb(217,90,24)" fg:x="5642" fg:w="131"/><text x="13.4571%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (162 instructions, 0.38%)</title><rect x="13.1641%" y="117" width="0.3780%" height="15" fill="rgb(224,66,35)" fg:x="5642" fg:w="162"/><text x="13.4571%" y="127.50"></text></g><g><title>__rust_realloc (86 instructions, 0.20%)</title><rect x="13.5421%" y="37" width="0.2007%" height="15" fill="rgb(221,13,50)" fg:x="5804" fg:w="86"/><text x="13.8350%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.31%)</title><rect x="13.5421%" y="53" width="0.3057%" height="15" fill="rgb(236,68,49)" fg:x="5804" fg:w="131"/><text x="13.8350%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.51%)</title><rect x="13.5421%" y="69" width="0.5110%" height="15" fill="rgb(229,146,28)" fg:x="5804" fg:w="219"/><text x="13.8350%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.37%)</title><rect x="14.0531%" y="69" width="0.3733%" height="15" fill="rgb(225,31,38)" fg:x="6023" fg:w="160"/><text x="14.3460%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 0.98%)</title><rect x="13.5421%" y="85" width="0.9823%" height="15" fill="rgb(250,208,3)" fg:x="5804" fg:w="421"/><text x="13.8350%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="14.5244%" y="53" width="0.0257%" height="15" fill="rgb(246,54,23)" fg:x="6225" fg:w="11"/><text x="14.8173%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="14.5500%" y="37" width="0.0817%" height="15" fill="rgb(243,76,11)" fg:x="6236" fg:w="35"/><text x="14.8430%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="14.5500%" y="53" width="0.1540%" height="15" fill="rgb(245,21,50)" fg:x="6236" fg:w="66"/><text x="14.8430%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="14.5244%" y="69" width="0.3430%" height="15" fill="rgb(228,9,43)" fg:x="6225" fg:w="147"/><text x="14.8173%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (216 instructions, 0.50%)</title><rect x="14.5244%" y="85" width="0.5040%" height="15" fill="rgb(208,100,47)" fg:x="6225" fg:w="216"/><text x="14.8173%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="15.0283%" y="69" width="0.1190%" height="15" fill="rgb(232,26,8)" fg:x="6441" fg:w="51"/><text x="15.3213%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (82 instructions, 0.19%)</title><rect x="15.0283%" y="85" width="0.1913%" height="15" fill="rgb(216,166,38)" fg:x="6441" fg:w="82"/><text x="15.3213%" y="95.50"></text></g><g><title>core::fmt::write (887 instructions, 2.07%)</title><rect x="13.5421%" y="101" width="2.0696%" height="15" fill="rgb(251,202,51)" fg:x="5804" fg:w="887"/><text x="13.8350%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (953 instructions, 2.22%)</title><rect x="13.5421%" y="117" width="2.2236%" height="15" fill="rgb(254,216,34)" fg:x="5804" fg:w="953"/><text x="13.8350%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,256 instructions, 2.93%)</title><rect x="13.1641%" y="133" width="2.9305%" height="15" fill="rgb(251,32,27)" fg:x="5642" fg:w="1256"/><text x="13.4571%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,492 instructions, 3.48%)</title><rect x="12.9518%" y="149" width="3.4812%" height="15" fill="rgb(208,127,28)" fg:x="5551" fg:w="1492"/><text x="13.2447%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="16.4330%" y="149" width="0.1937%" height="15" fill="rgb(224,137,22)" fg:x="7043" fg:w="83"/><text x="16.7259%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="16.6266%" y="149" width="0.1470%" height="15" fill="rgb(254,70,32)" fg:x="7126" fg:w="63"/><text x="16.9196%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="16.7736%" y="149" width="0.1773%" height="15" fill="rgb(229,75,37)" fg:x="7189" fg:w="76"/><text x="17.0666%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="16.9509%" y="149" width="0.1400%" height="15" fill="rgb(252,64,23)" fg:x="7265" fg:w="60"/><text x="17.2439%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="17.0909%" y="133" width="0.1913%" height="15" fill="rgb(232,162,48)" fg:x="7325" fg:w="82"/><text x="17.3839%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="17.2823%" y="133" width="0.1633%" height="15" fill="rgb(246,160,12)" fg:x="7407" fg:w="70"/><text x="17.5752%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="17.4456%" y="117" width="0.0140%" height="15" fill="rgb(247,166,0)" fg:x="7477" fg:w="6"/><text x="17.7385%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 1.03%)</title><rect x="17.4456%" y="133" width="1.0266%" height="15" fill="rgb(249,219,21)" fg:x="7477" fg:w="440"/><text x="17.7385%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="18.4722%" y="133" width="0.0443%" height="15" fill="rgb(205,209,3)" fg:x="7917" fg:w="19"/><text x="18.7652%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="18.5165%" y="117" width="0.2123%" height="15" fill="rgb(243,44,1)" fg:x="7936" fg:w="91"/><text x="18.8095%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="18.7289%" y="85" width="0.1563%" height="15" fill="rgb(206,159,16)" fg:x="8027" fg:w="67"/><text x="19.0218%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.23%)</title><rect x="18.7289%" y="101" width="0.2287%" height="15" fill="rgb(244,77,30)" fg:x="8027" fg:w="98"/><text x="19.0218%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="18.9575%" y="53" width="0.0257%" height="15" fill="rgb(218,69,12)" fg:x="8125" fg:w="11"/><text x="19.2505%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="18.9832%" y="37" width="0.0817%" height="15" fill="rgb(212,87,7)" fg:x="8136" fg:w="35"/><text x="19.2761%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="18.9832%" y="53" width="0.1540%" height="15" fill="rgb(245,114,25)" fg:x="8136" fg:w="66"/><text x="19.2761%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="18.9575%" y="69" width="0.3430%" height="15" fill="rgb(210,61,42)" fg:x="8125" fg:w="147"/><text x="19.2505%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.49%)</title><rect x="18.9575%" y="85" width="0.4946%" height="15" fill="rgb(211,52,33)" fg:x="8125" fg:w="212"/><text x="19.2505%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.52%)</title><rect x="18.9575%" y="101" width="0.5180%" height="15" fill="rgb(234,58,33)" fg:x="8125" fg:w="222"/><text x="19.2505%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 1.08%)</title><rect x="18.7289%" y="117" width="1.0756%" height="15" fill="rgb(220,115,36)" fg:x="8027" fg:w="461"/><text x="19.0218%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.63%)</title><rect x="18.5165%" y="133" width="1.6263%" height="15" fill="rgb(243,153,54)" fg:x="7936" fg:w="697"/><text x="18.8095%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="20.1428%" y="133" width="0.2217%" height="15" fill="rgb(251,47,18)" fg:x="8633" fg:w="95"/><text x="20.4358%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="20.3645%" y="133" width="0.1470%" height="15" fill="rgb(242,102,42)" fg:x="8728" fg:w="63"/><text x="20.6574%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="20.5114%" y="117" width="0.1913%" height="15" fill="rgb(234,31,38)" fg:x="8791" fg:w="82"/><text x="20.8044%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.69%)</title><rect x="20.7028%" y="117" width="0.6860%" height="15" fill="rgb(221,117,51)" fg:x="8873" fg:w="294"/><text x="20.9957%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="21.3887%" y="101" width="0.1913%" height="15" fill="rgb(212,20,18)" fg:x="9167" fg:w="82"/><text x="21.6817%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="21.5801%" y="101" width="0.2217%" height="15" fill="rgb(245,133,36)" fg:x="9249" fg:w="95"/><text x="21.8730%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="21.8017%" y="101" width="0.1773%" height="15" fill="rgb(212,6,19)" fg:x="9344" fg:w="76"/><text x="22.0947%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.77%)</title><rect x="21.3887%" y="117" width="0.7700%" height="15" fill="rgb(218,1,36)" fg:x="9167" fg:w="330"/><text x="21.6817%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="22.1587%" y="117" width="0.1773%" height="15" fill="rgb(246,84,54)" fg:x="9497" fg:w="76"/><text x="22.4517%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (930 instructions, 2.17%)</title><rect x="20.5114%" y="133" width="2.1699%" height="15" fill="rgb(242,110,6)" fg:x="8791" fg:w="930"/><text x="20.8044%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="22.6814%" y="133" width="0.2123%" height="15" fill="rgb(214,47,5)" fg:x="9721" fg:w="91"/><text x="22.9743%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.06%)</title><rect x="22.8937%" y="133" width="0.0607%" height="15" fill="rgb(218,159,25)" fg:x="9812" fg:w="26"/><text x="23.1866%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="22.9543%" y="133" width="0.1773%" height="15" fill="rgb(215,211,28)" fg:x="9838" fg:w="76"/><text x="23.2473%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,940 instructions, 6.86%)</title><rect x="17.0909%" y="149" width="6.8597%" height="15" fill="rgb(238,59,32)" fg:x="7325" fg:w="2940"/><text x="17.3839%" y="159.50">&lt;candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="23.9530%" y="133" width="0.2007%" height="15" fill="rgb(226,82,3)" fg:x="10266" fg:w="86"/><text x="24.2459%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.20%)</title><rect x="24.2446%" y="133" width="0.1960%" height="15" fill="rgb(240,164,32)" fg:x="10391" fg:w="84"/><text x="24.5376%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (248 instructions, 0.58%)</title><rect x="23.9506%" y="149" width="0.5786%" height="15" fill="rgb(232,46,7)" fg:x="10265" fg:w="248"/><text x="24.2436%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.42%)</title><rect x="24.5293%" y="149" width="0.4176%" height="15" fill="rgb(229,129,53)" fg:x="10513" fg:w="179"/><text x="24.8222%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,117 instructions, 18.94%)</title><rect x="7.7440%" y="165" width="18.9388%" height="15" fill="rgb(234,188,29)" fg:x="3319" fg:w="8117"/><text x="8.0370%" y="175.50">&lt;candid::binary_parser::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.16%)</title><rect x="26.6828%" y="165" width="0.1633%" height="15" fill="rgb(246,141,4)" fg:x="11436" fg:w="70"/><text x="26.9758%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="26.8462%" y="165" width="0.1773%" height="15" fill="rgb(229,23,39)" fg:x="11506" fg:w="76"/><text x="27.1391%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="27.0235%" y="165" width="0.1633%" height="15" fill="rgb(206,12,3)" fg:x="11582" fg:w="70"/><text x="27.3165%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.1868%" y="133" width="0.0140%" height="15" fill="rgb(252,226,20)" fg:x="11652" fg:w="6"/><text x="27.4798%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 1.03%)</title><rect x="27.1868%" y="149" width="1.0266%" height="15" fill="rgb(216,123,35)" fg:x="11652" fg:w="440"/><text x="27.4798%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="28.2134%" y="149" width="0.0443%" height="15" fill="rgb(212,68,40)" fg:x="12092" fg:w="19"/><text x="28.5064%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.28%)</title><rect x="28.2578%" y="133" width="0.2823%" height="15" fill="rgb(254,125,32)" fg:x="12111" fg:w="121"/><text x="28.5507%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="28.5401%" y="101" width="0.1563%" height="15" fill="rgb(253,97,22)" fg:x="12232" fg:w="67"/><text x="28.8331%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.23%)</title><rect x="28.5401%" y="117" width="0.2287%" height="15" fill="rgb(241,101,14)" fg:x="12232" fg:w="98"/><text x="28.8331%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="28.7688%" y="69" width="0.0257%" height="15" fill="rgb(238,103,29)" fg:x="12330" fg:w="11"/><text x="29.0617%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="28.7944%" y="53" width="0.0817%" height="15" fill="rgb(233,195,47)" fg:x="12341" fg:w="35"/><text x="29.0874%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="28.7944%" y="69" width="0.1540%" height="15" fill="rgb(246,218,30)" fg:x="12341" fg:w="66"/><text x="29.0874%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="28.7688%" y="85" width="0.3430%" height="15" fill="rgb(219,145,47)" fg:x="12330" fg:w="147"/><text x="29.0617%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.49%)</title><rect x="28.7688%" y="101" width="0.4946%" height="15" fill="rgb(243,12,26)" fg:x="12330" fg:w="212"/><text x="29.0617%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.52%)</title><rect x="28.7688%" y="117" width="0.5180%" height="15" fill="rgb(214,87,16)" fg:x="12330" fg:w="222"/><text x="29.0617%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 1.08%)</title><rect x="28.5401%" y="133" width="1.0756%" height="15" fill="rgb(208,99,42)" fg:x="12232" fg:w="461"/><text x="28.8331%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (727 instructions, 1.70%)</title><rect x="28.2578%" y="149" width="1.6963%" height="15" fill="rgb(253,99,2)" fg:x="12111" fg:w="727"/><text x="28.5507%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="29.9540%" y="149" width="0.2217%" height="15" fill="rgb(220,168,23)" fg:x="12838" fg:w="95"/><text x="30.2470%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="30.1757%" y="149" width="0.1400%" height="15" fill="rgb(242,38,24)" fg:x="12933" fg:w="60"/><text x="30.4687%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="30.3157%" y="133" width="0.1913%" height="15" fill="rgb(225,182,9)" fg:x="12993" fg:w="82"/><text x="30.6087%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="30.5070%" y="133" width="0.2217%" height="15" fill="rgb(243,178,37)" fg:x="13075" fg:w="95"/><text x="30.8000%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="30.7287%" y="133" width="0.1773%" height="15" fill="rgb(232,139,19)" fg:x="13170" fg:w="76"/><text x="31.0216%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.77%)</title><rect x="30.3157%" y="149" width="0.7700%" height="15" fill="rgb(225,201,24)" fg:x="12993" fg:w="330"/><text x="30.6087%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="31.0857%" y="149" width="0.1937%" height="15" fill="rgb(221,47,46)" fg:x="13323" fg:w="83"/><text x="31.3786%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,999 instructions, 4.66%)</title><rect x="27.1868%" y="165" width="4.6641%" height="15" fill="rgb(249,23,13)" fg:x="11652" fg:w="1999"/><text x="27.4798%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="31.8510%" y="165" width="0.1773%" height="15" fill="rgb(219,9,5)" fg:x="13651" fg:w="76"/><text x="32.1439%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="32.0283%" y="165" width="0.1937%" height="15" fill="rgb(254,171,16)" fg:x="13727" fg:w="83"/><text x="32.3212%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="32.2219%" y="149" width="0.1937%" height="15" fill="rgb(230,171,20)" fg:x="13810" fg:w="83"/><text x="32.5149%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.42%)</title><rect x="32.2219%" y="165" width="0.4176%" height="15" fill="rgb(210,71,41)" fg:x="13810" fg:w="179"/><text x="32.5149%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.18%)</title><rect x="32.6396%" y="133" width="0.1797%" height="15" fill="rgb(206,173,20)" fg:x="13989" fg:w="77"/><text x="32.9326%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.28%)</title><rect x="32.6396%" y="149" width="0.2800%" height="15" fill="rgb(233,88,34)" fg:x="13989" fg:w="120"/><text x="32.9326%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (202 instructions, 0.47%)</title><rect x="32.6396%" y="165" width="0.4713%" height="15" fill="rgb(223,209,46)" fg:x="13989" fg:w="202"/><text x="32.9326%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="33.1109%" y="165" width="0.2123%" height="15" fill="rgb(250,43,18)" fg:x="14191" fg:w="91"/><text x="33.4039%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="33.3232%" y="149" width="0.2123%" height="15" fill="rgb(208,13,10)" fg:x="14282" fg:w="91"/><text x="33.6162%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="33.5355%" y="117" width="0.2310%" height="15" fill="rgb(212,200,36)" fg:x="14373" fg:w="99"/><text x="33.8285%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.30%)</title><rect x="33.5355%" y="133" width="0.3033%" height="15" fill="rgb(225,90,30)" fg:x="14373" fg:w="130"/><text x="33.8285%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="33.8389%" y="85" width="0.0257%" height="15" fill="rgb(236,182,39)" fg:x="14503" fg:w="11"/><text x="34.1318%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="33.8645%" y="69" width="0.0817%" height="15" fill="rgb(212,144,35)" fg:x="14514" fg:w="35"/><text x="34.1575%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="33.8645%" y="85" width="0.1540%" height="15" fill="rgb(228,63,44)" fg:x="14514" fg:w="66"/><text x="34.1575%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="33.8389%" y="101" width="0.3430%" height="15" fill="rgb(228,109,6)" fg:x="14503" fg:w="147"/><text x="34.1318%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.49%)</title><rect x="33.8389%" y="117" width="0.4946%" height="15" fill="rgb(238,117,24)" fg:x="14503" fg:w="212"/><text x="34.1318%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.54%)</title><rect x="33.8389%" y="133" width="0.5413%" height="15" fill="rgb(242,26,26)" fg:x="14503" fg:w="232"/><text x="34.1318%" y="143.50"></text></g><g><title>core::fmt::write (503 instructions, 1.17%)</title><rect x="33.5355%" y="149" width="1.1736%" height="15" fill="rgb(221,92,48)" fg:x="14373" fg:w="503"/><text x="33.8285%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (739 instructions, 1.72%)</title><rect x="33.3232%" y="165" width="1.7243%" height="15" fill="rgb(209,209,32)" fg:x="14282" fg:w="739"/><text x="33.6162%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.0475%" y="149" width="0.2123%" height="15" fill="rgb(221,70,22)" fg:x="15021" fg:w="91"/><text x="35.3405%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (158 instructions, 0.37%)</title><rect x="35.0475%" y="165" width="0.3687%" height="15" fill="rgb(248,145,5)" fg:x="15021" fg:w="158"/><text x="35.3405%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.24%)</title><rect x="35.4161%" y="165" width="0.2380%" height="15" fill="rgb(226,116,26)" fg:x="15179" fg:w="102"/><text x="35.7091%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="35.6541%" y="165" width="0.0350%" height="15" fill="rgb(244,5,17)" fg:x="15281" fg:w="15"/><text x="35.9471%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.24%)</title><rect x="35.6891%" y="165" width="0.2380%" height="15" fill="rgb(252,159,33)" fg:x="15296" fg:w="102"/><text x="35.9821%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.9271%" y="149" width="0.2123%" height="15" fill="rgb(206,71,0)" fg:x="15398" fg:w="91"/><text x="36.2201%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (131 instructions, 0.31%)</title><rect x="35.9271%" y="165" width="0.3057%" height="15" fill="rgb(233,118,54)" fg:x="15398" fg:w="131"/><text x="36.2201%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.07%)</title><rect x="36.2328%" y="149" width="0.0723%" height="15" fill="rgb(234,83,48)" fg:x="15529" fg:w="31"/><text x="36.5257%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (112 instructions, 0.26%)</title><rect x="36.2328%" y="165" width="0.2613%" height="15" fill="rgb(228,3,54)" fg:x="15529" fg:w="112"/><text x="36.5257%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.04%)</title><rect x="36.4941%" y="165" width="0.0420%" height="15" fill="rgb(226,155,13)" fg:x="15641" fg:w="18"/><text x="36.7871%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="36.7461%" y="149" width="0.1470%" height="15" fill="rgb(241,28,37)" fg:x="15749" fg:w="63"/><text x="37.0390%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (187 instructions, 0.44%)</title><rect x="36.5361%" y="165" width="0.4363%" height="15" fill="rgb(233,93,10)" fg:x="15659" fg:w="187"/><text x="36.8291%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="36.9724%" y="165" width="0.0350%" height="15" fill="rgb(225,113,19)" fg:x="15846" fg:w="15"/><text x="37.2654%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="37.0074%" y="165" width="0.0210%" height="15" fill="rgb(241,2,18)" fg:x="15861" fg:w="9"/><text x="37.3004%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.04%)</title><rect x="37.0284%" y="165" width="0.0420%" height="15" fill="rgb(228,207,21)" fg:x="15870" fg:w="18"/><text x="37.3214%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="37.0704%" y="133" width="0.2123%" height="15" fill="rgb(213,211,35)" fg:x="15888" fg:w="91"/><text x="37.3634%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="37.2827%" y="101" width="0.2310%" height="15" fill="rgb(209,83,10)" fg:x="15979" fg:w="99"/><text x="37.5757%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (130 instructions, 0.30%)</title><rect x="37.2827%" y="117" width="0.3033%" height="15" fill="rgb(209,164,1)" fg:x="15979" fg:w="130"/><text x="37.5757%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="37.5860%" y="69" width="0.0257%" height="15" fill="rgb(213,184,43)" fg:x="16109" fg:w="11"/><text x="37.8790%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="37.6117%" y="53" width="0.0817%" height="15" fill="rgb(231,61,34)" fg:x="16120" fg:w="35"/><text x="37.9047%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.15%)</title><rect x="37.6117%" y="69" width="0.1540%" height="15" fill="rgb(235,75,3)" fg:x="16120" fg:w="66"/><text x="37.9047%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.34%)</title><rect x="37.5860%" y="85" width="0.3430%" height="15" fill="rgb(220,106,47)" fg:x="16109" fg:w="147"/><text x="37.8790%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.49%)</title><rect x="37.5860%" y="101" width="0.4946%" height="15" fill="rgb(210,196,33)" fg:x="16109" fg:w="212"/><text x="37.8790%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (232 instructions, 0.54%)</title><rect x="37.5860%" y="117" width="0.5413%" height="15" fill="rgb(229,154,42)" fg:x="16109" fg:w="232"/><text x="37.8790%" y="127.50"></text></g><g><title>core::fmt::write (503 instructions, 1.17%)</title><rect x="37.2827%" y="133" width="1.1736%" height="15" fill="rgb(228,114,26)" fg:x="15979" fg:w="503"/><text x="37.5757%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (739 instructions, 1.72%)</title><rect x="37.0704%" y="149" width="1.7243%" height="15" fill="rgb(208,144,1)" fg:x="15888" fg:w="739"/><text x="37.3634%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="38.7947%" y="149" width="0.2123%" height="15" fill="rgb(239,112,37)" fg:x="16627" fg:w="91"/><text x="39.0876%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (956 instructions, 2.23%)</title><rect x="37.0704%" y="165" width="2.2306%" height="15" fill="rgb(210,96,50)" fg:x="15888" fg:w="956"/><text x="37.3634%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.3010%" y="133" width="0.2123%" height="15" fill="rgb(222,178,2)" fg:x="16844" fg:w="91"/><text x="39.5939%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="39.3010%" y="149" width="0.3127%" height="15" fill="rgb(226,74,18)" fg:x="16844" fg:w="134"/><text x="39.5939%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.50%)</title><rect x="39.3010%" y="165" width="0.5040%" height="15" fill="rgb(225,67,54)" fg:x="16844" fg:w="216"/><text x="39.5939%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.8049%" y="165" width="0.2123%" height="15" fill="rgb(251,92,32)" fg:x="17060" fg:w="91"/><text x="40.0979%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="40.0173%" y="165" width="0.2007%" height="15" fill="rgb(228,149,22)" fg:x="17151" fg:w="86"/><text x="40.3102%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.2179%" y="165" width="0.2123%" height="15" fill="rgb(243,54,13)" fg:x="17237" fg:w="91"/><text x="40.5109%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.4302%" y="165" width="0.2123%" height="15" fill="rgb(243,180,28)" fg:x="17328" fg:w="91"/><text x="40.7232%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="40.6426%" y="149" width="0.2007%" height="15" fill="rgb(208,167,24)" fg:x="17419" fg:w="86"/><text x="40.9355%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (127 instructions, 0.30%)</title><rect x="40.6426%" y="165" width="0.2963%" height="15" fill="rgb(245,73,45)" fg:x="17419" fg:w="127"/><text x="40.9355%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.16%)</title><rect x="40.9389%" y="149" width="0.1563%" height="15" fill="rgb(237,203,48)" fg:x="17546" fg:w="67"/><text x="41.2319%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (184 instructions, 0.43%)</title><rect x="40.9389%" y="165" width="0.4293%" height="15" fill="rgb(211,197,16)" fg:x="17546" fg:w="184"/><text x="41.2319%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="41.3682%" y="165" width="0.2007%" height="15" fill="rgb(243,99,51)" fg:x="17730" fg:w="86"/><text x="41.6612%" y="175.50"></text></g><g><title>memcpy (428 instructions, 1.00%)</title><rect x="41.5689%" y="165" width="0.9986%" height="15" fill="rgb(215,123,29)" fg:x="17816" fg:w="428"/><text x="41.8618%" y="175.50"></text></g><g><title>memcpy (428 instructions, 1.00%)</title><rect x="42.5675%" y="165" width="0.9986%" height="15" fill="rgb(239,186,37)" fg:x="18244" fg:w="428"/><text x="42.8605%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (19,755 instructions, 46.09%)</title><rect x="2.1536%" y="181" width="46.0930%" height="15" fill="rgb(252,136,39)" fg:x="923" fg:w="19755"/><text x="2.4465%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (380 instructions, 0.89%)</title><rect x="48.2466%" y="181" width="0.8866%" height="15" fill="rgb(223,213,32)" fg:x="20678" fg:w="380"/><text x="48.5395%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (51 instructions, 0.12%)</title><rect x="49.1332%" y="165" width="0.1190%" height="15" fill="rgb(233,115,5)" fg:x="21058" fg:w="51"/><text x="49.4262%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (100 instructions, 0.23%)</title><rect x="49.1332%" y="181" width="0.2333%" height="15" fill="rgb(207,226,44)" fg:x="21058" fg:w="100"/><text x="49.4262%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.14%)</title><rect x="49.3665%" y="165" width="0.1447%" height="15" fill="rgb(208,126,0)" fg:x="21158" fg:w="62"/><text x="49.6595%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.42%)</title><rect x="49.3665%" y="181" width="0.4246%" height="15" fill="rgb(244,66,21)" fg:x="21158" fg:w="182"/><text x="49.6595%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="49.7912%" y="165" width="0.0327%" height="15" fill="rgb(222,97,12)" fg:x="21340" fg:w="14"/><text x="50.0841%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="49.8238%" y="149" width="0.1377%" height="15" fill="rgb(219,213,19)" fg:x="21354" fg:w="59"/><text x="50.1168%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.74%)</title><rect x="49.9615%" y="149" width="0.7420%" height="15" fill="rgb(252,169,30)" fg:x="21413" fg:w="318"/><text x="50.2545%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="50.7035%" y="149" width="0.1820%" height="15" fill="rgb(206,32,51)" fg:x="21731" fg:w="78"/><text x="50.9964%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.65%)</title><rect x="49.8238%" y="165" width="1.6519%" height="15" fill="rgb(250,172,42)" fg:x="21354" fg:w="708"/><text x="50.1168%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="51.4758%" y="165" width="0.1937%" height="15" fill="rgb(209,34,43)" fg:x="22062" fg:w="83"/><text x="51.7687%" y="175.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="51.6694%" y="165" width="0.3547%" height="15" fill="rgb(223,11,35)" fg:x="22145" fg:w="152"/><text x="51.9624%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,354 instructions, 3.16%)</title><rect x="49.7912%" y="181" width="3.1592%" height="15" fill="rgb(251,219,26)" fg:x="21340" fg:w="1354"/><text x="50.0841%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="52.9504%" y="181" width="0.1913%" height="15" fill="rgb(231,119,3)" fg:x="22694" fg:w="82"/><text x="53.2433%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.1417%" y="181" width="0.1937%" height="15" fill="rgb(216,97,11)" fg:x="22776" fg:w="83"/><text x="53.4347%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="53.3354%" y="181" width="0.1913%" height="15" fill="rgb(223,59,9)" fg:x="22859" fg:w="82"/><text x="53.6283%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="53.5267%" y="149" width="0.0327%" height="15" fill="rgb(233,93,31)" fg:x="22941" fg:w="14"/><text x="53.8196%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="53.5593%" y="133" width="0.1377%" height="15" fill="rgb(239,81,33)" fg:x="22955" fg:w="59"/><text x="53.8523%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.74%)</title><rect x="53.6970%" y="133" width="0.7420%" height="15" fill="rgb(213,120,34)" fg:x="23014" fg:w="318"/><text x="53.9900%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="54.4390%" y="133" width="0.1820%" height="15" fill="rgb(243,49,53)" fg:x="23332" fg:w="78"/><text x="54.7319%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.65%)</title><rect x="53.5593%" y="149" width="1.6519%" height="15" fill="rgb(247,216,33)" fg:x="22955" fg:w="708"/><text x="53.8523%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.99%)</title><rect x="53.5267%" y="165" width="1.9926%" height="15" fill="rgb(226,26,14)" fg:x="22941" fg:w="854"/><text x="53.8196%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="55.5193%" y="165" width="0.1937%" height="15" fill="rgb(215,49,53)" fg:x="23795" fg:w="83"/><text x="55.8122%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="55.7129%" y="149" width="0.0327%" height="15" fill="rgb(245,162,40)" fg:x="23878" fg:w="14"/><text x="56.0059%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="55.7456%" y="133" width="0.1377%" height="15" fill="rgb(229,68,17)" fg:x="23892" fg:w="59"/><text x="56.0386%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.74%)</title><rect x="55.8832%" y="133" width="0.7420%" height="15" fill="rgb(213,182,10)" fg:x="23951" fg:w="318"/><text x="56.1762%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="56.6252%" y="133" width="0.1820%" height="15" fill="rgb(245,125,30)" fg:x="24269" fg:w="78"/><text x="56.9182%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.65%)</title><rect x="55.7456%" y="149" width="1.6519%" height="15" fill="rgb(232,202,2)" fg:x="23892" fg:w="708"/><text x="56.0386%" y="159.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 2.22%)</title><rect x="55.7129%" y="165" width="2.2166%" height="15" fill="rgb(237,140,51)" fg:x="23878" fg:w="950"/><text x="56.0059%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="57.9295%" y="165" width="0.1937%" height="15" fill="rgb(236,157,25)" fg:x="24828" fg:w="83"/><text x="58.2225%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="58.1231%" y="149" width="0.0327%" height="15" fill="rgb(219,209,0)" fg:x="24911" fg:w="14"/><text x="58.4161%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="58.1558%" y="133" width="0.1377%" height="15" fill="rgb(240,116,54)" fg:x="24925" fg:w="59"/><text x="58.4488%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.74%)</title><rect x="58.2935%" y="133" width="0.7420%" height="15" fill="rgb(216,10,36)" fg:x="24984" fg:w="318"/><text x="58.5864%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="59.0354%" y="133" width="0.1820%" height="15" fill="rgb(222,72,44)" fg:x="25302" fg:w="78"/><text x="59.3284%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.65%)</title><rect x="58.1558%" y="149" width="1.6519%" height="15" fill="rgb(232,159,9)" fg:x="24925" fg:w="708"/><text x="58.4488%" y="159.50"></text></g><g><title>memcmp (491 instructions, 1.15%)</title><rect x="59.8077%" y="149" width="1.1456%" height="15" fill="rgb(210,39,32)" fg:x="25633" fg:w="491"/><text x="60.1007%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="60.9534%" y="133" width="0.2007%" height="15" fill="rgb(216,194,45)" fg:x="26124" fg:w="86"/><text x="61.2463%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.28%)</title><rect x="60.9534%" y="149" width="0.2823%" height="15" fill="rgb(218,18,35)" fg:x="26124" fg:w="121"/><text x="61.2463%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 3.57%)</title><rect x="58.1231%" y="165" width="3.5675%" height="15" fill="rgb(207,83,51)" fg:x="24911" fg:w="1529"/><text x="58.4161%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="61.6907%" y="117" width="0.1377%" height="15" fill="rgb(225,63,43)" fg:x="26440" fg:w="59"/><text x="61.9836%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.22%)</title><rect x="61.6907%" y="133" width="0.2193%" height="15" fill="rgb(207,57,36)" fg:x="26440" fg:w="94"/><text x="61.9836%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.73%)</title><rect x="61.6907%" y="149" width="0.7350%" height="15" fill="rgb(216,99,33)" fg:x="26440" fg:w="315"/><text x="61.9836%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="62.4256%" y="149" width="0.2123%" height="15" fill="rgb(225,42,16)" fg:x="26755" fg:w="91"/><text x="62.7186%" y="159.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="62.6380%" y="149" width="0.3547%" height="15" fill="rgb(220,201,45)" fg:x="26846" fg:w="152"/><text x="62.9309%" y="159.50"></text></g><g><title>candid::types::internal::env_id (1,017 instructions, 2.37%)</title><rect x="61.6907%" y="165" width="2.3729%" height="15" fill="rgb(225,33,4)" fg:x="26440" fg:w="1017"/><text x="61.9836%" y="175.50">c..</text></g><g><title>candid::types::CandidType::ty (4,645 instructions, 10.84%)</title><rect x="53.5267%" y="181" width="10.8379%" height="15" fill="rgb(224,33,50)" fg:x="22941" fg:w="4645"/><text x="53.8196%" y="191.50">candid::types..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.19%)</title><rect x="64.3645%" y="181" width="0.1913%" height="15" fill="rgb(246,198,51)" fg:x="27586" fg:w="82"/><text x="64.6575%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="64.5559%" y="165" width="0.0327%" height="15" fill="rgb(205,22,4)" fg:x="27668" fg:w="14"/><text x="64.8488%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="64.5885%" y="149" width="0.1377%" height="15" fill="rgb(206,3,8)" fg:x="27682" fg:w="59"/><text x="64.8815%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.74%)</title><rect x="64.7262%" y="149" width="0.7420%" height="15" fill="rgb(251,23,15)" fg:x="27741" fg:w="318"/><text x="65.0192%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="65.4682%" y="149" width="0.1820%" height="15" fill="rgb(252,88,28)" fg:x="28059" fg:w="78"/><text x="65.7611%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.65%)</title><rect x="64.5885%" y="165" width="1.6519%" height="15" fill="rgb(212,127,14)" fg:x="27682" fg:w="708"/><text x="64.8815%" y="175.50"></text></g><g><title>memcmp (491 instructions, 1.15%)</title><rect x="66.2405%" y="165" width="1.1456%" height="15" fill="rgb(247,145,37)" fg:x="28390" fg:w="491"/><text x="66.5334%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="67.3861%" y="149" width="0.2007%" height="15" fill="rgb(209,117,53)" fg:x="28881" fg:w="86"/><text x="67.6790%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.28%)</title><rect x="67.3861%" y="165" width="0.2823%" height="15" fill="rgb(212,90,42)" fg:x="28881" fg:w="121"/><text x="67.6790%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 3.57%)</title><rect x="64.5559%" y="181" width="3.5675%" height="15" fill="rgb(218,164,37)" fg:x="27668" fg:w="1529"/><text x="64.8488%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="68.1234%" y="133" width="0.1377%" height="15" fill="rgb(246,65,34)" fg:x="29197" fg:w="59"/><text x="68.4164%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.38%)</title><rect x="68.2610%" y="133" width="0.3827%" height="15" fill="rgb(231,100,33)" fg:x="29256" fg:w="164"/><text x="68.5540%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="68.6437%" y="117" width="0.1377%" height="15" fill="rgb(228,126,14)" fg:x="29420" fg:w="59"/><text x="68.9367%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.22%)</title><rect x="68.6437%" y="133" width="0.2170%" height="15" fill="rgb(215,173,21)" fg:x="29420" fg:w="93"/><text x="68.9367%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.94%)</title><rect x="68.1234%" y="149" width="0.9450%" height="15" fill="rgb(210,6,40)" fg:x="29197" fg:w="405"/><text x="68.4164%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="69.5840%" y="133" width="0.1377%" height="15" fill="rgb(212,48,18)" fg:x="29823" fg:w="59"/><text x="69.8770%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.38%)</title><rect x="69.7216%" y="133" width="0.3827%" height="15" fill="rgb(230,214,11)" fg:x="29882" fg:w="164"/><text x="70.0146%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="70.1043%" y="117" width="0.1377%" height="15" fill="rgb(254,105,39)" fg:x="30046" fg:w="59"/><text x="70.3973%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.22%)</title><rect x="70.1043%" y="133" width="0.2170%" height="15" fill="rgb(245,158,5)" fg:x="30046" fg:w="93"/><text x="70.3973%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.94%)</title><rect x="69.5840%" y="149" width="0.9450%" height="15" fill="rgb(249,208,11)" fg:x="29823" fg:w="405"/><text x="69.8770%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,252 instructions, 2.92%)</title><rect x="68.1234%" y="165" width="2.9212%" height="15" fill="rgb(210,39,28)" fg:x="29197" fg:w="1252"/><text x="68.4164%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,582 instructions, 3.69%)</title><rect x="68.1234%" y="181" width="3.6912%" height="15" fill="rgb(211,56,53)" fg:x="29197" fg:w="1582"/><text x="68.4164%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.12%)</title><rect x="71.8146%" y="181" width="0.1237%" height="15" fill="rgb(226,201,30)" fg:x="30779" fg:w="53"/><text x="72.1075%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.20%)</title><rect x="71.9382%" y="165" width="0.1960%" height="15" fill="rgb(239,101,34)" fg:x="30832" fg:w="84"/><text x="72.2312%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.30%)</title><rect x="72.2159%" y="165" width="0.3033%" height="15" fill="rgb(226,209,5)" fg:x="30951" fg:w="130"/><text x="72.5088%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (284 instructions, 0.66%)</title><rect x="71.9382%" y="181" width="0.6626%" height="15" fill="rgb(250,105,47)" fg:x="30832" fg:w="284"/><text x="72.2312%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="72.6009%" y="117" width="0.3407%" height="15" fill="rgb(230,72,3)" fg:x="31116" fg:w="146"/><text x="72.8938%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (254 instructions, 0.59%)</title><rect x="72.6009%" y="133" width="0.5926%" height="15" fill="rgb(232,218,39)" fg:x="31116" fg:w="254"/><text x="72.8938%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (342 instructions, 0.80%)</title><rect x="72.6009%" y="149" width="0.7980%" height="15" fill="rgb(248,166,6)" fg:x="31116" fg:w="342"/><text x="72.8938%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="73.3988%" y="149" width="0.0303%" height="15" fill="rgb(247,89,20)" fg:x="31458" fg:w="13"/><text x="73.6918%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (423 instructions, 0.99%)</title><rect x="72.6009%" y="165" width="0.9870%" height="15" fill="rgb(248,130,54)" fg:x="31116" fg:w="423"/><text x="72.8938%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="73.5878%" y="149" width="0.1937%" height="15" fill="rgb(234,196,4)" fg:x="31539" fg:w="83"/><text x="73.8808%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="74.0335%" y="149" width="0.1937%" height="15" fill="rgb(250,143,31)" fg:x="31730" fg:w="83"/><text x="74.3264%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (382 instructions, 0.89%)</title><rect x="73.5878%" y="165" width="0.8913%" height="15" fill="rgb(211,110,34)" fg:x="31539" fg:w="382"/><text x="73.8808%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.4791%" y="165" width="0.0303%" height="15" fill="rgb(215,124,48)" fg:x="31921" fg:w="13"/><text x="74.7721%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.5094%" y="165" width="0.0303%" height="15" fill="rgb(216,46,13)" fg:x="31934" fg:w="13"/><text x="74.8024%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="74.5398%" y="149" width="0.1937%" height="15" fill="rgb(205,184,25)" fg:x="31947" fg:w="83"/><text x="74.8327%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="74.7334%" y="149" width="0.2310%" height="15" fill="rgb(228,1,10)" fg:x="32030" fg:w="99"/><text x="75.0264%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="74.9644%" y="149" width="0.2870%" height="15" fill="rgb(213,116,27)" fg:x="32129" fg:w="123"/><text x="75.2574%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="75.2514%" y="149" width="0.1400%" height="15" fill="rgb(241,95,50)" fg:x="32252" fg:w="60"/><text x="75.5444%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (462 instructions, 1.08%)</title><rect x="74.5398%" y="165" width="1.0780%" height="15" fill="rgb(238,48,32)" fg:x="31947" fg:w="462"/><text x="74.8327%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.08%)</title><rect x="75.6177%" y="149" width="0.0793%" height="15" fill="rgb(235,113,49)" fg:x="32409" fg:w="34"/><text x="75.9107%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.04%)</title><rect x="75.6971%" y="149" width="0.0420%" height="15" fill="rgb(205,127,43)" fg:x="32443" fg:w="18"/><text x="75.9900%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.04%)</title><rect x="75.7391%" y="149" width="0.0420%" height="15" fill="rgb(250,162,2)" fg:x="32461" fg:w="18"/><text x="76.0320%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="75.7810%" y="133" width="0.1913%" height="15" fill="rgb(220,13,41)" fg:x="32479" fg:w="82"/><text x="76.0740%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="75.9724%" y="133" width="0.1633%" height="15" fill="rgb(249,221,25)" fg:x="32561" fg:w="70"/><text x="76.2653%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="76.1357%" y="133" width="0.1773%" height="15" fill="rgb(215,208,19)" fg:x="32631" fg:w="76"/><text x="76.4287%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.68%)</title><rect x="75.7810%" y="149" width="0.6766%" height="15" fill="rgb(236,175,2)" fg:x="32479" fg:w="290"/><text x="76.0740%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.15%)</title><rect x="76.4577%" y="149" width="0.1470%" height="15" fill="rgb(241,52,2)" fg:x="32769" fg:w="63"/><text x="76.7507%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="76.6047%" y="149" width="0.1937%" height="15" fill="rgb(248,140,14)" fg:x="32832" fg:w="83"/><text x="76.8976%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.27%)</title><rect x="76.7983%" y="149" width="0.2683%" height="15" fill="rgb(253,22,42)" fg:x="32915" fg:w="115"/><text x="77.0913%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (163 instructions, 0.38%)</title><rect x="77.0667%" y="149" width="0.3803%" height="15" fill="rgb(234,61,47)" fg:x="33030" fg:w="163"/><text x="77.3596%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (965 instructions, 2.25%)</title><rect x="75.6177%" y="165" width="2.2516%" height="15" fill="rgb(208,226,15)" fg:x="32409" fg:w="965"/><text x="75.9107%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="77.8693%" y="149" width="0.0163%" height="15" fill="rgb(217,221,4)" fg:x="33374" fg:w="7"/><text x="78.1623%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="77.8856%" y="149" width="0.2007%" height="15" fill="rgb(212,174,34)" fg:x="33381" fg:w="86"/><text x="78.1786%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="78.0863%" y="149" width="0.0163%" height="15" fill="rgb(253,83,4)" fg:x="33467" fg:w="7"/><text x="78.3793%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.31%)</title><rect x="78.1026%" y="149" width="0.3150%" height="15" fill="rgb(250,195,49)" fg:x="33474" fg:w="135"/><text x="78.3956%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (286 instructions, 0.67%)</title><rect x="77.8693%" y="165" width="0.6673%" height="15" fill="rgb(241,192,25)" fg:x="33374" fg:w="286"/><text x="78.1623%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (3,165 instructions, 7.38%)</title><rect x="72.6009%" y="181" width="7.3847%" height="15" fill="rgb(208,124,10)" fg:x="31116" fg:w="3165"/><text x="72.8938%" y="191.50">publishe..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="79.9855%" y="165" width="0.2007%" height="15" fill="rgb(222,33,0)" fg:x="34281" fg:w="86"/><text x="80.2785%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.31%)</title><rect x="80.1862%" y="165" width="0.3150%" height="15" fill="rgb(234,209,28)" fg:x="34367" fg:w="135"/><text x="80.4792%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (274 instructions, 0.64%)</title><rect x="79.9855%" y="181" width="0.6393%" height="15" fill="rgb(224,11,23)" fg:x="34281" fg:w="274"/><text x="80.2785%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.6248%" y="181" width="0.0303%" height="15" fill="rgb(232,99,1)" fg:x="34555" fg:w="13"/><text x="80.9178%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.6552%" y="181" width="0.0303%" height="15" fill="rgb(237,95,45)" fg:x="34568" fg:w="13"/><text x="80.9481%" y="191.50"></text></g><g><title>memcpy (440 instructions, 1.03%)</title><rect x="80.6855%" y="181" width="1.0266%" height="15" fill="rgb(208,109,11)" fg:x="34581" fg:w="440"/><text x="80.9785%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="81.7121%" y="133" width="0.2007%" height="15" fill="rgb(216,190,48)" fg:x="35021" fg:w="86"/><text x="82.0051%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.20%)</title><rect x="81.9128%" y="117" width="0.1960%" height="15" fill="rgb(251,171,36)" fg:x="35107" fg:w="84"/><text x="82.2058%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.1088%" y="117" width="0.0303%" height="15" fill="rgb(230,62,22)" fg:x="35191" fg:w="13"/><text x="82.4017%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.31%)</title><rect x="82.1391%" y="117" width="0.3080%" height="15" fill="rgb(225,114,35)" fg:x="35204" fg:w="132"/><text x="82.4321%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="82.4471%" y="117" width="0.2870%" height="15" fill="rgb(215,118,42)" fg:x="35336" fg:w="123"/><text x="82.7401%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (467 instructions, 1.09%)</title><rect x="81.9128%" y="133" width="1.0896%" height="15" fill="rgb(243,119,21)" fg:x="35107" fg:w="467"/><text x="82.2058%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.29%)</title><rect x="83.0024%" y="133" width="0.2870%" height="15" fill="rgb(252,177,53)" fg:x="35574" fg:w="123"/><text x="83.2954%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (797 instructions, 1.86%)</title><rect x="81.7121%" y="149" width="1.8596%" height="15" fill="rgb(237,209,29)" fg:x="35021" fg:w="797"/><text x="82.0051%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.31%)</title><rect x="83.5717%" y="149" width="0.3080%" height="15" fill="rgb(212,65,23)" fg:x="35818" fg:w="132"/><text x="83.8647%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.42%)</title><rect x="83.8797%" y="133" width="0.4176%" height="15" fill="rgb(230,222,46)" fg:x="35950" fg:w="179"/><text x="84.1727%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (214 instructions, 0.50%)</title><rect x="83.8797%" y="149" width="0.4993%" height="15" fill="rgb(215,135,32)" fg:x="35950" fg:w="214"/><text x="84.1727%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="84.3790%" y="149" width="0.0303%" height="15" fill="rgb(246,101,22)" fg:x="36164" fg:w="13"/><text x="84.6720%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,218 instructions, 2.84%)</title><rect x="81.7121%" y="165" width="2.8419%" height="15" fill="rgb(206,107,13)" fg:x="35021" fg:w="1218"/><text x="82.0051%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,267 instructions, 2.96%)</title><rect x="81.7121%" y="181" width="2.9562%" height="15" fill="rgb(250,100,44)" fg:x="35021" fg:w="1267"/><text x="82.0051%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.20%)</title><rect x="84.6683%" y="181" width="0.1960%" height="15" fill="rgb(231,147,38)" fg:x="36288" fg:w="84"/><text x="84.9613%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="84.8643%" y="181" width="0.1937%" height="15" fill="rgb(229,8,40)" fg:x="36372" fg:w="83"/><text x="85.1573%" y="191.50"></text></g><g><title>memset (130 instructions, 0.30%)</title><rect x="85.0580%" y="181" width="0.3033%" height="15" fill="rgb(221,135,30)" fg:x="36455" fg:w="130"/><text x="85.3509%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.42%)</title><rect x="85.3613%" y="181" width="0.4176%" height="15" fill="rgb(249,193,18)" fg:x="36585" fg:w="179"/><text x="85.6543%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="85.7789%" y="181" width="0.1400%" height="15" fill="rgb(209,133,39)" fg:x="36764" fg:w="60"/><text x="86.0719%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (22 instructions, 0.05%)</title><rect x="85.9189%" y="181" width="0.0513%" height="15" fill="rgb(232,100,14)" fg:x="36824" fg:w="22"/><text x="86.2119%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.16%)</title><rect x="85.9703%" y="181" width="0.1633%" height="15" fill="rgb(224,185,1)" fg:x="36846" fg:w="70"/><text x="86.2632%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="86.1336%" y="149" width="0.0327%" height="15" fill="rgb(223,139,8)" fg:x="36916" fg:w="14"/><text x="86.4266%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="86.1663%" y="149" width="0.0303%" height="15" fill="rgb(232,213,38)" fg:x="36930" fg:w="13"/><text x="86.4592%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="86.1966%" y="149" width="0.0303%" height="15" fill="rgb(207,94,22)" fg:x="36943" fg:w="13"/><text x="86.4896%" y="159.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="86.2269%" y="149" width="0.3547%" height="15" fill="rgb(219,183,54)" fg:x="36956" fg:w="152"/><text x="86.5199%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (404 instructions, 0.94%)</title><rect x="86.1336%" y="165" width="0.9426%" height="15" fill="rgb(216,185,54)" fg:x="36916" fg:w="404"/><text x="86.4266%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.21%)</title><rect x="87.0762%" y="165" width="1.2086%" height="15" fill="rgb(254,217,39)" fg:x="37320" fg:w="518"/><text x="87.3692%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="88.2848%" y="117" width="0.1937%" height="15" fill="rgb(240,178,23)" fg:x="37838" fg:w="83"/><text x="88.5778%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.29%)</title><rect x="88.2848%" y="133" width="0.2940%" height="15" fill="rgb(218,11,47)" fg:x="37838" fg:w="126"/><text x="88.5778%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.48%)</title><rect x="88.2848%" y="149" width="0.4783%" height="15" fill="rgb(218,51,51)" fg:x="37838" fg:w="205"/><text x="88.5778%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="88.7632%" y="149" width="0.0350%" height="15" fill="rgb(238,126,27)" fg:x="38043" fg:w="15"/><text x="89.0561%" y="159.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="88.7982%" y="149" width="0.0350%" height="15" fill="rgb(249,202,22)" fg:x="38058" fg:w="15"/><text x="89.0911%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (423 instructions, 0.99%)</title><rect x="88.2848%" y="165" width="0.9870%" height="15" fill="rgb(254,195,49)" fg:x="37838" fg:w="423"/><text x="88.5778%" y="175.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.20%)</title><rect x="89.2718%" y="165" width="1.2039%" height="15" fill="rgb(208,123,14)" fg:x="38261" fg:w="516"/><text x="89.5648%" y="175.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="90.4757%" y="165" width="0.0163%" height="15" fill="rgb(224,200,8)" fg:x="38777" fg:w="7"/><text x="90.7687%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 instructions, 0.01%)</title><rect x="90.4921%" y="165" width="0.0140%" height="15" fill="rgb(217,61,36)" fg:x="38784" fg:w="6"/><text x="90.7850%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="90.5061%" y="165" width="0.1400%" height="15" fill="rgb(206,35,45)" fg:x="38790" fg:w="60"/><text x="90.7990%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,613 instructions, 6.10%)</title><rect x="86.1336%" y="181" width="6.0967%" height="15" fill="rgb(217,65,33)" fg:x="36916" fg:w="2613"/><text x="86.4266%" y="191.50">ic_cdk..</text></g><g><title>publisher::subscribe_0_::{{closure}} (41,607 instructions, 97.08%)</title><rect x="1.9412%" y="197" width="97.0788%" height="15" fill="rgb(222,158,48)" fg:x="832" fg:w="41607"/><text x="2.2342%" y="207.50">publisher::subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="99.0200%" y="197" width="0.0327%" height="15" fill="rgb(254,2,54)" fg:x="42439" fg:w="14"/><text x="99.3130%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.20%)</title><rect x="99.0550%" y="197" width="0.2007%" height="15" fill="rgb(250,143,38)" fg:x="42454" fg:w="86"/><text x="99.3480%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.42%)</title><rect x="99.2557%" y="197" width="0.4176%" height="15" fill="rgb(248,25,0)" fg:x="42540" fg:w="179"/><text x="99.5487%" y="207.50"></text></g><g><title>all (42,859 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(206,152,27)" fg:x="0" fg:w="42859"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (42,859 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(240,77,30)" fg:x="0" fg:w="42859"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>