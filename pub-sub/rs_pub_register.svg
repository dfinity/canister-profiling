<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="34661"><g><title>ic_cdk::setup (48 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1385%" height="15" fill="rgb(254,105,3)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 1.07%)</title><rect x="0.1385%" y="197" width="1.0675%" height="15" fill="rgb(221,225,9)" fg:x="48" fg:w="370"/><text x="0.4315%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.2060%" y="197" width="0.2366%" height="15" fill="rgb(224,227,45)" fg:x="418" fg:w="82"/><text x="1.4989%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.4425%" y="181" width="0.2366%" height="15" fill="rgb(229,198,43)" fg:x="500" fg:w="82"/><text x="1.7355%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.14%)</title><rect x="1.6791%" y="149" width="0.1443%" height="15" fill="rgb(206,209,35)" fg:x="582" fg:w="50"/><text x="1.9721%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.38%)</title><rect x="1.6791%" y="165" width="0.3837%" height="15" fill="rgb(245,195,53)" fg:x="582" fg:w="133"/><text x="1.9721%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="2.0628%" y="149" width="0.0115%" height="15" fill="rgb(240,92,26)" fg:x="715" fg:w="4"/><text x="2.3558%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.15%)</title><rect x="2.0628%" y="165" width="1.1540%" height="15" fill="rgb(207,40,23)" fg:x="715" fg:w="400"/><text x="2.3558%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="3.2169%" y="165" width="0.2452%" height="15" fill="rgb(223,111,35)" fg:x="1115" fg:w="85"/><text x="3.5098%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.4621%" y="165" width="0.1558%" height="15" fill="rgb(229,147,28)" fg:x="1200" fg:w="54"/><text x="3.7551%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.6179%" y="165" width="0.1558%" height="15" fill="rgb(211,29,28)" fg:x="1254" fg:w="54"/><text x="3.9109%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.7737%" y="165" width="0.1558%" height="15" fill="rgb(228,72,33)" fg:x="1308" fg:w="54"/><text x="4.0667%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.9295%" y="165" width="0.1558%" height="15" fill="rgb(205,214,31)" fg:x="1362" fg:w="54"/><text x="4.2225%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="4.0853%" y="165" width="0.2048%" height="15" fill="rgb(224,111,15)" fg:x="1416" fg:w="71"/><text x="4.3783%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="4.2901%" y="165" width="0.1875%" height="15" fill="rgb(253,21,26)" fg:x="1487" fg:w="65"/><text x="4.5831%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="4.4777%" y="149" width="0.0115%" height="15" fill="rgb(245,139,43)" fg:x="1552" fg:w="4"/><text x="4.7706%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.15%)</title><rect x="4.4777%" y="165" width="1.1540%" height="15" fill="rgb(252,170,7)" fg:x="1552" fg:w="400"/><text x="4.7706%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="5.6317%" y="165" width="0.0462%" height="15" fill="rgb(231,118,14)" fg:x="1952" fg:w="16"/><text x="5.9247%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="5.6779%" y="149" width="0.2366%" height="15" fill="rgb(238,83,0)" fg:x="1968" fg:w="82"/><text x="5.9708%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="5.9144%" y="117" width="0.1731%" height="15" fill="rgb(221,39,39)" fg:x="2050" fg:w="60"/><text x="6.2074%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="5.9144%" y="133" width="0.2452%" height="15" fill="rgb(222,119,46)" fg:x="2050" fg:w="85"/><text x="6.2074%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="6.1597%" y="85" width="0.0260%" height="15" fill="rgb(222,165,49)" fg:x="2135" fg:w="9"/><text x="6.4526%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="6.1856%" y="69" width="0.0866%" height="15" fill="rgb(219,113,52)" fg:x="2144" fg:w="30"/><text x="6.4786%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="6.1856%" y="85" width="0.1587%" height="15" fill="rgb(214,7,15)" fg:x="2144" fg:w="55"/><text x="6.4786%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="6.1597%" y="101" width="0.3404%" height="15" fill="rgb(235,32,4)" fg:x="2135" fg:w="118"/><text x="6.4526%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="6.1597%" y="117" width="0.4933%" height="15" fill="rgb(238,90,54)" fg:x="2135" fg:w="171"/><text x="6.4526%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="6.1597%" y="133" width="0.5078%" height="15" fill="rgb(213,208,19)" fg:x="2135" fg:w="176"/><text x="6.4526%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 1.07%)</title><rect x="5.9144%" y="149" width="1.0733%" height="15" fill="rgb(233,156,4)" fg:x="2050" fg:w="372"/><text x="6.2074%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.73%)</title><rect x="5.6779%" y="165" width="1.7311%" height="15" fill="rgb(207,194,5)" fg:x="1968" fg:w="600"/><text x="5.9708%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="7.4089%" y="165" width="0.2452%" height="15" fill="rgb(206,111,30)" fg:x="2568" fg:w="85"/><text x="7.7019%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="7.6541%" y="165" width="0.1644%" height="15" fill="rgb(243,70,54)" fg:x="2653" fg:w="57"/><text x="7.9471%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="7.8186%" y="149" width="0.1558%" height="15" fill="rgb(242,28,8)" fg:x="2710" fg:w="54"/><text x="8.1116%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="7.9744%" y="149" width="0.2366%" height="15" fill="rgb(219,106,18)" fg:x="2764" fg:w="82"/><text x="8.2673%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.2110%" y="133" width="0.2366%" height="15" fill="rgb(244,222,10)" fg:x="2846" fg:w="82"/><text x="8.5039%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="8.4475%" y="101" width="0.3462%" height="15" fill="rgb(236,179,52)" fg:x="2928" fg:w="120"/><text x="8.7405%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="8.4475%" y="117" width="0.4183%" height="15" fill="rgb(213,23,39)" fg:x="2928" fg:w="145"/><text x="8.7405%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.24%)</title><rect x="8.8659%" y="37" width="0.2395%" height="15" fill="rgb(238,48,10)" fg:x="3073" fg:w="83"/><text x="9.1588%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="8.8659%" y="53" width="0.3376%" height="15" fill="rgb(251,196,23)" fg:x="3073" fg:w="117"/><text x="9.1588%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.56%)</title><rect x="8.8659%" y="69" width="0.5597%" height="15" fill="rgb(250,152,24)" fg:x="3073" fg:w="194"/><text x="9.1588%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.56%)</title><rect x="9.4256%" y="69" width="0.5626%" height="15" fill="rgb(209,150,17)" fg:x="3267" fg:w="195"/><text x="9.7185%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.21%)</title><rect x="8.8659%" y="85" width="1.2146%" height="15" fill="rgb(234,202,34)" fg:x="3073" fg:w="421"/><text x="9.1588%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="10.0805%" y="53" width="0.0260%" height="15" fill="rgb(253,148,53)" fg:x="3494" fg:w="9"/><text x="10.3735%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="10.1065%" y="37" width="0.0866%" height="15" fill="rgb(218,129,16)" fg:x="3503" fg:w="30"/><text x="10.3994%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="10.1065%" y="53" width="0.1587%" height="15" fill="rgb(216,85,19)" fg:x="3503" fg:w="55"/><text x="10.3994%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="10.0805%" y="69" width="0.3404%" height="15" fill="rgb(235,228,7)" fg:x="3494" fg:w="118"/><text x="10.3735%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.53%)</title><rect x="10.0805%" y="85" width="0.5280%" height="15" fill="rgb(245,175,0)" fg:x="3494" fg:w="183"/><text x="10.3735%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="10.6085%" y="69" width="0.1298%" height="15" fill="rgb(208,168,36)" fg:x="3677" fg:w="45"/><text x="10.9014%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="10.6085%" y="85" width="0.2020%" height="15" fill="rgb(246,171,24)" fg:x="3677" fg:w="70"/><text x="10.9014%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 2.31%)</title><rect x="8.8659%" y="101" width="2.3138%" height="15" fill="rgb(215,142,24)" fg:x="3073" fg:w="802"/><text x="9.1588%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.47%)</title><rect x="8.8659%" y="117" width="2.4725%" height="15" fill="rgb(250,187,7)" fg:x="3073" fg:w="857"/><text x="9.1588%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,113 instructions, 3.21%)</title><rect x="8.4475%" y="133" width="3.2111%" height="15" fill="rgb(228,66,33)" fg:x="2928" fg:w="1113"/><text x="8.7405%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.87%)</title><rect x="8.2110%" y="149" width="3.8689%" height="15" fill="rgb(234,215,21)" fg:x="2846" fg:w="1341"/><text x="8.5039%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="12.0799%" y="149" width="0.2077%" height="15" fill="rgb(222,191,20)" fg:x="4187" fg:w="72"/><text x="12.3728%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="12.2876%" y="149" width="0.1644%" height="15" fill="rgb(245,79,54)" fg:x="4259" fg:w="57"/><text x="12.5806%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="12.4520%" y="149" width="0.1904%" height="15" fill="rgb(240,10,37)" fg:x="4316" fg:w="66"/><text x="12.7450%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="12.6425%" y="117" width="0.2366%" height="15" fill="rgb(214,192,32)" fg:x="4382" fg:w="82"/><text x="12.9354%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="12.6425%" y="133" width="0.3376%" height="15" fill="rgb(209,36,54)" fg:x="4382" fg:w="117"/><text x="12.9354%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.53%)</title><rect x="12.6425%" y="149" width="0.5337%" height="15" fill="rgb(220,10,11)" fg:x="4382" fg:w="185"/><text x="12.9354%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="13.1762%" y="149" width="0.1558%" height="15" fill="rgb(221,106,17)" fg:x="4567" fg:w="54"/><text x="13.4692%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.3320%" y="149" width="0.2366%" height="15" fill="rgb(251,142,44)" fg:x="4621" fg:w="82"/><text x="13.6250%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.5686%" y="133" width="0.2366%" height="15" fill="rgb(238,13,15)" fg:x="4703" fg:w="82"/><text x="13.8615%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="13.8051%" y="101" width="0.3462%" height="15" fill="rgb(208,107,27)" fg:x="4785" fg:w="120"/><text x="14.0981%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="13.8051%" y="117" width="0.4183%" height="15" fill="rgb(205,136,37)" fg:x="4785" fg:w="145"/><text x="14.0981%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.24%)</title><rect x="14.2235%" y="37" width="0.2395%" height="15" fill="rgb(250,205,27)" fg:x="4930" fg:w="83"/><text x="14.5164%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="14.2235%" y="53" width="0.3376%" height="15" fill="rgb(210,80,43)" fg:x="4930" fg:w="117"/><text x="14.5164%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.56%)</title><rect x="14.2235%" y="69" width="0.5597%" height="15" fill="rgb(247,160,36)" fg:x="4930" fg:w="194"/><text x="14.5164%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.56%)</title><rect x="14.7832%" y="69" width="0.5626%" height="15" fill="rgb(234,13,49)" fg:x="5124" fg:w="195"/><text x="15.0762%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.21%)</title><rect x="14.2235%" y="85" width="1.2146%" height="15" fill="rgb(234,122,0)" fg:x="4930" fg:w="421"/><text x="14.5164%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="15.4381%" y="53" width="0.0260%" height="15" fill="rgb(207,146,38)" fg:x="5351" fg:w="9"/><text x="15.7311%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="15.4641%" y="37" width="0.0866%" height="15" fill="rgb(207,177,25)" fg:x="5360" fg:w="30"/><text x="15.7570%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="15.4641%" y="53" width="0.1587%" height="15" fill="rgb(211,178,42)" fg:x="5360" fg:w="55"/><text x="15.7570%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="15.4381%" y="69" width="0.3404%" height="15" fill="rgb(230,69,54)" fg:x="5351" fg:w="118"/><text x="15.7311%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.53%)</title><rect x="15.4381%" y="85" width="0.5280%" height="15" fill="rgb(214,135,41)" fg:x="5351" fg:w="183"/><text x="15.7311%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="15.9661%" y="69" width="0.1298%" height="15" fill="rgb(237,67,25)" fg:x="5534" fg:w="45"/><text x="16.2590%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="15.9661%" y="85" width="0.2020%" height="15" fill="rgb(222,189,50)" fg:x="5534" fg:w="70"/><text x="16.2590%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 2.31%)</title><rect x="14.2235%" y="101" width="2.3138%" height="15" fill="rgb(245,148,34)" fg:x="4930" fg:w="802"/><text x="14.5164%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.47%)</title><rect x="14.2235%" y="117" width="2.4725%" height="15" fill="rgb(222,29,6)" fg:x="4930" fg:w="857"/><text x="14.5164%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,113 instructions, 3.21%)</title><rect x="13.8051%" y="133" width="3.2111%" height="15" fill="rgb(221,189,43)" fg:x="4785" fg:w="1113"/><text x="14.0981%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.87%)</title><rect x="13.5686%" y="149" width="3.8689%" height="15" fill="rgb(207,36,27)" fg:x="4703" fg:w="1341"/><text x="13.8615%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="17.4375%" y="149" width="0.2077%" height="15" fill="rgb(217,90,24)" fg:x="6044" fg:w="72"/><text x="17.7304%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="17.6452%" y="149" width="0.1644%" height="15" fill="rgb(224,66,35)" fg:x="6116" fg:w="57"/><text x="17.9382%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="17.8096%" y="149" width="0.1904%" height="15" fill="rgb(221,13,50)" fg:x="6173" fg:w="66"/><text x="18.1026%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="18.0001%" y="149" width="0.1558%" height="15" fill="rgb(236,68,49)" fg:x="6239" fg:w="54"/><text x="18.2930%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="18.1559%" y="133" width="0.2048%" height="15" fill="rgb(229,146,28)" fg:x="6293" fg:w="71"/><text x="18.4488%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="18.3607%" y="133" width="0.1875%" height="15" fill="rgb(225,31,38)" fg:x="6364" fg:w="65"/><text x="18.6537%" y="143.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="18.5482%" y="117" width="0.0115%" height="15" fill="rgb(250,208,3)" fg:x="6429" fg:w="4"/><text x="18.8412%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.15%)</title><rect x="18.5482%" y="133" width="1.1540%" height="15" fill="rgb(246,54,23)" fg:x="6429" fg:w="400"/><text x="18.8412%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="19.7023%" y="133" width="0.0462%" height="15" fill="rgb(243,76,11)" fg:x="6829" fg:w="16"/><text x="19.9952%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="19.7484%" y="117" width="0.2366%" height="15" fill="rgb(245,21,50)" fg:x="6845" fg:w="82"/><text x="20.0414%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="19.9850%" y="85" width="0.1731%" height="15" fill="rgb(228,9,43)" fg:x="6927" fg:w="60"/><text x="20.2780%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="19.9850%" y="101" width="0.2452%" height="15" fill="rgb(208,100,47)" fg:x="6927" fg:w="85"/><text x="20.2780%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="20.2302%" y="53" width="0.0260%" height="15" fill="rgb(232,26,8)" fg:x="7012" fg:w="9"/><text x="20.5232%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="20.2562%" y="37" width="0.0866%" height="15" fill="rgb(216,166,38)" fg:x="7021" fg:w="30"/><text x="20.5492%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="20.2562%" y="53" width="0.1587%" height="15" fill="rgb(251,202,51)" fg:x="7021" fg:w="55"/><text x="20.5492%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="20.2302%" y="69" width="0.3404%" height="15" fill="rgb(254,216,34)" fg:x="7012" fg:w="118"/><text x="20.5232%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="20.2302%" y="85" width="0.4933%" height="15" fill="rgb(251,32,27)" fg:x="7012" fg:w="171"/><text x="20.5232%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="20.2302%" y="101" width="0.5078%" height="15" fill="rgb(208,127,28)" fg:x="7012" fg:w="176"/><text x="20.5232%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 1.07%)</title><rect x="19.9850%" y="117" width="1.0733%" height="15" fill="rgb(224,137,22)" fg:x="6927" fg:w="372"/><text x="20.2780%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.73%)</title><rect x="19.7484%" y="133" width="1.7311%" height="15" fill="rgb(254,70,32)" fg:x="6845" fg:w="600"/><text x="20.0414%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="21.4795%" y="133" width="0.2452%" height="15" fill="rgb(229,75,37)" fg:x="7445" fg:w="85"/><text x="21.7724%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="21.7247%" y="133" width="0.1644%" height="15" fill="rgb(252,64,23)" fg:x="7530" fg:w="57"/><text x="22.0177%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="21.8892%" y="117" width="0.2048%" height="15" fill="rgb(232,162,48)" fg:x="7587" fg:w="71"/><text x="22.1821%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.80%)</title><rect x="22.0940%" y="117" width="0.7992%" height="15" fill="rgb(246,160,12)" fg:x="7658" fg:w="277"/><text x="22.3870%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="22.8932%" y="101" width="0.2048%" height="15" fill="rgb(247,166,0)" fg:x="7935" fg:w="71"/><text x="23.1861%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.26%)</title><rect x="23.0980%" y="101" width="0.2625%" height="15" fill="rgb(249,219,21)" fg:x="8006" fg:w="91"/><text x="23.3910%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="23.3605%" y="101" width="0.1904%" height="15" fill="rgb(205,209,3)" fg:x="8097" fg:w="66"/><text x="23.6535%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.83%)</title><rect x="22.8932%" y="117" width="0.8280%" height="15" fill="rgb(243,44,1)" fg:x="7935" fg:w="287"/><text x="23.1861%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="23.7212%" y="117" width="0.1904%" height="15" fill="rgb(206,159,16)" fg:x="8222" fg:w="66"/><text x="24.0142%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (823 instructions, 2.37%)</title><rect x="21.8892%" y="133" width="2.3744%" height="15" fill="rgb(244,77,30)" fg:x="7587" fg:w="823"/><text x="22.1821%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="24.2636%" y="133" width="0.2366%" height="15" fill="rgb(218,69,12)" fg:x="8410" fg:w="82"/><text x="24.5566%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.06%)</title><rect x="24.5002%" y="133" width="0.0606%" height="15" fill="rgb(212,87,7)" fg:x="8492" fg:w="21"/><text x="24.7931%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="24.5607%" y="133" width="0.1904%" height="15" fill="rgb(245,114,25)" fg:x="8513" fg:w="66"/><text x="24.8537%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,578 instructions, 7.44%)</title><rect x="18.1559%" y="149" width="7.4378%" height="15" fill="rgb(210,61,42)" fg:x="6293" fg:w="2578"/><text x="18.4488%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="25.5936%" y="133" width="0.2337%" height="15" fill="rgb(211,52,33)" fg:x="8871" fg:w="81"/><text x="25.8866%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="25.8908%" y="133" width="0.2250%" height="15" fill="rgb(234,58,33)" fg:x="8974" fg:w="78"/><text x="26.1837%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.59%)</title><rect x="25.5936%" y="149" width="0.5857%" height="15" fill="rgb(220,115,36)" fg:x="8871" fg:w="203"/><text x="25.8866%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="26.1793%" y="149" width="0.4760%" height="15" fill="rgb(243,153,54)" fg:x="9074" fg:w="165"/><text x="26.4722%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,175 instructions, 20.70%)</title><rect x="7.8186%" y="165" width="20.7005%" height="15" fill="rgb(251,47,18)" fg:x="2710" fg:w="7175"/><text x="8.1116%" y="175.50">&lt;candid::binary_parser::Con..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="28.5191%" y="165" width="0.1818%" height="15" fill="rgb(242,102,42)" fg:x="9885" fg:w="63"/><text x="28.8121%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="28.7008%" y="165" width="0.1904%" height="15" fill="rgb(234,31,38)" fg:x="9948" fg:w="66"/><text x="28.9938%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="28.8913%" y="165" width="0.1875%" height="15" fill="rgb(221,117,51)" fg:x="10014" fg:w="65"/><text x="29.1842%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="29.0788%" y="133" width="0.0115%" height="15" fill="rgb(212,20,18)" fg:x="10079" fg:w="4"/><text x="29.3718%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.15%)</title><rect x="29.0788%" y="149" width="1.1540%" height="15" fill="rgb(245,133,36)" fg:x="10079" fg:w="400"/><text x="29.3718%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="30.2328%" y="149" width="0.0462%" height="15" fill="rgb(212,6,19)" fg:x="10479" fg:w="16"/><text x="30.5258%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.34%)</title><rect x="30.2790%" y="133" width="0.3404%" height="15" fill="rgb(218,1,36)" fg:x="10495" fg:w="118"/><text x="30.5720%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="30.6194%" y="101" width="0.1731%" height="15" fill="rgb(246,84,54)" fg:x="10613" fg:w="60"/><text x="30.9124%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="30.6194%" y="117" width="0.2452%" height="15" fill="rgb(242,110,6)" fg:x="10613" fg:w="85"/><text x="30.9124%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="30.8647%" y="69" width="0.0260%" height="15" fill="rgb(214,47,5)" fg:x="10698" fg:w="9"/><text x="31.1576%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="30.8906%" y="53" width="0.0866%" height="15" fill="rgb(218,159,25)" fg:x="10707" fg:w="30"/><text x="31.1836%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="30.8906%" y="69" width="0.1587%" height="15" fill="rgb(215,211,28)" fg:x="10707" fg:w="55"/><text x="31.1836%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="30.8647%" y="85" width="0.3404%" height="15" fill="rgb(238,59,32)" fg:x="10698" fg:w="118"/><text x="31.1576%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="30.8647%" y="101" width="0.4933%" height="15" fill="rgb(226,82,3)" fg:x="10698" fg:w="171"/><text x="31.1576%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="30.8647%" y="117" width="0.5078%" height="15" fill="rgb(240,164,32)" fg:x="10698" fg:w="176"/><text x="31.1576%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 1.07%)</title><rect x="30.6194%" y="133" width="1.0733%" height="15" fill="rgb(232,46,7)" fg:x="10613" fg:w="372"/><text x="30.9124%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (636 instructions, 1.83%)</title><rect x="30.2790%" y="149" width="1.8349%" height="15" fill="rgb(229,129,53)" fg:x="10495" fg:w="636"/><text x="30.5720%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="32.1139%" y="149" width="0.2452%" height="15" fill="rgb(234,188,29)" fg:x="11131" fg:w="85"/><text x="32.4069%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="32.3591%" y="149" width="0.1587%" height="15" fill="rgb(246,141,4)" fg:x="11216" fg:w="55"/><text x="32.6521%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="32.5178%" y="133" width="0.2048%" height="15" fill="rgb(229,23,39)" fg:x="11271" fg:w="71"/><text x="32.8108%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.26%)</title><rect x="32.7227%" y="133" width="0.2625%" height="15" fill="rgb(206,12,3)" fg:x="11342" fg:w="91"/><text x="33.0156%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="32.9852%" y="133" width="0.1904%" height="15" fill="rgb(252,226,20)" fg:x="11433" fg:w="66"/><text x="33.2782%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.83%)</title><rect x="32.5178%" y="149" width="0.8280%" height="15" fill="rgb(216,123,35)" fg:x="11271" fg:w="287"/><text x="32.8108%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="33.3458%" y="149" width="0.2193%" height="15" fill="rgb(212,68,40)" fg:x="11558" fg:w="76"/><text x="33.6388%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,756 instructions, 5.07%)</title><rect x="29.0788%" y="165" width="5.0662%" height="15" fill="rgb(254,125,32)" fg:x="10079" fg:w="1756"/><text x="29.3718%" y="175.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="34.1450%" y="165" width="0.1904%" height="15" fill="rgb(253,97,22)" fg:x="11835" fg:w="66"/><text x="34.4380%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.3354%" y="165" width="0.2193%" height="15" fill="rgb(241,101,14)" fg:x="11901" fg:w="76"/><text x="34.6284%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.5547%" y="149" width="0.2193%" height="15" fill="rgb(238,103,29)" fg:x="11977" fg:w="76"/><text x="34.8477%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.46%)</title><rect x="34.5547%" y="165" width="0.4587%" height="15" fill="rgb(233,195,47)" fg:x="11977" fg:w="159"/><text x="34.8477%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.21%)</title><rect x="35.0134%" y="133" width="0.2106%" height="15" fill="rgb(246,218,30)" fg:x="12136" fg:w="73"/><text x="35.3064%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.31%)</title><rect x="35.0134%" y="149" width="0.3116%" height="15" fill="rgb(219,145,47)" fg:x="12136" fg:w="108"/><text x="35.3064%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (176 instructions, 0.51%)</title><rect x="35.0134%" y="165" width="0.5078%" height="15" fill="rgb(243,12,26)" fg:x="12136" fg:w="176"/><text x="35.3064%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.5212%" y="165" width="0.2366%" height="15" fill="rgb(214,87,16)" fg:x="12312" fg:w="82"/><text x="35.8142%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.7578%" y="149" width="0.2366%" height="15" fill="rgb(208,99,42)" fg:x="12394" fg:w="82"/><text x="36.0507%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="35.9943%" y="117" width="0.2597%" height="15" fill="rgb(253,99,2)" fg:x="12476" fg:w="90"/><text x="36.2873%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="35.9943%" y="133" width="0.3318%" height="15" fill="rgb(220,168,23)" fg:x="12476" fg:w="115"/><text x="36.2873%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="36.3261%" y="85" width="0.0260%" height="15" fill="rgb(242,38,24)" fg:x="12591" fg:w="9"/><text x="36.6191%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="36.3521%" y="69" width="0.0866%" height="15" fill="rgb(225,182,9)" fg:x="12600" fg:w="30"/><text x="36.6451%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="36.3521%" y="85" width="0.1587%" height="15" fill="rgb(243,178,37)" fg:x="12600" fg:w="55"/><text x="36.6451%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="36.3261%" y="101" width="0.3404%" height="15" fill="rgb(232,139,19)" fg:x="12591" fg:w="118"/><text x="36.6191%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="36.3261%" y="117" width="0.4933%" height="15" fill="rgb(225,201,24)" fg:x="12591" fg:w="171"/><text x="36.6191%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="36.3261%" y="133" width="0.5366%" height="15" fill="rgb(221,47,46)" fg:x="12591" fg:w="186"/><text x="36.6191%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 1.19%)</title><rect x="35.9943%" y="149" width="1.1887%" height="15" fill="rgb(249,23,13)" fg:x="12476" fg:w="412"/><text x="36.2873%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (640 instructions, 1.85%)</title><rect x="35.7578%" y="165" width="1.8465%" height="15" fill="rgb(219,9,5)" fg:x="12394" fg:w="640"/><text x="36.0507%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="37.6042%" y="149" width="0.2366%" height="15" fill="rgb(254,171,16)" fg:x="13034" fg:w="82"/><text x="37.8972%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.40%)</title><rect x="37.6042%" y="165" width="0.3981%" height="15" fill="rgb(230,171,20)" fg:x="13034" fg:w="138"/><text x="37.8972%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.27%)</title><rect x="38.0024%" y="165" width="0.2741%" height="15" fill="rgb(210,71,41)" fg:x="13172" fg:w="95"/><text x="38.2953%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="38.2764%" y="165" width="0.0375%" height="15" fill="rgb(206,173,20)" fg:x="13267" fg:w="13"/><text x="38.5694%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.27%)</title><rect x="38.3140%" y="165" width="0.2741%" height="15" fill="rgb(233,88,34)" fg:x="13280" fg:w="95"/><text x="38.6069%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="38.5880%" y="149" width="0.2366%" height="15" fill="rgb(223,209,46)" fg:x="13375" fg:w="82"/><text x="38.8810%" y="159.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (114 instructions, 0.33%)</title><rect x="38.5880%" y="165" width="0.3289%" height="15" fill="rgb(250,43,18)" fg:x="13375" fg:w="114"/><text x="38.8810%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.07%)</title><rect x="38.9169%" y="149" width="0.0664%" height="15" fill="rgb(208,13,10)" fg:x="13489" fg:w="23"/><text x="39.2099%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (88 instructions, 0.25%)</title><rect x="38.9169%" y="165" width="0.2539%" height="15" fill="rgb(212,200,36)" fg:x="13489" fg:w="88"/><text x="39.2099%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="39.1708%" y="165" width="0.0433%" height="15" fill="rgb(225,90,30)" fg:x="13577" fg:w="15"/><text x="39.4638%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="39.4536%" y="149" width="0.1644%" height="15" fill="rgb(236,182,39)" fg:x="13675" fg:w="57"/><text x="39.7465%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (165 instructions, 0.48%)</title><rect x="39.2141%" y="165" width="0.4760%" height="15" fill="rgb(212,144,35)" fg:x="13592" fg:w="165"/><text x="39.5071%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="39.6901%" y="165" width="0.0375%" height="15" fill="rgb(228,63,44)" fg:x="13757" fg:w="13"/><text x="39.9831%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="39.7276%" y="165" width="0.0202%" height="15" fill="rgb(228,109,6)" fg:x="13770" fg:w="7"/><text x="40.0206%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="39.7478%" y="165" width="0.0433%" height="15" fill="rgb(238,117,24)" fg:x="13777" fg:w="15"/><text x="40.0408%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="39.7911%" y="133" width="0.2366%" height="15" fill="rgb(242,26,26)" fg:x="13792" fg:w="82"/><text x="40.0841%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="40.0277%" y="101" width="0.2597%" height="15" fill="rgb(221,92,48)" fg:x="13874" fg:w="90"/><text x="40.3207%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="40.0277%" y="117" width="0.3318%" height="15" fill="rgb(209,209,32)" fg:x="13874" fg:w="115"/><text x="40.3207%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="40.3595%" y="69" width="0.0260%" height="15" fill="rgb(221,70,22)" fg:x="13989" fg:w="9"/><text x="40.6525%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="40.3854%" y="53" width="0.0866%" height="15" fill="rgb(248,145,5)" fg:x="13998" fg:w="30"/><text x="40.6784%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="40.3854%" y="69" width="0.1587%" height="15" fill="rgb(226,116,26)" fg:x="13998" fg:w="55"/><text x="40.6784%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="40.3595%" y="85" width="0.3404%" height="15" fill="rgb(244,5,17)" fg:x="13989" fg:w="118"/><text x="40.6525%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="40.3595%" y="101" width="0.4933%" height="15" fill="rgb(252,159,33)" fg:x="13989" fg:w="171"/><text x="40.6525%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="40.3595%" y="117" width="0.5366%" height="15" fill="rgb(206,71,0)" fg:x="13989" fg:w="186"/><text x="40.6525%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 1.19%)</title><rect x="40.0277%" y="133" width="1.1887%" height="15" fill="rgb(233,118,54)" fg:x="13874" fg:w="412"/><text x="40.3207%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (640 instructions, 1.85%)</title><rect x="39.7911%" y="149" width="1.8465%" height="15" fill="rgb(234,83,48)" fg:x="13792" fg:w="640"/><text x="40.0841%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="41.6376%" y="149" width="0.2366%" height="15" fill="rgb(228,3,54)" fg:x="14432" fg:w="82"/><text x="41.9305%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (834 instructions, 2.41%)</title><rect x="39.7911%" y="165" width="2.4062%" height="15" fill="rgb(226,155,13)" fg:x="13792" fg:w="834"/><text x="40.0841%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.1973%" y="133" width="0.2366%" height="15" fill="rgb(241,28,37)" fg:x="14626" fg:w="82"/><text x="42.4903%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="42.1973%" y="149" width="0.3376%" height="15" fill="rgb(233,93,10)" fg:x="14626" fg:w="117"/><text x="42.4903%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.53%)</title><rect x="42.1973%" y="165" width="0.5337%" height="15" fill="rgb(225,113,19)" fg:x="14626" fg:w="185"/><text x="42.4903%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.7310%" y="165" width="0.2366%" height="15" fill="rgb(241,2,18)" fg:x="14811" fg:w="82"/><text x="43.0240%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="42.9676%" y="165" width="0.2337%" height="15" fill="rgb(228,207,21)" fg:x="14893" fg:w="81"/><text x="43.2606%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="43.2013%" y="165" width="0.2366%" height="15" fill="rgb(213,211,35)" fg:x="14974" fg:w="82"/><text x="43.4943%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="43.4379%" y="165" width="0.2366%" height="15" fill="rgb(209,83,10)" fg:x="15056" fg:w="82"/><text x="43.7308%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="43.6744%" y="149" width="0.2337%" height="15" fill="rgb(209,164,1)" fg:x="15138" fg:w="81"/><text x="43.9674%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.33%)</title><rect x="43.6744%" y="165" width="0.3318%" height="15" fill="rgb(213,184,43)" fg:x="15138" fg:w="115"/><text x="43.9674%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.18%)</title><rect x="44.0062%" y="149" width="0.1818%" height="15" fill="rgb(231,61,34)" fg:x="15253" fg:w="63"/><text x="44.2992%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (167 instructions, 0.48%)</title><rect x="44.0062%" y="165" width="0.4818%" height="15" fill="rgb(235,75,3)" fg:x="15253" fg:w="167"/><text x="44.2992%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="44.4880%" y="165" width="0.2337%" height="15" fill="rgb(220,106,47)" fg:x="15420" fg:w="81"/><text x="44.7810%" y="175.50"></text></g><g><title>memcpy (381 instructions, 1.10%)</title><rect x="44.7217%" y="165" width="1.0992%" height="15" fill="rgb(210,196,33)" fg:x="15501" fg:w="381"/><text x="45.0147%" y="175.50"></text></g><g><title>memcpy (381 instructions, 1.10%)</title><rect x="45.8210%" y="165" width="1.0992%" height="15" fill="rgb(229,154,42)" fg:x="15882" fg:w="381"/><text x="46.1139%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (17,369 instructions, 50.11%)</title><rect x="1.6791%" y="181" width="50.1111%" height="15" fill="rgb(228,114,26)" fg:x="582" fg:w="17369"/><text x="1.9721%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (336 instructions, 0.97%)</title><rect x="51.7902%" y="181" width="0.9694%" height="15" fill="rgb(208,144,1)" fg:x="17951" fg:w="336"/><text x="52.0832%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.14%)</title><rect x="52.7596%" y="165" width="0.1443%" height="15" fill="rgb(239,112,37)" fg:x="18287" fg:w="50"/><text x="53.0526%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.24%)</title><rect x="52.7596%" y="181" width="0.2423%" height="15" fill="rgb(210,96,50)" fg:x="18287" fg:w="84"/><text x="53.0526%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.16%)</title><rect x="53.0019%" y="165" width="0.1587%" height="15" fill="rgb(222,178,2)" fg:x="18371" fg:w="55"/><text x="53.2949%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (162 instructions, 0.47%)</title><rect x="53.0019%" y="181" width="0.4674%" height="15" fill="rgb(226,74,18)" fg:x="18371" fg:w="162"/><text x="53.2949%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.4693%" y="165" width="0.0144%" height="15" fill="rgb(225,67,54)" fg:x="18533" fg:w="5"/><text x="53.7623%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="53.4837%" y="149" width="0.1529%" height="15" fill="rgb(251,92,32)" fg:x="18538" fg:w="53"/><text x="53.7767%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="53.6367%" y="149" width="0.8800%" height="15" fill="rgb(228,149,22)" fg:x="18591" fg:w="305"/><text x="53.9296%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="54.5166%" y="149" width="0.2106%" height="15" fill="rgb(243,54,13)" fg:x="18896" fg:w="73"/><text x="54.8096%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="53.4837%" y="165" width="1.9272%" height="15" fill="rgb(243,180,28)" fg:x="18538" fg:w="668"/><text x="53.7767%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="55.4110%" y="165" width="0.2193%" height="15" fill="rgb(208,167,24)" fg:x="19206" fg:w="76"/><text x="55.7039%" y="175.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="55.6302%" y="165" width="0.3924%" height="15" fill="rgb(245,73,45)" fg:x="19282" fg:w="136"/><text x="55.9232%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,297 instructions, 3.74%)</title><rect x="53.4693%" y="181" width="3.7420%" height="15" fill="rgb(237,203,48)" fg:x="18533" fg:w="1297"/><text x="53.7623%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="57.2113%" y="181" width="0.2279%" height="15" fill="rgb(211,197,16)" fg:x="19830" fg:w="79"/><text x="57.5042%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="57.4392%" y="181" width="0.2193%" height="15" fill="rgb(243,99,51)" fg:x="19909" fg:w="76"/><text x="57.7322%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="57.6585%" y="181" width="0.2279%" height="15" fill="rgb(215,123,29)" fg:x="19985" fg:w="79"/><text x="57.9514%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="57.8864%" y="149" width="0.0144%" height="15" fill="rgb(239,186,37)" fg:x="20064" fg:w="5"/><text x="58.1794%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="57.9008%" y="133" width="0.1529%" height="15" fill="rgb(252,136,39)" fg:x="20069" fg:w="53"/><text x="58.1938%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="58.0537%" y="133" width="0.8800%" height="15" fill="rgb(223,213,32)" fg:x="20122" fg:w="305"/><text x="58.3467%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="58.9337%" y="133" width="0.2106%" height="15" fill="rgb(233,115,5)" fg:x="20427" fg:w="73"/><text x="59.2266%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="57.9008%" y="149" width="1.9272%" height="15" fill="rgb(207,226,44)" fg:x="20069" fg:w="668"/><text x="58.1938%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 2.27%)</title><rect x="57.8864%" y="165" width="2.2677%" height="15" fill="rgb(208,126,0)" fg:x="20064" fg:w="786"/><text x="58.1794%" y="175.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="60.1541%" y="165" width="0.2193%" height="15" fill="rgb(244,66,21)" fg:x="20850" fg:w="76"/><text x="60.4470%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.3733%" y="149" width="0.0144%" height="15" fill="rgb(222,97,12)" fg:x="20926" fg:w="5"/><text x="60.6663%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="60.3878%" y="133" width="0.1529%" height="15" fill="rgb(219,213,19)" fg:x="20931" fg:w="53"/><text x="60.6807%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="60.5407%" y="133" width="0.8800%" height="15" fill="rgb(252,169,30)" fg:x="20984" fg:w="305"/><text x="60.8336%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="61.4206%" y="133" width="0.2106%" height="15" fill="rgb(206,32,51)" fg:x="21289" fg:w="73"/><text x="61.7136%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="60.3878%" y="149" width="1.9272%" height="15" fill="rgb(250,172,42)" fg:x="20931" fg:w="668"/><text x="60.6807%" y="159.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 2.55%)</title><rect x="60.3733%" y="165" width="2.5475%" height="15" fill="rgb(209,34,43)" fg:x="20926" fg:w="883"/><text x="60.6663%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="62.9209%" y="165" width="0.2193%" height="15" fill="rgb(223,11,35)" fg:x="21809" fg:w="76"/><text x="63.2138%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="63.1401%" y="149" width="0.0144%" height="15" fill="rgb(251,219,26)" fg:x="21885" fg:w="5"/><text x="63.4331%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="63.1546%" y="133" width="0.1529%" height="15" fill="rgb(231,119,3)" fg:x="21890" fg:w="53"/><text x="63.4475%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="63.3075%" y="133" width="0.8800%" height="15" fill="rgb(216,97,11)" fg:x="21943" fg:w="305"/><text x="63.6004%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="64.1874%" y="133" width="0.2106%" height="15" fill="rgb(223,59,9)" fg:x="22248" fg:w="73"/><text x="64.4804%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="63.1546%" y="149" width="1.9272%" height="15" fill="rgb(233,93,31)" fg:x="21890" fg:w="668"/><text x="63.4475%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.29%)</title><rect x="65.0818%" y="149" width="1.2867%" height="15" fill="rgb(239,81,33)" fg:x="22558" fg:w="446"/><text x="65.3748%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="66.3685%" y="133" width="0.2337%" height="15" fill="rgb(213,120,34)" fg:x="23004" fg:w="81"/><text x="66.6615%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="66.3685%" y="149" width="0.3116%" height="15" fill="rgb(243,49,53)" fg:x="23004" fg:w="108"/><text x="66.6615%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,395 instructions, 4.02%)</title><rect x="63.1401%" y="165" width="4.0247%" height="15" fill="rgb(247,216,33)" fg:x="21885" fg:w="1395"/><text x="63.4331%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="67.1648%" y="117" width="0.1529%" height="15" fill="rgb(226,26,14)" fg:x="23280" fg:w="53"/><text x="67.4578%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="67.1648%" y="133" width="0.2279%" height="15" fill="rgb(215,49,53)" fg:x="23280" fg:w="79"/><text x="67.4578%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.84%)</title><rect x="67.1648%" y="149" width="0.8424%" height="15" fill="rgb(245,162,40)" fg:x="23280" fg:w="292"/><text x="67.4578%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="68.0073%" y="149" width="0.2366%" height="15" fill="rgb(229,68,17)" fg:x="23572" fg:w="82"/><text x="68.3002%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="68.2438%" y="149" width="0.3924%" height="15" fill="rgb(213,182,10)" fg:x="23654" fg:w="136"/><text x="68.5368%" y="159.50"></text></g><g><title>candid::types::internal::env_id (967 instructions, 2.79%)</title><rect x="67.1648%" y="165" width="2.7899%" height="15" fill="rgb(245,125,30)" fg:x="23280" fg:w="967"/><text x="67.4578%" y="175.50">ca..</text></g><g><title>candid::types::CandidType::ty (4,290 instructions, 12.38%)</title><rect x="57.8864%" y="181" width="12.3770%" height="15" fill="rgb(232,202,2)" fg:x="20064" fg:w="4290"/><text x="58.1794%" y="191.50">candid::types::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="70.2634%" y="181" width="0.2279%" height="15" fill="rgb(237,140,51)" fg:x="24354" fg:w="79"/><text x="70.5564%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="70.4913%" y="165" width="0.0144%" height="15" fill="rgb(236,157,25)" fg:x="24433" fg:w="5"/><text x="70.7843%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="70.5058%" y="149" width="0.1529%" height="15" fill="rgb(219,209,0)" fg:x="24438" fg:w="53"/><text x="70.7987%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="70.6587%" y="149" width="0.8800%" height="15" fill="rgb(240,116,54)" fg:x="24491" fg:w="305"/><text x="70.9516%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="71.5386%" y="149" width="0.2106%" height="15" fill="rgb(216,10,36)" fg:x="24796" fg:w="73"/><text x="71.8316%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="70.5058%" y="165" width="1.9272%" height="15" fill="rgb(222,72,44)" fg:x="24438" fg:w="668"/><text x="70.7987%" y="175.50"></text></g><g><title>memcmp (446 instructions, 1.29%)</title><rect x="72.4330%" y="165" width="1.2867%" height="15" fill="rgb(232,159,9)" fg:x="25106" fg:w="446"/><text x="72.7260%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="73.7197%" y="149" width="0.2337%" height="15" fill="rgb(210,39,32)" fg:x="25552" fg:w="81"/><text x="74.0127%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="73.7197%" y="165" width="0.3116%" height="15" fill="rgb(216,194,45)" fg:x="25552" fg:w="108"/><text x="74.0127%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,395 instructions, 4.02%)</title><rect x="70.4913%" y="181" width="4.0247%" height="15" fill="rgb(218,18,35)" fg:x="24433" fg:w="1395"/><text x="70.7843%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.5160%" y="133" width="0.1529%" height="15" fill="rgb(207,83,51)" fg:x="25828" fg:w="53"/><text x="74.8090%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.44%)</title><rect x="74.6689%" y="133" width="0.4414%" height="15" fill="rgb(225,63,43)" fg:x="25881" fg:w="153"/><text x="74.9619%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="75.1104%" y="117" width="0.1529%" height="15" fill="rgb(207,57,36)" fg:x="26034" fg:w="53"/><text x="75.4033%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="75.1104%" y="133" width="0.2279%" height="15" fill="rgb(216,99,33)" fg:x="26034" fg:w="79"/><text x="75.4033%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 1.01%)</title><rect x="74.5160%" y="149" width="1.0127%" height="15" fill="rgb(225,42,16)" fg:x="25828" fg:w="351"/><text x="74.8090%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.1432%" y="133" width="0.1529%" height="15" fill="rgb(220,201,45)" fg:x="26392" fg:w="53"/><text x="76.4362%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.44%)</title><rect x="76.2961%" y="133" width="0.4414%" height="15" fill="rgb(225,33,4)" fg:x="26445" fg:w="153"/><text x="76.5891%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.7375%" y="117" width="0.1529%" height="15" fill="rgb(224,33,50)" fg:x="26598" fg:w="53"/><text x="77.0305%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="76.7375%" y="133" width="0.2279%" height="15" fill="rgb(246,198,51)" fg:x="26598" fg:w="79"/><text x="77.0305%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 1.01%)</title><rect x="76.1432%" y="149" width="1.0127%" height="15" fill="rgb(205,22,4)" fg:x="26392" fg:w="351"/><text x="76.4362%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,128 instructions, 3.25%)</title><rect x="74.5160%" y="165" width="3.2544%" height="15" fill="rgb(206,3,8)" fg:x="25828" fg:w="1128"/><text x="74.8090%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,405 instructions, 4.05%)</title><rect x="74.5160%" y="181" width="4.0535%" height="15" fill="rgb(251,23,15)" fg:x="25828" fg:w="1405"/><text x="74.8090%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.10%)</title><rect x="78.5696%" y="181" width="0.0952%" height="15" fill="rgb(252,88,28)" fg:x="27233" fg:w="33"/><text x="78.8625%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="78.6648%" y="165" width="0.2250%" height="15" fill="rgb(212,127,14)" fg:x="27266" fg:w="78"/><text x="78.9578%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.35%)</title><rect x="78.9677%" y="165" width="0.3462%" height="15" fill="rgb(247,145,37)" fg:x="27371" fg:w="120"/><text x="79.2607%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.73%)</title><rect x="78.6648%" y="181" width="0.7270%" height="15" fill="rgb(209,117,53)" fg:x="27266" fg:w="252"/><text x="78.9578%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.38%)</title><rect x="79.3918%" y="117" width="0.3779%" height="15" fill="rgb(212,90,42)" fg:x="27518" fg:w="131"/><text x="79.6848%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (208 instructions, 0.60%)</title><rect x="79.3918%" y="133" width="0.6001%" height="15" fill="rgb(218,164,37)" fg:x="27518" fg:w="208"/><text x="79.6848%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.10%)</title><rect x="79.9919%" y="133" width="0.0952%" height="15" fill="rgb(246,65,34)" fg:x="27726" fg:w="33"/><text x="80.2849%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (288 instructions, 0.83%)</title><rect x="79.3918%" y="149" width="0.8309%" height="15" fill="rgb(231,100,33)" fg:x="27518" fg:w="288"/><text x="79.6848%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.2227%" y="149" width="0.0317%" height="15" fill="rgb(228,126,14)" fg:x="27806" fg:w="11"/><text x="80.5157%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (351 instructions, 1.01%)</title><rect x="79.3918%" y="165" width="1.0127%" height="15" fill="rgb(215,173,21)" fg:x="27518" fg:w="351"/><text x="79.6848%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.4045%" y="149" width="0.2193%" height="15" fill="rgb(210,6,40)" fg:x="27869" fg:w="76"/><text x="80.6975%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.8892%" y="149" width="0.2193%" height="15" fill="rgb(212,48,18)" fg:x="28037" fg:w="76"/><text x="81.1822%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (336 instructions, 0.97%)</title><rect x="80.4045%" y="165" width="0.9694%" height="15" fill="rgb(230,214,11)" fg:x="27869" fg:w="336"/><text x="80.6975%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.3739%" y="165" width="0.0317%" height="15" fill="rgb(254,105,39)" fg:x="28205" fg:w="11"/><text x="81.6668%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.4056%" y="165" width="0.0317%" height="15" fill="rgb(245,158,5)" fg:x="28216" fg:w="11"/><text x="81.6986%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="81.4374%" y="149" width="0.2193%" height="15" fill="rgb(249,208,11)" fg:x="28227" fg:w="76"/><text x="81.7303%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="81.6566%" y="149" width="0.2597%" height="15" fill="rgb(210,39,28)" fg:x="28303" fg:w="90"/><text x="81.9496%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.32%)</title><rect x="81.9163%" y="149" width="0.3174%" height="15" fill="rgb(211,56,53)" fg:x="28393" fg:w="110"/><text x="82.2092%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="82.2336%" y="149" width="0.1587%" height="15" fill="rgb(226,201,30)" fg:x="28503" fg:w="55"/><text x="82.5266%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (403 instructions, 1.16%)</title><rect x="81.4374%" y="165" width="1.1627%" height="15" fill="rgb(239,101,34)" fg:x="28227" fg:w="403"/><text x="81.7303%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.08%)</title><rect x="82.6000%" y="149" width="0.0808%" height="15" fill="rgb(226,209,5)" fg:x="28630" fg:w="28"/><text x="82.8930%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.6808%" y="149" width="0.0433%" height="15" fill="rgb(250,105,47)" fg:x="28658" fg:w="15"/><text x="82.9738%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.7241%" y="149" width="0.0433%" height="15" fill="rgb(230,72,3)" fg:x="28673" fg:w="15"/><text x="83.0171%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.20%)</title><rect x="82.7674%" y="133" width="0.2048%" height="15" fill="rgb(232,218,39)" fg:x="28688" fg:w="71"/><text x="83.0603%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="82.9722%" y="133" width="0.1875%" height="15" fill="rgb(248,166,6)" fg:x="28759" fg:w="65"/><text x="83.2652%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="83.1597%" y="133" width="0.1904%" height="15" fill="rgb(247,89,20)" fg:x="28824" fg:w="66"/><text x="83.4527%" y="143.50"></text></g><g><title>binread::BinRead::read (246 instructions, 0.71%)</title><rect x="82.7674%" y="149" width="0.7097%" height="15" fill="rgb(248,130,54)" fg:x="28688" fg:w="246"/><text x="83.0603%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.15%)</title><rect x="83.4771%" y="149" width="0.1471%" height="15" fill="rgb(234,196,4)" fg:x="28934" fg:w="51"/><text x="83.7701%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="83.6242%" y="149" width="0.2193%" height="15" fill="rgb(250,143,31)" fg:x="28985" fg:w="76"/><text x="83.9172%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.30%)</title><rect x="83.8435%" y="149" width="0.3029%" height="15" fill="rgb(211,110,34)" fg:x="29061" fg:w="105"/><text x="84.1365%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.42%)</title><rect x="84.1464%" y="149" width="0.4155%" height="15" fill="rgb(215,124,48)" fg:x="29166" fg:w="144"/><text x="84.4394%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (812 instructions, 2.34%)</title><rect x="82.6000%" y="165" width="2.3427%" height="15" fill="rgb(216,46,13)" fg:x="28630" fg:w="812"/><text x="82.8930%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="84.9427%" y="149" width="0.0144%" height="15" fill="rgb(205,184,25)" fg:x="29442" fg:w="5"/><text x="85.2357%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="84.9572%" y="149" width="0.2337%" height="15" fill="rgb(228,1,10)" fg:x="29447" fg:w="81"/><text x="85.2501%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.1908%" y="149" width="0.0144%" height="15" fill="rgb(213,116,27)" fg:x="29528" fg:w="5"/><text x="85.4838%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.36%)</title><rect x="85.2053%" y="149" width="0.3635%" height="15" fill="rgb(241,95,50)" fg:x="29533" fg:w="126"/><text x="85.4982%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.72%)</title><rect x="84.9427%" y="165" width="0.7155%" height="15" fill="rgb(238,48,32)" fg:x="29442" fg:w="248"/><text x="85.2357%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (2,712 instructions, 7.82%)</title><rect x="79.3918%" y="181" width="7.8244%" height="15" fill="rgb(235,113,49)" fg:x="27518" fg:w="2712"/><text x="79.6848%" y="191.50">publisher..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="87.2162%" y="165" width="0.2337%" height="15" fill="rgb(205,127,43)" fg:x="30230" fg:w="81"/><text x="87.5091%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.36%)</title><rect x="87.4499%" y="165" width="0.3635%" height="15" fill="rgb(250,162,2)" fg:x="30311" fg:w="126"/><text x="87.7428%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (246 instructions, 0.71%)</title><rect x="87.2162%" y="181" width="0.7097%" height="15" fill="rgb(220,13,41)" fg:x="30230" fg:w="246"/><text x="87.5091%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.9259%" y="181" width="0.0317%" height="15" fill="rgb(249,221,25)" fg:x="30476" fg:w="11"/><text x="88.2189%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.9576%" y="181" width="0.0317%" height="15" fill="rgb(215,208,19)" fg:x="30487" fg:w="11"/><text x="88.2506%" y="191.50"></text></g><g><title>memcpy (411 instructions, 1.19%)</title><rect x="87.9894%" y="181" width="1.1858%" height="15" fill="rgb(236,175,2)" fg:x="30498" fg:w="411"/><text x="88.2824%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="89.1752%" y="133" width="0.2337%" height="15" fill="rgb(241,52,2)" fg:x="30909" fg:w="81"/><text x="89.4681%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="89.4088%" y="117" width="0.2250%" height="15" fill="rgb(248,140,14)" fg:x="30990" fg:w="78"/><text x="89.7018%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.6339%" y="117" width="0.0317%" height="15" fill="rgb(253,22,42)" fg:x="31068" fg:w="11"/><text x="89.9269%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.35%)</title><rect x="89.6656%" y="117" width="0.3549%" height="15" fill="rgb(234,61,47)" fg:x="31079" fg:w="123"/><text x="89.9586%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (113 instructions, 0.33%)</title><rect x="90.0205%" y="117" width="0.3260%" height="15" fill="rgb(208,226,15)" fg:x="31202" fg:w="113"/><text x="90.3135%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (413 instructions, 1.19%)</title><rect x="89.4088%" y="133" width="1.1915%" height="15" fill="rgb(217,221,4)" fg:x="30990" fg:w="413"/><text x="89.7018%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (113 instructions, 0.33%)</title><rect x="90.6004%" y="133" width="0.3260%" height="15" fill="rgb(212,174,34)" fg:x="31403" fg:w="113"/><text x="90.8934%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (702 instructions, 2.03%)</title><rect x="89.1752%" y="149" width="2.0253%" height="15" fill="rgb(253,83,4)" fg:x="30909" fg:w="702"/><text x="89.4681%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.35%)</title><rect x="91.2005%" y="149" width="0.3549%" height="15" fill="rgb(250,195,49)" fg:x="31611" fg:w="123"/><text x="91.4935%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="91.5554%" y="133" width="0.4760%" height="15" fill="rgb(241,192,25)" fg:x="31734" fg:w="165"/><text x="91.8483%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.55%)</title><rect x="91.5554%" y="149" width="0.5539%" height="15" fill="rgb(208,124,10)" fg:x="31734" fg:w="192"/><text x="91.8483%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.1093%" y="149" width="0.0317%" height="15" fill="rgb(222,33,0)" fg:x="31926" fg:w="11"/><text x="92.4023%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,070 instructions, 3.09%)</title><rect x="89.1752%" y="165" width="3.0870%" height="15" fill="rgb(234,209,28)" fg:x="30909" fg:w="1070"/><text x="89.4681%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,104 instructions, 3.19%)</title><rect x="89.1752%" y="181" width="3.1851%" height="15" fill="rgb(224,11,23)" fg:x="30909" fg:w="1104"/><text x="89.4681%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="92.3603%" y="181" width="0.2250%" height="15" fill="rgb(232,99,1)" fg:x="32013" fg:w="78"/><text x="92.6533%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="92.5853%" y="181" width="0.2193%" height="15" fill="rgb(237,95,45)" fg:x="32091" fg:w="76"/><text x="92.8783%" y="191.50"></text></g><g><title>memset (116 instructions, 0.33%)</title><rect x="92.8046%" y="181" width="0.3347%" height="15" fill="rgb(208,109,11)" fg:x="32167" fg:w="116"/><text x="93.0976%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.48%)</title><rect x="93.1393%" y="181" width="0.4760%" height="15" fill="rgb(216,190,48)" fg:x="32283" fg:w="165"/><text x="93.4322%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="93.6153%" y="181" width="0.1587%" height="15" fill="rgb(251,171,36)" fg:x="32448" fg:w="55"/><text x="93.9083%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (20 instructions, 0.06%)</title><rect x="93.7740%" y="181" width="0.0577%" height="15" fill="rgb(230,62,22)" fg:x="32503" fg:w="20"/><text x="94.0670%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="93.8317%" y="181" width="0.1818%" height="15" fill="rgb(225,114,35)" fg:x="32523" fg:w="63"/><text x="94.1247%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="94.0134%" y="149" width="0.0144%" height="15" fill="rgb(215,118,42)" fg:x="32586" fg:w="5"/><text x="94.3064%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0279%" y="149" width="0.0317%" height="15" fill="rgb(243,119,21)" fg:x="32591" fg:w="11"/><text x="94.3208%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0596%" y="149" width="0.0317%" height="15" fill="rgb(252,177,53)" fg:x="32602" fg:w="11"/><text x="94.3526%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="94.0913%" y="149" width="0.3924%" height="15" fill="rgb(237,209,29)" fg:x="32613" fg:w="136"/><text x="94.3843%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 1.00%)</title><rect x="94.0134%" y="165" width="1.0040%" height="15" fill="rgb(212,65,23)" fg:x="32586" fg:w="348"/><text x="94.3064%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.09%)</title><rect x="95.0175%" y="165" width="0.0923%" height="15" fill="rgb(230,222,46)" fg:x="32934" fg:w="32"/><text x="95.3104%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="95.1098%" y="117" width="0.2193%" height="15" fill="rgb(215,135,32)" fg:x="32966" fg:w="76"/><text x="95.4027%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.32%)</title><rect x="95.1098%" y="133" width="0.3202%" height="15" fill="rgb(246,101,22)" fg:x="32966" fg:w="111"/><text x="95.4027%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.51%)</title><rect x="95.1098%" y="149" width="0.5078%" height="15" fill="rgb(206,107,13)" fg:x="32966" fg:w="176"/><text x="95.4027%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6176%" y="149" width="0.0317%" height="15" fill="rgb(250,100,44)" fg:x="33142" fg:w="11"/><text x="95.9105%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6493%" y="149" width="0.0317%" height="15" fill="rgb(231,147,38)" fg:x="33153" fg:w="11"/><text x="95.9423%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (363 instructions, 1.05%)</title><rect x="95.1098%" y="165" width="1.0473%" height="15" fill="rgb(229,8,40)" fg:x="32966" fg:w="363"/><text x="95.4027%" y="175.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.09%)</title><rect x="96.1571%" y="165" width="0.0866%" height="15" fill="rgb(221,135,30)" fg:x="33329" fg:w="30"/><text x="96.4500%" y="175.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="96.2436%" y="165" width="0.0144%" height="15" fill="rgb(249,193,18)" fg:x="33359" fg:w="5"/><text x="96.5366%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="96.2580%" y="165" width="0.0144%" height="15" fill="rgb(209,133,39)" fg:x="33364" fg:w="5"/><text x="96.5510%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="96.2725%" y="165" width="0.1587%" height="15" fill="rgb(232,100,14)" fg:x="33369" fg:w="55"/><text x="96.5654%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (968 instructions, 2.79%)</title><rect x="94.0134%" y="181" width="2.7928%" height="15" fill="rgb(224,185,1)" fg:x="32586" fg:w="968"/><text x="94.3064%" y="191.50">ic..</text></g><g><title>publisher::subscribe_0_::{{closure}} (33,805 instructions, 97.53%)</title><rect x="1.4425%" y="197" width="97.5304%" height="15" fill="rgb(223,139,8)" fg:x="500" fg:w="33805"/><text x="1.7355%" y="207.50">publisher::subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9729%" y="197" width="0.0346%" height="15" fill="rgb(232,213,38)" fg:x="34305" fg:w="12"/><text x="99.2659%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="99.0075%" y="197" width="0.2337%" height="15" fill="rgb(207,94,22)" fg:x="34317" fg:w="81"/><text x="99.3005%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="99.2412%" y="197" width="0.4760%" height="15" fill="rgb(219,183,54)" fg:x="34398" fg:w="165"/><text x="99.5342%" y="207.50"></text></g><g><title>all (34,661 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(216,185,54)" fg:x="0" fg:w="34661"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (34,661 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(254,217,39)" fg:x="0" fg:w="34661"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>