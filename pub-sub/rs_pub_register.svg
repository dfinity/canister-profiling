<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="43803"><g><title>ic_cdk::setup (58 instructions, 0.13%)</title><rect x="0.0000%" y="197" width="0.1324%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.57%)</title><rect x="0.1324%" y="197" width="1.5730%" height="15" fill="rgb(213,208,19)" fg:x="58" fg:w="689"/><text x="0.4254%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.7054%" y="197" width="0.2077%" height="15" fill="rgb(233,156,4)" fg:x="747" fg:w="91"/><text x="1.9983%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.9131%" y="181" width="0.2077%" height="15" fill="rgb(207,194,5)" fg:x="838" fg:w="91"/><text x="2.2061%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.13%)</title><rect x="2.1209%" y="149" width="0.1301%" height="15" fill="rgb(206,111,30)" fg:x="929" fg:w="57"/><text x="2.4138%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.35%)</title><rect x="2.1209%" y="165" width="0.3539%" height="15" fill="rgb(243,70,54)" fg:x="929" fg:w="155"/><text x="2.4138%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4747%" y="149" width="0.0137%" height="15" fill="rgb(242,28,8)" fg:x="1084" fg:w="6"/><text x="2.7677%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.01%)</title><rect x="2.4747%" y="165" width="1.0113%" height="15" fill="rgb(219,106,18)" fg:x="1084" fg:w="443"/><text x="2.7677%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="3.4861%" y="165" width="0.2169%" height="15" fill="rgb(244,222,10)" fg:x="1527" fg:w="95"/><text x="3.7790%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.7029%" y="165" width="0.1370%" height="15" fill="rgb(236,179,52)" fg:x="1622" fg:w="60"/><text x="3.9959%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.8399%" y="165" width="0.1370%" height="15" fill="rgb(213,23,39)" fg:x="1682" fg:w="60"/><text x="4.1329%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.9769%" y="165" width="0.1370%" height="15" fill="rgb(238,48,10)" fg:x="1742" fg:w="60"/><text x="4.2699%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="4.1139%" y="165" width="0.1370%" height="15" fill="rgb(251,196,23)" fg:x="1802" fg:w="60"/><text x="4.4068%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="4.2509%" y="165" width="0.1872%" height="15" fill="rgb(250,152,24)" fg:x="1862" fg:w="82"/><text x="4.5438%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="4.4381%" y="165" width="0.1598%" height="15" fill="rgb(209,150,17)" fg:x="1944" fg:w="70"/><text x="4.7310%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="4.5979%" y="149" width="0.0137%" height="15" fill="rgb(234,202,34)" fg:x="2014" fg:w="6"/><text x="4.8908%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.01%)</title><rect x="4.5979%" y="165" width="1.0113%" height="15" fill="rgb(253,148,53)" fg:x="2014" fg:w="443"/><text x="4.8908%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="5.6092%" y="165" width="0.0434%" height="15" fill="rgb(218,129,16)" fg:x="2457" fg:w="19"/><text x="5.9022%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="5.6526%" y="149" width="0.2077%" height="15" fill="rgb(216,85,19)" fg:x="2476" fg:w="91"/><text x="5.9455%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="5.8603%" y="117" width="0.1530%" height="15" fill="rgb(235,228,7)" fg:x="2567" fg:w="67"/><text x="6.1533%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.22%)</title><rect x="5.8603%" y="133" width="0.2192%" height="15" fill="rgb(245,175,0)" fg:x="2567" fg:w="96"/><text x="6.1533%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="6.0795%" y="85" width="0.0251%" height="15" fill="rgb(208,168,36)" fg:x="2663" fg:w="11"/><text x="6.3725%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="6.1046%" y="69" width="0.0799%" height="15" fill="rgb(246,171,24)" fg:x="2674" fg:w="35"/><text x="6.3976%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="6.1046%" y="85" width="0.1461%" height="15" fill="rgb(215,142,24)" fg:x="2674" fg:w="64"/><text x="6.3976%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="6.0795%" y="101" width="0.3287%" height="15" fill="rgb(250,187,7)" fg:x="2663" fg:w="144"/><text x="6.3725%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.48%)</title><rect x="6.0795%" y="117" width="0.4771%" height="15" fill="rgb(228,66,33)" fg:x="2663" fg:w="209"/><text x="6.3725%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.50%)</title><rect x="6.0795%" y="133" width="0.5000%" height="15" fill="rgb(234,215,21)" fg:x="2663" fg:w="219"/><text x="6.3725%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 1.04%)</title><rect x="5.8603%" y="149" width="1.0433%" height="15" fill="rgb(222,191,20)" fg:x="2567" fg:w="457"/><text x="6.1533%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.57%)</title><rect x="5.6526%" y="165" width="1.5661%" height="15" fill="rgb(245,79,54)" fg:x="2476" fg:w="686"/><text x="5.9455%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="7.2187%" y="165" width="0.2169%" height="15" fill="rgb(240,10,37)" fg:x="3162" fg:w="95"/><text x="7.5117%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.14%)</title><rect x="7.4356%" y="165" width="0.1438%" height="15" fill="rgb(214,192,32)" fg:x="3257" fg:w="63"/><text x="7.7285%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="7.5794%" y="149" width="0.1370%" height="15" fill="rgb(209,36,54)" fg:x="3320" fg:w="60"/><text x="7.8724%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="7.7164%" y="149" width="0.2077%" height="15" fill="rgb(220,10,11)" fg:x="3380" fg:w="91"/><text x="8.0093%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="7.9241%" y="133" width="0.2077%" height="15" fill="rgb(221,106,17)" fg:x="3471" fg:w="91"/><text x="8.2171%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.30%)</title><rect x="8.1319%" y="101" width="0.2991%" height="15" fill="rgb(251,142,44)" fg:x="3562" fg:w="131"/><text x="8.4248%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (160 instructions, 0.37%)</title><rect x="8.1319%" y="117" width="0.3653%" height="15" fill="rgb(238,13,15)" fg:x="3562" fg:w="160"/><text x="8.4248%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.20%)</title><rect x="8.4971%" y="37" width="0.1986%" height="15" fill="rgb(208,107,27)" fg:x="3722" fg:w="87"/><text x="8.7901%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.30%)</title><rect x="8.4971%" y="53" width="0.3013%" height="15" fill="rgb(205,136,37)" fg:x="3722" fg:w="132"/><text x="8.7901%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.50%)</title><rect x="8.4971%" y="69" width="0.5000%" height="15" fill="rgb(250,205,27)" fg:x="3722" fg:w="219"/><text x="8.7901%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.37%)</title><rect x="8.9971%" y="69" width="0.3653%" height="15" fill="rgb(210,80,43)" fg:x="3941" fg:w="160"/><text x="9.2901%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (419 instructions, 0.96%)</title><rect x="8.4971%" y="85" width="0.9566%" height="15" fill="rgb(247,160,36)" fg:x="3722" fg:w="419"/><text x="8.7901%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="9.4537%" y="53" width="0.0251%" height="15" fill="rgb(234,13,49)" fg:x="4141" fg:w="11"/><text x="9.7467%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="9.4788%" y="37" width="0.0799%" height="15" fill="rgb(234,122,0)" fg:x="4152" fg:w="35"/><text x="9.7718%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="9.4788%" y="53" width="0.1461%" height="15" fill="rgb(207,146,38)" fg:x="4152" fg:w="64"/><text x="9.7718%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="9.4537%" y="69" width="0.3287%" height="15" fill="rgb(207,177,25)" fg:x="4141" fg:w="144"/><text x="9.7467%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.49%)</title><rect x="9.4537%" y="85" width="0.4863%" height="15" fill="rgb(211,178,42)" fg:x="4141" fg:w="213"/><text x="9.7467%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="9.9400%" y="69" width="0.1164%" height="15" fill="rgb(230,69,54)" fg:x="4354" fg:w="51"/><text x="10.2329%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.18%)</title><rect x="9.9400%" y="85" width="0.1826%" height="15" fill="rgb(214,135,41)" fg:x="4354" fg:w="80"/><text x="10.2329%" y="95.50"></text></g><g><title>core::fmt::write (882 instructions, 2.01%)</title><rect x="8.4971%" y="101" width="2.0136%" height="15" fill="rgb(237,67,25)" fg:x="3722" fg:w="882"/><text x="8.7901%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (948 instructions, 2.16%)</title><rect x="8.4971%" y="117" width="2.1642%" height="15" fill="rgb(222,189,50)" fg:x="3722" fg:w="948"/><text x="8.7901%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,250 instructions, 2.85%)</title><rect x="8.1319%" y="133" width="2.8537%" height="15" fill="rgb(245,148,34)" fg:x="3562" fg:w="1250"/><text x="8.4248%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,479 instructions, 3.38%)</title><rect x="7.9241%" y="149" width="3.3765%" height="15" fill="rgb(222,29,6)" fg:x="3471" fg:w="1479"/><text x="8.2171%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="11.3006%" y="149" width="0.1895%" height="15" fill="rgb(221,189,43)" fg:x="4950" fg:w="83"/><text x="11.5936%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.14%)</title><rect x="11.4901%" y="149" width="0.1438%" height="15" fill="rgb(207,36,27)" fg:x="5033" fg:w="63"/><text x="11.7830%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="11.6339%" y="149" width="0.1735%" height="15" fill="rgb(217,90,24)" fg:x="5096" fg:w="76"/><text x="11.9269%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="11.8074%" y="117" width="0.2077%" height="15" fill="rgb(224,66,35)" fg:x="5172" fg:w="91"/><text x="12.1004%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="11.8074%" y="133" width="0.3059%" height="15" fill="rgb(221,13,50)" fg:x="5172" fg:w="134"/><text x="12.1004%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.50%)</title><rect x="11.8074%" y="149" width="0.5000%" height="15" fill="rgb(236,68,49)" fg:x="5172" fg:w="219"/><text x="12.1004%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="12.3074%" y="149" width="0.1370%" height="15" fill="rgb(229,146,28)" fg:x="5391" fg:w="60"/><text x="12.6003%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.4444%" y="149" width="0.2077%" height="15" fill="rgb(225,31,38)" fg:x="5451" fg:w="91"/><text x="12.7373%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.6521%" y="133" width="0.2077%" height="15" fill="rgb(250,208,3)" fg:x="5542" fg:w="91"/><text x="12.9451%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.30%)</title><rect x="12.8598%" y="101" width="0.2991%" height="15" fill="rgb(246,54,23)" fg:x="5633" fg:w="131"/><text x="13.1528%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (160 instructions, 0.37%)</title><rect x="12.8598%" y="117" width="0.3653%" height="15" fill="rgb(243,76,11)" fg:x="5633" fg:w="160"/><text x="13.1528%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.20%)</title><rect x="13.2251%" y="37" width="0.1986%" height="15" fill="rgb(245,21,50)" fg:x="5793" fg:w="87"/><text x="13.5181%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.30%)</title><rect x="13.2251%" y="53" width="0.3013%" height="15" fill="rgb(228,9,43)" fg:x="5793" fg:w="132"/><text x="13.5181%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.50%)</title><rect x="13.2251%" y="69" width="0.5000%" height="15" fill="rgb(208,100,47)" fg:x="5793" fg:w="219"/><text x="13.5181%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.37%)</title><rect x="13.7251%" y="69" width="0.3653%" height="15" fill="rgb(232,26,8)" fg:x="6012" fg:w="160"/><text x="14.0181%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (419 instructions, 0.96%)</title><rect x="13.2251%" y="85" width="0.9566%" height="15" fill="rgb(216,166,38)" fg:x="5793" fg:w="419"/><text x="13.5181%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="14.1817%" y="53" width="0.0251%" height="15" fill="rgb(251,202,51)" fg:x="6212" fg:w="11"/><text x="14.4746%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="14.2068%" y="37" width="0.0799%" height="15" fill="rgb(254,216,34)" fg:x="6223" fg:w="35"/><text x="14.4998%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="14.2068%" y="53" width="0.1461%" height="15" fill="rgb(251,32,27)" fg:x="6223" fg:w="64"/><text x="14.4998%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="14.1817%" y="69" width="0.3287%" height="15" fill="rgb(208,127,28)" fg:x="6212" fg:w="144"/><text x="14.4746%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.49%)</title><rect x="14.1817%" y="85" width="0.4863%" height="15" fill="rgb(224,137,22)" fg:x="6212" fg:w="213"/><text x="14.4746%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="14.6679%" y="69" width="0.1164%" height="15" fill="rgb(254,70,32)" fg:x="6425" fg:w="51"/><text x="14.9609%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (80 instructions, 0.18%)</title><rect x="14.6679%" y="85" width="0.1826%" height="15" fill="rgb(229,75,37)" fg:x="6425" fg:w="80"/><text x="14.9609%" y="95.50"></text></g><g><title>core::fmt::write (882 instructions, 2.01%)</title><rect x="13.2251%" y="101" width="2.0136%" height="15" fill="rgb(252,64,23)" fg:x="5793" fg:w="882"/><text x="13.5181%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (948 instructions, 2.16%)</title><rect x="13.2251%" y="117" width="2.1642%" height="15" fill="rgb(232,162,48)" fg:x="5793" fg:w="948"/><text x="13.5181%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,250 instructions, 2.85%)</title><rect x="12.8598%" y="133" width="2.8537%" height="15" fill="rgb(246,160,12)" fg:x="5633" fg:w="1250"/><text x="13.1528%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,479 instructions, 3.38%)</title><rect x="12.6521%" y="149" width="3.3765%" height="15" fill="rgb(247,166,0)" fg:x="5542" fg:w="1479"/><text x="12.9451%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="16.0286%" y="149" width="0.1895%" height="15" fill="rgb(249,219,21)" fg:x="7021" fg:w="83"/><text x="16.3216%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.14%)</title><rect x="16.2181%" y="149" width="0.1438%" height="15" fill="rgb(205,209,3)" fg:x="7104" fg:w="63"/><text x="16.5110%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="16.3619%" y="149" width="0.1735%" height="15" fill="rgb(243,44,1)" fg:x="7167" fg:w="76"/><text x="16.6549%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="16.5354%" y="149" width="0.1370%" height="15" fill="rgb(206,159,16)" fg:x="7243" fg:w="60"/><text x="16.8284%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="16.6724%" y="133" width="0.1872%" height="15" fill="rgb(244,77,30)" fg:x="7303" fg:w="82"/><text x="16.9653%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="16.8596%" y="133" width="0.1598%" height="15" fill="rgb(218,69,12)" fg:x="7385" fg:w="70"/><text x="17.1525%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="17.0194%" y="117" width="0.0137%" height="15" fill="rgb(212,87,7)" fg:x="7455" fg:w="6"/><text x="17.3124%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.01%)</title><rect x="17.0194%" y="133" width="1.0113%" height="15" fill="rgb(245,114,25)" fg:x="7455" fg:w="443"/><text x="17.3124%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="18.0307%" y="133" width="0.0434%" height="15" fill="rgb(210,61,42)" fg:x="7898" fg:w="19"/><text x="18.3237%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="18.0741%" y="117" width="0.2077%" height="15" fill="rgb(211,52,33)" fg:x="7917" fg:w="91"/><text x="18.3671%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="18.2819%" y="85" width="0.1530%" height="15" fill="rgb(234,58,33)" fg:x="8008" fg:w="67"/><text x="18.5748%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.22%)</title><rect x="18.2819%" y="101" width="0.2192%" height="15" fill="rgb(220,115,36)" fg:x="8008" fg:w="96"/><text x="18.5748%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="18.5010%" y="53" width="0.0251%" height="15" fill="rgb(243,153,54)" fg:x="8104" fg:w="11"/><text x="18.7940%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="18.5261%" y="37" width="0.0799%" height="15" fill="rgb(251,47,18)" fg:x="8115" fg:w="35"/><text x="18.8191%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="18.5261%" y="53" width="0.1461%" height="15" fill="rgb(242,102,42)" fg:x="8115" fg:w="64"/><text x="18.8191%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="18.5010%" y="69" width="0.3287%" height="15" fill="rgb(234,31,38)" fg:x="8104" fg:w="144"/><text x="18.7940%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.48%)</title><rect x="18.5010%" y="85" width="0.4771%" height="15" fill="rgb(221,117,51)" fg:x="8104" fg:w="209"/><text x="18.7940%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.50%)</title><rect x="18.5010%" y="101" width="0.5000%" height="15" fill="rgb(212,20,18)" fg:x="8104" fg:w="219"/><text x="18.7940%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 1.04%)</title><rect x="18.2819%" y="117" width="1.0433%" height="15" fill="rgb(245,133,36)" fg:x="8008" fg:w="457"/><text x="18.5748%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.57%)</title><rect x="18.0741%" y="133" width="1.5661%" height="15" fill="rgb(212,6,19)" fg:x="7917" fg:w="686"/><text x="18.3671%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="19.6402%" y="133" width="0.2169%" height="15" fill="rgb(218,1,36)" fg:x="8603" fg:w="95"/><text x="19.9332%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.14%)</title><rect x="19.8571%" y="133" width="0.1438%" height="15" fill="rgb(246,84,54)" fg:x="8698" fg:w="63"/><text x="20.1501%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="20.0009%" y="117" width="0.1872%" height="15" fill="rgb(242,110,6)" fg:x="8761" fg:w="82"/><text x="20.2939%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.67%)</title><rect x="20.1881%" y="117" width="0.6712%" height="15" fill="rgb(214,47,5)" fg:x="8843" fg:w="294"/><text x="20.4811%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="20.8593%" y="101" width="0.1872%" height="15" fill="rgb(218,159,25)" fg:x="9137" fg:w="82"/><text x="21.1523%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="21.0465%" y="101" width="0.2169%" height="15" fill="rgb(215,211,28)" fg:x="9219" fg:w="95"/><text x="21.3395%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="21.2634%" y="101" width="0.1735%" height="15" fill="rgb(238,59,32)" fg:x="9314" fg:w="76"/><text x="21.5564%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.75%)</title><rect x="20.8593%" y="117" width="0.7534%" height="15" fill="rgb(226,82,3)" fg:x="9137" fg:w="330"/><text x="21.1523%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="21.6127%" y="117" width="0.1735%" height="15" fill="rgb(240,164,32)" fg:x="9467" fg:w="76"/><text x="21.9056%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 2.12%)</title><rect x="20.0009%" y="133" width="2.1186%" height="15" fill="rgb(232,46,7)" fg:x="8761" fg:w="928"/><text x="20.2939%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="22.1195%" y="133" width="0.2077%" height="15" fill="rgb(229,129,53)" fg:x="9689" fg:w="91"/><text x="22.4125%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.06%)</title><rect x="22.3272%" y="133" width="0.0594%" height="15" fill="rgb(234,188,29)" fg:x="9780" fg:w="26"/><text x="22.6202%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="22.3866%" y="133" width="0.1735%" height="15" fill="rgb(246,141,4)" fg:x="9806" fg:w="76"/><text x="22.6796%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,944 instructions, 6.72%)</title><rect x="16.6724%" y="149" width="6.7210%" height="15" fill="rgb(229,23,39)" fg:x="7303" fg:w="2944"/><text x="16.9653%" y="159.50">&lt;candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="23.3957%" y="133" width="0.2032%" height="15" fill="rgb(206,12,3)" fg:x="10248" fg:w="89"/><text x="23.6886%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="23.6879%" y="133" width="0.1895%" height="15" fill="rgb(252,226,20)" fg:x="10376" fg:w="83"/><text x="23.9808%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (250 instructions, 0.57%)</title><rect x="23.3934%" y="149" width="0.5707%" height="15" fill="rgb(216,123,35)" fg:x="10247" fg:w="250"/><text x="23.6863%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="23.9641%" y="133" width="0.0525%" height="15" fill="rgb(212,68,40)" fg:x="10497" fg:w="23"/><text x="24.2571%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="24.0166%" y="133" width="0.0616%" height="15" fill="rgb(254,125,32)" fg:x="10520" fg:w="27"/><text x="24.3096%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.44%)</title><rect x="23.9641%" y="149" width="0.4406%" height="15" fill="rgb(253,97,22)" fg:x="10497" fg:w="193"/><text x="24.2571%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,113 instructions, 18.52%)</title><rect x="7.5794%" y="165" width="18.5216%" height="15" fill="rgb(241,101,14)" fg:x="3320" fg:w="8113"/><text x="7.8724%" y="175.50">&lt;candid::binary_parser::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="26.1010%" y="165" width="0.2077%" height="15" fill="rgb(238,103,29)" fg:x="11433" fg:w="91"/><text x="26.3939%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="26.3087%" y="165" width="0.1735%" height="15" fill="rgb(233,195,47)" fg:x="11524" fg:w="76"/><text x="26.6017%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="26.4822%" y="165" width="0.1598%" height="15" fill="rgb(246,218,30)" fg:x="11600" fg:w="70"/><text x="26.7752%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="26.6420%" y="133" width="0.0137%" height="15" fill="rgb(219,145,47)" fg:x="11670" fg:w="6"/><text x="26.9350%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.01%)</title><rect x="26.6420%" y="149" width="1.0113%" height="15" fill="rgb(243,12,26)" fg:x="11670" fg:w="443"/><text x="26.9350%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="27.6534%" y="149" width="0.0434%" height="15" fill="rgb(214,87,16)" fg:x="12113" fg:w="19"/><text x="27.9463%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.26%)</title><rect x="27.6967%" y="133" width="0.2603%" height="15" fill="rgb(208,99,42)" fg:x="12132" fg:w="114"/><text x="27.9897%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.15%)</title><rect x="27.9570%" y="101" width="0.1530%" height="15" fill="rgb(253,99,2)" fg:x="12246" fg:w="67"/><text x="28.2500%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (96 instructions, 0.22%)</title><rect x="27.9570%" y="117" width="0.2192%" height="15" fill="rgb(220,168,23)" fg:x="12246" fg:w="96"/><text x="28.2500%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="28.1762%" y="69" width="0.0251%" height="15" fill="rgb(242,38,24)" fg:x="12342" fg:w="11"/><text x="28.4691%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="28.2013%" y="53" width="0.0799%" height="15" fill="rgb(225,182,9)" fg:x="12353" fg:w="35"/><text x="28.4942%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="28.2013%" y="69" width="0.1461%" height="15" fill="rgb(243,178,37)" fg:x="12353" fg:w="64"/><text x="28.4942%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="28.1762%" y="85" width="0.3287%" height="15" fill="rgb(232,139,19)" fg:x="12342" fg:w="144"/><text x="28.4691%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.48%)</title><rect x="28.1762%" y="101" width="0.4771%" height="15" fill="rgb(225,201,24)" fg:x="12342" fg:w="209"/><text x="28.4691%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.50%)</title><rect x="28.1762%" y="117" width="0.5000%" height="15" fill="rgb(221,47,46)" fg:x="12342" fg:w="219"/><text x="28.4691%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 1.04%)</title><rect x="27.9570%" y="133" width="1.0433%" height="15" fill="rgb(249,23,13)" fg:x="12246" fg:w="457"/><text x="28.2500%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.62%)</title><rect x="27.6967%" y="149" width="1.6186%" height="15" fill="rgb(219,9,5)" fg:x="12132" fg:w="709"/><text x="27.9897%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="29.3153%" y="149" width="0.2169%" height="15" fill="rgb(254,171,16)" fg:x="12841" fg:w="95"/><text x="29.6083%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="29.5322%" y="149" width="0.1370%" height="15" fill="rgb(230,171,20)" fg:x="12936" fg:w="60"/><text x="29.8252%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="29.6692%" y="133" width="0.1872%" height="15" fill="rgb(210,71,41)" fg:x="12996" fg:w="82"/><text x="29.9622%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="29.8564%" y="133" width="0.2169%" height="15" fill="rgb(206,173,20)" fg:x="13078" fg:w="95"/><text x="30.1494%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="30.0733%" y="133" width="0.1735%" height="15" fill="rgb(233,88,34)" fg:x="13173" fg:w="76"/><text x="30.3663%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.75%)</title><rect x="29.6692%" y="149" width="0.7534%" height="15" fill="rgb(223,209,46)" fg:x="12996" fg:w="330"/><text x="29.9622%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="30.4226%" y="149" width="0.1895%" height="15" fill="rgb(250,43,18)" fg:x="13326" fg:w="83"/><text x="30.7155%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,979 instructions, 4.52%)</title><rect x="26.6420%" y="165" width="4.5180%" height="15" fill="rgb(208,13,10)" fg:x="11670" fg:w="1979"/><text x="26.9350%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="31.1600%" y="165" width="0.1735%" height="15" fill="rgb(212,200,36)" fg:x="13649" fg:w="76"/><text x="31.4529%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="31.3335%" y="165" width="0.1895%" height="15" fill="rgb(225,90,30)" fg:x="13725" fg:w="83"/><text x="31.6264%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="31.5230%" y="149" width="0.1895%" height="15" fill="rgb(236,182,39)" fg:x="13808" fg:w="83"/><text x="31.8159%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.41%)</title><rect x="31.5230%" y="165" width="0.4086%" height="15" fill="rgb(212,144,35)" fg:x="13808" fg:w="179"/><text x="31.8159%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="31.9316%" y="133" width="0.1895%" height="15" fill="rgb(228,63,44)" fg:x="13987" fg:w="83"/><text x="32.2246%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.29%)</title><rect x="31.9316%" y="149" width="0.2877%" height="15" fill="rgb(228,109,6)" fg:x="13987" fg:w="126"/><text x="32.2246%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.48%)</title><rect x="31.9316%" y="165" width="0.4817%" height="15" fill="rgb(238,117,24)" fg:x="13987" fg:w="211"/><text x="32.2246%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="32.4133%" y="165" width="0.2077%" height="15" fill="rgb(242,26,26)" fg:x="14198" fg:w="91"/><text x="32.7063%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.18%)</title><rect x="32.6211%" y="149" width="0.1849%" height="15" fill="rgb(221,92,48)" fg:x="14289" fg:w="81"/><text x="32.9140%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="32.8060%" y="117" width="0.2260%" height="15" fill="rgb(209,209,32)" fg:x="14370" fg:w="99"/><text x="33.0989%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (128 instructions, 0.29%)</title><rect x="32.8060%" y="133" width="0.2922%" height="15" fill="rgb(221,70,22)" fg:x="14370" fg:w="128"/><text x="33.0989%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="33.0982%" y="85" width="0.0251%" height="15" fill="rgb(248,145,5)" fg:x="14498" fg:w="11"/><text x="33.3912%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="33.1233%" y="69" width="0.0799%" height="15" fill="rgb(226,116,26)" fg:x="14509" fg:w="35"/><text x="33.4163%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="33.1233%" y="85" width="0.1461%" height="15" fill="rgb(244,5,17)" fg:x="14509" fg:w="64"/><text x="33.4163%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="33.0982%" y="101" width="0.3287%" height="15" fill="rgb(252,159,33)" fg:x="14498" fg:w="144"/><text x="33.3912%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.48%)</title><rect x="33.0982%" y="117" width="0.4771%" height="15" fill="rgb(206,71,0)" fg:x="14498" fg:w="209"/><text x="33.3912%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.52%)</title><rect x="33.0982%" y="133" width="0.5228%" height="15" fill="rgb(233,118,54)" fg:x="14498" fg:w="229"/><text x="33.3912%" y="143.50"></text></g><g><title>core::fmt::write (499 instructions, 1.14%)</title><rect x="32.8060%" y="149" width="1.1392%" height="15" fill="rgb(234,83,48)" fg:x="14370" fg:w="499"/><text x="33.0989%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (718 instructions, 1.64%)</title><rect x="32.6211%" y="165" width="1.6392%" height="15" fill="rgb(228,3,54)" fg:x="14289" fg:w="718"/><text x="32.9140%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="34.2602%" y="149" width="0.2077%" height="15" fill="rgb(226,155,13)" fg:x="15007" fg:w="91"/><text x="34.5532%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (159 instructions, 0.36%)</title><rect x="34.2602%" y="165" width="0.3630%" height="15" fill="rgb(241,28,37)" fg:x="15007" fg:w="159"/><text x="34.5532%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.23%)</title><rect x="34.6232%" y="165" width="0.2329%" height="15" fill="rgb(233,93,10)" fg:x="15166" fg:w="102"/><text x="34.9162%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="34.8561%" y="165" width="0.0342%" height="15" fill="rgb(225,113,19)" fg:x="15268" fg:w="15"/><text x="35.1490%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.23%)</title><rect x="34.8903%" y="165" width="0.2329%" height="15" fill="rgb(241,2,18)" fg:x="15283" fg:w="102"/><text x="35.1833%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.1232%" y="133" width="0.2077%" height="15" fill="rgb(228,207,21)" fg:x="15385" fg:w="91"/><text x="35.4161%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (132 instructions, 0.30%)</title><rect x="35.1232%" y="149" width="0.3013%" height="15" fill="rgb(213,211,35)" fg:x="15385" fg:w="132"/><text x="35.4161%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.33%)</title><rect x="35.4245%" y="133" width="0.3333%" height="15" fill="rgb(209,83,10)" fg:x="15517" fg:w="146"/><text x="35.7175%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.53%)</title><rect x="35.4245%" y="149" width="0.5251%" height="15" fill="rgb(209,164,1)" fg:x="15517" fg:w="230"/><text x="35.7175%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.33%)</title><rect x="35.9496%" y="133" width="0.3333%" height="15" fill="rgb(213,184,43)" fg:x="15747" fg:w="146"/><text x="36.2426%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (233 instructions, 0.53%)</title><rect x="35.9496%" y="149" width="0.5319%" height="15" fill="rgb(231,61,34)" fg:x="15747" fg:w="233"/><text x="36.2426%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (715 instructions, 1.63%)</title><rect x="35.1232%" y="165" width="1.6323%" height="15" fill="rgb(235,75,3)" fg:x="15385" fg:w="715"/><text x="35.4161%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="36.7555%" y="165" width="0.0342%" height="15" fill="rgb(220,106,47)" fg:x="16100" fg:w="15"/><text x="37.0484%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (98 instructions, 0.22%)</title><rect x="36.7897%" y="165" width="0.2237%" height="15" fill="rgb(210,196,33)" fg:x="16115" fg:w="98"/><text x="37.0827%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="37.0134%" y="165" width="0.0342%" height="15" fill="rgb(229,154,42)" fg:x="16213" fg:w="15"/><text x="37.3064%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.14%)</title><rect x="37.0477%" y="149" width="0.1438%" height="15" fill="rgb(228,114,26)" fg:x="16228" fg:w="63"/><text x="37.3407%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (135 instructions, 0.31%)</title><rect x="37.0477%" y="165" width="0.3082%" height="15" fill="rgb(208,144,1)" fg:x="16228" fg:w="135"/><text x="37.3407%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="37.3559%" y="133" width="0.2077%" height="15" fill="rgb(239,112,37)" fg:x="16363" fg:w="91"/><text x="37.6489%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="37.5636%" y="101" width="0.2260%" height="15" fill="rgb(210,96,50)" fg:x="16454" fg:w="99"/><text x="37.8566%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (128 instructions, 0.29%)</title><rect x="37.5636%" y="117" width="0.2922%" height="15" fill="rgb(222,178,2)" fg:x="16454" fg:w="128"/><text x="37.8566%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="37.8559%" y="69" width="0.0251%" height="15" fill="rgb(226,74,18)" fg:x="16582" fg:w="11"/><text x="38.1488%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="37.8810%" y="53" width="0.0799%" height="15" fill="rgb(225,67,54)" fg:x="16593" fg:w="35"/><text x="38.1739%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.11 (64 instructions, 0.15%)</title><rect x="37.8810%" y="69" width="0.1461%" height="15" fill="rgb(251,92,32)" fg:x="16593" fg:w="64"/><text x="38.1739%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.33%)</title><rect x="37.8559%" y="85" width="0.3287%" height="15" fill="rgb(228,149,22)" fg:x="16582" fg:w="144"/><text x="38.1488%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.48%)</title><rect x="37.8559%" y="101" width="0.4771%" height="15" fill="rgb(243,54,13)" fg:x="16582" fg:w="209"/><text x="38.1488%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.52%)</title><rect x="37.8559%" y="117" width="0.5228%" height="15" fill="rgb(243,180,28)" fg:x="16582" fg:w="229"/><text x="38.1488%" y="127.50"></text></g><g><title>core::fmt::write (499 instructions, 1.14%)</title><rect x="37.5636%" y="133" width="1.1392%" height="15" fill="rgb(208,167,24)" fg:x="16454" fg:w="499"/><text x="37.8566%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (728 instructions, 1.66%)</title><rect x="37.3559%" y="149" width="1.6620%" height="15" fill="rgb(245,73,45)" fg:x="16363" fg:w="728"/><text x="37.6489%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.0179%" y="149" width="0.2077%" height="15" fill="rgb(237,203,48)" fg:x="17091" fg:w="91"/><text x="39.3108%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (945 instructions, 2.16%)</title><rect x="37.3559%" y="165" width="2.1574%" height="15" fill="rgb(211,197,16)" fg:x="16363" fg:w="945"/><text x="37.6489%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.5133%" y="133" width="0.2077%" height="15" fill="rgb(243,99,51)" fg:x="17308" fg:w="91"/><text x="39.8062%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="39.5133%" y="149" width="0.3059%" height="15" fill="rgb(215,123,29)" fg:x="17308" fg:w="134"/><text x="39.8062%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.50%)</title><rect x="39.5133%" y="165" width="0.5000%" height="15" fill="rgb(239,186,37)" fg:x="17308" fg:w="219"/><text x="39.8062%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.0132%" y="165" width="0.2077%" height="15" fill="rgb(252,136,39)" fg:x="17527" fg:w="91"/><text x="40.3062%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="40.2210%" y="165" width="0.2032%" height="15" fill="rgb(223,213,32)" fg:x="17618" fg:w="89"/><text x="40.5140%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.4242%" y="165" width="0.2077%" height="15" fill="rgb(233,115,5)" fg:x="17707" fg:w="91"/><text x="40.7171%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.6319%" y="165" width="0.2077%" height="15" fill="rgb(207,226,44)" fg:x="17798" fg:w="91"/><text x="40.9249%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="40.8397%" y="149" width="0.2032%" height="15" fill="rgb(208,126,0)" fg:x="17889" fg:w="89"/><text x="41.1326%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 instructions, 0.31%)</title><rect x="40.8397%" y="165" width="0.3059%" height="15" fill="rgb(244,66,21)" fg:x="17889" fg:w="134"/><text x="41.1326%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="41.1456%" y="149" width="0.0616%" height="15" fill="rgb(222,97,12)" fg:x="18023" fg:w="27"/><text x="41.4386%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.16%)</title><rect x="41.2072%" y="149" width="0.1552%" height="15" fill="rgb(219,213,19)" fg:x="18050" fg:w="68"/><text x="41.5002%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.44%)</title><rect x="41.1456%" y="165" width="0.4360%" height="15" fill="rgb(252,169,30)" fg:x="18023" fg:w="191"/><text x="41.4386%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="41.5816%" y="165" width="0.2032%" height="15" fill="rgb(206,32,51)" fg:x="18214" fg:w="89"/><text x="41.8746%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.89%)</title><rect x="41.7848%" y="165" width="0.8949%" height="15" fill="rgb(250,172,42)" fg:x="18303" fg:w="392"/><text x="42.0778%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.89%)</title><rect x="42.6797%" y="165" width="0.8949%" height="15" fill="rgb(209,34,43)" fg:x="18695" fg:w="392"/><text x="42.9727%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.15%)</title><rect x="43.5746%" y="165" width="1.1506%" height="15" fill="rgb(223,11,35)" fg:x="19087" fg:w="504"/><text x="43.8676%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (20,453 instructions, 46.69%)</title><rect x="2.1209%" y="181" width="46.6931%" height="15" fill="rgb(251,219,26)" fg:x="929" fg:w="20453"/><text x="2.4138%" y="191.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (344 instructions, 0.79%)</title><rect x="48.8140%" y="181" width="0.7853%" height="15" fill="rgb(231,119,3)" fg:x="21382" fg:w="344"/><text x="49.1070%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (69 instructions, 0.16%)</title><rect x="49.5993%" y="165" width="0.1575%" height="15" fill="rgb(216,97,11)" fg:x="21726" fg:w="69"/><text x="49.8923%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (101 instructions, 0.23%)</title><rect x="49.5993%" y="181" width="0.2306%" height="15" fill="rgb(223,59,9)" fg:x="21726" fg:w="101"/><text x="49.8923%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.39%)</title><rect x="49.8299%" y="181" width="0.3950%" height="15" fill="rgb(233,93,31)" fg:x="21827" fg:w="173"/><text x="50.1229%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="50.2249%" y="165" width="0.0160%" height="15" fill="rgb(239,81,33)" fg:x="22000" fg:w="7"/><text x="50.5178%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="50.2409%" y="149" width="0.1347%" height="15" fill="rgb(213,120,34)" fg:x="22007" fg:w="59"/><text x="50.5338%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.73%)</title><rect x="50.3755%" y="149" width="0.7260%" height="15" fill="rgb(243,49,53)" fg:x="22066" fg:w="318"/><text x="50.6685%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="51.1015%" y="149" width="0.1781%" height="15" fill="rgb(247,216,33)" fg:x="22384" fg:w="78"/><text x="51.3945%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.62%)</title><rect x="50.2409%" y="165" width="1.6163%" height="15" fill="rgb(226,26,14)" fg:x="22007" fg:w="708"/><text x="50.5338%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="51.8572%" y="165" width="0.1895%" height="15" fill="rgb(215,49,53)" fg:x="22715" fg:w="83"/><text x="52.1501%" y="175.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="52.0467%" y="165" width="0.3470%" height="15" fill="rgb(245,162,40)" fg:x="22798" fg:w="152"/><text x="52.3396%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,315 instructions, 3.00%)</title><rect x="50.2249%" y="181" width="3.0021%" height="15" fill="rgb(229,68,17)" fg:x="22000" fg:w="1315"/><text x="50.5178%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.2269%" y="181" width="0.1895%" height="15" fill="rgb(213,182,10)" fg:x="23315" fg:w="83"/><text x="53.5199%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.4164%" y="181" width="0.1895%" height="15" fill="rgb(245,125,30)" fg:x="23398" fg:w="83"/><text x="53.7094%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.6059%" y="181" width="0.1895%" height="15" fill="rgb(232,202,2)" fg:x="23481" fg:w="83"/><text x="53.8989%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="53.7954%" y="149" width="0.0160%" height="15" fill="rgb(237,140,51)" fg:x="23564" fg:w="7"/><text x="54.0884%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="53.8114%" y="133" width="0.1347%" height="15" fill="rgb(236,157,25)" fg:x="23571" fg:w="59"/><text x="54.1044%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.73%)</title><rect x="53.9461%" y="133" width="0.7260%" height="15" fill="rgb(219,209,0)" fg:x="23630" fg:w="318"/><text x="54.2390%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="54.6721%" y="133" width="0.1781%" height="15" fill="rgb(240,116,54)" fg:x="23948" fg:w="78"/><text x="54.9650%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.62%)</title><rect x="53.8114%" y="149" width="1.6163%" height="15" fill="rgb(216,10,36)" fg:x="23571" fg:w="708"/><text x="54.1044%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (833 instructions, 1.90%)</title><rect x="53.7954%" y="165" width="1.9017%" height="15" fill="rgb(222,72,44)" fg:x="23564" fg:w="833"/><text x="54.0884%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="55.6971%" y="165" width="0.1895%" height="15" fill="rgb(232,159,9)" fg:x="24397" fg:w="83"/><text x="55.9901%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="55.8866%" y="149" width="0.0160%" height="15" fill="rgb(210,39,32)" fg:x="24480" fg:w="7"/><text x="56.1796%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="55.9026%" y="133" width="0.1347%" height="15" fill="rgb(216,194,45)" fg:x="24487" fg:w="59"/><text x="56.1955%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.73%)</title><rect x="56.0373%" y="133" width="0.7260%" height="15" fill="rgb(218,18,35)" fg:x="24546" fg:w="318"/><text x="56.3302%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="56.7632%" y="133" width="0.1781%" height="15" fill="rgb(207,83,51)" fg:x="24864" fg:w="78"/><text x="57.0562%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.62%)</title><rect x="55.9026%" y="149" width="1.6163%" height="15" fill="rgb(225,63,43)" fg:x="24487" fg:w="708"/><text x="56.1955%" y="159.50"></text></g><g><title>candid::types::internal::env_add (926 instructions, 2.11%)</title><rect x="55.8866%" y="165" width="2.1140%" height="15" fill="rgb(207,57,36)" fg:x="24480" fg:w="926"/><text x="56.1796%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="58.0006%" y="165" width="0.1895%" height="15" fill="rgb(216,99,33)" fg:x="25406" fg:w="83"/><text x="58.2936%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="58.1901%" y="149" width="0.0160%" height="15" fill="rgb(225,42,16)" fg:x="25489" fg:w="7"/><text x="58.4830%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="58.2061%" y="133" width="0.1347%" height="15" fill="rgb(220,201,45)" fg:x="25496" fg:w="59"/><text x="58.4990%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.73%)</title><rect x="58.3408%" y="133" width="0.7260%" height="15" fill="rgb(225,33,4)" fg:x="25555" fg:w="318"/><text x="58.6337%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="59.0667%" y="133" width="0.1781%" height="15" fill="rgb(224,33,50)" fg:x="25873" fg:w="78"/><text x="59.3597%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.62%)</title><rect x="58.2061%" y="149" width="1.6163%" height="15" fill="rgb(246,198,51)" fg:x="25496" fg:w="708"/><text x="58.4990%" y="159.50"></text></g><g><title>memcmp (491 instructions, 1.12%)</title><rect x="59.8224%" y="149" width="1.1209%" height="15" fill="rgb(205,22,4)" fg:x="26204" fg:w="491"/><text x="60.1154%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="60.9433%" y="133" width="0.2032%" height="15" fill="rgb(206,3,8)" fg:x="26695" fg:w="89"/><text x="61.2363%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.30%)</title><rect x="60.9433%" y="149" width="0.3036%" height="15" fill="rgb(251,23,15)" fg:x="26695" fg:w="133"/><text x="61.2363%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,518 instructions, 3.47%)</title><rect x="58.1901%" y="165" width="3.4655%" height="15" fill="rgb(252,88,28)" fg:x="25489" fg:w="1518"/><text x="58.4830%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="61.6556%" y="117" width="0.1347%" height="15" fill="rgb(212,127,14)" fg:x="27007" fg:w="59"/><text x="61.9486%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.23%)</title><rect x="61.6556%" y="133" width="0.2329%" height="15" fill="rgb(247,145,37)" fg:x="27007" fg:w="102"/><text x="61.9486%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.74%)</title><rect x="61.6556%" y="149" width="0.7374%" height="15" fill="rgb(209,117,53)" fg:x="27007" fg:w="323"/><text x="61.9486%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="62.3930%" y="149" width="0.2077%" height="15" fill="rgb(212,90,42)" fg:x="27330" fg:w="91"/><text x="62.6860%" y="159.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="62.6007%" y="149" width="0.3470%" height="15" fill="rgb(218,164,37)" fg:x="27421" fg:w="152"/><text x="62.8937%" y="159.50"></text></g><g><title>candid::types::internal::env_id (1,011 instructions, 2.31%)</title><rect x="61.6556%" y="165" width="2.3081%" height="15" fill="rgb(246,65,34)" fg:x="27007" fg:w="1011"/><text x="61.9486%" y="175.50">c..</text></g><g><title>candid::types::CandidType::ty (4,583 instructions, 10.46%)</title><rect x="53.7954%" y="181" width="10.4628%" height="15" fill="rgb(231,100,33)" fg:x="23564" fg:w="4583"/><text x="54.0884%" y="191.50">candid::types..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="64.2582%" y="181" width="0.1895%" height="15" fill="rgb(228,126,14)" fg:x="28147" fg:w="83"/><text x="64.5511%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="64.4476%" y="165" width="0.0160%" height="15" fill="rgb(215,173,21)" fg:x="28230" fg:w="7"/><text x="64.7406%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="64.4636%" y="149" width="0.1347%" height="15" fill="rgb(210,6,40)" fg:x="28237" fg:w="59"/><text x="64.7566%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.73%)</title><rect x="64.5983%" y="149" width="0.7260%" height="15" fill="rgb(212,48,18)" fg:x="28296" fg:w="318"/><text x="64.8913%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="65.3243%" y="149" width="0.1781%" height="15" fill="rgb(230,214,11)" fg:x="28614" fg:w="78"/><text x="65.6173%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.62%)</title><rect x="64.4636%" y="165" width="1.6163%" height="15" fill="rgb(254,105,39)" fg:x="28237" fg:w="708"/><text x="64.7566%" y="175.50"></text></g><g><title>memcmp (491 instructions, 1.12%)</title><rect x="66.0799%" y="165" width="1.1209%" height="15" fill="rgb(245,158,5)" fg:x="28945" fg:w="491"/><text x="66.3729%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="67.2009%" y="149" width="0.2032%" height="15" fill="rgb(249,208,11)" fg:x="29436" fg:w="89"/><text x="67.4938%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.30%)</title><rect x="67.2009%" y="165" width="0.3036%" height="15" fill="rgb(210,39,28)" fg:x="29436" fg:w="133"/><text x="67.4938%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,518 instructions, 3.47%)</title><rect x="64.4476%" y="181" width="3.4655%" height="15" fill="rgb(211,56,53)" fg:x="28230" fg:w="1518"/><text x="64.7406%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="67.9132%" y="133" width="0.1347%" height="15" fill="rgb(226,201,30)" fg:x="29748" fg:w="59"/><text x="68.2061%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.37%)</title><rect x="68.0479%" y="133" width="0.3744%" height="15" fill="rgb(239,101,34)" fg:x="29807" fg:w="164"/><text x="68.3408%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="68.4223%" y="117" width="0.1347%" height="15" fill="rgb(226,209,5)" fg:x="29971" fg:w="59"/><text x="68.7152%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (101 instructions, 0.23%)</title><rect x="68.4223%" y="133" width="0.2306%" height="15" fill="rgb(250,105,47)" fg:x="29971" fg:w="101"/><text x="68.7152%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (421 instructions, 0.96%)</title><rect x="67.9132%" y="149" width="0.9611%" height="15" fill="rgb(230,72,3)" fg:x="29748" fg:w="421"/><text x="68.2061%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="69.3788%" y="133" width="0.1347%" height="15" fill="rgb(232,218,39)" fg:x="30390" fg:w="59"/><text x="69.6718%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.37%)</title><rect x="69.5135%" y="133" width="0.3744%" height="15" fill="rgb(248,166,6)" fg:x="30449" fg:w="164"/><text x="69.8065%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.13%)</title><rect x="69.8879%" y="117" width="0.1347%" height="15" fill="rgb(247,89,20)" fg:x="30613" fg:w="59"/><text x="70.1809%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (101 instructions, 0.23%)</title><rect x="69.8879%" y="133" width="0.2306%" height="15" fill="rgb(248,130,54)" fg:x="30613" fg:w="101"/><text x="70.1809%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (421 instructions, 0.96%)</title><rect x="69.3788%" y="149" width="0.9611%" height="15" fill="rgb(234,196,4)" fg:x="30390" fg:w="421"/><text x="69.6718%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,284 instructions, 2.93%)</title><rect x="67.9132%" y="165" width="2.9313%" height="15" fill="rgb(250,143,31)" fg:x="29748" fg:w="1284"/><text x="68.2061%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,586 instructions, 3.62%)</title><rect x="67.9132%" y="181" width="3.6208%" height="15" fill="rgb(211,110,34)" fg:x="29748" fg:w="1586"/><text x="68.2061%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.11%)</title><rect x="71.5339%" y="181" width="0.1119%" height="15" fill="rgb(215,124,48)" fg:x="31334" fg:w="49"/><text x="71.8269%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="71.6458%" y="165" width="0.1895%" height="15" fill="rgb(216,46,13)" fg:x="31383" fg:w="83"/><text x="71.9387%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="71.9357%" y="149" width="0.0525%" height="15" fill="rgb(205,184,25)" fg:x="31510" fg:w="23"/><text x="72.2287%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.32%)</title><rect x="71.9357%" y="165" width="0.3150%" height="15" fill="rgb(228,1,10)" fg:x="31510" fg:w="138"/><text x="72.2287%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309 instructions, 0.71%)</title><rect x="71.6458%" y="181" width="0.7054%" height="15" fill="rgb(213,116,27)" fg:x="31383" fg:w="309"/><text x="71.9387%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.33%)</title><rect x="72.3512%" y="117" width="0.3333%" height="15" fill="rgb(241,95,50)" fg:x="31692" fg:w="146"/><text x="72.6442%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.53%)</title><rect x="72.3512%" y="133" width="0.5251%" height="15" fill="rgb(238,48,32)" fg:x="31692" fg:w="230"/><text x="72.6442%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.11%)</title><rect x="72.8763%" y="133" width="0.1119%" height="15" fill="rgb(235,113,49)" fg:x="31922" fg:w="49"/><text x="73.1693%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (348 instructions, 0.79%)</title><rect x="72.3512%" y="149" width="0.7945%" height="15" fill="rgb(205,127,43)" fg:x="31692" fg:w="348"/><text x="72.6442%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="73.1457%" y="149" width="0.0297%" height="15" fill="rgb(250,162,2)" fg:x="32040" fg:w="13"/><text x="73.4386%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (446 instructions, 1.02%)</title><rect x="72.3512%" y="165" width="1.0182%" height="15" fill="rgb(220,13,41)" fg:x="31692" fg:w="446"/><text x="72.6442%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="73.3694%" y="165" width="0.0753%" height="15" fill="rgb(249,221,25)" fg:x="32138" fg:w="33"/><text x="73.6624%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="73.4447%" y="149" width="0.1895%" height="15" fill="rgb(215,208,19)" fg:x="32171" fg:w="83"/><text x="73.7377%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.18%)</title><rect x="73.8602%" y="149" width="0.1849%" height="15" fill="rgb(236,175,2)" fg:x="32353" fg:w="81"/><text x="74.1532%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (362 instructions, 0.83%)</title><rect x="73.4447%" y="165" width="0.8264%" height="15" fill="rgb(241,52,2)" fg:x="32171" fg:w="362"/><text x="73.7377%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="74.2712%" y="165" width="0.0753%" height="15" fill="rgb(248,140,14)" fg:x="32533" fg:w="33"/><text x="74.5641%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.3465%" y="165" width="0.0297%" height="15" fill="rgb(253,22,42)" fg:x="32566" fg:w="13"/><text x="74.6395%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.3762%" y="165" width="0.0297%" height="15" fill="rgb(234,61,47)" fg:x="32579" fg:w="13"/><text x="74.6692%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="74.4059%" y="149" width="0.0753%" height="15" fill="rgb(208,226,15)" fg:x="32592" fg:w="33"/><text x="74.6988%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.26%)</title><rect x="74.4812%" y="149" width="0.2603%" height="15" fill="rgb(217,221,4)" fg:x="32625" fg:w="114"/><text x="74.7742%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="74.7415%" y="149" width="0.2260%" height="15" fill="rgb(212,174,34)" fg:x="32739" fg:w="99"/><text x="75.0344%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.28%)</title><rect x="74.9675%" y="149" width="0.2808%" height="15" fill="rgb(253,83,4)" fg:x="32838" fg:w="123"/><text x="75.2604%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="75.2483%" y="149" width="0.1370%" height="15" fill="rgb(250,195,49)" fg:x="32961" fg:w="60"/><text x="75.5412%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (561 instructions, 1.28%)</title><rect x="74.4059%" y="165" width="1.2807%" height="15" fill="rgb(241,192,25)" fg:x="32592" fg:w="561"/><text x="74.6988%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="75.6866%" y="149" width="0.0753%" height="15" fill="rgb(208,124,10)" fg:x="33153" fg:w="33"/><text x="75.9796%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.08%)</title><rect x="75.7619%" y="133" width="0.0799%" height="15" fill="rgb(222,33,0)" fg:x="33186" fg:w="35"/><text x="76.0549%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="75.8418%" y="133" width="0.0776%" height="15" fill="rgb(234,209,28)" fg:x="33221" fg:w="34"/><text x="76.1348%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.08%)</title><rect x="75.9195%" y="133" width="0.0776%" height="15" fill="rgb(224,11,23)" fg:x="33255" fg:w="34"/><text x="76.2124%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="75.9971%" y="117" width="0.1872%" height="15" fill="rgb(232,99,1)" fg:x="33289" fg:w="82"/><text x="76.2900%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="76.1843%" y="117" width="0.1598%" height="15" fill="rgb(237,95,45)" fg:x="33371" fg:w="70"/><text x="76.4772%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.17%)</title><rect x="76.3441%" y="117" width="0.1735%" height="15" fill="rgb(208,109,11)" fg:x="33441" fg:w="76"/><text x="76.6371%" y="127.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.66%)</title><rect x="75.9971%" y="133" width="0.6621%" height="15" fill="rgb(216,190,48)" fg:x="33289" fg:w="290"/><text x="76.2900%" y="143.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="76.6591%" y="133" width="0.0753%" height="15" fill="rgb(251,171,36)" fg:x="33579" fg:w="33"/><text x="76.9521%" y="143.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.14%)</title><rect x="76.7345%" y="133" width="0.1438%" height="15" fill="rgb(230,62,22)" fg:x="33612" fg:w="63"/><text x="77.0274%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="76.8783%" y="133" width="0.1895%" height="15" fill="rgb(225,114,35)" fg:x="33675" fg:w="83"/><text x="77.1713%" y="143.50"></text></g><g><title>memcpy (115 instructions, 0.26%)</title><rect x="77.0678%" y="133" width="0.2625%" height="15" fill="rgb(215,118,42)" fg:x="33758" fg:w="115"/><text x="77.3607%" y="143.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.37%)</title><rect x="77.3303%" y="133" width="0.3698%" height="15" fill="rgb(243,119,21)" fg:x="33873" fg:w="162"/><text x="77.6233%" y="143.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,049 instructions, 2.39%)</title><rect x="75.7619%" y="149" width="2.3948%" height="15" fill="rgb(252,177,53)" fg:x="33186" fg:w="1049"/><text x="76.0549%" y="159.50">s..</text></g><g><title>serde::de::MapAccess::next_value (1,125 instructions, 2.57%)</title><rect x="75.6866%" y="165" width="2.5683%" height="15" fill="rgb(237,209,29)" fg:x="33153" fg:w="1125"/><text x="75.9796%" y="175.50">s..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="78.2549%" y="165" width="0.0753%" height="15" fill="rgb(212,65,23)" fg:x="34278" fg:w="33"/><text x="78.5479%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="78.3303%" y="149" width="0.0160%" height="15" fill="rgb(230,222,46)" fg:x="34311" fg:w="7"/><text x="78.6232%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="78.3462%" y="149" width="0.2032%" height="15" fill="rgb(215,135,32)" fg:x="34318" fg:w="89"/><text x="78.6392%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="78.5494%" y="149" width="0.0160%" height="15" fill="rgb(246,101,22)" fg:x="34407" fg:w="7"/><text x="78.8424%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="78.5654%" y="133" width="0.0616%" height="15" fill="rgb(206,107,13)" fg:x="34414" fg:w="27"/><text x="78.8584%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.33%)</title><rect x="78.5654%" y="149" width="0.3287%" height="15" fill="rgb(250,100,44)" fg:x="34414" fg:w="144"/><text x="78.8584%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (296 instructions, 0.68%)</title><rect x="78.3303%" y="165" width="0.6758%" height="15" fill="rgb(231,147,38)" fg:x="34311" fg:w="296"/><text x="78.6232%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (3,593 instructions, 8.20%)</title><rect x="72.3512%" y="181" width="8.2026%" height="15" fill="rgb(229,8,40)" fg:x="31692" fg:w="3593"/><text x="72.6442%" y="191.50">publisher..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="80.7570%" y="149" width="0.0616%" height="15" fill="rgb(221,135,30)" fg:x="35374" fg:w="27"/><text x="81.0500%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.53%)</title><rect x="80.5538%" y="165" width="0.5319%" height="15" fill="rgb(249,193,18)" fg:x="35285" fg:w="233"/><text x="80.8468%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (295 instructions, 0.67%)</title><rect x="80.5538%" y="181" width="0.6735%" height="15" fill="rgb(209,133,39)" fg:x="35285" fg:w="295"/><text x="80.8468%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.2273%" y="181" width="0.0297%" height="15" fill="rgb(232,100,14)" fg:x="35580" fg:w="13"/><text x="81.5203%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.2570%" y="181" width="0.0297%" height="15" fill="rgb(224,185,1)" fg:x="35593" fg:w="13"/><text x="81.5500%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.10%)</title><rect x="81.2867%" y="181" width="0.0982%" height="15" fill="rgb(223,139,8)" fg:x="35606" fg:w="43"/><text x="81.5796%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="81.3848%" y="133" width="0.0616%" height="15" fill="rgb(232,213,38)" fg:x="35649" fg:w="27"/><text x="81.6778%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.31%)</title><rect x="81.3848%" y="149" width="0.3105%" height="15" fill="rgb(207,94,22)" fg:x="35649" fg:w="136"/><text x="81.6778%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.15%)</title><rect x="81.6953%" y="133" width="0.1530%" height="15" fill="rgb(219,183,54)" fg:x="35785" fg:w="67"/><text x="81.9883%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.8483%" y="133" width="0.0297%" height="15" fill="rgb(216,185,54)" fg:x="35852" fg:w="13"/><text x="82.1412%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="81.8780%" y="117" width="0.0525%" height="15" fill="rgb(254,217,39)" fg:x="35865" fg:w="23"/><text x="82.1709%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="82.1930%" y="117" width="0.0616%" height="15" fill="rgb(240,178,23)" fg:x="36003" fg:w="27"/><text x="82.4860%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (282 instructions, 0.64%)</title><rect x="81.8780%" y="133" width="0.6438%" height="15" fill="rgb(218,11,47)" fg:x="35865" fg:w="282"/><text x="82.1709%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (492 instructions, 1.12%)</title><rect x="81.6953%" y="149" width="1.1232%" height="15" fill="rgb(218,51,51)" fg:x="35785" fg:w="492"/><text x="81.9883%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="82.8185%" y="133" width="0.0616%" height="15" fill="rgb(238,126,27)" fg:x="36277" fg:w="27"/><text x="83.1115%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="82.8802%" y="133" width="0.0616%" height="15" fill="rgb(249,202,22)" fg:x="36304" fg:w="27"/><text x="83.1731%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.16%)</title><rect x="82.9418%" y="133" width="0.1552%" height="15" fill="rgb(254,195,49)" fg:x="36331" fg:w="68"/><text x="83.2348%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.56%)</title><rect x="82.8185%" y="149" width="0.5570%" height="15" fill="rgb(208,123,14)" fg:x="36277" fg:w="244"/><text x="83.1115%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (974 instructions, 2.22%)</title><rect x="81.3848%" y="165" width="2.2236%" height="15" fill="rgb(224,200,8)" fg:x="35649" fg:w="974"/><text x="81.6778%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="83.6084%" y="149" width="0.0616%" height="15" fill="rgb(217,61,36)" fg:x="36623" fg:w="27"/><text x="83.9014%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.32%)</title><rect x="83.6084%" y="165" width="0.3242%" height="15" fill="rgb(206,35,45)" fg:x="36623" fg:w="142"/><text x="83.9014%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="83.9326%" y="133" width="0.0616%" height="15" fill="rgb(217,65,33)" fg:x="36765" fg:w="27"/><text x="84.2256%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (129 instructions, 0.29%)</title><rect x="83.9326%" y="149" width="0.2945%" height="15" fill="rgb(222,158,48)" fg:x="36765" fg:w="129"/><text x="84.2256%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (173 instructions, 0.39%)</title><rect x="83.9326%" y="165" width="0.3950%" height="15" fill="rgb(254,2,54)" fg:x="36765" fg:w="173"/><text x="84.2256%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="84.3276%" y="165" width="0.0297%" height="15" fill="rgb(250,143,38)" fg:x="36938" fg:w="13"/><text x="84.6205%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,362 instructions, 3.11%)</title><rect x="81.3848%" y="181" width="3.1094%" height="15" fill="rgb(248,25,0)" fg:x="35649" fg:w="1362"/><text x="81.6778%" y="191.50">co..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.20%)</title><rect x="84.4942%" y="181" width="0.2032%" height="15" fill="rgb(206,152,27)" fg:x="37011" fg:w="89"/><text x="84.7872%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data (37,996 instructions, 86.74%)</title><rect x="1.9131%" y="197" width="86.7429%" height="15" fill="rgb(240,77,30)" fg:x="838" fg:w="37996"/><text x="2.2061%" y="207.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="88.6560%" y="181" width="0.1895%" height="15" fill="rgb(231,5,3)" fg:x="38834" fg:w="83"/><text x="88.9490%" y="191.50"></text></g><g><title>memset (130 instructions, 0.30%)</title><rect x="88.8455%" y="181" width="0.2968%" height="15" fill="rgb(207,226,32)" fg:x="38917" fg:w="130"/><text x="89.1385%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.41%)</title><rect x="89.1423%" y="181" width="0.4086%" height="15" fill="rgb(222,207,47)" fg:x="39047" fg:w="179"/><text x="89.4353%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="89.5509%" y="181" width="0.1370%" height="15" fill="rgb(229,115,45)" fg:x="39226" fg:w="60"/><text x="89.8439%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (22 instructions, 0.05%)</title><rect x="89.6879%" y="181" width="0.0502%" height="15" fill="rgb(224,191,6)" fg:x="39286" fg:w="22"/><text x="89.9809%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.31%)</title><rect x="89.7381%" y="181" width="0.3105%" height="15" fill="rgb(230,227,24)" fg:x="39308" fg:w="136"/><text x="90.0311%" y="191.50"></text></g><g><title>publisher::subscribe (1,918 instructions, 4.38%)</title><rect x="88.6560%" y="197" width="4.3787%" height="15" fill="rgb(228,80,19)" fg:x="38834" fg:w="1918"/><text x="88.9490%" y="207.50">publ..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="93.0347%" y="165" width="0.0160%" height="15" fill="rgb(247,229,0)" fg:x="40752" fg:w="7"/><text x="93.3277%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="93.0507%" y="165" width="0.0297%" height="15" fill="rgb(237,194,15)" fg:x="40759" fg:w="13"/><text x="93.3437%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="93.0804%" y="165" width="0.0297%" height="15" fill="rgb(219,203,20)" fg:x="40772" fg:w="13"/><text x="93.3734%" y="175.50"></text></g><g><title>memset (152 instructions, 0.35%)</title><rect x="93.1101%" y="165" width="0.3470%" height="15" fill="rgb(234,128,8)" fg:x="40785" fg:w="152"/><text x="93.4030%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (391 instructions, 0.89%)</title><rect x="93.0347%" y="181" width="0.8926%" height="15" fill="rgb(248,202,8)" fg:x="40752" fg:w="391"/><text x="93.3277%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.18%)</title><rect x="93.9274%" y="181" width="1.1826%" height="15" fill="rgb(206,104,37)" fg:x="41143" fg:w="518"/><text x="94.2203%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="95.1099%" y="133" width="0.1895%" height="15" fill="rgb(223,8,27)" fg:x="41661" fg:w="83"/><text x="95.4029%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.29%)</title><rect x="95.1099%" y="149" width="0.2877%" height="15" fill="rgb(216,217,28)" fg:x="41661" fg:w="126"/><text x="95.4029%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.47%)</title><rect x="95.1099%" y="165" width="0.4749%" height="15" fill="rgb(249,199,1)" fg:x="41661" fg:w="208"/><text x="95.4029%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="95.5848%" y="165" width="0.0342%" height="15" fill="rgb(240,85,17)" fg:x="41869" fg:w="15"/><text x="95.8777%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="95.6190%" y="165" width="0.0342%" height="15" fill="rgb(206,108,45)" fg:x="41884" fg:w="15"/><text x="95.9120%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.97%)</title><rect x="95.1099%" y="181" width="0.9725%" height="15" fill="rgb(245,210,41)" fg:x="41661" fg:w="426"/><text x="95.4029%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.18%)</title><rect x="96.0825%" y="181" width="1.1780%" height="15" fill="rgb(206,13,37)" fg:x="42087" fg:w="516"/><text x="96.3754%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="97.2605%" y="181" width="0.0160%" height="15" fill="rgb(250,61,18)" fg:x="42603" fg:w="7"/><text x="97.5534%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="97.2764%" y="181" width="0.0160%" height="15" fill="rgb(235,172,48)" fg:x="42610" fg:w="7"/><text x="97.5694%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="97.2924%" y="181" width="0.1370%" height="15" fill="rgb(249,201,17)" fg:x="42617" fg:w="60"/><text x="97.5854%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,606 instructions, 5.95%)</title><rect x="93.0347%" y="197" width="5.9494%" height="15" fill="rgb(219,208,6)" fg:x="40752" fg:w="2606"/><text x="93.3277%" y="207.50">ic_cdk..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="99.1896%" y="181" width="0.0616%" height="15" fill="rgb(248,31,23)" fg:x="43448" fg:w="27"/><text x="99.4825%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="99.2512%" y="181" width="0.0616%" height="15" fill="rgb(245,15,42)" fg:x="43475" fg:w="27"/><text x="99.5442%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (286 instructions, 0.65%)</title><rect x="98.9864%" y="197" width="0.6529%" height="15" fill="rgb(222,217,39)" fg:x="43359" fg:w="286"/><text x="99.2793%" y="207.50"></text></g><g><title>all (43,803 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(210,219,27)" fg:x="0" fg:w="43803"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (43,803 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(252,166,36)" fg:x="0" fg:w="43803"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>