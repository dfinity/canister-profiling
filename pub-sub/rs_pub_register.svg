<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="42634"><g><title>ic_cdk::setup (58 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1360%" height="15" fill="rgb(238,90,54)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.62%)</title><rect x="0.1360%" y="197" width="1.6161%" height="15" fill="rgb(213,208,19)" fg:x="58" fg:w="689"/><text x="0.4290%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.7521%" y="197" width="0.2134%" height="15" fill="rgb(233,156,4)" fg:x="747" fg:w="91"/><text x="2.0451%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="1.9656%" y="181" width="0.2134%" height="15" fill="rgb(207,194,5)" fg:x="838" fg:w="91"/><text x="2.2585%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.13%)</title><rect x="2.1790%" y="149" width="0.1337%" height="15" fill="rgb(206,111,30)" fg:x="929" fg:w="57"/><text x="2.4720%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.36%)</title><rect x="2.1790%" y="165" width="0.3636%" height="15" fill="rgb(243,70,54)" fg:x="929" fg:w="155"/><text x="2.4720%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5426%" y="149" width="0.0141%" height="15" fill="rgb(242,28,8)" fg:x="1084" fg:w="6"/><text x="2.8355%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="2.5426%" y="165" width="1.0391%" height="15" fill="rgb(219,106,18)" fg:x="1084" fg:w="443"/><text x="2.8355%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="3.5816%" y="165" width="0.2228%" height="15" fill="rgb(244,222,10)" fg:x="1527" fg:w="95"/><text x="3.8746%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.8045%" y="165" width="0.1407%" height="15" fill="rgb(236,179,52)" fg:x="1622" fg:w="60"/><text x="4.0974%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="3.9452%" y="165" width="0.1407%" height="15" fill="rgb(213,23,39)" fg:x="1682" fg:w="60"/><text x="4.2382%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="4.0859%" y="165" width="0.1407%" height="15" fill="rgb(238,48,10)" fg:x="1742" fg:w="60"/><text x="4.3789%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="4.2267%" y="165" width="0.1407%" height="15" fill="rgb(251,196,23)" fg:x="1802" fg:w="60"/><text x="4.5196%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="4.3674%" y="165" width="0.1923%" height="15" fill="rgb(250,152,24)" fg:x="1862" fg:w="82"/><text x="4.6604%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="4.5597%" y="165" width="0.1642%" height="15" fill="rgb(209,150,17)" fg:x="1944" fg:w="70"/><text x="4.8527%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="4.7239%" y="149" width="0.0141%" height="15" fill="rgb(234,202,34)" fg:x="2014" fg:w="6"/><text x="5.0169%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="4.7239%" y="165" width="1.0391%" height="15" fill="rgb(253,148,53)" fg:x="2014" fg:w="443"/><text x="5.0169%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="5.7630%" y="165" width="0.0446%" height="15" fill="rgb(218,129,16)" fg:x="2457" fg:w="19"/><text x="6.0560%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="5.8076%" y="149" width="0.2134%" height="15" fill="rgb(216,85,19)" fg:x="2476" fg:w="91"/><text x="6.1005%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="6.0210%" y="117" width="0.1572%" height="15" fill="rgb(235,228,7)" fg:x="2567" fg:w="67"/><text x="6.3140%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="6.0210%" y="133" width="0.2252%" height="15" fill="rgb(245,175,0)" fg:x="2567" fg:w="96"/><text x="6.3140%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="6.2462%" y="85" width="0.0258%" height="15" fill="rgb(208,168,36)" fg:x="2663" fg:w="11"/><text x="6.5392%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="6.2720%" y="69" width="0.0821%" height="15" fill="rgb(246,171,24)" fg:x="2674" fg:w="35"/><text x="6.5650%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="6.2720%" y="85" width="0.1501%" height="15" fill="rgb(215,142,24)" fg:x="2674" fg:w="64"/><text x="6.5650%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="6.2462%" y="101" width="0.3378%" height="15" fill="rgb(250,187,7)" fg:x="2663" fg:w="144"/><text x="6.5392%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="6.2462%" y="117" width="0.4902%" height="15" fill="rgb(228,66,33)" fg:x="2663" fg:w="209"/><text x="6.5392%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.51%)</title><rect x="6.2462%" y="133" width="0.5137%" height="15" fill="rgb(234,215,21)" fg:x="2663" fg:w="219"/><text x="6.5392%" y="143.50"></text></g><g><title>core::fmt::write (453 instructions, 1.06%)</title><rect x="6.0210%" y="149" width="1.0625%" height="15" fill="rgb(222,191,20)" fg:x="2567" fg:w="453"/><text x="6.3140%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.60%)</title><rect x="5.8076%" y="165" width="1.5997%" height="15" fill="rgb(245,79,54)" fg:x="2476" fg:w="682"/><text x="6.1005%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="7.4072%" y="165" width="0.2228%" height="15" fill="rgb(240,10,37)" fg:x="3158" fg:w="95"/><text x="7.7002%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="7.6301%" y="165" width="0.1478%" height="15" fill="rgb(214,192,32)" fg:x="3253" fg:w="63"/><text x="7.9230%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="7.7778%" y="149" width="0.1407%" height="15" fill="rgb(209,36,54)" fg:x="3316" fg:w="60"/><text x="8.0708%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="7.9186%" y="149" width="0.2134%" height="15" fill="rgb(220,10,11)" fg:x="3376" fg:w="91"/><text x="8.2115%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="8.1320%" y="133" width="0.2134%" height="15" fill="rgb(221,106,17)" fg:x="3467" fg:w="91"/><text x="8.4250%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="8.3455%" y="101" width="0.3073%" height="15" fill="rgb(251,142,44)" fg:x="3558" fg:w="131"/><text x="8.6384%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.38%)</title><rect x="8.3455%" y="117" width="0.3753%" height="15" fill="rgb(238,13,15)" fg:x="3558" fg:w="160"/><text x="8.6384%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.20%)</title><rect x="8.7207%" y="37" width="0.2041%" height="15" fill="rgb(208,107,27)" fg:x="3718" fg:w="87"/><text x="9.0137%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.31%)</title><rect x="8.7207%" y="53" width="0.3096%" height="15" fill="rgb(205,136,37)" fg:x="3718" fg:w="132"/><text x="9.0137%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.51%)</title><rect x="8.7207%" y="69" width="0.5137%" height="15" fill="rgb(250,205,27)" fg:x="3718" fg:w="219"/><text x="9.0137%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="9.2344%" y="69" width="0.3753%" height="15" fill="rgb(210,80,43)" fg:x="3937" fg:w="160"/><text x="9.5274%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (419 instructions, 0.98%)</title><rect x="8.7207%" y="85" width="0.9828%" height="15" fill="rgb(247,160,36)" fg:x="3718" fg:w="419"/><text x="9.0137%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="9.7035%" y="53" width="0.0258%" height="15" fill="rgb(234,13,49)" fg:x="4137" fg:w="11"/><text x="9.9965%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="9.7293%" y="37" width="0.0821%" height="15" fill="rgb(234,122,0)" fg:x="4148" fg:w="35"/><text x="10.0223%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="9.7293%" y="53" width="0.1501%" height="15" fill="rgb(207,146,38)" fg:x="4148" fg:w="64"/><text x="10.0223%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="9.7035%" y="69" width="0.3378%" height="15" fill="rgb(207,177,25)" fg:x="4137" fg:w="144"/><text x="9.9965%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.50%)</title><rect x="9.7035%" y="85" width="0.4996%" height="15" fill="rgb(211,178,42)" fg:x="4137" fg:w="213"/><text x="9.9965%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="10.2031%" y="69" width="0.1196%" height="15" fill="rgb(230,69,54)" fg:x="4350" fg:w="51"/><text x="10.4961%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.19%)</title><rect x="10.2031%" y="85" width="0.1876%" height="15" fill="rgb(214,135,41)" fg:x="4350" fg:w="80"/><text x="10.4961%" y="95.50"></text></g><g><title>core::fmt::write (878 instructions, 2.06%)</title><rect x="8.7207%" y="101" width="2.0594%" height="15" fill="rgb(237,67,25)" fg:x="3718" fg:w="878"/><text x="9.0137%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (944 instructions, 2.21%)</title><rect x="8.7207%" y="117" width="2.2142%" height="15" fill="rgb(222,189,50)" fg:x="3718" fg:w="944"/><text x="9.0137%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,242 instructions, 2.91%)</title><rect x="8.3455%" y="133" width="2.9132%" height="15" fill="rgb(245,148,34)" fg:x="3558" fg:w="1242"/><text x="8.6384%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,471 instructions, 3.45%)</title><rect x="8.1320%" y="149" width="3.4503%" height="15" fill="rgb(222,29,6)" fg:x="3467" fg:w="1471"/><text x="8.4250%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="11.5823%" y="149" width="0.1947%" height="15" fill="rgb(221,189,43)" fg:x="4938" fg:w="83"/><text x="11.8753%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="11.7770%" y="149" width="0.1478%" height="15" fill="rgb(207,36,27)" fg:x="5021" fg:w="63"/><text x="12.0700%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="11.9248%" y="149" width="0.1783%" height="15" fill="rgb(217,90,24)" fg:x="5084" fg:w="76"/><text x="12.2177%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.1030%" y="117" width="0.2134%" height="15" fill="rgb(224,66,35)" fg:x="5160" fg:w="91"/><text x="12.3960%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="12.1030%" y="133" width="0.3143%" height="15" fill="rgb(221,13,50)" fg:x="5160" fg:w="134"/><text x="12.3960%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.51%)</title><rect x="12.1030%" y="149" width="0.5137%" height="15" fill="rgb(236,68,49)" fg:x="5160" fg:w="219"/><text x="12.3960%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="12.6167%" y="149" width="0.1407%" height="15" fill="rgb(229,146,28)" fg:x="5379" fg:w="60"/><text x="12.9097%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.7574%" y="149" width="0.2134%" height="15" fill="rgb(225,31,38)" fg:x="5439" fg:w="91"/><text x="13.0504%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="12.9709%" y="133" width="0.2134%" height="15" fill="rgb(250,208,3)" fg:x="5530" fg:w="91"/><text x="13.2638%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.31%)</title><rect x="13.1843%" y="101" width="0.3073%" height="15" fill="rgb(246,54,23)" fg:x="5621" fg:w="131"/><text x="13.4773%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.38%)</title><rect x="13.1843%" y="117" width="0.3753%" height="15" fill="rgb(243,76,11)" fg:x="5621" fg:w="160"/><text x="13.4773%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.20%)</title><rect x="13.5596%" y="37" width="0.2041%" height="15" fill="rgb(245,21,50)" fg:x="5781" fg:w="87"/><text x="13.8526%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.31%)</title><rect x="13.5596%" y="53" width="0.3096%" height="15" fill="rgb(228,9,43)" fg:x="5781" fg:w="132"/><text x="13.8526%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.51%)</title><rect x="13.5596%" y="69" width="0.5137%" height="15" fill="rgb(208,100,47)" fg:x="5781" fg:w="219"/><text x="13.8526%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.38%)</title><rect x="14.0733%" y="69" width="0.3753%" height="15" fill="rgb(232,26,8)" fg:x="6000" fg:w="160"/><text x="14.3662%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (419 instructions, 0.98%)</title><rect x="13.5596%" y="85" width="0.9828%" height="15" fill="rgb(216,166,38)" fg:x="5781" fg:w="419"/><text x="13.8526%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="14.5424%" y="53" width="0.0258%" height="15" fill="rgb(251,202,51)" fg:x="6200" fg:w="11"/><text x="14.8354%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="14.5682%" y="37" width="0.0821%" height="15" fill="rgb(254,216,34)" fg:x="6211" fg:w="35"/><text x="14.8612%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="14.5682%" y="53" width="0.1501%" height="15" fill="rgb(251,32,27)" fg:x="6211" fg:w="64"/><text x="14.8612%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="14.5424%" y="69" width="0.3378%" height="15" fill="rgb(208,127,28)" fg:x="6200" fg:w="144"/><text x="14.8354%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.50%)</title><rect x="14.5424%" y="85" width="0.4996%" height="15" fill="rgb(224,137,22)" fg:x="6200" fg:w="213"/><text x="14.8354%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.12%)</title><rect x="15.0420%" y="69" width="0.1196%" height="15" fill="rgb(254,70,32)" fg:x="6413" fg:w="51"/><text x="15.3350%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.19%)</title><rect x="15.0420%" y="85" width="0.1876%" height="15" fill="rgb(229,75,37)" fg:x="6413" fg:w="80"/><text x="15.3350%" y="95.50"></text></g><g><title>core::fmt::write (878 instructions, 2.06%)</title><rect x="13.5596%" y="101" width="2.0594%" height="15" fill="rgb(252,64,23)" fg:x="5781" fg:w="878"/><text x="13.8526%" y="111.50"></text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (944 instructions, 2.21%)</title><rect x="13.5596%" y="117" width="2.2142%" height="15" fill="rgb(232,162,48)" fg:x="5781" fg:w="944"/><text x="13.8526%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,242 instructions, 2.91%)</title><rect x="13.1843%" y="133" width="2.9132%" height="15" fill="rgb(246,160,12)" fg:x="5621" fg:w="1242"/><text x="13.4773%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,471 instructions, 3.45%)</title><rect x="12.9709%" y="149" width="3.4503%" height="15" fill="rgb(247,166,0)" fg:x="5530" fg:w="1471"/><text x="13.2638%" y="159.50">al..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.19%)</title><rect x="16.4212%" y="149" width="0.1947%" height="15" fill="rgb(249,219,21)" fg:x="7001" fg:w="83"/><text x="16.7141%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="16.6158%" y="149" width="0.1478%" height="15" fill="rgb(205,209,3)" fg:x="7084" fg:w="63"/><text x="16.9088%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="16.7636%" y="149" width="0.1783%" height="15" fill="rgb(243,44,1)" fg:x="7147" fg:w="76"/><text x="17.0566%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.14%)</title><rect x="16.9419%" y="149" width="0.1407%" height="15" fill="rgb(206,159,16)" fg:x="7223" fg:w="60"/><text x="17.2348%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="17.0826%" y="133" width="0.1923%" height="15" fill="rgb(244,77,30)" fg:x="7283" fg:w="82"/><text x="17.3756%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="17.2749%" y="133" width="0.1642%" height="15" fill="rgb(218,69,12)" fg:x="7365" fg:w="70"/><text x="17.5679%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="17.4391%" y="117" width="0.0141%" height="15" fill="rgb(212,87,7)" fg:x="7435" fg:w="6"/><text x="17.7321%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="17.4391%" y="133" width="1.0391%" height="15" fill="rgb(245,114,25)" fg:x="7435" fg:w="443"/><text x="17.7321%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="18.4782%" y="133" width="0.0446%" height="15" fill="rgb(210,61,42)" fg:x="7878" fg:w="19"/><text x="18.7712%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="18.5228%" y="117" width="0.2134%" height="15" fill="rgb(211,52,33)" fg:x="7897" fg:w="91"/><text x="18.8157%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="18.7362%" y="85" width="0.1572%" height="15" fill="rgb(234,58,33)" fg:x="7988" fg:w="67"/><text x="19.0292%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="18.7362%" y="101" width="0.2252%" height="15" fill="rgb(220,115,36)" fg:x="7988" fg:w="96"/><text x="19.0292%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="18.9614%" y="53" width="0.0258%" height="15" fill="rgb(243,153,54)" fg:x="8084" fg:w="11"/><text x="19.2544%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="18.9872%" y="37" width="0.0821%" height="15" fill="rgb(251,47,18)" fg:x="8095" fg:w="35"/><text x="19.2802%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="18.9872%" y="53" width="0.1501%" height="15" fill="rgb(242,102,42)" fg:x="8095" fg:w="64"/><text x="19.2802%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="18.9614%" y="69" width="0.3378%" height="15" fill="rgb(234,31,38)" fg:x="8084" fg:w="144"/><text x="19.2544%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="18.9614%" y="85" width="0.4902%" height="15" fill="rgb(221,117,51)" fg:x="8084" fg:w="209"/><text x="19.2544%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.51%)</title><rect x="18.9614%" y="101" width="0.5137%" height="15" fill="rgb(212,20,18)" fg:x="8084" fg:w="219"/><text x="19.2544%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 1.06%)</title><rect x="18.7362%" y="117" width="1.0625%" height="15" fill="rgb(245,133,36)" fg:x="7988" fg:w="453"/><text x="19.0292%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 1.60%)</title><rect x="18.5228%" y="133" width="1.5997%" height="15" fill="rgb(212,6,19)" fg:x="7897" fg:w="682"/><text x="18.8157%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="20.1224%" y="133" width="0.2228%" height="15" fill="rgb(218,1,36)" fg:x="8579" fg:w="95"/><text x="20.4154%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="20.3453%" y="133" width="0.1478%" height="15" fill="rgb(246,84,54)" fg:x="8674" fg:w="63"/><text x="20.6382%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="20.4930%" y="117" width="0.1923%" height="15" fill="rgb(242,110,6)" fg:x="8737" fg:w="82"/><text x="20.7860%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.69%)</title><rect x="20.6854%" y="117" width="0.6896%" height="15" fill="rgb(214,47,5)" fg:x="8819" fg:w="294"/><text x="20.9783%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="21.3750%" y="101" width="0.1923%" height="15" fill="rgb(218,159,25)" fg:x="9113" fg:w="82"/><text x="21.6679%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="21.5673%" y="101" width="0.2228%" height="15" fill="rgb(215,211,28)" fg:x="9195" fg:w="95"/><text x="21.8603%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="21.7901%" y="101" width="0.1783%" height="15" fill="rgb(238,59,32)" fg:x="9290" fg:w="76"/><text x="22.0831%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.77%)</title><rect x="21.3750%" y="117" width="0.7740%" height="15" fill="rgb(226,82,3)" fg:x="9113" fg:w="330"/><text x="21.6679%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="22.1490%" y="117" width="0.1783%" height="15" fill="rgb(240,164,32)" fg:x="9443" fg:w="76"/><text x="22.4420%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 2.18%)</title><rect x="20.4930%" y="133" width="2.1767%" height="15" fill="rgb(232,46,7)" fg:x="8737" fg:w="928"/><text x="20.7860%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="22.6697%" y="133" width="0.2134%" height="15" fill="rgb(229,129,53)" fg:x="9665" fg:w="91"/><text x="22.9627%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.06%)</title><rect x="22.8831%" y="133" width="0.0610%" height="15" fill="rgb(234,188,29)" fg:x="9756" fg:w="26"/><text x="23.1761%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="22.9441%" y="133" width="0.1783%" height="15" fill="rgb(246,141,4)" fg:x="9782" fg:w="76"/><text x="23.2371%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,929 instructions, 6.87%)</title><rect x="17.0826%" y="149" width="6.8701%" height="15" fill="rgb(229,23,39)" fg:x="7283" fg:w="2929"/><text x="17.3756%" y="159.50">&lt;candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="23.9551%" y="133" width="0.2088%" height="15" fill="rgb(206,12,3)" fg:x="10213" fg:w="89"/><text x="24.2480%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="24.2553%" y="133" width="0.1947%" height="15" fill="rgb(252,226,20)" fg:x="10341" fg:w="83"/><text x="24.5483%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (250 instructions, 0.59%)</title><rect x="23.9527%" y="149" width="0.5864%" height="15" fill="rgb(216,123,35)" fg:x="10212" fg:w="250"/><text x="24.2457%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="24.5391%" y="133" width="0.0539%" height="15" fill="rgb(212,68,40)" fg:x="10462" fg:w="23"/><text x="24.8321%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="24.5930%" y="133" width="0.0633%" height="15" fill="rgb(254,125,32)" fg:x="10485" fg:w="27"/><text x="24.8860%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.45%)</title><rect x="24.5391%" y="149" width="0.4527%" height="15" fill="rgb(253,97,22)" fg:x="10462" fg:w="193"/><text x="24.8321%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,077 instructions, 18.94%)</title><rect x="7.7778%" y="165" width="18.9450%" height="15" fill="rgb(241,101,14)" fg:x="3316" fg:w="8077"/><text x="8.0708%" y="175.50">&lt;candid::binary_parser::C..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (65 instructions, 0.15%)</title><rect x="26.7228%" y="165" width="0.1525%" height="15" fill="rgb(238,103,29)" fg:x="11393" fg:w="65"/><text x="27.0158%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="26.8753%" y="165" width="0.1783%" height="15" fill="rgb(233,195,47)" fg:x="11458" fg:w="76"/><text x="27.1682%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="27.0535%" y="165" width="0.1642%" height="15" fill="rgb(246,218,30)" fg:x="11534" fg:w="70"/><text x="27.3465%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.2177%" y="133" width="0.0141%" height="15" fill="rgb(219,145,47)" fg:x="11604" fg:w="6"/><text x="27.5107%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.04%)</title><rect x="27.2177%" y="149" width="1.0391%" height="15" fill="rgb(243,12,26)" fg:x="11604" fg:w="443"/><text x="27.5107%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="28.2568%" y="149" width="0.0446%" height="15" fill="rgb(214,87,16)" fg:x="12047" fg:w="19"/><text x="28.5498%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.27%)</title><rect x="28.3014%" y="133" width="0.2674%" height="15" fill="rgb(208,99,42)" fg:x="12066" fg:w="114"/><text x="28.5943%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.16%)</title><rect x="28.5687%" y="101" width="0.1572%" height="15" fill="rgb(253,99,2)" fg:x="12180" fg:w="67"/><text x="28.8617%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.23%)</title><rect x="28.5687%" y="117" width="0.2252%" height="15" fill="rgb(220,168,23)" fg:x="12180" fg:w="96"/><text x="28.8617%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="28.7939%" y="69" width="0.0258%" height="15" fill="rgb(242,38,24)" fg:x="12276" fg:w="11"/><text x="29.0869%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="28.8197%" y="53" width="0.0821%" height="15" fill="rgb(225,182,9)" fg:x="12287" fg:w="35"/><text x="29.1127%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="28.8197%" y="69" width="0.1501%" height="15" fill="rgb(243,178,37)" fg:x="12287" fg:w="64"/><text x="29.1127%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="28.7939%" y="85" width="0.3378%" height="15" fill="rgb(232,139,19)" fg:x="12276" fg:w="144"/><text x="29.0869%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="28.7939%" y="101" width="0.4902%" height="15" fill="rgb(225,201,24)" fg:x="12276" fg:w="209"/><text x="29.0869%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.51%)</title><rect x="28.7939%" y="117" width="0.5137%" height="15" fill="rgb(221,47,46)" fg:x="12276" fg:w="219"/><text x="29.0869%" y="127.50"></text></g><g><title>core::fmt::write (453 instructions, 1.06%)</title><rect x="28.5687%" y="133" width="1.0625%" height="15" fill="rgb(249,23,13)" fg:x="12180" fg:w="453"/><text x="28.8617%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (705 instructions, 1.65%)</title><rect x="28.3014%" y="149" width="1.6536%" height="15" fill="rgb(219,9,5)" fg:x="12066" fg:w="705"/><text x="28.5943%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.22%)</title><rect x="29.9550%" y="149" width="0.2228%" height="15" fill="rgb(254,171,16)" fg:x="12771" fg:w="95"/><text x="30.2479%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="30.1778%" y="149" width="0.1407%" height="15" fill="rgb(230,171,20)" fg:x="12866" fg:w="60"/><text x="30.4708%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="30.3185%" y="133" width="0.1923%" height="15" fill="rgb(210,71,41)" fg:x="12926" fg:w="82"/><text x="30.6115%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.22%)</title><rect x="30.5109%" y="133" width="0.2228%" height="15" fill="rgb(206,173,20)" fg:x="13008" fg:w="95"/><text x="30.8038%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="30.7337%" y="133" width="0.1783%" height="15" fill="rgb(233,88,34)" fg:x="13103" fg:w="76"/><text x="31.0267%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.77%)</title><rect x="30.3185%" y="149" width="0.7740%" height="15" fill="rgb(223,209,46)" fg:x="12926" fg:w="330"/><text x="30.6115%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="31.0926%" y="149" width="0.1947%" height="15" fill="rgb(250,43,18)" fg:x="13256" fg:w="83"/><text x="31.3855%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,978 instructions, 4.64%)</title><rect x="27.2177%" y="165" width="4.6395%" height="15" fill="rgb(208,13,10)" fg:x="11604" fg:w="1978"/><text x="27.5107%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="31.8572%" y="165" width="0.1783%" height="15" fill="rgb(212,200,36)" fg:x="13582" fg:w="76"/><text x="32.1502%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="32.0355%" y="165" width="0.1947%" height="15" fill="rgb(225,90,30)" fg:x="13658" fg:w="83"/><text x="32.3284%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="32.2301%" y="149" width="0.1947%" height="15" fill="rgb(236,182,39)" fg:x="13741" fg:w="83"/><text x="32.5231%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.42%)</title><rect x="32.2301%" y="165" width="0.4199%" height="15" fill="rgb(212,144,35)" fg:x="13741" fg:w="179"/><text x="32.5231%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.19%)</title><rect x="32.6500%" y="133" width="0.1900%" height="15" fill="rgb(228,63,44)" fg:x="13920" fg:w="81"/><text x="32.9430%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.29%)</title><rect x="32.6500%" y="149" width="0.2908%" height="15" fill="rgb(228,109,6)" fg:x="13920" fg:w="124"/><text x="32.9430%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (209 instructions, 0.49%)</title><rect x="32.6500%" y="165" width="0.4902%" height="15" fill="rgb(238,117,24)" fg:x="13920" fg:w="209"/><text x="32.9430%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="33.1402%" y="165" width="0.2134%" height="15" fill="rgb(242,26,26)" fg:x="14129" fg:w="91"/><text x="33.4332%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="33.3537%" y="149" width="0.2134%" height="15" fill="rgb(221,92,48)" fg:x="14220" fg:w="91"/><text x="33.6466%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="33.5671%" y="117" width="0.2322%" height="15" fill="rgb(209,209,32)" fg:x="14311" fg:w="99"/><text x="33.8601%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.30%)</title><rect x="33.5671%" y="133" width="0.3002%" height="15" fill="rgb(221,70,22)" fg:x="14311" fg:w="128"/><text x="33.8601%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="33.8673%" y="85" width="0.0258%" height="15" fill="rgb(248,145,5)" fg:x="14439" fg:w="11"/><text x="34.1603%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="33.8931%" y="69" width="0.0821%" height="15" fill="rgb(226,116,26)" fg:x="14450" fg:w="35"/><text x="34.1861%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="33.8931%" y="85" width="0.1501%" height="15" fill="rgb(244,5,17)" fg:x="14450" fg:w="64"/><text x="34.1861%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="33.8673%" y="101" width="0.3378%" height="15" fill="rgb(252,159,33)" fg:x="14439" fg:w="144"/><text x="34.1603%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="33.8673%" y="117" width="0.4902%" height="15" fill="rgb(206,71,0)" fg:x="14439" fg:w="209"/><text x="34.1603%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.54%)</title><rect x="33.8673%" y="133" width="0.5371%" height="15" fill="rgb(233,118,54)" fg:x="14439" fg:w="229"/><text x="34.1603%" y="143.50"></text></g><g><title>core::fmt::write (495 instructions, 1.16%)</title><rect x="33.5671%" y="149" width="1.1610%" height="15" fill="rgb(234,83,48)" fg:x="14311" fg:w="495"/><text x="33.8601%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (724 instructions, 1.70%)</title><rect x="33.3537%" y="165" width="1.6982%" height="15" fill="rgb(228,3,54)" fg:x="14220" fg:w="724"/><text x="33.6466%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.0518%" y="149" width="0.2134%" height="15" fill="rgb(226,155,13)" fg:x="14944" fg:w="91"/><text x="35.3448%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (158 instructions, 0.37%)</title><rect x="35.0518%" y="165" width="0.3706%" height="15" fill="rgb(241,28,37)" fg:x="14944" fg:w="158"/><text x="35.3448%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.24%)</title><rect x="35.4224%" y="165" width="0.2392%" height="15" fill="rgb(233,93,10)" fg:x="15102" fg:w="102"/><text x="35.7154%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="35.6617%" y="165" width="0.0352%" height="15" fill="rgb(225,113,19)" fg:x="15204" fg:w="15"/><text x="35.9546%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.24%)</title><rect x="35.6969%" y="165" width="0.2392%" height="15" fill="rgb(241,2,18)" fg:x="15219" fg:w="102"/><text x="35.9898%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="35.9361%" y="149" width="0.2134%" height="15" fill="rgb(228,207,21)" fg:x="15321" fg:w="91"/><text x="36.2291%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (131 instructions, 0.31%)</title><rect x="35.9361%" y="165" width="0.3073%" height="15" fill="rgb(213,211,35)" fg:x="15321" fg:w="131"/><text x="36.2291%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (31 instructions, 0.07%)</title><rect x="36.2434%" y="149" width="0.0727%" height="15" fill="rgb(209,83,10)" fg:x="15452" fg:w="31"/><text x="36.5363%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (112 instructions, 0.26%)</title><rect x="36.2434%" y="165" width="0.2627%" height="15" fill="rgb(209,164,1)" fg:x="15452" fg:w="112"/><text x="36.5363%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.15%)</title><rect x="36.5436%" y="149" width="0.1478%" height="15" fill="rgb(213,184,43)" fg:x="15580" fg:w="63"/><text x="36.8366%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (184 instructions, 0.43%)</title><rect x="36.5061%" y="165" width="0.4316%" height="15" fill="rgb(231,61,34)" fg:x="15564" fg:w="184"/><text x="36.7990%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="36.9377%" y="165" width="0.0352%" height="15" fill="rgb(235,75,3)" fg:x="15748" fg:w="15"/><text x="37.2306%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="36.9728%" y="165" width="0.0211%" height="15" fill="rgb(220,106,47)" fg:x="15763" fg:w="9"/><text x="37.2658%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.04%)</title><rect x="36.9939%" y="165" width="0.0375%" height="15" fill="rgb(210,196,33)" fg:x="15772" fg:w="16"/><text x="37.2869%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="37.0315%" y="133" width="0.2134%" height="15" fill="rgb(229,154,42)" fg:x="15788" fg:w="91"/><text x="37.3244%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="37.2449%" y="101" width="0.2322%" height="15" fill="rgb(228,114,26)" fg:x="15879" fg:w="99"/><text x="37.5379%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.30%)</title><rect x="37.2449%" y="117" width="0.3002%" height="15" fill="rgb(208,144,1)" fg:x="15879" fg:w="128"/><text x="37.5379%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="37.5452%" y="69" width="0.0258%" height="15" fill="rgb(239,112,37)" fg:x="16007" fg:w="11"/><text x="37.8381%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.08%)</title><rect x="37.5710%" y="53" width="0.0821%" height="15" fill="rgb(210,96,50)" fg:x="16018" fg:w="35"/><text x="37.8639%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.15%)</title><rect x="37.5710%" y="69" width="0.1501%" height="15" fill="rgb(222,178,2)" fg:x="16018" fg:w="64"/><text x="37.8639%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.34%)</title><rect x="37.5452%" y="85" width="0.3378%" height="15" fill="rgb(226,74,18)" fg:x="16007" fg:w="144"/><text x="37.8381%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.49%)</title><rect x="37.5452%" y="101" width="0.4902%" height="15" fill="rgb(225,67,54)" fg:x="16007" fg:w="209"/><text x="37.8381%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.54%)</title><rect x="37.5452%" y="117" width="0.5371%" height="15" fill="rgb(251,92,32)" fg:x="16007" fg:w="229"/><text x="37.8381%" y="127.50"></text></g><g><title>core::fmt::write (495 instructions, 1.16%)</title><rect x="37.2449%" y="133" width="1.1610%" height="15" fill="rgb(228,149,22)" fg:x="15879" fg:w="495"/><text x="37.5379%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (724 instructions, 1.70%)</title><rect x="37.0315%" y="149" width="1.6982%" height="15" fill="rgb(243,54,13)" fg:x="15788" fg:w="724"/><text x="37.3244%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="38.7297%" y="149" width="0.2134%" height="15" fill="rgb(243,180,28)" fg:x="16512" fg:w="91"/><text x="39.0226%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (941 instructions, 2.21%)</title><rect x="37.0315%" y="165" width="2.2072%" height="15" fill="rgb(208,167,24)" fg:x="15788" fg:w="941"/><text x="37.3244%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.2386%" y="133" width="0.2134%" height="15" fill="rgb(245,73,45)" fg:x="16729" fg:w="91"/><text x="39.5316%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.31%)</title><rect x="39.2386%" y="149" width="0.3143%" height="15" fill="rgb(237,203,48)" fg:x="16729" fg:w="134"/><text x="39.5316%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.51%)</title><rect x="39.2386%" y="165" width="0.5137%" height="15" fill="rgb(211,197,16)" fg:x="16729" fg:w="219"/><text x="39.5316%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="39.7523%" y="165" width="0.2134%" height="15" fill="rgb(243,99,51)" fg:x="16948" fg:w="91"/><text x="40.0453%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="39.9658%" y="165" width="0.2088%" height="15" fill="rgb(215,123,29)" fg:x="17039" fg:w="89"/><text x="40.2587%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.1745%" y="165" width="0.2134%" height="15" fill="rgb(239,186,37)" fg:x="17128" fg:w="91"/><text x="40.4675%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="40.3880%" y="165" width="0.2134%" height="15" fill="rgb(252,136,39)" fg:x="17219" fg:w="91"/><text x="40.6809%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="40.6014%" y="149" width="0.2088%" height="15" fill="rgb(223,213,32)" fg:x="17310" fg:w="89"/><text x="40.8944%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (130 instructions, 0.30%)</title><rect x="40.6014%" y="165" width="0.3049%" height="15" fill="rgb(233,115,5)" fg:x="17310" fg:w="130"/><text x="40.8944%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="40.9063%" y="149" width="0.0633%" height="15" fill="rgb(207,226,44)" fg:x="17440" fg:w="27"/><text x="41.1993%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.16%)</title><rect x="40.9696%" y="149" width="0.1595%" height="15" fill="rgb(208,126,0)" fg:x="17467" fg:w="68"/><text x="41.2626%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.45%)</title><rect x="40.9063%" y="165" width="0.4480%" height="15" fill="rgb(244,66,21)" fg:x="17440" fg:w="191"/><text x="41.1993%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="41.3543%" y="165" width="0.2088%" height="15" fill="rgb(222,97,12)" fg:x="17631" fg:w="89"/><text x="41.6473%" y="175.50"></text></g><g><title>memcpy (428 instructions, 1.00%)</title><rect x="41.5631%" y="165" width="1.0039%" height="15" fill="rgb(219,213,19)" fg:x="17720" fg:w="428"/><text x="41.8560%" y="175.50"></text></g><g><title>memcpy (428 instructions, 1.00%)</title><rect x="42.5670%" y="165" width="1.0039%" height="15" fill="rgb(252,169,30)" fg:x="18148" fg:w="428"/><text x="42.8599%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (19,621 instructions, 46.02%)</title><rect x="2.1790%" y="181" width="46.0220%" height="15" fill="rgb(206,32,51)" fg:x="929" fg:w="19621"/><text x="2.4720%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (380 instructions, 0.89%)</title><rect x="48.2010%" y="181" width="0.8913%" height="15" fill="rgb(250,172,42)" fg:x="20550" fg:w="380"/><text x="48.4939%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (69 instructions, 0.16%)</title><rect x="49.0923%" y="165" width="0.1618%" height="15" fill="rgb(209,34,43)" fg:x="20930" fg:w="69"/><text x="49.3852%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (101 instructions, 0.24%)</title><rect x="49.0923%" y="181" width="0.2369%" height="15" fill="rgb(223,11,35)" fg:x="20930" fg:w="101"/><text x="49.3852%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.41%)</title><rect x="49.3292%" y="181" width="0.4058%" height="15" fill="rgb(251,219,26)" fg:x="21031" fg:w="173"/><text x="49.6221%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="49.7350%" y="165" width="0.0164%" height="15" fill="rgb(231,119,3)" fg:x="21204" fg:w="7"/><text x="50.0279%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="49.7514%" y="149" width="0.1384%" height="15" fill="rgb(216,97,11)" fg:x="21211" fg:w="59"/><text x="50.0443%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.75%)</title><rect x="49.8898%" y="149" width="0.7459%" height="15" fill="rgb(223,59,9)" fg:x="21270" fg:w="318"/><text x="50.1827%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="50.6356%" y="149" width="0.1830%" height="15" fill="rgb(233,93,31)" fg:x="21588" fg:w="78"/><text x="50.9286%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.66%)</title><rect x="49.7514%" y="165" width="1.6606%" height="15" fill="rgb(239,81,33)" fg:x="21211" fg:w="708"/><text x="50.0443%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="51.4120%" y="165" width="0.1947%" height="15" fill="rgb(213,120,34)" fg:x="21919" fg:w="83"/><text x="51.7050%" y="175.50"></text></g><g><title>memset (152 instructions, 0.36%)</title><rect x="51.6067%" y="165" width="0.3565%" height="15" fill="rgb(243,49,53)" fg:x="22002" fg:w="152"/><text x="51.8997%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,316 instructions, 3.09%)</title><rect x="49.7350%" y="181" width="3.0867%" height="15" fill="rgb(247,216,33)" fg:x="21204" fg:w="1316"/><text x="50.0279%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="52.8217%" y="181" width="0.1947%" height="15" fill="rgb(226,26,14)" fg:x="22520" fg:w="83"/><text x="53.1147%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.0164%" y="181" width="0.1947%" height="15" fill="rgb(215,49,53)" fg:x="22603" fg:w="83"/><text x="53.3093%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="53.2111%" y="181" width="0.1947%" height="15" fill="rgb(245,162,40)" fg:x="22686" fg:w="83"/><text x="53.5040%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="53.4057%" y="149" width="0.0164%" height="15" fill="rgb(229,68,17)" fg:x="22769" fg:w="7"/><text x="53.6987%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="53.4222%" y="133" width="0.1384%" height="15" fill="rgb(213,182,10)" fg:x="22776" fg:w="59"/><text x="53.7151%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.75%)</title><rect x="53.5605%" y="133" width="0.7459%" height="15" fill="rgb(245,125,30)" fg:x="22835" fg:w="318"/><text x="53.8535%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="54.3064%" y="133" width="0.1830%" height="15" fill="rgb(232,202,2)" fg:x="23153" fg:w="78"/><text x="54.5994%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.66%)</title><rect x="53.4222%" y="149" width="1.6606%" height="15" fill="rgb(237,140,51)" fg:x="22776" fg:w="708"/><text x="53.7151%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (833 instructions, 1.95%)</title><rect x="53.4057%" y="165" width="1.9538%" height="15" fill="rgb(236,157,25)" fg:x="22769" fg:w="833"/><text x="53.6987%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="55.3596%" y="165" width="0.1947%" height="15" fill="rgb(219,209,0)" fg:x="23602" fg:w="83"/><text x="55.6525%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="55.5543%" y="149" width="0.0164%" height="15" fill="rgb(240,116,54)" fg:x="23685" fg:w="7"/><text x="55.8472%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="55.5707%" y="133" width="0.1384%" height="15" fill="rgb(216,10,36)" fg:x="23692" fg:w="59"/><text x="55.8636%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.75%)</title><rect x="55.7091%" y="133" width="0.7459%" height="15" fill="rgb(222,72,44)" fg:x="23751" fg:w="318"/><text x="56.0020%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="56.4549%" y="133" width="0.1830%" height="15" fill="rgb(232,159,9)" fg:x="24069" fg:w="78"/><text x="56.7479%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.66%)</title><rect x="55.5707%" y="149" width="1.6606%" height="15" fill="rgb(210,39,32)" fg:x="23692" fg:w="708"/><text x="55.8636%" y="159.50"></text></g><g><title>candid::types::internal::env_add (927 instructions, 2.17%)</title><rect x="55.5543%" y="165" width="2.1743%" height="15" fill="rgb(216,194,45)" fg:x="23685" fg:w="927"/><text x="55.8472%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="57.7286%" y="165" width="0.1947%" height="15" fill="rgb(218,18,35)" fg:x="24612" fg:w="83"/><text x="58.0215%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="57.9233%" y="149" width="0.0164%" height="15" fill="rgb(207,83,51)" fg:x="24695" fg:w="7"/><text x="58.2162%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="57.9397%" y="133" width="0.1384%" height="15" fill="rgb(225,63,43)" fg:x="24702" fg:w="59"/><text x="58.2326%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.75%)</title><rect x="58.0781%" y="133" width="0.7459%" height="15" fill="rgb(207,57,36)" fg:x="24761" fg:w="318"/><text x="58.3710%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="58.8239%" y="133" width="0.1830%" height="15" fill="rgb(216,99,33)" fg:x="25079" fg:w="78"/><text x="59.1169%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.66%)</title><rect x="57.9397%" y="149" width="1.6606%" height="15" fill="rgb(225,42,16)" fg:x="24702" fg:w="708"/><text x="58.2326%" y="159.50"></text></g><g><title>memcmp (491 instructions, 1.15%)</title><rect x="59.6003%" y="149" width="1.1517%" height="15" fill="rgb(220,201,45)" fg:x="25410" fg:w="491"/><text x="59.8933%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="60.7520%" y="133" width="0.2088%" height="15" fill="rgb(225,33,4)" fg:x="25901" fg:w="89"/><text x="61.0450%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.29%)</title><rect x="60.7520%" y="149" width="0.2908%" height="15" fill="rgb(224,33,50)" fg:x="25901" fg:w="124"/><text x="61.0450%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,508 instructions, 3.54%)</title><rect x="57.9233%" y="165" width="3.5371%" height="15" fill="rgb(246,198,51)" fg:x="24695" fg:w="1508"/><text x="58.2162%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="61.4603%" y="117" width="0.1384%" height="15" fill="rgb(205,22,4)" fg:x="26203" fg:w="59"/><text x="61.7533%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.22%)</title><rect x="61.4603%" y="133" width="0.2181%" height="15" fill="rgb(206,3,8)" fg:x="26203" fg:w="93"/><text x="61.7533%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.74%)</title><rect x="61.4603%" y="149" width="0.7412%" height="15" fill="rgb(251,23,15)" fg:x="26203" fg:w="316"/><text x="61.7533%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.21%)</title><rect x="62.2015%" y="149" width="0.2134%" height="15" fill="rgb(252,88,28)" fg:x="26519" fg:w="91"/><text x="62.4945%" y="159.50"></text></g><g><title>memset (152 instructions, 0.36%)</title><rect x="62.4150%" y="149" width="0.3565%" height="15" fill="rgb(212,127,14)" fg:x="26610" fg:w="152"/><text x="62.7079%" y="159.50"></text></g><g><title>candid::types::internal::env_id (1,001 instructions, 2.35%)</title><rect x="61.4603%" y="165" width="2.3479%" height="15" fill="rgb(247,145,37)" fg:x="26203" fg:w="1001"/><text x="61.7533%" y="175.50">c..</text></g><g><title>candid::types::CandidType::ty (4,564 instructions, 10.71%)</title><rect x="53.4057%" y="181" width="10.7051%" height="15" fill="rgb(209,117,53)" fg:x="22769" fg:w="4564"/><text x="53.6987%" y="191.50">candid::types..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="64.1108%" y="181" width="0.1947%" height="15" fill="rgb(212,90,42)" fg:x="27333" fg:w="83"/><text x="64.4038%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="64.3055%" y="165" width="0.0164%" height="15" fill="rgb(218,164,37)" fg:x="27416" fg:w="7"/><text x="64.5985%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="64.3219%" y="149" width="0.1384%" height="15" fill="rgb(246,65,34)" fg:x="27423" fg:w="59"/><text x="64.6149%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.75%)</title><rect x="64.4603%" y="149" width="0.7459%" height="15" fill="rgb(231,100,33)" fg:x="27482" fg:w="318"/><text x="64.7533%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.18%)</title><rect x="65.2062%" y="149" width="0.1830%" height="15" fill="rgb(228,126,14)" fg:x="27800" fg:w="78"/><text x="65.4991%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.66%)</title><rect x="64.3219%" y="165" width="1.6606%" height="15" fill="rgb(215,173,21)" fg:x="27423" fg:w="708"/><text x="64.6149%" y="175.50"></text></g><g><title>memcmp (491 instructions, 1.15%)</title><rect x="65.9825%" y="165" width="1.1517%" height="15" fill="rgb(210,6,40)" fg:x="28131" fg:w="491"/><text x="66.2755%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="67.1342%" y="149" width="0.2088%" height="15" fill="rgb(212,48,18)" fg:x="28622" fg:w="89"/><text x="67.4272%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.29%)</title><rect x="67.1342%" y="165" width="0.2908%" height="15" fill="rgb(230,214,11)" fg:x="28622" fg:w="124"/><text x="67.4272%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,508 instructions, 3.54%)</title><rect x="64.3055%" y="181" width="3.5371%" height="15" fill="rgb(254,105,39)" fg:x="27416" fg:w="1508"/><text x="64.5985%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="67.8426%" y="133" width="0.1384%" height="15" fill="rgb(245,158,5)" fg:x="28924" fg:w="59"/><text x="68.1355%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.38%)</title><rect x="67.9810%" y="133" width="0.3847%" height="15" fill="rgb(249,208,11)" fg:x="28983" fg:w="164"/><text x="68.2739%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="68.3656%" y="117" width="0.1384%" height="15" fill="rgb(210,39,28)" fg:x="29147" fg:w="59"/><text x="68.6586%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.22%)</title><rect x="68.3656%" y="133" width="0.2181%" height="15" fill="rgb(211,56,53)" fg:x="29147" fg:w="93"/><text x="68.6586%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (402 instructions, 0.94%)</title><rect x="67.8426%" y="149" width="0.9429%" height="15" fill="rgb(226,201,30)" fg:x="28924" fg:w="402"/><text x="68.1355%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="69.3085%" y="133" width="0.1384%" height="15" fill="rgb(239,101,34)" fg:x="29549" fg:w="59"/><text x="69.6015%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.38%)</title><rect x="69.4469%" y="133" width="0.3847%" height="15" fill="rgb(226,209,5)" fg:x="29608" fg:w="164"/><text x="69.7399%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.14%)</title><rect x="69.8316%" y="117" width="0.1384%" height="15" fill="rgb(250,105,47)" fg:x="29772" fg:w="59"/><text x="70.1246%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.22%)</title><rect x="69.8316%" y="133" width="0.2181%" height="15" fill="rgb(230,72,3)" fg:x="29772" fg:w="93"/><text x="70.1246%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (402 instructions, 0.94%)</title><rect x="69.3085%" y="149" width="0.9429%" height="15" fill="rgb(232,218,39)" fg:x="29549" fg:w="402"/><text x="69.6015%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,250 instructions, 2.93%)</title><rect x="67.8426%" y="165" width="2.9319%" height="15" fill="rgb(248,166,6)" fg:x="28924" fg:w="1250"/><text x="68.1355%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,547 instructions, 3.63%)</title><rect x="67.8426%" y="181" width="3.6286%" height="15" fill="rgb(247,89,20)" fg:x="28924" fg:w="1547"/><text x="68.1355%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.12%)</title><rect x="71.4711%" y="181" width="0.1243%" height="15" fill="rgb(248,130,54)" fg:x="30471" fg:w="53"/><text x="71.7641%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="71.5954%" y="165" width="0.1947%" height="15" fill="rgb(234,196,4)" fg:x="30524" fg:w="83"/><text x="71.8884%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="71.8722%" y="149" width="0.0539%" height="15" fill="rgb(250,143,31)" fg:x="30642" fg:w="23"/><text x="72.1652%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.32%)</title><rect x="71.8722%" y="165" width="0.3237%" height="15" fill="rgb(211,110,34)" fg:x="30642" fg:w="138"/><text x="72.1652%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (291 instructions, 0.68%)</title><rect x="71.5954%" y="181" width="0.6826%" height="15" fill="rgb(215,124,48)" fg:x="30524" fg:w="291"/><text x="71.8884%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.34%)</title><rect x="72.2780%" y="117" width="0.3424%" height="15" fill="rgb(216,46,13)" fg:x="30815" fg:w="146"/><text x="72.5710%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (254 instructions, 0.60%)</title><rect x="72.2780%" y="133" width="0.5958%" height="15" fill="rgb(205,184,25)" fg:x="30815" fg:w="254"/><text x="72.5710%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (342 instructions, 0.80%)</title><rect x="72.2780%" y="149" width="0.8022%" height="15" fill="rgb(228,1,10)" fg:x="30815" fg:w="342"/><text x="72.5710%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="73.0802%" y="149" width="0.0305%" height="15" fill="rgb(213,116,27)" fg:x="31157" fg:w="13"/><text x="73.3731%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (423 instructions, 0.99%)</title><rect x="72.2780%" y="165" width="0.9922%" height="15" fill="rgb(241,95,50)" fg:x="30815" fg:w="423"/><text x="72.5710%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="73.2702%" y="149" width="0.1947%" height="15" fill="rgb(238,48,32)" fg:x="31238" fg:w="83"/><text x="73.5631%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="73.7182%" y="149" width="0.1947%" height="15" fill="rgb(235,113,49)" fg:x="31429" fg:w="83"/><text x="74.0111%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (382 instructions, 0.90%)</title><rect x="73.2702%" y="165" width="0.8960%" height="15" fill="rgb(205,127,43)" fg:x="31238" fg:w="382"/><text x="73.5631%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.1662%" y="165" width="0.0305%" height="15" fill="rgb(250,162,2)" fg:x="31620" fg:w="13"/><text x="74.4591%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.1967%" y="165" width="0.0305%" height="15" fill="rgb(220,13,41)" fg:x="31633" fg:w="13"/><text x="74.4896%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="74.2271%" y="149" width="0.1947%" height="15" fill="rgb(249,221,25)" fg:x="31646" fg:w="83"/><text x="74.5201%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.23%)</title><rect x="74.4218%" y="149" width="0.2322%" height="15" fill="rgb(215,208,19)" fg:x="31729" fg:w="99"/><text x="74.7148%" y="159.50"></text></g><g><title>memcmp (123 instructions, 0.29%)</title><rect x="74.6540%" y="149" width="0.2885%" height="15" fill="rgb(236,175,2)" fg:x="31828" fg:w="123"/><text x="74.9470%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="74.9425%" y="149" width="0.1407%" height="15" fill="rgb(241,52,2)" fg:x="31951" fg:w="60"/><text x="75.2355%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (474 instructions, 1.11%)</title><rect x="74.2271%" y="165" width="1.1118%" height="15" fill="rgb(248,140,14)" fg:x="31646" fg:w="474"/><text x="74.5201%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.08%)</title><rect x="75.3389%" y="149" width="0.0797%" height="15" fill="rgb(253,22,42)" fg:x="32120" fg:w="34"/><text x="75.6319%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.04%)</title><rect x="75.4187%" y="149" width="0.0422%" height="15" fill="rgb(234,61,47)" fg:x="32154" fg:w="18"/><text x="75.7116%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.04%)</title><rect x="75.4609%" y="149" width="0.0422%" height="15" fill="rgb(208,226,15)" fg:x="32172" fg:w="18"/><text x="75.7539%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.19%)</title><rect x="75.5031%" y="133" width="0.1923%" height="15" fill="rgb(217,221,4)" fg:x="32190" fg:w="82"/><text x="75.7961%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.16%)</title><rect x="75.6955%" y="133" width="0.1642%" height="15" fill="rgb(212,174,34)" fg:x="32272" fg:w="70"/><text x="75.9884%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.18%)</title><rect x="75.8596%" y="133" width="0.1783%" height="15" fill="rgb(253,83,4)" fg:x="32342" fg:w="76"/><text x="76.1526%" y="143.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.68%)</title><rect x="75.5031%" y="149" width="0.6802%" height="15" fill="rgb(250,195,49)" fg:x="32190" fg:w="290"/><text x="75.7961%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.15%)</title><rect x="76.1833%" y="149" width="0.1478%" height="15" fill="rgb(241,192,25)" fg:x="32480" fg:w="63"/><text x="76.4763%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="76.3311%" y="149" width="0.1947%" height="15" fill="rgb(208,124,10)" fg:x="32543" fg:w="83"/><text x="76.6241%" y="159.50"></text></g><g><title>memcpy (115 instructions, 0.27%)</title><rect x="76.5258%" y="149" width="0.2697%" height="15" fill="rgb(222,33,0)" fg:x="32626" fg:w="115"/><text x="76.8187%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.38%)</title><rect x="76.7955%" y="149" width="0.3800%" height="15" fill="rgb(234,209,28)" fg:x="32741" fg:w="162"/><text x="77.0885%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (963 instructions, 2.26%)</title><rect x="75.3389%" y="165" width="2.2588%" height="15" fill="rgb(224,11,23)" fg:x="32120" fg:w="963"/><text x="75.6319%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="77.5977%" y="149" width="0.0164%" height="15" fill="rgb(232,99,1)" fg:x="33083" fg:w="7"/><text x="77.8907%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="77.6141%" y="149" width="0.2088%" height="15" fill="rgb(237,95,45)" fg:x="33090" fg:w="89"/><text x="77.9071%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="77.8229%" y="149" width="0.0164%" height="15" fill="rgb(208,109,11)" fg:x="33179" fg:w="7"/><text x="78.1158%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="77.8393%" y="133" width="0.0633%" height="15" fill="rgb(216,190,48)" fg:x="33186" fg:w="27"/><text x="78.1323%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.34%)</title><rect x="77.8393%" y="149" width="0.3378%" height="15" fill="rgb(251,171,36)" fg:x="33186" fg:w="144"/><text x="78.1323%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (298 instructions, 0.70%)</title><rect x="77.5977%" y="165" width="0.6990%" height="15" fill="rgb(230,62,22)" fg:x="33083" fg:w="298"/><text x="77.8907%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (3,188 instructions, 7.48%)</title><rect x="72.2780%" y="181" width="7.4776%" height="15" fill="rgb(225,114,35)" fg:x="30815" fg:w="3188"/><text x="72.5710%" y="191.50">publishe..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="79.9643%" y="149" width="0.0633%" height="15" fill="rgb(215,118,42)" fg:x="34092" fg:w="27"/><text x="80.2573%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.55%)</title><rect x="79.7556%" y="165" width="0.5465%" height="15" fill="rgb(243,119,21)" fg:x="34003" fg:w="233"/><text x="80.0486%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (286 instructions, 0.67%)</title><rect x="79.7556%" y="181" width="0.6708%" height="15" fill="rgb(252,177,53)" fg:x="34003" fg:w="286"/><text x="80.0486%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.4264%" y="181" width="0.0305%" height="15" fill="rgb(237,209,29)" fg:x="34289" fg:w="13"/><text x="80.7194%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.4569%" y="181" width="0.0305%" height="15" fill="rgb(212,65,23)" fg:x="34302" fg:w="13"/><text x="80.7499%" y="191.50"></text></g><g><title>memcpy (440 instructions, 1.03%)</title><rect x="80.4874%" y="181" width="1.0320%" height="15" fill="rgb(230,222,46)" fg:x="34315" fg:w="440"/><text x="80.7804%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.21%)</title><rect x="81.5194%" y="133" width="0.2088%" height="15" fill="rgb(215,135,32)" fg:x="34755" fg:w="89"/><text x="81.8124%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="81.7282%" y="117" width="0.1947%" height="15" fill="rgb(246,101,22)" fg:x="34844" fg:w="83"/><text x="82.0212%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.9229%" y="117" width="0.0305%" height="15" fill="rgb(206,107,13)" fg:x="34927" fg:w="13"/><text x="82.2158%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="81.9534%" y="101" width="0.0633%" height="15" fill="rgb(250,100,44)" fg:x="34940" fg:w="27"/><text x="82.2463%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="82.2864%" y="101" width="0.0633%" height="15" fill="rgb(231,147,38)" fg:x="35082" fg:w="27"/><text x="82.5794%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (271 instructions, 0.64%)</title><rect x="81.9534%" y="117" width="0.6356%" height="15" fill="rgb(229,8,40)" fg:x="34940" fg:w="271"/><text x="82.2463%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (482 instructions, 1.13%)</title><rect x="81.7282%" y="133" width="1.1306%" height="15" fill="rgb(221,135,30)" fg:x="34844" fg:w="482"/><text x="82.0212%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="82.8588%" y="117" width="0.0633%" height="15" fill="rgb(249,193,18)" fg:x="35326" fg:w="27"/><text x="83.1517%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (129 instructions, 0.30%)</title><rect x="82.8588%" y="133" width="0.3026%" height="15" fill="rgb(209,133,39)" fg:x="35326" fg:w="129"/><text x="83.1517%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (804 instructions, 1.89%)</title><rect x="81.5194%" y="149" width="1.8858%" height="15" fill="rgb(232,100,14)" fg:x="34755" fg:w="804"/><text x="81.8124%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="83.4053%" y="133" width="0.0633%" height="15" fill="rgb(224,185,1)" fg:x="35559" fg:w="27"/><text x="83.6982%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.33%)</title><rect x="83.4053%" y="149" width="0.3331%" height="15" fill="rgb(223,139,8)" fg:x="35559" fg:w="142"/><text x="83.6982%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="83.7383%" y="117" width="0.0539%" height="15" fill="rgb(232,213,38)" fg:x="35701" fg:w="23"/><text x="84.0313%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="83.7923%" y="117" width="0.0633%" height="15" fill="rgb(207,94,22)" fg:x="35724" fg:w="27"/><text x="84.0852%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.45%)</title><rect x="83.7383%" y="133" width="0.4527%" height="15" fill="rgb(219,183,54)" fg:x="35701" fg:w="193"/><text x="84.0313%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (228 instructions, 0.53%)</title><rect x="83.7383%" y="149" width="0.5348%" height="15" fill="rgb(216,185,54)" fg:x="35701" fg:w="228"/><text x="84.0313%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="84.2731%" y="149" width="0.0305%" height="15" fill="rgb(254,217,39)" fg:x="35929" fg:w="13"/><text x="84.5661%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,249 instructions, 2.93%)</title><rect x="81.5194%" y="165" width="2.9296%" height="15" fill="rgb(240,178,23)" fg:x="34755" fg:w="1249"/><text x="81.8124%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,298 instructions, 3.04%)</title><rect x="81.5194%" y="181" width="3.0445%" height="15" fill="rgb(218,11,47)" fg:x="34755" fg:w="1298"/><text x="81.8124%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.19%)</title><rect x="84.5640%" y="181" width="0.1947%" height="15" fill="rgb(218,51,51)" fg:x="36053" fg:w="83"/><text x="84.8569%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data (36,916 instructions, 86.59%)</title><rect x="1.9656%" y="197" width="86.5882%" height="15" fill="rgb(238,126,27)" fg:x="838" fg:w="36916"/><text x="2.2585%" y="207.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="88.5537%" y="181" width="0.1947%" height="15" fill="rgb(249,202,22)" fg:x="37754" fg:w="83"/><text x="88.8467%" y="191.50"></text></g><g><title>memset (130 instructions, 0.30%)</title><rect x="88.7484%" y="181" width="0.3049%" height="15" fill="rgb(254,195,49)" fg:x="37837" fg:w="130"/><text x="89.0414%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.42%)</title><rect x="89.0533%" y="181" width="0.4199%" height="15" fill="rgb(208,123,14)" fg:x="37967" fg:w="179"/><text x="89.3463%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="89.4732%" y="181" width="0.1407%" height="15" fill="rgb(224,200,8)" fg:x="38146" fg:w="60"/><text x="89.7662%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (22 instructions, 0.05%)</title><rect x="89.6139%" y="181" width="0.0516%" height="15" fill="rgb(217,61,36)" fg:x="38206" fg:w="22"/><text x="89.9069%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (65 instructions, 0.15%)</title><rect x="89.6655%" y="181" width="0.1525%" height="15" fill="rgb(206,35,45)" fg:x="38228" fg:w="65"/><text x="89.9585%" y="191.50"></text></g><g><title>publisher::subscribe (1,847 instructions, 4.33%)</title><rect x="88.5537%" y="197" width="4.3322%" height="15" fill="rgb(217,65,33)" fg:x="37754" fg:w="1847"/><text x="88.8467%" y="207.50">publ..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.02%)</title><rect x="92.8860%" y="165" width="0.0164%" height="15" fill="rgb(222,158,48)" fg:x="39601" fg:w="7"/><text x="93.1789%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="92.9024%" y="165" width="0.0305%" height="15" fill="rgb(254,2,54)" fg:x="39608" fg:w="13"/><text x="93.1953%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="92.9329%" y="165" width="0.0305%" height="15" fill="rgb(250,143,38)" fg:x="39621" fg:w="13"/><text x="93.2258%" y="175.50"></text></g><g><title>memset (152 instructions, 0.36%)</title><rect x="92.9634%" y="165" width="0.3565%" height="15" fill="rgb(248,25,0)" fg:x="39634" fg:w="152"/><text x="93.2563%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (388 instructions, 0.91%)</title><rect x="92.8860%" y="181" width="0.9101%" height="15" fill="rgb(206,152,27)" fg:x="39601" fg:w="388"/><text x="93.1789%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.21%)</title><rect x="93.7960%" y="181" width="1.2150%" height="15" fill="rgb(240,77,30)" fg:x="39989" fg:w="518"/><text x="94.0890%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.19%)</title><rect x="95.0110%" y="133" width="0.1947%" height="15" fill="rgb(231,5,3)" fg:x="40507" fg:w="83"/><text x="95.3040%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.30%)</title><rect x="95.0110%" y="149" width="0.2955%" height="15" fill="rgb(207,226,32)" fg:x="40507" fg:w="126"/><text x="95.3040%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.49%)</title><rect x="95.0110%" y="165" width="0.4879%" height="15" fill="rgb(222,207,47)" fg:x="40507" fg:w="208"/><text x="95.3040%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="95.4989%" y="165" width="0.0352%" height="15" fill="rgb(229,115,45)" fg:x="40715" fg:w="15"/><text x="95.7919%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="95.5341%" y="165" width="0.0352%" height="15" fill="rgb(224,191,6)" fg:x="40730" fg:w="15"/><text x="95.8270%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 1.00%)</title><rect x="95.0110%" y="181" width="0.9992%" height="15" fill="rgb(230,227,24)" fg:x="40507" fg:w="426"/><text x="95.3040%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.21%)</title><rect x="96.0102%" y="181" width="1.2103%" height="15" fill="rgb(228,80,19)" fg:x="40933" fg:w="516"/><text x="96.3032%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="97.2205%" y="181" width="0.0164%" height="15" fill="rgb(247,229,0)" fg:x="41449" fg:w="7"/><text x="97.5135%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="97.2369%" y="181" width="0.0164%" height="15" fill="rgb(237,194,15)" fg:x="41456" fg:w="7"/><text x="97.5299%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.14%)</title><rect x="97.2534%" y="181" width="0.1407%" height="15" fill="rgb(219,203,20)" fg:x="41463" fg:w="60"/><text x="97.5463%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,601 instructions, 6.10%)</title><rect x="92.8860%" y="197" width="6.1008%" height="15" fill="rgb(234,128,8)" fg:x="39601" fg:w="2601"/><text x="93.1789%" y="207.50">ic_cdk..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.06%)</title><rect x="99.1978%" y="181" width="0.0633%" height="15" fill="rgb(248,202,8)" fg:x="42292" fg:w="27"/><text x="99.4908%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="99.2612%" y="181" width="0.0539%" height="15" fill="rgb(206,104,37)" fg:x="42319" fg:w="23"/><text x="99.5541%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (282 instructions, 0.66%)</title><rect x="98.9891%" y="197" width="0.6614%" height="15" fill="rgb(223,8,27)" fg:x="42203" fg:w="282"/><text x="99.2820%" y="207.50"></text></g><g><title>all (42,634 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(216,217,28)" fg:x="0" fg:w="42634"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (42,634 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(249,199,1)" fg:x="0" fg:w="42634"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>