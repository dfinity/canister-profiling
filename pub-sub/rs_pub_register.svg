<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="37798"><g><title>ic_cdk::setup (58 instructions, 0.15%)</title><rect x="0.0000%" y="197" width="0.1534%" height="15" fill="rgb(223,117,47)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.82%)</title><rect x="0.1534%" y="197" width="1.8228%" height="15" fill="rgb(244,107,35)" fg:x="58" fg:w="689"/><text x="0.4464%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="1.9763%" y="197" width="0.2408%" height="15" fill="rgb(205,140,8)" fg:x="747" fg:w="91"/><text x="2.2693%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="2.2170%" y="181" width="0.2408%" height="15" fill="rgb(228,84,46)" fg:x="838" fg:w="91"/><text x="2.5100%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.15%)</title><rect x="2.4578%" y="149" width="0.1508%" height="15" fill="rgb(254,188,9)" fg:x="929" fg:w="57"/><text x="2.7508%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.41%)</title><rect x="2.4578%" y="165" width="0.4101%" height="15" fill="rgb(206,112,54)" fg:x="929" fg:w="155"/><text x="2.7508%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="2.8679%" y="149" width="0.0159%" height="15" fill="rgb(216,84,49)" fg:x="1084" fg:w="6"/><text x="3.1608%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.17%)</title><rect x="2.8679%" y="165" width="1.1720%" height="15" fill="rgb(214,194,35)" fg:x="1084" fg:w="443"/><text x="3.1608%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.25%)</title><rect x="4.0399%" y="165" width="0.2513%" height="15" fill="rgb(249,28,3)" fg:x="1527" fg:w="95"/><text x="4.3329%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="4.2912%" y="165" width="0.1587%" height="15" fill="rgb(222,56,52)" fg:x="1622" fg:w="60"/><text x="4.5842%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="4.4500%" y="165" width="0.1587%" height="15" fill="rgb(245,217,50)" fg:x="1682" fg:w="60"/><text x="4.7429%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="4.6087%" y="165" width="0.1587%" height="15" fill="rgb(213,201,24)" fg:x="1742" fg:w="60"/><text x="4.9017%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="4.7674%" y="165" width="0.1587%" height="15" fill="rgb(248,116,28)" fg:x="1802" fg:w="60"/><text x="5.0604%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="4.9262%" y="165" width="0.2169%" height="15" fill="rgb(219,72,43)" fg:x="1862" fg:w="82"/><text x="5.2192%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.19%)</title><rect x="5.1431%" y="165" width="0.1852%" height="15" fill="rgb(209,138,14)" fg:x="1944" fg:w="70"/><text x="5.4361%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="5.3283%" y="149" width="0.0159%" height="15" fill="rgb(222,18,33)" fg:x="2014" fg:w="6"/><text x="5.6213%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.17%)</title><rect x="5.3283%" y="165" width="1.1720%" height="15" fill="rgb(213,199,7)" fg:x="2014" fg:w="443"/><text x="5.6213%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="6.5003%" y="165" width="0.0503%" height="15" fill="rgb(250,110,10)" fg:x="2457" fg:w="19"/><text x="6.7933%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="6.5506%" y="149" width="0.2408%" height="15" fill="rgb(248,123,6)" fg:x="2476" fg:w="91"/><text x="6.8436%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.18%)</title><rect x="6.7914%" y="117" width="0.1773%" height="15" fill="rgb(206,91,31)" fg:x="2567" fg:w="67"/><text x="7.0843%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.25%)</title><rect x="6.7914%" y="133" width="0.2540%" height="15" fill="rgb(211,154,13)" fg:x="2567" fg:w="96"/><text x="7.0843%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="7.0453%" y="85" width="0.0291%" height="15" fill="rgb(225,148,7)" fg:x="2663" fg:w="11"/><text x="7.3383%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="7.0744%" y="69" width="0.0926%" height="15" fill="rgb(220,160,43)" fg:x="2674" fg:w="35"/><text x="7.3674%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="7.0744%" y="85" width="0.1693%" height="15" fill="rgb(213,52,39)" fg:x="2674" fg:w="64"/><text x="7.3674%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="7.0453%" y="101" width="0.3810%" height="15" fill="rgb(243,137,7)" fg:x="2663" fg:w="144"/><text x="7.3383%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.55%)</title><rect x="7.0453%" y="117" width="0.5529%" height="15" fill="rgb(230,79,13)" fg:x="2663" fg:w="209"/><text x="7.3383%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.58%)</title><rect x="7.0453%" y="133" width="0.5794%" height="15" fill="rgb(247,105,23)" fg:x="2663" fg:w="219"/><text x="7.3383%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 1.21%)</title><rect x="6.7914%" y="149" width="1.2091%" height="15" fill="rgb(223,179,41)" fg:x="2567" fg:w="457"/><text x="7.0843%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.81%)</title><rect x="6.5506%" y="165" width="1.8149%" height="15" fill="rgb(218,9,34)" fg:x="2476" fg:w="686"/><text x="6.8436%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.25%)</title><rect x="8.3655%" y="165" width="0.2513%" height="15" fill="rgb(222,106,8)" fg:x="3162" fg:w="95"/><text x="8.6585%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.17%)</title><rect x="8.6169%" y="165" width="0.1667%" height="15" fill="rgb(211,220,0)" fg:x="3257" fg:w="63"/><text x="8.9098%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="8.7835%" y="149" width="0.1587%" height="15" fill="rgb(229,52,16)" fg:x="3320" fg:w="60"/><text x="9.0765%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="8.9423%" y="149" width="0.2408%" height="15" fill="rgb(212,155,18)" fg:x="3380" fg:w="91"/><text x="9.2352%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="9.1830%" y="133" width="0.2408%" height="15" fill="rgb(242,21,14)" fg:x="3471" fg:w="91"/><text x="9.4760%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.35%)</title><rect x="9.4238%" y="101" width="0.3466%" height="15" fill="rgb(222,19,48)" fg:x="3562" fg:w="131"/><text x="9.7167%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.42%)</title><rect x="9.4238%" y="117" width="0.4233%" height="15" fill="rgb(232,45,27)" fg:x="3562" fg:w="160"/><text x="9.7167%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.23%)</title><rect x="9.8471%" y="37" width="0.2302%" height="15" fill="rgb(249,103,42)" fg:x="3722" fg:w="87"/><text x="10.1401%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.35%)</title><rect x="9.8471%" y="53" width="0.3492%" height="15" fill="rgb(246,81,33)" fg:x="3722" fg:w="132"/><text x="10.1401%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.58%)</title><rect x="9.8471%" y="69" width="0.5794%" height="15" fill="rgb(252,33,42)" fg:x="3722" fg:w="219"/><text x="10.1401%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.42%)</title><rect x="10.4265%" y="69" width="0.4233%" height="15" fill="rgb(209,212,41)" fg:x="3941" fg:w="160"/><text x="10.7194%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (419 instructions, 1.11%)</title><rect x="9.8471%" y="85" width="1.1085%" height="15" fill="rgb(207,154,6)" fg:x="3722" fg:w="419"/><text x="10.1401%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="10.9556%" y="53" width="0.0291%" height="15" fill="rgb(223,64,47)" fg:x="4141" fg:w="11"/><text x="11.2486%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="10.9847%" y="37" width="0.0926%" height="15" fill="rgb(211,161,38)" fg:x="4152" fg:w="35"/><text x="11.2777%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="10.9847%" y="53" width="0.1693%" height="15" fill="rgb(219,138,40)" fg:x="4152" fg:w="64"/><text x="11.2777%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="10.9556%" y="69" width="0.3810%" height="15" fill="rgb(241,228,46)" fg:x="4141" fg:w="144"/><text x="11.2486%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.56%)</title><rect x="10.9556%" y="85" width="0.5635%" height="15" fill="rgb(223,209,38)" fg:x="4141" fg:w="213"/><text x="11.2486%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="11.5191%" y="69" width="0.1349%" height="15" fill="rgb(236,164,45)" fg:x="4354" fg:w="51"/><text x="11.8121%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.21%)</title><rect x="11.5191%" y="85" width="0.2117%" height="15" fill="rgb(231,15,5)" fg:x="4354" fg:w="80"/><text x="11.8121%" y="95.50"></text></g><g><title>core::fmt::write (882 instructions, 2.33%)</title><rect x="9.8471%" y="101" width="2.3335%" height="15" fill="rgb(252,35,15)" fg:x="3722" fg:w="882"/><text x="10.1401%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (948 instructions, 2.51%)</title><rect x="9.8471%" y="117" width="2.5081%" height="15" fill="rgb(248,181,18)" fg:x="3722" fg:w="948"/><text x="10.1401%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,250 instructions, 3.31%)</title><rect x="9.4238%" y="133" width="3.3071%" height="15" fill="rgb(233,39,42)" fg:x="3562" fg:w="1250"/><text x="9.7167%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,479 instructions, 3.91%)</title><rect x="9.1830%" y="149" width="3.9129%" height="15" fill="rgb(238,110,33)" fg:x="3471" fg:w="1479"/><text x="9.4760%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.22%)</title><rect x="13.0959%" y="149" width="0.2196%" height="15" fill="rgb(233,195,10)" fg:x="4950" fg:w="83"/><text x="13.3889%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.17%)</title><rect x="13.3155%" y="149" width="0.1667%" height="15" fill="rgb(254,105,3)" fg:x="5033" fg:w="63"/><text x="13.6085%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="13.4822%" y="149" width="0.2011%" height="15" fill="rgb(221,225,9)" fg:x="5096" fg:w="76"/><text x="13.7752%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="13.6833%" y="117" width="0.2408%" height="15" fill="rgb(224,227,45)" fg:x="5172" fg:w="91"/><text x="13.9762%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.35%)</title><rect x="13.6833%" y="133" width="0.3545%" height="15" fill="rgb(229,198,43)" fg:x="5172" fg:w="134"/><text x="13.9762%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.58%)</title><rect x="13.6833%" y="149" width="0.5794%" height="15" fill="rgb(206,209,35)" fg:x="5172" fg:w="219"/><text x="13.9762%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="14.2627%" y="149" width="0.1587%" height="15" fill="rgb(245,195,53)" fg:x="5391" fg:w="60"/><text x="14.5556%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="14.4214%" y="149" width="0.2408%" height="15" fill="rgb(240,92,26)" fg:x="5451" fg:w="91"/><text x="14.7144%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="14.6622%" y="133" width="0.2408%" height="15" fill="rgb(207,40,23)" fg:x="5542" fg:w="91"/><text x="14.9551%" y="143.50"></text></g><g><title>memcpy (131 instructions, 0.35%)</title><rect x="14.9029%" y="101" width="0.3466%" height="15" fill="rgb(223,111,35)" fg:x="5633" fg:w="131"/><text x="15.1959%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (160 instructions, 0.42%)</title><rect x="14.9029%" y="117" width="0.4233%" height="15" fill="rgb(229,147,28)" fg:x="5633" fg:w="160"/><text x="15.1959%" y="127.50"></text></g><g><title>__rust_realloc (87 instructions, 0.23%)</title><rect x="15.3262%" y="37" width="0.2302%" height="15" fill="rgb(211,29,28)" fg:x="5793" fg:w="87"/><text x="15.6192%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.35%)</title><rect x="15.3262%" y="53" width="0.3492%" height="15" fill="rgb(228,72,33)" fg:x="5793" fg:w="132"/><text x="15.6192%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.58%)</title><rect x="15.3262%" y="69" width="0.5794%" height="15" fill="rgb(205,214,31)" fg:x="5793" fg:w="219"/><text x="15.6192%" y="79.50"></text></g><g><title>memcpy (160 instructions, 0.42%)</title><rect x="15.9056%" y="69" width="0.4233%" height="15" fill="rgb(224,111,15)" fg:x="6012" fg:w="160"/><text x="16.1986%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (419 instructions, 1.11%)</title><rect x="15.3262%" y="85" width="1.1085%" height="15" fill="rgb(253,21,26)" fg:x="5793" fg:w="419"/><text x="15.6192%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="16.4347%" y="53" width="0.0291%" height="15" fill="rgb(245,139,43)" fg:x="6212" fg:w="11"/><text x="16.7277%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="16.4638%" y="37" width="0.0926%" height="15" fill="rgb(252,170,7)" fg:x="6223" fg:w="35"/><text x="16.7568%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="16.4638%" y="53" width="0.1693%" height="15" fill="rgb(231,118,14)" fg:x="6223" fg:w="64"/><text x="16.7568%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="16.4347%" y="69" width="0.3810%" height="15" fill="rgb(238,83,0)" fg:x="6212" fg:w="144"/><text x="16.7277%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (213 instructions, 0.56%)</title><rect x="16.4347%" y="85" width="0.5635%" height="15" fill="rgb(221,39,39)" fg:x="6212" fg:w="213"/><text x="16.7277%" y="95.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="16.9983%" y="69" width="0.1349%" height="15" fill="rgb(222,119,46)" fg:x="6425" fg:w="51"/><text x="17.2912%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (80 instructions, 0.21%)</title><rect x="16.9983%" y="85" width="0.2117%" height="15" fill="rgb(222,165,49)" fg:x="6425" fg:w="80"/><text x="17.2912%" y="95.50"></text></g><g><title>core::fmt::write (882 instructions, 2.33%)</title><rect x="15.3262%" y="101" width="2.3335%" height="15" fill="rgb(219,113,52)" fg:x="5793" fg:w="882"/><text x="15.6192%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (948 instructions, 2.51%)</title><rect x="15.3262%" y="117" width="2.5081%" height="15" fill="rgb(214,7,15)" fg:x="5793" fg:w="948"/><text x="15.6192%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,250 instructions, 3.31%)</title><rect x="14.9029%" y="133" width="3.3071%" height="15" fill="rgb(235,32,4)" fg:x="5633" fg:w="1250"/><text x="15.1959%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,479 instructions, 3.91%)</title><rect x="14.6622%" y="149" width="3.9129%" height="15" fill="rgb(238,90,54)" fg:x="5542" fg:w="1479"/><text x="14.9551%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (83 instructions, 0.22%)</title><rect x="18.5751%" y="149" width="0.2196%" height="15" fill="rgb(213,208,19)" fg:x="7021" fg:w="83"/><text x="18.8680%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.17%)</title><rect x="18.7946%" y="149" width="0.1667%" height="15" fill="rgb(233,156,4)" fg:x="7104" fg:w="63"/><text x="19.0876%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="18.9613%" y="149" width="0.2011%" height="15" fill="rgb(207,194,5)" fg:x="7167" fg:w="76"/><text x="19.2543%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.16%)</title><rect x="19.1624%" y="149" width="0.1587%" height="15" fill="rgb(206,111,30)" fg:x="7243" fg:w="60"/><text x="19.4554%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="19.3211%" y="133" width="0.2169%" height="15" fill="rgb(243,70,54)" fg:x="7303" fg:w="82"/><text x="19.6141%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.19%)</title><rect x="19.5381%" y="133" width="0.1852%" height="15" fill="rgb(242,28,8)" fg:x="7385" fg:w="70"/><text x="19.8310%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="19.7233%" y="117" width="0.0159%" height="15" fill="rgb(219,106,18)" fg:x="7455" fg:w="6"/><text x="20.0162%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.17%)</title><rect x="19.7233%" y="133" width="1.1720%" height="15" fill="rgb(244,222,10)" fg:x="7455" fg:w="443"/><text x="20.0162%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="20.8953%" y="133" width="0.0503%" height="15" fill="rgb(236,179,52)" fg:x="7898" fg:w="19"/><text x="21.1883%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="20.9456%" y="117" width="0.2408%" height="15" fill="rgb(213,23,39)" fg:x="7917" fg:w="91"/><text x="21.2385%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.18%)</title><rect x="21.1863%" y="85" width="0.1773%" height="15" fill="rgb(238,48,10)" fg:x="8008" fg:w="67"/><text x="21.4793%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.25%)</title><rect x="21.1863%" y="101" width="0.2540%" height="15" fill="rgb(251,196,23)" fg:x="8008" fg:w="96"/><text x="21.4793%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="21.4403%" y="53" width="0.0291%" height="15" fill="rgb(250,152,24)" fg:x="8104" fg:w="11"/><text x="21.7333%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="21.4694%" y="37" width="0.0926%" height="15" fill="rgb(209,150,17)" fg:x="8115" fg:w="35"/><text x="21.7624%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="21.4694%" y="53" width="0.1693%" height="15" fill="rgb(234,202,34)" fg:x="8115" fg:w="64"/><text x="21.7624%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="21.4403%" y="69" width="0.3810%" height="15" fill="rgb(253,148,53)" fg:x="8104" fg:w="144"/><text x="21.7333%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.55%)</title><rect x="21.4403%" y="85" width="0.5529%" height="15" fill="rgb(218,129,16)" fg:x="8104" fg:w="209"/><text x="21.7333%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.58%)</title><rect x="21.4403%" y="101" width="0.5794%" height="15" fill="rgb(216,85,19)" fg:x="8104" fg:w="219"/><text x="21.7333%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 1.21%)</title><rect x="21.1863%" y="117" width="1.2091%" height="15" fill="rgb(235,228,7)" fg:x="8008" fg:w="457"/><text x="21.4793%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.81%)</title><rect x="20.9456%" y="133" width="1.8149%" height="15" fill="rgb(245,175,0)" fg:x="7917" fg:w="686"/><text x="21.2385%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.25%)</title><rect x="22.7605%" y="133" width="0.2513%" height="15" fill="rgb(208,168,36)" fg:x="8603" fg:w="95"/><text x="23.0534%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.17%)</title><rect x="23.0118%" y="133" width="0.1667%" height="15" fill="rgb(246,171,24)" fg:x="8698" fg:w="63"/><text x="23.3048%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="23.1785%" y="117" width="0.2169%" height="15" fill="rgb(215,142,24)" fg:x="8761" fg:w="82"/><text x="23.4714%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (294 instructions, 0.78%)</title><rect x="23.3954%" y="117" width="0.7778%" height="15" fill="rgb(250,187,7)" fg:x="8843" fg:w="294"/><text x="23.6884%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="24.1732%" y="101" width="0.2169%" height="15" fill="rgb(228,66,33)" fg:x="9137" fg:w="82"/><text x="24.4662%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.25%)</title><rect x="24.3902%" y="101" width="0.2513%" height="15" fill="rgb(234,215,21)" fg:x="9219" fg:w="95"/><text x="24.6831%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="24.6415%" y="101" width="0.2011%" height="15" fill="rgb(222,191,20)" fg:x="9314" fg:w="76"/><text x="24.9345%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.87%)</title><rect x="24.1732%" y="117" width="0.8731%" height="15" fill="rgb(245,79,54)" fg:x="9137" fg:w="330"/><text x="24.4662%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="25.0463%" y="117" width="0.2011%" height="15" fill="rgb(240,10,37)" fg:x="9467" fg:w="76"/><text x="25.3393%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (928 instructions, 2.46%)</title><rect x="23.1785%" y="133" width="2.4552%" height="15" fill="rgb(214,192,32)" fg:x="8761" fg:w="928"/><text x="23.4714%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="25.6336%" y="133" width="0.2408%" height="15" fill="rgb(209,36,54)" fg:x="9689" fg:w="91"/><text x="25.9266%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 instructions, 0.07%)</title><rect x="25.8744%" y="133" width="0.0688%" height="15" fill="rgb(220,10,11)" fg:x="9780" fg:w="26"/><text x="26.1674%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="25.9432%" y="133" width="0.2011%" height="15" fill="rgb(221,106,17)" fg:x="9806" fg:w="76"/><text x="26.2361%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,944 instructions, 7.79%)</title><rect x="19.3211%" y="149" width="7.7888%" height="15" fill="rgb(251,142,44)" fg:x="7303" fg:w="2944"/><text x="19.6141%" y="159.50">&lt;candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="27.1125%" y="133" width="0.2355%" height="15" fill="rgb(238,13,15)" fg:x="10248" fg:w="89"/><text x="27.4055%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.22%)</title><rect x="27.4512%" y="133" width="0.2196%" height="15" fill="rgb(208,107,27)" fg:x="10376" fg:w="83"/><text x="27.7442%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (250 instructions, 0.66%)</title><rect x="27.1099%" y="149" width="0.6614%" height="15" fill="rgb(205,136,37)" fg:x="10247" fg:w="250"/><text x="27.4029%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="27.7713%" y="133" width="0.0608%" height="15" fill="rgb(250,205,27)" fg:x="10497" fg:w="23"/><text x="28.0643%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="27.8322%" y="133" width="0.0714%" height="15" fill="rgb(210,80,43)" fg:x="10520" fg:w="27"/><text x="28.1251%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.51%)</title><rect x="27.7713%" y="149" width="0.5106%" height="15" fill="rgb(247,160,36)" fg:x="10497" fg:w="193"/><text x="28.0643%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (8,113 instructions, 21.46%)</title><rect x="8.7835%" y="165" width="21.4641%" height="15" fill="rgb(234,13,49)" fg:x="3320" fg:w="8113"/><text x="9.0765%" y="175.50">&lt;candid::binary_parser::ConsT..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="30.2476%" y="165" width="0.2408%" height="15" fill="rgb(234,122,0)" fg:x="11433" fg:w="91"/><text x="30.5406%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="30.4884%" y="165" width="0.2011%" height="15" fill="rgb(207,146,38)" fg:x="11524" fg:w="76"/><text x="30.7814%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.19%)</title><rect x="30.6895%" y="165" width="0.1852%" height="15" fill="rgb(207,177,25)" fg:x="11600" fg:w="70"/><text x="30.9824%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="30.8746%" y="133" width="0.0159%" height="15" fill="rgb(211,178,42)" fg:x="11670" fg:w="6"/><text x="31.1676%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.17%)</title><rect x="30.8746%" y="149" width="1.1720%" height="15" fill="rgb(230,69,54)" fg:x="11670" fg:w="443"/><text x="31.1676%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="32.0467%" y="149" width="0.0503%" height="15" fill="rgb(214,135,41)" fg:x="12113" fg:w="19"/><text x="32.3396%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.30%)</title><rect x="32.0969%" y="133" width="0.3016%" height="15" fill="rgb(237,67,25)" fg:x="12132" fg:w="114"/><text x="32.3899%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.18%)</title><rect x="32.3985%" y="101" width="0.1773%" height="15" fill="rgb(222,189,50)" fg:x="12246" fg:w="67"/><text x="32.6915%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.25%)</title><rect x="32.3985%" y="117" width="0.2540%" height="15" fill="rgb(245,148,34)" fg:x="12246" fg:w="96"/><text x="32.6915%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="32.6525%" y="69" width="0.0291%" height="15" fill="rgb(222,29,6)" fg:x="12342" fg:w="11"/><text x="32.9455%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="32.6816%" y="53" width="0.0926%" height="15" fill="rgb(221,189,43)" fg:x="12353" fg:w="35"/><text x="32.9746%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="32.6816%" y="69" width="0.1693%" height="15" fill="rgb(207,36,27)" fg:x="12353" fg:w="64"/><text x="32.9746%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="32.6525%" y="85" width="0.3810%" height="15" fill="rgb(217,90,24)" fg:x="12342" fg:w="144"/><text x="32.9455%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.55%)</title><rect x="32.6525%" y="101" width="0.5529%" height="15" fill="rgb(224,66,35)" fg:x="12342" fg:w="209"/><text x="32.9455%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.58%)</title><rect x="32.6525%" y="117" width="0.5794%" height="15" fill="rgb(221,13,50)" fg:x="12342" fg:w="219"/><text x="32.9455%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 1.21%)</title><rect x="32.3985%" y="133" width="1.2091%" height="15" fill="rgb(236,68,49)" fg:x="12246" fg:w="457"/><text x="32.6915%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.88%)</title><rect x="32.0969%" y="149" width="1.8758%" height="15" fill="rgb(229,146,28)" fg:x="12132" fg:w="709"/><text x="32.3899%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.25%)</title><rect x="33.9727%" y="149" width="0.2513%" height="15" fill="rgb(225,31,38)" fg:x="12841" fg:w="95"/><text x="34.2657%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.16%)</title><rect x="34.2240%" y="149" width="0.1587%" height="15" fill="rgb(250,208,3)" fg:x="12936" fg:w="60"/><text x="34.5170%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="34.3828%" y="133" width="0.2169%" height="15" fill="rgb(246,54,23)" fg:x="12996" fg:w="82"/><text x="34.6757%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.25%)</title><rect x="34.5997%" y="133" width="0.2513%" height="15" fill="rgb(243,76,11)" fg:x="13078" fg:w="95"/><text x="34.8927%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="34.8511%" y="133" width="0.2011%" height="15" fill="rgb(245,21,50)" fg:x="13173" fg:w="76"/><text x="35.1440%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.87%)</title><rect x="34.3828%" y="149" width="0.8731%" height="15" fill="rgb(228,9,43)" fg:x="12996" fg:w="330"/><text x="34.6757%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="35.2558%" y="149" width="0.2196%" height="15" fill="rgb(208,100,47)" fg:x="13326" fg:w="83"/><text x="35.5488%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,985 instructions, 5.25%)</title><rect x="30.8746%" y="165" width="5.2516%" height="15" fill="rgb(232,26,8)" fg:x="11670" fg:w="1985"/><text x="31.1676%" y="175.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="36.1263%" y="165" width="0.2011%" height="15" fill="rgb(216,166,38)" fg:x="13655" fg:w="76"/><text x="36.4192%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="36.3273%" y="165" width="0.2196%" height="15" fill="rgb(251,202,51)" fg:x="13731" fg:w="83"/><text x="36.6203%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="36.5469%" y="149" width="0.2196%" height="15" fill="rgb(254,216,34)" fg:x="13814" fg:w="83"/><text x="36.8399%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.47%)</title><rect x="36.5469%" y="165" width="0.4736%" height="15" fill="rgb(251,32,27)" fg:x="13814" fg:w="179"/><text x="36.8399%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="37.0205%" y="133" width="0.2196%" height="15" fill="rgb(208,127,28)" fg:x="13993" fg:w="83"/><text x="37.3134%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.33%)</title><rect x="37.0205%" y="149" width="0.3334%" height="15" fill="rgb(224,137,22)" fg:x="13993" fg:w="126"/><text x="37.3134%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.56%)</title><rect x="37.0205%" y="165" width="0.5582%" height="15" fill="rgb(254,70,32)" fg:x="13993" fg:w="211"/><text x="37.3134%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="37.5787%" y="165" width="0.2408%" height="15" fill="rgb(229,75,37)" fg:x="14204" fg:w="91"/><text x="37.8717%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.21%)</title><rect x="37.8195%" y="149" width="0.2143%" height="15" fill="rgb(252,64,23)" fg:x="14295" fg:w="81"/><text x="38.1124%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.26%)</title><rect x="38.0338%" y="117" width="0.2619%" height="15" fill="rgb(232,162,48)" fg:x="14376" fg:w="99"/><text x="38.3267%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.34%)</title><rect x="38.0338%" y="133" width="0.3386%" height="15" fill="rgb(246,160,12)" fg:x="14376" fg:w="128"/><text x="38.3267%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="38.3724%" y="85" width="0.0291%" height="15" fill="rgb(247,166,0)" fg:x="14504" fg:w="11"/><text x="38.6654%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="38.4015%" y="69" width="0.0926%" height="15" fill="rgb(249,219,21)" fg:x="14515" fg:w="35"/><text x="38.6945%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="38.4015%" y="85" width="0.1693%" height="15" fill="rgb(205,209,3)" fg:x="14515" fg:w="64"/><text x="38.6945%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="38.3724%" y="101" width="0.3810%" height="15" fill="rgb(243,44,1)" fg:x="14504" fg:w="144"/><text x="38.6654%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.55%)</title><rect x="38.3724%" y="117" width="0.5529%" height="15" fill="rgb(206,159,16)" fg:x="14504" fg:w="209"/><text x="38.6654%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.61%)</title><rect x="38.3724%" y="133" width="0.6059%" height="15" fill="rgb(244,77,30)" fg:x="14504" fg:w="229"/><text x="38.6654%" y="143.50"></text></g><g><title>core::fmt::write (499 instructions, 1.32%)</title><rect x="38.0338%" y="149" width="1.3202%" height="15" fill="rgb(218,69,12)" fg:x="14376" fg:w="499"/><text x="38.3267%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (718 instructions, 1.90%)</title><rect x="37.8195%" y="165" width="1.8996%" height="15" fill="rgb(212,87,7)" fg:x="14295" fg:w="718"/><text x="38.1124%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="39.7190%" y="149" width="0.2408%" height="15" fill="rgb(245,114,25)" fg:x="15013" fg:w="91"/><text x="40.0120%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (159 instructions, 0.42%)</title><rect x="39.7190%" y="165" width="0.4207%" height="15" fill="rgb(210,61,42)" fg:x="15013" fg:w="159"/><text x="40.0120%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 instructions, 0.28%)</title><rect x="40.1397%" y="165" width="0.2804%" height="15" fill="rgb(211,52,33)" fg:x="15172" fg:w="106"/><text x="40.4327%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="40.4201%" y="165" width="0.0397%" height="15" fill="rgb(234,58,33)" fg:x="15278" fg:w="15"/><text x="40.7131%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 instructions, 0.28%)</title><rect x="40.4598%" y="165" width="0.2804%" height="15" fill="rgb(220,115,36)" fg:x="15293" fg:w="106"/><text x="40.7528%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="40.7403%" y="133" width="0.2408%" height="15" fill="rgb(243,153,54)" fg:x="15399" fg:w="91"/><text x="41.0332%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (132 instructions, 0.35%)</title><rect x="40.7403%" y="149" width="0.3492%" height="15" fill="rgb(251,47,18)" fg:x="15399" fg:w="132"/><text x="41.0332%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.39%)</title><rect x="41.0895%" y="133" width="0.3863%" height="15" fill="rgb(242,102,42)" fg:x="15531" fg:w="146"/><text x="41.3824%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.61%)</title><rect x="41.0895%" y="149" width="0.6085%" height="15" fill="rgb(234,31,38)" fg:x="15531" fg:w="230"/><text x="41.3824%" y="159.50"></text></g><g><title>memcmp (146 instructions, 0.39%)</title><rect x="41.6980%" y="133" width="0.3863%" height="15" fill="rgb(221,117,51)" fg:x="15761" fg:w="146"/><text x="41.9909%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (233 instructions, 0.62%)</title><rect x="41.6980%" y="149" width="0.6164%" height="15" fill="rgb(212,20,18)" fg:x="15761" fg:w="233"/><text x="41.9909%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (715 instructions, 1.89%)</title><rect x="40.7403%" y="165" width="1.8916%" height="15" fill="rgb(245,133,36)" fg:x="15399" fg:w="715"/><text x="41.0332%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="42.6319%" y="165" width="0.0397%" height="15" fill="rgb(212,6,19)" fg:x="16114" fg:w="15"/><text x="42.9249%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (102 instructions, 0.27%)</title><rect x="42.6716%" y="165" width="0.2699%" height="15" fill="rgb(218,1,36)" fg:x="16129" fg:w="102"/><text x="42.9645%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="42.9414%" y="165" width="0.0397%" height="15" fill="rgb(246,84,54)" fg:x="16231" fg:w="15"/><text x="43.2344%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.17%)</title><rect x="42.9811%" y="149" width="0.1667%" height="15" fill="rgb(242,110,6)" fg:x="16246" fg:w="63"/><text x="43.2741%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (129 instructions, 0.34%)</title><rect x="42.9811%" y="165" width="0.3413%" height="15" fill="rgb(214,47,5)" fg:x="16246" fg:w="129"/><text x="43.2741%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="43.3224%" y="133" width="0.2408%" height="15" fill="rgb(218,159,25)" fg:x="16375" fg:w="91"/><text x="43.6154%" y="143.50"></text></g><g><title>memcpy (99 instructions, 0.26%)</title><rect x="43.5632%" y="101" width="0.2619%" height="15" fill="rgb(215,211,28)" fg:x="16466" fg:w="99"/><text x="43.8561%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (128 instructions, 0.34%)</title><rect x="43.5632%" y="117" width="0.3386%" height="15" fill="rgb(238,59,32)" fg:x="16466" fg:w="128"/><text x="43.8561%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="43.9018%" y="69" width="0.0291%" height="15" fill="rgb(226,82,3)" fg:x="16594" fg:w="11"/><text x="44.1948%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="43.9309%" y="53" width="0.0926%" height="15" fill="rgb(240,164,32)" fg:x="16605" fg:w="35"/><text x="44.2239%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.17%)</title><rect x="43.9309%" y="69" width="0.1693%" height="15" fill="rgb(232,46,7)" fg:x="16605" fg:w="64"/><text x="44.2239%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.38%)</title><rect x="43.9018%" y="85" width="0.3810%" height="15" fill="rgb(229,129,53)" fg:x="16594" fg:w="144"/><text x="44.1948%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.55%)</title><rect x="43.9018%" y="101" width="0.5529%" height="15" fill="rgb(234,188,29)" fg:x="16594" fg:w="209"/><text x="44.1948%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (229 instructions, 0.61%)</title><rect x="43.9018%" y="117" width="0.6059%" height="15" fill="rgb(246,141,4)" fg:x="16594" fg:w="229"/><text x="44.1948%" y="127.50"></text></g><g><title>core::fmt::write (499 instructions, 1.32%)</title><rect x="43.5632%" y="133" width="1.3202%" height="15" fill="rgb(229,23,39)" fg:x="16466" fg:w="499"/><text x="43.8561%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (728 instructions, 1.93%)</title><rect x="43.3224%" y="149" width="1.9260%" height="15" fill="rgb(206,12,3)" fg:x="16375" fg:w="728"/><text x="43.6154%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="45.2484%" y="149" width="0.2408%" height="15" fill="rgb(252,226,20)" fg:x="17103" fg:w="91"/><text x="45.5414%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (945 instructions, 2.50%)</title><rect x="43.3224%" y="165" width="2.5001%" height="15" fill="rgb(216,123,35)" fg:x="16375" fg:w="945"/><text x="43.6154%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="45.8225%" y="133" width="0.2408%" height="15" fill="rgb(212,68,40)" fg:x="17320" fg:w="91"/><text x="46.1155%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.35%)</title><rect x="45.8225%" y="149" width="0.3545%" height="15" fill="rgb(254,125,32)" fg:x="17320" fg:w="134"/><text x="46.1155%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.58%)</title><rect x="45.8225%" y="165" width="0.5794%" height="15" fill="rgb(253,97,22)" fg:x="17320" fg:w="219"/><text x="46.1155%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="46.4019%" y="165" width="0.2408%" height="15" fill="rgb(241,101,14)" fg:x="17539" fg:w="91"/><text x="46.6949%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="46.6427%" y="165" width="0.2355%" height="15" fill="rgb(238,103,29)" fg:x="17630" fg:w="89"/><text x="46.9356%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="46.8781%" y="165" width="0.2408%" height="15" fill="rgb(233,195,47)" fg:x="17719" fg:w="91"/><text x="47.1711%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="47.1189%" y="165" width="0.2408%" height="15" fill="rgb(246,218,30)" fg:x="17810" fg:w="91"/><text x="47.4119%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="47.3596%" y="149" width="0.2355%" height="15" fill="rgb(219,145,47)" fg:x="17901" fg:w="89"/><text x="47.6526%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (134 instructions, 0.35%)</title><rect x="47.3596%" y="165" width="0.3545%" height="15" fill="rgb(243,12,26)" fg:x="17901" fg:w="134"/><text x="47.6526%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="47.7142%" y="149" width="0.0714%" height="15" fill="rgb(214,87,16)" fg:x="18035" fg:w="27"/><text x="48.0071%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.18%)</title><rect x="47.7856%" y="149" width="0.1799%" height="15" fill="rgb(208,99,42)" fg:x="18062" fg:w="68"/><text x="48.0786%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.51%)</title><rect x="47.7142%" y="165" width="0.5053%" height="15" fill="rgb(253,99,2)" fg:x="18035" fg:w="191"/><text x="48.0071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="48.2195%" y="165" width="0.2355%" height="15" fill="rgb(220,168,23)" fg:x="18226" fg:w="89"/><text x="48.5125%" y="175.50"></text></g><g><title>memcpy (392 instructions, 1.04%)</title><rect x="48.4549%" y="165" width="1.0371%" height="15" fill="rgb(242,38,24)" fg:x="18315" fg:w="392"/><text x="48.7479%" y="175.50"></text></g><g><title>memcpy (392 instructions, 1.04%)</title><rect x="49.4920%" y="165" width="1.0371%" height="15" fill="rgb(225,182,9)" fg:x="18707" fg:w="392"/><text x="49.7850%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.33%)</title><rect x="50.5291%" y="165" width="1.3334%" height="15" fill="rgb(243,178,37)" fg:x="19099" fg:w="504"/><text x="50.8221%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (20,562 instructions, 54.40%)</title><rect x="2.4578%" y="181" width="54.3997%" height="15" fill="rgb(232,139,19)" fg:x="929" fg:w="20562"/><text x="2.7508%" y="191.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (344 instructions, 0.91%)</title><rect x="56.8575%" y="181" width="0.9101%" height="15" fill="rgb(225,201,24)" fg:x="21491" fg:w="344"/><text x="57.1505%" y="191.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.06%)</title><rect x="57.7676%" y="181" width="0.0608%" height="15" fill="rgb(221,47,46)" fg:x="21835" fg:w="23"/><text x="58.0606%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.46%)</title><rect x="57.8285%" y="181" width="0.4577%" height="15" fill="rgb(249,23,13)" fg:x="21858" fg:w="173"/><text x="58.1214%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="58.2862%" y="165" width="0.2196%" height="15" fill="rgb(219,9,5)" fg:x="22031" fg:w="83"/><text x="58.5791%" y="175.50"></text></g><g><title>candid::types::internal::env_add (166 instructions, 0.44%)</title><rect x="58.2862%" y="181" width="0.4392%" height="15" fill="rgb(254,171,16)" fg:x="22031" fg:w="166"/><text x="58.5791%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="58.7253%" y="181" width="0.2196%" height="15" fill="rgb(230,171,20)" fg:x="22197" fg:w="83"/><text x="59.0183%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="58.9449%" y="181" width="0.2196%" height="15" fill="rgb(210,71,41)" fg:x="22280" fg:w="83"/><text x="59.2379%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="59.1645%" y="181" width="0.2196%" height="15" fill="rgb(206,173,20)" fg:x="22363" fg:w="83"/><text x="59.4575%" y="191.50"></text></g><g><title>candid::types::internal::find_type (99 instructions, 0.26%)</title><rect x="59.3841%" y="165" width="0.2619%" height="15" fill="rgb(233,88,34)" fg:x="22446" fg:w="99"/><text x="59.6771%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="59.6460%" y="165" width="0.2408%" height="15" fill="rgb(223,209,46)" fg:x="22545" fg:w="91"/><text x="59.9390%" y="175.50"></text></g><g><title>candid::types::internal::env_add (182 instructions, 0.48%)</title><rect x="59.8868%" y="165" width="0.4815%" height="15" fill="rgb(250,43,18)" fg:x="22636" fg:w="182"/><text x="60.1797%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="60.3683%" y="165" width="0.2408%" height="15" fill="rgb(208,13,10)" fg:x="22818" fg:w="91"/><text x="60.6612%" y="175.50"></text></g><g><title>memcmp (491 instructions, 1.30%)</title><rect x="60.6090%" y="149" width="1.2990%" height="15" fill="rgb(212,200,36)" fg:x="22909" fg:w="491"/><text x="60.9020%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="61.9080%" y="133" width="0.2355%" height="15" fill="rgb(225,90,30)" fg:x="23400" fg:w="89"/><text x="62.2010%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.35%)</title><rect x="61.9080%" y="149" width="0.3519%" height="15" fill="rgb(236,182,39)" fg:x="23400" fg:w="133"/><text x="62.2010%" y="159.50"></text></g><g><title>candid::types::internal::env_add (835 instructions, 2.21%)</title><rect x="60.6090%" y="165" width="2.2091%" height="15" fill="rgb(212,144,35)" fg:x="22909" fg:w="835"/><text x="60.9020%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.24%)</title><rect x="62.8181%" y="149" width="0.2408%" height="15" fill="rgb(228,63,44)" fg:x="23744" fg:w="91"/><text x="63.1111%" y="159.50"></text></g><g><title>candid::types::internal::env_id (202 instructions, 0.53%)</title><rect x="62.8181%" y="165" width="0.5344%" height="15" fill="rgb(228,109,6)" fg:x="23744" fg:w="202"/><text x="63.1111%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (1,629 instructions, 4.31%)</title><rect x="59.3841%" y="181" width="4.3098%" height="15" fill="rgb(238,117,24)" fg:x="22446" fg:w="1629"/><text x="59.6771%" y="191.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="63.6938%" y="181" width="0.2196%" height="15" fill="rgb(242,26,26)" fg:x="24075" fg:w="83"/><text x="63.9868%" y="191.50"></text></g><g><title>memcmp (491 instructions, 1.30%)</title><rect x="63.9134%" y="165" width="1.2990%" height="15" fill="rgb(221,92,48)" fg:x="24158" fg:w="491"/><text x="64.2064%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="65.2124%" y="149" width="0.2355%" height="15" fill="rgb(209,209,32)" fg:x="24649" fg:w="89"/><text x="65.5054%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.35%)</title><rect x="65.2124%" y="165" width="0.3519%" height="15" fill="rgb(221,70,22)" fg:x="24649" fg:w="133"/><text x="65.5054%" y="175.50"></text></g><g><title>candid::types::internal::env_add (796 instructions, 2.11%)</title><rect x="63.9134%" y="181" width="2.1059%" height="15" fill="rgb(248,145,5)" fg:x="24158" fg:w="796"/><text x="64.2064%" y="191.50">c..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.12%)</title><rect x="66.0194%" y="165" width="0.1164%" height="15" fill="rgb(226,116,26)" fg:x="24954" fg:w="44"/><text x="66.3123%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.12%)</title><rect x="66.1358%" y="165" width="0.1164%" height="15" fill="rgb(244,5,17)" fg:x="24998" fg:w="44"/><text x="66.4287%" y="175.50"></text></g><g><title>candid::types::internal::env_id (341 instructions, 0.90%)</title><rect x="66.0194%" y="181" width="0.9022%" height="15" fill="rgb(252,159,33)" fg:x="24954" fg:w="341"/><text x="66.3123%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.13%)</title><rect x="66.9215%" y="181" width="0.1296%" height="15" fill="rgb(206,71,0)" fg:x="25295" fg:w="49"/><text x="67.2145%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.22%)</title><rect x="67.0512%" y="165" width="0.2196%" height="15" fill="rgb(233,118,54)" fg:x="25344" fg:w="83"/><text x="67.3441%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="67.3872%" y="149" width="0.0608%" height="15" fill="rgb(234,83,48)" fg:x="25471" fg:w="23"/><text x="67.6801%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.37%)</title><rect x="67.3872%" y="165" width="0.3651%" height="15" fill="rgb(228,3,54)" fg:x="25471" fg:w="138"/><text x="67.6801%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (309 instructions, 0.82%)</title><rect x="67.0512%" y="181" width="0.8175%" height="15" fill="rgb(226,155,13)" fg:x="25344" fg:w="309"/><text x="67.3441%" y="191.50"></text></g><g><title>memcmp (146 instructions, 0.39%)</title><rect x="67.8687%" y="117" width="0.3863%" height="15" fill="rgb(241,28,37)" fg:x="25653" fg:w="146"/><text x="68.1616%" y="127.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (230 instructions, 0.61%)</title><rect x="67.8687%" y="133" width="0.6085%" height="15" fill="rgb(233,93,10)" fg:x="25653" fg:w="230"/><text x="68.1616%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.13%)</title><rect x="68.4772%" y="133" width="0.1296%" height="15" fill="rgb(225,113,19)" fg:x="25883" fg:w="49"/><text x="68.7701%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (348 instructions, 0.92%)</title><rect x="67.8687%" y="149" width="0.9207%" height="15" fill="rgb(241,2,18)" fg:x="25653" fg:w="348"/><text x="68.1616%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="68.7894%" y="149" width="0.0344%" height="15" fill="rgb(228,207,21)" fg:x="26001" fg:w="13"/><text x="69.0823%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (446 instructions, 1.18%)</title><rect x="67.8687%" y="165" width="1.1800%" height="15" fill="rgb(213,211,35)" fg:x="25653" fg:w="446"/><text x="68.1616%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="69.0486%" y="165" width="0.0873%" height="15" fill="rgb(209,83,10)" fg:x="26099" fg:w="33"/><text x="69.3416%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.21%)</title><rect x="69.1359%" y="149" width="0.2143%" height="15" fill="rgb(209,164,1)" fg:x="26132" fg:w="81"/><text x="69.4289%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.30%)</title><rect x="69.6121%" y="149" width="0.3016%" height="15" fill="rgb(213,184,43)" fg:x="26312" fg:w="114"/><text x="69.9051%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (393 instructions, 1.04%)</title><rect x="69.1359%" y="165" width="1.0397%" height="15" fill="rgb(231,61,34)" fg:x="26132" fg:w="393"/><text x="69.4289%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="70.1757%" y="165" width="0.0873%" height="15" fill="rgb(235,75,3)" fg:x="26525" fg:w="33"/><text x="70.4686%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="70.2630%" y="165" width="0.0344%" height="15" fill="rgb(220,106,47)" fg:x="26558" fg:w="13"/><text x="70.5559%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="70.2974%" y="165" width="0.0344%" height="15" fill="rgb(210,196,33)" fg:x="26571" fg:w="13"/><text x="70.5903%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="70.3318%" y="165" width="0.0873%" height="15" fill="rgb(229,154,42)" fg:x="26584" fg:w="33"/><text x="70.6247%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.21%)</title><rect x="70.4191%" y="165" width="0.2143%" height="15" fill="rgb(228,114,26)" fg:x="26617" fg:w="81"/><text x="70.7120%" y="175.50"></text></g><g><title>memcpy (99 instructions, 0.26%)</title><rect x="70.6334%" y="165" width="0.2619%" height="15" fill="rgb(208,144,1)" fg:x="26698" fg:w="99"/><text x="70.9263%" y="175.50"></text></g><g><title>memcmp (123 instructions, 0.33%)</title><rect x="70.8953%" y="165" width="0.3254%" height="15" fill="rgb(239,112,37)" fg:x="26797" fg:w="123"/><text x="71.1883%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="71.2207%" y="165" width="0.2355%" height="15" fill="rgb(210,96,50)" fg:x="26920" fg:w="89"/><text x="71.5137%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="71.4562%" y="149" width="0.0873%" height="15" fill="rgb(222,178,2)" fg:x="27009" fg:w="33"/><text x="71.7491%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.09%)</title><rect x="71.5435%" y="133" width="0.0926%" height="15" fill="rgb(226,74,18)" fg:x="27042" fg:w="35"/><text x="71.8364%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.09%)</title><rect x="71.6361%" y="133" width="0.0900%" height="15" fill="rgb(225,67,54)" fg:x="27077" fg:w="34"/><text x="71.9290%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.09%)</title><rect x="71.7260%" y="133" width="0.0900%" height="15" fill="rgb(251,92,32)" fg:x="27111" fg:w="34"/><text x="72.0190%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.22%)</title><rect x="71.8160%" y="117" width="0.2169%" height="15" fill="rgb(228,149,22)" fg:x="27145" fg:w="82"/><text x="72.1089%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.19%)</title><rect x="72.0329%" y="117" width="0.1852%" height="15" fill="rgb(243,54,13)" fg:x="27227" fg:w="70"/><text x="72.3259%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.20%)</title><rect x="72.2181%" y="117" width="0.2011%" height="15" fill="rgb(243,180,28)" fg:x="27297" fg:w="76"/><text x="72.5111%" y="127.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.77%)</title><rect x="71.8160%" y="133" width="0.7672%" height="15" fill="rgb(208,167,24)" fg:x="27145" fg:w="290"/><text x="72.1089%" y="143.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="72.5832%" y="133" width="0.0873%" height="15" fill="rgb(245,73,45)" fg:x="27435" fg:w="33"/><text x="72.8762%" y="143.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.17%)</title><rect x="72.6705%" y="133" width="0.1667%" height="15" fill="rgb(237,203,48)" fg:x="27468" fg:w="63"/><text x="72.9635%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="72.8372%" y="133" width="0.2196%" height="15" fill="rgb(211,197,16)" fg:x="27531" fg:w="83"/><text x="73.1302%" y="143.50"></text></g><g><title>memcpy (115 instructions, 0.30%)</title><rect x="73.0568%" y="133" width="0.3042%" height="15" fill="rgb(243,99,51)" fg:x="27614" fg:w="115"/><text x="73.3497%" y="143.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.43%)</title><rect x="73.3610%" y="133" width="0.4286%" height="15" fill="rgb(215,123,29)" fg:x="27729" fg:w="162"/><text x="73.6540%" y="143.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,053 instructions, 2.79%)</title><rect x="71.5435%" y="149" width="2.7859%" height="15" fill="rgb(239,186,37)" fg:x="27042" fg:w="1053"/><text x="71.8364%" y="159.50">se..</text></g><g><title>serde::de::MapAccess::next_value (1,129 instructions, 2.99%)</title><rect x="71.4562%" y="165" width="2.9869%" height="15" fill="rgb(252,136,39)" fg:x="27009" fg:w="1129"/><text x="71.7491%" y="175.50">se..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.09%)</title><rect x="74.4431%" y="165" width="0.0873%" height="15" fill="rgb(223,213,32)" fg:x="28138" fg:w="33"/><text x="74.7361%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="74.5304%" y="149" width="0.0185%" height="15" fill="rgb(233,115,5)" fg:x="28171" fg:w="7"/><text x="74.8234%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="74.5489%" y="149" width="0.2355%" height="15" fill="rgb(207,226,44)" fg:x="28178" fg:w="89"/><text x="74.8419%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="74.7844%" y="149" width="0.0185%" height="15" fill="rgb(208,126,0)" fg:x="28267" fg:w="7"/><text x="75.0773%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.24%)</title><rect x="74.8029%" y="149" width="0.2355%" height="15" fill="rgb(244,66,21)" fg:x="28274" fg:w="89"/><text x="75.0959%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (241 instructions, 0.64%)</title><rect x="74.5304%" y="165" width="0.6376%" height="15" fill="rgb(222,97,12)" fg:x="28171" fg:w="241"/><text x="74.8234%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (3,531 instructions, 9.34%)</title><rect x="67.8687%" y="181" width="9.3418%" height="15" fill="rgb(219,213,19)" fg:x="25653" fg:w="3531"/><text x="68.1616%" y="191.50">publisher::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="77.4300%" y="149" width="0.0608%" height="15" fill="rgb(252,169,30)" fg:x="29267" fg:w="23"/><text x="77.7230%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (223 instructions, 0.59%)</title><rect x="77.2104%" y="165" width="0.5900%" height="15" fill="rgb(206,32,51)" fg:x="29184" fg:w="223"/><text x="77.5034%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (285 instructions, 0.75%)</title><rect x="77.2104%" y="181" width="0.7540%" height="15" fill="rgb(250,172,42)" fg:x="29184" fg:w="285"/><text x="77.5034%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.9644%" y="181" width="0.0344%" height="15" fill="rgb(209,34,43)" fg:x="29469" fg:w="13"/><text x="78.2574%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.9988%" y="181" width="0.0344%" height="15" fill="rgb(223,11,35)" fg:x="29482" fg:w="13"/><text x="78.2918%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.11%)</title><rect x="78.0332%" y="181" width="0.1138%" height="15" fill="rgb(251,219,26)" fg:x="29495" fg:w="43"/><text x="78.3262%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="78.1470%" y="133" width="0.0714%" height="15" fill="rgb(231,119,3)" fg:x="29538" fg:w="27"/><text x="78.4400%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.36%)</title><rect x="78.1470%" y="149" width="0.3598%" height="15" fill="rgb(216,97,11)" fg:x="29538" fg:w="136"/><text x="78.4400%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.22%)</title><rect x="78.5068%" y="133" width="0.2196%" height="15" fill="rgb(223,59,9)" fg:x="29674" fg:w="83"/><text x="78.7998%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="78.7264%" y="133" width="0.0344%" height="15" fill="rgb(233,93,31)" fg:x="29757" fg:w="13"/><text x="79.0194%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="78.7608%" y="117" width="0.0608%" height="15" fill="rgb(239,81,33)" fg:x="29770" fg:w="23"/><text x="79.0537%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="79.1259%" y="117" width="0.0608%" height="15" fill="rgb(213,120,34)" fg:x="29908" fg:w="23"/><text x="79.4188%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (278 instructions, 0.74%)</title><rect x="78.7608%" y="133" width="0.7355%" height="15" fill="rgb(243,49,53)" fg:x="29770" fg:w="278"/><text x="79.0537%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (504 instructions, 1.33%)</title><rect x="78.5068%" y="149" width="1.3334%" height="15" fill="rgb(247,216,33)" fg:x="29674" fg:w="504"/><text x="78.7998%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="79.8402%" y="133" width="0.0714%" height="15" fill="rgb(226,26,14)" fg:x="30178" fg:w="27"/><text x="80.1332%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="79.9116%" y="133" width="0.0714%" height="15" fill="rgb(215,49,53)" fg:x="30205" fg:w="27"/><text x="80.2046%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.18%)</title><rect x="79.9831%" y="133" width="0.1799%" height="15" fill="rgb(245,162,40)" fg:x="30232" fg:w="68"/><text x="80.2760%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.65%)</title><rect x="79.8402%" y="149" width="0.6455%" height="15" fill="rgb(229,68,17)" fg:x="30178" fg:w="244"/><text x="80.1332%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (986 instructions, 2.61%)</title><rect x="78.1470%" y="165" width="2.6086%" height="15" fill="rgb(213,182,10)" fg:x="29538" fg:w="986"/><text x="78.4400%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="80.7556%" y="149" width="0.0714%" height="15" fill="rgb(245,125,30)" fg:x="30524" fg:w="27"/><text x="81.0486%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.38%)</title><rect x="80.7556%" y="165" width="0.3757%" height="15" fill="rgb(232,202,2)" fg:x="30524" fg:w="142"/><text x="81.0486%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="81.1313%" y="133" width="0.0714%" height="15" fill="rgb(237,140,51)" fg:x="30666" fg:w="27"/><text x="81.4242%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="81.2027%" y="133" width="0.0714%" height="15" fill="rgb(236,157,25)" fg:x="30693" fg:w="27"/><text x="81.4957%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.52%)</title><rect x="81.1313%" y="149" width="0.5212%" height="15" fill="rgb(219,209,0)" fg:x="30666" fg:w="197"/><text x="81.4242%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (241 instructions, 0.64%)</title><rect x="81.1313%" y="165" width="0.6376%" height="15" fill="rgb(240,116,54)" fg:x="30666" fg:w="241"/><text x="81.4242%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.7689%" y="165" width="0.0344%" height="15" fill="rgb(216,10,36)" fg:x="30907" fg:w="13"/><text x="82.0618%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,442 instructions, 3.82%)</title><rect x="78.1470%" y="181" width="3.8150%" height="15" fill="rgb(222,72,44)" fg:x="29538" fg:w="1442"/><text x="78.4400%" y="191.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="81.9620%" y="165" width="0.0714%" height="15" fill="rgb(232,159,9)" fg:x="30980" fg:w="27"/><text x="82.2550%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.38%)</title><rect x="81.9620%" y="181" width="0.3757%" height="15" fill="rgb(210,39,32)" fg:x="30980" fg:w="142"/><text x="82.2550%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data (32,018 instructions, 84.71%)</title><rect x="2.2170%" y="197" width="84.7082%" height="15" fill="rgb(216,194,45)" fg:x="838" fg:w="32018"/><text x="2.5100%" y="207.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.30%)</title><rect x="86.9252%" y="181" width="0.3016%" height="15" fill="rgb(218,18,35)" fg:x="32856" fg:w="114"/><text x="87.2182%" y="191.50"></text></g><g><title>memset (130 instructions, 0.34%)</title><rect x="87.2268%" y="181" width="0.3439%" height="15" fill="rgb(207,83,51)" fg:x="32970" fg:w="130"/><text x="87.5198%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.47%)</title><rect x="87.5708%" y="181" width="0.4736%" height="15" fill="rgb(225,63,43)" fg:x="33100" fg:w="179"/><text x="87.8637%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.16%)</title><rect x="88.0443%" y="181" width="0.1587%" height="15" fill="rgb(207,57,36)" fg:x="33279" fg:w="60"/><text x="88.3373%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (22 instructions, 0.06%)</title><rect x="88.2031%" y="181" width="0.0582%" height="15" fill="rgb(216,99,33)" fg:x="33339" fg:w="22"/><text x="88.4960%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.36%)</title><rect x="88.2613%" y="181" width="0.3598%" height="15" fill="rgb(225,42,16)" fg:x="33361" fg:w="136"/><text x="88.5543%" y="191.50"></text></g><g><title>publisher::subscribe (1,949 instructions, 5.16%)</title><rect x="86.9252%" y="197" width="5.1564%" height="15" fill="rgb(220,201,45)" fg:x="32856" fg:w="1949"/><text x="87.2182%" y="207.50">publi..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="92.0816%" y="165" width="0.0344%" height="15" fill="rgb(225,33,4)" fg:x="34805" fg:w="13"/><text x="92.3746%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="92.1160%" y="165" width="0.0344%" height="15" fill="rgb(224,33,50)" fg:x="34818" fg:w="13"/><text x="92.4090%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="92.1504%" y="149" width="0.0714%" height="15" fill="rgb(246,198,51)" fg:x="34831" fg:w="27"/><text x="92.4433%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.26%)</title><rect x="92.2218%" y="149" width="0.2619%" height="15" fill="rgb(205,22,4)" fg:x="34858" fg:w="99"/><text x="92.5148%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (222 instructions, 0.59%)</title><rect x="92.1504%" y="165" width="0.5873%" height="15" fill="rgb(206,3,8)" fg:x="34831" fg:w="222"/><text x="92.4433%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (420 instructions, 1.11%)</title><rect x="92.0816%" y="181" width="1.1112%" height="15" fill="rgb(251,23,15)" fg:x="34805" fg:w="420"/><text x="92.3746%" y="191.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.37%)</title><rect x="93.1928%" y="181" width="1.3704%" height="15" fill="rgb(252,88,28)" fg:x="35225" fg:w="518"/><text x="93.4857%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.22%)</title><rect x="94.5632%" y="133" width="0.2196%" height="15" fill="rgb(212,127,14)" fg:x="35743" fg:w="83"/><text x="94.8562%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.33%)</title><rect x="94.5632%" y="149" width="0.3334%" height="15" fill="rgb(247,145,37)" fg:x="35743" fg:w="126"/><text x="94.8562%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.55%)</title><rect x="94.5632%" y="165" width="0.5503%" height="15" fill="rgb(209,117,53)" fg:x="35743" fg:w="208"/><text x="94.8562%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="95.1135%" y="165" width="0.0397%" height="15" fill="rgb(212,90,42)" fg:x="35951" fg:w="15"/><text x="95.4065%" y="175.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="95.1532%" y="165" width="0.0397%" height="15" fill="rgb(218,164,37)" fg:x="35966" fg:w="15"/><text x="95.4462%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (424 instructions, 1.12%)</title><rect x="94.5632%" y="181" width="1.1218%" height="15" fill="rgb(246,65,34)" fg:x="35743" fg:w="424"/><text x="94.8562%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.37%)</title><rect x="95.6850%" y="181" width="1.3652%" height="15" fill="rgb(231,100,33)" fg:x="36167" fg:w="516"/><text x="95.9779%" y="191.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="97.0501%" y="181" width="0.0185%" height="15" fill="rgb(228,126,14)" fg:x="36683" fg:w="7"/><text x="97.3431%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="97.0686%" y="165" width="0.0185%" height="15" fill="rgb(215,173,21)" fg:x="36690" fg:w="7"/><text x="97.3616%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.16%)</title><rect x="97.0871%" y="165" width="0.1587%" height="15" fill="rgb(210,6,40)" fg:x="36697" fg:w="60"/><text x="97.3801%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::ser::IDLBuilder&gt; (127 instructions, 0.34%)</title><rect x="97.0686%" y="181" width="0.3360%" height="15" fill="rgb(212,48,18)" fg:x="36690" fg:w="127"/><text x="97.3616%" y="191.50"></text></g><g><title>ic_cdk::api::call::reply (2,630 instructions, 6.96%)</title><rect x="92.0816%" y="197" width="6.9580%" height="15" fill="rgb(230,214,11)" fg:x="34805" fg:w="2630"/><text x="92.3746%" y="207.50">ic_cdk::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="99.2777%" y="181" width="0.0714%" height="15" fill="rgb(254,105,39)" fg:x="37525" fg:w="27"/><text x="99.5707%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (204 instructions, 0.54%)</title><rect x="99.0423%" y="197" width="0.5397%" height="15" fill="rgb(245,158,5)" fg:x="37436" fg:w="204"/><text x="99.3352%" y="207.50"></text></g><g><title>all (37,798 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(249,208,11)" fg:x="0" fg:w="37798"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (37,798 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(210,39,28)" fg:x="0" fg:w="37798"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>