<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="34412"><g><title>ic_cdk::setup (48 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1395%" height="15" fill="rgb(245,139,43)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 1.07%)</title><rect x="0.1395%" y="197" width="1.0723%" height="15" fill="rgb(252,170,7)" fg:x="48" fg:w="369"/><text x="0.4325%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.2118%" y="197" width="0.2383%" height="15" fill="rgb(231,118,14)" fg:x="417" fg:w="82"/><text x="1.5048%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.4501%" y="181" width="0.2383%" height="15" fill="rgb(238,83,0)" fg:x="499" fg:w="82"/><text x="1.7430%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.15%)</title><rect x="1.6884%" y="149" width="0.1453%" height="15" fill="rgb(221,39,39)" fg:x="581" fg:w="50"/><text x="1.9813%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.39%)</title><rect x="1.6884%" y="165" width="0.3865%" height="15" fill="rgb(222,119,46)" fg:x="581" fg:w="133"/><text x="1.9813%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="2.0749%" y="149" width="0.0116%" height="15" fill="rgb(222,165,49)" fg:x="714" fg:w="4"/><text x="2.3678%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 1.17%)</title><rect x="2.0749%" y="165" width="1.1682%" height="15" fill="rgb(219,113,52)" fg:x="714" fg:w="402"/><text x="2.3678%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.24%)</title><rect x="3.2431%" y="165" width="0.2412%" height="15" fill="rgb(214,7,15)" fg:x="1116" fg:w="83"/><text x="3.5360%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.4842%" y="165" width="0.1569%" height="15" fill="rgb(235,32,4)" fg:x="1199" fg:w="54"/><text x="3.7772%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.6412%" y="165" width="0.1569%" height="15" fill="rgb(238,90,54)" fg:x="1253" fg:w="54"/><text x="3.9341%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.7981%" y="165" width="0.1569%" height="15" fill="rgb(213,208,19)" fg:x="1307" fg:w="54"/><text x="4.0911%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.9550%" y="165" width="0.1569%" height="15" fill="rgb(233,156,4)" fg:x="1361" fg:w="54"/><text x="4.2480%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="4.1119%" y="165" width="0.2063%" height="15" fill="rgb(207,194,5)" fg:x="1415" fg:w="71"/><text x="4.4049%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="4.3183%" y="165" width="0.1889%" height="15" fill="rgb(206,111,30)" fg:x="1486" fg:w="65"/><text x="4.6112%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="4.5071%" y="149" width="0.0116%" height="15" fill="rgb(243,70,54)" fg:x="1551" fg:w="4"/><text x="4.8001%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 1.17%)</title><rect x="4.5071%" y="165" width="1.1682%" height="15" fill="rgb(242,28,8)" fg:x="1551" fg:w="402"/><text x="4.8001%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="5.6753%" y="165" width="0.0465%" height="15" fill="rgb(219,106,18)" fg:x="1953" fg:w="16"/><text x="5.9683%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="5.7218%" y="149" width="0.2383%" height="15" fill="rgb(244,222,10)" fg:x="1969" fg:w="82"/><text x="6.0148%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="5.9601%" y="117" width="0.1744%" height="15" fill="rgb(236,179,52)" fg:x="2051" fg:w="60"/><text x="6.2531%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="5.9601%" y="133" width="0.2470%" height="15" fill="rgb(213,23,39)" fg:x="2051" fg:w="85"/><text x="6.2531%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="6.2071%" y="85" width="0.0262%" height="15" fill="rgb(238,48,10)" fg:x="2136" fg:w="9"/><text x="6.5001%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="6.2333%" y="69" width="0.0872%" height="15" fill="rgb(251,196,23)" fg:x="2145" fg:w="30"/><text x="6.5263%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="6.2333%" y="85" width="0.1598%" height="15" fill="rgb(250,152,24)" fg:x="2145" fg:w="55"/><text x="6.5263%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="6.2071%" y="101" width="0.3313%" height="15" fill="rgb(209,150,17)" fg:x="2136" fg:w="114"/><text x="6.5001%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.49%)</title><rect x="6.2071%" y="117" width="0.4853%" height="15" fill="rgb(234,202,34)" fg:x="2136" fg:w="167"/><text x="6.5001%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.50%)</title><rect x="6.2071%" y="133" width="0.4998%" height="15" fill="rgb(253,148,53)" fg:x="2136" fg:w="172"/><text x="6.5001%" y="143.50"></text></g><g><title>core::fmt::write (368 instructions, 1.07%)</title><rect x="5.9601%" y="149" width="1.0694%" height="15" fill="rgb(218,129,16)" fg:x="2051" fg:w="368"/><text x="6.2531%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.66%)</title><rect x="5.7218%" y="165" width="1.6593%" height="15" fill="rgb(216,85,19)" fg:x="1969" fg:w="571"/><text x="6.0148%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.24%)</title><rect x="7.3811%" y="165" width="0.2412%" height="15" fill="rgb(235,228,7)" fg:x="2540" fg:w="83"/><text x="7.6741%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="7.6223%" y="165" width="0.1627%" height="15" fill="rgb(245,175,0)" fg:x="2623" fg:w="56"/><text x="7.9153%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="7.7851%" y="149" width="0.1569%" height="15" fill="rgb(208,168,36)" fg:x="2679" fg:w="54"/><text x="8.0780%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="7.9420%" y="149" width="0.2383%" height="15" fill="rgb(246,171,24)" fg:x="2733" fg:w="82"/><text x="8.2350%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.1803%" y="133" width="0.2383%" height="15" fill="rgb(215,142,24)" fg:x="2815" fg:w="82"/><text x="8.4733%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="8.4186%" y="101" width="0.3487%" height="15" fill="rgb(250,187,7)" fg:x="2897" fg:w="120"/><text x="8.7115%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="8.4186%" y="117" width="0.4214%" height="15" fill="rgb(228,66,33)" fg:x="2897" fg:w="145"/><text x="8.7115%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.23%)</title><rect x="8.8399%" y="37" width="0.2325%" height="15" fill="rgb(234,215,21)" fg:x="3042" fg:w="80"/><text x="9.1329%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.33%)</title><rect x="8.8399%" y="53" width="0.3342%" height="15" fill="rgb(222,191,20)" fg:x="3042" fg:w="115"/><text x="9.1329%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.55%)</title><rect x="8.8399%" y="69" width="0.5521%" height="15" fill="rgb(245,79,54)" fg:x="3042" fg:w="190"/><text x="9.1329%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.43%)</title><rect x="9.3921%" y="69" width="0.4301%" height="15" fill="rgb(240,10,37)" fg:x="3232" fg:w="148"/><text x="9.6850%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (370 instructions, 1.08%)</title><rect x="8.8399%" y="85" width="1.0752%" height="15" fill="rgb(214,192,32)" fg:x="3042" fg:w="370"/><text x="9.1329%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="9.9151%" y="53" width="0.0262%" height="15" fill="rgb(209,36,54)" fg:x="3412" fg:w="9"/><text x="10.2081%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="9.9413%" y="37" width="0.0872%" height="15" fill="rgb(220,10,11)" fg:x="3421" fg:w="30"/><text x="10.2343%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="9.9413%" y="53" width="0.1598%" height="15" fill="rgb(221,106,17)" fg:x="3421" fg:w="55"/><text x="10.2343%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="9.9151%" y="69" width="0.3313%" height="15" fill="rgb(251,142,44)" fg:x="3412" fg:w="114"/><text x="10.2081%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.50%)</title><rect x="9.9151%" y="85" width="0.5027%" height="15" fill="rgb(238,13,15)" fg:x="3412" fg:w="173"/><text x="10.2081%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="10.4179%" y="69" width="0.1308%" height="15" fill="rgb(208,107,27)" fg:x="3585" fg:w="45"/><text x="10.7108%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="10.4179%" y="85" width="0.2034%" height="15" fill="rgb(205,136,37)" fg:x="3585" fg:w="70"/><text x="10.7108%" y="95.50"></text></g><g><title>core::fmt::write (741 instructions, 2.15%)</title><rect x="8.8399%" y="101" width="2.1533%" height="15" fill="rgb(250,205,27)" fg:x="3042" fg:w="741"/><text x="9.1329%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (798 instructions, 2.32%)</title><rect x="8.8399%" y="117" width="2.3190%" height="15" fill="rgb(210,80,43)" fg:x="3042" fg:w="798"/><text x="9.1329%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,054 instructions, 3.06%)</title><rect x="8.4186%" y="133" width="3.0629%" height="15" fill="rgb(247,160,36)" fg:x="2897" fg:w="1054"/><text x="8.7115%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,257 instructions, 3.65%)</title><rect x="8.1803%" y="149" width="3.6528%" height="15" fill="rgb(234,13,49)" fg:x="2815" fg:w="1257"/><text x="8.4733%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="11.8331%" y="149" width="0.2092%" height="15" fill="rgb(234,122,0)" fg:x="4072" fg:w="72"/><text x="12.1261%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="12.0423%" y="149" width="0.1627%" height="15" fill="rgb(207,146,38)" fg:x="4144" fg:w="56"/><text x="12.3353%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="12.2050%" y="149" width="0.1889%" height="15" fill="rgb(207,177,25)" fg:x="4200" fg:w="65"/><text x="12.4980%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="12.3939%" y="117" width="0.2383%" height="15" fill="rgb(211,178,42)" fg:x="4265" fg:w="82"/><text x="12.6869%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.34%)</title><rect x="12.3939%" y="133" width="0.3371%" height="15" fill="rgb(230,69,54)" fg:x="4265" fg:w="116"/><text x="12.6869%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.54%)</title><rect x="12.3939%" y="149" width="0.5405%" height="15" fill="rgb(214,135,41)" fg:x="4265" fg:w="186"/><text x="12.6869%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="12.9344%" y="149" width="0.1569%" height="15" fill="rgb(237,67,25)" fg:x="4451" fg:w="54"/><text x="13.2274%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.0914%" y="149" width="0.2383%" height="15" fill="rgb(222,189,50)" fg:x="4505" fg:w="82"/><text x="13.3843%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.3297%" y="133" width="0.2383%" height="15" fill="rgb(245,148,34)" fg:x="4587" fg:w="82"/><text x="13.6226%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="13.5679%" y="101" width="0.3487%" height="15" fill="rgb(222,29,6)" fg:x="4669" fg:w="120"/><text x="13.8609%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="13.5679%" y="117" width="0.4214%" height="15" fill="rgb(221,189,43)" fg:x="4669" fg:w="145"/><text x="13.8609%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.23%)</title><rect x="13.9893%" y="37" width="0.2325%" height="15" fill="rgb(207,36,27)" fg:x="4814" fg:w="80"/><text x="14.2823%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.33%)</title><rect x="13.9893%" y="53" width="0.3342%" height="15" fill="rgb(217,90,24)" fg:x="4814" fg:w="115"/><text x="14.2823%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.55%)</title><rect x="13.9893%" y="69" width="0.5521%" height="15" fill="rgb(224,66,35)" fg:x="4814" fg:w="190"/><text x="14.2823%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.43%)</title><rect x="14.5414%" y="69" width="0.4301%" height="15" fill="rgb(221,13,50)" fg:x="5004" fg:w="148"/><text x="14.8344%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (370 instructions, 1.08%)</title><rect x="13.9893%" y="85" width="1.0752%" height="15" fill="rgb(236,68,49)" fg:x="4814" fg:w="370"/><text x="14.2823%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="15.0645%" y="53" width="0.0262%" height="15" fill="rgb(229,146,28)" fg:x="5184" fg:w="9"/><text x="15.3575%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="15.0907%" y="37" width="0.0872%" height="15" fill="rgb(225,31,38)" fg:x="5193" fg:w="30"/><text x="15.3836%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="15.0907%" y="53" width="0.1598%" height="15" fill="rgb(250,208,3)" fg:x="5193" fg:w="55"/><text x="15.3836%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="15.0645%" y="69" width="0.3313%" height="15" fill="rgb(246,54,23)" fg:x="5184" fg:w="114"/><text x="15.3575%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (173 instructions, 0.50%)</title><rect x="15.0645%" y="85" width="0.5027%" height="15" fill="rgb(243,76,11)" fg:x="5184" fg:w="173"/><text x="15.3575%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="15.5672%" y="69" width="0.1308%" height="15" fill="rgb(245,21,50)" fg:x="5357" fg:w="45"/><text x="15.8602%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="15.5672%" y="85" width="0.2034%" height="15" fill="rgb(228,9,43)" fg:x="5357" fg:w="70"/><text x="15.8602%" y="95.50"></text></g><g><title>core::fmt::write (741 instructions, 2.15%)</title><rect x="13.9893%" y="101" width="2.1533%" height="15" fill="rgb(208,100,47)" fg:x="4814" fg:w="741"/><text x="14.2823%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (798 instructions, 2.32%)</title><rect x="13.9893%" y="117" width="2.3190%" height="15" fill="rgb(232,26,8)" fg:x="4814" fg:w="798"/><text x="14.2823%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,054 instructions, 3.06%)</title><rect x="13.5679%" y="133" width="3.0629%" height="15" fill="rgb(216,166,38)" fg:x="4669" fg:w="1054"/><text x="13.8609%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,257 instructions, 3.65%)</title><rect x="13.3297%" y="149" width="3.6528%" height="15" fill="rgb(251,202,51)" fg:x="4587" fg:w="1257"/><text x="13.6226%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="16.9824%" y="149" width="0.2092%" height="15" fill="rgb(254,216,34)" fg:x="5844" fg:w="72"/><text x="17.2754%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="17.1917%" y="149" width="0.1627%" height="15" fill="rgb(251,32,27)" fg:x="5916" fg:w="56"/><text x="17.4846%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="17.3544%" y="149" width="0.1889%" height="15" fill="rgb(208,127,28)" fg:x="5972" fg:w="65"/><text x="17.6474%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="17.5433%" y="149" width="0.1569%" height="15" fill="rgb(224,137,22)" fg:x="6037" fg:w="54"/><text x="17.8363%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="17.7002%" y="133" width="0.2063%" height="15" fill="rgb(254,70,32)" fg:x="6091" fg:w="71"/><text x="17.9932%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="17.9065%" y="133" width="0.1889%" height="15" fill="rgb(229,75,37)" fg:x="6162" fg:w="65"/><text x="18.1995%" y="143.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="18.0954%" y="117" width="0.0116%" height="15" fill="rgb(252,64,23)" fg:x="6227" fg:w="4"/><text x="18.3884%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 1.17%)</title><rect x="18.0954%" y="133" width="1.1682%" height="15" fill="rgb(232,162,48)" fg:x="6227" fg:w="402"/><text x="18.3884%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="19.2636%" y="133" width="0.0465%" height="15" fill="rgb(246,160,12)" fg:x="6629" fg:w="16"/><text x="19.5566%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="19.3101%" y="117" width="0.2383%" height="15" fill="rgb(247,166,0)" fg:x="6645" fg:w="82"/><text x="19.6031%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="19.5484%" y="85" width="0.1744%" height="15" fill="rgb(249,219,21)" fg:x="6727" fg:w="60"/><text x="19.8414%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="19.5484%" y="101" width="0.2470%" height="15" fill="rgb(205,209,3)" fg:x="6727" fg:w="85"/><text x="19.8414%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="19.7954%" y="53" width="0.0262%" height="15" fill="rgb(243,44,1)" fg:x="6812" fg:w="9"/><text x="20.0884%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="19.8216%" y="37" width="0.0872%" height="15" fill="rgb(206,159,16)" fg:x="6821" fg:w="30"/><text x="20.1145%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="19.8216%" y="53" width="0.1598%" height="15" fill="rgb(244,77,30)" fg:x="6821" fg:w="55"/><text x="20.1145%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="19.7954%" y="69" width="0.3313%" height="15" fill="rgb(218,69,12)" fg:x="6812" fg:w="114"/><text x="20.0884%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.49%)</title><rect x="19.7954%" y="85" width="0.4853%" height="15" fill="rgb(212,87,7)" fg:x="6812" fg:w="167"/><text x="20.0884%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.50%)</title><rect x="19.7954%" y="101" width="0.4998%" height="15" fill="rgb(245,114,25)" fg:x="6812" fg:w="172"/><text x="20.0884%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 1.07%)</title><rect x="19.5484%" y="117" width="1.0694%" height="15" fill="rgb(210,61,42)" fg:x="6727" fg:w="368"/><text x="19.8414%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.66%)</title><rect x="19.3101%" y="133" width="1.6593%" height="15" fill="rgb(211,52,33)" fg:x="6645" fg:w="571"/><text x="19.6031%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.24%)</title><rect x="20.9694%" y="133" width="0.2412%" height="15" fill="rgb(234,58,33)" fg:x="7216" fg:w="83"/><text x="21.2624%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="21.2106%" y="133" width="0.1627%" height="15" fill="rgb(220,115,36)" fg:x="7299" fg:w="56"/><text x="21.5036%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="21.3734%" y="117" width="0.2063%" height="15" fill="rgb(243,153,54)" fg:x="7355" fg:w="71"/><text x="21.6663%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (269 instructions, 0.78%)</title><rect x="21.5797%" y="117" width="0.7817%" height="15" fill="rgb(251,47,18)" fg:x="7426" fg:w="269"/><text x="21.8727%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="22.3614%" y="101" width="0.2063%" height="15" fill="rgb(242,102,42)" fg:x="7695" fg:w="71"/><text x="22.6544%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.26%)</title><rect x="22.5677%" y="101" width="0.2615%" height="15" fill="rgb(234,31,38)" fg:x="7766" fg:w="90"/><text x="22.8607%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="22.8292%" y="101" width="0.1889%" height="15" fill="rgb(221,117,51)" fg:x="7856" fg:w="65"/><text x="23.1222%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.83%)</title><rect x="22.3614%" y="117" width="0.8282%" height="15" fill="rgb(212,20,18)" fg:x="7695" fg:w="285"/><text x="22.6544%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="23.1896%" y="117" width="0.1889%" height="15" fill="rgb(245,133,36)" fg:x="7980" fg:w="65"/><text x="23.4826%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 2.36%)</title><rect x="21.3734%" y="133" width="2.3625%" height="15" fill="rgb(212,6,19)" fg:x="7355" fg:w="813"/><text x="21.6663%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="23.7359%" y="133" width="0.2383%" height="15" fill="rgb(218,1,36)" fg:x="8168" fg:w="82"/><text x="24.0289%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.06%)</title><rect x="23.9742%" y="133" width="0.0610%" height="15" fill="rgb(246,84,54)" fg:x="8250" fg:w="21"/><text x="24.2672%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="24.0352%" y="133" width="0.1889%" height="15" fill="rgb(242,110,6)" fg:x="8271" fg:w="65"/><text x="24.3282%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,537 instructions, 7.37%)</title><rect x="17.7002%" y="149" width="7.3724%" height="15" fill="rgb(214,47,5)" fg:x="6091" fg:w="2537"/><text x="17.9932%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="25.0726%" y="133" width="0.2354%" height="15" fill="rgb(218,159,25)" fg:x="8628" fg:w="81"/><text x="25.3656%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="25.3720%" y="133" width="0.2267%" height="15" fill="rgb(215,211,28)" fg:x="8731" fg:w="78"/><text x="25.6649%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.59%)</title><rect x="25.0726%" y="149" width="0.5899%" height="15" fill="rgb(238,59,32)" fg:x="8628" fg:w="203"/><text x="25.3656%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="25.6626%" y="149" width="0.4795%" height="15" fill="rgb(226,82,3)" fg:x="8831" fg:w="165"/><text x="25.9555%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (6,964 instructions, 20.24%)</title><rect x="7.7851%" y="165" width="20.2371%" height="15" fill="rgb(240,164,32)" fg:x="2679" fg:w="6964"/><text x="8.0780%" y="175.50">&lt;candid::binary_parser::Con..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="28.0222%" y="165" width="0.1831%" height="15" fill="rgb(232,46,7)" fg:x="9643" fg:w="63"/><text x="28.3152%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="28.2053%" y="165" width="0.1889%" height="15" fill="rgb(229,129,53)" fg:x="9706" fg:w="65"/><text x="28.4982%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="28.3942%" y="165" width="0.1889%" height="15" fill="rgb(234,188,29)" fg:x="9771" fg:w="65"/><text x="28.6871%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="28.5831%" y="133" width="0.0116%" height="15" fill="rgb(246,141,4)" fg:x="9836" fg:w="4"/><text x="28.8760%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 1.17%)</title><rect x="28.5831%" y="149" width="1.1682%" height="15" fill="rgb(229,23,39)" fg:x="9836" fg:w="402"/><text x="28.8760%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="29.7512%" y="149" width="0.0465%" height="15" fill="rgb(206,12,3)" fg:x="10238" fg:w="16"/><text x="30.0442%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.33%)</title><rect x="29.7977%" y="133" width="0.3284%" height="15" fill="rgb(252,226,20)" fg:x="10254" fg:w="113"/><text x="30.0907%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="30.1261%" y="101" width="0.1744%" height="15" fill="rgb(216,123,35)" fg:x="10367" fg:w="60"/><text x="30.4191%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="30.1261%" y="117" width="0.2470%" height="15" fill="rgb(212,68,40)" fg:x="10367" fg:w="85"/><text x="30.4191%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="30.3731%" y="69" width="0.0262%" height="15" fill="rgb(254,125,32)" fg:x="10452" fg:w="9"/><text x="30.6661%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="30.3993%" y="53" width="0.0872%" height="15" fill="rgb(253,97,22)" fg:x="10461" fg:w="30"/><text x="30.6922%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="30.3993%" y="69" width="0.1598%" height="15" fill="rgb(241,101,14)" fg:x="10461" fg:w="55"/><text x="30.6922%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="30.3731%" y="85" width="0.3313%" height="15" fill="rgb(238,103,29)" fg:x="10452" fg:w="114"/><text x="30.6661%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.49%)</title><rect x="30.3731%" y="101" width="0.4853%" height="15" fill="rgb(233,195,47)" fg:x="10452" fg:w="167"/><text x="30.6661%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.50%)</title><rect x="30.3731%" y="117" width="0.4998%" height="15" fill="rgb(246,218,30)" fg:x="10452" fg:w="172"/><text x="30.6661%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 1.07%)</title><rect x="30.1261%" y="133" width="1.0694%" height="15" fill="rgb(219,145,47)" fg:x="10367" fg:w="368"/><text x="30.4191%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (602 instructions, 1.75%)</title><rect x="29.7977%" y="149" width="1.7494%" height="15" fill="rgb(243,12,26)" fg:x="10254" fg:w="602"/><text x="30.0907%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.24%)</title><rect x="31.5471%" y="149" width="0.2412%" height="15" fill="rgb(214,87,16)" fg:x="10856" fg:w="83"/><text x="31.8401%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="31.7883%" y="149" width="0.1598%" height="15" fill="rgb(208,99,42)" fg:x="10939" fg:w="55"/><text x="32.0813%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="31.9482%" y="133" width="0.2063%" height="15" fill="rgb(253,99,2)" fg:x="10994" fg:w="71"/><text x="32.2411%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.26%)</title><rect x="32.1545%" y="133" width="0.2615%" height="15" fill="rgb(220,168,23)" fg:x="11065" fg:w="90"/><text x="32.4474%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="32.4160%" y="133" width="0.1889%" height="15" fill="rgb(242,38,24)" fg:x="11155" fg:w="65"/><text x="32.7090%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.83%)</title><rect x="31.9482%" y="149" width="0.8282%" height="15" fill="rgb(225,182,9)" fg:x="10994" fg:w="285"/><text x="32.2411%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="32.7764%" y="149" width="0.2209%" height="15" fill="rgb(243,178,37)" fg:x="11279" fg:w="76"/><text x="33.0693%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,722 instructions, 5.00%)</title><rect x="28.5831%" y="165" width="5.0041%" height="15" fill="rgb(232,139,19)" fg:x="9836" fg:w="1722"/><text x="28.8760%" y="175.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="33.5871%" y="165" width="0.1889%" height="15" fill="rgb(225,201,24)" fg:x="11558" fg:w="65"/><text x="33.8801%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="33.7760%" y="165" width="0.2209%" height="15" fill="rgb(221,47,46)" fg:x="11623" fg:w="76"/><text x="34.0690%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="33.9969%" y="149" width="0.2209%" height="15" fill="rgb(249,23,13)" fg:x="11699" fg:w="76"/><text x="34.2898%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.46%)</title><rect x="33.9969%" y="165" width="0.4620%" height="15" fill="rgb(219,9,5)" fg:x="11699" fg:w="159"/><text x="34.2898%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.21%)</title><rect x="34.4589%" y="133" width="0.2063%" height="15" fill="rgb(254,171,16)" fg:x="11858" fg:w="71"/><text x="34.7519%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.31%)</title><rect x="34.4589%" y="149" width="0.3051%" height="15" fill="rgb(230,171,20)" fg:x="11858" fg:w="105"/><text x="34.7519%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (175 instructions, 0.51%)</title><rect x="34.4589%" y="165" width="0.5085%" height="15" fill="rgb(210,71,41)" fg:x="11858" fg:w="175"/><text x="34.7519%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="34.9675%" y="165" width="0.2383%" height="15" fill="rgb(206,173,20)" fg:x="12033" fg:w="82"/><text x="35.2604%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.2057%" y="149" width="0.2383%" height="15" fill="rgb(233,88,34)" fg:x="12115" fg:w="82"/><text x="35.4987%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="35.4440%" y="117" width="0.2615%" height="15" fill="rgb(223,209,46)" fg:x="12197" fg:w="90"/><text x="35.7370%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="35.4440%" y="133" width="0.3342%" height="15" fill="rgb(250,43,18)" fg:x="12197" fg:w="115"/><text x="35.7370%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="35.7782%" y="85" width="0.0262%" height="15" fill="rgb(208,13,10)" fg:x="12312" fg:w="9"/><text x="36.0712%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="35.8044%" y="69" width="0.0872%" height="15" fill="rgb(212,200,36)" fg:x="12321" fg:w="30"/><text x="36.0973%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="35.8044%" y="85" width="0.1598%" height="15" fill="rgb(225,90,30)" fg:x="12321" fg:w="55"/><text x="36.0973%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="35.7782%" y="101" width="0.3313%" height="15" fill="rgb(236,182,39)" fg:x="12312" fg:w="114"/><text x="36.0712%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.49%)</title><rect x="35.7782%" y="117" width="0.4853%" height="15" fill="rgb(212,144,35)" fg:x="12312" fg:w="167"/><text x="36.0712%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.53%)</title><rect x="35.7782%" y="133" width="0.5289%" height="15" fill="rgb(228,63,44)" fg:x="12312" fg:w="182"/><text x="36.0712%" y="143.50"></text></g><g><title>core::fmt::write (408 instructions, 1.19%)</title><rect x="35.4440%" y="149" width="1.1856%" height="15" fill="rgb(228,109,6)" fg:x="12197" fg:w="408"/><text x="35.7370%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (611 instructions, 1.78%)</title><rect x="35.2057%" y="165" width="1.7755%" height="15" fill="rgb(238,117,24)" fg:x="12115" fg:w="611"/><text x="35.4987%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="36.9813%" y="149" width="0.2383%" height="15" fill="rgb(242,26,26)" fg:x="12726" fg:w="82"/><text x="37.2743%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (137 instructions, 0.40%)</title><rect x="36.9813%" y="165" width="0.3981%" height="15" fill="rgb(221,92,48)" fg:x="12726" fg:w="137"/><text x="37.2743%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.28%)</title><rect x="37.3794%" y="165" width="0.2761%" height="15" fill="rgb(209,209,32)" fg:x="12863" fg:w="95"/><text x="37.6724%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="37.6555%" y="165" width="0.0378%" height="15" fill="rgb(221,70,22)" fg:x="12958" fg:w="13"/><text x="37.9484%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.28%)</title><rect x="37.6932%" y="165" width="0.2761%" height="15" fill="rgb(248,145,5)" fg:x="12971" fg:w="95"/><text x="37.9862%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="37.9693%" y="149" width="0.2383%" height="15" fill="rgb(226,116,26)" fg:x="13066" fg:w="82"/><text x="38.2623%" y="159.50"></text></g><g><title>alloc::collections::btree::map::entry::VacantEntry&lt;K,V,A&gt;::insert (115 instructions, 0.33%)</title><rect x="37.9693%" y="165" width="0.3342%" height="15" fill="rgb(244,5,17)" fg:x="13066" fg:w="115"/><text x="38.2623%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (24 instructions, 0.07%)</title><rect x="38.3035%" y="149" width="0.0697%" height="15" fill="rgb(252,159,33)" fg:x="13181" fg:w="24"/><text x="38.5965%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (90 instructions, 0.26%)</title><rect x="38.3035%" y="165" width="0.2615%" height="15" fill="rgb(206,71,0)" fg:x="13181" fg:w="90"/><text x="38.5965%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="38.5650%" y="165" width="0.0436%" height="15" fill="rgb(233,118,54)" fg:x="13271" fg:w="15"/><text x="38.8580%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="38.8498%" y="149" width="0.1627%" height="15" fill="rgb(234,83,48)" fg:x="13369" fg:w="56"/><text x="39.1428%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.48%)</title><rect x="38.6086%" y="165" width="0.4766%" height="15" fill="rgb(228,3,54)" fg:x="13286" fg:w="164"/><text x="38.9016%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="39.0852%" y="165" width="0.0378%" height="15" fill="rgb(226,155,13)" fg:x="13450" fg:w="13"/><text x="39.3782%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="39.1230%" y="165" width="0.0203%" height="15" fill="rgb(241,28,37)" fg:x="13463" fg:w="7"/><text x="39.4159%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="39.1433%" y="165" width="0.0436%" height="15" fill="rgb(233,93,10)" fg:x="13470" fg:w="15"/><text x="39.4363%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="39.1869%" y="133" width="0.2383%" height="15" fill="rgb(225,113,19)" fg:x="13485" fg:w="82"/><text x="39.4799%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="39.4252%" y="101" width="0.2615%" height="15" fill="rgb(241,2,18)" fg:x="13567" fg:w="90"/><text x="39.7182%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="39.4252%" y="117" width="0.3342%" height="15" fill="rgb(228,207,21)" fg:x="13567" fg:w="115"/><text x="39.7182%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="39.7594%" y="69" width="0.0262%" height="15" fill="rgb(213,211,35)" fg:x="13682" fg:w="9"/><text x="40.0524%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="39.7855%" y="53" width="0.0872%" height="15" fill="rgb(209,83,10)" fg:x="13691" fg:w="30"/><text x="40.0785%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="39.7855%" y="69" width="0.1598%" height="15" fill="rgb(209,164,1)" fg:x="13691" fg:w="55"/><text x="40.0785%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.33%)</title><rect x="39.7594%" y="85" width="0.3313%" height="15" fill="rgb(213,184,43)" fg:x="13682" fg:w="114"/><text x="40.0524%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.49%)</title><rect x="39.7594%" y="101" width="0.4853%" height="15" fill="rgb(231,61,34)" fg:x="13682" fg:w="167"/><text x="40.0524%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (182 instructions, 0.53%)</title><rect x="39.7594%" y="117" width="0.5289%" height="15" fill="rgb(235,75,3)" fg:x="13682" fg:w="182"/><text x="40.0524%" y="127.50"></text></g><g><title>core::fmt::write (408 instructions, 1.19%)</title><rect x="39.4252%" y="133" width="1.1856%" height="15" fill="rgb(220,106,47)" fg:x="13567" fg:w="408"/><text x="39.7182%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (611 instructions, 1.78%)</title><rect x="39.1869%" y="149" width="1.7755%" height="15" fill="rgb(210,196,33)" fg:x="13485" fg:w="611"/><text x="39.4799%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="40.9625%" y="149" width="0.2383%" height="15" fill="rgb(229,154,42)" fg:x="14096" fg:w="82"/><text x="41.2554%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (804 instructions, 2.34%)</title><rect x="39.1869%" y="165" width="2.3364%" height="15" fill="rgb(228,114,26)" fg:x="13485" fg:w="804"/><text x="39.4799%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="41.5233%" y="133" width="0.2383%" height="15" fill="rgb(208,144,1)" fg:x="14289" fg:w="82"/><text x="41.8163%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.34%)</title><rect x="41.5233%" y="149" width="0.3371%" height="15" fill="rgb(239,112,37)" fg:x="14289" fg:w="116"/><text x="41.8163%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.54%)</title><rect x="41.5233%" y="165" width="0.5405%" height="15" fill="rgb(210,96,50)" fg:x="14289" fg:w="186"/><text x="41.8163%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.0638%" y="165" width="0.2383%" height="15" fill="rgb(222,178,2)" fg:x="14475" fg:w="82"/><text x="42.3568%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="42.3021%" y="165" width="0.2354%" height="15" fill="rgb(226,74,18)" fg:x="14557" fg:w="81"/><text x="42.5951%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.5375%" y="165" width="0.2383%" height="15" fill="rgb(225,67,54)" fg:x="14638" fg:w="82"/><text x="42.8305%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.7758%" y="165" width="0.2383%" height="15" fill="rgb(251,92,32)" fg:x="14720" fg:w="82"/><text x="43.0687%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="43.0141%" y="149" width="0.2354%" height="15" fill="rgb(228,149,22)" fg:x="14802" fg:w="81"/><text x="43.3070%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (112 instructions, 0.33%)</title><rect x="43.0141%" y="165" width="0.3255%" height="15" fill="rgb(243,54,13)" fg:x="14802" fg:w="112"/><text x="43.3070%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.18%)</title><rect x="43.3395%" y="149" width="0.1831%" height="15" fill="rgb(243,180,28)" fg:x="14914" fg:w="63"/><text x="43.6325%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.48%)</title><rect x="43.3395%" y="165" width="0.4824%" height="15" fill="rgb(208,167,24)" fg:x="14914" fg:w="166"/><text x="43.6325%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="43.8219%" y="165" width="0.2354%" height="15" fill="rgb(245,73,45)" fg:x="15080" fg:w="81"/><text x="44.1149%" y="175.50"></text></g><g><title>memcpy (399 instructions, 1.16%)</title><rect x="44.0573%" y="165" width="1.1595%" height="15" fill="rgb(237,203,48)" fg:x="15161" fg:w="399"/><text x="44.3503%" y="175.50"></text></g><g><title>memcpy (399 instructions, 1.16%)</title><rect x="45.2168%" y="165" width="1.1595%" height="15" fill="rgb(211,197,16)" fg:x="15560" fg:w="399"/><text x="45.5098%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (17,106 instructions, 49.71%)</title><rect x="1.6884%" y="181" width="49.7094%" height="15" fill="rgb(243,99,51)" fg:x="581" fg:w="17106"/><text x="1.9813%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (354 instructions, 1.03%)</title><rect x="51.3978%" y="181" width="1.0287%" height="15" fill="rgb(215,123,29)" fg:x="17687" fg:w="354"/><text x="51.6907%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (49 instructions, 0.14%)</title><rect x="52.4265%" y="165" width="0.1424%" height="15" fill="rgb(239,186,37)" fg:x="18041" fg:w="49"/><text x="52.7194%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (87 instructions, 0.25%)</title><rect x="52.4265%" y="181" width="0.2528%" height="15" fill="rgb(252,136,39)" fg:x="18041" fg:w="87"/><text x="52.7194%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.16%)</title><rect x="52.6793%" y="165" width="0.1598%" height="15" fill="rgb(223,213,32)" fg:x="18128" fg:w="55"/><text x="52.9723%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.46%)</title><rect x="52.6793%" y="181" width="0.4620%" height="15" fill="rgb(233,115,5)" fg:x="18128" fg:w="159"/><text x="52.9723%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="53.1413%" y="165" width="0.0349%" height="15" fill="rgb(207,226,44)" fg:x="18287" fg:w="12"/><text x="53.4343%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="53.1762%" y="149" width="0.1540%" height="15" fill="rgb(208,126,0)" fg:x="18299" fg:w="53"/><text x="53.4692%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="53.3302%" y="149" width="0.8892%" height="15" fill="rgb(244,66,21)" fg:x="18352" fg:w="306"/><text x="53.6232%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="54.2195%" y="149" width="0.2092%" height="15" fill="rgb(222,97,12)" fg:x="18658" fg:w="72"/><text x="54.5124%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="53.1762%" y="165" width="1.9412%" height="15" fill="rgb(219,213,19)" fg:x="18299" fg:w="668"/><text x="53.4692%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="55.1174%" y="165" width="0.2209%" height="15" fill="rgb(252,169,30)" fg:x="18967" fg:w="76"/><text x="55.4104%" y="175.50"></text></g><g><title>memset (136 instructions, 0.40%)</title><rect x="55.3383%" y="165" width="0.3952%" height="15" fill="rgb(206,32,51)" fg:x="19043" fg:w="136"/><text x="55.6312%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,249 instructions, 3.63%)</title><rect x="53.1413%" y="181" width="3.6295%" height="15" fill="rgb(250,172,42)" fg:x="18287" fg:w="1249"/><text x="53.4343%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="56.7709%" y="181" width="0.2267%" height="15" fill="rgb(209,34,43)" fg:x="19536" fg:w="78"/><text x="57.0639%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="56.9976%" y="181" width="0.2209%" height="15" fill="rgb(223,11,35)" fg:x="19614" fg:w="76"/><text x="57.2905%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="57.2184%" y="181" width="0.2267%" height="15" fill="rgb(251,219,26)" fg:x="19690" fg:w="78"/><text x="57.5114%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="57.4451%" y="149" width="0.0349%" height="15" fill="rgb(231,119,3)" fg:x="19768" fg:w="12"/><text x="57.7380%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="57.4799%" y="133" width="0.1540%" height="15" fill="rgb(216,97,11)" fg:x="19780" fg:w="53"/><text x="57.7729%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="57.6340%" y="133" width="0.8892%" height="15" fill="rgb(223,59,9)" fg:x="19833" fg:w="306"/><text x="57.9269%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="58.5232%" y="133" width="0.2092%" height="15" fill="rgb(233,93,31)" fg:x="20139" fg:w="72"/><text x="58.8162%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="57.4799%" y="149" width="1.9412%" height="15" fill="rgb(239,81,33)" fg:x="19780" fg:w="668"/><text x="57.7729%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 2.31%)</title><rect x="57.4451%" y="165" width="2.3102%" height="15" fill="rgb(213,120,34)" fg:x="19768" fg:w="795"/><text x="57.7380%" y="175.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="59.7553%" y="165" width="0.2209%" height="15" fill="rgb(243,49,53)" fg:x="20563" fg:w="76"/><text x="60.0483%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="59.9762%" y="149" width="0.0349%" height="15" fill="rgb(247,216,33)" fg:x="20639" fg:w="12"/><text x="60.2691%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="60.0110%" y="133" width="0.1540%" height="15" fill="rgb(226,26,14)" fg:x="20651" fg:w="53"/><text x="60.3040%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="60.1651%" y="133" width="0.8892%" height="15" fill="rgb(215,49,53)" fg:x="20704" fg:w="306"/><text x="60.4580%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="61.0543%" y="133" width="0.2092%" height="15" fill="rgb(245,162,40)" fg:x="21010" fg:w="72"/><text x="61.3473%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="60.0110%" y="149" width="1.9412%" height="15" fill="rgb(229,68,17)" fg:x="20651" fg:w="668"/><text x="60.3040%" y="159.50"></text></g><g><title>candid::types::internal::env_add (888 instructions, 2.58%)</title><rect x="59.9762%" y="165" width="2.5805%" height="15" fill="rgb(213,182,10)" fg:x="20639" fg:w="888"/><text x="60.2691%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="62.5567%" y="165" width="0.2209%" height="15" fill="rgb(245,125,30)" fg:x="21527" fg:w="76"/><text x="62.8496%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="62.7775%" y="149" width="0.0349%" height="15" fill="rgb(232,202,2)" fg:x="21603" fg:w="12"/><text x="63.0705%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="62.8124%" y="133" width="0.1540%" height="15" fill="rgb(237,140,51)" fg:x="21615" fg:w="53"/><text x="63.1054%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="62.9664%" y="133" width="0.8892%" height="15" fill="rgb(236,157,25)" fg:x="21668" fg:w="306"/><text x="63.2594%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="63.8556%" y="133" width="0.2092%" height="15" fill="rgb(219,209,0)" fg:x="21974" fg:w="72"/><text x="64.1486%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="62.8124%" y="149" width="1.9412%" height="15" fill="rgb(240,116,54)" fg:x="21615" fg:w="668"/><text x="63.1054%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.30%)</title><rect x="64.7536%" y="149" width="1.2961%" height="15" fill="rgb(216,10,36)" fg:x="22283" fg:w="446"/><text x="65.0465%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="66.0496%" y="133" width="0.2354%" height="15" fill="rgb(222,72,44)" fg:x="22729" fg:w="81"/><text x="66.3426%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="66.0496%" y="149" width="0.3138%" height="15" fill="rgb(232,159,9)" fg:x="22729" fg:w="108"/><text x="66.3426%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 4.07%)</title><rect x="62.7775%" y="165" width="4.0713%" height="15" fill="rgb(210,39,32)" fg:x="21603" fg:w="1401"/><text x="63.0705%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="66.8488%" y="117" width="0.1540%" height="15" fill="rgb(216,194,45)" fg:x="23004" fg:w="53"/><text x="67.1417%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="66.8488%" y="133" width="0.2296%" height="15" fill="rgb(218,18,35)" fg:x="23004" fg:w="79"/><text x="67.1417%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (294 instructions, 0.85%)</title><rect x="66.8488%" y="149" width="0.8544%" height="15" fill="rgb(207,83,51)" fg:x="23004" fg:w="294"/><text x="67.1417%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="67.7031%" y="149" width="0.2383%" height="15" fill="rgb(225,63,43)" fg:x="23298" fg:w="82"/><text x="67.9961%" y="159.50"></text></g><g><title>memset (136 instructions, 0.40%)</title><rect x="67.9414%" y="149" width="0.3952%" height="15" fill="rgb(207,57,36)" fg:x="23380" fg:w="136"/><text x="68.2344%" y="159.50"></text></g><g><title>candid::types::internal::env_id (933 instructions, 2.71%)</title><rect x="66.8488%" y="165" width="2.7113%" height="15" fill="rgb(216,99,33)" fg:x="23004" fg:w="933"/><text x="67.1417%" y="175.50">c..</text></g><g><title>candid::types::CandidType::ty (4,266 instructions, 12.40%)</title><rect x="57.4451%" y="181" width="12.3968%" height="15" fill="rgb(225,42,16)" fg:x="19768" fg:w="4266"/><text x="57.7380%" y="191.50">candid::types::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="69.8419%" y="181" width="0.2267%" height="15" fill="rgb(220,201,45)" fg:x="24034" fg:w="78"/><text x="70.1349%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="70.0686%" y="165" width="0.0349%" height="15" fill="rgb(225,33,4)" fg:x="24112" fg:w="12"/><text x="70.3615%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="70.1035%" y="149" width="0.1540%" height="15" fill="rgb(224,33,50)" fg:x="24124" fg:w="53"/><text x="70.3964%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="70.2575%" y="149" width="0.8892%" height="15" fill="rgb(246,198,51)" fg:x="24177" fg:w="306"/><text x="70.5504%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="71.1467%" y="149" width="0.2092%" height="15" fill="rgb(205,22,4)" fg:x="24483" fg:w="72"/><text x="71.4397%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="70.1035%" y="165" width="1.9412%" height="15" fill="rgb(206,3,8)" fg:x="24124" fg:w="668"/><text x="70.3964%" y="175.50"></text></g><g><title>memcmp (446 instructions, 1.30%)</title><rect x="72.0446%" y="165" width="1.2961%" height="15" fill="rgb(251,23,15)" fg:x="24792" fg:w="446"/><text x="72.3376%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="73.3407%" y="149" width="0.2354%" height="15" fill="rgb(252,88,28)" fg:x="25238" fg:w="81"/><text x="73.6337%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="73.3407%" y="165" width="0.3138%" height="15" fill="rgb(212,127,14)" fg:x="25238" fg:w="108"/><text x="73.6337%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 4.07%)</title><rect x="70.0686%" y="181" width="4.0713%" height="15" fill="rgb(247,145,37)" fg:x="24112" fg:w="1401"/><text x="70.3615%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.1398%" y="133" width="0.1540%" height="15" fill="rgb(209,117,53)" fg:x="25513" fg:w="53"/><text x="74.4328%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.45%)</title><rect x="74.2939%" y="133" width="0.4475%" height="15" fill="rgb(212,90,42)" fg:x="25566" fg:w="154"/><text x="74.5868%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.7414%" y="117" width="0.1540%" height="15" fill="rgb(218,164,37)" fg:x="25720" fg:w="53"/><text x="75.0343%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="74.7414%" y="133" width="0.2296%" height="15" fill="rgb(246,65,34)" fg:x="25720" fg:w="79"/><text x="75.0343%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (353 instructions, 1.03%)</title><rect x="74.1398%" y="149" width="1.0258%" height="15" fill="rgb(231,100,33)" fg:x="25513" fg:w="353"/><text x="74.4328%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="75.7904%" y="133" width="0.1540%" height="15" fill="rgb(228,126,14)" fg:x="26081" fg:w="53"/><text x="76.0834%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.45%)</title><rect x="75.9444%" y="133" width="0.4475%" height="15" fill="rgb(215,173,21)" fg:x="26134" fg:w="154"/><text x="76.2374%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.3920%" y="117" width="0.1540%" height="15" fill="rgb(210,6,40)" fg:x="26288" fg:w="53"/><text x="76.6849%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="76.3920%" y="133" width="0.2296%" height="15" fill="rgb(212,48,18)" fg:x="26288" fg:w="79"/><text x="76.6849%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (353 instructions, 1.03%)</title><rect x="75.7904%" y="149" width="1.0258%" height="15" fill="rgb(230,214,11)" fg:x="26081" fg:w="353"/><text x="76.0834%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,136 instructions, 3.30%)</title><rect x="74.1398%" y="165" width="3.3012%" height="15" fill="rgb(254,105,39)" fg:x="25513" fg:w="1136"/><text x="74.4328%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,439 instructions, 4.18%)</title><rect x="74.1398%" y="181" width="4.1817%" height="15" fill="rgb(245,158,5)" fg:x="25513" fg:w="1439"/><text x="74.4328%" y="191.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.13%)</title><rect x="78.3215%" y="181" width="0.1308%" height="15" fill="rgb(249,208,11)" fg:x="26952" fg:w="45"/><text x="78.6145%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="78.4523%" y="165" width="0.2267%" height="15" fill="rgb(210,39,28)" fg:x="26997" fg:w="78"/><text x="78.7453%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.35%)</title><rect x="78.7574%" y="165" width="0.3487%" height="15" fill="rgb(211,56,53)" fg:x="27102" fg:w="120"/><text x="79.0504%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.73%)</title><rect x="78.4523%" y="181" width="0.7323%" height="15" fill="rgb(226,201,30)" fg:x="26997" fg:w="252"/><text x="78.7453%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.38%)</title><rect x="79.1846%" y="117" width="0.3807%" height="15" fill="rgb(239,101,34)" fg:x="27249" fg:w="131"/><text x="79.4776%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (227 instructions, 0.66%)</title><rect x="79.1846%" y="133" width="0.6597%" height="15" fill="rgb(226,209,5)" fg:x="27249" fg:w="227"/><text x="79.4776%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (301 instructions, 0.87%)</title><rect x="79.1846%" y="149" width="0.8747%" height="15" fill="rgb(250,105,47)" fg:x="27249" fg:w="301"/><text x="79.4776%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.0593%" y="149" width="0.0320%" height="15" fill="rgb(230,72,3)" fg:x="27550" fg:w="11"/><text x="80.3523%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (364 instructions, 1.06%)</title><rect x="79.1846%" y="165" width="1.0578%" height="15" fill="rgb(232,218,39)" fg:x="27249" fg:w="364"/><text x="79.4776%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.2424%" y="149" width="0.2209%" height="15" fill="rgb(248,166,6)" fg:x="27613" fg:w="76"/><text x="80.5353%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.7364%" y="149" width="0.2209%" height="15" fill="rgb(247,89,20)" fg:x="27783" fg:w="76"/><text x="81.0293%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (340 instructions, 0.99%)</title><rect x="80.2424%" y="165" width="0.9880%" height="15" fill="rgb(248,130,54)" fg:x="27613" fg:w="340"/><text x="80.5353%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2304%" y="165" width="0.0320%" height="15" fill="rgb(234,196,4)" fg:x="27953" fg:w="11"/><text x="81.5234%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2624%" y="165" width="0.0320%" height="15" fill="rgb(250,143,31)" fg:x="27964" fg:w="11"/><text x="81.5553%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="81.2943%" y="149" width="0.2209%" height="15" fill="rgb(211,110,34)" fg:x="27975" fg:w="76"/><text x="81.5873%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="81.5152%" y="149" width="0.2615%" height="15" fill="rgb(215,124,48)" fg:x="28051" fg:w="90"/><text x="81.8081%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.32%)</title><rect x="81.7767%" y="149" width="0.3197%" height="15" fill="rgb(216,46,13)" fg:x="28141" fg:w="110"/><text x="82.0697%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="82.0964%" y="149" width="0.1598%" height="15" fill="rgb(205,184,25)" fg:x="28251" fg:w="55"/><text x="82.3893%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (403 instructions, 1.17%)</title><rect x="81.2943%" y="165" width="1.1711%" height="15" fill="rgb(228,1,10)" fg:x="27975" fg:w="403"/><text x="81.5873%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.08%)</title><rect x="82.4654%" y="149" width="0.0814%" height="15" fill="rgb(213,116,27)" fg:x="28378" fg:w="28"/><text x="82.7584%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.5468%" y="149" width="0.0436%" height="15" fill="rgb(241,95,50)" fg:x="28406" fg:w="15"/><text x="82.8398%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.5904%" y="149" width="0.0436%" height="15" fill="rgb(238,48,32)" fg:x="28421" fg:w="15"/><text x="82.8833%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="82.6340%" y="133" width="0.2063%" height="15" fill="rgb(235,113,49)" fg:x="28436" fg:w="71"/><text x="82.9269%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="82.8403%" y="133" width="0.1889%" height="15" fill="rgb(205,127,43)" fg:x="28507" fg:w="65"/><text x="83.1333%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.19%)</title><rect x="83.0292%" y="133" width="0.1889%" height="15" fill="rgb(250,162,2)" fg:x="28572" fg:w="65"/><text x="83.3221%" y="143.50"></text></g><g><title>binread::BinRead::read (245 instructions, 0.71%)</title><rect x="82.6340%" y="149" width="0.7120%" height="15" fill="rgb(220,13,41)" fg:x="28436" fg:w="245"/><text x="82.9269%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.16%)</title><rect x="83.3459%" y="149" width="0.1598%" height="15" fill="rgb(249,221,25)" fg:x="28681" fg:w="55"/><text x="83.6389%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="83.5058%" y="149" width="0.2209%" height="15" fill="rgb(215,208,19)" fg:x="28736" fg:w="76"/><text x="83.7987%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.31%)</title><rect x="83.7266%" y="149" width="0.3051%" height="15" fill="rgb(236,175,2)" fg:x="28812" fg:w="105"/><text x="84.0196%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.42%)</title><rect x="84.0317%" y="149" width="0.4185%" height="15" fill="rgb(241,52,2)" fg:x="28917" fg:w="144"/><text x="84.3247%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (817 instructions, 2.37%)</title><rect x="82.4654%" y="165" width="2.3742%" height="15" fill="rgb(248,140,14)" fg:x="28378" fg:w="817"/><text x="82.7584%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="84.8396%" y="149" width="0.0145%" height="15" fill="rgb(253,22,42)" fg:x="29195" fg:w="5"/><text x="85.1326%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="84.8541%" y="149" width="0.2354%" height="15" fill="rgb(234,61,47)" fg:x="29200" fg:w="81"/><text x="85.1471%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.0895%" y="149" width="0.0145%" height="15" fill="rgb(208,226,15)" fg:x="29281" fg:w="5"/><text x="85.3825%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.37%)</title><rect x="85.1040%" y="149" width="0.3662%" height="15" fill="rgb(217,221,4)" fg:x="29286" fg:w="126"/><text x="85.3970%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.72%)</title><rect x="84.8396%" y="165" width="0.7207%" height="15" fill="rgb(212,174,34)" fg:x="29195" fg:w="248"/><text x="85.1326%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (2,739 instructions, 7.96%)</title><rect x="79.1846%" y="181" width="7.9594%" height="15" fill="rgb(253,83,4)" fg:x="27249" fg:w="2739"/><text x="79.4776%" y="191.50">publisher..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="87.1440%" y="165" width="0.2354%" height="15" fill="rgb(250,195,49)" fg:x="29988" fg:w="81"/><text x="87.4370%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.37%)</title><rect x="87.3794%" y="165" width="0.3662%" height="15" fill="rgb(241,192,25)" fg:x="30069" fg:w="126"/><text x="87.6724%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (246 instructions, 0.71%)</title><rect x="87.1440%" y="181" width="0.7149%" height="15" fill="rgb(208,124,10)" fg:x="29988" fg:w="246"/><text x="87.4370%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8589%" y="181" width="0.0320%" height="15" fill="rgb(222,33,0)" fg:x="30234" fg:w="11"/><text x="88.1519%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8909%" y="181" width="0.0320%" height="15" fill="rgb(234,209,28)" fg:x="30245" fg:w="11"/><text x="88.1838%" y="191.50"></text></g><g><title>memcpy (410 instructions, 1.19%)</title><rect x="87.9228%" y="181" width="1.1914%" height="15" fill="rgb(224,11,23)" fg:x="30256" fg:w="410"/><text x="88.2158%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="89.1143%" y="133" width="0.2354%" height="15" fill="rgb(232,99,1)" fg:x="30666" fg:w="81"/><text x="89.4072%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="89.3496%" y="117" width="0.2267%" height="15" fill="rgb(237,95,45)" fg:x="30747" fg:w="78"/><text x="89.6426%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.5763%" y="117" width="0.0320%" height="15" fill="rgb(208,109,11)" fg:x="30825" fg:w="11"/><text x="89.8693%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.36%)</title><rect x="89.6083%" y="117" width="0.3574%" height="15" fill="rgb(216,190,48)" fg:x="30836" fg:w="123"/><text x="89.9012%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.33%)</title><rect x="89.9657%" y="117" width="0.3255%" height="15" fill="rgb(251,171,36)" fg:x="30959" fg:w="112"/><text x="90.2587%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (412 instructions, 1.20%)</title><rect x="89.3496%" y="133" width="1.1973%" height="15" fill="rgb(230,62,22)" fg:x="30747" fg:w="412"/><text x="89.6426%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.33%)</title><rect x="90.5469%" y="133" width="0.3255%" height="15" fill="rgb(225,114,35)" fg:x="31159" fg:w="112"/><text x="90.8399%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (702 instructions, 2.04%)</title><rect x="89.1143%" y="149" width="2.0400%" height="15" fill="rgb(215,118,42)" fg:x="30666" fg:w="702"/><text x="89.4072%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.36%)</title><rect x="91.1542%" y="149" width="0.3574%" height="15" fill="rgb(243,119,21)" fg:x="31368" fg:w="123"/><text x="91.4472%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="91.5117%" y="133" width="0.4795%" height="15" fill="rgb(252,177,53)" fg:x="31491" fg:w="165"/><text x="91.8047%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.56%)</title><rect x="91.5117%" y="149" width="0.5579%" height="15" fill="rgb(237,209,29)" fg:x="31491" fg:w="192"/><text x="91.8047%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.0696%" y="149" width="0.0320%" height="15" fill="rgb(212,65,23)" fg:x="31683" fg:w="11"/><text x="92.3626%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,068 instructions, 3.10%)</title><rect x="89.1143%" y="165" width="3.1036%" height="15" fill="rgb(230,222,46)" fg:x="30666" fg:w="1068"/><text x="89.4072%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,105 instructions, 3.21%)</title><rect x="89.1143%" y="181" width="3.2111%" height="15" fill="rgb(215,135,32)" fg:x="30666" fg:w="1105"/><text x="89.4072%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="92.3254%" y="181" width="0.2267%" height="15" fill="rgb(246,101,22)" fg:x="31771" fg:w="78"/><text x="92.6183%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="92.5520%" y="181" width="0.2209%" height="15" fill="rgb(206,107,13)" fg:x="31849" fg:w="76"/><text x="92.8450%" y="191.50"></text></g><g><title>memset (116 instructions, 0.34%)</title><rect x="92.7729%" y="181" width="0.3371%" height="15" fill="rgb(250,100,44)" fg:x="31925" fg:w="116"/><text x="93.0658%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.48%)</title><rect x="93.1100%" y="181" width="0.4795%" height="15" fill="rgb(231,147,38)" fg:x="32041" fg:w="165"/><text x="93.4029%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="93.5894%" y="181" width="0.1598%" height="15" fill="rgb(229,8,40)" fg:x="32206" fg:w="55"/><text x="93.8824%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (20 instructions, 0.06%)</title><rect x="93.7493%" y="181" width="0.0581%" height="15" fill="rgb(221,135,30)" fg:x="32261" fg:w="20"/><text x="94.0422%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="93.8074%" y="181" width="0.1831%" height="15" fill="rgb(249,193,18)" fg:x="32281" fg:w="63"/><text x="94.1004%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="93.9905%" y="149" width="0.0349%" height="15" fill="rgb(209,133,39)" fg:x="32344" fg:w="12"/><text x="94.2834%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0253%" y="149" width="0.0320%" height="15" fill="rgb(232,100,14)" fg:x="32356" fg:w="11"/><text x="94.3183%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0573%" y="149" width="0.0320%" height="15" fill="rgb(224,185,1)" fg:x="32367" fg:w="11"/><text x="94.3503%" y="159.50"></text></g><g><title>memset (136 instructions, 0.40%)</title><rect x="94.0893%" y="149" width="0.3952%" height="15" fill="rgb(223,139,8)" fg:x="32378" fg:w="136"/><text x="94.3822%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (354 instructions, 1.03%)</title><rect x="93.9905%" y="165" width="1.0287%" height="15" fill="rgb(232,213,38)" fg:x="32344" fg:w="354"/><text x="94.2834%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.09%)</title><rect x="95.0192%" y="165" width="0.0930%" height="15" fill="rgb(207,94,22)" fg:x="32698" fg:w="32"/><text x="95.3121%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="95.1122%" y="117" width="0.2209%" height="15" fill="rgb(219,183,54)" fg:x="32730" fg:w="76"/><text x="95.4051%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.32%)</title><rect x="95.1122%" y="133" width="0.3197%" height="15" fill="rgb(216,185,54)" fg:x="32730" fg:w="110"/><text x="95.4051%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.51%)</title><rect x="95.1122%" y="149" width="0.5144%" height="15" fill="rgb(254,217,39)" fg:x="32730" fg:w="177"/><text x="95.4051%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6265%" y="149" width="0.0320%" height="15" fill="rgb(240,178,23)" fg:x="32907" fg:w="11"/><text x="95.9195%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6585%" y="149" width="0.0320%" height="15" fill="rgb(218,11,47)" fg:x="32918" fg:w="11"/><text x="95.9515%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 1.05%)</title><rect x="95.1122%" y="165" width="1.0491%" height="15" fill="rgb(218,51,51)" fg:x="32730" fg:w="361"/><text x="95.4051%" y="175.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.09%)</title><rect x="96.1612%" y="165" width="0.0872%" height="15" fill="rgb(238,126,27)" fg:x="33091" fg:w="30"/><text x="96.4542%" y="175.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="96.2484%" y="165" width="0.0145%" height="15" fill="rgb(249,202,22)" fg:x="33121" fg:w="5"/><text x="96.5414%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (4 instructions, 0.01%)</title><rect x="96.2629%" y="165" width="0.0116%" height="15" fill="rgb(254,195,49)" fg:x="33126" fg:w="4"/><text x="96.5559%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="96.2746%" y="165" width="0.1598%" height="15" fill="rgb(208,123,14)" fg:x="33130" fg:w="55"/><text x="96.5675%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (971 instructions, 2.82%)</title><rect x="93.9905%" y="181" width="2.8217%" height="15" fill="rgb(224,200,8)" fg:x="32344" fg:w="971"/><text x="94.2834%" y="191.50">ic..</text></g><g><title>publisher::subscribe_0_::{{closure}} (33,561 instructions, 97.53%)</title><rect x="1.4501%" y="197" width="97.5270%" height="15" fill="rgb(217,61,36)" fg:x="499" fg:w="33561"/><text x="1.7430%" y="207.50">publisher::subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9771%" y="197" width="0.0349%" height="15" fill="rgb(206,35,45)" fg:x="34060" fg:w="12"/><text x="99.2701%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="99.0120%" y="197" width="0.2354%" height="15" fill="rgb(217,65,33)" fg:x="34072" fg:w="81"/><text x="99.3049%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="99.2474%" y="197" width="0.4795%" height="15" fill="rgb(222,158,48)" fg:x="34153" fg:w="165"/><text x="99.5403%" y="207.50"></text></g><g><title>all (34,412 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(254,2,54)" fg:x="0" fg:w="34412"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (34,412 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(250,143,38)" fg:x="0" fg:w="34412"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>