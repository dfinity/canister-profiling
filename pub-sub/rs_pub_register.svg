<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="38523"><g><title>ic_cdk::setup (59 instructions, 0.15%)</title><rect x="0.0000%" y="229" width="0.1532%" height="15" fill="rgb(218,159,25)" fg:x="0" fg:w="59"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (411 instructions, 1.07%)</title><rect x="0.1532%" y="197" width="1.0669%" height="15" fill="rgb(215,211,28)" fg:x="59" fg:w="411"/><text x="0.4461%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (421 instructions, 1.09%)</title><rect x="0.1532%" y="213" width="1.0929%" height="15" fill="rgb(238,59,32)" fg:x="59" fg:w="421"/><text x="0.4461%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="1.2538%" y="197" width="0.2414%" height="15" fill="rgb(226,82,3)" fg:x="483" fg:w="93"/><text x="1.5468%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="1.2538%" y="213" width="0.2674%" height="15" fill="rgb(240,164,32)" fg:x="483" fg:w="103"/><text x="1.5468%" y="223.50"></text></g><g><title>__rust_alloc (530 instructions, 1.38%)</title><rect x="0.1532%" y="229" width="1.3758%" height="15" fill="rgb(232,46,7)" fg:x="59" fg:w="530"/><text x="0.4461%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="1.5290%" y="165" width="0.2414%" height="15" fill="rgb(229,129,53)" fg:x="589" fg:w="93"/><text x="1.8219%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="1.5290%" y="181" width="0.2674%" height="15" fill="rgb(234,188,29)" fg:x="589" fg:w="103"/><text x="1.8219%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="1.5290%" y="197" width="0.2752%" height="15" fill="rgb(246,141,4)" fg:x="589" fg:w="106"/><text x="1.8219%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (176 instructions, 0.46%)</title><rect x="1.5290%" y="213" width="0.4569%" height="15" fill="rgb(229,23,39)" fg:x="589" fg:w="176"/><text x="1.8219%" y="223.50"></text></g><g><title>std::sys::wasm::once::Once::call (88 instructions, 0.23%)</title><rect x="1.9858%" y="181" width="0.2284%" height="15" fill="rgb(206,12,3)" fg:x="765" fg:w="88"/><text x="2.2788%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (163 instructions, 0.42%)</title><rect x="1.9858%" y="197" width="0.4231%" height="15" fill="rgb(252,226,20)" fg:x="765" fg:w="163"/><text x="2.2788%" y="207.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="2.4090%" y="181" width="0.0104%" height="15" fill="rgb(216,123,35)" fg:x="928" fg:w="4"/><text x="2.7019%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 1.06%)</title><rect x="2.4090%" y="197" width="1.0565%" height="15" fill="rgb(212,68,40)" fg:x="928" fg:w="407"/><text x="2.7019%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.19%)</title><rect x="3.4655%" y="197" width="0.1921%" height="15" fill="rgb(254,125,32)" fg:x="1335" fg:w="74"/><text x="3.7584%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="3.6576%" y="197" width="0.1402%" height="15" fill="rgb(253,97,22)" fg:x="1409" fg:w="54"/><text x="3.9505%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="3.7977%" y="197" width="0.1402%" height="15" fill="rgb(241,101,14)" fg:x="1463" fg:w="54"/><text x="4.0907%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="3.9379%" y="197" width="0.1402%" height="15" fill="rgb(238,103,29)" fg:x="1517" fg:w="54"/><text x="4.2309%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="4.0781%" y="197" width="0.1402%" height="15" fill="rgb(233,195,47)" fg:x="1571" fg:w="54"/><text x="4.3711%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="4.2183%" y="197" width="0.1583%" height="15" fill="rgb(246,218,30)" fg:x="1625" fg:w="61"/><text x="4.5112%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.25%)</title><rect x="4.3766%" y="197" width="0.2518%" height="15" fill="rgb(219,145,47)" fg:x="1686" fg:w="97"/><text x="4.6696%" y="207.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="4.6284%" y="181" width="0.0104%" height="15" fill="rgb(243,12,26)" fg:x="1783" fg:w="4"/><text x="4.9214%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 1.06%)</title><rect x="4.6284%" y="197" width="1.0565%" height="15" fill="rgb(214,87,16)" fg:x="1783" fg:w="407"/><text x="4.9214%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="5.6849%" y="197" width="0.0415%" height="15" fill="rgb(208,99,42)" fg:x="2190" fg:w="16"/><text x="5.9779%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="5.7264%" y="133" width="0.2414%" height="15" fill="rgb(253,99,2)" fg:x="2206" fg:w="93"/><text x="6.0194%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="5.7264%" y="149" width="0.2674%" height="15" fill="rgb(220,168,23)" fg:x="2206" fg:w="103"/><text x="6.0194%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="5.7264%" y="165" width="0.2752%" height="15" fill="rgb(242,38,24)" fg:x="2206" fg:w="106"/><text x="6.0194%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.16%)</title><rect x="6.0016%" y="133" width="0.1558%" height="15" fill="rgb(225,182,9)" fg:x="2312" fg:w="60"/><text x="6.2946%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.22%)</title><rect x="6.0016%" y="149" width="0.2206%" height="15" fill="rgb(243,178,37)" fg:x="2312" fg:w="85"/><text x="6.2946%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.2223%" y="101" width="0.0234%" height="15" fill="rgb(232,139,19)" fg:x="2397" fg:w="9"/><text x="6.5152%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="6.2456%" y="85" width="0.0779%" height="15" fill="rgb(225,201,24)" fg:x="2406" fg:w="30"/><text x="6.5386%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="6.2456%" y="101" width="0.1428%" height="15" fill="rgb(221,47,46)" fg:x="2406" fg:w="55"/><text x="6.5386%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="6.2223%" y="117" width="0.3011%" height="15" fill="rgb(249,23,13)" fg:x="2397" fg:w="116"/><text x="6.5152%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.44%)</title><rect x="6.2223%" y="133" width="0.4387%" height="15" fill="rgb(219,9,5)" fg:x="2397" fg:w="169"/><text x="6.5152%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.45%)</title><rect x="6.2223%" y="149" width="0.4517%" height="15" fill="rgb(254,171,16)" fg:x="2397" fg:w="174"/><text x="6.5152%" y="159.50"></text></g><g><title>core::fmt::write (367 instructions, 0.95%)</title><rect x="6.0016%" y="165" width="0.9527%" height="15" fill="rgb(230,171,20)" fg:x="2312" fg:w="367"/><text x="6.2946%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.60%)</title><rect x="5.7264%" y="181" width="1.5990%" height="15" fill="rgb(210,71,41)" fg:x="2206" fg:w="616"/><text x="6.0194%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.19%)</title><rect x="7.3255%" y="181" width="0.1921%" height="15" fill="rgb(206,173,20)" fg:x="2822" fg:w="74"/><text x="7.6185%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.14%)</title><rect x="7.5176%" y="181" width="0.1428%" height="15" fill="rgb(233,88,34)" fg:x="2896" fg:w="55"/><text x="7.8106%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 2.12%)</title><rect x="5.7264%" y="197" width="2.1182%" height="15" fill="rgb(223,209,46)" fg:x="2206" fg:w="816"/><text x="6.0194%" y="207.50">b..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="7.8447%" y="181" width="0.1402%" height="15" fill="rgb(250,43,18)" fg:x="3022" fg:w="54"/><text x="8.1376%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="7.9848%" y="149" width="0.2414%" height="15" fill="rgb(208,13,10)" fg:x="3076" fg:w="93"/><text x="8.2778%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="7.9848%" y="165" width="0.2674%" height="15" fill="rgb(212,200,36)" fg:x="3076" fg:w="103"/><text x="8.2778%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="7.9848%" y="181" width="0.2752%" height="15" fill="rgb(225,90,30)" fg:x="3076" fg:w="106"/><text x="8.2778%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="8.2600%" y="133" width="0.2414%" height="15" fill="rgb(236,182,39)" fg:x="3182" fg:w="93"/><text x="8.5530%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="8.2600%" y="149" width="0.2674%" height="15" fill="rgb(212,144,35)" fg:x="3182" fg:w="103"/><text x="8.5530%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="8.2600%" y="165" width="0.2752%" height="15" fill="rgb(228,63,44)" fg:x="3182" fg:w="106"/><text x="8.5530%" y="175.50"></text></g><g><title>memcpy (120 instructions, 0.31%)</title><rect x="8.5352%" y="133" width="0.3115%" height="15" fill="rgb(228,109,6)" fg:x="3288" fg:w="120"/><text x="8.8281%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.38%)</title><rect x="8.5352%" y="149" width="0.3764%" height="15" fill="rgb(238,117,24)" fg:x="3288" fg:w="145"/><text x="8.8281%" y="159.50"></text></g><g><title>__rust_realloc (97 instructions, 0.25%)</title><rect x="8.9116%" y="53" width="0.2518%" height="15" fill="rgb(242,26,26)" fg:x="3433" fg:w="97"/><text x="9.2045%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.35%)</title><rect x="8.9116%" y="69" width="0.3478%" height="15" fill="rgb(221,92,48)" fg:x="3433" fg:w="134"/><text x="9.2045%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.54%)</title><rect x="8.9116%" y="85" width="0.5425%" height="15" fill="rgb(209,209,32)" fg:x="3433" fg:w="209"/><text x="9.2045%" y="95.50"></text></g><g><title>memcpy (195 instructions, 0.51%)</title><rect x="9.4541%" y="85" width="0.5062%" height="15" fill="rgb(221,70,22)" fg:x="3642" fg:w="195"/><text x="9.7471%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (436 instructions, 1.13%)</title><rect x="8.9116%" y="101" width="1.1318%" height="15" fill="rgb(248,145,5)" fg:x="3433" fg:w="436"/><text x="9.2045%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="10.0434%" y="53" width="0.0234%" height="15" fill="rgb(226,116,26)" fg:x="3869" fg:w="9"/><text x="10.3363%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="10.0667%" y="37" width="0.0779%" height="15" fill="rgb(244,5,17)" fg:x="3878" fg:w="30"/><text x="10.3597%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="10.0667%" y="53" width="0.1428%" height="15" fill="rgb(252,159,33)" fg:x="3878" fg:w="55"/><text x="10.3597%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="10.0434%" y="69" width="0.3011%" height="15" fill="rgb(206,71,0)" fg:x="3869" fg:w="116"/><text x="10.3363%" y="79.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::UpperHex for i64&gt;::fmt (180 instructions, 0.47%)</title><rect x="10.0434%" y="85" width="0.4673%" height="15" fill="rgb(233,118,54)" fg:x="3869" fg:w="180"/><text x="10.3363%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.48%)</title><rect x="10.0434%" y="101" width="0.4776%" height="15" fill="rgb(234,83,48)" fg:x="3869" fg:w="184"/><text x="10.3363%" y="111.50"></text></g><g><title>memcpy (45 instructions, 0.12%)</title><rect x="10.5210%" y="85" width="0.1168%" height="15" fill="rgb(228,3,54)" fg:x="4053" fg:w="45"/><text x="10.8140%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.18%)</title><rect x="10.5210%" y="101" width="0.1817%" height="15" fill="rgb(226,155,13)" fg:x="4053" fg:w="70"/><text x="10.8140%" y="111.50"></text></g><g><title>core::fmt::write (815 instructions, 2.12%)</title><rect x="8.9116%" y="117" width="2.1156%" height="15" fill="rgb(241,28,37)" fg:x="3433" fg:w="815"/><text x="9.2045%" y="127.50">c..</text></g><g><title>core::fmt::Formatter::write_fmt (854 instructions, 2.22%)</title><rect x="8.9116%" y="133" width="2.2169%" height="15" fill="rgb(233,93,10)" fg:x="3433" fg:w="854"/><text x="9.2045%" y="143.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (909 instructions, 2.36%)</title><rect x="8.9116%" y="149" width="2.3596%" height="15" fill="rgb(225,113,19)" fg:x="3433" fg:w="909"/><text x="9.2045%" y="159.50">&lt;..</text></g><g><title>core::fmt::write (1,162 instructions, 3.02%)</title><rect x="8.5352%" y="165" width="3.0164%" height="15" fill="rgb(241,2,18)" fg:x="3288" fg:w="1162"/><text x="8.8281%" y="175.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,411 instructions, 3.66%)</title><rect x="8.2600%" y="181" width="3.6627%" height="15" fill="rgb(228,207,21)" fg:x="3182" fg:w="1411"/><text x="8.5530%" y="191.50">all..</text></g><g><title>binread::binary_template::write_comment (62 instructions, 0.16%)</title><rect x="11.9227%" y="181" width="0.1609%" height="15" fill="rgb(213,211,35)" fg:x="4593" fg:w="62"/><text x="12.2157%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.14%)</title><rect x="12.0837%" y="181" width="0.1428%" height="15" fill="rgb(209,83,10)" fg:x="4655" fg:w="55"/><text x="12.3767%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="12.2265%" y="181" width="0.1454%" height="15" fill="rgb(209,164,1)" fg:x="4710" fg:w="56"/><text x="12.5194%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="12.3718%" y="117" width="0.2414%" height="15" fill="rgb(213,184,43)" fg:x="4766" fg:w="93"/><text x="12.6648%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="12.3718%" y="133" width="0.2674%" height="15" fill="rgb(231,61,34)" fg:x="4766" fg:w="103"/><text x="12.6648%" y="143.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="12.3718%" y="149" width="0.2752%" height="15" fill="rgb(235,75,3)" fg:x="4766" fg:w="106"/><text x="12.6648%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.35%)</title><rect x="12.3718%" y="165" width="0.3530%" height="15" fill="rgb(220,106,47)" fg:x="4766" fg:w="136"/><text x="12.6648%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.53%)</title><rect x="12.3718%" y="181" width="0.5296%" height="15" fill="rgb(210,196,33)" fg:x="4766" fg:w="204"/><text x="12.6648%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="12.9014%" y="181" width="0.1402%" height="15" fill="rgb(229,154,42)" fg:x="4970" fg:w="54"/><text x="13.1944%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="13.0416%" y="149" width="0.2414%" height="15" fill="rgb(228,114,26)" fg:x="5024" fg:w="93"/><text x="13.3345%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="13.0416%" y="165" width="0.2674%" height="15" fill="rgb(208,144,1)" fg:x="5024" fg:w="103"/><text x="13.3345%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="13.0416%" y="181" width="0.2752%" height="15" fill="rgb(239,112,37)" fg:x="5024" fg:w="106"/><text x="13.3345%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="13.3167%" y="133" width="0.2414%" height="15" fill="rgb(210,96,50)" fg:x="5130" fg:w="93"/><text x="13.6097%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="13.3167%" y="149" width="0.2674%" height="15" fill="rgb(222,178,2)" fg:x="5130" fg:w="103"/><text x="13.6097%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="13.3167%" y="165" width="0.2752%" height="15" fill="rgb(226,74,18)" fg:x="5130" fg:w="106"/><text x="13.6097%" y="175.50"></text></g><g><title>memcpy (120 instructions, 0.31%)</title><rect x="13.5919%" y="133" width="0.3115%" height="15" fill="rgb(225,67,54)" fg:x="5236" fg:w="120"/><text x="13.8848%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.38%)</title><rect x="13.5919%" y="149" width="0.3764%" height="15" fill="rgb(251,92,32)" fg:x="5236" fg:w="145"/><text x="13.8848%" y="159.50"></text></g><g><title>__rust_realloc (97 instructions, 0.25%)</title><rect x="13.9683%" y="53" width="0.2518%" height="15" fill="rgb(228,149,22)" fg:x="5381" fg:w="97"/><text x="14.2612%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.35%)</title><rect x="13.9683%" y="69" width="0.3478%" height="15" fill="rgb(243,54,13)" fg:x="5381" fg:w="134"/><text x="14.2612%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.54%)</title><rect x="13.9683%" y="85" width="0.5425%" height="15" fill="rgb(243,180,28)" fg:x="5381" fg:w="209"/><text x="14.2612%" y="95.50"></text></g><g><title>memcpy (195 instructions, 0.51%)</title><rect x="14.5108%" y="85" width="0.5062%" height="15" fill="rgb(208,167,24)" fg:x="5590" fg:w="195"/><text x="14.8038%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (436 instructions, 1.13%)</title><rect x="13.9683%" y="101" width="1.1318%" height="15" fill="rgb(245,73,45)" fg:x="5381" fg:w="436"/><text x="14.2612%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="15.1001%" y="53" width="0.0234%" height="15" fill="rgb(237,203,48)" fg:x="5817" fg:w="9"/><text x="15.3930%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="15.1234%" y="37" width="0.0779%" height="15" fill="rgb(211,197,16)" fg:x="5826" fg:w="30"/><text x="15.4164%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="15.1234%" y="53" width="0.1428%" height="15" fill="rgb(243,99,51)" fg:x="5826" fg:w="55"/><text x="15.4164%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="15.1001%" y="69" width="0.3011%" height="15" fill="rgb(215,123,29)" fg:x="5817" fg:w="116"/><text x="15.3930%" y="79.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::UpperHex for i64&gt;::fmt (180 instructions, 0.47%)</title><rect x="15.1001%" y="85" width="0.4673%" height="15" fill="rgb(239,186,37)" fg:x="5817" fg:w="180"/><text x="15.3930%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.48%)</title><rect x="15.1001%" y="101" width="0.4776%" height="15" fill="rgb(252,136,39)" fg:x="5817" fg:w="184"/><text x="15.3930%" y="111.50"></text></g><g><title>memcpy (45 instructions, 0.12%)</title><rect x="15.5777%" y="85" width="0.1168%" height="15" fill="rgb(223,213,32)" fg:x="6001" fg:w="45"/><text x="15.8707%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.18%)</title><rect x="15.5777%" y="101" width="0.1817%" height="15" fill="rgb(233,115,5)" fg:x="6001" fg:w="70"/><text x="15.8707%" y="111.50"></text></g><g><title>core::fmt::write (815 instructions, 2.12%)</title><rect x="13.9683%" y="117" width="2.1156%" height="15" fill="rgb(207,226,44)" fg:x="5381" fg:w="815"/><text x="14.2612%" y="127.50">c..</text></g><g><title>core::fmt::Formatter::write_fmt (854 instructions, 2.22%)</title><rect x="13.9683%" y="133" width="2.2169%" height="15" fill="rgb(208,126,0)" fg:x="5381" fg:w="854"/><text x="14.2612%" y="143.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (909 instructions, 2.36%)</title><rect x="13.9683%" y="149" width="2.3596%" height="15" fill="rgb(244,66,21)" fg:x="5381" fg:w="909"/><text x="14.2612%" y="159.50">&lt;..</text></g><g><title>core::fmt::write (1,162 instructions, 3.02%)</title><rect x="13.5919%" y="165" width="3.0164%" height="15" fill="rgb(222,97,12)" fg:x="5236" fg:w="1162"/><text x="13.8848%" y="175.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,411 instructions, 3.66%)</title><rect x="13.3167%" y="181" width="3.6627%" height="15" fill="rgb(219,213,19)" fg:x="5130" fg:w="1411"/><text x="13.6097%" y="191.50">all..</text></g><g><title>binread::binary_template::write_comment (62 instructions, 0.16%)</title><rect x="16.9795%" y="181" width="0.1609%" height="15" fill="rgb(252,169,30)" fg:x="6541" fg:w="62"/><text x="17.2724%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.14%)</title><rect x="17.1404%" y="181" width="0.1428%" height="15" fill="rgb(206,32,51)" fg:x="6603" fg:w="55"/><text x="17.4334%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="17.2832%" y="181" width="0.1454%" height="15" fill="rgb(250,172,42)" fg:x="6658" fg:w="56"/><text x="17.5762%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.14%)</title><rect x="17.4285%" y="181" width="0.1402%" height="15" fill="rgb(209,34,43)" fg:x="6714" fg:w="54"/><text x="17.7215%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="17.5687%" y="165" width="0.1583%" height="15" fill="rgb(223,11,35)" fg:x="6768" fg:w="61"/><text x="17.8617%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.25%)</title><rect x="17.7271%" y="165" width="0.2518%" height="15" fill="rgb(251,219,26)" fg:x="6829" fg:w="97"/><text x="18.0200%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="17.9789%" y="149" width="0.0104%" height="15" fill="rgb(231,119,3)" fg:x="6926" fg:w="4"/><text x="18.2718%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 1.06%)</title><rect x="17.9789%" y="165" width="1.0565%" height="15" fill="rgb(216,97,11)" fg:x="6926" fg:w="407"/><text x="18.2718%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="19.0354%" y="165" width="0.0415%" height="15" fill="rgb(223,59,9)" fg:x="7333" fg:w="16"/><text x="19.3284%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="19.0769%" y="101" width="0.2414%" height="15" fill="rgb(233,93,31)" fg:x="7349" fg:w="93"/><text x="19.3699%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="19.0769%" y="117" width="0.2674%" height="15" fill="rgb(239,81,33)" fg:x="7349" fg:w="103"/><text x="19.3699%" y="127.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="19.0769%" y="133" width="0.2752%" height="15" fill="rgb(213,120,34)" fg:x="7349" fg:w="106"/><text x="19.3699%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.16%)</title><rect x="19.3521%" y="101" width="0.1558%" height="15" fill="rgb(243,49,53)" fg:x="7455" fg:w="60"/><text x="19.6450%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.22%)</title><rect x="19.3521%" y="117" width="0.2206%" height="15" fill="rgb(247,216,33)" fg:x="7455" fg:w="85"/><text x="19.6450%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="19.5727%" y="69" width="0.0234%" height="15" fill="rgb(226,26,14)" fg:x="7540" fg:w="9"/><text x="19.8657%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="19.5961%" y="53" width="0.0779%" height="15" fill="rgb(215,49,53)" fg:x="7549" fg:w="30"/><text x="19.8891%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="19.5961%" y="69" width="0.1428%" height="15" fill="rgb(245,162,40)" fg:x="7549" fg:w="55"/><text x="19.8891%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="19.5727%" y="85" width="0.3011%" height="15" fill="rgb(229,68,17)" fg:x="7540" fg:w="116"/><text x="19.8657%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.44%)</title><rect x="19.5727%" y="101" width="0.4387%" height="15" fill="rgb(213,182,10)" fg:x="7540" fg:w="169"/><text x="19.8657%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.45%)</title><rect x="19.5727%" y="117" width="0.4517%" height="15" fill="rgb(245,125,30)" fg:x="7540" fg:w="174"/><text x="19.8657%" y="127.50"></text></g><g><title>core::fmt::write (367 instructions, 0.95%)</title><rect x="19.3521%" y="133" width="0.9527%" height="15" fill="rgb(232,202,2)" fg:x="7455" fg:w="367"/><text x="19.6450%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.60%)</title><rect x="19.0769%" y="149" width="1.5990%" height="15" fill="rgb(237,140,51)" fg:x="7349" fg:w="616"/><text x="19.3699%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.19%)</title><rect x="20.6760%" y="149" width="0.1921%" height="15" fill="rgb(236,157,25)" fg:x="7965" fg:w="74"/><text x="20.9689%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.14%)</title><rect x="20.8681%" y="149" width="0.1428%" height="15" fill="rgb(219,209,0)" fg:x="8039" fg:w="55"/><text x="21.1610%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 2.12%)</title><rect x="19.0769%" y="165" width="2.1182%" height="15" fill="rgb(240,116,54)" fg:x="7349" fg:w="816"/><text x="19.3699%" y="175.50">b..</text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="21.1951%" y="149" width="0.1583%" height="15" fill="rgb(216,10,36)" fg:x="8165" fg:w="61"/><text x="21.4881%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (309 instructions, 0.80%)</title><rect x="21.3535%" y="149" width="0.8021%" height="15" fill="rgb(222,72,44)" fg:x="8226" fg:w="309"/><text x="21.6464%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="22.1556%" y="133" width="0.1583%" height="15" fill="rgb(232,159,9)" fg:x="8535" fg:w="61"/><text x="22.4486%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.33%)</title><rect x="22.3139%" y="133" width="0.3271%" height="15" fill="rgb(210,39,32)" fg:x="8596" fg:w="126"/><text x="22.6069%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="22.6410%" y="133" width="0.1454%" height="15" fill="rgb(216,194,45)" fg:x="8722" fg:w="56"/><text x="22.9340%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.79%)</title><rect x="22.1556%" y="149" width="0.7917%" height="15" fill="rgb(218,18,35)" fg:x="8535" fg:w="305"/><text x="22.4486%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="22.9473%" y="149" width="0.1454%" height="15" fill="rgb(207,83,51)" fg:x="8840" fg:w="56"/><text x="23.2403%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::FieldType as binread::BinRead&gt;::read_options (832 instructions, 2.16%)</title><rect x="21.1951%" y="165" width="2.1597%" height="15" fill="rgb(225,63,43)" fg:x="8165" fg:w="832"/><text x="21.4881%" y="175.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="23.3549%" y="133" width="0.2414%" height="15" fill="rgb(207,57,36)" fg:x="8997" fg:w="93"/><text x="23.6478%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="23.3549%" y="149" width="0.2674%" height="15" fill="rgb(216,99,33)" fg:x="8997" fg:w="103"/><text x="23.6478%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="23.3549%" y="165" width="0.2752%" height="15" fill="rgb(225,42,16)" fg:x="8997" fg:w="106"/><text x="23.6478%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="23.6300%" y="165" width="0.1454%" height="15" fill="rgb(220,201,45)" fg:x="9103" fg:w="56"/><text x="23.9230%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,737 instructions, 7.10%)</title><rect x="17.5687%" y="181" width="7.1048%" height="15" fill="rgb(225,33,4)" fg:x="6768" fg:w="2737"/><text x="17.8617%" y="191.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="24.6736%" y="165" width="0.2103%" height="15" fill="rgb(224,33,50)" fg:x="9505" fg:w="81"/><text x="24.9665%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.20%)</title><rect x="24.9643%" y="165" width="0.2025%" height="15" fill="rgb(246,198,51)" fg:x="9617" fg:w="78"/><text x="25.2573%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (221 instructions, 0.57%)</title><rect x="24.6736%" y="181" width="0.5737%" height="15" fill="rgb(205,22,4)" fg:x="9505" fg:w="221"/><text x="24.9665%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.43%)</title><rect x="25.2473%" y="181" width="0.4309%" height="15" fill="rgb(206,3,8)" fg:x="9726" fg:w="166"/><text x="25.5402%" y="191.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,484 instructions, 19.43%)</title><rect x="7.8447%" y="197" width="19.4274%" height="15" fill="rgb(251,23,15)" fg:x="3022" fg:w="7484"/><text x="8.1376%" y="207.50">&lt;candid::binary_parser::Co..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (69 instructions, 0.18%)</title><rect x="27.2720%" y="165" width="0.1791%" height="15" fill="rgb(252,88,28)" fg:x="10506" fg:w="69"/><text x="27.5650%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.21%)</title><rect x="27.2720%" y="181" width="0.2051%" height="15" fill="rgb(212,127,14)" fg:x="10506" fg:w="79"/><text x="27.5650%" y="191.50"></text></g><g><title>__rust_alloc (82 instructions, 0.21%)</title><rect x="27.2720%" y="197" width="0.2129%" height="15" fill="rgb(247,145,37)" fg:x="10506" fg:w="82"/><text x="27.5650%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="27.4849%" y="197" width="0.1454%" height="15" fill="rgb(209,117,53)" fg:x="10588" fg:w="56"/><text x="27.7778%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.25%)</title><rect x="27.6302%" y="197" width="0.2518%" height="15" fill="rgb(212,90,42)" fg:x="10644" fg:w="97"/><text x="27.9232%" y="207.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="27.8820%" y="165" width="0.0104%" height="15" fill="rgb(218,164,37)" fg:x="10741" fg:w="4"/><text x="28.1750%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 1.06%)</title><rect x="27.8820%" y="181" width="1.0565%" height="15" fill="rgb(246,65,34)" fg:x="10741" fg:w="407"/><text x="28.1750%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="28.9386%" y="181" width="0.0415%" height="15" fill="rgb(231,100,33)" fg:x="11148" fg:w="16"/><text x="29.2315%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.35%)</title><rect x="28.9801%" y="117" width="0.3530%" height="15" fill="rgb(228,126,14)" fg:x="11164" fg:w="136"/><text x="29.2731%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.38%)</title><rect x="28.9801%" y="133" width="0.3790%" height="15" fill="rgb(215,173,21)" fg:x="11164" fg:w="146"/><text x="29.2731%" y="143.50"></text></g><g><title>__rust_alloc (149 instructions, 0.39%)</title><rect x="28.9801%" y="149" width="0.3868%" height="15" fill="rgb(210,6,40)" fg:x="11164" fg:w="149"/><text x="29.2731%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.16%)</title><rect x="29.3669%" y="117" width="0.1558%" height="15" fill="rgb(212,48,18)" fg:x="11313" fg:w="60"/><text x="29.6598%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.22%)</title><rect x="29.3669%" y="133" width="0.2206%" height="15" fill="rgb(230,214,11)" fg:x="11313" fg:w="85"/><text x="29.6598%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="29.5875%" y="85" width="0.0234%" height="15" fill="rgb(254,105,39)" fg:x="11398" fg:w="9"/><text x="29.8805%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="29.6109%" y="69" width="0.0779%" height="15" fill="rgb(245,158,5)" fg:x="11407" fg:w="30"/><text x="29.9039%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="29.6109%" y="85" width="0.1428%" height="15" fill="rgb(249,208,11)" fg:x="11407" fg:w="55"/><text x="29.9039%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="29.5875%" y="101" width="0.3011%" height="15" fill="rgb(210,39,28)" fg:x="11398" fg:w="116"/><text x="29.8805%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.44%)</title><rect x="29.5875%" y="117" width="0.4387%" height="15" fill="rgb(211,56,53)" fg:x="11398" fg:w="169"/><text x="29.8805%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.45%)</title><rect x="29.5875%" y="133" width="0.4517%" height="15" fill="rgb(226,201,30)" fg:x="11398" fg:w="174"/><text x="29.8805%" y="143.50"></text></g><g><title>core::fmt::write (367 instructions, 0.95%)</title><rect x="29.3669%" y="149" width="0.9527%" height="15" fill="rgb(239,101,34)" fg:x="11313" fg:w="367"/><text x="29.6598%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (659 instructions, 1.71%)</title><rect x="28.9801%" y="165" width="1.7107%" height="15" fill="rgb(226,209,5)" fg:x="11164" fg:w="659"/><text x="29.2731%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.19%)</title><rect x="30.6908%" y="165" width="0.1921%" height="15" fill="rgb(250,105,47)" fg:x="11823" fg:w="74"/><text x="30.9837%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.14%)</title><rect x="30.8828%" y="165" width="0.1402%" height="15" fill="rgb(230,72,3)" fg:x="11897" fg:w="54"/><text x="31.1758%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (858 instructions, 2.23%)</title><rect x="28.9801%" y="181" width="2.2272%" height="15" fill="rgb(232,218,39)" fg:x="11164" fg:w="858"/><text x="29.2731%" y="191.50">b..</text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="31.2073%" y="165" width="0.1583%" height="15" fill="rgb(248,166,6)" fg:x="12022" fg:w="61"/><text x="31.5003%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.33%)</title><rect x="31.3657%" y="165" width="0.3271%" height="15" fill="rgb(247,89,20)" fg:x="12083" fg:w="126"/><text x="31.6586%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="31.6928%" y="165" width="0.1454%" height="15" fill="rgb(248,130,54)" fg:x="12209" fg:w="56"/><text x="31.9857%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.79%)</title><rect x="31.2073%" y="181" width="0.7917%" height="15" fill="rgb(234,196,4)" fg:x="12022" fg:w="305"/><text x="31.5003%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="31.9991%" y="149" width="0.2336%" height="15" fill="rgb(250,143,31)" fg:x="12327" fg:w="90"/><text x="32.2920%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="31.9991%" y="165" width="0.2596%" height="15" fill="rgb(211,110,34)" fg:x="12327" fg:w="100"/><text x="32.2920%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="31.9991%" y="181" width="0.2674%" height="15" fill="rgb(215,124,48)" fg:x="12327" fg:w="103"/><text x="32.2920%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,914 instructions, 4.97%)</title><rect x="27.8820%" y="197" width="4.9685%" height="15" fill="rgb(216,46,13)" fg:x="10741" fg:w="1914"/><text x="28.1750%" y="207.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="32.8505%" y="197" width="0.1454%" height="15" fill="rgb(205,184,25)" fg:x="12655" fg:w="56"/><text x="33.1435%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="32.9959%" y="165" width="0.2336%" height="15" fill="rgb(228,1,10)" fg:x="12711" fg:w="90"/><text x="33.2888%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="32.9959%" y="181" width="0.2596%" height="15" fill="rgb(213,116,27)" fg:x="12711" fg:w="100"/><text x="33.2888%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="32.9959%" y="197" width="0.2674%" height="15" fill="rgb(241,95,50)" fg:x="12711" fg:w="103"/><text x="33.2888%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="33.2632%" y="149" width="0.2336%" height="15" fill="rgb(238,48,32)" fg:x="12814" fg:w="90"/><text x="33.5562%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="33.2632%" y="165" width="0.2596%" height="15" fill="rgb(235,113,49)" fg:x="12814" fg:w="100"/><text x="33.5562%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="33.2632%" y="181" width="0.2674%" height="15" fill="rgb(205,127,43)" fg:x="12814" fg:w="103"/><text x="33.5562%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (183 instructions, 0.48%)</title><rect x="33.2632%" y="197" width="0.4750%" height="15" fill="rgb(250,162,2)" fg:x="12814" fg:w="183"/><text x="33.5562%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.23%)</title><rect x="33.7383%" y="133" width="0.2310%" height="15" fill="rgb(220,13,41)" fg:x="12997" fg:w="89"/><text x="34.0313%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.26%)</title><rect x="33.7383%" y="149" width="0.2570%" height="15" fill="rgb(249,221,25)" fg:x="12997" fg:w="99"/><text x="34.0313%" y="159.50"></text></g><g><title>__rust_alloc (102 instructions, 0.26%)</title><rect x="33.7383%" y="165" width="0.2648%" height="15" fill="rgb(215,208,19)" fg:x="12997" fg:w="102"/><text x="34.0313%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.34%)</title><rect x="33.7383%" y="181" width="0.3427%" height="15" fill="rgb(236,175,2)" fg:x="12997" fg:w="132"/><text x="34.0313%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (200 instructions, 0.52%)</title><rect x="33.7383%" y="197" width="0.5192%" height="15" fill="rgb(241,52,2)" fg:x="12997" fg:w="200"/><text x="34.0313%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="34.2575%" y="165" width="0.2414%" height="15" fill="rgb(248,140,14)" fg:x="13197" fg:w="93"/><text x="34.5504%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="34.2575%" y="181" width="0.2674%" height="15" fill="rgb(253,22,42)" fg:x="13197" fg:w="103"/><text x="34.5504%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="34.2575%" y="197" width="0.2752%" height="15" fill="rgb(234,61,47)" fg:x="13197" fg:w="106"/><text x="34.5504%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="34.5326%" y="149" width="0.2414%" height="15" fill="rgb(208,226,15)" fg:x="13303" fg:w="93"/><text x="34.8256%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="34.5326%" y="165" width="0.2674%" height="15" fill="rgb(217,221,4)" fg:x="13303" fg:w="103"/><text x="34.8256%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="34.5326%" y="181" width="0.2752%" height="15" fill="rgb(212,174,34)" fg:x="13303" fg:w="106"/><text x="34.8256%" y="191.50"></text></g><g><title>memcpy (90 instructions, 0.23%)</title><rect x="34.8078%" y="149" width="0.2336%" height="15" fill="rgb(253,83,4)" fg:x="13409" fg:w="90"/><text x="35.1007%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.30%)</title><rect x="34.8078%" y="165" width="0.2985%" height="15" fill="rgb(250,195,49)" fg:x="13409" fg:w="115"/><text x="35.1007%" y="175.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="35.1063%" y="117" width="0.0234%" height="15" fill="rgb(241,192,25)" fg:x="13524" fg:w="9"/><text x="35.3993%" y="127.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="35.1297%" y="101" width="0.0779%" height="15" fill="rgb(208,124,10)" fg:x="13533" fg:w="30"/><text x="35.4226%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="35.1297%" y="117" width="0.1428%" height="15" fill="rgb(222,33,0)" fg:x="13533" fg:w="55"/><text x="35.4226%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="35.1063%" y="133" width="0.3011%" height="15" fill="rgb(234,209,28)" fg:x="13524" fg:w="116"/><text x="35.3993%" y="143.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.44%)</title><rect x="35.1063%" y="149" width="0.4387%" height="15" fill="rgb(224,11,23)" fg:x="13524" fg:w="169"/><text x="35.3993%" y="159.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (184 instructions, 0.48%)</title><rect x="35.1063%" y="165" width="0.4776%" height="15" fill="rgb(232,99,1)" fg:x="13524" fg:w="184"/><text x="35.3993%" y="175.50"></text></g><g><title>core::fmt::write (407 instructions, 1.06%)</title><rect x="34.8078%" y="181" width="1.0565%" height="15" fill="rgb(237,95,45)" fg:x="13409" fg:w="407"/><text x="35.1007%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (656 instructions, 1.70%)</title><rect x="34.5326%" y="197" width="1.7029%" height="15" fill="rgb(208,109,11)" fg:x="13303" fg:w="656"/><text x="34.8256%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="36.2355%" y="149" width="0.2414%" height="15" fill="rgb(216,190,48)" fg:x="13959" fg:w="93"/><text x="36.5285%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="36.2355%" y="165" width="0.2674%" height="15" fill="rgb(251,171,36)" fg:x="13959" fg:w="103"/><text x="36.5285%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="36.2355%" y="181" width="0.2752%" height="15" fill="rgb(230,62,22)" fg:x="13959" fg:w="106"/><text x="36.5285%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (201 instructions, 0.52%)</title><rect x="36.2355%" y="197" width="0.5218%" height="15" fill="rgb(225,114,35)" fg:x="13959" fg:w="201"/><text x="36.5285%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.24%)</title><rect x="36.7573%" y="197" width="0.2388%" height="15" fill="rgb(215,118,42)" fg:x="14160" fg:w="92"/><text x="37.0502%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="36.9961%" y="197" width="0.0337%" height="15" fill="rgb(243,119,21)" fg:x="14252" fg:w="13"/><text x="37.2890%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.24%)</title><rect x="37.0298%" y="197" width="0.2388%" height="15" fill="rgb(252,177,53)" fg:x="14265" fg:w="92"/><text x="37.3228%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="37.2686%" y="149" width="0.2414%" height="15" fill="rgb(237,209,29)" fg:x="14357" fg:w="93"/><text x="37.5616%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="37.2686%" y="165" width="0.2674%" height="15" fill="rgb(212,65,23)" fg:x="14357" fg:w="103"/><text x="37.5616%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="37.2686%" y="181" width="0.2752%" height="15" fill="rgb(230,222,46)" fg:x="14357" fg:w="106"/><text x="37.5616%" y="191.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (175 instructions, 0.45%)</title><rect x="37.2686%" y="197" width="0.4543%" height="15" fill="rgb(215,135,32)" fg:x="14357" fg:w="175"/><text x="37.5616%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.06%)</title><rect x="37.7229%" y="181" width="0.0597%" height="15" fill="rgb(246,101,22)" fg:x="14532" fg:w="23"/><text x="38.0159%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (88 instructions, 0.23%)</title><rect x="37.7229%" y="197" width="0.2284%" height="15" fill="rgb(206,107,13)" fg:x="14532" fg:w="88"/><text x="38.0159%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.14%)</title><rect x="38.0085%" y="181" width="0.1428%" height="15" fill="rgb(250,100,44)" fg:x="14642" fg:w="55"/><text x="38.3014%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (179 instructions, 0.46%)</title><rect x="37.9514%" y="197" width="0.4647%" height="15" fill="rgb(231,147,38)" fg:x="14620" fg:w="179"/><text x="38.2443%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="38.4160%" y="197" width="0.0337%" height="15" fill="rgb(229,8,40)" fg:x="14799" fg:w="13"/><text x="38.7090%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.06%)</title><rect x="38.4498%" y="197" width="0.0571%" height="15" fill="rgb(221,135,30)" fg:x="14812" fg:w="22"/><text x="38.7427%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="38.5069%" y="133" width="0.2414%" height="15" fill="rgb(249,193,18)" fg:x="14834" fg:w="93"/><text x="38.7998%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="38.5069%" y="149" width="0.2674%" height="15" fill="rgb(209,133,39)" fg:x="14834" fg:w="103"/><text x="38.7998%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="38.5069%" y="165" width="0.2752%" height="15" fill="rgb(232,100,14)" fg:x="14834" fg:w="106"/><text x="38.7998%" y="175.50"></text></g><g><title>memcpy (90 instructions, 0.23%)</title><rect x="38.7820%" y="133" width="0.2336%" height="15" fill="rgb(224,185,1)" fg:x="14940" fg:w="90"/><text x="39.0750%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.30%)</title><rect x="38.7820%" y="149" width="0.2985%" height="15" fill="rgb(223,139,8)" fg:x="14940" fg:w="115"/><text x="39.0750%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="39.0805%" y="101" width="0.0234%" height="15" fill="rgb(232,213,38)" fg:x="15055" fg:w="9"/><text x="39.3735%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="39.1039%" y="85" width="0.0779%" height="15" fill="rgb(207,94,22)" fg:x="15064" fg:w="30"/><text x="39.3969%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.14%)</title><rect x="39.1039%" y="101" width="0.1428%" height="15" fill="rgb(219,183,54)" fg:x="15064" fg:w="55"/><text x="39.3969%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.30%)</title><rect x="39.0805%" y="117" width="0.3011%" height="15" fill="rgb(216,185,54)" fg:x="15055" fg:w="116"/><text x="39.3735%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.44%)</title><rect x="39.0805%" y="133" width="0.4387%" height="15" fill="rgb(254,217,39)" fg:x="15055" fg:w="169"/><text x="39.3735%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (184 instructions, 0.48%)</title><rect x="39.0805%" y="149" width="0.4776%" height="15" fill="rgb(240,178,23)" fg:x="15055" fg:w="184"/><text x="39.3735%" y="159.50"></text></g><g><title>core::fmt::write (407 instructions, 1.06%)</title><rect x="38.7820%" y="165" width="1.0565%" height="15" fill="rgb(218,11,47)" fg:x="14940" fg:w="407"/><text x="39.0750%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (656 instructions, 1.70%)</title><rect x="38.5069%" y="181" width="1.7029%" height="15" fill="rgb(218,51,51)" fg:x="14834" fg:w="656"/><text x="38.7998%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="40.2097%" y="149" width="0.2414%" height="15" fill="rgb(238,126,27)" fg:x="15490" fg:w="93"/><text x="40.5027%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="40.2097%" y="165" width="0.2674%" height="15" fill="rgb(249,202,22)" fg:x="15490" fg:w="103"/><text x="40.5027%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="40.2097%" y="181" width="0.2752%" height="15" fill="rgb(254,195,49)" fg:x="15490" fg:w="106"/><text x="40.5027%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (876 instructions, 2.27%)</title><rect x="38.5069%" y="197" width="2.2740%" height="15" fill="rgb(208,123,14)" fg:x="14834" fg:w="876"/><text x="38.7998%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="40.7808%" y="133" width="0.2414%" height="15" fill="rgb(224,200,8)" fg:x="15710" fg:w="93"/><text x="41.0738%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="40.7808%" y="149" width="0.2674%" height="15" fill="rgb(217,61,36)" fg:x="15710" fg:w="103"/><text x="41.0738%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="40.7808%" y="165" width="0.2752%" height="15" fill="rgb(206,35,45)" fg:x="15710" fg:w="106"/><text x="41.0738%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.35%)</title><rect x="40.7808%" y="181" width="0.3530%" height="15" fill="rgb(217,65,33)" fg:x="15710" fg:w="136"/><text x="41.0738%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.53%)</title><rect x="40.7808%" y="197" width="0.5296%" height="15" fill="rgb(222,158,48)" fg:x="15710" fg:w="204"/><text x="41.0738%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="41.3104%" y="165" width="0.2414%" height="15" fill="rgb(254,2,54)" fg:x="15914" fg:w="93"/><text x="41.6034%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="41.3104%" y="181" width="0.2674%" height="15" fill="rgb(250,143,38)" fg:x="15914" fg:w="103"/><text x="41.6034%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="41.3104%" y="197" width="0.2752%" height="15" fill="rgb(248,25,0)" fg:x="15914" fg:w="106"/><text x="41.6034%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="41.5855%" y="197" width="0.2103%" height="15" fill="rgb(206,152,27)" fg:x="16020" fg:w="81"/><text x="41.8785%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="41.7958%" y="165" width="0.2414%" height="15" fill="rgb(240,77,30)" fg:x="16101" fg:w="93"/><text x="42.0888%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="41.7958%" y="181" width="0.2674%" height="15" fill="rgb(231,5,3)" fg:x="16101" fg:w="103"/><text x="42.0888%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="42.0710%" y="165" width="0.2414%" height="15" fill="rgb(207,226,32)" fg:x="16207" fg:w="93"/><text x="42.3639%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="42.0710%" y="181" width="0.2674%" height="15" fill="rgb(222,207,47)" fg:x="16207" fg:w="103"/><text x="42.3639%" y="191.50"></text></g><g><title>__rust_alloc (212 instructions, 0.55%)</title><rect x="41.7958%" y="197" width="0.5503%" height="15" fill="rgb(229,115,45)" fg:x="16101" fg:w="212"/><text x="42.0888%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (33 instructions, 0.09%)</title><rect x="42.3461%" y="197" width="0.0857%" height="15" fill="rgb(224,191,6)" fg:x="16313" fg:w="33"/><text x="42.6391%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="42.4318%" y="181" width="0.2103%" height="15" fill="rgb(230,227,24)" fg:x="16346" fg:w="81"/><text x="42.7248%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::binary_parser::ConsType&gt; (96 instructions, 0.25%)</title><rect x="42.4318%" y="197" width="0.2492%" height="15" fill="rgb(228,80,19)" fg:x="16346" fg:w="96"/><text x="42.7248%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.18%)</title><rect x="42.6810%" y="181" width="0.1843%" height="15" fill="rgb(247,229,0)" fg:x="16442" fg:w="71"/><text x="42.9740%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (174 instructions, 0.45%)</title><rect x="42.6810%" y="197" width="0.4517%" height="15" fill="rgb(237,194,15)" fg:x="16442" fg:w="174"/><text x="42.9740%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="43.1327%" y="197" width="0.2103%" height="15" fill="rgb(219,203,20)" fg:x="16616" fg:w="81"/><text x="43.4256%" y="207.50"></text></g><g><title>memcpy (411 instructions, 1.07%)</title><rect x="43.3429%" y="197" width="1.0669%" height="15" fill="rgb(234,128,8)" fg:x="16697" fg:w="411"/><text x="43.6359%" y="207.50"></text></g><g><title>memcpy (366 instructions, 0.95%)</title><rect x="44.4098%" y="197" width="0.9501%" height="15" fill="rgb(248,202,8)" fg:x="17108" fg:w="366"/><text x="44.7028%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (18,769 instructions, 48.72%)</title><rect x="1.9858%" y="213" width="48.7215%" height="15" fill="rgb(206,104,37)" fg:x="765" fg:w="18769"/><text x="2.2788%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (381 instructions, 0.99%)</title><rect x="50.7074%" y="213" width="0.9890%" height="15" fill="rgb(223,8,27)" fg:x="19534" fg:w="381"/><text x="51.0003%" y="223.50"></text></g><g><title>memcpy (381 instructions, 0.99%)</title><rect x="51.6964%" y="213" width="0.9890%" height="15" fill="rgb(216,217,28)" fg:x="19915" fg:w="381"/><text x="51.9894%" y="223.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.04%)</title><rect x="52.6854%" y="197" width="0.0363%" height="15" fill="rgb(249,199,1)" fg:x="20296" fg:w="14"/><text x="52.9784%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.02%)</title><rect x="52.7218%" y="197" width="0.0156%" height="15" fill="rgb(240,85,17)" fg:x="20310" fg:w="6"/><text x="53.0147%" y="207.50"></text></g><g><title>candid::types::internal::find_type (143 instructions, 0.37%)</title><rect x="52.6854%" y="213" width="0.3712%" height="15" fill="rgb(206,108,45)" fg:x="20296" fg:w="143"/><text x="52.9784%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.14%)</title><rect x="53.0566%" y="149" width="0.1402%" height="15" fill="rgb(245,210,41)" fg:x="20439" fg:w="54"/><text x="53.3496%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.46%)</title><rect x="53.0566%" y="165" width="0.4621%" height="15" fill="rgb(206,13,37)" fg:x="20439" fg:w="178"/><text x="53.3496%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (188 instructions, 0.49%)</title><rect x="53.0566%" y="181" width="0.4880%" height="15" fill="rgb(250,61,18)" fg:x="20439" fg:w="188"/><text x="53.3496%" y="191.50"></text></g><g><title>__rust_alloc (191 instructions, 0.50%)</title><rect x="53.0566%" y="197" width="0.4958%" height="15" fill="rgb(235,172,48)" fg:x="20439" fg:w="191"/><text x="53.3496%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (237 instructions, 0.62%)</title><rect x="53.0566%" y="213" width="0.6152%" height="15" fill="rgb(249,201,17)" fg:x="20439" fg:w="237"/><text x="53.3496%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.6718%" y="181" width="0.0130%" height="15" fill="rgb(219,208,6)" fg:x="20676" fg:w="5"/><text x="53.9648%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="53.6848%" y="165" width="0.1376%" height="15" fill="rgb(248,31,23)" fg:x="20681" fg:w="53"/><text x="53.9778%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.79%)</title><rect x="53.8224%" y="165" width="0.7917%" height="15" fill="rgb(245,15,42)" fg:x="20734" fg:w="305"/><text x="54.1154%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.19%)</title><rect x="54.6141%" y="165" width="0.1895%" height="15" fill="rgb(222,217,39)" fg:x="21039" fg:w="73"/><text x="54.9071%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.75%)</title><rect x="53.6848%" y="181" width="1.7496%" height="15" fill="rgb(210,219,27)" fg:x="20681" fg:w="674"/><text x="53.9778%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="55.4344%" y="133" width="0.2336%" height="15" fill="rgb(252,166,36)" fg:x="21355" fg:w="90"/><text x="55.7274%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="55.4344%" y="149" width="0.2596%" height="15" fill="rgb(245,132,34)" fg:x="21355" fg:w="100"/><text x="55.7274%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="55.4344%" y="165" width="0.2674%" height="15" fill="rgb(236,54,3)" fg:x="21355" fg:w="103"/><text x="55.7274%" y="175.50"></text></g><g><title>memset (136 instructions, 0.35%)</title><rect x="55.7018%" y="165" width="0.3530%" height="15" fill="rgb(241,173,43)" fg:x="21458" fg:w="136"/><text x="55.9948%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (345 instructions, 0.90%)</title><rect x="55.4344%" y="181" width="0.8956%" height="15" fill="rgb(215,190,9)" fg:x="21355" fg:w="345"/><text x="55.7274%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,420 instructions, 3.69%)</title><rect x="53.6718%" y="197" width="3.6861%" height="15" fill="rgb(242,101,16)" fg:x="20676" fg:w="1420"/><text x="53.9648%" y="207.50">std..</text></g><g><title>candid::types::internal::env_add (1,446 instructions, 3.75%)</title><rect x="53.6718%" y="213" width="3.7536%" height="15" fill="rgb(223,190,21)" fg:x="20676" fg:w="1446"/><text x="53.9648%" y="223.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.24%)</title><rect x="57.4254%" y="181" width="0.2440%" height="15" fill="rgb(215,228,25)" fg:x="22122" fg:w="94"/><text x="57.7184%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.27%)</title><rect x="57.4254%" y="197" width="0.2700%" height="15" fill="rgb(225,36,22)" fg:x="22122" fg:w="104"/><text x="57.7184%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="57.7032%" y="181" width="0.2336%" height="15" fill="rgb(251,106,46)" fg:x="22229" fg:w="90"/><text x="57.9962%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="57.7032%" y="197" width="0.2596%" height="15" fill="rgb(208,90,1)" fg:x="22229" fg:w="100"/><text x="57.9962%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.24%)</title><rect x="57.9706%" y="181" width="0.2440%" height="15" fill="rgb(243,10,4)" fg:x="22332" fg:w="94"/><text x="58.2635%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.27%)</title><rect x="57.9706%" y="197" width="0.2700%" height="15" fill="rgb(212,137,27)" fg:x="22332" fg:w="104"/><text x="58.2635%" y="207.50"></text></g><g><title>__rust_alloc (317 instructions, 0.82%)</title><rect x="57.4254%" y="213" width="0.8229%" height="15" fill="rgb(231,220,49)" fg:x="22122" fg:w="317"/><text x="57.7184%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="58.2483%" y="149" width="0.1376%" height="15" fill="rgb(237,96,20)" fg:x="22439" fg:w="53"/><text x="58.5413%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.79%)</title><rect x="58.3859%" y="149" width="0.7917%" height="15" fill="rgb(239,229,30)" fg:x="22492" fg:w="305"/><text x="58.6789%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.19%)</title><rect x="59.1776%" y="149" width="0.1895%" height="15" fill="rgb(219,65,33)" fg:x="22797" fg:w="73"/><text x="59.4706%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.75%)</title><rect x="58.2483%" y="165" width="1.7496%" height="15" fill="rgb(243,134,7)" fg:x="22439" fg:w="674"/><text x="58.5413%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (754 instructions, 1.96%)</title><rect x="58.2483%" y="181" width="1.9573%" height="15" fill="rgb(216,177,54)" fg:x="22439" fg:w="754"/><text x="58.5413%" y="191.50"></text></g><g><title>candid::types::internal::find_type (793 instructions, 2.06%)</title><rect x="58.2483%" y="197" width="2.0585%" height="15" fill="rgb(211,160,20)" fg:x="22439" fg:w="793"/><text x="58.5413%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="60.3068%" y="149" width="0.2336%" height="15" fill="rgb(239,85,39)" fg:x="23232" fg:w="90"/><text x="60.5998%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="60.3068%" y="165" width="0.2596%" height="15" fill="rgb(232,125,22)" fg:x="23232" fg:w="100"/><text x="60.5998%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="60.3068%" y="181" width="0.2674%" height="15" fill="rgb(244,57,34)" fg:x="23232" fg:w="103"/><text x="60.5998%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (149 instructions, 0.39%)</title><rect x="60.3068%" y="197" width="0.3868%" height="15" fill="rgb(214,203,32)" fg:x="23232" fg:w="149"/><text x="60.5998%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.6936%" y="165" width="0.0130%" height="15" fill="rgb(207,58,43)" fg:x="23381" fg:w="5"/><text x="60.9866%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="60.7066%" y="149" width="0.1376%" height="15" fill="rgb(215,193,15)" fg:x="23386" fg:w="53"/><text x="60.9996%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.79%)</title><rect x="60.8442%" y="149" width="0.7917%" height="15" fill="rgb(232,15,44)" fg:x="23439" fg:w="305"/><text x="61.1371%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.19%)</title><rect x="61.6359%" y="149" width="0.1895%" height="15" fill="rgb(212,3,48)" fg:x="23744" fg:w="73"/><text x="61.9289%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.75%)</title><rect x="60.7066%" y="165" width="1.7496%" height="15" fill="rgb(218,128,7)" fg:x="23386" fg:w="674"/><text x="60.9996%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (924 instructions, 2.40%)</title><rect x="60.6936%" y="181" width="2.3986%" height="15" fill="rgb(226,216,39)" fg:x="23381" fg:w="924"/><text x="60.9866%" y="191.50">s..</text></g><g><title>candid::types::internal::env_add (950 instructions, 2.47%)</title><rect x="60.6936%" y="197" width="2.4661%" height="15" fill="rgb(243,47,51)" fg:x="23381" fg:w="950"/><text x="60.9866%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="63.1597%" y="165" width="0.2336%" height="15" fill="rgb(241,183,40)" fg:x="24331" fg:w="90"/><text x="63.4526%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="63.1597%" y="181" width="0.2596%" height="15" fill="rgb(231,217,32)" fg:x="24331" fg:w="100"/><text x="63.4526%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="63.1597%" y="197" width="0.2674%" height="15" fill="rgb(229,61,38)" fg:x="24331" fg:w="103"/><text x="63.4526%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="63.4270%" y="165" width="0.0130%" height="15" fill="rgb(225,210,5)" fg:x="24434" fg:w="5"/><text x="63.7200%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="63.4400%" y="149" width="0.1376%" height="15" fill="rgb(231,79,45)" fg:x="24439" fg:w="53"/><text x="63.7330%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.79%)</title><rect x="63.5776%" y="149" width="0.7917%" height="15" fill="rgb(224,100,7)" fg:x="24492" fg:w="305"/><text x="63.8706%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.19%)</title><rect x="64.3693%" y="149" width="0.1895%" height="15" fill="rgb(241,198,18)" fg:x="24797" fg:w="73"/><text x="64.6623%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.75%)</title><rect x="63.4400%" y="165" width="1.7496%" height="15" fill="rgb(252,97,53)" fg:x="24439" fg:w="674"/><text x="63.7330%" y="175.50"></text></g><g><title>memcmp (446 instructions, 1.16%)</title><rect x="65.1896%" y="165" width="1.1577%" height="15" fill="rgb(220,88,7)" fg:x="25113" fg:w="446"/><text x="65.4826%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="66.3474%" y="149" width="0.2103%" height="15" fill="rgb(213,176,14)" fg:x="25559" fg:w="81"/><text x="66.6403%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.29%)</title><rect x="66.3474%" y="165" width="0.2881%" height="15" fill="rgb(246,73,7)" fg:x="25559" fg:w="111"/><text x="66.6403%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,410 instructions, 3.66%)</title><rect x="63.4270%" y="181" width="3.6602%" height="15" fill="rgb(245,64,36)" fg:x="24434" fg:w="1410"/><text x="63.7200%" y="191.50">std..</text></g><g><title>candid::types::internal::env_add (1,436 instructions, 3.73%)</title><rect x="63.4270%" y="197" width="3.7276%" height="15" fill="rgb(245,80,10)" fg:x="24434" fg:w="1436"/><text x="63.7200%" y="207.50">can..</text></g><g><title>candid::types::internal::ID::__getit (81 instructions, 0.21%)</title><rect x="67.1547%" y="165" width="0.2103%" height="15" fill="rgb(232,107,50)" fg:x="25870" fg:w="81"/><text x="67.4477%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="67.3650%" y="133" width="0.1376%" height="15" fill="rgb(253,3,0)" fg:x="25951" fg:w="53"/><text x="67.6579%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.20%)</title><rect x="67.3650%" y="149" width="0.2025%" height="15" fill="rgb(212,99,53)" fg:x="25951" fg:w="78"/><text x="67.6579%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.78%)</title><rect x="67.3650%" y="165" width="0.7788%" height="15" fill="rgb(249,111,54)" fg:x="25951" fg:w="300"/><text x="67.6579%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.24%)</title><rect x="68.1437%" y="117" width="0.2414%" height="15" fill="rgb(249,55,30)" fg:x="26251" fg:w="93"/><text x="68.4367%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.27%)</title><rect x="68.1437%" y="133" width="0.2674%" height="15" fill="rgb(237,47,42)" fg:x="26251" fg:w="103"/><text x="68.4367%" y="143.50"></text></g><g><title>__rust_alloc (106 instructions, 0.28%)</title><rect x="68.1437%" y="149" width="0.2752%" height="15" fill="rgb(211,20,18)" fg:x="26251" fg:w="106"/><text x="68.4367%" y="159.50"></text></g><g><title>memset (136 instructions, 0.35%)</title><rect x="68.4189%" y="149" width="0.3530%" height="15" fill="rgb(231,203,46)" fg:x="26357" fg:w="136"/><text x="68.7118%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (348 instructions, 0.90%)</title><rect x="68.1437%" y="165" width="0.9034%" height="15" fill="rgb(237,142,3)" fg:x="26251" fg:w="348"/><text x="68.4367%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,167 instructions, 3.03%)</title><rect x="67.1547%" y="181" width="3.0294%" height="15" fill="rgb(241,107,1)" fg:x="25870" fg:w="1167"/><text x="67.4477%" y="191.50">st..</text></g><g><title>candid::types::internal::env_id (1,204 instructions, 3.13%)</title><rect x="67.1547%" y="197" width="3.1254%" height="15" fill="rgb(229,83,13)" fg:x="25870" fg:w="1204"/><text x="67.4477%" y="207.50">ca..</text></g><g><title>candid::types::CandidType::ty (4,748 instructions, 12.33%)</title><rect x="58.2483%" y="213" width="12.3251%" height="15" fill="rgb(241,91,40)" fg:x="22439" fg:w="4748"/><text x="58.5413%" y="223.50">candid::types::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.24%)</title><rect x="70.5734%" y="165" width="0.2440%" height="15" fill="rgb(225,3,45)" fg:x="27187" fg:w="94"/><text x="70.8664%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.27%)</title><rect x="70.5734%" y="181" width="0.2700%" height="15" fill="rgb(244,223,14)" fg:x="27187" fg:w="104"/><text x="70.8664%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.28%)</title><rect x="70.5734%" y="197" width="0.2778%" height="15" fill="rgb(224,124,37)" fg:x="27187" fg:w="107"/><text x="70.8664%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (153 instructions, 0.40%)</title><rect x="70.5734%" y="213" width="0.3972%" height="15" fill="rgb(251,171,30)" fg:x="27187" fg:w="153"/><text x="70.8664%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="70.9706%" y="181" width="0.0130%" height="15" fill="rgb(236,46,54)" fg:x="27340" fg:w="5"/><text x="71.2636%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="70.9836%" y="165" width="0.1376%" height="15" fill="rgb(245,213,5)" fg:x="27345" fg:w="53"/><text x="71.2765%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.79%)</title><rect x="71.1211%" y="165" width="0.7917%" height="15" fill="rgb(230,144,27)" fg:x="27398" fg:w="305"/><text x="71.4141%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.19%)</title><rect x="71.9129%" y="165" width="0.1895%" height="15" fill="rgb(220,86,6)" fg:x="27703" fg:w="73"/><text x="72.2059%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.75%)</title><rect x="70.9836%" y="181" width="1.7496%" height="15" fill="rgb(240,20,13)" fg:x="27345" fg:w="674"/><text x="71.2765%" y="191.50"></text></g><g><title>memcmp (446 instructions, 1.16%)</title><rect x="72.7332%" y="181" width="1.1577%" height="15" fill="rgb(217,89,34)" fg:x="28019" fg:w="446"/><text x="73.0261%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="73.8909%" y="165" width="0.2103%" height="15" fill="rgb(229,13,5)" fg:x="28465" fg:w="81"/><text x="74.1839%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.29%)</title><rect x="73.8909%" y="181" width="0.2881%" height="15" fill="rgb(244,67,35)" fg:x="28465" fg:w="111"/><text x="74.1839%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,410 instructions, 3.66%)</title><rect x="70.9706%" y="197" width="3.6602%" height="15" fill="rgb(221,40,2)" fg:x="27340" fg:w="1410"/><text x="71.2636%" y="207.50">std..</text></g><g><title>candid::types::internal::env_add (1,436 instructions, 3.73%)</title><rect x="70.9706%" y="213" width="3.7276%" height="15" fill="rgb(237,157,21)" fg:x="27340" fg:w="1436"/><text x="71.2636%" y="223.50">can..</text></g><g><title>candid::types::internal::ID::__getit (5 instructions, 0.01%)</title><rect x="74.6982%" y="181" width="0.0130%" height="15" fill="rgb(222,94,11)" fg:x="28776" fg:w="5"/><text x="74.9912%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="74.7112%" y="149" width="0.1376%" height="15" fill="rgb(249,113,6)" fg:x="28781" fg:w="53"/><text x="75.0042%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.40%)</title><rect x="74.8488%" y="149" width="0.3972%" height="15" fill="rgb(238,137,36)" fg:x="28834" fg:w="153"/><text x="75.1418%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="75.2460%" y="133" width="0.1376%" height="15" fill="rgb(210,102,26)" fg:x="28987" fg:w="53"/><text x="75.5389%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.20%)</title><rect x="75.2460%" y="149" width="0.2025%" height="15" fill="rgb(218,30,30)" fg:x="28987" fg:w="78"/><text x="75.5389%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.91%)</title><rect x="74.7112%" y="165" width="0.9137%" height="15" fill="rgb(214,67,26)" fg:x="28781" fg:w="352"/><text x="75.0042%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="76.2012%" y="149" width="0.1376%" height="15" fill="rgb(251,9,53)" fg:x="29355" fg:w="53"/><text x="76.4942%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.40%)</title><rect x="76.3388%" y="149" width="0.3972%" height="15" fill="rgb(228,204,25)" fg:x="29408" fg:w="153"/><text x="76.6318%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.14%)</title><rect x="76.7360%" y="133" width="0.1376%" height="15" fill="rgb(207,153,8)" fg:x="29561" fg:w="53"/><text x="77.0289%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.20%)</title><rect x="76.7360%" y="149" width="0.2025%" height="15" fill="rgb(242,9,16)" fg:x="29561" fg:w="78"/><text x="77.0289%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.91%)</title><rect x="76.2012%" y="165" width="0.9137%" height="15" fill="rgb(217,211,10)" fg:x="29355" fg:w="352"/><text x="76.4942%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,148 instructions, 2.98%)</title><rect x="74.7112%" y="181" width="2.9800%" height="15" fill="rgb(219,228,52)" fg:x="28781" fg:w="1148"/><text x="75.0042%" y="191.50">co..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,521 instructions, 3.95%)</title><rect x="74.6982%" y="197" width="3.9483%" height="15" fill="rgb(231,92,29)" fg:x="28776" fg:w="1521"/><text x="74.9912%" y="207.50">std..</text></g><g><title>candid::types::internal::env_id (1,558 instructions, 4.04%)</title><rect x="74.6982%" y="213" width="4.0443%" height="15" fill="rgb(232,8,23)" fg:x="28776" fg:w="1558"/><text x="74.9912%" y="223.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (46 instructions, 0.12%)</title><rect x="78.7426%" y="213" width="0.1194%" height="15" fill="rgb(216,211,34)" fg:x="30334" fg:w="46"/><text x="79.0355%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.20%)</title><rect x="78.8620%" y="197" width="0.2025%" height="15" fill="rgb(236,151,0)" fg:x="30380" fg:w="78"/><text x="79.1549%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.31%)</title><rect x="79.1423%" y="197" width="0.3115%" height="15" fill="rgb(209,168,3)" fg:x="30488" fg:w="120"/><text x="79.4353%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (258 instructions, 0.67%)</title><rect x="78.8620%" y="213" width="0.6697%" height="15" fill="rgb(208,129,28)" fg:x="30380" fg:w="258"/><text x="79.1549%" y="223.50"></text></g><g><title>memcmp (131 instructions, 0.34%)</title><rect x="79.5317%" y="165" width="0.3401%" height="15" fill="rgb(229,78,22)" fg:x="30638" fg:w="131"/><text x="79.8247%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (282 instructions, 0.73%)</title><rect x="79.5317%" y="181" width="0.7320%" height="15" fill="rgb(228,187,13)" fg:x="30638" fg:w="282"/><text x="79.8247%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.2637%" y="181" width="0.0286%" height="15" fill="rgb(240,119,24)" fg:x="30920" fg:w="11"/><text x="80.5567%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (345 instructions, 0.90%)</title><rect x="79.5317%" y="197" width="0.8956%" height="15" fill="rgb(209,194,42)" fg:x="30638" fg:w="345"/><text x="79.8247%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="80.4273%" y="149" width="0.2336%" height="15" fill="rgb(247,200,46)" fg:x="30983" fg:w="90"/><text x="80.7202%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="80.4273%" y="165" width="0.2596%" height="15" fill="rgb(218,76,16)" fg:x="30983" fg:w="100"/><text x="80.7202%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="80.4273%" y="181" width="0.2674%" height="15" fill="rgb(225,21,48)" fg:x="30983" fg:w="103"/><text x="80.7202%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="80.9698%" y="149" width="0.2336%" height="15" fill="rgb(239,223,50)" fg:x="31192" fg:w="90"/><text x="81.2628%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="80.9698%" y="165" width="0.2596%" height="15" fill="rgb(244,45,21)" fg:x="31192" fg:w="100"/><text x="81.2628%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="80.9698%" y="181" width="0.2674%" height="15" fill="rgb(232,33,43)" fg:x="31192" fg:w="103"/><text x="81.2628%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (418 instructions, 1.09%)</title><rect x="80.4273%" y="197" width="1.0851%" height="15" fill="rgb(209,8,3)" fg:x="30983" fg:w="418"/><text x="80.7202%" y="207.50"></text></g><g><title>candid::de::Compound::new (39 instructions, 0.10%)</title><rect x="81.5123%" y="197" width="0.1012%" height="15" fill="rgb(214,25,53)" fg:x="31401" fg:w="39"/><text x="81.8053%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (112 instructions, 0.29%)</title><rect x="81.6136%" y="197" width="0.2907%" height="15" fill="rgb(254,186,54)" fg:x="31440" fg:w="112"/><text x="81.9066%" y="207.50"></text></g><g><title>candid::types::internal::Label::get_id (8 instructions, 0.02%)</title><rect x="81.9043%" y="197" width="0.0208%" height="15" fill="rgb(208,174,49)" fg:x="31552" fg:w="8"/><text x="82.1973%" y="207.50"></text></g><g><title>candid::de::Deserializer::set_field_name (8 instructions, 0.02%)</title><rect x="81.9251%" y="197" width="0.0208%" height="15" fill="rgb(233,191,51)" fg:x="31560" fg:w="8"/><text x="82.2181%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.9459%" y="197" width="0.0286%" height="15" fill="rgb(222,134,10)" fg:x="31568" fg:w="11"/><text x="82.2388%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.9744%" y="197" width="0.0286%" height="15" fill="rgb(230,226,20)" fg:x="31579" fg:w="11"/><text x="82.2674%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="82.0030%" y="133" width="0.2336%" height="15" fill="rgb(251,111,25)" fg:x="31590" fg:w="90"/><text x="82.2959%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="82.0030%" y="149" width="0.2596%" height="15" fill="rgb(224,40,46)" fg:x="31590" fg:w="100"/><text x="82.2959%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="82.0030%" y="165" width="0.2674%" height="15" fill="rgb(236,108,47)" fg:x="31590" fg:w="103"/><text x="82.2959%" y="175.50"></text></g><g><title>memcpy (90 instructions, 0.23%)</title><rect x="82.2703%" y="165" width="0.2336%" height="15" fill="rgb(234,93,0)" fg:x="31693" fg:w="90"/><text x="82.5633%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (230 instructions, 0.60%)</title><rect x="82.0030%" y="181" width="0.5970%" height="15" fill="rgb(224,213,32)" fg:x="31590" fg:w="230"/><text x="82.2959%" y="191.50"></text></g><g><title>memcmp (110 instructions, 0.29%)</title><rect x="82.6000%" y="181" width="0.2855%" height="15" fill="rgb(251,11,48)" fg:x="31820" fg:w="110"/><text x="82.8930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.14%)</title><rect x="82.8855%" y="181" width="0.1402%" height="15" fill="rgb(236,173,5)" fg:x="31930" fg:w="54"/><text x="83.1785%" y="191.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (465 instructions, 1.21%)</title><rect x="82.0030%" y="197" width="1.2071%" height="15" fill="rgb(230,95,12)" fg:x="31590" fg:w="465"/><text x="82.2959%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="83.2100%" y="181" width="0.0727%" height="15" fill="rgb(232,209,1)" fg:x="32055" fg:w="28"/><text x="83.5030%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="83.2827%" y="181" width="0.0415%" height="15" fill="rgb(232,6,1)" fg:x="32083" fg:w="16"/><text x="83.5757%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="83.3242%" y="181" width="0.0415%" height="15" fill="rgb(210,224,50)" fg:x="32099" fg:w="16"/><text x="83.6172%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.16%)</title><rect x="83.3658%" y="165" width="0.1583%" height="15" fill="rgb(228,127,35)" fg:x="32115" fg:w="61"/><text x="83.6588%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.25%)</title><rect x="83.5241%" y="165" width="0.2518%" height="15" fill="rgb(245,102,45)" fg:x="32176" fg:w="97"/><text x="83.8171%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.15%)</title><rect x="83.7759%" y="165" width="0.1454%" height="15" fill="rgb(214,1,49)" fg:x="32273" fg:w="56"/><text x="84.0689%" y="175.50"></text></g><g><title>binread::BinRead::read (258 instructions, 0.67%)</title><rect x="83.3658%" y="181" width="0.6697%" height="15" fill="rgb(226,163,40)" fg:x="32115" fg:w="258"/><text x="83.6588%" y="191.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (53 instructions, 0.14%)</title><rect x="84.0355%" y="181" width="0.1376%" height="15" fill="rgb(239,212,28)" fg:x="32373" fg:w="53"/><text x="84.3285%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="84.1731%" y="149" width="0.2336%" height="15" fill="rgb(220,20,13)" fg:x="32426" fg:w="90"/><text x="84.4661%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="84.1731%" y="165" width="0.2596%" height="15" fill="rgb(210,164,35)" fg:x="32426" fg:w="100"/><text x="84.4661%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="84.1731%" y="181" width="0.2674%" height="15" fill="rgb(248,109,41)" fg:x="32426" fg:w="103"/><text x="84.4661%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.27%)</title><rect x="84.4405%" y="181" width="0.2726%" height="15" fill="rgb(238,23,50)" fg:x="32529" fg:w="105"/><text x="84.7334%" y="191.50"></text></g><g><title>core::str::converts::from_utf8 (149 instructions, 0.39%)</title><rect x="84.7130%" y="181" width="0.3868%" height="15" fill="rgb(211,48,49)" fg:x="32634" fg:w="149"/><text x="85.0060%" y="191.50"></text></g><g><title>&lt;&amp;mut candid::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (862 instructions, 2.24%)</title><rect x="83.2100%" y="197" width="2.2376%" height="15" fill="rgb(223,36,21)" fg:x="32055" fg:w="862"/><text x="83.5030%" y="207.50">&lt;..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.4477%" y="181" width="0.0130%" height="15" fill="rgb(207,123,46)" fg:x="32917" fg:w="5"/><text x="85.7406%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="85.4606%" y="181" width="0.2103%" height="15" fill="rgb(240,218,32)" fg:x="32922" fg:w="81"/><text x="85.7536%" y="191.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.6709%" y="181" width="0.0130%" height="15" fill="rgb(252,5,43)" fg:x="33003" fg:w="5"/><text x="85.9639%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.33%)</title><rect x="85.6839%" y="181" width="0.3297%" height="15" fill="rgb(252,84,19)" fg:x="33008" fg:w="127"/><text x="85.9768%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (247 instructions, 0.64%)</title><rect x="85.4477%" y="197" width="0.6412%" height="15" fill="rgb(243,152,39)" fg:x="32917" fg:w="247"/><text x="85.7406%" y="207.50"></text></g><g><title>&lt;&amp;mut candid::de::Deserializer as serde::de::Deserializer&gt;::deserialize_struct (2,961 instructions, 7.69%)</title><rect x="79.5317%" y="213" width="7.6863%" height="15" fill="rgb(234,160,15)" fg:x="30638" fg:w="2961"/><text x="79.8247%" y="223.50">&lt;&amp;mut can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="87.2180%" y="197" width="0.2103%" height="15" fill="rgb(237,34,20)" fg:x="33599" fg:w="81"/><text x="87.5110%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.33%)</title><rect x="87.4283%" y="197" width="0.3297%" height="15" fill="rgb(229,97,13)" fg:x="33680" fg:w="127"/><text x="87.7213%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.65%)</title><rect x="87.2180%" y="213" width="0.6490%" height="15" fill="rgb(234,71,50)" fg:x="33599" fg:w="250"/><text x="87.5110%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8670%" y="213" width="0.0286%" height="15" fill="rgb(253,155,4)" fg:x="33849" fg:w="11"/><text x="88.1600%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8955%" y="213" width="0.0286%" height="15" fill="rgb(222,185,37)" fg:x="33860" fg:w="11"/><text x="88.1885%" y="223.50"></text></g><g><title>memcpy (411 instructions, 1.07%)</title><rect x="87.9241%" y="213" width="1.0669%" height="15" fill="rgb(251,177,13)" fg:x="33871" fg:w="411"/><text x="88.2171%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="88.9910%" y="181" width="0.2103%" height="15" fill="rgb(250,179,40)" fg:x="34282" fg:w="81"/><text x="89.2840%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.20%)</title><rect x="89.2013%" y="165" width="0.2025%" height="15" fill="rgb(242,44,2)" fg:x="34363" fg:w="78"/><text x="89.4942%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.4037%" y="165" width="0.0286%" height="15" fill="rgb(216,177,13)" fg:x="34441" fg:w="11"/><text x="89.6967%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.32%)</title><rect x="89.4323%" y="165" width="0.3193%" height="15" fill="rgb(216,106,43)" fg:x="34452" fg:w="123"/><text x="89.7253%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (114 instructions, 0.30%)</title><rect x="89.7516%" y="165" width="0.2959%" height="15" fill="rgb(216,183,2)" fg:x="34575" fg:w="114"/><text x="90.0445%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (420 instructions, 1.09%)</title><rect x="89.2013%" y="181" width="1.0903%" height="15" fill="rgb(249,75,3)" fg:x="34363" fg:w="420"/><text x="89.4942%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (114 instructions, 0.30%)</title><rect x="90.2915%" y="181" width="0.2959%" height="15" fill="rgb(219,67,39)" fg:x="34783" fg:w="114"/><text x="90.5845%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (743 instructions, 1.93%)</title><rect x="88.9910%" y="197" width="1.9287%" height="15" fill="rgb(253,228,2)" fg:x="34282" fg:w="743"/><text x="89.2840%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.32%)</title><rect x="90.9197%" y="197" width="0.3193%" height="15" fill="rgb(235,138,27)" fg:x="35025" fg:w="123"/><text x="91.2127%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.43%)</title><rect x="91.2390%" y="181" width="0.4309%" height="15" fill="rgb(236,97,51)" fg:x="35148" fg:w="166"/><text x="91.5320%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.51%)</title><rect x="91.2390%" y="197" width="0.5088%" height="15" fill="rgb(240,80,30)" fg:x="35148" fg:w="196"/><text x="91.5320%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="91.7478%" y="197" width="0.0286%" height="15" fill="rgb(230,178,19)" fg:x="35344" fg:w="11"/><text x="92.0408%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="91.7763%" y="197" width="0.0130%" height="15" fill="rgb(210,190,27)" fg:x="35355" fg:w="5"/><text x="92.0693%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (1,192 instructions, 3.09%)</title><rect x="88.9910%" y="213" width="3.0943%" height="15" fill="rgb(222,107,31)" fg:x="34282" fg:w="1192"/><text x="89.2840%" y="223.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.20%)</title><rect x="92.0852%" y="213" width="0.2025%" height="15" fill="rgb(216,127,34)" fg:x="35474" fg:w="78"/><text x="92.3782%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data (35,472 instructions, 92.08%)</title><rect x="1.5290%" y="229" width="92.0801%" height="15" fill="rgb(234,116,52)" fg:x="589" fg:w="35472"/><text x="1.8219%" y="239.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="93.6090%" y="197" width="0.2336%" height="15" fill="rgb(222,124,15)" fg:x="36061" fg:w="90"/><text x="93.9020%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="93.6090%" y="213" width="0.2596%" height="15" fill="rgb(231,179,28)" fg:x="36061" fg:w="100"/><text x="93.9020%" y="223.50"></text></g><g><title>memset (116 instructions, 0.30%)</title><rect x="93.8686%" y="213" width="0.3011%" height="15" fill="rgb(226,93,45)" fg:x="36161" fg:w="116"/><text x="94.1616%" y="223.50"></text></g><g><title>memcpy (165 instructions, 0.43%)</title><rect x="94.1697%" y="213" width="0.4283%" height="15" fill="rgb(215,8,51)" fg:x="36277" fg:w="165"/><text x="94.4627%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.14%)</title><rect x="94.5980%" y="213" width="0.1402%" height="15" fill="rgb(223,106,5)" fg:x="36442" fg:w="54"/><text x="94.8910%" y="223.50"></text></g><g><title>ic_cdk::api::caller (607 instructions, 1.58%)</title><rect x="93.6090%" y="229" width="1.5757%" height="15" fill="rgb(250,191,5)" fg:x="36061" fg:w="607"/><text x="93.9020%" y="239.50"></text></g><g><title>publisher::SUBSCRIBERS::__getit (63 instructions, 0.16%)</title><rect x="95.1847%" y="213" width="0.1635%" height="15" fill="rgb(242,132,44)" fg:x="36668" fg:w="63"/><text x="95.4777%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (69 instructions, 0.18%)</title><rect x="95.3482%" y="181" width="0.1791%" height="15" fill="rgb(251,152,29)" fg:x="36731" fg:w="69"/><text x="95.6412%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.21%)</title><rect x="95.3482%" y="197" width="0.2051%" height="15" fill="rgb(218,179,5)" fg:x="36731" fg:w="79"/><text x="95.6412%" y="207.50"></text></g><g><title>__rust_alloc (82 instructions, 0.21%)</title><rect x="95.3482%" y="213" width="0.2129%" height="15" fill="rgb(227,67,19)" fg:x="36731" fg:w="82"/><text x="95.6412%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (379 instructions, 0.98%)</title><rect x="95.1847%" y="229" width="0.9838%" height="15" fill="rgb(233,119,31)" fg:x="36668" fg:w="379"/><text x="95.4777%" y="239.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="96.1685%" y="197" width="0.0130%" height="15" fill="rgb(241,120,22)" fg:x="37047" fg:w="5"/><text x="96.4615%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="96.1815%" y="197" width="0.0286%" height="15" fill="rgb(224,102,30)" fg:x="37052" fg:w="11"/><text x="96.4745%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="96.2101%" y="197" width="0.0286%" height="15" fill="rgb(210,164,37)" fg:x="37063" fg:w="11"/><text x="96.5030%" y="207.50"></text></g><g><title>memset (136 instructions, 0.35%)</title><rect x="96.2386%" y="197" width="0.3530%" height="15" fill="rgb(226,191,16)" fg:x="37074" fg:w="136"/><text x="96.5316%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (346 instructions, 0.90%)</title><rect x="96.1685%" y="213" width="0.8982%" height="15" fill="rgb(214,40,45)" fg:x="37047" fg:w="346"/><text x="96.4615%" y="223.50"></text></g><g><title>std::io::Write::write_all (78 instructions, 0.20%)</title><rect x="97.0667%" y="213" width="0.2025%" height="15" fill="rgb(244,29,26)" fg:x="37393" fg:w="78"/><text x="97.3597%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.23%)</title><rect x="97.2692%" y="133" width="0.2336%" height="15" fill="rgb(216,16,5)" fg:x="37471" fg:w="90"/><text x="97.5621%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.26%)</title><rect x="97.2692%" y="149" width="0.2596%" height="15" fill="rgb(249,76,35)" fg:x="37471" fg:w="100"/><text x="97.5621%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.27%)</title><rect x="97.2692%" y="165" width="0.2674%" height="15" fill="rgb(207,11,44)" fg:x="37471" fg:w="103"/><text x="97.5621%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.35%)</title><rect x="97.2692%" y="181" width="0.3452%" height="15" fill="rgb(228,190,49)" fg:x="37471" fg:w="133"/><text x="97.5621%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (198 instructions, 0.51%)</title><rect x="97.2692%" y="197" width="0.5140%" height="15" fill="rgb(214,173,12)" fg:x="37471" fg:w="198"/><text x="97.5621%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="97.7831%" y="197" width="0.0286%" height="15" fill="rgb(218,26,35)" fg:x="37669" fg:w="11"/><text x="98.0761%" y="207.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="97.8117%" y="197" width="0.0286%" height="15" fill="rgb(220,200,19)" fg:x="37680" fg:w="11"/><text x="98.1047%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (422 instructions, 1.10%)</title><rect x="97.2692%" y="213" width="1.0954%" height="15" fill="rgb(239,95,49)" fg:x="37471" fg:w="422"/><text x="97.5621%" y="223.50"></text></g><g><title>std::io::Write::write_all (76 instructions, 0.20%)</title><rect x="98.3646%" y="213" width="0.1973%" height="15" fill="rgb(235,85,53)" fg:x="37893" fg:w="76"/><text x="98.6576%" y="223.50"></text></g><g><title>std::io::Write::write_all (14 instructions, 0.04%)</title><rect x="98.5619%" y="213" width="0.0363%" height="15" fill="rgb(233,133,31)" fg:x="37969" fg:w="14"/><text x="98.8549%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="98.5982%" y="213" width="0.0130%" height="15" fill="rgb(218,25,20)" fg:x="37983" fg:w="5"/><text x="98.8912%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.14%)</title><rect x="98.6112%" y="213" width="0.1402%" height="15" fill="rgb(252,210,38)" fg:x="37988" fg:w="54"/><text x="98.9042%" y="223.50"></text></g><g><title>candid::utils::write_args (1,136 instructions, 2.95%)</title><rect x="96.1685%" y="229" width="2.9489%" height="15" fill="rgb(242,134,21)" fg:x="37047" fg:w="1136"/><text x="96.4615%" y="239.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.21%)</title><rect x="99.1174%" y="229" width="0.2103%" height="15" fill="rgb(213,28,48)" fg:x="38183" fg:w="81"/><text x="99.4104%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.43%)</title><rect x="99.3277%" y="229" width="0.4309%" height="15" fill="rgb(250,196,2)" fg:x="38264" fg:w="166"/><text x="99.6206%" y="239.50"></text></g><g><title>all (38,523 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(227,5,17)" fg:x="0" fg:w="38523"/><text x="0.2930%" y="271.50"></text></g><g><title>canister_update subscribe (38,523 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(221,226,24)" fg:x="0" fg:w="38523"/><text x="0.2930%" y="255.50">canister_update subscribe</text></g></svg></svg>