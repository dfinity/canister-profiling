<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="34433"><g><title>ic_cdk::setup (48 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1394%" height="15" fill="rgb(254,105,3)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 1.07%)</title><rect x="0.1394%" y="197" width="1.0716%" height="15" fill="rgb(221,225,9)" fg:x="48" fg:w="369"/><text x="0.4324%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.2110%" y="197" width="0.2381%" height="15" fill="rgb(224,227,45)" fg:x="417" fg:w="82"/><text x="1.5040%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.4492%" y="181" width="0.2381%" height="15" fill="rgb(229,198,43)" fg:x="499" fg:w="82"/><text x="1.7422%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.15%)</title><rect x="1.6873%" y="149" width="0.1452%" height="15" fill="rgb(206,209,35)" fg:x="581" fg:w="50"/><text x="1.9803%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.38%)</title><rect x="1.6873%" y="165" width="0.3804%" height="15" fill="rgb(245,195,53)" fg:x="581" fg:w="131"/><text x="1.9803%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="2.0678%" y="149" width="0.0116%" height="15" fill="rgb(240,92,26)" fg:x="712" fg:w="4"/><text x="2.3608%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 1.18%)</title><rect x="2.0678%" y="165" width="1.1791%" height="15" fill="rgb(207,40,23)" fg:x="712" fg:w="406"/><text x="2.3608%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.24%)</title><rect x="3.2469%" y="165" width="0.2381%" height="15" fill="rgb(223,111,35)" fg:x="1118" fg:w="82"/><text x="3.5399%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.4850%" y="165" width="0.1568%" height="15" fill="rgb(229,147,28)" fg:x="1200" fg:w="54"/><text x="3.7780%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.6419%" y="165" width="0.1568%" height="15" fill="rgb(211,29,28)" fg:x="1254" fg:w="54"/><text x="3.9348%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.7987%" y="165" width="0.1568%" height="15" fill="rgb(228,72,33)" fg:x="1308" fg:w="54"/><text x="4.0917%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="3.9555%" y="165" width="0.1568%" height="15" fill="rgb(205,214,31)" fg:x="1362" fg:w="54"/><text x="4.2485%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="4.1123%" y="165" width="0.2004%" height="15" fill="rgb(224,111,15)" fg:x="1416" fg:w="69"/><text x="4.4053%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="4.3127%" y="165" width="0.1888%" height="15" fill="rgb(253,21,26)" fg:x="1485" fg:w="65"/><text x="4.6057%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="4.5015%" y="149" width="0.0116%" height="15" fill="rgb(245,139,43)" fg:x="1550" fg:w="4"/><text x="4.7945%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 1.18%)</title><rect x="4.5015%" y="165" width="1.1791%" height="15" fill="rgb(252,170,7)" fg:x="1550" fg:w="406"/><text x="4.7945%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="5.6806%" y="165" width="0.0465%" height="15" fill="rgb(231,118,14)" fg:x="1956" fg:w="16"/><text x="5.9736%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="5.7271%" y="149" width="0.2381%" height="15" fill="rgb(238,83,0)" fg:x="1972" fg:w="82"/><text x="6.0200%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="5.9652%" y="117" width="0.1743%" height="15" fill="rgb(221,39,39)" fg:x="2054" fg:w="60"/><text x="6.2582%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="5.9652%" y="133" width="0.2469%" height="15" fill="rgb(222,119,46)" fg:x="2054" fg:w="85"/><text x="6.2582%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="6.2121%" y="85" width="0.0261%" height="15" fill="rgb(222,165,49)" fg:x="2139" fg:w="9"/><text x="6.5050%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="6.2382%" y="69" width="0.0871%" height="15" fill="rgb(219,113,52)" fg:x="2148" fg:w="30"/><text x="6.5312%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="6.2382%" y="85" width="0.1597%" height="15" fill="rgb(214,7,15)" fg:x="2148" fg:w="55"/><text x="6.5312%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="6.2121%" y="101" width="0.3427%" height="15" fill="rgb(235,32,4)" fg:x="2139" fg:w="118"/><text x="6.5050%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.50%)</title><rect x="6.2121%" y="117" width="0.4966%" height="15" fill="rgb(238,90,54)" fg:x="2139" fg:w="171"/><text x="6.5050%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="6.2121%" y="133" width="0.5111%" height="15" fill="rgb(213,208,19)" fg:x="2139" fg:w="176"/><text x="6.5050%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="5.9652%" y="149" width="1.0804%" height="15" fill="rgb(233,156,4)" fg:x="2054" fg:w="372"/><text x="6.2582%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.73%)</title><rect x="5.7271%" y="165" width="1.7280%" height="15" fill="rgb(207,194,5)" fg:x="1972" fg:w="595"/><text x="6.0200%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.24%)</title><rect x="7.4551%" y="165" width="0.2381%" height="15" fill="rgb(206,111,30)" fg:x="2567" fg:w="82"/><text x="7.7480%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="7.6932%" y="165" width="0.1626%" height="15" fill="rgb(243,70,54)" fg:x="2649" fg:w="56"/><text x="7.9862%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="7.8558%" y="149" width="0.1568%" height="15" fill="rgb(242,28,8)" fg:x="2705" fg:w="54"/><text x="8.1488%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.0127%" y="149" width="0.2381%" height="15" fill="rgb(219,106,18)" fg:x="2759" fg:w="82"/><text x="8.3056%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.2508%" y="133" width="0.2381%" height="15" fill="rgb(244,222,10)" fg:x="2841" fg:w="82"/><text x="8.5438%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="8.4889%" y="101" width="0.3485%" height="15" fill="rgb(236,179,52)" fg:x="2923" fg:w="120"/><text x="8.7819%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="8.4889%" y="117" width="0.4211%" height="15" fill="rgb(213,23,39)" fg:x="2923" fg:w="145"/><text x="8.7819%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.23%)</title><rect x="8.9101%" y="37" width="0.2323%" height="15" fill="rgb(238,48,10)" fg:x="3068" fg:w="80"/><text x="9.2030%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.33%)</title><rect x="8.9101%" y="53" width="0.3340%" height="15" fill="rgb(251,196,23)" fg:x="3068" fg:w="115"/><text x="9.2030%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (192 instructions, 0.56%)</title><rect x="8.9101%" y="69" width="0.5576%" height="15" fill="rgb(250,152,24)" fg:x="3068" fg:w="192"/><text x="9.2030%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.43%)</title><rect x="9.4677%" y="69" width="0.4298%" height="15" fill="rgb(209,150,17)" fg:x="3260" fg:w="148"/><text x="9.7606%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (372 instructions, 1.08%)</title><rect x="8.9101%" y="85" width="1.0804%" height="15" fill="rgb(234,202,34)" fg:x="3068" fg:w="372"/><text x="9.2030%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="9.9904%" y="53" width="0.0261%" height="15" fill="rgb(253,148,53)" fg:x="3440" fg:w="9"/><text x="10.2834%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="10.0166%" y="37" width="0.0871%" height="15" fill="rgb(218,129,16)" fg:x="3449" fg:w="30"/><text x="10.3095%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="10.0166%" y="53" width="0.1597%" height="15" fill="rgb(216,85,19)" fg:x="3449" fg:w="55"/><text x="10.3095%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="9.9904%" y="69" width="0.3427%" height="15" fill="rgb(235,228,7)" fg:x="3440" fg:w="118"/><text x="10.2834%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.53%)</title><rect x="9.9904%" y="85" width="0.5344%" height="15" fill="rgb(245,175,0)" fg:x="3440" fg:w="184"/><text x="10.2834%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="10.5248%" y="69" width="0.1307%" height="15" fill="rgb(208,168,36)" fg:x="3624" fg:w="45"/><text x="10.8178%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="10.5248%" y="85" width="0.2033%" height="15" fill="rgb(246,171,24)" fg:x="3624" fg:w="70"/><text x="10.8178%" y="95.50"></text></g><g><title>core::fmt::write (754 instructions, 2.19%)</title><rect x="8.9101%" y="101" width="2.1898%" height="15" fill="rgb(215,142,24)" fg:x="3068" fg:w="754"/><text x="9.2030%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (809 instructions, 2.35%)</title><rect x="8.9101%" y="117" width="2.3495%" height="15" fill="rgb(250,187,7)" fg:x="3068" fg:w="809"/><text x="9.2030%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,065 instructions, 3.09%)</title><rect x="8.4889%" y="133" width="3.0930%" height="15" fill="rgb(228,66,33)" fg:x="2923" fg:w="1065"/><text x="8.7819%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,288 instructions, 3.74%)</title><rect x="8.2508%" y="149" width="3.7406%" height="15" fill="rgb(234,215,21)" fg:x="2841" fg:w="1288"/><text x="8.5438%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.20%)</title><rect x="11.9914%" y="149" width="0.2033%" height="15" fill="rgb(222,191,20)" fg:x="4129" fg:w="70"/><text x="12.2844%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="12.1947%" y="149" width="0.1626%" height="15" fill="rgb(245,79,54)" fg:x="4199" fg:w="56"/><text x="12.4877%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="12.3573%" y="149" width="0.1830%" height="15" fill="rgb(240,10,37)" fg:x="4255" fg:w="63"/><text x="12.6503%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="12.5403%" y="117" width="0.2381%" height="15" fill="rgb(214,192,32)" fg:x="4318" fg:w="82"/><text x="12.8333%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.34%)</title><rect x="12.5403%" y="133" width="0.3369%" height="15" fill="rgb(209,36,54)" fg:x="4318" fg:w="116"/><text x="12.8333%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.53%)</title><rect x="12.5403%" y="149" width="0.5344%" height="15" fill="rgb(220,10,11)" fg:x="4318" fg:w="184"/><text x="12.8333%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="13.0747%" y="149" width="0.1568%" height="15" fill="rgb(221,106,17)" fg:x="4502" fg:w="54"/><text x="13.3676%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.2315%" y="149" width="0.2381%" height="15" fill="rgb(251,142,44)" fg:x="4556" fg:w="82"/><text x="13.5245%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.4696%" y="133" width="0.2381%" height="15" fill="rgb(238,13,15)" fg:x="4638" fg:w="82"/><text x="13.7626%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="13.7078%" y="101" width="0.3485%" height="15" fill="rgb(208,107,27)" fg:x="4720" fg:w="120"/><text x="14.0007%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="13.7078%" y="117" width="0.4211%" height="15" fill="rgb(205,136,37)" fg:x="4720" fg:w="145"/><text x="14.0007%" y="127.50"></text></g><g><title>__rust_realloc (80 instructions, 0.23%)</title><rect x="14.1289%" y="37" width="0.2323%" height="15" fill="rgb(250,205,27)" fg:x="4865" fg:w="80"/><text x="14.4219%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.33%)</title><rect x="14.1289%" y="53" width="0.3340%" height="15" fill="rgb(210,80,43)" fg:x="4865" fg:w="115"/><text x="14.4219%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (192 instructions, 0.56%)</title><rect x="14.1289%" y="69" width="0.5576%" height="15" fill="rgb(247,160,36)" fg:x="4865" fg:w="192"/><text x="14.4219%" y="79.50"></text></g><g><title>memcpy (148 instructions, 0.43%)</title><rect x="14.6865%" y="69" width="0.4298%" height="15" fill="rgb(234,13,49)" fg:x="5057" fg:w="148"/><text x="14.9795%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (372 instructions, 1.08%)</title><rect x="14.1289%" y="85" width="1.0804%" height="15" fill="rgb(234,122,0)" fg:x="4865" fg:w="372"/><text x="14.4219%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="15.2092%" y="53" width="0.0261%" height="15" fill="rgb(207,146,38)" fg:x="5237" fg:w="9"/><text x="15.5022%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="15.2354%" y="37" width="0.0871%" height="15" fill="rgb(207,177,25)" fg:x="5246" fg:w="30"/><text x="15.5284%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="15.2354%" y="53" width="0.1597%" height="15" fill="rgb(211,178,42)" fg:x="5246" fg:w="55"/><text x="15.5284%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="15.2092%" y="69" width="0.3427%" height="15" fill="rgb(230,69,54)" fg:x="5237" fg:w="118"/><text x="15.5022%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (184 instructions, 0.53%)</title><rect x="15.2092%" y="85" width="0.5344%" height="15" fill="rgb(214,135,41)" fg:x="5237" fg:w="184"/><text x="15.5022%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="15.7436%" y="69" width="0.1307%" height="15" fill="rgb(237,67,25)" fg:x="5421" fg:w="45"/><text x="16.0366%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="15.7436%" y="85" width="0.2033%" height="15" fill="rgb(222,189,50)" fg:x="5421" fg:w="70"/><text x="16.0366%" y="95.50"></text></g><g><title>core::fmt::write (754 instructions, 2.19%)</title><rect x="14.1289%" y="101" width="2.1898%" height="15" fill="rgb(245,148,34)" fg:x="4865" fg:w="754"/><text x="14.4219%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (809 instructions, 2.35%)</title><rect x="14.1289%" y="117" width="2.3495%" height="15" fill="rgb(222,29,6)" fg:x="4865" fg:w="809"/><text x="14.4219%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,065 instructions, 3.09%)</title><rect x="13.7078%" y="133" width="3.0930%" height="15" fill="rgb(221,189,43)" fg:x="4720" fg:w="1065"/><text x="14.0007%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,288 instructions, 3.74%)</title><rect x="13.4696%" y="149" width="3.7406%" height="15" fill="rgb(207,36,27)" fg:x="4638" fg:w="1288"/><text x="13.7626%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (70 instructions, 0.20%)</title><rect x="17.2102%" y="149" width="0.2033%" height="15" fill="rgb(217,90,24)" fg:x="5926" fg:w="70"/><text x="17.5032%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="17.4135%" y="149" width="0.1626%" height="15" fill="rgb(224,66,35)" fg:x="5996" fg:w="56"/><text x="17.7065%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="17.5762%" y="149" width="0.1830%" height="15" fill="rgb(221,13,50)" fg:x="6052" fg:w="63"/><text x="17.8691%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.16%)</title><rect x="17.7591%" y="149" width="0.1568%" height="15" fill="rgb(236,68,49)" fg:x="6115" fg:w="54"/><text x="18.0521%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="17.9160%" y="133" width="0.2004%" height="15" fill="rgb(229,146,28)" fg:x="6169" fg:w="69"/><text x="18.2089%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="18.1163%" y="133" width="0.1888%" height="15" fill="rgb(225,31,38)" fg:x="6238" fg:w="65"/><text x="18.4093%" y="143.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="18.3051%" y="117" width="0.0116%" height="15" fill="rgb(250,208,3)" fg:x="6303" fg:w="4"/><text x="18.5981%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 1.18%)</title><rect x="18.3051%" y="133" width="1.1791%" height="15" fill="rgb(246,54,23)" fg:x="6303" fg:w="406"/><text x="18.5981%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="19.4842%" y="133" width="0.0465%" height="15" fill="rgb(243,76,11)" fg:x="6709" fg:w="16"/><text x="19.7772%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="19.5307%" y="117" width="0.2381%" height="15" fill="rgb(245,21,50)" fg:x="6725" fg:w="82"/><text x="19.8237%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="19.7688%" y="85" width="0.1743%" height="15" fill="rgb(228,9,43)" fg:x="6807" fg:w="60"/><text x="20.0618%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="19.7688%" y="101" width="0.2469%" height="15" fill="rgb(208,100,47)" fg:x="6807" fg:w="85"/><text x="20.0618%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="20.0157%" y="53" width="0.0261%" height="15" fill="rgb(232,26,8)" fg:x="6892" fg:w="9"/><text x="20.3087%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="20.0418%" y="37" width="0.0871%" height="15" fill="rgb(216,166,38)" fg:x="6901" fg:w="30"/><text x="20.3348%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="20.0418%" y="53" width="0.1597%" height="15" fill="rgb(251,202,51)" fg:x="6901" fg:w="55"/><text x="20.3348%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="20.0157%" y="69" width="0.3427%" height="15" fill="rgb(254,216,34)" fg:x="6892" fg:w="118"/><text x="20.3087%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.50%)</title><rect x="20.0157%" y="85" width="0.4966%" height="15" fill="rgb(251,32,27)" fg:x="6892" fg:w="171"/><text x="20.3087%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="20.0157%" y="101" width="0.5111%" height="15" fill="rgb(208,127,28)" fg:x="6892" fg:w="176"/><text x="20.3087%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="19.7688%" y="117" width="1.0804%" height="15" fill="rgb(224,137,22)" fg:x="6807" fg:w="372"/><text x="20.0618%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.73%)</title><rect x="19.5307%" y="133" width="1.7280%" height="15" fill="rgb(254,70,32)" fg:x="6725" fg:w="595"/><text x="19.8237%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.24%)</title><rect x="21.2587%" y="133" width="0.2381%" height="15" fill="rgb(229,75,37)" fg:x="7320" fg:w="82"/><text x="21.5516%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="21.4968%" y="133" width="0.1626%" height="15" fill="rgb(252,64,23)" fg:x="7402" fg:w="56"/><text x="21.7898%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="21.6595%" y="117" width="0.2004%" height="15" fill="rgb(232,162,48)" fg:x="7458" fg:w="69"/><text x="21.9524%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (277 instructions, 0.80%)</title><rect x="21.8598%" y="117" width="0.8045%" height="15" fill="rgb(246,160,12)" fg:x="7527" fg:w="277"/><text x="22.1528%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="22.6643%" y="101" width="0.2004%" height="15" fill="rgb(247,166,0)" fg:x="7804" fg:w="69"/><text x="22.9573%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.26%)</title><rect x="22.8647%" y="101" width="0.2643%" height="15" fill="rgb(249,219,21)" fg:x="7873" fg:w="91"/><text x="23.1577%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="23.1290%" y="101" width="0.1830%" height="15" fill="rgb(205,209,3)" fg:x="7964" fg:w="63"/><text x="23.4219%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.82%)</title><rect x="22.6643%" y="117" width="0.8190%" height="15" fill="rgb(243,44,1)" fg:x="7804" fg:w="282"/><text x="22.9573%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="23.4833%" y="117" width="0.1830%" height="15" fill="rgb(206,159,16)" fg:x="8086" fg:w="63"/><text x="23.7763%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (813 instructions, 2.36%)</title><rect x="21.6595%" y="133" width="2.3611%" height="15" fill="rgb(244,77,30)" fg:x="7458" fg:w="813"/><text x="21.9524%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="24.0206%" y="133" width="0.2381%" height="15" fill="rgb(218,69,12)" fg:x="8271" fg:w="82"/><text x="24.3135%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.06%)</title><rect x="24.2587%" y="133" width="0.0610%" height="15" fill="rgb(212,87,7)" fg:x="8353" fg:w="21"/><text x="24.5517%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="24.3197%" y="133" width="0.1830%" height="15" fill="rgb(245,114,25)" fg:x="8374" fg:w="63"/><text x="24.6127%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,560 instructions, 7.43%)</title><rect x="17.9160%" y="149" width="7.4347%" height="15" fill="rgb(210,61,42)" fg:x="6169" fg:w="2560"/><text x="18.2089%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="25.3507%" y="133" width="0.2352%" height="15" fill="rgb(211,52,33)" fg:x="8729" fg:w="81"/><text x="25.6436%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="25.6498%" y="133" width="0.2265%" height="15" fill="rgb(234,58,33)" fg:x="8832" fg:w="78"/><text x="25.9428%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (203 instructions, 0.59%)</title><rect x="25.3507%" y="149" width="0.5896%" height="15" fill="rgb(220,115,36)" fg:x="8729" fg:w="203"/><text x="25.6436%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="25.9402%" y="149" width="0.4792%" height="15" fill="rgb(243,153,54)" fg:x="8932" fg:w="165"/><text x="26.2332%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,037 instructions, 20.44%)</title><rect x="7.8558%" y="165" width="20.4368%" height="15" fill="rgb(251,47,18)" fg:x="2705" fg:w="7037"/><text x="8.1488%" y="175.50">&lt;candid::binary_parser::Con..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="28.2926%" y="165" width="0.1830%" height="15" fill="rgb(242,102,42)" fg:x="9742" fg:w="63"/><text x="28.5856%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="28.4756%" y="165" width="0.1830%" height="15" fill="rgb(234,31,38)" fg:x="9805" fg:w="63"/><text x="28.7686%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="28.6586%" y="165" width="0.1888%" height="15" fill="rgb(221,117,51)" fg:x="9868" fg:w="65"/><text x="28.9515%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="28.8473%" y="133" width="0.0116%" height="15" fill="rgb(212,20,18)" fg:x="9933" fg:w="4"/><text x="29.1403%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 1.18%)</title><rect x="28.8473%" y="149" width="1.1791%" height="15" fill="rgb(245,133,36)" fg:x="9933" fg:w="406"/><text x="29.1403%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="30.0264%" y="149" width="0.0465%" height="15" fill="rgb(212,6,19)" fg:x="10339" fg:w="16"/><text x="30.3194%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.34%)</title><rect x="30.0729%" y="133" width="0.3427%" height="15" fill="rgb(218,1,36)" fg:x="10355" fg:w="118"/><text x="30.3659%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="30.4156%" y="101" width="0.1743%" height="15" fill="rgb(246,84,54)" fg:x="10473" fg:w="60"/><text x="30.7086%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="30.4156%" y="117" width="0.2469%" height="15" fill="rgb(242,110,6)" fg:x="10473" fg:w="85"/><text x="30.7086%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="30.6624%" y="69" width="0.0261%" height="15" fill="rgb(214,47,5)" fg:x="10558" fg:w="9"/><text x="30.9554%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="30.6886%" y="53" width="0.0871%" height="15" fill="rgb(218,159,25)" fg:x="10567" fg:w="30"/><text x="30.9816%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="30.6886%" y="69" width="0.1597%" height="15" fill="rgb(215,211,28)" fg:x="10567" fg:w="55"/><text x="30.9816%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="30.6624%" y="85" width="0.3427%" height="15" fill="rgb(238,59,32)" fg:x="10558" fg:w="118"/><text x="30.9554%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.50%)</title><rect x="30.6624%" y="101" width="0.4966%" height="15" fill="rgb(226,82,3)" fg:x="10558" fg:w="171"/><text x="30.9554%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="30.6624%" y="117" width="0.5111%" height="15" fill="rgb(240,164,32)" fg:x="10558" fg:w="176"/><text x="30.9554%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="30.4156%" y="133" width="1.0804%" height="15" fill="rgb(232,46,7)" fg:x="10473" fg:w="372"/><text x="30.7086%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.83%)</title><rect x="30.0729%" y="149" width="1.8325%" height="15" fill="rgb(229,129,53)" fg:x="10355" fg:w="631"/><text x="30.3659%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.24%)</title><rect x="31.9054%" y="149" width="0.2381%" height="15" fill="rgb(234,188,29)" fg:x="10986" fg:w="82"/><text x="32.1984%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="32.1436%" y="149" width="0.1597%" height="15" fill="rgb(246,141,4)" fg:x="11068" fg:w="55"/><text x="32.4366%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="32.3033%" y="133" width="0.2004%" height="15" fill="rgb(229,23,39)" fg:x="11123" fg:w="69"/><text x="32.5963%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.26%)</title><rect x="32.5037%" y="133" width="0.2643%" height="15" fill="rgb(206,12,3)" fg:x="11192" fg:w="91"/><text x="32.7967%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="32.7680%" y="133" width="0.1830%" height="15" fill="rgb(252,226,20)" fg:x="11283" fg:w="63"/><text x="33.0610%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.82%)</title><rect x="32.3033%" y="149" width="0.8190%" height="15" fill="rgb(216,123,35)" fg:x="11123" fg:w="282"/><text x="32.5963%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="33.1223%" y="149" width="0.2207%" height="15" fill="rgb(212,68,40)" fg:x="11405" fg:w="76"/><text x="33.4153%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,751 instructions, 5.09%)</title><rect x="28.8473%" y="165" width="5.0852%" height="15" fill="rgb(254,125,32)" fg:x="9933" fg:w="1751"/><text x="29.1403%" y="175.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="33.9326%" y="165" width="0.1830%" height="15" fill="rgb(253,97,22)" fg:x="11684" fg:w="63"/><text x="34.2255%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.1155%" y="165" width="0.2207%" height="15" fill="rgb(241,101,14)" fg:x="11747" fg:w="76"/><text x="34.4085%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.3362%" y="149" width="0.2207%" height="15" fill="rgb(238,103,29)" fg:x="11823" fg:w="76"/><text x="34.6292%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.46%)</title><rect x="34.3362%" y="165" width="0.4618%" height="15" fill="rgb(233,195,47)" fg:x="11823" fg:w="159"/><text x="34.6292%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.21%)</title><rect x="34.7980%" y="133" width="0.2062%" height="15" fill="rgb(246,218,30)" fg:x="11982" fg:w="71"/><text x="35.0910%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (105 instructions, 0.30%)</title><rect x="34.7980%" y="149" width="0.3049%" height="15" fill="rgb(219,145,47)" fg:x="11982" fg:w="105"/><text x="35.0910%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (173 instructions, 0.50%)</title><rect x="34.7980%" y="165" width="0.5024%" height="15" fill="rgb(243,12,26)" fg:x="11982" fg:w="173"/><text x="35.0910%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.3004%" y="165" width="0.2381%" height="15" fill="rgb(214,87,16)" fg:x="12155" fg:w="82"/><text x="35.5934%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.5386%" y="149" width="0.2381%" height="15" fill="rgb(208,99,42)" fg:x="12237" fg:w="82"/><text x="35.8316%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="35.7767%" y="117" width="0.2614%" height="15" fill="rgb(253,99,2)" fg:x="12319" fg:w="90"/><text x="36.0697%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="35.7767%" y="133" width="0.3340%" height="15" fill="rgb(220,168,23)" fg:x="12319" fg:w="115"/><text x="36.0697%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="36.1107%" y="85" width="0.0261%" height="15" fill="rgb(242,38,24)" fg:x="12434" fg:w="9"/><text x="36.4037%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="36.1368%" y="69" width="0.0871%" height="15" fill="rgb(225,182,9)" fg:x="12443" fg:w="30"/><text x="36.4298%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="36.1368%" y="85" width="0.1597%" height="15" fill="rgb(243,178,37)" fg:x="12443" fg:w="55"/><text x="36.4298%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="36.1107%" y="101" width="0.3427%" height="15" fill="rgb(232,139,19)" fg:x="12434" fg:w="118"/><text x="36.4037%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.50%)</title><rect x="36.1107%" y="117" width="0.4966%" height="15" fill="rgb(225,201,24)" fg:x="12434" fg:w="171"/><text x="36.4037%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="36.1107%" y="133" width="0.5402%" height="15" fill="rgb(221,47,46)" fg:x="12434" fg:w="186"/><text x="36.4037%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 1.20%)</title><rect x="35.7767%" y="149" width="1.1965%" height="15" fill="rgb(249,23,13)" fg:x="12319" fg:w="412"/><text x="36.0697%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (635 instructions, 1.84%)</title><rect x="35.5386%" y="165" width="1.8442%" height="15" fill="rgb(219,9,5)" fg:x="12237" fg:w="635"/><text x="35.8316%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="37.3827%" y="149" width="0.2381%" height="15" fill="rgb(254,171,16)" fg:x="12872" fg:w="82"/><text x="37.6757%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.40%)</title><rect x="37.3827%" y="165" width="0.4008%" height="15" fill="rgb(230,171,20)" fg:x="12872" fg:w="138"/><text x="37.6757%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.28%)</title><rect x="37.7835%" y="165" width="0.2759%" height="15" fill="rgb(210,71,41)" fg:x="13010" fg:w="95"/><text x="38.0765%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="38.0594%" y="165" width="0.0378%" height="15" fill="rgb(206,173,20)" fg:x="13105" fg:w="13"/><text x="38.3524%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.28%)</title><rect x="38.0972%" y="165" width="0.2759%" height="15" fill="rgb(233,88,34)" fg:x="13118" fg:w="95"/><text x="38.3901%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="38.3731%" y="149" width="0.2381%" height="15" fill="rgb(223,209,46)" fg:x="13213" fg:w="82"/><text x="38.6660%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (114 instructions, 0.33%)</title><rect x="38.3731%" y="165" width="0.3311%" height="15" fill="rgb(250,43,18)" fg:x="13213" fg:w="114"/><text x="38.6660%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.07%)</title><rect x="38.7042%" y="149" width="0.0668%" height="15" fill="rgb(208,13,10)" fg:x="13327" fg:w="23"/><text x="38.9971%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (88 instructions, 0.26%)</title><rect x="38.7042%" y="165" width="0.2556%" height="15" fill="rgb(212,200,36)" fg:x="13327" fg:w="88"/><text x="38.9971%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="38.9597%" y="165" width="0.0436%" height="15" fill="rgb(225,90,30)" fg:x="13415" fg:w="15"/><text x="39.2527%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.16%)</title><rect x="39.2443%" y="149" width="0.1626%" height="15" fill="rgb(236,182,39)" fg:x="13513" fg:w="56"/><text x="39.5373%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (164 instructions, 0.48%)</title><rect x="39.0033%" y="165" width="0.4763%" height="15" fill="rgb(212,144,35)" fg:x="13430" fg:w="164"/><text x="39.2963%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="39.4796%" y="165" width="0.0378%" height="15" fill="rgb(228,63,44)" fg:x="13594" fg:w="13"/><text x="39.7725%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="39.5173%" y="165" width="0.0203%" height="15" fill="rgb(228,109,6)" fg:x="13607" fg:w="7"/><text x="39.8103%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="39.5377%" y="165" width="0.0436%" height="15" fill="rgb(238,117,24)" fg:x="13614" fg:w="15"/><text x="39.8306%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="39.5812%" y="133" width="0.2381%" height="15" fill="rgb(242,26,26)" fg:x="13629" fg:w="82"/><text x="39.8742%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="39.8194%" y="101" width="0.2614%" height="15" fill="rgb(221,92,48)" fg:x="13711" fg:w="90"/><text x="40.1123%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="39.8194%" y="117" width="0.3340%" height="15" fill="rgb(209,209,32)" fg:x="13711" fg:w="115"/><text x="40.1123%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="40.1533%" y="69" width="0.0261%" height="15" fill="rgb(221,70,22)" fg:x="13826" fg:w="9"/><text x="40.4463%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="40.1795%" y="53" width="0.0871%" height="15" fill="rgb(248,145,5)" fg:x="13835" fg:w="30"/><text x="40.4724%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="40.1795%" y="69" width="0.1597%" height="15" fill="rgb(226,116,26)" fg:x="13835" fg:w="55"/><text x="40.4724%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="40.1533%" y="85" width="0.3427%" height="15" fill="rgb(244,5,17)" fg:x="13826" fg:w="118"/><text x="40.4463%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.50%)</title><rect x="40.1533%" y="101" width="0.4966%" height="15" fill="rgb(252,159,33)" fg:x="13826" fg:w="171"/><text x="40.4463%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="40.1533%" y="117" width="0.5402%" height="15" fill="rgb(206,71,0)" fg:x="13826" fg:w="186"/><text x="40.4463%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 1.20%)</title><rect x="39.8194%" y="133" width="1.1965%" height="15" fill="rgb(233,118,54)" fg:x="13711" fg:w="412"/><text x="40.1123%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (635 instructions, 1.84%)</title><rect x="39.5812%" y="149" width="1.8442%" height="15" fill="rgb(234,83,48)" fg:x="13629" fg:w="635"/><text x="39.8742%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="41.4254%" y="149" width="0.2381%" height="15" fill="rgb(228,3,54)" fg:x="14264" fg:w="82"/><text x="41.7183%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (828 instructions, 2.40%)</title><rect x="39.5812%" y="165" width="2.4047%" height="15" fill="rgb(226,155,13)" fg:x="13629" fg:w="828"/><text x="39.8742%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="41.9859%" y="133" width="0.2381%" height="15" fill="rgb(241,28,37)" fg:x="14457" fg:w="82"/><text x="42.2789%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.34%)</title><rect x="41.9859%" y="149" width="0.3369%" height="15" fill="rgb(233,93,10)" fg:x="14457" fg:w="116"/><text x="42.2789%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.53%)</title><rect x="41.9859%" y="165" width="0.5344%" height="15" fill="rgb(225,113,19)" fg:x="14457" fg:w="184"/><text x="42.2789%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.5203%" y="165" width="0.2381%" height="15" fill="rgb(241,2,18)" fg:x="14641" fg:w="82"/><text x="42.8132%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="42.7584%" y="165" width="0.2352%" height="15" fill="rgb(228,207,21)" fg:x="14723" fg:w="81"/><text x="43.0514%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.9936%" y="165" width="0.2381%" height="15" fill="rgb(213,211,35)" fg:x="14804" fg:w="82"/><text x="43.2866%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="43.2318%" y="165" width="0.2381%" height="15" fill="rgb(209,83,10)" fg:x="14886" fg:w="82"/><text x="43.5248%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="43.4699%" y="149" width="0.2352%" height="15" fill="rgb(209,164,1)" fg:x="14968" fg:w="81"/><text x="43.7629%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.33%)</title><rect x="43.4699%" y="165" width="0.3340%" height="15" fill="rgb(213,184,43)" fg:x="14968" fg:w="115"/><text x="43.7629%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.18%)</title><rect x="43.8039%" y="149" width="0.1830%" height="15" fill="rgb(231,61,34)" fg:x="15083" fg:w="63"/><text x="44.0969%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.48%)</title><rect x="43.8039%" y="165" width="0.4821%" height="15" fill="rgb(235,75,3)" fg:x="15083" fg:w="166"/><text x="44.0969%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="44.2860%" y="165" width="0.2352%" height="15" fill="rgb(220,106,47)" fg:x="15249" fg:w="81"/><text x="44.5790%" y="175.50"></text></g><g><title>memcpy (380 instructions, 1.10%)</title><rect x="44.5212%" y="165" width="1.1036%" height="15" fill="rgb(210,196,33)" fg:x="15330" fg:w="380"/><text x="44.8142%" y="175.50"></text></g><g><title>memcpy (380 instructions, 1.10%)</title><rect x="45.6248%" y="165" width="1.1036%" height="15" fill="rgb(229,154,42)" fg:x="15710" fg:w="380"/><text x="45.9178%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (17,228 instructions, 50.03%)</title><rect x="1.6873%" y="181" width="50.0334%" height="15" fill="rgb(228,114,26)" fg:x="581" fg:w="17228"/><text x="1.9803%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (335 instructions, 0.97%)</title><rect x="51.7207%" y="181" width="0.9729%" height="15" fill="rgb(208,144,1)" fg:x="17809" fg:w="335"/><text x="52.0137%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.15%)</title><rect x="52.6936%" y="165" width="0.1452%" height="15" fill="rgb(239,112,37)" fg:x="18144" fg:w="50"/><text x="52.9866%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.24%)</title><rect x="52.6936%" y="181" width="0.2440%" height="15" fill="rgb(210,96,50)" fg:x="18144" fg:w="84"/><text x="52.9866%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.16%)</title><rect x="52.9376%" y="165" width="0.1597%" height="15" fill="rgb(222,178,2)" fg:x="18228" fg:w="55"/><text x="53.2306%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.47%)</title><rect x="52.9376%" y="181" width="0.4734%" height="15" fill="rgb(226,74,18)" fg:x="18228" fg:w="163"/><text x="53.2306%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.4110%" y="165" width="0.0145%" height="15" fill="rgb(225,67,54)" fg:x="18391" fg:w="5"/><text x="53.7039%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="53.4255%" y="149" width="0.1539%" height="15" fill="rgb(251,92,32)" fg:x="18396" fg:w="53"/><text x="53.7185%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="53.5794%" y="149" width="0.8887%" height="15" fill="rgb(228,149,22)" fg:x="18449" fg:w="306"/><text x="53.8724%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="54.4681%" y="149" width="0.2091%" height="15" fill="rgb(243,54,13)" fg:x="18755" fg:w="72"/><text x="54.7611%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="53.4255%" y="165" width="1.9400%" height="15" fill="rgb(243,180,28)" fg:x="18396" fg:w="668"/><text x="53.7185%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="55.3655%" y="165" width="0.2207%" height="15" fill="rgb(208,167,24)" fg:x="19064" fg:w="76"/><text x="55.6585%" y="175.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="55.5862%" y="165" width="0.3950%" height="15" fill="rgb(245,73,45)" fg:x="19140" fg:w="136"/><text x="55.8792%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,241 instructions, 3.60%)</title><rect x="53.4110%" y="181" width="3.6041%" height="15" fill="rgb(237,203,48)" fg:x="18391" fg:w="1241"/><text x="53.7039%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="57.0151%" y="181" width="0.2265%" height="15" fill="rgb(211,197,16)" fg:x="19632" fg:w="78"/><text x="57.3080%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="57.2416%" y="181" width="0.2207%" height="15" fill="rgb(243,99,51)" fg:x="19710" fg:w="76"/><text x="57.5346%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="57.4623%" y="181" width="0.2265%" height="15" fill="rgb(215,123,29)" fg:x="19786" fg:w="78"/><text x="57.7553%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="57.6888%" y="149" width="0.0145%" height="15" fill="rgb(239,186,37)" fg:x="19864" fg:w="5"/><text x="57.9818%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="57.7034%" y="133" width="0.1539%" height="15" fill="rgb(252,136,39)" fg:x="19869" fg:w="53"/><text x="57.9963%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="57.8573%" y="133" width="0.8887%" height="15" fill="rgb(223,213,32)" fg:x="19922" fg:w="306"/><text x="58.1503%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="58.7460%" y="133" width="0.2091%" height="15" fill="rgb(233,115,5)" fg:x="20228" fg:w="72"/><text x="59.0389%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="57.7034%" y="149" width="1.9400%" height="15" fill="rgb(207,226,44)" fg:x="19869" fg:w="668"/><text x="57.9963%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 2.28%)</title><rect x="57.6888%" y="165" width="2.2827%" height="15" fill="rgb(208,126,0)" fg:x="19864" fg:w="786"/><text x="57.9818%" y="175.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="59.9715%" y="165" width="0.2207%" height="15" fill="rgb(244,66,21)" fg:x="20650" fg:w="76"/><text x="60.2645%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.1923%" y="149" width="0.0145%" height="15" fill="rgb(222,97,12)" fg:x="20726" fg:w="5"/><text x="60.4852%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="60.2068%" y="133" width="0.1539%" height="15" fill="rgb(219,213,19)" fg:x="20731" fg:w="53"/><text x="60.4997%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="60.3607%" y="133" width="0.8887%" height="15" fill="rgb(252,169,30)" fg:x="20784" fg:w="306"/><text x="60.6537%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="61.2494%" y="133" width="0.2091%" height="15" fill="rgb(206,32,51)" fg:x="21090" fg:w="72"/><text x="61.5424%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="60.2068%" y="149" width="1.9400%" height="15" fill="rgb(250,172,42)" fg:x="20731" fg:w="668"/><text x="60.4997%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 2.55%)</title><rect x="60.1923%" y="165" width="2.5470%" height="15" fill="rgb(209,34,43)" fg:x="20726" fg:w="877"/><text x="60.4852%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="62.7392%" y="165" width="0.2207%" height="15" fill="rgb(223,11,35)" fg:x="21603" fg:w="76"/><text x="63.0322%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="62.9600%" y="149" width="0.0145%" height="15" fill="rgb(251,219,26)" fg:x="21679" fg:w="5"/><text x="63.2529%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="62.9745%" y="133" width="0.1539%" height="15" fill="rgb(231,119,3)" fg:x="21684" fg:w="53"/><text x="63.2674%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="63.1284%" y="133" width="0.8887%" height="15" fill="rgb(216,97,11)" fg:x="21737" fg:w="306"/><text x="63.4214%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="64.0171%" y="133" width="0.2091%" height="15" fill="rgb(223,59,9)" fg:x="22043" fg:w="72"/><text x="64.3100%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="62.9745%" y="149" width="1.9400%" height="15" fill="rgb(233,93,31)" fg:x="21684" fg:w="668"/><text x="63.2674%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.30%)</title><rect x="64.9145%" y="149" width="1.2953%" height="15" fill="rgb(239,81,33)" fg:x="22352" fg:w="446"/><text x="65.2074%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="66.2097%" y="133" width="0.2352%" height="15" fill="rgb(213,120,34)" fg:x="22798" fg:w="81"/><text x="66.5027%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="66.2097%" y="149" width="0.3137%" height="15" fill="rgb(243,49,53)" fg:x="22798" fg:w="108"/><text x="66.5027%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 4.05%)</title><rect x="62.9600%" y="165" width="4.0543%" height="15" fill="rgb(247,216,33)" fg:x="21679" fg:w="1396"/><text x="63.2529%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="67.0142%" y="117" width="0.1539%" height="15" fill="rgb(226,26,14)" fg:x="23075" fg:w="53"/><text x="67.3072%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.23%)</title><rect x="67.0142%" y="133" width="0.2265%" height="15" fill="rgb(215,49,53)" fg:x="23075" fg:w="78"/><text x="67.3072%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.85%)</title><rect x="67.0142%" y="149" width="0.8509%" height="15" fill="rgb(245,162,40)" fg:x="23075" fg:w="293"/><text x="67.3072%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="67.8651%" y="149" width="0.2381%" height="15" fill="rgb(229,68,17)" fg:x="23368" fg:w="82"/><text x="68.1581%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="68.1033%" y="149" width="0.3950%" height="15" fill="rgb(213,182,10)" fg:x="23450" fg:w="136"/><text x="68.3962%" y="159.50"></text></g><g><title>candid::types::internal::env_id (916 instructions, 2.66%)</title><rect x="67.0142%" y="165" width="2.6602%" height="15" fill="rgb(245,125,30)" fg:x="23075" fg:w="916"/><text x="67.3072%" y="175.50">c..</text></g><g><title>candid::types::CandidType::ty (4,234 instructions, 12.30%)</title><rect x="57.6888%" y="181" width="12.2963%" height="15" fill="rgb(232,202,2)" fg:x="19864" fg:w="4234"/><text x="57.9818%" y="191.50">candid::types::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.23%)</title><rect x="69.9852%" y="181" width="0.2265%" height="15" fill="rgb(237,140,51)" fg:x="24098" fg:w="78"/><text x="70.2782%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="70.2117%" y="165" width="0.0145%" height="15" fill="rgb(236,157,25)" fg:x="24176" fg:w="5"/><text x="70.5047%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="70.2262%" y="149" width="0.1539%" height="15" fill="rgb(219,209,0)" fg:x="24181" fg:w="53"/><text x="70.5192%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.89%)</title><rect x="70.3802%" y="149" width="0.8887%" height="15" fill="rgb(240,116,54)" fg:x="24234" fg:w="306"/><text x="70.6731%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.21%)</title><rect x="71.2688%" y="149" width="0.2091%" height="15" fill="rgb(216,10,36)" fg:x="24540" fg:w="72"/><text x="71.5618%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.94%)</title><rect x="70.2262%" y="165" width="1.9400%" height="15" fill="rgb(222,72,44)" fg:x="24181" fg:w="668"/><text x="70.5192%" y="175.50"></text></g><g><title>memcmp (446 instructions, 1.30%)</title><rect x="72.1662%" y="165" width="1.2953%" height="15" fill="rgb(232,159,9)" fg:x="24849" fg:w="446"/><text x="72.4592%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="73.4615%" y="149" width="0.2352%" height="15" fill="rgb(210,39,32)" fg:x="25295" fg:w="81"/><text x="73.7545%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.31%)</title><rect x="73.4615%" y="165" width="0.3137%" height="15" fill="rgb(216,194,45)" fg:x="25295" fg:w="108"/><text x="73.7545%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 4.05%)</title><rect x="70.2117%" y="181" width="4.0543%" height="15" fill="rgb(218,18,35)" fg:x="24176" fg:w="1396"/><text x="70.5047%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.2660%" y="133" width="0.1539%" height="15" fill="rgb(207,83,51)" fg:x="25572" fg:w="53"/><text x="74.5589%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.45%)</title><rect x="74.4199%" y="133" width="0.4472%" height="15" fill="rgb(225,63,43)" fg:x="25625" fg:w="154"/><text x="74.7129%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.8671%" y="117" width="0.1539%" height="15" fill="rgb(207,57,36)" fg:x="25779" fg:w="53"/><text x="75.1601%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.23%)</title><rect x="74.8671%" y="133" width="0.2265%" height="15" fill="rgb(216,99,33)" fg:x="25779" fg:w="78"/><text x="75.1601%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 1.02%)</title><rect x="74.2660%" y="149" width="1.0194%" height="15" fill="rgb(225,42,16)" fg:x="25572" fg:w="351"/><text x="74.5589%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="75.9097%" y="133" width="0.1539%" height="15" fill="rgb(220,201,45)" fg:x="26138" fg:w="53"/><text x="76.2027%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.45%)</title><rect x="76.0637%" y="133" width="0.4472%" height="15" fill="rgb(225,33,4)" fg:x="26191" fg:w="154"/><text x="76.3566%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.5109%" y="117" width="0.1539%" height="15" fill="rgb(224,33,50)" fg:x="26345" fg:w="53"/><text x="76.8039%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.23%)</title><rect x="76.5109%" y="133" width="0.2265%" height="15" fill="rgb(246,198,51)" fg:x="26345" fg:w="78"/><text x="76.8039%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 1.02%)</title><rect x="75.9097%" y="149" width="1.0194%" height="15" fill="rgb(205,22,4)" fg:x="26138" fg:w="351"/><text x="76.2027%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,132 instructions, 3.29%)</title><rect x="74.2660%" y="165" width="3.2875%" height="15" fill="rgb(206,3,8)" fg:x="25572" fg:w="1132"/><text x="74.5589%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,405 instructions, 4.08%)</title><rect x="74.2660%" y="181" width="4.0804%" height="15" fill="rgb(251,23,15)" fg:x="25572" fg:w="1405"/><text x="74.5589%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.14%)</title><rect x="78.3464%" y="181" width="0.1365%" height="15" fill="rgb(252,88,28)" fg:x="26977" fg:w="47"/><text x="78.6393%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="78.4829%" y="165" width="0.2265%" height="15" fill="rgb(212,127,14)" fg:x="27024" fg:w="78"/><text x="78.7758%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.35%)</title><rect x="78.7878%" y="165" width="0.3485%" height="15" fill="rgb(247,145,37)" fg:x="27129" fg:w="120"/><text x="79.0808%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.73%)</title><rect x="78.4829%" y="181" width="0.7319%" height="15" fill="rgb(209,117,53)" fg:x="27024" fg:w="252"/><text x="78.7758%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.38%)</title><rect x="79.2147%" y="117" width="0.3804%" height="15" fill="rgb(212,90,42)" fg:x="27276" fg:w="131"/><text x="79.5077%" y="127.50"></text></g><g><title>candid::types::type_env::TypeEnv::find_type (229 instructions, 0.67%)</title><rect x="79.2147%" y="133" width="0.6651%" height="15" fill="rgb(218,164,37)" fg:x="27276" fg:w="229"/><text x="79.5077%" y="143.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (305 instructions, 0.89%)</title><rect x="79.2147%" y="149" width="0.8858%" height="15" fill="rgb(246,65,34)" fg:x="27276" fg:w="305"/><text x="79.5077%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.1005%" y="149" width="0.0319%" height="15" fill="rgb(231,100,33)" fg:x="27581" fg:w="11"/><text x="80.3935%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (368 instructions, 1.07%)</title><rect x="79.2147%" y="165" width="1.0687%" height="15" fill="rgb(228,126,14)" fg:x="27276" fg:w="368"/><text x="79.5077%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.2834%" y="149" width="0.2207%" height="15" fill="rgb(215,173,21)" fg:x="27644" fg:w="76"/><text x="80.5764%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.7714%" y="149" width="0.2207%" height="15" fill="rgb(210,6,40)" fg:x="27812" fg:w="76"/><text x="81.0643%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (336 instructions, 0.98%)</title><rect x="80.2834%" y="165" width="0.9758%" height="15" fill="rgb(212,48,18)" fg:x="27644" fg:w="336"/><text x="80.5764%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2593%" y="165" width="0.0319%" height="15" fill="rgb(230,214,11)" fg:x="27980" fg:w="11"/><text x="81.5522%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2912%" y="165" width="0.0319%" height="15" fill="rgb(254,105,39)" fg:x="27991" fg:w="11"/><text x="81.5842%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="81.3231%" y="149" width="0.2207%" height="15" fill="rgb(245,158,5)" fg:x="28002" fg:w="76"/><text x="81.6161%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="81.5439%" y="149" width="0.2614%" height="15" fill="rgb(249,208,11)" fg:x="28078" fg:w="90"/><text x="81.8368%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.32%)</title><rect x="81.8052%" y="149" width="0.3195%" height="15" fill="rgb(210,39,28)" fg:x="28168" fg:w="110"/><text x="82.0982%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="82.1247%" y="149" width="0.1597%" height="15" fill="rgb(211,56,53)" fg:x="28278" fg:w="55"/><text x="82.4177%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (403 instructions, 1.17%)</title><rect x="81.3231%" y="165" width="1.1704%" height="15" fill="rgb(226,201,30)" fg:x="28002" fg:w="403"/><text x="81.6161%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.08%)</title><rect x="82.4935%" y="149" width="0.0813%" height="15" fill="rgb(239,101,34)" fg:x="28405" fg:w="28"/><text x="82.7865%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.5749%" y="149" width="0.0436%" height="15" fill="rgb(226,209,5)" fg:x="28433" fg:w="15"/><text x="82.8678%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.04%)</title><rect x="82.6184%" y="149" width="0.0436%" height="15" fill="rgb(250,105,47)" fg:x="28448" fg:w="15"/><text x="82.9114%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.20%)</title><rect x="82.6620%" y="133" width="0.2004%" height="15" fill="rgb(230,72,3)" fg:x="28463" fg:w="69"/><text x="82.9549%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.19%)</title><rect x="82.8624%" y="133" width="0.1888%" height="15" fill="rgb(232,218,39)" fg:x="28532" fg:w="65"/><text x="83.1553%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.18%)</title><rect x="83.0511%" y="133" width="0.1830%" height="15" fill="rgb(248,166,6)" fg:x="28597" fg:w="63"/><text x="83.3441%" y="143.50"></text></g><g><title>binread::BinRead::read (241 instructions, 0.70%)</title><rect x="82.6620%" y="149" width="0.6999%" height="15" fill="rgb(247,89,20)" fg:x="28463" fg:w="241"/><text x="82.9549%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.15%)</title><rect x="83.3619%" y="149" width="0.1481%" height="15" fill="rgb(248,130,54)" fg:x="28704" fg:w="51"/><text x="83.6549%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="83.5100%" y="149" width="0.2207%" height="15" fill="rgb(234,196,4)" fg:x="28755" fg:w="76"/><text x="83.8030%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.30%)</title><rect x="83.7307%" y="149" width="0.3049%" height="15" fill="rgb(250,143,31)" fg:x="28831" fg:w="105"/><text x="84.0237%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.42%)</title><rect x="84.0357%" y="149" width="0.4182%" height="15" fill="rgb(211,110,34)" fg:x="28936" fg:w="144"/><text x="84.3286%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (807 instructions, 2.34%)</title><rect x="82.4935%" y="165" width="2.3437%" height="15" fill="rgb(215,124,48)" fg:x="28405" fg:w="807"/><text x="82.7865%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="84.8372%" y="149" width="0.0145%" height="15" fill="rgb(216,46,13)" fg:x="29212" fg:w="5"/><text x="85.1302%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="84.8517%" y="149" width="0.2352%" height="15" fill="rgb(205,184,25)" fg:x="29217" fg:w="81"/><text x="85.1447%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.0870%" y="149" width="0.0145%" height="15" fill="rgb(228,1,10)" fg:x="29298" fg:w="5"/><text x="85.3799%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.37%)</title><rect x="85.1015%" y="149" width="0.3659%" height="15" fill="rgb(213,116,27)" fg:x="29303" fg:w="126"/><text x="85.3945%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (248 instructions, 0.72%)</title><rect x="84.8372%" y="165" width="0.7202%" height="15" fill="rgb(241,95,50)" fg:x="29212" fg:w="248"/><text x="85.1302%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (2,729 instructions, 7.93%)</title><rect x="79.2147%" y="181" width="7.9255%" height="15" fill="rgb(238,48,32)" fg:x="27276" fg:w="2729"/><text x="79.5077%" y="191.50">publisher..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="87.1402%" y="165" width="0.2352%" height="15" fill="rgb(235,113,49)" fg:x="30005" fg:w="81"/><text x="87.4332%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.37%)</title><rect x="87.3755%" y="165" width="0.3659%" height="15" fill="rgb(205,127,43)" fg:x="30086" fg:w="126"/><text x="87.6685%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (246 instructions, 0.71%)</title><rect x="87.1402%" y="181" width="0.7144%" height="15" fill="rgb(250,162,2)" fg:x="30005" fg:w="246"/><text x="87.4332%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8547%" y="181" width="0.0319%" height="15" fill="rgb(220,13,41)" fg:x="30251" fg:w="11"/><text x="88.1476%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8866%" y="181" width="0.0319%" height="15" fill="rgb(249,221,25)" fg:x="30262" fg:w="11"/><text x="88.1796%" y="191.50"></text></g><g><title>memcpy (410 instructions, 1.19%)</title><rect x="87.9186%" y="181" width="1.1907%" height="15" fill="rgb(215,208,19)" fg:x="30273" fg:w="410"/><text x="88.2115%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="89.1093%" y="133" width="0.2352%" height="15" fill="rgb(236,175,2)" fg:x="30683" fg:w="81"/><text x="89.4023%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="89.3445%" y="117" width="0.2265%" height="15" fill="rgb(241,52,2)" fg:x="30764" fg:w="78"/><text x="89.6375%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.5711%" y="117" width="0.0319%" height="15" fill="rgb(248,140,14)" fg:x="30842" fg:w="11"/><text x="89.8640%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.36%)</title><rect x="89.6030%" y="117" width="0.3572%" height="15" fill="rgb(253,22,42)" fg:x="30853" fg:w="123"/><text x="89.8960%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.33%)</title><rect x="89.9602%" y="117" width="0.3253%" height="15" fill="rgb(234,61,47)" fg:x="30976" fg:w="112"/><text x="90.2532%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (412 instructions, 1.20%)</title><rect x="89.3445%" y="133" width="1.1965%" height="15" fill="rgb(208,226,15)" fg:x="30764" fg:w="412"/><text x="89.6375%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.33%)</title><rect x="90.5411%" y="133" width="0.3253%" height="15" fill="rgb(217,221,4)" fg:x="31176" fg:w="112"/><text x="90.8340%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (700 instructions, 2.03%)</title><rect x="89.1093%" y="149" width="2.0329%" height="15" fill="rgb(212,174,34)" fg:x="30683" fg:w="700"/><text x="89.4023%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.36%)</title><rect x="91.1422%" y="149" width="0.3572%" height="15" fill="rgb(253,83,4)" fg:x="31383" fg:w="123"/><text x="91.4352%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="91.4994%" y="133" width="0.4792%" height="15" fill="rgb(250,195,49)" fg:x="31506" fg:w="165"/><text x="91.7924%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (192 instructions, 0.56%)</title><rect x="91.4994%" y="149" width="0.5576%" height="15" fill="rgb(241,192,25)" fg:x="31506" fg:w="192"/><text x="91.7924%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.0570%" y="149" width="0.0319%" height="15" fill="rgb(208,124,10)" fg:x="31698" fg:w="11"/><text x="92.3500%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,068 instructions, 3.10%)</title><rect x="89.1093%" y="165" width="3.1017%" height="15" fill="rgb(222,33,0)" fg:x="30683" fg:w="1068"/><text x="89.4023%" y="175.50">co..</text></g><g><title>candid::de::IDLDeserialize::done (1,103 instructions, 3.20%)</title><rect x="89.1093%" y="181" width="3.2033%" height="15" fill="rgb(234,209,28)" fg:x="30683" fg:w="1103"/><text x="89.4023%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="92.3126%" y="181" width="0.2265%" height="15" fill="rgb(224,11,23)" fg:x="31786" fg:w="78"/><text x="92.6056%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="92.5391%" y="181" width="0.2207%" height="15" fill="rgb(232,99,1)" fg:x="31864" fg:w="76"/><text x="92.8321%" y="191.50"></text></g><g><title>memset (116 instructions, 0.34%)</title><rect x="92.7599%" y="181" width="0.3369%" height="15" fill="rgb(237,95,45)" fg:x="31940" fg:w="116"/><text x="93.0528%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.48%)</title><rect x="93.0967%" y="181" width="0.4792%" height="15" fill="rgb(208,109,11)" fg:x="32056" fg:w="165"/><text x="93.3897%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="93.5759%" y="181" width="0.1597%" height="15" fill="rgb(216,190,48)" fg:x="32221" fg:w="55"/><text x="93.8689%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (20 instructions, 0.06%)</title><rect x="93.7357%" y="181" width="0.0581%" height="15" fill="rgb(251,171,36)" fg:x="32276" fg:w="20"/><text x="94.0286%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="93.7937%" y="181" width="0.1830%" height="15" fill="rgb(230,62,22)" fg:x="32296" fg:w="63"/><text x="94.0867%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="93.9767%" y="149" width="0.0145%" height="15" fill="rgb(225,114,35)" fg:x="32359" fg:w="5"/><text x="94.2697%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="93.9912%" y="149" width="0.0319%" height="15" fill="rgb(215,118,42)" fg:x="32364" fg:w="11"/><text x="94.2842%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0232%" y="149" width="0.0319%" height="15" fill="rgb(243,119,21)" fg:x="32375" fg:w="11"/><text x="94.3161%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="94.0551%" y="149" width="0.3950%" height="15" fill="rgb(252,177,53)" fg:x="32386" fg:w="136"/><text x="94.3481%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (349 instructions, 1.01%)</title><rect x="93.9767%" y="165" width="1.0136%" height="15" fill="rgb(237,209,29)" fg:x="32359" fg:w="349"/><text x="94.2697%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.09%)</title><rect x="94.9903%" y="165" width="0.0929%" height="15" fill="rgb(212,65,23)" fg:x="32708" fg:w="32"/><text x="95.2832%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="95.0832%" y="117" width="0.2207%" height="15" fill="rgb(230,222,46)" fg:x="32740" fg:w="76"/><text x="95.3762%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.32%)</title><rect x="95.0832%" y="133" width="0.3195%" height="15" fill="rgb(215,135,32)" fg:x="32740" fg:w="110"/><text x="95.3762%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.51%)</title><rect x="95.0832%" y="149" width="0.5082%" height="15" fill="rgb(246,101,22)" fg:x="32740" fg:w="175"/><text x="95.3762%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.5914%" y="149" width="0.0319%" height="15" fill="rgb(206,107,13)" fg:x="32915" fg:w="11"/><text x="95.8844%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6234%" y="149" width="0.0319%" height="15" fill="rgb(250,100,44)" fg:x="32926" fg:w="11"/><text x="95.9164%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (359 instructions, 1.04%)</title><rect x="95.0832%" y="165" width="1.0426%" height="15" fill="rgb(231,147,38)" fg:x="32740" fg:w="359"/><text x="95.3762%" y="175.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.09%)</title><rect x="96.1258%" y="165" width="0.0871%" height="15" fill="rgb(229,8,40)" fg:x="33099" fg:w="30"/><text x="96.4188%" y="175.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="96.2129%" y="165" width="0.0145%" height="15" fill="rgb(221,135,30)" fg:x="33129" fg:w="5"/><text x="96.5059%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="96.2275%" y="165" width="0.0145%" height="15" fill="rgb(249,193,18)" fg:x="33134" fg:w="5"/><text x="96.5204%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="96.2420%" y="165" width="0.1597%" height="15" fill="rgb(209,133,39)" fg:x="33139" fg:w="55"/><text x="96.5349%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (965 instructions, 2.80%)</title><rect x="93.9767%" y="181" width="2.8025%" height="15" fill="rgb(232,100,14)" fg:x="32359" fg:w="965"/><text x="94.2697%" y="191.50">ic..</text></g><g><title>publisher::subscribe_0_::{{closure}} (33,578 instructions, 97.52%)</title><rect x="1.4492%" y="197" width="97.5169%" height="15" fill="rgb(224,185,1)" fg:x="499" fg:w="33578"/><text x="1.7422%" y="207.50">publisher::subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9661%" y="197" width="0.0349%" height="15" fill="rgb(223,139,8)" fg:x="34077" fg:w="12"/><text x="99.2591%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.24%)</title><rect x="99.0010%" y="197" width="0.2352%" height="15" fill="rgb(232,213,38)" fg:x="34089" fg:w="81"/><text x="99.2939%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.48%)</title><rect x="99.2362%" y="197" width="0.4792%" height="15" fill="rgb(207,94,22)" fg:x="34170" fg:w="165"/><text x="99.5292%" y="207.50"></text></g><g><title>all (34,433 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(219,183,54)" fg:x="0" fg:w="34433"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (34,433 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(216,185,54)" fg:x="0" fg:w="34433"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>