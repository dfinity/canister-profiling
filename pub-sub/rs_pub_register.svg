<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="39106"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (688 instructions, 1.76%)</title><rect x="0.0000%" y="229" width="1.7593%" height="15" fill="rgb(209,138,14)" fg:x="0" fg:w="688"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="1.7593%" y="229" width="0.2327%" height="15" fill="rgb(222,18,33)" fg:x="688" fg:w="91"/><text x="2.0523%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="1.9920%" y="197" width="0.2327%" height="15" fill="rgb(213,199,7)" fg:x="779" fg:w="91"/><text x="2.2850%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,159 instructions, 2.96%)</title><rect x="1.9920%" y="213" width="2.9637%" height="15" fill="rgb(250,110,10)" fg:x="779" fg:w="1159"/><text x="2.2850%" y="223.50">ic..</text></g><g><title>std::sys::sync::once::no_threads::Once::call (44 instructions, 0.11%)</title><rect x="4.9558%" y="165" width="0.1125%" height="15" fill="rgb(248,123,6)" fg:x="1938" fg:w="44"/><text x="5.2487%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (111 instructions, 0.28%)</title><rect x="4.9558%" y="181" width="0.2838%" height="15" fill="rgb(206,91,31)" fg:x="1938" fg:w="111"/><text x="5.2487%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="5.2396%" y="165" width="0.0153%" height="15" fill="rgb(211,154,13)" fg:x="2049" fg:w="6"/><text x="5.5326%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.12%)</title><rect x="5.2396%" y="181" width="1.1175%" height="15" fill="rgb(225,148,7)" fg:x="2049" fg:w="437"/><text x="5.5326%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.16%)</title><rect x="6.3571%" y="181" width="0.1637%" height="15" fill="rgb(220,160,43)" fg:x="2486" fg:w="64"/><text x="6.6500%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="6.5207%" y="181" width="0.1560%" height="15" fill="rgb(213,52,39)" fg:x="2550" fg:w="61"/><text x="6.8137%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="6.6767%" y="181" width="0.1560%" height="15" fill="rgb(243,137,7)" fg:x="2611" fg:w="61"/><text x="6.9697%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="6.8327%" y="181" width="0.1560%" height="15" fill="rgb(230,79,13)" fg:x="2672" fg:w="61"/><text x="7.1257%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="6.9887%" y="181" width="0.1560%" height="15" fill="rgb(247,105,23)" fg:x="2733" fg:w="61"/><text x="7.2817%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="7.1447%" y="181" width="0.1304%" height="15" fill="rgb(223,179,41)" fg:x="2794" fg:w="51"/><text x="7.4377%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.24%)</title><rect x="7.2751%" y="181" width="0.2429%" height="15" fill="rgb(218,9,34)" fg:x="2845" fg:w="95"/><text x="7.5681%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="7.5180%" y="165" width="0.0153%" height="15" fill="rgb(222,106,8)" fg:x="2940" fg:w="6"/><text x="7.8110%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.12%)</title><rect x="7.5180%" y="181" width="1.1175%" height="15" fill="rgb(211,220,0)" fg:x="2940" fg:w="437"/><text x="7.8110%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="8.6355%" y="181" width="0.0486%" height="15" fill="rgb(229,52,16)" fg:x="3377" fg:w="19"/><text x="8.9285%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="8.6841%" y="149" width="0.2327%" height="15" fill="rgb(212,155,18)" fg:x="3396" fg:w="91"/><text x="8.9771%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="8.9168%" y="117" width="0.1713%" height="15" fill="rgb(242,21,14)" fg:x="3487" fg:w="67"/><text x="9.2098%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (96 instructions, 0.25%)</title><rect x="8.9168%" y="133" width="0.2455%" height="15" fill="rgb(222,19,48)" fg:x="3487" fg:w="96"/><text x="9.2098%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="9.1623%" y="85" width="0.0281%" height="15" fill="rgb(232,45,27)" fg:x="3583" fg:w="11"/><text x="9.4552%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="9.1904%" y="69" width="0.0895%" height="15" fill="rgb(249,103,42)" fg:x="3594" fg:w="35"/><text x="9.4834%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="9.1904%" y="85" width="0.1637%" height="15" fill="rgb(246,81,33)" fg:x="3594" fg:w="64"/><text x="9.4834%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="9.1623%" y="101" width="0.3682%" height="15" fill="rgb(252,33,42)" fg:x="3583" fg:w="144"/><text x="9.4552%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.54%)</title><rect x="9.1623%" y="117" width="0.5370%" height="15" fill="rgb(209,212,41)" fg:x="3583" fg:w="210"/><text x="9.4552%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.56%)</title><rect x="9.1623%" y="133" width="0.5626%" height="15" fill="rgb(207,154,6)" fg:x="3583" fg:w="220"/><text x="9.4552%" y="143.50"></text></g><g><title>core::fmt::write (449 instructions, 1.15%)</title><rect x="8.9168%" y="149" width="1.1482%" height="15" fill="rgb(223,64,47)" fg:x="3487" fg:w="449"/><text x="9.2098%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.73%)</title><rect x="8.6841%" y="165" width="1.7286%" height="15" fill="rgb(211,161,38)" fg:x="3396" fg:w="676"/><text x="8.9771%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.16%)</title><rect x="10.4127%" y="165" width="0.1637%" height="15" fill="rgb(219,138,40)" fg:x="4072" fg:w="64"/><text x="10.7057%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.16%)</title><rect x="10.5764%" y="165" width="0.1585%" height="15" fill="rgb(241,228,46)" fg:x="4136" fg:w="62"/><text x="10.8694%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 2.33%)</title><rect x="8.6841%" y="181" width="2.3347%" height="15" fill="rgb(223,209,38)" fg:x="3396" fg:w="913"/><text x="8.9771%" y="191.50">b..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="11.0188%" y="165" width="0.1560%" height="15" fill="rgb(236,164,45)" fg:x="4309" fg:w="61"/><text x="11.3117%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="11.1748%" y="165" width="0.2327%" height="15" fill="rgb(231,15,5)" fg:x="4370" fg:w="91"/><text x="11.4677%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="11.4075%" y="149" width="0.2327%" height="15" fill="rgb(252,35,15)" fg:x="4461" fg:w="91"/><text x="11.7004%" y="159.50"></text></g><g><title>memcpy (131 instructions, 0.33%)</title><rect x="11.6402%" y="117" width="0.3350%" height="15" fill="rgb(248,181,18)" fg:x="4552" fg:w="131"/><text x="11.9331%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (160 instructions, 0.41%)</title><rect x="11.6402%" y="133" width="0.4091%" height="15" fill="rgb(233,39,42)" fg:x="4552" fg:w="160"/><text x="11.9331%" y="143.50"></text></g><g><title>__rust_realloc (109 instructions, 0.28%)</title><rect x="12.0493%" y="53" width="0.2787%" height="15" fill="rgb(238,110,33)" fg:x="4712" fg:w="109"/><text x="12.3423%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.42%)</title><rect x="12.0493%" y="69" width="0.4245%" height="15" fill="rgb(233,195,10)" fg:x="4712" fg:w="166"/><text x="12.3423%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (252 instructions, 0.64%)</title><rect x="12.0493%" y="85" width="0.6444%" height="15" fill="rgb(254,105,3)" fg:x="4712" fg:w="252"/><text x="12.3423%" y="95.50"></text></g><g><title>memcpy (211 instructions, 0.54%)</title><rect x="12.6937%" y="85" width="0.5396%" height="15" fill="rgb(221,225,9)" fg:x="4964" fg:w="211"/><text x="12.9867%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (503 instructions, 1.29%)</title><rect x="12.0493%" y="101" width="1.2862%" height="15" fill="rgb(224,227,45)" fg:x="4712" fg:w="503"/><text x="12.3423%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="13.3355%" y="69" width="0.0281%" height="15" fill="rgb(229,198,43)" fg:x="5215" fg:w="11"/><text x="13.6285%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="13.3637%" y="53" width="0.0895%" height="15" fill="rgb(206,209,35)" fg:x="5226" fg:w="35"/><text x="13.6566%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="13.3637%" y="69" width="0.1637%" height="15" fill="rgb(245,195,53)" fg:x="5226" fg:w="64"/><text x="13.6566%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="13.3355%" y="85" width="0.3682%" height="15" fill="rgb(240,92,26)" fg:x="5215" fg:w="144"/><text x="13.6285%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.55%)</title><rect x="13.3355%" y="101" width="0.5498%" height="15" fill="rgb(207,40,23)" fg:x="5215" fg:w="215"/><text x="13.6285%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="13.8853%" y="85" width="0.1304%" height="15" fill="rgb(223,111,35)" fg:x="5430" fg:w="51"/><text x="14.1783%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (80 instructions, 0.20%)</title><rect x="13.8853%" y="101" width="0.2046%" height="15" fill="rgb(229,147,28)" fg:x="5430" fg:w="80"/><text x="14.1783%" y="111.50"></text></g><g><title>core::fmt::write (959 instructions, 2.45%)</title><rect x="12.0493%" y="117" width="2.4523%" height="15" fill="rgb(211,29,28)" fg:x="4712" fg:w="959"/><text x="12.3423%" y="127.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,019 instructions, 2.61%)</title><rect x="12.0493%" y="133" width="2.6057%" height="15" fill="rgb(228,72,33)" fg:x="4712" fg:w="1019"/><text x="12.3423%" y="143.50">&lt;..</text></g><g><title>core::fmt::write (1,312 instructions, 3.35%)</title><rect x="11.6402%" y="149" width="3.3550%" height="15" fill="rgb(205,214,31)" fg:x="4552" fg:w="1312"/><text x="11.9331%" y="159.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,539 instructions, 3.94%)</title><rect x="11.4075%" y="165" width="3.9355%" height="15" fill="rgb(224,111,15)" fg:x="4461" fg:w="1539"/><text x="11.7004%" y="175.50">all..</text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.13%)</title><rect x="15.3429%" y="165" width="0.1330%" height="15" fill="rgb(253,21,26)" fg:x="6000" fg:w="52"/><text x="15.6359%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.16%)</title><rect x="15.4759%" y="165" width="0.1585%" height="15" fill="rgb(245,139,43)" fg:x="6052" fg:w="62"/><text x="15.7689%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="15.6344%" y="165" width="0.1176%" height="15" fill="rgb(252,170,7)" fg:x="6114" fg:w="46"/><text x="15.9274%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="15.7521%" y="133" width="0.2327%" height="15" fill="rgb(231,118,14)" fg:x="6160" fg:w="91"/><text x="16.0450%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.34%)</title><rect x="15.7521%" y="149" width="0.3375%" height="15" fill="rgb(238,83,0)" fg:x="6160" fg:w="132"/><text x="16.0450%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (208 instructions, 0.53%)</title><rect x="15.7521%" y="165" width="0.5319%" height="15" fill="rgb(221,39,39)" fg:x="6160" fg:w="208"/><text x="16.0450%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="16.2839%" y="165" width="0.1560%" height="15" fill="rgb(222,119,46)" fg:x="6368" fg:w="61"/><text x="16.5769%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="16.4399%" y="165" width="0.2327%" height="15" fill="rgb(222,165,49)" fg:x="6429" fg:w="91"/><text x="16.7329%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="16.6726%" y="149" width="0.2327%" height="15" fill="rgb(219,113,52)" fg:x="6520" fg:w="91"/><text x="16.9656%" y="159.50"></text></g><g><title>memcpy (131 instructions, 0.33%)</title><rect x="16.9053%" y="117" width="0.3350%" height="15" fill="rgb(214,7,15)" fg:x="6611" fg:w="131"/><text x="17.1983%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (160 instructions, 0.41%)</title><rect x="16.9053%" y="133" width="0.4091%" height="15" fill="rgb(235,32,4)" fg:x="6611" fg:w="160"/><text x="17.1983%" y="143.50"></text></g><g><title>__rust_realloc (109 instructions, 0.28%)</title><rect x="17.3145%" y="53" width="0.2787%" height="15" fill="rgb(238,90,54)" fg:x="6771" fg:w="109"/><text x="17.6074%" y="63.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.42%)</title><rect x="17.3145%" y="69" width="0.4245%" height="15" fill="rgb(213,208,19)" fg:x="6771" fg:w="166"/><text x="17.6074%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (252 instructions, 0.64%)</title><rect x="17.3145%" y="85" width="0.6444%" height="15" fill="rgb(233,156,4)" fg:x="6771" fg:w="252"/><text x="17.6074%" y="95.50"></text></g><g><title>memcpy (211 instructions, 0.54%)</title><rect x="17.9589%" y="85" width="0.5396%" height="15" fill="rgb(207,194,5)" fg:x="7023" fg:w="211"/><text x="18.2518%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (503 instructions, 1.29%)</title><rect x="17.3145%" y="101" width="1.2862%" height="15" fill="rgb(206,111,30)" fg:x="6771" fg:w="503"/><text x="17.6074%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="18.6007%" y="69" width="0.0281%" height="15" fill="rgb(243,70,54)" fg:x="7274" fg:w="11"/><text x="18.8937%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="18.6289%" y="53" width="0.0895%" height="15" fill="rgb(242,28,8)" fg:x="7285" fg:w="35"/><text x="18.9218%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="18.6289%" y="69" width="0.1637%" height="15" fill="rgb(219,106,18)" fg:x="7285" fg:w="64"/><text x="18.9218%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="18.6007%" y="85" width="0.3682%" height="15" fill="rgb(244,222,10)" fg:x="7274" fg:w="144"/><text x="18.8937%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (215 instructions, 0.55%)</title><rect x="18.6007%" y="101" width="0.5498%" height="15" fill="rgb(236,179,52)" fg:x="7274" fg:w="215"/><text x="18.8937%" y="111.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="19.1505%" y="85" width="0.1304%" height="15" fill="rgb(213,23,39)" fg:x="7489" fg:w="51"/><text x="19.4435%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (80 instructions, 0.20%)</title><rect x="19.1505%" y="101" width="0.2046%" height="15" fill="rgb(238,48,10)" fg:x="7489" fg:w="80"/><text x="19.4435%" y="111.50"></text></g><g><title>core::fmt::write (959 instructions, 2.45%)</title><rect x="17.3145%" y="117" width="2.4523%" height="15" fill="rgb(251,196,23)" fg:x="6771" fg:w="959"/><text x="17.6074%" y="127.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (1,019 instructions, 2.61%)</title><rect x="17.3145%" y="133" width="2.6057%" height="15" fill="rgb(250,152,24)" fg:x="6771" fg:w="1019"/><text x="17.6074%" y="143.50">&lt;..</text></g><g><title>core::fmt::write (1,312 instructions, 3.35%)</title><rect x="16.9053%" y="149" width="3.3550%" height="15" fill="rgb(209,150,17)" fg:x="6611" fg:w="1312"/><text x="17.1983%" y="159.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,539 instructions, 3.94%)</title><rect x="16.6726%" y="165" width="3.9355%" height="15" fill="rgb(234,202,34)" fg:x="6520" fg:w="1539"/><text x="16.9656%" y="175.50">all..</text></g><g><title>binread::binary_template::write_comment (52 instructions, 0.13%)</title><rect x="20.6081%" y="165" width="0.1330%" height="15" fill="rgb(253,148,53)" fg:x="8059" fg:w="52"/><text x="20.9011%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.16%)</title><rect x="20.7411%" y="165" width="0.1585%" height="15" fill="rgb(218,129,16)" fg:x="8111" fg:w="62"/><text x="21.0340%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="20.8996%" y="165" width="0.1176%" height="15" fill="rgb(216,85,19)" fg:x="8173" fg:w="46"/><text x="21.1926%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.16%)</title><rect x="21.0172%" y="165" width="0.1560%" height="15" fill="rgb(235,228,7)" fg:x="8219" fg:w="61"/><text x="21.3102%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="21.1732%" y="149" width="0.1304%" height="15" fill="rgb(245,175,0)" fg:x="8280" fg:w="51"/><text x="21.4662%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.24%)</title><rect x="21.3036%" y="149" width="0.2429%" height="15" fill="rgb(208,168,36)" fg:x="8331" fg:w="95"/><text x="21.5966%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="21.5466%" y="133" width="0.0153%" height="15" fill="rgb(246,171,24)" fg:x="8426" fg:w="6"/><text x="21.8395%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.12%)</title><rect x="21.5466%" y="149" width="1.1175%" height="15" fill="rgb(215,142,24)" fg:x="8426" fg:w="437"/><text x="21.8395%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="22.6640%" y="149" width="0.0486%" height="15" fill="rgb(250,187,7)" fg:x="8863" fg:w="19"/><text x="22.9570%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="22.7126%" y="117" width="0.2327%" height="15" fill="rgb(228,66,33)" fg:x="8882" fg:w="91"/><text x="23.0056%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="22.9453%" y="85" width="0.1713%" height="15" fill="rgb(234,215,21)" fg:x="8973" fg:w="67"/><text x="23.2383%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (96 instructions, 0.25%)</title><rect x="22.9453%" y="101" width="0.2455%" height="15" fill="rgb(222,191,20)" fg:x="8973" fg:w="96"/><text x="23.2383%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="23.1908%" y="53" width="0.0281%" height="15" fill="rgb(245,79,54)" fg:x="9069" fg:w="11"/><text x="23.4838%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="23.2189%" y="37" width="0.0895%" height="15" fill="rgb(240,10,37)" fg:x="9080" fg:w="35"/><text x="23.5119%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="23.2189%" y="53" width="0.1637%" height="15" fill="rgb(214,192,32)" fg:x="9080" fg:w="64"/><text x="23.5119%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="23.1908%" y="69" width="0.3682%" height="15" fill="rgb(209,36,54)" fg:x="9069" fg:w="144"/><text x="23.4838%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.54%)</title><rect x="23.1908%" y="85" width="0.5370%" height="15" fill="rgb(220,10,11)" fg:x="9069" fg:w="210"/><text x="23.4838%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.56%)</title><rect x="23.1908%" y="101" width="0.5626%" height="15" fill="rgb(221,106,17)" fg:x="9069" fg:w="220"/><text x="23.4838%" y="111.50"></text></g><g><title>core::fmt::write (449 instructions, 1.15%)</title><rect x="22.9453%" y="117" width="1.1482%" height="15" fill="rgb(251,142,44)" fg:x="8973" fg:w="449"/><text x="23.2383%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.73%)</title><rect x="22.7126%" y="133" width="1.7286%" height="15" fill="rgb(238,13,15)" fg:x="8882" fg:w="676"/><text x="23.0056%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.16%)</title><rect x="24.4413%" y="133" width="0.1637%" height="15" fill="rgb(208,107,27)" fg:x="9558" fg:w="64"/><text x="24.7342%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.16%)</title><rect x="24.6049%" y="133" width="0.1585%" height="15" fill="rgb(205,136,37)" fg:x="9622" fg:w="62"/><text x="24.8979%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 2.33%)</title><rect x="22.7126%" y="149" width="2.3347%" height="15" fill="rgb(250,205,27)" fg:x="8882" fg:w="913"/><text x="23.0056%" y="159.50">b..</text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="25.0473%" y="133" width="0.1304%" height="15" fill="rgb(210,80,43)" fg:x="9795" fg:w="51"/><text x="25.3403%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (367 instructions, 0.94%)</title><rect x="25.1777%" y="133" width="0.9385%" height="15" fill="rgb(247,160,36)" fg:x="9846" fg:w="367"/><text x="25.4707%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="26.1162%" y="117" width="0.1304%" height="15" fill="rgb(234,13,49)" fg:x="10213" fg:w="51"/><text x="26.4092%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.30%)</title><rect x="26.2466%" y="117" width="0.3017%" height="15" fill="rgb(234,122,0)" fg:x="10264" fg:w="118"/><text x="26.5396%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="26.5484%" y="117" width="0.1176%" height="15" fill="rgb(207,146,38)" fg:x="10382" fg:w="46"/><text x="26.8413%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.72%)</title><rect x="26.1162%" y="133" width="0.7237%" height="15" fill="rgb(207,177,25)" fg:x="10213" fg:w="283"/><text x="26.4092%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="26.8399%" y="133" width="0.1176%" height="15" fill="rgb(211,178,42)" fg:x="10496" fg:w="46"/><text x="27.1328%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 2.27%)</title><rect x="25.0473%" y="149" width="2.2708%" height="15" fill="rgb(230,69,54)" fg:x="9795" fg:w="888"/><text x="25.3403%" y="159.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="27.3181%" y="149" width="0.2327%" height="15" fill="rgb(214,135,41)" fg:x="10683" fg:w="91"/><text x="27.6110%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 instructions, 0.06%)</title><rect x="27.5508%" y="149" width="0.0639%" height="15" fill="rgb(237,67,25)" fg:x="10774" fg:w="25"/><text x="27.8437%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="27.6147%" y="149" width="0.1176%" height="15" fill="rgb(222,189,50)" fg:x="10799" fg:w="46"/><text x="27.9077%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,860 instructions, 7.31%)</title><rect x="21.1732%" y="165" width="7.3135%" height="15" fill="rgb(245,148,34)" fg:x="8280" fg:w="2860"/><text x="21.4662%" y="175.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="28.4867%" y="149" width="0.2276%" height="15" fill="rgb(222,29,6)" fg:x="11140" fg:w="89"/><text x="28.7796%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.21%)</title><rect x="28.7143%" y="149" width="0.2122%" height="15" fill="rgb(221,189,43)" fg:x="11229" fg:w="83"/><text x="29.0072%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (330 instructions, 0.84%)</title><rect x="28.4867%" y="165" width="0.8439%" height="15" fill="rgb(207,36,27)" fg:x="11140" fg:w="330"/><text x="28.7796%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="29.3305%" y="149" width="0.0588%" height="15" fill="rgb(217,90,24)" fg:x="11470" fg:w="23"/><text x="29.6235%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="29.3894%" y="149" width="0.0690%" height="15" fill="rgb(224,66,35)" fg:x="11493" fg:w="27"/><text x="29.6823%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.49%)</title><rect x="29.3305%" y="165" width="0.4935%" height="15" fill="rgb(221,13,50)" fg:x="11470" fg:w="193"/><text x="29.6235%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (8,206 instructions, 20.98%)</title><rect x="11.0188%" y="181" width="20.9840%" height="15" fill="rgb(236,68,49)" fg:x="4309" fg:w="8206"/><text x="11.3117%" y="191.50">&lt;core::iter::adapters::map::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="32.0028%" y="181" width="0.2327%" height="15" fill="rgb(229,146,28)" fg:x="12515" fg:w="91"/><text x="32.2957%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.07%)</title><rect x="32.2355%" y="181" width="0.0690%" height="15" fill="rgb(225,31,38)" fg:x="12606" fg:w="27"/><text x="32.5284%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="32.3045%" y="181" width="0.1176%" height="15" fill="rgb(250,208,3)" fg:x="12633" fg:w="46"/><text x="32.5975%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.24%)</title><rect x="32.4221%" y="181" width="0.2429%" height="15" fill="rgb(246,54,23)" fg:x="12679" fg:w="95"/><text x="32.7151%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="32.6651%" y="149" width="0.0153%" height="15" fill="rgb(243,76,11)" fg:x="12774" fg:w="6"/><text x="32.9580%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 1.12%)</title><rect x="32.6651%" y="165" width="1.1175%" height="15" fill="rgb(245,21,50)" fg:x="12774" fg:w="437"/><text x="32.9580%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="33.7825%" y="165" width="0.0486%" height="15" fill="rgb(228,9,43)" fg:x="13211" fg:w="19"/><text x="34.0755%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.29%)</title><rect x="33.8311%" y="133" width="0.2941%" height="15" fill="rgb(208,100,47)" fg:x="13230" fg:w="115"/><text x="34.1241%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="34.1252%" y="101" width="0.1713%" height="15" fill="rgb(232,26,8)" fg:x="13345" fg:w="67"/><text x="34.4182%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (96 instructions, 0.25%)</title><rect x="34.1252%" y="117" width="0.2455%" height="15" fill="rgb(216,166,38)" fg:x="13345" fg:w="96"/><text x="34.4182%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="34.3707%" y="69" width="0.0281%" height="15" fill="rgb(251,202,51)" fg:x="13441" fg:w="11"/><text x="34.6637%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="34.3988%" y="53" width="0.0895%" height="15" fill="rgb(254,216,34)" fg:x="13452" fg:w="35"/><text x="34.6918%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="34.3988%" y="69" width="0.1637%" height="15" fill="rgb(251,32,27)" fg:x="13452" fg:w="64"/><text x="34.6918%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="34.3707%" y="85" width="0.3682%" height="15" fill="rgb(208,127,28)" fg:x="13441" fg:w="144"/><text x="34.6637%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.54%)</title><rect x="34.3707%" y="101" width="0.5370%" height="15" fill="rgb(224,137,22)" fg:x="13441" fg:w="210"/><text x="34.6637%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.56%)</title><rect x="34.3707%" y="117" width="0.5626%" height="15" fill="rgb(254,70,32)" fg:x="13441" fg:w="220"/><text x="34.6637%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 1.15%)</title><rect x="34.1252%" y="133" width="1.1482%" height="15" fill="rgb(229,75,37)" fg:x="13345" fg:w="449"/><text x="34.4182%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (700 instructions, 1.79%)</title><rect x="33.8311%" y="149" width="1.7900%" height="15" fill="rgb(252,64,23)" fg:x="13230" fg:w="700"/><text x="34.1241%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.16%)</title><rect x="35.6211%" y="149" width="0.1637%" height="15" fill="rgb(232,162,48)" fg:x="13930" fg:w="64"/><text x="35.9141%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.16%)</title><rect x="35.7848%" y="149" width="0.1560%" height="15" fill="rgb(246,160,12)" fg:x="13994" fg:w="61"/><text x="36.0778%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (936 instructions, 2.39%)</title><rect x="33.8311%" y="165" width="2.3935%" height="15" fill="rgb(247,166,0)" fg:x="13230" fg:w="936"/><text x="34.1241%" y="175.50">b..</text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="36.2246%" y="149" width="0.1304%" height="15" fill="rgb(249,219,21)" fg:x="14166" fg:w="51"/><text x="36.5176%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.30%)</title><rect x="36.3550%" y="149" width="0.3017%" height="15" fill="rgb(205,209,3)" fg:x="14217" fg:w="118"/><text x="36.6480%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="36.6568%" y="149" width="0.1176%" height="15" fill="rgb(243,44,1)" fg:x="14335" fg:w="46"/><text x="36.9497%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.72%)</title><rect x="36.2246%" y="165" width="0.7237%" height="15" fill="rgb(206,159,16)" fg:x="14166" fg:w="283"/><text x="36.5176%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="36.9483%" y="165" width="0.2097%" height="15" fill="rgb(244,77,30)" fg:x="14449" fg:w="82"/><text x="37.2413%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,943 instructions, 4.97%)</title><rect x="32.6651%" y="181" width="4.9685%" height="15" fill="rgb(218,69,12)" fg:x="12774" fg:w="1943"/><text x="32.9580%" y="191.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="37.6336%" y="181" width="0.1176%" height="15" fill="rgb(212,87,7)" fg:x="14717" fg:w="46"/><text x="37.9266%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="37.7512%" y="181" width="0.2097%" height="15" fill="rgb(245,114,25)" fg:x="14763" fg:w="82"/><text x="38.0442%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="37.9609%" y="165" width="0.2097%" height="15" fill="rgb(210,61,42)" fg:x="14845" fg:w="82"/><text x="38.2539%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (178 instructions, 0.46%)</title><rect x="37.9609%" y="181" width="0.4552%" height="15" fill="rgb(211,52,33)" fg:x="14845" fg:w="178"/><text x="38.2539%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="38.4161%" y="149" width="0.2097%" height="15" fill="rgb(234,58,33)" fg:x="15023" fg:w="82"/><text x="38.7091%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.31%)</title><rect x="38.4161%" y="165" width="0.3145%" height="15" fill="rgb(220,115,36)" fg:x="15023" fg:w="123"/><text x="38.7091%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.54%)</title><rect x="38.4161%" y="181" width="0.5370%" height="15" fill="rgb(243,153,54)" fg:x="15023" fg:w="210"/><text x="38.7091%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="38.9531%" y="181" width="0.2327%" height="15" fill="rgb(251,47,18)" fg:x="15233" fg:w="91"/><text x="39.2461%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.20%)</title><rect x="39.1858%" y="165" width="0.2046%" height="15" fill="rgb(242,102,42)" fg:x="15324" fg:w="80"/><text x="39.4788%" y="175.50"></text></g><g><title>memcpy (99 instructions, 0.25%)</title><rect x="39.3904%" y="133" width="0.2532%" height="15" fill="rgb(234,31,38)" fg:x="15404" fg:w="99"/><text x="39.6833%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (128 instructions, 0.33%)</title><rect x="39.3904%" y="149" width="0.3273%" height="15" fill="rgb(221,117,51)" fg:x="15404" fg:w="128"/><text x="39.6833%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="39.7177%" y="101" width="0.0281%" height="15" fill="rgb(212,20,18)" fg:x="15532" fg:w="11"/><text x="40.0107%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="39.7458%" y="85" width="0.0895%" height="15" fill="rgb(245,133,36)" fg:x="15543" fg:w="35"/><text x="40.0388%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="39.7458%" y="101" width="0.1637%" height="15" fill="rgb(212,6,19)" fg:x="15543" fg:w="64"/><text x="40.0388%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="39.7177%" y="117" width="0.3682%" height="15" fill="rgb(218,1,36)" fg:x="15532" fg:w="144"/><text x="40.0107%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.54%)</title><rect x="39.7177%" y="133" width="0.5370%" height="15" fill="rgb(246,84,54)" fg:x="15532" fg:w="210"/><text x="40.0107%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.59%)</title><rect x="39.7177%" y="149" width="0.5881%" height="15" fill="rgb(242,110,6)" fg:x="15532" fg:w="230"/><text x="40.0107%" y="159.50"></text></g><g><title>core::fmt::write (491 instructions, 1.26%)</title><rect x="39.3904%" y="165" width="1.2556%" height="15" fill="rgb(214,47,5)" fg:x="15404" fg:w="491"/><text x="39.6833%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (707 instructions, 1.81%)</title><rect x="39.1858%" y="181" width="1.8079%" height="15" fill="rgb(218,159,25)" fg:x="15324" fg:w="707"/><text x="39.4788%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="40.9937%" y="165" width="0.2327%" height="15" fill="rgb(215,211,28)" fg:x="16031" fg:w="91"/><text x="41.2867%" y="175.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (157 instructions, 0.40%)</title><rect x="40.9937%" y="181" width="0.4015%" height="15" fill="rgb(238,59,32)" fg:x="16031" fg:w="157"/><text x="41.2867%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="41.3952%" y="149" width="0.2327%" height="15" fill="rgb(226,82,3)" fg:x="16188" fg:w="91"/><text x="41.6882%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (146 instructions, 0.37%)</title><rect x="41.3952%" y="165" width="0.3733%" height="15" fill="rgb(240,164,32)" fg:x="16188" fg:w="146"/><text x="41.6882%" y="175.50"></text></g><g><title>memcmp (146 instructions, 0.37%)</title><rect x="41.7685%" y="149" width="0.3733%" height="15" fill="rgb(232,46,7)" fg:x="16334" fg:w="146"/><text x="42.0615%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.59%)</title><rect x="41.7685%" y="165" width="0.5907%" height="15" fill="rgb(229,129,53)" fg:x="16334" fg:w="231"/><text x="42.0615%" y="175.50"></text></g><g><title>memcmp (146 instructions, 0.37%)</title><rect x="42.3592%" y="149" width="0.3733%" height="15" fill="rgb(234,188,29)" fg:x="16565" fg:w="146"/><text x="42.6522%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (245 instructions, 0.63%)</title><rect x="42.3592%" y="165" width="0.6265%" height="15" fill="rgb(246,141,4)" fg:x="16565" fg:w="245"/><text x="42.6522%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::is_empty (739 instructions, 1.89%)</title><rect x="41.3952%" y="181" width="1.8897%" height="15" fill="rgb(229,23,39)" fg:x="16188" fg:w="739"/><text x="41.6882%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 instructions, 0.24%)</title><rect x="43.2849%" y="181" width="0.2353%" height="15" fill="rgb(206,12,3)" fg:x="16927" fg:w="92"/><text x="43.5779%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="43.5202%" y="181" width="0.0384%" height="15" fill="rgb(252,226,20)" fg:x="17019" fg:w="15"/><text x="43.8131%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.16%)</title><rect x="43.5585%" y="165" width="0.1585%" height="15" fill="rgb(216,123,35)" fg:x="17034" fg:w="62"/><text x="43.8515%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (183 instructions, 0.47%)</title><rect x="43.5585%" y="181" width="0.4680%" height="15" fill="rgb(212,68,40)" fg:x="17034" fg:w="183"/><text x="43.8515%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="44.0265%" y="149" width="0.2327%" height="15" fill="rgb(254,125,32)" fg:x="17217" fg:w="91"/><text x="44.3195%" y="159.50"></text></g><g><title>memcpy (99 instructions, 0.25%)</title><rect x="44.2592%" y="117" width="0.2532%" height="15" fill="rgb(253,97,22)" fg:x="17308" fg:w="99"/><text x="44.5522%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (128 instructions, 0.33%)</title><rect x="44.2592%" y="133" width="0.3273%" height="15" fill="rgb(241,101,14)" fg:x="17308" fg:w="128"/><text x="44.5522%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="44.5865%" y="85" width="0.0281%" height="15" fill="rgb(238,103,29)" fg:x="17436" fg:w="11"/><text x="44.8795%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="44.6146%" y="69" width="0.0895%" height="15" fill="rgb(233,195,47)" fg:x="17447" fg:w="35"/><text x="44.9076%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.8 (64 instructions, 0.16%)</title><rect x="44.6146%" y="85" width="0.1637%" height="15" fill="rgb(246,218,30)" fg:x="17447" fg:w="64"/><text x="44.9076%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.37%)</title><rect x="44.5865%" y="101" width="0.3682%" height="15" fill="rgb(219,145,47)" fg:x="17436" fg:w="144"/><text x="44.8795%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.54%)</title><rect x="44.5865%" y="117" width="0.5370%" height="15" fill="rgb(243,12,26)" fg:x="17436" fg:w="210"/><text x="44.8795%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (230 instructions, 0.59%)</title><rect x="44.5865%" y="133" width="0.5881%" height="15" fill="rgb(214,87,16)" fg:x="17436" fg:w="230"/><text x="44.8795%" y="143.50"></text></g><g><title>core::fmt::write (491 instructions, 1.26%)</title><rect x="44.2592%" y="149" width="1.2556%" height="15" fill="rgb(208,99,42)" fg:x="17308" fg:w="491"/><text x="44.5522%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (718 instructions, 1.84%)</title><rect x="44.0265%" y="165" width="1.8360%" height="15" fill="rgb(253,99,2)" fg:x="17217" fg:w="718"/><text x="44.3195%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="45.8625%" y="165" width="0.2327%" height="15" fill="rgb(220,168,23)" fg:x="17935" fg:w="91"/><text x="46.1555%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (933 instructions, 2.39%)</title><rect x="44.0265%" y="181" width="2.3858%" height="15" fill="rgb(242,38,24)" fg:x="17217" fg:w="933"/><text x="44.3195%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="46.4123%" y="149" width="0.2327%" height="15" fill="rgb(225,182,9)" fg:x="18150" fg:w="91"/><text x="46.7053%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.34%)</title><rect x="46.4123%" y="165" width="0.3375%" height="15" fill="rgb(243,178,37)" fg:x="18150" fg:w="132"/><text x="46.7053%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (219 instructions, 0.56%)</title><rect x="46.4123%" y="181" width="0.5600%" height="15" fill="rgb(232,139,19)" fg:x="18150" fg:w="219"/><text x="46.7053%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="46.9723%" y="181" width="0.2327%" height="15" fill="rgb(225,201,24)" fg:x="18369" fg:w="91"/><text x="47.2653%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="47.2050%" y="181" width="0.2276%" height="15" fill="rgb(221,47,46)" fg:x="18460" fg:w="89"/><text x="47.4980%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="47.4326%" y="181" width="0.2327%" height="15" fill="rgb(249,23,13)" fg:x="18549" fg:w="91"/><text x="47.7256%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="47.6653%" y="181" width="0.2327%" height="15" fill="rgb(219,9,5)" fg:x="18640" fg:w="91"/><text x="47.9583%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="47.8980%" y="165" width="0.2276%" height="15" fill="rgb(254,171,16)" fg:x="18731" fg:w="89"/><text x="48.1910%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (167 instructions, 0.43%)</title><rect x="47.8980%" y="181" width="0.4270%" height="15" fill="rgb(230,171,20)" fg:x="18731" fg:w="167"/><text x="48.1910%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="48.3251%" y="165" width="0.0690%" height="15" fill="rgb(210,71,41)" fg:x="18898" fg:w="27"/><text x="48.6180%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.17%)</title><rect x="48.3941%" y="165" width="0.1713%" height="15" fill="rgb(206,173,20)" fg:x="18925" fg:w="67"/><text x="48.6871%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (189 instructions, 0.48%)</title><rect x="48.3251%" y="181" width="0.4833%" height="15" fill="rgb(233,88,34)" fg:x="18898" fg:w="189"/><text x="48.6180%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="48.8084%" y="181" width="0.2276%" height="15" fill="rgb(223,209,46)" fg:x="19087" fg:w="89"/><text x="49.1013%" y="191.50"></text></g><g><title>memcpy (392 instructions, 1.00%)</title><rect x="49.0360%" y="181" width="1.0024%" height="15" fill="rgb(250,43,18)" fg:x="19176" fg:w="392"/><text x="49.3289%" y="191.50"></text></g><g><title>memcpy (392 instructions, 1.00%)</title><rect x="50.0384%" y="181" width="1.0024%" height="15" fill="rgb(208,13,10)" fg:x="19568" fg:w="392"/><text x="50.3313%" y="191.50"></text></g><g><title>memcpy (504 instructions, 1.29%)</title><rect x="51.0408%" y="181" width="1.2888%" height="15" fill="rgb(212,200,36)" fg:x="19960" fg:w="504"/><text x="51.3337%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (20,448 instructions, 52.29%)</title><rect x="4.9558%" y="197" width="52.2887%" height="15" fill="rgb(225,90,30)" fg:x="1938" fg:w="20448"/><text x="5.2487%" y="207.50">candid::de::IDLDeserialize::new_with_config</text></g><g><title>memcpy (408 instructions, 1.04%)</title><rect x="57.2444%" y="197" width="1.0433%" height="15" fill="rgb(236,182,39)" fg:x="22386" fg:w="408"/><text x="57.5374%" y="207.50"></text></g><g><title>memcpy (408 instructions, 1.04%)</title><rect x="58.2877%" y="197" width="1.0433%" height="15" fill="rgb(212,144,35)" fg:x="22794" fg:w="408"/><text x="58.5807%" y="207.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.06%)</title><rect x="59.3310%" y="197" width="0.0614%" height="15" fill="rgb(228,63,44)" fg:x="23202" fg:w="24"/><text x="59.6240%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (169 instructions, 0.43%)</title><rect x="59.3924%" y="197" width="0.4322%" height="15" fill="rgb(228,109,6)" fg:x="23226" fg:w="169"/><text x="59.6854%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="59.8246%" y="181" width="0.2097%" height="15" fill="rgb(238,117,24)" fg:x="23395" fg:w="82"/><text x="60.1175%" y="191.50"></text></g><g><title>candid::types::internal::env_add (166 instructions, 0.42%)</title><rect x="59.8246%" y="197" width="0.4245%" height="15" fill="rgb(242,26,26)" fg:x="23395" fg:w="166"/><text x="60.1175%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="60.2491%" y="197" width="0.2097%" height="15" fill="rgb(221,92,48)" fg:x="23561" fg:w="82"/><text x="60.5420%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="60.4588%" y="197" width="0.2097%" height="15" fill="rgb(209,209,32)" fg:x="23643" fg:w="82"/><text x="60.7517%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="60.6684%" y="197" width="0.2097%" height="15" fill="rgb(221,70,22)" fg:x="23725" fg:w="82"/><text x="60.9614%" y="207.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.27%)</title><rect x="60.8781%" y="181" width="0.2736%" height="15" fill="rgb(248,145,5)" fg:x="23807" fg:w="107"/><text x="61.1711%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="61.1517%" y="181" width="0.2327%" height="15" fill="rgb(226,116,26)" fg:x="23914" fg:w="91"/><text x="61.4447%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.56%)</title><rect x="61.3844%" y="165" width="0.5626%" height="15" fill="rgb(244,5,17)" fg:x="24005" fg:w="220"/><text x="61.6774%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.24%)</title><rect x="61.9470%" y="165" width="0.2353%" height="15" fill="rgb(252,159,33)" fg:x="24225" fg:w="92"/><text x="62.2400%" y="175.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 1.37%)</title><rect x="61.3844%" y="181" width="1.3706%" height="15" fill="rgb(206,71,0)" fg:x="24005" fg:w="536"/><text x="61.6774%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="62.7551%" y="181" width="0.2327%" height="15" fill="rgb(233,118,54)" fg:x="24541" fg:w="91"/><text x="63.0480%" y="191.50"></text></g><g><title>memcmp (491 instructions, 1.26%)</title><rect x="62.9878%" y="165" width="1.2556%" height="15" fill="rgb(234,83,48)" fg:x="24632" fg:w="491"/><text x="63.2807%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="64.2433%" y="149" width="0.2276%" height="15" fill="rgb(228,3,54)" fg:x="25123" fg:w="89"/><text x="64.5363%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.41%)</title><rect x="64.2433%" y="165" width="0.4091%" height="15" fill="rgb(226,155,13)" fg:x="25123" fg:w="160"/><text x="64.5363%" y="175.50"></text></g><g><title>candid::types::internal::env_add (830 instructions, 2.12%)</title><rect x="62.9878%" y="181" width="2.1224%" height="15" fill="rgb(241,28,37)" fg:x="24632" fg:w="830"/><text x="63.2807%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.23%)</title><rect x="65.1102%" y="165" width="0.2327%" height="15" fill="rgb(233,93,10)" fg:x="25462" fg:w="91"/><text x="65.4032%" y="175.50"></text></g><g><title>candid::types::internal::env_id (211 instructions, 0.54%)</title><rect x="65.1102%" y="181" width="0.5396%" height="15" fill="rgb(225,113,19)" fg:x="25462" fg:w="211"/><text x="65.4032%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (1,985 instructions, 5.08%)</title><rect x="60.8781%" y="197" width="5.0759%" height="15" fill="rgb(241,2,18)" fg:x="23807" fg:w="1985"/><text x="61.1711%" y="207.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="65.9541%" y="197" width="0.2097%" height="15" fill="rgb(228,207,21)" fg:x="25792" fg:w="82"/><text x="66.2470%" y="207.50"></text></g><g><title>memcmp (491 instructions, 1.26%)</title><rect x="66.1638%" y="181" width="1.2556%" height="15" fill="rgb(213,211,35)" fg:x="25874" fg:w="491"/><text x="66.4567%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="67.4193%" y="165" width="0.2276%" height="15" fill="rgb(209,83,10)" fg:x="26365" fg:w="89"/><text x="67.7123%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.41%)</title><rect x="67.4193%" y="181" width="0.4091%" height="15" fill="rgb(209,164,1)" fg:x="26365" fg:w="160"/><text x="67.7123%" y="191.50"></text></g><g><title>candid::types::internal::env_add (871 instructions, 2.23%)</title><rect x="66.1638%" y="197" width="2.2273%" height="15" fill="rgb(213,184,43)" fg:x="25874" fg:w="871"/><text x="66.4567%" y="207.50">c..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.09%)</title><rect x="68.3910%" y="181" width="0.0869%" height="15" fill="rgb(231,61,34)" fg:x="26745" fg:w="34"/><text x="68.6840%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.09%)</title><rect x="68.4780%" y="181" width="0.0869%" height="15" fill="rgb(235,75,3)" fg:x="26779" fg:w="34"/><text x="68.7710%" y="191.50"></text></g><g><title>candid::types::internal::env_id (327 instructions, 0.84%)</title><rect x="68.3910%" y="197" width="0.8362%" height="15" fill="rgb(220,106,47)" fg:x="26745" fg:w="327"/><text x="68.6840%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.13%)</title><rect x="69.2272%" y="197" width="0.1253%" height="15" fill="rgb(210,196,33)" fg:x="27072" fg:w="49"/><text x="69.5202%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.21%)</title><rect x="69.3525%" y="181" width="0.2122%" height="15" fill="rgb(229,154,42)" fg:x="27121" fg:w="83"/><text x="69.6455%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="69.7463%" y="165" width="0.0588%" height="15" fill="rgb(228,114,26)" fg:x="27275" fg:w="23"/><text x="70.0393%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.35%)</title><rect x="69.7463%" y="181" width="0.3529%" height="15" fill="rgb(208,144,1)" fg:x="27275" fg:w="138"/><text x="70.0393%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (363 instructions, 0.93%)</title><rect x="69.3525%" y="197" width="0.9282%" height="15" fill="rgb(239,112,37)" fg:x="27121" fg:w="363"/><text x="69.6455%" y="207.50"></text></g><g><title>memcmp (146 instructions, 0.37%)</title><rect x="70.2808%" y="133" width="0.3733%" height="15" fill="rgb(210,96,50)" fg:x="27484" fg:w="146"/><text x="70.5737%" y="143.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::get (231 instructions, 0.59%)</title><rect x="70.2808%" y="149" width="0.5907%" height="15" fill="rgb(222,178,2)" fg:x="27484" fg:w="231"/><text x="70.5737%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.13%)</title><rect x="70.8715%" y="149" width="0.1253%" height="15" fill="rgb(226,74,18)" fg:x="27715" fg:w="49"/><text x="71.1644%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (346 instructions, 0.88%)</title><rect x="70.2808%" y="165" width="0.8848%" height="15" fill="rgb(225,67,54)" fg:x="27484" fg:w="346"/><text x="70.5737%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="71.1656%" y="165" width="0.0358%" height="15" fill="rgb(251,92,32)" fg:x="27830" fg:w="14"/><text x="71.4585%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (444 instructions, 1.14%)</title><rect x="70.2808%" y="181" width="1.1354%" height="15" fill="rgb(228,149,22)" fg:x="27484" fg:w="444"/><text x="70.5737%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="71.4162%" y="181" width="0.0793%" height="15" fill="rgb(243,54,13)" fg:x="27928" fg:w="31"/><text x="71.7091%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.20%)</title><rect x="71.4954%" y="165" width="0.2046%" height="15" fill="rgb(243,180,28)" fg:x="27959" fg:w="80"/><text x="71.7884%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.29%)</title><rect x="71.9608%" y="165" width="0.2941%" height="15" fill="rgb(208,167,24)" fg:x="28141" fg:w="115"/><text x="72.2538%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (399 instructions, 1.02%)</title><rect x="71.4954%" y="181" width="1.0203%" height="15" fill="rgb(245,73,45)" fg:x="27959" fg:w="399"/><text x="71.7884%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="72.5157%" y="181" width="0.0793%" height="15" fill="rgb(237,203,48)" fg:x="28358" fg:w="31"/><text x="72.8087%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="72.5950%" y="181" width="0.0358%" height="15" fill="rgb(211,197,16)" fg:x="28389" fg:w="14"/><text x="72.8880%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="72.6308%" y="181" width="0.0307%" height="15" fill="rgb(243,99,51)" fg:x="28403" fg:w="12"/><text x="72.9238%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="72.6615%" y="181" width="0.0358%" height="15" fill="rgb(215,123,29)" fg:x="28415" fg:w="14"/><text x="72.9545%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="72.6973%" y="181" width="0.0307%" height="15" fill="rgb(239,186,37)" fg:x="28429" fg:w="12"/><text x="72.9903%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="72.7280%" y="181" width="0.0793%" height="15" fill="rgb(252,136,39)" fg:x="28441" fg:w="31"/><text x="73.0209%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.20%)</title><rect x="72.8072%" y="181" width="0.2046%" height="15" fill="rgb(223,213,32)" fg:x="28472" fg:w="80"/><text x="73.1002%" y="191.50"></text></g><g><title>memcpy (99 instructions, 0.25%)</title><rect x="73.0118%" y="181" width="0.2532%" height="15" fill="rgb(233,115,5)" fg:x="28552" fg:w="99"/><text x="73.3048%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.31%)</title><rect x="73.2650%" y="181" width="0.3145%" height="15" fill="rgb(207,226,44)" fg:x="28651" fg:w="123"/><text x="73.5579%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="73.5795%" y="181" width="0.2276%" height="15" fill="rgb(208,126,0)" fg:x="28774" fg:w="89"/><text x="73.8725%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="73.8071%" y="181" width="0.0307%" height="15" fill="rgb(244,66,21)" fg:x="28863" fg:w="12"/><text x="74.1001%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="73.8378%" y="165" width="0.0793%" height="15" fill="rgb(222,97,12)" fg:x="28875" fg:w="31"/><text x="74.1307%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.09%)</title><rect x="73.9170%" y="149" width="0.0946%" height="15" fill="rgb(219,213,19)" fg:x="28906" fg:w="37"/><text x="74.2100%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.09%)</title><rect x="74.0117%" y="149" width="0.0869%" height="15" fill="rgb(252,169,30)" fg:x="28943" fg:w="34"/><text x="74.3046%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.09%)</title><rect x="74.0986%" y="149" width="0.0869%" height="15" fill="rgb(206,32,51)" fg:x="28977" fg:w="34"/><text x="74.3916%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.13%)</title><rect x="74.1855%" y="133" width="0.1304%" height="15" fill="rgb(250,172,42)" fg:x="29011" fg:w="51"/><text x="74.4785%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.24%)</title><rect x="74.3160%" y="133" width="0.2429%" height="15" fill="rgb(209,34,43)" fg:x="29062" fg:w="95"/><text x="74.6089%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.12%)</title><rect x="74.5589%" y="133" width="0.1176%" height="15" fill="rgb(223,11,35)" fg:x="29157" fg:w="46"/><text x="74.8519%" y="143.50"></text></g><g><title>binread::BinRead::read (255 instructions, 0.65%)</title><rect x="74.1855%" y="149" width="0.6521%" height="15" fill="rgb(251,219,26)" fg:x="29011" fg:w="255"/><text x="74.4785%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="74.8376%" y="149" width="0.0793%" height="15" fill="rgb(231,119,3)" fg:x="29266" fg:w="31"/><text x="75.1306%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (56 instructions, 0.14%)</title><rect x="74.9169%" y="149" width="0.1432%" height="15" fill="rgb(216,97,11)" fg:x="29297" fg:w="56"/><text x="75.2099%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="75.0601%" y="133" width="0.2097%" height="15" fill="rgb(223,59,9)" fg:x="29353" fg:w="82"/><text x="75.3531%" y="143.50"></text></g><g><title>memcpy (115 instructions, 0.29%)</title><rect x="75.2698%" y="133" width="0.2941%" height="15" fill="rgb(233,93,31)" fg:x="29435" fg:w="115"/><text x="75.5627%" y="143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (239 instructions, 0.61%)</title><rect x="75.0601%" y="149" width="0.6112%" height="15" fill="rgb(239,81,33)" fg:x="29353" fg:w="239"/><text x="75.3531%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (160 instructions, 0.41%)</title><rect x="75.6713%" y="149" width="0.4091%" height="15" fill="rgb(213,120,34)" fg:x="29592" fg:w="160"/><text x="75.9642%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,003 instructions, 2.56%)</title><rect x="73.9170%" y="165" width="2.5648%" height="15" fill="rgb(243,49,53)" fg:x="28906" fg:w="1003"/><text x="74.2100%" y="175.50">s..</text></g><g><title>serde::de::MapAccess::next_value (1,076 instructions, 2.75%)</title><rect x="73.8378%" y="181" width="2.7515%" height="15" fill="rgb(247,216,33)" fg:x="28875" fg:w="1076"/><text x="74.1307%" y="191.50">s..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.08%)</title><rect x="76.5893%" y="181" width="0.0793%" height="15" fill="rgb(226,26,14)" fg:x="29951" fg:w="31"/><text x="76.8822%" y="191.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="76.6685%" y="165" width="0.0179%" height="15" fill="rgb(215,49,53)" fg:x="29982" fg:w="7"/><text x="76.9615%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="76.6864%" y="165" width="0.2276%" height="15" fill="rgb(245,162,40)" fg:x="29989" fg:w="89"/><text x="76.9794%" y="175.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="76.9140%" y="165" width="0.0179%" height="15" fill="rgb(229,68,17)" fg:x="30078" fg:w="7"/><text x="77.2070%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.23%)</title><rect x="76.9319%" y="165" width="0.2276%" height="15" fill="rgb(213,182,10)" fg:x="30085" fg:w="89"/><text x="77.2249%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Compound&gt; (307 instructions, 0.79%)</title><rect x="76.6685%" y="181" width="0.7850%" height="15" fill="rgb(245,125,30)" fg:x="29982" fg:w="307"/><text x="76.9615%" y="191.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (3,569 instructions, 9.13%)</title><rect x="70.2808%" y="197" width="9.1265%" height="15" fill="rgb(232,202,2)" fg:x="27484" fg:w="3569"/><text x="70.5737%" y="207.50">publisher::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="79.6195%" y="165" width="0.0588%" height="15" fill="rgb(237,140,51)" fg:x="31136" fg:w="23"/><text x="79.9125%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (223 instructions, 0.57%)</title><rect x="79.4073%" y="181" width="0.5702%" height="15" fill="rgb(236,157,25)" fg:x="31053" fg:w="223"/><text x="79.7002%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (340 instructions, 0.87%)</title><rect x="79.4073%" y="197" width="0.8694%" height="15" fill="rgb(219,209,0)" fg:x="31053" fg:w="340"/><text x="79.7002%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="80.2767%" y="197" width="0.0358%" height="15" fill="rgb(240,116,54)" fg:x="31393" fg:w="14"/><text x="80.5697%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="80.3125%" y="197" width="0.0358%" height="15" fill="rgb(216,10,36)" fg:x="31407" fg:w="14"/><text x="80.6055%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.09%)</title><rect x="80.3483%" y="197" width="0.0946%" height="15" fill="rgb(222,72,44)" fg:x="31421" fg:w="37"/><text x="80.6413%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="80.4429%" y="149" width="0.0690%" height="15" fill="rgb(232,159,9)" fg:x="31458" fg:w="27"/><text x="80.7359%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.35%)</title><rect x="80.4429%" y="165" width="0.3478%" height="15" fill="rgb(210,39,32)" fg:x="31458" fg:w="136"/><text x="80.7359%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.21%)</title><rect x="80.7907%" y="133" width="0.2122%" height="15" fill="rgb(216,194,45)" fg:x="31594" fg:w="83"/><text x="81.0836%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (151 instructions, 0.39%)</title><rect x="80.7907%" y="149" width="0.3861%" height="15" fill="rgb(218,18,35)" fg:x="31594" fg:w="151"/><text x="81.0836%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="81.1768%" y="149" width="0.0358%" height="15" fill="rgb(207,83,51)" fg:x="31745" fg:w="14"/><text x="81.4698%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="81.2126%" y="133" width="0.0588%" height="15" fill="rgb(225,63,43)" fg:x="31759" fg:w="23"/><text x="81.5056%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.06%)</title><rect x="81.5655%" y="133" width="0.0588%" height="15" fill="rgb(207,57,36)" fg:x="31897" fg:w="23"/><text x="81.8585%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (278 instructions, 0.71%)</title><rect x="81.2126%" y="149" width="0.7109%" height="15" fill="rgb(216,99,33)" fg:x="31759" fg:w="278"/><text x="81.5056%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (596 instructions, 1.52%)</title><rect x="80.7907%" y="165" width="1.5241%" height="15" fill="rgb(225,42,16)" fg:x="31594" fg:w="596"/><text x="81.0836%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="82.3147%" y="149" width="0.0690%" height="15" fill="rgb(220,201,45)" fg:x="32190" fg:w="27"/><text x="82.6077%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="82.3838%" y="149" width="0.0690%" height="15" fill="rgb(225,33,4)" fg:x="32217" fg:w="27"/><text x="82.6767%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.17%)</title><rect x="82.4528%" y="149" width="0.1713%" height="15" fill="rgb(224,33,50)" fg:x="32244" fg:w="67"/><text x="82.7458%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (242 instructions, 0.62%)</title><rect x="82.3147%" y="165" width="0.6188%" height="15" fill="rgb(246,198,51)" fg:x="32190" fg:w="242"/><text x="82.6077%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (1,161 instructions, 2.97%)</title><rect x="80.4429%" y="181" width="2.9689%" height="15" fill="rgb(205,22,4)" fg:x="31458" fg:w="1161"/><text x="80.7359%" y="191.50">&lt;a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="83.4118%" y="165" width="0.0690%" height="15" fill="rgb(206,3,8)" fg:x="32619" fg:w="27"/><text x="83.7047%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="83.4118%" y="181" width="0.3631%" height="15" fill="rgb(251,23,15)" fg:x="32619" fg:w="142"/><text x="83.7047%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="83.7749%" y="149" width="0.0690%" height="15" fill="rgb(252,88,28)" fg:x="32761" fg:w="27"/><text x="84.0678%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="83.8439%" y="149" width="0.0690%" height="15" fill="rgb(212,127,14)" fg:x="32788" fg:w="27"/><text x="84.1369%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.50%)</title><rect x="83.7749%" y="165" width="0.5038%" height="15" fill="rgb(247,145,37)" fg:x="32761" fg:w="197"/><text x="84.0678%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.69%)</title><rect x="83.7749%" y="181" width="0.6853%" height="15" fill="rgb(209,117,53)" fg:x="32761" fg:w="268"/><text x="84.0678%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="84.4602%" y="181" width="0.0358%" height="15" fill="rgb(212,90,42)" fg:x="33029" fg:w="14"/><text x="84.7532%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (1,676 instructions, 4.29%)</title><rect x="80.4429%" y="197" width="4.2858%" height="15" fill="rgb(218,164,37)" fg:x="31458" fg:w="1676"/><text x="80.7359%" y="207.50">core..</text></g><g><title>candid::utils::decode_args_with_config_debug (31,737 instructions, 81.16%)</title><rect x="4.9558%" y="213" width="81.1563%" height="15" fill="rgb(246,65,34)" fg:x="1938" fg:w="31737"/><text x="5.2487%" y="223.50">candid::utils::decode_args_with_config_debug</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="86.1121%" y="197" width="0.0690%" height="15" fill="rgb(231,100,33)" fg:x="33675" fg:w="27"/><text x="86.4051%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="86.1121%" y="213" width="0.3631%" height="15" fill="rgb(228,126,14)" fg:x="33675" fg:w="142"/><text x="86.4051%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data (33,163 instructions, 84.80%)</title><rect x="1.9920%" y="229" width="84.8028%" height="15" fill="rgb(215,173,21)" fg:x="779" fg:w="33163"/><text x="2.2850%" y="239.50">ic_cdk::api::call::arg_data</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.29%)</title><rect x="86.7949%" y="213" width="0.2941%" height="15" fill="rgb(210,6,40)" fg:x="33942" fg:w="115"/><text x="87.0878%" y="223.50"></text></g><g><title>memset (130 instructions, 0.33%)</title><rect x="87.0889%" y="213" width="0.3324%" height="15" fill="rgb(212,48,18)" fg:x="34057" fg:w="130"/><text x="87.3819%" y="223.50"></text></g><g><title>memcpy (179 instructions, 0.46%)</title><rect x="87.4214%" y="213" width="0.4577%" height="15" fill="rgb(230,214,11)" fg:x="34187" fg:w="179"/><text x="87.7143%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.16%)</title><rect x="87.8791%" y="213" width="0.1560%" height="15" fill="rgb(254,105,39)" fg:x="34366" fg:w="61"/><text x="88.1721%" y="223.50"></text></g><g><title>std::sys::thread_local::statik::LazyStorage&lt;T&gt;::initialize (33 instructions, 0.08%)</title><rect x="88.0351%" y="213" width="0.0844%" height="15" fill="rgb(245,158,5)" fg:x="34427" fg:w="33"/><text x="88.3281%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (141 instructions, 0.36%)</title><rect x="88.1195%" y="213" width="0.3606%" height="15" fill="rgb(249,208,11)" fg:x="34460" fg:w="141"/><text x="88.4124%" y="223.50"></text></g><g><title>publisher::subscribe (1,989 instructions, 5.09%)</title><rect x="86.7949%" y="229" width="5.0862%" height="15" fill="rgb(210,39,28)" fg:x="33942" fg:w="1989"/><text x="87.0878%" y="239.50">publi..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="91.8810%" y="197" width="0.0358%" height="15" fill="rgb(211,56,53)" fg:x="35931" fg:w="14"/><text x="92.1740%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="91.9168%" y="197" width="0.0358%" height="15" fill="rgb(226,201,30)" fg:x="35945" fg:w="14"/><text x="92.2098%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="91.9526%" y="181" width="0.0690%" height="15" fill="rgb(239,101,34)" fg:x="35959" fg:w="27"/><text x="92.2456%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (98 instructions, 0.25%)</title><rect x="92.0217%" y="181" width="0.2506%" height="15" fill="rgb(226,209,5)" fg:x="35986" fg:w="98"/><text x="92.3147%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.56%)</title><rect x="91.9526%" y="197" width="0.5626%" height="15" fill="rgb(250,105,47)" fg:x="35959" fg:w="220"/><text x="92.2456%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (475 instructions, 1.21%)</title><rect x="91.8810%" y="213" width="1.2146%" height="15" fill="rgb(230,72,3)" fg:x="35931" fg:w="475"/><text x="92.1740%" y="223.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.32%)</title><rect x="93.0957%" y="213" width="1.3246%" height="15" fill="rgb(232,218,39)" fg:x="36406" fg:w="518"/><text x="93.3887%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.21%)</title><rect x="94.4203%" y="165" width="0.2097%" height="15" fill="rgb(248,166,6)" fg:x="36924" fg:w="82"/><text x="94.7133%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.31%)</title><rect x="94.4203%" y="181" width="0.3145%" height="15" fill="rgb(247,89,20)" fg:x="36924" fg:w="123"/><text x="94.7133%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.53%)</title><rect x="94.4203%" y="197" width="0.5268%" height="15" fill="rgb(248,130,54)" fg:x="36924" fg:w="206"/><text x="94.7133%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="94.9471%" y="197" width="0.0384%" height="15" fill="rgb(234,196,4)" fg:x="37130" fg:w="15"/><text x="95.2400%" y="207.50"></text></g><g><title>memcpy (15 instructions, 0.04%)</title><rect x="94.9854%" y="197" width="0.0384%" height="15" fill="rgb(250,143,31)" fg:x="37145" fg:w="15"/><text x="95.2784%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 1.09%)</title><rect x="94.4203%" y="213" width="1.0945%" height="15" fill="rgb(211,110,34)" fg:x="36924" fg:w="428"/><text x="94.7133%" y="223.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 1.32%)</title><rect x="95.5148%" y="213" width="1.3195%" height="15" fill="rgb(215,124,48)" fg:x="37352" fg:w="516"/><text x="95.8077%" y="223.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.02%)</title><rect x="96.8342%" y="213" width="0.0179%" height="15" fill="rgb(216,46,13)" fg:x="37868" fg:w="7"/><text x="97.1272%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.02%)</title><rect x="96.8521%" y="213" width="0.0205%" height="15" fill="rgb(205,184,25)" fg:x="37875" fg:w="8"/><text x="97.1451%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.02%)</title><rect x="96.8726%" y="213" width="0.0205%" height="15" fill="rgb(228,1,10)" fg:x="37883" fg:w="8"/><text x="97.1656%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.16%)</title><rect x="96.8931%" y="213" width="0.1560%" height="15" fill="rgb(213,116,27)" fg:x="37891" fg:w="61"/><text x="97.1860%" y="223.50"></text></g><g><title>ic_cdk::api::call::reply (2,712 instructions, 6.93%)</title><rect x="91.8810%" y="229" width="6.9350%" height="15" fill="rgb(241,95,50)" fg:x="35931" fg:w="2712"/><text x="92.1740%" y="239.50">ic_cdk::..</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.04%)</title><rect x="98.8160%" y="229" width="0.0384%" height="15" fill="rgb(238,48,32)" fg:x="38643" fg:w="15"/><text x="99.1090%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="99.0845%" y="213" width="0.0690%" height="15" fill="rgb(235,113,49)" fg:x="38748" fg:w="27"/><text x="99.3775%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.52%)</title><rect x="98.8570%" y="229" width="0.5242%" height="15" fill="rgb(205,127,43)" fg:x="38659" fg:w="205"/><text x="99.1499%" y="239.50"></text></g><g><title>all (39,106 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(250,162,2)" fg:x="0" fg:w="39106"/><text x="0.2930%" y="271.50"></text></g><g><title>canister_update subscribe (39,106 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(220,13,41)" fg:x="0" fg:w="39106"/><text x="0.2930%" y="255.50">canister_update subscribe</text></g></svg></svg>