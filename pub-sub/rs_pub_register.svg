<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Register subscriber (called by sub canister)</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="34588"><g><title>ic_cdk::setup (48 instructions, 0.14%)</title><rect x="0.0000%" y="197" width="0.1388%" height="15" fill="rgb(236,164,45)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 1.07%)</title><rect x="0.1388%" y="197" width="1.0697%" height="15" fill="rgb(231,15,5)" fg:x="48" fg:w="370"/><text x="0.4317%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.2085%" y="197" width="0.2371%" height="15" fill="rgb(252,35,15)" fg:x="418" fg:w="82"/><text x="1.5015%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="1.4456%" y="181" width="0.2371%" height="15" fill="rgb(248,181,18)" fg:x="500" fg:w="82"/><text x="1.7386%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.14%)</title><rect x="1.6827%" y="149" width="0.1446%" height="15" fill="rgb(233,39,42)" fg:x="582" fg:w="50"/><text x="1.9756%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.38%)</title><rect x="1.6827%" y="165" width="0.3845%" height="15" fill="rgb(238,110,33)" fg:x="582" fg:w="133"/><text x="1.9756%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="2.0672%" y="149" width="0.0116%" height="15" fill="rgb(233,195,10)" fg:x="715" fg:w="4"/><text x="2.3602%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.16%)</title><rect x="2.0672%" y="165" width="1.1565%" height="15" fill="rgb(254,105,3)" fg:x="715" fg:w="400"/><text x="2.3602%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="3.2237%" y="165" width="0.2457%" height="15" fill="rgb(221,225,9)" fg:x="1115" fg:w="85"/><text x="3.5166%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="3.4694%" y="165" width="0.1619%" height="15" fill="rgb(224,227,45)" fg:x="1200" fg:w="56"/><text x="3.7624%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="3.6313%" y="165" width="0.1619%" height="15" fill="rgb(229,198,43)" fg:x="1256" fg:w="56"/><text x="3.9243%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="3.7932%" y="165" width="0.1619%" height="15" fill="rgb(206,209,35)" fg:x="1312" fg:w="56"/><text x="4.0862%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="3.9551%" y="165" width="0.1619%" height="15" fill="rgb(245,195,53)" fg:x="1368" fg:w="56"/><text x="4.2481%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="4.1170%" y="165" width="0.2053%" height="15" fill="rgb(240,92,26)" fg:x="1424" fg:w="71"/><text x="4.4100%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.20%)</title><rect x="4.3223%" y="165" width="0.1995%" height="15" fill="rgb(207,40,23)" fg:x="1495" fg:w="69"/><text x="4.6153%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="4.5218%" y="149" width="0.0116%" height="15" fill="rgb(223,111,35)" fg:x="1564" fg:w="4"/><text x="4.8148%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.16%)</title><rect x="4.5218%" y="165" width="1.1565%" height="15" fill="rgb(229,147,28)" fg:x="1564" fg:w="400"/><text x="4.8148%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="5.6783%" y="165" width="0.0463%" height="15" fill="rgb(211,29,28)" fg:x="1964" fg:w="16"/><text x="5.9712%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="5.7245%" y="149" width="0.2371%" height="15" fill="rgb(228,72,33)" fg:x="1980" fg:w="82"/><text x="6.0175%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="5.9616%" y="117" width="0.1735%" height="15" fill="rgb(205,214,31)" fg:x="2062" fg:w="60"/><text x="6.2546%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="5.9616%" y="133" width="0.2457%" height="15" fill="rgb(224,111,15)" fg:x="2062" fg:w="85"/><text x="6.2546%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="6.2074%" y="85" width="0.0260%" height="15" fill="rgb(253,21,26)" fg:x="2147" fg:w="9"/><text x="6.5003%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="6.2334%" y="69" width="0.0867%" height="15" fill="rgb(245,139,43)" fg:x="2156" fg:w="30"/><text x="6.5263%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="6.2334%" y="85" width="0.1590%" height="15" fill="rgb(252,170,7)" fg:x="2156" fg:w="55"/><text x="6.5263%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="6.2074%" y="101" width="0.3412%" height="15" fill="rgb(231,118,14)" fg:x="2147" fg:w="118"/><text x="6.5003%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="6.2074%" y="117" width="0.4944%" height="15" fill="rgb(238,83,0)" fg:x="2147" fg:w="171"/><text x="6.5003%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="6.2074%" y="133" width="0.5088%" height="15" fill="rgb(221,39,39)" fg:x="2147" fg:w="176"/><text x="6.5003%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="5.9616%" y="149" width="1.0755%" height="15" fill="rgb(222,119,46)" fg:x="2062" fg:w="372"/><text x="6.2546%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.73%)</title><rect x="5.7245%" y="165" width="1.7347%" height="15" fill="rgb(222,165,49)" fg:x="1980" fg:w="600"/><text x="6.0175%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="7.4592%" y="165" width="0.2457%" height="15" fill="rgb(219,113,52)" fg:x="2580" fg:w="85"/><text x="7.7522%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="7.7050%" y="165" width="0.1648%" height="15" fill="rgb(214,7,15)" fg:x="2665" fg:w="57"/><text x="7.9980%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="7.8698%" y="149" width="0.1619%" height="15" fill="rgb(235,32,4)" fg:x="2722" fg:w="56"/><text x="8.1628%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.0317%" y="149" width="0.2371%" height="15" fill="rgb(238,90,54)" fg:x="2778" fg:w="82"/><text x="8.3247%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="8.2688%" y="133" width="0.2371%" height="15" fill="rgb(213,208,19)" fg:x="2860" fg:w="82"/><text x="8.5617%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="8.5058%" y="101" width="0.3469%" height="15" fill="rgb(233,156,4)" fg:x="2942" fg:w="120"/><text x="8.7988%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="8.5058%" y="117" width="0.4192%" height="15" fill="rgb(207,194,5)" fg:x="2942" fg:w="145"/><text x="8.7988%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.24%)</title><rect x="8.9251%" y="37" width="0.2400%" height="15" fill="rgb(206,111,30)" fg:x="3087" fg:w="83"/><text x="9.2180%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="8.9251%" y="53" width="0.3383%" height="15" fill="rgb(243,70,54)" fg:x="3087" fg:w="117"/><text x="9.2180%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.56%)</title><rect x="8.9251%" y="69" width="0.5609%" height="15" fill="rgb(242,28,8)" fg:x="3087" fg:w="194"/><text x="9.2180%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.56%)</title><rect x="9.4859%" y="69" width="0.5638%" height="15" fill="rgb(219,106,18)" fg:x="3281" fg:w="195"/><text x="9.7789%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.22%)</title><rect x="8.9251%" y="85" width="1.2172%" height="15" fill="rgb(244,222,10)" fg:x="3087" fg:w="421"/><text x="9.2180%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="10.1422%" y="53" width="0.0260%" height="15" fill="rgb(236,179,52)" fg:x="3508" fg:w="9"/><text x="10.4352%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="10.1683%" y="37" width="0.0867%" height="15" fill="rgb(213,23,39)" fg:x="3517" fg:w="30"/><text x="10.4612%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="10.1683%" y="53" width="0.1590%" height="15" fill="rgb(238,48,10)" fg:x="3517" fg:w="55"/><text x="10.4612%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="10.1422%" y="69" width="0.3412%" height="15" fill="rgb(251,196,23)" fg:x="3508" fg:w="118"/><text x="10.4352%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.53%)</title><rect x="10.1422%" y="85" width="0.5291%" height="15" fill="rgb(250,152,24)" fg:x="3508" fg:w="183"/><text x="10.4352%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="10.6713%" y="69" width="0.1301%" height="15" fill="rgb(209,150,17)" fg:x="3691" fg:w="45"/><text x="10.9643%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="10.6713%" y="85" width="0.2024%" height="15" fill="rgb(234,202,34)" fg:x="3691" fg:w="70"/><text x="10.9643%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 2.32%)</title><rect x="8.9251%" y="101" width="2.3187%" height="15" fill="rgb(253,148,53)" fg:x="3087" fg:w="802"/><text x="9.2180%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.48%)</title><rect x="8.9251%" y="117" width="2.4777%" height="15" fill="rgb(218,129,16)" fg:x="3087" fg:w="857"/><text x="9.2180%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,113 instructions, 3.22%)</title><rect x="8.5058%" y="133" width="3.2179%" height="15" fill="rgb(216,85,19)" fg:x="2942" fg:w="1113"/><text x="8.7988%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.88%)</title><rect x="8.2688%" y="149" width="3.8771%" height="15" fill="rgb(235,228,7)" fg:x="2860" fg:w="1341"/><text x="8.5617%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="12.1458%" y="149" width="0.2082%" height="15" fill="rgb(245,175,0)" fg:x="4201" fg:w="72"/><text x="12.4388%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="12.3540%" y="149" width="0.1648%" height="15" fill="rgb(208,168,36)" fg:x="4273" fg:w="57"/><text x="12.6470%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="12.5188%" y="149" width="0.1908%" height="15" fill="rgb(246,171,24)" fg:x="4330" fg:w="66"/><text x="12.8118%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="12.7096%" y="117" width="0.2371%" height="15" fill="rgb(215,142,24)" fg:x="4396" fg:w="82"/><text x="13.0026%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="12.7096%" y="133" width="0.3383%" height="15" fill="rgb(250,187,7)" fg:x="4396" fg:w="117"/><text x="13.0026%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.55%)</title><rect x="12.7096%" y="149" width="0.5464%" height="15" fill="rgb(228,66,33)" fg:x="4396" fg:w="189"/><text x="13.0026%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="13.2560%" y="149" width="0.1619%" height="15" fill="rgb(234,215,21)" fg:x="4585" fg:w="56"/><text x="13.5490%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.4179%" y="149" width="0.2371%" height="15" fill="rgb(222,191,20)" fg:x="4641" fg:w="82"/><text x="13.7109%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="13.6550%" y="133" width="0.2371%" height="15" fill="rgb(245,79,54)" fg:x="4723" fg:w="82"/><text x="13.9480%" y="143.50"></text></g><g><title>memcpy (120 instructions, 0.35%)</title><rect x="13.8921%" y="101" width="0.3469%" height="15" fill="rgb(240,10,37)" fg:x="4805" fg:w="120"/><text x="14.1851%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (145 instructions, 0.42%)</title><rect x="13.8921%" y="117" width="0.4192%" height="15" fill="rgb(214,192,32)" fg:x="4805" fg:w="145"/><text x="14.1851%" y="127.50"></text></g><g><title>__rust_realloc (83 instructions, 0.24%)</title><rect x="14.3113%" y="37" width="0.2400%" height="15" fill="rgb(209,36,54)" fg:x="4950" fg:w="83"/><text x="14.6043%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="14.3113%" y="53" width="0.3383%" height="15" fill="rgb(220,10,11)" fg:x="4950" fg:w="117"/><text x="14.6043%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (194 instructions, 0.56%)</title><rect x="14.3113%" y="69" width="0.5609%" height="15" fill="rgb(221,106,17)" fg:x="4950" fg:w="194"/><text x="14.6043%" y="79.50"></text></g><g><title>memcpy (195 instructions, 0.56%)</title><rect x="14.8722%" y="69" width="0.5638%" height="15" fill="rgb(251,142,44)" fg:x="5144" fg:w="195"/><text x="15.1652%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (421 instructions, 1.22%)</title><rect x="14.3113%" y="85" width="1.2172%" height="15" fill="rgb(238,13,15)" fg:x="4950" fg:w="421"/><text x="14.6043%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="15.5285%" y="53" width="0.0260%" height="15" fill="rgb(208,107,27)" fg:x="5371" fg:w="9"/><text x="15.8215%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="15.5545%" y="37" width="0.0867%" height="15" fill="rgb(205,136,37)" fg:x="5380" fg:w="30"/><text x="15.8475%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="15.5545%" y="53" width="0.1590%" height="15" fill="rgb(250,205,27)" fg:x="5380" fg:w="55"/><text x="15.8475%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="15.5285%" y="69" width="0.3412%" height="15" fill="rgb(210,80,43)" fg:x="5371" fg:w="118"/><text x="15.8215%" y="79.50"></text></g><g><title>&lt;&amp;T as core::fmt::UpperHex&gt;::fmt (183 instructions, 0.53%)</title><rect x="15.5285%" y="85" width="0.5291%" height="15" fill="rgb(247,160,36)" fg:x="5371" fg:w="183"/><text x="15.8215%" y="95.50"></text></g><g><title>memcpy (45 instructions, 0.13%)</title><rect x="16.0576%" y="69" width="0.1301%" height="15" fill="rgb(234,13,49)" fg:x="5554" fg:w="45"/><text x="16.3506%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (70 instructions, 0.20%)</title><rect x="16.0576%" y="85" width="0.2024%" height="15" fill="rgb(234,122,0)" fg:x="5554" fg:w="70"/><text x="16.3506%" y="95.50"></text></g><g><title>core::fmt::write (802 instructions, 2.32%)</title><rect x="14.3113%" y="101" width="2.3187%" height="15" fill="rgb(207,146,38)" fg:x="4950" fg:w="802"/><text x="14.6043%" y="111.50">c..</text></g><g><title>&lt;binread::error::Error as core::fmt::Debug&gt;::fmt (857 instructions, 2.48%)</title><rect x="14.3113%" y="117" width="2.4777%" height="15" fill="rgb(207,177,25)" fg:x="4950" fg:w="857"/><text x="14.6043%" y="127.50">&lt;..</text></g><g><title>core::fmt::write (1,113 instructions, 3.22%)</title><rect x="13.8921%" y="133" width="3.2179%" height="15" fill="rgb(211,178,42)" fg:x="4805" fg:w="1113"/><text x="14.1851%" y="143.50">co..</text></g><g><title>alloc::fmt::format::format_inner (1,341 instructions, 3.88%)</title><rect x="13.6550%" y="149" width="3.8771%" height="15" fill="rgb(230,69,54)" fg:x="4723" fg:w="1341"/><text x="13.9480%" y="159.50">all..</text></g><g><title>binread::binary_template::write_comment (72 instructions, 0.21%)</title><rect x="17.5321%" y="149" width="0.2082%" height="15" fill="rgb(214,135,41)" fg:x="6064" fg:w="72"/><text x="17.8251%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="17.7403%" y="149" width="0.1648%" height="15" fill="rgb(237,67,25)" fg:x="6136" fg:w="57"/><text x="18.0332%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="17.9051%" y="149" width="0.1908%" height="15" fill="rgb(222,189,50)" fg:x="6193" fg:w="66"/><text x="18.1980%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.16%)</title><rect x="18.0959%" y="149" width="0.1619%" height="15" fill="rgb(245,148,34)" fg:x="6259" fg:w="56"/><text x="18.3888%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="18.2578%" y="133" width="0.2053%" height="15" fill="rgb(222,29,6)" fg:x="6315" fg:w="71"/><text x="18.5507%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.20%)</title><rect x="18.4631%" y="133" width="0.1995%" height="15" fill="rgb(221,189,43)" fg:x="6386" fg:w="69"/><text x="18.7560%" y="143.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="18.6625%" y="117" width="0.0116%" height="15" fill="rgb(207,36,27)" fg:x="6455" fg:w="4"/><text x="18.9555%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.16%)</title><rect x="18.6625%" y="133" width="1.1565%" height="15" fill="rgb(217,90,24)" fg:x="6455" fg:w="400"/><text x="18.9555%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="19.8190%" y="133" width="0.0463%" height="15" fill="rgb(224,66,35)" fg:x="6855" fg:w="16"/><text x="20.1120%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="19.8653%" y="117" width="0.2371%" height="15" fill="rgb(221,13,50)" fg:x="6871" fg:w="82"/><text x="20.1582%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="20.1023%" y="85" width="0.1735%" height="15" fill="rgb(236,68,49)" fg:x="6953" fg:w="60"/><text x="20.3953%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="20.1023%" y="101" width="0.2457%" height="15" fill="rgb(229,146,28)" fg:x="6953" fg:w="85"/><text x="20.3953%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="20.3481%" y="53" width="0.0260%" height="15" fill="rgb(225,31,38)" fg:x="7038" fg:w="9"/><text x="20.6411%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="20.3741%" y="37" width="0.0867%" height="15" fill="rgb(250,208,3)" fg:x="7047" fg:w="30"/><text x="20.6671%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="20.3741%" y="53" width="0.1590%" height="15" fill="rgb(246,54,23)" fg:x="7047" fg:w="55"/><text x="20.6671%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="20.3481%" y="69" width="0.3412%" height="15" fill="rgb(243,76,11)" fg:x="7038" fg:w="118"/><text x="20.6411%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="20.3481%" y="85" width="0.4944%" height="15" fill="rgb(245,21,50)" fg:x="7038" fg:w="171"/><text x="20.6411%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="20.3481%" y="101" width="0.5088%" height="15" fill="rgb(228,9,43)" fg:x="7038" fg:w="176"/><text x="20.6411%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="20.1023%" y="117" width="1.0755%" height="15" fill="rgb(208,100,47)" fg:x="6953" fg:w="372"/><text x="20.3953%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.73%)</title><rect x="19.8653%" y="133" width="1.7347%" height="15" fill="rgb(232,26,8)" fg:x="6871" fg:w="600"/><text x="20.1582%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="21.6000%" y="133" width="0.2457%" height="15" fill="rgb(216,166,38)" fg:x="7471" fg:w="85"/><text x="21.8929%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="21.8457%" y="133" width="0.1648%" height="15" fill="rgb(251,202,51)" fg:x="7556" fg:w="57"/><text x="22.1387%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="22.0105%" y="117" width="0.2053%" height="15" fill="rgb(254,216,34)" fg:x="7613" fg:w="71"/><text x="22.3035%" y="127.50"></text></g><g><title>candid::binary_parser::read_leb (289 instructions, 0.84%)</title><rect x="22.2158%" y="117" width="0.8355%" height="15" fill="rgb(251,32,27)" fg:x="7684" fg:w="289"/><text x="22.5088%" y="127.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="23.0513%" y="101" width="0.2053%" height="15" fill="rgb(208,127,28)" fg:x="7973" fg:w="71"/><text x="23.3443%" y="111.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.27%)</title><rect x="23.2566%" y="101" width="0.2747%" height="15" fill="rgb(224,137,22)" fg:x="8044" fg:w="95"/><text x="23.5496%" y="111.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="23.5313%" y="101" width="0.1908%" height="15" fill="rgb(254,70,32)" fg:x="8139" fg:w="66"/><text x="23.8243%" y="111.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.82%)</title><rect x="23.0513%" y="117" width="0.8182%" height="15" fill="rgb(229,75,37)" fg:x="7973" fg:w="283"/><text x="23.3443%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="23.8696%" y="117" width="0.1908%" height="15" fill="rgb(252,64,23)" fg:x="8256" fg:w="66"/><text x="24.1625%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (806 instructions, 2.33%)</title><rect x="22.0105%" y="133" width="2.3303%" height="15" fill="rgb(232,162,48)" fg:x="7613" fg:w="806"/><text x="22.3035%" y="143.50">&lt;..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="24.3408%" y="133" width="0.2371%" height="15" fill="rgb(246,160,12)" fg:x="8419" fg:w="82"/><text x="24.6338%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 instructions, 0.06%)</title><rect x="24.5779%" y="133" width="0.0607%" height="15" fill="rgb(247,166,0)" fg:x="8501" fg:w="21"/><text x="24.8709%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="24.6386%" y="133" width="0.1908%" height="15" fill="rgb(249,219,21)" fg:x="8522" fg:w="66"/><text x="24.9316%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::Fields as binread::BinRead&gt;::read_options (2,565 instructions, 7.42%)</title><rect x="18.2578%" y="149" width="7.4159%" height="15" fill="rgb(205,209,3)" fg:x="6315" fg:w="2565"/><text x="18.5507%" y="159.50">&lt;candid:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="25.6736%" y="133" width="0.2342%" height="15" fill="rgb(243,44,1)" fg:x="8880" fg:w="81"/><text x="25.9666%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="25.9772%" y="133" width="0.2255%" height="15" fill="rgb(206,159,16)" fg:x="8985" fg:w="78"/><text x="26.2702%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;(&amp;str,binread::error::Error)&gt; (207 instructions, 0.60%)</title><rect x="25.6736%" y="149" width="0.5985%" height="15" fill="rgb(244,77,30)" fg:x="8880" fg:w="207"/><text x="25.9666%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.48%)</title><rect x="26.2721%" y="149" width="0.4799%" height="15" fill="rgb(218,69,12)" fg:x="9087" fg:w="166"/><text x="26.5651%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::ConsType as binread::BinRead&gt;::read_options (7,177 instructions, 20.75%)</title><rect x="7.8698%" y="165" width="20.7500%" height="15" fill="rgb(212,87,7)" fg:x="2722" fg:w="7177"/><text x="8.1628%" y="175.50">&lt;candid::binary_parser::Cons..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="28.6198%" y="165" width="0.1821%" height="15" fill="rgb(245,114,25)" fg:x="9899" fg:w="63"/><text x="28.9127%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="28.8019%" y="165" width="0.1908%" height="15" fill="rgb(210,61,42)" fg:x="9962" fg:w="66"/><text x="29.0949%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.20%)</title><rect x="28.9927%" y="165" width="0.1995%" height="15" fill="rgb(211,52,33)" fg:x="10028" fg:w="69"/><text x="29.2857%" y="175.50"></text></g><g><title>memcmp (4 instructions, 0.01%)</title><rect x="29.1922%" y="133" width="0.0116%" height="15" fill="rgb(234,58,33)" fg:x="10097" fg:w="4"/><text x="29.4852%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 1.16%)</title><rect x="29.1922%" y="149" width="1.1565%" height="15" fill="rgb(220,115,36)" fg:x="10097" fg:w="400"/><text x="29.4852%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.05%)</title><rect x="30.3487%" y="149" width="0.0463%" height="15" fill="rgb(243,153,54)" fg:x="10497" fg:w="16"/><text x="30.6416%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.34%)</title><rect x="30.3949%" y="133" width="0.3383%" height="15" fill="rgb(251,47,18)" fg:x="10513" fg:w="117"/><text x="30.6879%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.17%)</title><rect x="30.7332%" y="101" width="0.1735%" height="15" fill="rgb(242,102,42)" fg:x="10630" fg:w="60"/><text x="31.0262%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.25%)</title><rect x="30.7332%" y="117" width="0.2457%" height="15" fill="rgb(234,31,38)" fg:x="10630" fg:w="85"/><text x="31.0262%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="30.9790%" y="69" width="0.0260%" height="15" fill="rgb(221,117,51)" fg:x="10715" fg:w="9"/><text x="31.2719%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="31.0050%" y="53" width="0.0867%" height="15" fill="rgb(212,20,18)" fg:x="10724" fg:w="30"/><text x="31.2979%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="31.0050%" y="69" width="0.1590%" height="15" fill="rgb(245,133,36)" fg:x="10724" fg:w="55"/><text x="31.2979%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="30.9790%" y="85" width="0.3412%" height="15" fill="rgb(212,6,19)" fg:x="10715" fg:w="118"/><text x="31.2719%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="30.9790%" y="101" width="0.4944%" height="15" fill="rgb(218,1,36)" fg:x="10715" fg:w="171"/><text x="31.2719%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.51%)</title><rect x="30.9790%" y="117" width="0.5088%" height="15" fill="rgb(246,84,54)" fg:x="10715" fg:w="176"/><text x="31.2719%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 1.08%)</title><rect x="30.7332%" y="133" width="1.0755%" height="15" fill="rgb(242,110,6)" fg:x="10630" fg:w="372"/><text x="31.0262%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (635 instructions, 1.84%)</title><rect x="30.3949%" y="149" width="1.8359%" height="15" fill="rgb(214,47,5)" fg:x="10513" fg:w="635"/><text x="30.6879%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.25%)</title><rect x="32.2308%" y="149" width="0.2457%" height="15" fill="rgb(218,159,25)" fg:x="11148" fg:w="85"/><text x="32.5238%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="32.4766%" y="149" width="0.1590%" height="15" fill="rgb(215,211,28)" fg:x="11233" fg:w="55"/><text x="32.7696%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="32.6356%" y="133" width="0.2053%" height="15" fill="rgb(238,59,32)" fg:x="11288" fg:w="71"/><text x="32.9286%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.27%)</title><rect x="32.8409%" y="133" width="0.2747%" height="15" fill="rgb(226,82,3)" fg:x="11359" fg:w="95"/><text x="33.1338%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="33.1155%" y="133" width="0.1908%" height="15" fill="rgb(240,164,32)" fg:x="11454" fg:w="66"/><text x="33.4085%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.82%)</title><rect x="32.6356%" y="149" width="0.8182%" height="15" fill="rgb(232,46,7)" fg:x="11288" fg:w="283"/><text x="32.9286%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="33.4538%" y="149" width="0.2197%" height="15" fill="rgb(229,129,53)" fg:x="11571" fg:w="76"/><text x="33.7468%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,719 instructions, 4.97%)</title><rect x="29.1922%" y="165" width="4.9699%" height="15" fill="rgb(234,188,29)" fg:x="10097" fg:w="1719"/><text x="29.4852%" y="175.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="34.1621%" y="165" width="0.1908%" height="15" fill="rgb(246,141,4)" fg:x="11816" fg:w="66"/><text x="34.4551%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.3530%" y="165" width="0.2197%" height="15" fill="rgb(229,23,39)" fg:x="11882" fg:w="76"/><text x="34.6459%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="34.5727%" y="149" width="0.2197%" height="15" fill="rgb(206,12,3)" fg:x="11958" fg:w="76"/><text x="34.8657%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.46%)</title><rect x="34.5727%" y="165" width="0.4597%" height="15" fill="rgb(252,226,20)" fg:x="11958" fg:w="159"/><text x="34.8657%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.21%)</title><rect x="35.0324%" y="133" width="0.2111%" height="15" fill="rgb(216,123,35)" fg:x="12117" fg:w="73"/><text x="35.3253%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (108 instructions, 0.31%)</title><rect x="35.0324%" y="149" width="0.3122%" height="15" fill="rgb(212,68,40)" fg:x="12117" fg:w="108"/><text x="35.3253%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.52%)</title><rect x="35.0324%" y="165" width="0.5204%" height="15" fill="rgb(254,125,32)" fg:x="12117" fg:w="180"/><text x="35.3253%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.5528%" y="165" width="0.2371%" height="15" fill="rgb(253,97,22)" fg:x="12297" fg:w="82"/><text x="35.8458%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="35.7899%" y="149" width="0.2371%" height="15" fill="rgb(241,101,14)" fg:x="12379" fg:w="82"/><text x="36.0828%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="36.0269%" y="117" width="0.2602%" height="15" fill="rgb(238,103,29)" fg:x="12461" fg:w="90"/><text x="36.3199%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="36.0269%" y="133" width="0.3325%" height="15" fill="rgb(233,195,47)" fg:x="12461" fg:w="115"/><text x="36.3199%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="36.3594%" y="85" width="0.0260%" height="15" fill="rgb(246,218,30)" fg:x="12576" fg:w="9"/><text x="36.6524%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="36.3855%" y="69" width="0.0867%" height="15" fill="rgb(219,145,47)" fg:x="12585" fg:w="30"/><text x="36.6784%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="36.3855%" y="85" width="0.1590%" height="15" fill="rgb(243,12,26)" fg:x="12585" fg:w="55"/><text x="36.6784%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="36.3594%" y="101" width="0.3412%" height="15" fill="rgb(214,87,16)" fg:x="12576" fg:w="118"/><text x="36.6524%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="36.3594%" y="117" width="0.4944%" height="15" fill="rgb(208,99,42)" fg:x="12576" fg:w="171"/><text x="36.6524%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="36.3594%" y="133" width="0.5378%" height="15" fill="rgb(253,99,2)" fg:x="12576" fg:w="186"/><text x="36.6524%" y="143.50"></text></g><g><title>core::fmt::write (412 instructions, 1.19%)</title><rect x="36.0269%" y="149" width="1.1912%" height="15" fill="rgb(220,168,23)" fg:x="12461" fg:w="412"/><text x="36.3199%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (640 instructions, 1.85%)</title><rect x="35.7899%" y="165" width="1.8504%" height="15" fill="rgb(242,38,24)" fg:x="12379" fg:w="640"/><text x="36.0828%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="37.6402%" y="149" width="0.2371%" height="15" fill="rgb(225,182,9)" fg:x="13019" fg:w="82"/><text x="37.9332%" y="159.50"></text></g><g><title>alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt;::insert (138 instructions, 0.40%)</title><rect x="37.6402%" y="165" width="0.3990%" height="15" fill="rgb(243,178,37)" fg:x="13019" fg:w="138"/><text x="37.9332%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.27%)</title><rect x="38.0392%" y="165" width="0.2747%" height="15" fill="rgb(232,139,19)" fg:x="13157" fg:w="95"/><text x="38.3322%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="38.3139%" y="165" width="0.0376%" height="15" fill="rgb(225,201,24)" fg:x="13252" fg:w="13"/><text x="38.6068%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (95 instructions, 0.27%)</title><rect x="38.3515%" y="165" width="0.2747%" height="15" fill="rgb(221,47,46)" fg:x="13265" fg:w="95"/><text x="38.6444%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="38.6261%" y="149" width="0.2371%" height="15" fill="rgb(249,23,13)" fg:x="13360" fg:w="82"/><text x="38.9191%" y="159.50"></text></g><g><title>alloc::collections::btree::set::BTreeSet&lt;T,A&gt;::insert (114 instructions, 0.33%)</title><rect x="38.6261%" y="165" width="0.3296%" height="15" fill="rgb(219,9,5)" fg:x="13360" fg:w="114"/><text x="38.9191%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (23 instructions, 0.07%)</title><rect x="38.9557%" y="149" width="0.0665%" height="15" fill="rgb(254,171,16)" fg:x="13474" fg:w="23"/><text x="39.2487%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::go (88 instructions, 0.25%)</title><rect x="38.9557%" y="165" width="0.2544%" height="15" fill="rgb(230,171,20)" fg:x="13474" fg:w="88"/><text x="39.2487%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.16%)</title><rect x="39.2448%" y="149" width="0.1648%" height="15" fill="rgb(210,71,41)" fg:x="13574" fg:w="57"/><text x="39.5378%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.48%)</title><rect x="39.2101%" y="165" width="0.4799%" height="15" fill="rgb(206,173,20)" fg:x="13562" fg:w="166"/><text x="39.5031%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.04%)</title><rect x="39.6901%" y="165" width="0.0376%" height="15" fill="rgb(233,88,34)" fg:x="13728" fg:w="13"/><text x="39.9830%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="39.7277%" y="165" width="0.0202%" height="15" fill="rgb(223,209,46)" fg:x="13741" fg:w="7"/><text x="40.0206%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="39.7479%" y="165" width="0.0347%" height="15" fill="rgb(250,43,18)" fg:x="13748" fg:w="12"/><text x="40.0409%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="39.7826%" y="133" width="0.2371%" height="15" fill="rgb(208,13,10)" fg:x="13760" fg:w="82"/><text x="40.0756%" y="143.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="40.0197%" y="101" width="0.2602%" height="15" fill="rgb(212,200,36)" fg:x="13842" fg:w="90"/><text x="40.3126%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (115 instructions, 0.33%)</title><rect x="40.0197%" y="117" width="0.3325%" height="15" fill="rgb(225,90,30)" fg:x="13842" fg:w="115"/><text x="40.3126%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.03%)</title><rect x="40.3521%" y="69" width="0.0260%" height="15" fill="rgb(236,182,39)" fg:x="13957" fg:w="9"/><text x="40.6451%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="40.3782%" y="53" width="0.0867%" height="15" fill="rgb(212,144,35)" fg:x="13966" fg:w="30"/><text x="40.6711%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.16%)</title><rect x="40.3782%" y="69" width="0.1590%" height="15" fill="rgb(228,63,44)" fg:x="13966" fg:w="55"/><text x="40.6711%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.34%)</title><rect x="40.3521%" y="85" width="0.3412%" height="15" fill="rgb(228,109,6)" fg:x="13957" fg:w="118"/><text x="40.6451%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.49%)</title><rect x="40.3521%" y="101" width="0.4944%" height="15" fill="rgb(238,117,24)" fg:x="13957" fg:w="171"/><text x="40.6451%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i64&gt;::fmt (186 instructions, 0.54%)</title><rect x="40.3521%" y="117" width="0.5378%" height="15" fill="rgb(242,26,26)" fg:x="13957" fg:w="186"/><text x="40.6451%" y="127.50"></text></g><g><title>core::fmt::write (412 instructions, 1.19%)</title><rect x="40.0197%" y="133" width="1.1912%" height="15" fill="rgb(221,92,48)" fg:x="13842" fg:w="412"/><text x="40.3126%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (640 instructions, 1.85%)</title><rect x="39.7826%" y="149" width="1.8504%" height="15" fill="rgb(209,209,32)" fg:x="13760" fg:w="640"/><text x="40.0756%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="41.6329%" y="149" width="0.2371%" height="15" fill="rgb(221,70,22)" fg:x="14400" fg:w="82"/><text x="41.9259%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (834 instructions, 2.41%)</title><rect x="39.7826%" y="165" width="2.4112%" height="15" fill="rgb(248,145,5)" fg:x="13760" fg:w="834"/><text x="40.0756%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.1938%" y="133" width="0.2371%" height="15" fill="rgb(226,116,26)" fg:x="14594" fg:w="82"/><text x="42.4868%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.34%)</title><rect x="42.1938%" y="149" width="0.3383%" height="15" fill="rgb(244,5,17)" fg:x="14594" fg:w="117"/><text x="42.4868%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.55%)</title><rect x="42.1938%" y="165" width="0.5464%" height="15" fill="rgb(252,159,33)" fg:x="14594" fg:w="189"/><text x="42.4868%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="42.7403%" y="165" width="0.2371%" height="15" fill="rgb(206,71,0)" fg:x="14783" fg:w="82"/><text x="43.0332%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="42.9773%" y="165" width="0.2342%" height="15" fill="rgb(233,118,54)" fg:x="14865" fg:w="81"/><text x="43.2703%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="43.2115%" y="165" width="0.2371%" height="15" fill="rgb(234,83,48)" fg:x="14946" fg:w="82"/><text x="43.5045%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="43.4486%" y="165" width="0.2371%" height="15" fill="rgb(228,3,54)" fg:x="15028" fg:w="82"/><text x="43.7416%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="43.6857%" y="149" width="0.2342%" height="15" fill="rgb(226,155,13)" fg:x="15110" fg:w="81"/><text x="43.9786%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 instructions, 0.33%)</title><rect x="43.6857%" y="165" width="0.3325%" height="15" fill="rgb(241,28,37)" fg:x="15110" fg:w="115"/><text x="43.9786%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.18%)</title><rect x="44.0182%" y="149" width="0.1821%" height="15" fill="rgb(233,93,10)" fg:x="15225" fg:w="63"/><text x="44.3111%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.49%)</title><rect x="44.0182%" y="165" width="0.4857%" height="15" fill="rgb(225,113,19)" fg:x="15225" fg:w="168"/><text x="44.3111%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="44.5039%" y="165" width="0.2342%" height="15" fill="rgb(241,2,18)" fg:x="15393" fg:w="81"/><text x="44.7968%" y="175.50"></text></g><g><title>memcpy (381 instructions, 1.10%)</title><rect x="44.7381%" y="165" width="1.1015%" height="15" fill="rgb(228,207,21)" fg:x="15474" fg:w="381"/><text x="45.0310%" y="175.50"></text></g><g><title>memcpy (381 instructions, 1.10%)</title><rect x="45.8396%" y="165" width="1.1015%" height="15" fill="rgb(213,211,35)" fg:x="15855" fg:w="381"/><text x="46.1326%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (17,292 instructions, 49.99%)</title><rect x="1.6827%" y="181" width="49.9942%" height="15" fill="rgb(209,83,10)" fg:x="582" fg:w="17292"/><text x="1.9756%" y="191.50">candid::de::IDLDeserialize::new</text></g><g><title>memcpy (336 instructions, 0.97%)</title><rect x="51.6769%" y="181" width="0.9714%" height="15" fill="rgb(209,164,1)" fg:x="17874" fg:w="336"/><text x="51.9699%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.14%)</title><rect x="52.6483%" y="165" width="0.1446%" height="15" fill="rgb(213,184,43)" fg:x="18210" fg:w="50"/><text x="52.9413%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.24%)</title><rect x="52.6483%" y="181" width="0.2429%" height="15" fill="rgb(231,61,34)" fg:x="18210" fg:w="84"/><text x="52.9413%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (161 instructions, 0.47%)</title><rect x="52.8912%" y="181" width="0.4655%" height="15" fill="rgb(235,75,3)" fg:x="18294" fg:w="161"/><text x="53.1841%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="53.3567%" y="165" width="0.0145%" height="15" fill="rgb(220,106,47)" fg:x="18455" fg:w="5"/><text x="53.6496%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="53.3711%" y="149" width="0.1532%" height="15" fill="rgb(210,196,33)" fg:x="18460" fg:w="53"/><text x="53.6641%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="53.5243%" y="149" width="0.8818%" height="15" fill="rgb(229,154,42)" fg:x="18513" fg:w="305"/><text x="53.8173%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="54.4062%" y="149" width="0.2111%" height="15" fill="rgb(228,114,26)" fg:x="18818" fg:w="73"/><text x="54.6991%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="53.3711%" y="165" width="1.9313%" height="15" fill="rgb(208,144,1)" fg:x="18460" fg:w="668"/><text x="53.6641%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="55.3024%" y="165" width="0.2197%" height="15" fill="rgb(239,112,37)" fg:x="19128" fg:w="76"/><text x="55.5954%" y="175.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="55.5221%" y="165" width="0.3932%" height="15" fill="rgb(210,96,50)" fg:x="19204" fg:w="136"/><text x="55.8151%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,295 instructions, 3.74%)</title><rect x="53.3567%" y="181" width="3.7441%" height="15" fill="rgb(222,178,2)" fg:x="18455" fg:w="1295"/><text x="53.6496%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="57.1007%" y="181" width="0.2284%" height="15" fill="rgb(226,74,18)" fg:x="19750" fg:w="79"/><text x="57.3937%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="57.3291%" y="181" width="0.2197%" height="15" fill="rgb(225,67,54)" fg:x="19829" fg:w="76"/><text x="57.6221%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="57.5489%" y="181" width="0.2284%" height="15" fill="rgb(251,92,32)" fg:x="19905" fg:w="79"/><text x="57.8418%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="57.7773%" y="149" width="0.0145%" height="15" fill="rgb(228,149,22)" fg:x="19984" fg:w="5"/><text x="58.0702%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="57.7917%" y="133" width="0.1532%" height="15" fill="rgb(243,54,13)" fg:x="19989" fg:w="53"/><text x="58.0847%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="57.9450%" y="133" width="0.8818%" height="15" fill="rgb(243,180,28)" fg:x="20042" fg:w="305"/><text x="58.2379%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="58.8268%" y="133" width="0.2111%" height="15" fill="rgb(208,167,24)" fg:x="20347" fg:w="73"/><text x="59.1197%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="57.7917%" y="149" width="1.9313%" height="15" fill="rgb(245,73,45)" fg:x="19989" fg:w="668"/><text x="58.0847%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 instructions, 2.28%)</title><rect x="57.7773%" y="165" width="2.2754%" height="15" fill="rgb(237,203,48)" fg:x="19984" fg:w="787"/><text x="58.0702%" y="175.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="60.0526%" y="165" width="0.2197%" height="15" fill="rgb(211,197,16)" fg:x="20771" fg:w="76"/><text x="60.3456%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="60.2723%" y="149" width="0.0145%" height="15" fill="rgb(243,99,51)" fg:x="20847" fg:w="5"/><text x="60.5653%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="60.2868%" y="133" width="0.1532%" height="15" fill="rgb(215,123,29)" fg:x="20852" fg:w="53"/><text x="60.5798%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="60.4400%" y="133" width="0.8818%" height="15" fill="rgb(239,186,37)" fg:x="20905" fg:w="305"/><text x="60.7330%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="61.3218%" y="133" width="0.2111%" height="15" fill="rgb(252,136,39)" fg:x="21210" fg:w="73"/><text x="61.6148%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="60.2868%" y="149" width="1.9313%" height="15" fill="rgb(223,213,32)" fg:x="20852" fg:w="668"/><text x="60.5798%" y="159.50"></text></g><g><title>candid::types::internal::env_add (887 instructions, 2.56%)</title><rect x="60.2723%" y="165" width="2.5645%" height="15" fill="rgb(233,115,5)" fg:x="20847" fg:w="887"/><text x="60.5653%" y="175.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="62.8368%" y="165" width="0.2197%" height="15" fill="rgb(207,226,44)" fg:x="21734" fg:w="76"/><text x="63.1298%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="63.0566%" y="149" width="0.0145%" height="15" fill="rgb(208,126,0)" fg:x="21810" fg:w="5"/><text x="63.3495%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="63.0710%" y="133" width="0.1532%" height="15" fill="rgb(244,66,21)" fg:x="21815" fg:w="53"/><text x="63.3640%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="63.2242%" y="133" width="0.8818%" height="15" fill="rgb(222,97,12)" fg:x="21868" fg:w="305"/><text x="63.5172%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="64.1060%" y="133" width="0.2111%" height="15" fill="rgb(219,213,19)" fg:x="22173" fg:w="73"/><text x="64.3990%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="63.0710%" y="149" width="1.9313%" height="15" fill="rgb(252,169,30)" fg:x="21815" fg:w="668"/><text x="63.3640%" y="159.50"></text></g><g><title>memcmp (446 instructions, 1.29%)</title><rect x="65.0023%" y="149" width="1.2895%" height="15" fill="rgb(206,32,51)" fg:x="22483" fg:w="446"/><text x="65.2953%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="66.2918%" y="133" width="0.2342%" height="15" fill="rgb(250,172,42)" fg:x="22929" fg:w="81"/><text x="66.5847%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.32%)</title><rect x="66.2918%" y="149" width="0.3209%" height="15" fill="rgb(209,34,43)" fg:x="22929" fg:w="111"/><text x="66.5847%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,399 instructions, 4.04%)</title><rect x="63.0566%" y="165" width="4.0448%" height="15" fill="rgb(223,11,35)" fg:x="21810" fg:w="1399"/><text x="63.3495%" y="175.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="67.1013%" y="117" width="0.1532%" height="15" fill="rgb(251,219,26)" fg:x="23209" fg:w="53"/><text x="67.3943%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="67.1013%" y="133" width="0.2284%" height="15" fill="rgb(231,119,3)" fg:x="23209" fg:w="79"/><text x="67.3943%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.84%)</title><rect x="67.1013%" y="149" width="0.8442%" height="15" fill="rgb(216,97,11)" fg:x="23209" fg:w="292"/><text x="67.3943%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.24%)</title><rect x="67.9455%" y="149" width="0.2371%" height="15" fill="rgb(223,59,9)" fg:x="23501" fg:w="82"/><text x="68.2385%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="68.1826%" y="149" width="0.3932%" height="15" fill="rgb(233,93,31)" fg:x="23583" fg:w="136"/><text x="68.4756%" y="159.50"></text></g><g><title>candid::types::internal::env_id (964 instructions, 2.79%)</title><rect x="67.1013%" y="165" width="2.7871%" height="15" fill="rgb(239,81,33)" fg:x="23209" fg:w="964"/><text x="67.3943%" y="175.50">ca..</text></g><g><title>candid::types::CandidType::ty (4,296 instructions, 12.42%)</title><rect x="57.7773%" y="181" width="12.4205%" height="15" fill="rgb(213,120,34)" fg:x="19984" fg:w="4296"/><text x="58.0702%" y="191.50">candid::types::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.23%)</title><rect x="70.1978%" y="181" width="0.2284%" height="15" fill="rgb(243,49,53)" fg:x="24280" fg:w="79"/><text x="70.4907%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="70.4262%" y="165" width="0.0145%" height="15" fill="rgb(247,216,33)" fg:x="24359" fg:w="5"/><text x="70.7191%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="70.4406%" y="149" width="0.1532%" height="15" fill="rgb(226,26,14)" fg:x="24364" fg:w="53"/><text x="70.7336%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.88%)</title><rect x="70.5938%" y="149" width="0.8818%" height="15" fill="rgb(215,49,53)" fg:x="24417" fg:w="305"/><text x="70.8868%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.21%)</title><rect x="71.4757%" y="149" width="0.2111%" height="15" fill="rgb(245,162,40)" fg:x="24722" fg:w="73"/><text x="71.7686%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.93%)</title><rect x="70.4406%" y="165" width="1.9313%" height="15" fill="rgb(229,68,17)" fg:x="24364" fg:w="668"/><text x="70.7336%" y="175.50"></text></g><g><title>memcmp (446 instructions, 1.29%)</title><rect x="72.3719%" y="165" width="1.2895%" height="15" fill="rgb(213,182,10)" fg:x="25032" fg:w="446"/><text x="72.6649%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="73.6614%" y="149" width="0.2342%" height="15" fill="rgb(245,125,30)" fg:x="25478" fg:w="81"/><text x="73.9544%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.32%)</title><rect x="73.6614%" y="165" width="0.3209%" height="15" fill="rgb(232,202,2)" fg:x="25478" fg:w="111"/><text x="73.9544%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,399 instructions, 4.04%)</title><rect x="70.4262%" y="181" width="4.0448%" height="15" fill="rgb(237,140,51)" fg:x="24359" fg:w="1399"/><text x="70.7191%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="74.4709%" y="133" width="0.1532%" height="15" fill="rgb(236,157,25)" fg:x="25758" fg:w="53"/><text x="74.7639%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.44%)</title><rect x="74.6241%" y="133" width="0.4423%" height="15" fill="rgb(219,209,0)" fg:x="25811" fg:w="153"/><text x="74.9171%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="75.0665%" y="117" width="0.1532%" height="15" fill="rgb(240,116,54)" fg:x="25964" fg:w="53"/><text x="75.3595%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="75.0665%" y="133" width="0.2284%" height="15" fill="rgb(216,10,36)" fg:x="25964" fg:w="79"/><text x="75.3595%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 1.01%)</title><rect x="74.4709%" y="149" width="1.0148%" height="15" fill="rgb(222,72,44)" fg:x="25758" fg:w="351"/><text x="74.7639%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.1015%" y="133" width="0.1532%" height="15" fill="rgb(232,159,9)" fg:x="26322" fg:w="53"/><text x="76.3945%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.44%)</title><rect x="76.2548%" y="133" width="0.4423%" height="15" fill="rgb(210,39,32)" fg:x="26375" fg:w="153"/><text x="76.5477%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.15%)</title><rect x="76.6971%" y="117" width="0.1532%" height="15" fill="rgb(216,194,45)" fg:x="26528" fg:w="53"/><text x="76.9901%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.23%)</title><rect x="76.6971%" y="133" width="0.2284%" height="15" fill="rgb(218,18,35)" fg:x="26528" fg:w="79"/><text x="76.9901%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 1.01%)</title><rect x="76.1015%" y="149" width="1.0148%" height="15" fill="rgb(207,83,51)" fg:x="26322" fg:w="351"/><text x="76.3945%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,128 instructions, 3.26%)</title><rect x="74.4709%" y="165" width="3.2612%" height="15" fill="rgb(225,63,43)" fg:x="25758" fg:w="1128"/><text x="74.7639%" y="175.50">co..</text></g><g><title>candid::types::internal::env_id (1,410 instructions, 4.08%)</title><rect x="74.4709%" y="181" width="4.0766%" height="15" fill="rgb(207,57,36)" fg:x="25758" fg:w="1410"/><text x="74.7639%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.10%)</title><rect x="78.5475%" y="181" width="0.0954%" height="15" fill="rgb(216,99,33)" fg:x="27168" fg:w="33"/><text x="78.8404%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="78.6429%" y="165" width="0.2255%" height="15" fill="rgb(225,42,16)" fg:x="27201" fg:w="78"/><text x="78.9359%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.35%)</title><rect x="78.9551%" y="165" width="0.3469%" height="15" fill="rgb(220,201,45)" fg:x="27309" fg:w="120"/><text x="79.2481%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (258 instructions, 0.75%)</title><rect x="78.6429%" y="181" width="0.7459%" height="15" fill="rgb(225,33,4)" fg:x="27201" fg:w="258"/><text x="78.9359%" y="191.50"></text></g><g><title>memcmp (131 instructions, 0.38%)</title><rect x="79.3888%" y="149" width="0.3787%" height="15" fill="rgb(224,33,50)" fg:x="27459" fg:w="131"/><text x="79.6818%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.10%)</title><rect x="79.7675%" y="149" width="0.0954%" height="15" fill="rgb(246,198,51)" fg:x="27590" fg:w="33"/><text x="80.0605%" y="159.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (284 instructions, 0.82%)</title><rect x="79.3888%" y="165" width="0.8211%" height="15" fill="rgb(205,22,4)" fg:x="27459" fg:w="284"/><text x="79.6818%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.2099%" y="165" width="0.0318%" height="15" fill="rgb(206,3,8)" fg:x="27743" fg:w="11"/><text x="80.5029%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.2417%" y="149" width="0.2197%" height="15" fill="rgb(251,23,15)" fg:x="27754" fg:w="76"/><text x="80.5347%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="80.7361%" y="149" width="0.2197%" height="15" fill="rgb(252,88,28)" fg:x="27925" fg:w="76"/><text x="81.0291%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (342 instructions, 0.99%)</title><rect x="80.2417%" y="165" width="0.9888%" height="15" fill="rgb(212,127,14)" fg:x="27754" fg:w="342"/><text x="80.5347%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2305%" y="165" width="0.0318%" height="15" fill="rgb(247,145,37)" fg:x="28096" fg:w="11"/><text x="81.5235%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="81.2623%" y="165" width="0.0318%" height="15" fill="rgb(209,117,53)" fg:x="28107" fg:w="11"/><text x="81.5553%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="81.2941%" y="149" width="0.2197%" height="15" fill="rgb(212,90,42)" fg:x="28118" fg:w="76"/><text x="81.5871%" y="159.50"></text></g><g><title>memcpy (90 instructions, 0.26%)</title><rect x="81.5138%" y="149" width="0.2602%" height="15" fill="rgb(218,164,37)" fg:x="28194" fg:w="90"/><text x="81.8068%" y="159.50"></text></g><g><title>memcmp (110 instructions, 0.32%)</title><rect x="81.7740%" y="149" width="0.3180%" height="15" fill="rgb(246,65,34)" fg:x="28284" fg:w="110"/><text x="82.0670%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="82.0921%" y="149" width="0.1590%" height="15" fill="rgb(231,100,33)" fg:x="28394" fg:w="55"/><text x="82.3850%" y="159.50"></text></g><g><title>&lt;core::marker::PhantomData&lt;T&gt; as serde::de::DeserializeSeed&gt;::deserialize (403 instructions, 1.17%)</title><rect x="81.2941%" y="165" width="1.1651%" height="15" fill="rgb(228,126,14)" fg:x="28118" fg:w="403"/><text x="81.5871%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.05%)</title><rect x="82.4592%" y="149" width="0.0463%" height="15" fill="rgb(215,173,21)" fg:x="28521" fg:w="16"/><text x="82.7522%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.05%)</title><rect x="82.5055%" y="149" width="0.0463%" height="15" fill="rgb(210,6,40)" fg:x="28537" fg:w="16"/><text x="82.7985%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.21%)</title><rect x="82.5518%" y="133" width="0.2053%" height="15" fill="rgb(212,48,18)" fg:x="28553" fg:w="71"/><text x="82.8447%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.20%)</title><rect x="82.7570%" y="133" width="0.1995%" height="15" fill="rgb(230,214,11)" fg:x="28624" fg:w="69"/><text x="83.0500%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.19%)</title><rect x="82.9565%" y="133" width="0.1908%" height="15" fill="rgb(254,105,39)" fg:x="28693" fg:w="66"/><text x="83.2495%" y="143.50"></text></g><g><title>binread::BinRead::read (250 instructions, 0.72%)</title><rect x="82.5518%" y="149" width="0.7228%" height="15" fill="rgb(245,158,5)" fg:x="28553" fg:w="250"/><text x="82.8447%" y="159.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.15%)</title><rect x="83.2745%" y="149" width="0.1474%" height="15" fill="rgb(249,208,11)" fg:x="28803" fg:w="51"/><text x="83.5675%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="83.4220%" y="149" width="0.2197%" height="15" fill="rgb(210,39,28)" fg:x="28854" fg:w="76"/><text x="83.7150%" y="159.50"></text></g><g><title>memcpy (105 instructions, 0.30%)</title><rect x="83.6417%" y="149" width="0.3036%" height="15" fill="rgb(211,56,53)" fg:x="28930" fg:w="105"/><text x="83.9347%" y="159.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.42%)</title><rect x="83.9453%" y="149" width="0.4163%" height="15" fill="rgb(226,201,30)" fg:x="29035" fg:w="144"/><text x="84.2383%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (800 instructions, 2.31%)</title><rect x="82.4592%" y="165" width="2.3129%" height="15" fill="rgb(239,101,34)" fg:x="28521" fg:w="800"/><text x="82.7522%" y="175.50">s..</text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="84.7722%" y="149" width="0.0145%" height="15" fill="rgb(226,209,5)" fg:x="29321" fg:w="5"/><text x="85.0651%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="84.7866%" y="149" width="0.2342%" height="15" fill="rgb(250,105,47)" fg:x="29326" fg:w="81"/><text x="85.0796%" y="159.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="85.0208%" y="149" width="0.0145%" height="15" fill="rgb(230,72,3)" fg:x="29407" fg:w="5"/><text x="85.3138%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.37%)</title><rect x="85.0353%" y="149" width="0.3672%" height="15" fill="rgb(232,218,39)" fg:x="29412" fg:w="127"/><text x="85.3282%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Style&gt; (249 instructions, 0.72%)</title><rect x="84.7722%" y="165" width="0.7199%" height="15" fill="rgb(248,166,6)" fg:x="29321" fg:w="249"/><text x="85.0651%" y="175.50"></text></g><g><title>publisher::_::&lt;impl serde::de::Deserialize for publisher::Subscriber&gt;::deserialize (2,693 instructions, 7.79%)</title><rect x="79.3888%" y="181" width="7.7859%" height="15" fill="rgb(247,89,20)" fg:x="27459" fg:w="2693"/><text x="79.6818%" y="191.50">publisher..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="87.1747%" y="165" width="0.2342%" height="15" fill="rgb(248,130,54)" fg:x="30152" fg:w="81"/><text x="87.4677%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.37%)</title><rect x="87.4089%" y="165" width="0.3672%" height="15" fill="rgb(234,196,4)" fg:x="30233" fg:w="127"/><text x="87.7019%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.72%)</title><rect x="87.1747%" y="181" width="0.7228%" height="15" fill="rgb(250,143,31)" fg:x="30152" fg:w="250"/><text x="87.4677%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.8975%" y="181" width="0.0318%" height="15" fill="rgb(211,110,34)" fg:x="30402" fg:w="11"/><text x="88.1905%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.9293%" y="181" width="0.0318%" height="15" fill="rgb(215,124,48)" fg:x="30413" fg:w="11"/><text x="88.2223%" y="191.50"></text></g><g><title>memcpy (411 instructions, 1.19%)</title><rect x="87.9611%" y="181" width="1.1883%" height="15" fill="rgb(216,46,13)" fg:x="30424" fg:w="411"/><text x="88.2541%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="89.1494%" y="149" width="0.2342%" height="15" fill="rgb(205,184,25)" fg:x="30835" fg:w="81"/><text x="89.4424%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="89.3836%" y="133" width="0.2255%" height="15" fill="rgb(228,1,10)" fg:x="30916" fg:w="78"/><text x="89.6766%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="89.6091%" y="133" width="0.0318%" height="15" fill="rgb(213,116,27)" fg:x="30994" fg:w="11"/><text x="89.9021%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.36%)</title><rect x="89.6409%" y="133" width="0.3585%" height="15" fill="rgb(241,95,50)" fg:x="31005" fg:w="124"/><text x="89.9339%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (114 instructions, 0.33%)</title><rect x="89.9994%" y="133" width="0.3296%" height="15" fill="rgb(238,48,32)" fg:x="31129" fg:w="114"/><text x="90.2924%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (421 instructions, 1.22%)</title><rect x="89.3836%" y="149" width="1.2172%" height="15" fill="rgb(235,113,49)" fg:x="30916" fg:w="421"/><text x="89.6766%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (114 instructions, 0.33%)</title><rect x="90.6008%" y="149" width="0.3296%" height="15" fill="rgb(205,127,43)" fg:x="31337" fg:w="114"/><text x="90.8938%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (696 instructions, 2.01%)</title><rect x="89.1494%" y="165" width="2.0123%" height="15" fill="rgb(250,162,2)" fg:x="30835" fg:w="696"/><text x="89.4424%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.36%)</title><rect x="91.1617%" y="165" width="0.3585%" height="15" fill="rgb(220,13,41)" fg:x="31531" fg:w="124"/><text x="91.4546%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.48%)</title><rect x="91.5202%" y="149" width="0.4799%" height="15" fill="rgb(249,221,25)" fg:x="31655" fg:w="166"/><text x="91.8131%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.57%)</title><rect x="91.5202%" y="165" width="0.5667%" height="15" fill="rgb(215,208,19)" fg:x="31655" fg:w="196"/><text x="91.8131%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="92.0869%" y="165" width="0.0318%" height="15" fill="rgb(236,175,2)" fg:x="31851" fg:w="11"/><text x="92.3798%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (1,094 instructions, 3.16%)</title><rect x="89.1494%" y="181" width="3.1629%" height="15" fill="rgb(241,52,2)" fg:x="30835" fg:w="1094"/><text x="89.4424%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.23%)</title><rect x="92.3124%" y="181" width="0.2255%" height="15" fill="rgb(248,140,14)" fg:x="31929" fg:w="78"/><text x="92.6053%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="92.5379%" y="181" width="0.2197%" height="15" fill="rgb(253,22,42)" fg:x="32007" fg:w="76"/><text x="92.8308%" y="191.50"></text></g><g><title>memset (116 instructions, 0.34%)</title><rect x="92.7576%" y="181" width="0.3354%" height="15" fill="rgb(234,61,47)" fg:x="32083" fg:w="116"/><text x="93.0506%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.48%)</title><rect x="93.0930%" y="181" width="0.4770%" height="15" fill="rgb(208,226,15)" fg:x="32199" fg:w="165"/><text x="93.3859%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="93.5700%" y="181" width="0.1590%" height="15" fill="rgb(217,221,4)" fg:x="32364" fg:w="55"/><text x="93.8630%" y="191.50"></text></g><g><title>std::sys::common::thread_local::static_local::Key&lt;T&gt;::get (20 instructions, 0.06%)</title><rect x="93.7290%" y="181" width="0.0578%" height="15" fill="rgb(212,174,34)" fg:x="32419" fg:w="20"/><text x="94.0220%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (63 instructions, 0.18%)</title><rect x="93.7869%" y="181" width="0.1821%" height="15" fill="rgb(253,83,4)" fg:x="32439" fg:w="63"/><text x="94.0798%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="93.9690%" y="149" width="0.0145%" height="15" fill="rgb(250,195,49)" fg:x="32502" fg:w="5"/><text x="94.2620%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="93.9835%" y="149" width="0.0318%" height="15" fill="rgb(241,192,25)" fg:x="32507" fg:w="11"/><text x="94.2764%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.0153%" y="149" width="0.0318%" height="15" fill="rgb(208,124,10)" fg:x="32518" fg:w="11"/><text x="94.3082%" y="159.50"></text></g><g><title>memset (136 instructions, 0.39%)</title><rect x="94.0471%" y="149" width="0.3932%" height="15" fill="rgb(222,33,0)" fg:x="32529" fg:w="136"/><text x="94.3400%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 1.01%)</title><rect x="93.9690%" y="165" width="1.0061%" height="15" fill="rgb(234,209,28)" fg:x="32502" fg:w="348"/><text x="94.2620%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.09%)</title><rect x="94.9751%" y="165" width="0.0925%" height="15" fill="rgb(224,11,23)" fg:x="32850" fg:w="32"/><text x="95.2681%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.22%)</title><rect x="95.0677%" y="117" width="0.2197%" height="15" fill="rgb(232,99,1)" fg:x="32882" fg:w="76"/><text x="95.3606%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.32%)</title><rect x="95.0677%" y="133" width="0.3209%" height="15" fill="rgb(237,95,45)" fg:x="32882" fg:w="111"/><text x="95.3606%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (180 instructions, 0.52%)</title><rect x="95.0677%" y="149" width="0.5204%" height="15" fill="rgb(208,109,11)" fg:x="32882" fg:w="180"/><text x="95.3606%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.5881%" y="149" width="0.0318%" height="15" fill="rgb(216,190,48)" fg:x="33062" fg:w="11"/><text x="95.8810%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.03%)</title><rect x="95.6199%" y="149" width="0.0318%" height="15" fill="rgb(251,171,36)" fg:x="33073" fg:w="11"/><text x="95.9128%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (367 instructions, 1.06%)</title><rect x="95.0677%" y="165" width="1.0611%" height="15" fill="rgb(230,62,22)" fg:x="32882" fg:w="367"/><text x="95.3606%" y="175.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.09%)</title><rect x="96.1287%" y="165" width="0.0867%" height="15" fill="rgb(225,114,35)" fg:x="33249" fg:w="30"/><text x="96.4217%" y="175.50"></text></g><g><title>std::io::Write::write_all (5 instructions, 0.01%)</title><rect x="96.2155%" y="165" width="0.0145%" height="15" fill="rgb(215,118,42)" fg:x="33279" fg:w="5"/><text x="96.5084%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="96.2299%" y="165" width="0.0145%" height="15" fill="rgb(243,119,21)" fg:x="33284" fg:w="5"/><text x="96.5229%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.16%)</title><rect x="96.2444%" y="165" width="0.1590%" height="15" fill="rgb(252,177,53)" fg:x="33289" fg:w="55"/><text x="96.5373%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (972 instructions, 2.81%)</title><rect x="93.9690%" y="181" width="2.8102%" height="15" fill="rgb(237,209,29)" fg:x="32502" fg:w="972"/><text x="94.2620%" y="191.50">ic..</text></g><g><title>publisher::subscribe_0_::{{closure}} (33,726 instructions, 97.51%)</title><rect x="1.4456%" y="197" width="97.5078%" height="15" fill="rgb(212,65,23)" fg:x="500" fg:w="33726"/><text x="1.7386%" y="207.50">publisher::subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9534%" y="197" width="0.0347%" height="15" fill="rgb(230,222,46)" fg:x="34226" fg:w="12"/><text x="99.2464%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.23%)</title><rect x="98.9881%" y="197" width="0.2342%" height="15" fill="rgb(215,135,32)" fg:x="34238" fg:w="81"/><text x="99.2811%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.48%)</title><rect x="99.2223%" y="197" width="0.4799%" height="15" fill="rgb(246,101,22)" fg:x="34319" fg:w="166"/><text x="99.5152%" y="207.50"></text></g><g><title>all (34,588 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(206,107,13)" fg:x="0" fg:w="34588"/><text x="0.2930%" y="239.50"></text></g><g><title>canister_update subscribe (34,588 instructions, 100.00%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(250,100,44)" fg:x="0" fg:w="34588"/><text x="0.2930%" y="223.50">canister_update subscribe</text></g></svg></svg>