<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="51497"><g><title>ic_cdk::setup (48 instructions, 0.09%)</title><rect x="0.0000%" y="197" width="0.0932%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.72%)</title><rect x="0.0932%" y="197" width="0.7165%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="369"/><text x="0.3862%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.8098%" y="197" width="0.1592%" height="15" fill="rgb(221,193,54)" fg:x="417" fg:w="82"/><text x="1.1027%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.9690%" y="181" width="0.1592%" height="15" fill="rgb(248,212,6)" fg:x="499" fg:w="82"/><text x="1.2620%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.10%)</title><rect x="1.1282%" y="149" width="0.0971%" height="15" fill="rgb(208,68,35)" fg:x="581" fg:w="50"/><text x="1.4212%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.25%)</title><rect x="1.1282%" y="165" width="0.2544%" height="15" fill="rgb(232,128,0)" fg:x="581" fg:w="131"/><text x="1.4212%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="1.3826%" y="165" width="0.7884%" height="15" fill="rgb(207,160,47)" fg:x="712" fg:w="406"/><text x="1.6756%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="2.1710%" y="165" width="0.1592%" height="15" fill="rgb(228,23,34)" fg:x="1118" fg:w="82"/><text x="2.4640%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.3302%" y="165" width="0.1049%" height="15" fill="rgb(218,30,26)" fg:x="1200" fg:w="54"/><text x="2.6232%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.4351%" y="165" width="0.1049%" height="15" fill="rgb(220,122,19)" fg:x="1254" fg:w="54"/><text x="2.7281%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.5400%" y="165" width="0.1049%" height="15" fill="rgb(250,228,42)" fg:x="1308" fg:w="54"/><text x="2.8329%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.6448%" y="165" width="0.1049%" height="15" fill="rgb(240,193,28)" fg:x="1362" fg:w="54"/><text x="2.9378%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="2.7497%" y="165" width="0.1340%" height="15" fill="rgb(216,20,37)" fg:x="1416" fg:w="69"/><text x="3.0426%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="2.8837%" y="165" width="0.1262%" height="15" fill="rgb(206,188,39)" fg:x="1485" fg:w="65"/><text x="3.1766%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="3.0099%" y="165" width="0.7884%" height="15" fill="rgb(217,207,13)" fg:x="1550" fg:w="406"/><text x="3.3029%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.7983%" y="165" width="0.0311%" height="15" fill="rgb(231,73,38)" fg:x="1956" fg:w="16"/><text x="4.0912%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="3.8293%" y="149" width="0.1592%" height="15" fill="rgb(225,20,46)" fg:x="1972" fg:w="82"/><text x="4.1223%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="3.9886%" y="117" width="0.1165%" height="15" fill="rgb(210,31,41)" fg:x="2054" fg:w="60"/><text x="4.2816%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="3.9886%" y="133" width="0.1651%" height="15" fill="rgb(221,200,47)" fg:x="2054" fg:w="85"/><text x="4.2816%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1536%" y="85" width="0.0175%" height="15" fill="rgb(226,26,5)" fg:x="2139" fg:w="9"/><text x="4.4466%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.1711%" y="69" width="0.0583%" height="15" fill="rgb(249,33,26)" fg:x="2148" fg:w="30"/><text x="4.4641%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.1711%" y="85" width="0.1068%" height="15" fill="rgb(235,183,28)" fg:x="2148" fg:w="55"/><text x="4.4641%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="4.1536%" y="101" width="0.2291%" height="15" fill="rgb(221,5,38)" fg:x="2139" fg:w="118"/><text x="4.4466%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="4.1536%" y="117" width="0.3321%" height="15" fill="rgb(247,18,42)" fg:x="2139" fg:w="171"/><text x="4.4466%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="4.1536%" y="133" width="0.3418%" height="15" fill="rgb(241,131,45)" fg:x="2139" fg:w="176"/><text x="4.4466%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="3.9886%" y="149" width="0.7224%" height="15" fill="rgb(249,31,29)" fg:x="2054" fg:w="372"/><text x="4.2816%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.16%)</title><rect x="3.8293%" y="165" width="1.1554%" height="15" fill="rgb(225,111,53)" fg:x="1972" fg:w="595"/><text x="4.1223%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="4.9848%" y="165" width="0.1592%" height="15" fill="rgb(238,160,17)" fg:x="2567" fg:w="82"/><text x="5.2777%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="5.1440%" y="165" width="0.1087%" height="15" fill="rgb(214,148,48)" fg:x="2649" fg:w="56"/><text x="5.4370%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="5.2527%" y="165" width="0.1223%" height="15" fill="rgb(232,36,49)" fg:x="2705" fg:w="63"/><text x="5.5457%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="5.3751%" y="165" width="0.1262%" height="15" fill="rgb(209,103,24)" fg:x="2768" fg:w="65"/><text x="5.6680%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="5.5013%" y="149" width="0.7884%" height="15" fill="rgb(229,88,8)" fg:x="2833" fg:w="406"/><text x="5.7943%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.2897%" y="149" width="0.0311%" height="15" fill="rgb(213,181,19)" fg:x="3239" fg:w="16"/><text x="6.5827%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="6.3208%" y="133" width="0.1592%" height="15" fill="rgb(254,191,54)" fg:x="3255" fg:w="82"/><text x="6.6137%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="6.4800%" y="101" width="0.1165%" height="15" fill="rgb(241,83,37)" fg:x="3337" fg:w="60"/><text x="6.7730%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="6.4800%" y="117" width="0.1651%" height="15" fill="rgb(233,36,39)" fg:x="3337" fg:w="85"/><text x="6.7730%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.6450%" y="69" width="0.0175%" height="15" fill="rgb(226,3,54)" fg:x="3422" fg:w="9"/><text x="6.9380%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="6.6625%" y="53" width="0.0583%" height="15" fill="rgb(245,192,40)" fg:x="3431" fg:w="30"/><text x="6.9555%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="6.6625%" y="69" width="0.1068%" height="15" fill="rgb(238,167,29)" fg:x="3431" fg:w="55"/><text x="6.9555%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="6.6450%" y="85" width="0.2291%" height="15" fill="rgb(232,182,51)" fg:x="3422" fg:w="118"/><text x="6.9380%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="6.6450%" y="101" width="0.3321%" height="15" fill="rgb(231,60,39)" fg:x="3422" fg:w="171"/><text x="6.9380%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="6.6450%" y="117" width="0.3418%" height="15" fill="rgb(208,69,12)" fg:x="3422" fg:w="176"/><text x="6.9380%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="6.4800%" y="133" width="0.7224%" height="15" fill="rgb(235,93,37)" fg:x="3337" fg:w="372"/><text x="6.7730%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.16%)</title><rect x="6.3208%" y="149" width="1.1554%" height="15" fill="rgb(213,116,39)" fg:x="3255" fg:w="595"/><text x="6.6137%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="7.4762%" y="149" width="0.1592%" height="15" fill="rgb(222,207,29)" fg:x="3850" fg:w="82"/><text x="7.7691%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="7.6354%" y="149" width="0.1087%" height="15" fill="rgb(206,96,30)" fg:x="3932" fg:w="56"/><text x="7.9284%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="7.7441%" y="133" width="0.1340%" height="15" fill="rgb(218,138,4)" fg:x="3988" fg:w="69"/><text x="8.0371%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="7.8781%" y="133" width="0.1767%" height="15" fill="rgb(250,191,14)" fg:x="4057" fg:w="91"/><text x="8.1711%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="8.0548%" y="133" width="0.1223%" height="15" fill="rgb(239,60,40)" fg:x="4148" fg:w="63"/><text x="8.3478%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.56%)</title><rect x="7.7441%" y="149" width="0.5554%" height="15" fill="rgb(206,27,48)" fg:x="3988" fg:w="286"/><text x="8.0371%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="8.2995%" y="149" width="0.1592%" height="15" fill="rgb(225,35,8)" fg:x="4274" fg:w="82"/><text x="8.5925%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="8.4587%" y="133" width="0.1340%" height="15" fill="rgb(250,213,24)" fg:x="4356" fg:w="69"/><text x="8.7517%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="8.5927%" y="133" width="0.1767%" height="15" fill="rgb(247,123,22)" fg:x="4425" fg:w="91"/><text x="8.8857%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="8.7694%" y="133" width="0.1223%" height="15" fill="rgb(231,138,38)" fg:x="4516" fg:w="63"/><text x="9.0624%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.55%)</title><rect x="8.4587%" y="149" width="0.5476%" height="15" fill="rgb(231,145,46)" fg:x="4356" fg:w="282"/><text x="8.7517%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,053 instructions, 3.99%)</title><rect x="5.5013%" y="165" width="3.9866%" height="15" fill="rgb(251,118,11)" fg:x="2833" fg:w="2053"/><text x="5.7943%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="9.4879%" y="165" width="0.1223%" height="15" fill="rgb(217,147,25)" fg:x="4886" fg:w="63"/><text x="9.7809%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6103%" y="165" width="0.0252%" height="15" fill="rgb(247,81,37)" fg:x="4949" fg:w="13"/><text x="9.9032%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6355%" y="165" width="0.0252%" height="15" fill="rgb(209,12,38)" fg:x="4962" fg:w="13"/><text x="9.9285%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="9.6608%" y="165" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="4975" fg:w="7"/><text x="9.9537%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="9.6743%" y="165" width="0.0291%" height="15" fill="rgb(248,47,43)" fg:x="4982" fg:w="15"/><text x="9.9673%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.7035%" y="149" width="0.1592%" height="15" fill="rgb(221,10,30)" fg:x="4997" fg:w="82"/><text x="9.9964%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="9.7035%" y="165" width="0.3204%" height="15" fill="rgb(210,229,1)" fg:x="4997" fg:w="165"/><text x="9.9964%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.0239%" y="133" width="0.1592%" height="15" fill="rgb(222,148,37)" fg:x="5162" fg:w="82"/><text x="10.3169%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="10.0239%" y="149" width="0.2253%" height="15" fill="rgb(234,67,33)" fg:x="5162" fg:w="116"/><text x="10.3169%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.36%)</title><rect x="10.0239%" y="165" width="0.3573%" height="15" fill="rgb(247,98,35)" fg:x="5162" fg:w="184"/><text x="10.3169%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.3812%" y="149" width="0.1592%" height="15" fill="rgb(247,138,52)" fg:x="5346" fg:w="82"/><text x="10.6742%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="10.3812%" y="165" width="0.3204%" height="15" fill="rgb(213,79,30)" fg:x="5346" fg:w="165"/><text x="10.6742%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.7016%" y="165" width="0.1592%" height="15" fill="rgb(246,177,23)" fg:x="5511" fg:w="82"/><text x="10.9946%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="10.8608%" y="165" width="0.1573%" height="15" fill="rgb(230,62,27)" fg:x="5593" fg:w="81"/><text x="11.1538%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.0181%" y="165" width="0.1592%" height="15" fill="rgb(216,154,8)" fg:x="5674" fg:w="82"/><text x="11.3111%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.1774%" y="165" width="0.1592%" height="15" fill="rgb(244,35,45)" fg:x="5756" fg:w="82"/><text x="11.4703%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.3405%" y="165" width="0.1573%" height="15" fill="rgb(251,115,12)" fg:x="5840" fg:w="81"/><text x="11.6334%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="11.4978%" y="165" width="0.7748%" height="15" fill="rgb(240,54,50)" fg:x="5921" fg:w="399"/><text x="11.7907%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="12.2726%" y="165" width="0.7748%" height="15" fill="rgb(233,84,52)" fg:x="6320" fg:w="399"/><text x="12.5655%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,143 instructions, 13.87%)</title><rect x="1.1282%" y="181" width="13.8707%" height="15" fill="rgb(207,117,47)" fg:x="581" fg:w="7143"/><text x="1.4212%" y="191.50">candid::de::IDLDes..</text></g><g><title>memcpy (354 instructions, 0.69%)</title><rect x="14.9989%" y="181" width="0.6874%" height="15" fill="rgb(249,43,39)" fg:x="7724" fg:w="354"/><text x="15.2919%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.10%)</title><rect x="15.6864%" y="165" width="0.0971%" height="15" fill="rgb(209,38,44)" fg:x="8078" fg:w="50"/><text x="15.9793%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.16%)</title><rect x="15.6864%" y="181" width="0.1631%" height="15" fill="rgb(236,212,23)" fg:x="8078" fg:w="84"/><text x="15.9793%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="15.8495%" y="181" width="0.1592%" height="15" fill="rgb(242,79,21)" fg:x="8162" fg:w="82"/><text x="16.1424%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="16.0184%" y="149" width="0.1029%" height="15" fill="rgb(211,96,35)" fg:x="8249" fg:w="53"/><text x="16.3114%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.75%)</title><rect x="16.1213%" y="149" width="0.7457%" height="15" fill="rgb(253,215,40)" fg:x="8302" fg:w="384"/><text x="16.4143%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.31%)</title><rect x="16.8670%" y="149" width="0.3146%" height="15" fill="rgb(211,81,21)" fg:x="8686" fg:w="162"/><text x="17.1600%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.62%)</title><rect x="16.0184%" y="165" width="1.6234%" height="15" fill="rgb(208,190,38)" fg:x="8249" fg:w="836"/><text x="16.3114%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="17.6418%" y="165" width="0.1592%" height="15" fill="rgb(235,213,38)" fg:x="9085" fg:w="82"/><text x="17.9348%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="17.8010%" y="165" width="0.2641%" height="15" fill="rgb(237,122,38)" fg:x="9167" fg:w="136"/><text x="18.0940%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,415 instructions, 2.75%)</title><rect x="16.0087%" y="181" width="2.7477%" height="15" fill="rgb(244,218,35)" fg:x="8244" fg:w="1415"/><text x="16.3017%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="18.7564%" y="181" width="0.1592%" height="15" fill="rgb(240,68,47)" fg:x="9659" fg:w="82"/><text x="19.0494%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="18.9254%" y="149" width="0.1029%" height="15" fill="rgb(210,16,53)" fg:x="9746" fg:w="53"/><text x="19.2183%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.75%)</title><rect x="19.0283%" y="149" width="0.7457%" height="15" fill="rgb(235,124,12)" fg:x="9799" fg:w="384"/><text x="19.3213%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.31%)</title><rect x="19.7740%" y="149" width="0.3146%" height="15" fill="rgb(224,169,11)" fg:x="10183" fg:w="162"/><text x="20.0669%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.62%)</title><rect x="18.9254%" y="165" width="1.6234%" height="15" fill="rgb(250,166,2)" fg:x="9746" fg:w="836"/><text x="19.2183%" y="175.50"></text></g><g><title>memcmp (740 instructions, 1.44%)</title><rect x="20.5488%" y="165" width="1.4370%" height="15" fill="rgb(242,216,29)" fg:x="10582" fg:w="740"/><text x="20.8417%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="21.9857%" y="149" width="0.1573%" height="15" fill="rgb(230,116,27)" fg:x="11322" fg:w="81"/><text x="22.2787%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="21.9857%" y="165" width="0.2097%" height="15" fill="rgb(228,99,48)" fg:x="11322" fg:w="108"/><text x="22.2787%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 3.61%)</title><rect x="18.9157%" y="181" width="3.6080%" height="15" fill="rgb(253,11,6)" fg:x="9741" fg:w="1858"/><text x="19.2086%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="22.5236%" y="133" width="0.1029%" height="15" fill="rgb(247,143,39)" fg:x="11599" fg:w="53"/><text x="22.8166%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="22.5236%" y="149" width="0.1515%" height="15" fill="rgb(236,97,10)" fg:x="11599" fg:w="78"/><text x="22.8166%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="22.5236%" y="165" width="0.5690%" height="15" fill="rgb(233,208,19)" fg:x="11599" fg:w="293"/><text x="22.8166%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.0926%" y="165" width="0.1592%" height="15" fill="rgb(216,164,2)" fg:x="11892" fg:w="82"/><text x="23.3856%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="23.2518%" y="165" width="0.2641%" height="15" fill="rgb(220,129,5)" fg:x="11974" fg:w="136"/><text x="23.5448%" y="175.50"></text></g><g><title>candid::types::internal::env_id (916 instructions, 1.78%)</title><rect x="22.5236%" y="181" width="1.7787%" height="15" fill="rgb(242,17,10)" fg:x="11599" fg:w="916"/><text x="22.8166%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.09%)</title><rect x="24.3024%" y="181" width="0.0913%" height="15" fill="rgb(242,107,0)" fg:x="12515" fg:w="47"/><text x="24.5954%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.3937%" y="165" width="0.2388%" height="15" fill="rgb(251,28,31)" fg:x="12562" fg:w="123"/><text x="24.6866%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.6849%" y="165" width="0.2388%" height="15" fill="rgb(233,223,10)" fg:x="12712" fg:w="123"/><text x="24.9779%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.58%)</title><rect x="24.3937%" y="181" width="0.5826%" height="15" fill="rgb(215,21,27)" fg:x="12562" fg:w="300"/><text x="24.6866%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="24.9762%" y="165" width="0.0544%" height="15" fill="rgb(232,23,21)" fg:x="12862" fg:w="28"/><text x="25.2692%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="25.0306%" y="165" width="0.0544%" height="15" fill="rgb(244,5,23)" fg:x="12890" fg:w="28"/><text x="25.3236%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.0850%" y="165" width="0.0291%" height="15" fill="rgb(226,81,46)" fg:x="12918" fg:w="15"/><text x="25.3779%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.1141%" y="165" width="0.0291%" height="15" fill="rgb(247,70,30)" fg:x="12933" fg:w="15"/><text x="25.4071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="25.1432%" y="165" width="0.1515%" height="15" fill="rgb(212,68,19)" fg:x="12948" fg:w="78"/><text x="25.4362%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="25.2947%" y="149" width="0.1340%" height="15" fill="rgb(240,187,13)" fg:x="13026" fg:w="69"/><text x="25.5876%" y="159.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.15%)</title><rect x="25.4287%" y="133" width="0.1534%" height="15" fill="rgb(223,113,26)" fg:x="13095" fg:w="79"/><text x="25.7216%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.29%)</title><rect x="25.4287%" y="149" width="0.2893%" height="15" fill="rgb(206,192,2)" fg:x="13095" fg:w="149"/><text x="25.7216%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="25.7180%" y="149" width="0.1262%" height="15" fill="rgb(241,108,4)" fg:x="13244" fg:w="65"/><text x="26.0110%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="25.8442%" y="149" width="0.7884%" height="15" fill="rgb(247,173,49)" fg:x="13309" fg:w="406"/><text x="26.1372%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="26.6326%" y="133" width="0.2291%" height="15" fill="rgb(224,114,35)" fg:x="13715" fg:w="118"/><text x="26.9256%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="26.8618%" y="101" width="0.1165%" height="15" fill="rgb(245,159,27)" fg:x="13833" fg:w="60"/><text x="27.1547%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="26.8618%" y="117" width="0.1651%" height="15" fill="rgb(245,172,44)" fg:x="13833" fg:w="85"/><text x="27.1547%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="27.0268%" y="69" width="0.0175%" height="15" fill="rgb(236,23,11)" fg:x="13918" fg:w="9"/><text x="27.3198%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="27.0443%" y="53" width="0.0583%" height="15" fill="rgb(205,117,38)" fg:x="13927" fg:w="30"/><text x="27.3373%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="27.0443%" y="69" width="0.1068%" height="15" fill="rgb(237,72,25)" fg:x="13927" fg:w="55"/><text x="27.3373%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="27.0268%" y="85" width="0.2291%" height="15" fill="rgb(244,70,9)" fg:x="13918" fg:w="118"/><text x="27.3198%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="27.0268%" y="101" width="0.3321%" height="15" fill="rgb(217,125,39)" fg:x="13918" fg:w="171"/><text x="27.3198%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="27.0268%" y="117" width="0.3418%" height="15" fill="rgb(235,36,10)" fg:x="13918" fg:w="176"/><text x="27.3198%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="26.8618%" y="133" width="0.7224%" height="15" fill="rgb(251,123,47)" fg:x="13833" fg:w="372"/><text x="27.1547%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.23%)</title><rect x="26.6326%" y="149" width="1.2253%" height="15" fill="rgb(221,13,13)" fg:x="13715" fg:w="631"/><text x="26.9256%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="27.8579%" y="149" width="0.1592%" height="15" fill="rgb(238,131,9)" fg:x="14346" fg:w="82"/><text x="28.1509%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="28.0172%" y="149" width="0.1068%" height="15" fill="rgb(211,50,8)" fg:x="14428" fg:w="55"/><text x="28.3101%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.1240%" y="133" width="0.1087%" height="15" fill="rgb(245,182,24)" fg:x="14483" fg:w="56"/><text x="28.4169%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.21%)</title><rect x="28.1240%" y="149" width="0.2078%" height="15" fill="rgb(242,14,37)" fg:x="14483" fg:w="107"/><text x="28.4169%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="28.3317%" y="149" width="0.1476%" height="15" fill="rgb(246,228,12)" fg:x="14590" fg:w="76"/><text x="28.6247%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.4793%" y="133" width="0.1087%" height="15" fill="rgb(213,55,15)" fg:x="14666" fg:w="56"/><text x="28.7723%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.6871%" y="133" width="0.1087%" height="15" fill="rgb(209,9,3)" fg:x="14773" fg:w="56"/><text x="28.9801%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.8949%" y="133" width="0.1087%" height="15" fill="rgb(230,59,30)" fg:x="14880" fg:w="56"/><text x="29.1879%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.1027%" y="133" width="0.1087%" height="15" fill="rgb(209,121,21)" fg:x="14987" fg:w="56"/><text x="29.3956%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.3104%" y="133" width="0.1087%" height="15" fill="rgb(220,109,13)" fg:x="15094" fg:w="56"/><text x="29.6034%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.5182%" y="133" width="0.1087%" height="15" fill="rgb(232,18,1)" fg:x="15201" fg:w="56"/><text x="29.8112%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.7260%" y="133" width="0.1087%" height="15" fill="rgb(215,41,42)" fg:x="15308" fg:w="56"/><text x="30.0190%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.9338%" y="133" width="0.1087%" height="15" fill="rgb(224,123,36)" fg:x="15415" fg:w="56"/><text x="30.2268%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (856 instructions, 1.66%)</title><rect x="28.4793%" y="149" width="1.6622%" height="15" fill="rgb(240,125,3)" fg:x="14666" fg:w="856"/><text x="28.7723%" y="159.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="30.1416%" y="117" width="0.1961%" height="15" fill="rgb(205,98,50)" fg:x="15522" fg:w="101"/><text x="30.4345%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="30.1416%" y="133" width="0.2641%" height="15" fill="rgb(205,185,37)" fg:x="15522" fg:w="136"/><text x="30.4345%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.41%)</title><rect x="30.1416%" y="149" width="0.4058%" height="15" fill="rgb(238,207,15)" fg:x="15522" fg:w="209"/><text x="30.4345%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="30.5474%" y="133" width="0.1087%" height="15" fill="rgb(213,199,42)" fg:x="15731" fg:w="56"/><text x="30.8404%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.21%)</title><rect x="30.5474%" y="149" width="0.2078%" height="15" fill="rgb(235,201,11)" fg:x="15731" fg:w="107"/><text x="30.8404%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 instructions, 0.05%)</title><rect x="30.7552%" y="149" width="0.0485%" height="15" fill="rgb(207,46,11)" fg:x="15838" fg:w="25"/><text x="31.0482%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="30.8037%" y="149" width="0.1223%" height="15" fill="rgb(241,35,35)" fg:x="15863" fg:w="63"/><text x="31.0967%" y="159.50"></text></g><g><title>binread::BinRead::read (3,509 instructions, 6.81%)</title><rect x="25.2947%" y="165" width="6.8140%" height="15" fill="rgb(243,32,47)" fg:x="13026" fg:w="3509"/><text x="25.5876%" y="175.50">binread..</text></g><g><title>__rust_realloc (45 instructions, 0.09%)</title><rect x="32.1087%" y="133" width="0.0874%" height="15" fill="rgb(247,202,23)" fg:x="16535" fg:w="45"/><text x="32.4016%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.16%)</title><rect x="32.1087%" y="149" width="0.1553%" height="15" fill="rgb(219,102,11)" fg:x="16535" fg:w="80"/><text x="32.4016%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.30%)</title><rect x="32.1087%" y="165" width="0.2971%" height="15" fill="rgb(243,110,44)" fg:x="16535" fg:w="153"/><text x="32.4016%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.4058%" y="165" width="0.3204%" height="15" fill="rgb(222,74,54)" fg:x="16688" fg:w="165"/><text x="32.6987%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.7262%" y="165" width="0.3204%" height="15" fill="rgb(216,99,12)" fg:x="16853" fg:w="165"/><text x="33.0191%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="33.0466%" y="165" width="0.1573%" height="15" fill="rgb(226,22,26)" fg:x="17018" fg:w="81"/><text x="33.3396%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="33.2039%" y="165" width="0.1068%" height="15" fill="rgb(217,163,10)" fg:x="17099" fg:w="55"/><text x="33.4968%" y="175.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,570 instructions, 8.87%)</title><rect x="24.9762%" y="181" width="8.8743%" height="15" fill="rgb(213,25,53)" fg:x="12862" fg:w="4570"/><text x="25.2692%" y="191.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8505%" y="181" width="0.0214%" height="15" fill="rgb(252,105,26)" fg:x="17432" fg:w="11"/><text x="34.1435%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8719%" y="181" width="0.0214%" height="15" fill="rgb(220,39,43)" fg:x="17443" fg:w="11"/><text x="34.1648%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8932%" y="181" width="0.0214%" height="15" fill="rgb(229,68,48)" fg:x="17454" fg:w="11"/><text x="34.1862%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="33.9243%" y="133" width="0.1029%" height="15" fill="rgb(252,8,32)" fg:x="17470" fg:w="53"/><text x="34.2173%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="34.0272%" y="133" width="0.5942%" height="15" fill="rgb(223,20,43)" fg:x="17523" fg:w="306"/><text x="34.3202%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="34.6214%" y="133" width="0.1398%" height="15" fill="rgb(229,81,49)" fg:x="17829" fg:w="72"/><text x="34.9144%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="33.9243%" y="149" width="1.2972%" height="15" fill="rgb(236,28,36)" fg:x="17470" fg:w="668"/><text x="34.2173%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.53%)</title><rect x="33.9146%" y="165" width="1.5263%" height="15" fill="rgb(249,185,26)" fg:x="17465" fg:w="786"/><text x="34.2076%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.30%)</title><rect x="35.4409%" y="165" width="0.3049%" height="15" fill="rgb(249,174,33)" fg:x="18251" fg:w="157"/><text x="35.7339%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="35.7555%" y="133" width="0.1029%" height="15" fill="rgb(233,201,37)" fg:x="18413" fg:w="53"/><text x="36.0484%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="35.8584%" y="133" width="0.5942%" height="15" fill="rgb(221,78,26)" fg:x="18466" fg:w="306"/><text x="36.1514%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="36.4526%" y="133" width="0.1398%" height="15" fill="rgb(250,127,30)" fg:x="18772" fg:w="72"/><text x="36.7456%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="35.7555%" y="149" width="1.2972%" height="15" fill="rgb(230,49,44)" fg:x="18413" fg:w="668"/><text x="36.0484%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.70%)</title><rect x="35.7458%" y="165" width="1.7030%" height="15" fill="rgb(229,67,23)" fg:x="18408" fg:w="877"/><text x="36.0387%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="37.4488%" y="165" width="0.1476%" height="15" fill="rgb(249,83,47)" fg:x="19285" fg:w="76"/><text x="37.7418%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="37.6061%" y="133" width="0.1029%" height="15" fill="rgb(215,43,3)" fg:x="19366" fg:w="53"/><text x="37.8990%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="37.7090%" y="133" width="0.5942%" height="15" fill="rgb(238,154,13)" fg:x="19419" fg:w="306"/><text x="38.0020%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="38.3032%" y="133" width="0.1398%" height="15" fill="rgb(219,56,2)" fg:x="19725" fg:w="72"/><text x="38.5962%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="37.6061%" y="149" width="1.2972%" height="15" fill="rgb(233,0,4)" fg:x="19366" fg:w="668"/><text x="37.8990%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.87%)</title><rect x="38.9032%" y="149" width="0.8661%" height="15" fill="rgb(235,30,7)" fg:x="20034" fg:w="446"/><text x="39.1962%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="39.7693%" y="133" width="0.1573%" height="15" fill="rgb(250,79,13)" fg:x="20480" fg:w="81"/><text x="40.0623%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="39.7693%" y="149" width="0.2097%" height="15" fill="rgb(211,146,34)" fg:x="20480" fg:w="108"/><text x="40.0623%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 2.71%)</title><rect x="37.5964%" y="165" width="2.7108%" height="15" fill="rgb(228,22,38)" fg:x="19361" fg:w="1396"/><text x="37.8893%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.3072%" y="117" width="0.1029%" height="15" fill="rgb(235,168,5)" fg:x="20757" fg:w="53"/><text x="40.6002%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="40.3072%" y="133" width="0.1515%" height="15" fill="rgb(221,155,16)" fg:x="20757" fg:w="78"/><text x="40.6002%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="40.3072%" y="149" width="0.5690%" height="15" fill="rgb(215,215,53)" fg:x="20757" fg:w="293"/><text x="40.6002%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (9 instructions, 0.02%)</title><rect x="40.8762%" y="149" width="0.0175%" height="15" fill="rgb(223,4,10)" fg:x="21050" fg:w="9"/><text x="41.1691%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.8936%" y="117" width="0.1029%" height="15" fill="rgb(234,103,6)" fg:x="21059" fg:w="53"/><text x="41.1866%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="40.8936%" y="133" width="0.1515%" height="15" fill="rgb(227,97,0)" fg:x="21059" fg:w="78"/><text x="41.1866%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="40.8936%" y="149" width="0.5690%" height="15" fill="rgb(234,150,53)" fg:x="21059" fg:w="293"/><text x="41.1866%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (9 instructions, 0.02%)</title><rect x="41.4626%" y="149" width="0.0175%" height="15" fill="rgb(228,201,54)" fg:x="21352" fg:w="9"/><text x="41.7556%" y="159.50"></text></g><g><title>candid::types::internal::env_id (949 instructions, 1.84%)</title><rect x="40.3072%" y="165" width="1.8428%" height="15" fill="rgb(222,22,37)" fg:x="20757" fg:w="949"/><text x="40.6002%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,348 instructions, 8.44%)</title><rect x="33.9146%" y="181" width="8.4432%" height="15" fill="rgb(237,53,32)" fg:x="17465" fg:w="4348"/><text x="34.2076%" y="191.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.09%)</title><rect x="42.3578%" y="181" width="0.0913%" height="15" fill="rgb(233,25,53)" fg:x="21813" fg:w="47"/><text x="42.6508%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.33%)</title><rect x="42.4704%" y="165" width="0.3262%" height="15" fill="rgb(210,40,34)" fg:x="21871" fg:w="168"/><text x="42.7634%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.40%)</title><rect x="42.4491%" y="181" width="0.4000%" height="15" fill="rgb(241,220,44)" fg:x="21860" fg:w="206"/><text x="42.7420%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="42.8491%" y="165" width="0.0544%" height="15" fill="rgb(235,28,35)" fg:x="22066" fg:w="28"/><text x="43.1421%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.9035%" y="165" width="0.0291%" height="15" fill="rgb(210,56,17)" fg:x="22094" fg:w="15"/><text x="43.1964%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.9326%" y="165" width="0.0291%" height="15" fill="rgb(224,130,29)" fg:x="22109" fg:w="15"/><text x="43.2256%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="42.9617%" y="149" width="0.1340%" height="15" fill="rgb(235,212,8)" fg:x="22124" fg:w="69"/><text x="43.2547%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="43.0957%" y="149" width="0.1262%" height="15" fill="rgb(223,33,50)" fg:x="22193" fg:w="65"/><text x="43.3887%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="43.2219%" y="149" width="0.1223%" height="15" fill="rgb(219,149,13)" fg:x="22258" fg:w="63"/><text x="43.5149%" y="159.50"></text></g><g><title>binread::BinRead::read (241 instructions, 0.47%)</title><rect x="42.9617%" y="165" width="0.4680%" height="15" fill="rgb(250,156,29)" fg:x="22124" fg:w="241"/><text x="43.2547%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.11%)</title><rect x="43.4297%" y="165" width="0.1068%" height="15" fill="rgb(216,193,19)" fg:x="22365" fg:w="55"/><text x="43.7227%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="43.5365%" y="165" width="0.1476%" height="15" fill="rgb(216,135,14)" fg:x="22420" fg:w="76"/><text x="43.8295%" y="175.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="43.6841%" y="165" width="0.2039%" height="15" fill="rgb(241,47,5)" fg:x="22496" fg:w="105"/><text x="43.9771%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.28%)</title><rect x="43.8880%" y="165" width="0.2796%" height="15" fill="rgb(233,42,35)" fg:x="22601" fg:w="144"/><text x="44.1810%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (813 instructions, 1.58%)</title><rect x="42.8491%" y="181" width="1.5787%" height="15" fill="rgb(231,13,6)" fg:x="22066" fg:w="813"/><text x="43.1421%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4278%" y="181" width="0.0214%" height="15" fill="rgb(207,181,40)" fg:x="22879" fg:w="11"/><text x="44.7208%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4492%" y="181" width="0.0214%" height="15" fill="rgb(254,173,49)" fg:x="22890" fg:w="11"/><text x="44.7422%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4706%" y="181" width="0.0214%" height="15" fill="rgb(221,1,38)" fg:x="22901" fg:w="11"/><text x="44.7635%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.80%)</title><rect x="44.4919%" y="181" width="0.7962%" height="15" fill="rgb(206,124,46)" fg:x="22912" fg:w="410"/><text x="44.7849%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="45.2881%" y="149" width="0.0233%" height="15" fill="rgb(249,21,11)" fg:x="23322" fg:w="12"/><text x="45.5810%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="45.3114%" y="149" width="0.2388%" height="15" fill="rgb(222,201,40)" fg:x="23334" fg:w="123"/><text x="45.6043%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.5502%" y="117" width="0.1223%" height="15" fill="rgb(235,61,29)" fg:x="23457" fg:w="63"/><text x="45.8432%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.40%)</title><rect x="45.5502%" y="133" width="0.4039%" height="15" fill="rgb(219,207,3)" fg:x="23457" fg:w="208"/><text x="45.8432%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.46%)</title><rect x="45.5502%" y="149" width="0.4563%" height="15" fill="rgb(222,56,46)" fg:x="23457" fg:w="235"/><text x="45.8432%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.0066%" y="149" width="0.0214%" height="15" fill="rgb(239,76,54)" fg:x="23692" fg:w="11"/><text x="46.2995%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (421 instructions, 0.82%)</title><rect x="45.2881%" y="165" width="0.8175%" height="15" fill="rgb(231,124,27)" fg:x="23322" fg:w="421"/><text x="45.5810%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (459 instructions, 0.89%)</title><rect x="45.2881%" y="181" width="0.8913%" height="15" fill="rgb(249,195,6)" fg:x="23322" fg:w="459"/><text x="45.5810%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="46.1794%" y="165" width="0.1068%" height="15" fill="rgb(237,174,47)" fg:x="23781" fg:w="55"/><text x="46.4724%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="46.2862%" y="165" width="0.1223%" height="15" fill="rgb(206,201,31)" fg:x="23836" fg:w="63"/><text x="46.5792%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.39%)</title><rect x="46.1794%" y="181" width="0.3864%" height="15" fill="rgb(231,57,52)" fg:x="23781" fg:w="199"/><text x="46.4724%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5755%" y="165" width="0.0214%" height="15" fill="rgb(248,177,22)" fg:x="23985" fg:w="11"/><text x="46.8685%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5969%" y="165" width="0.0214%" height="15" fill="rgb(215,211,37)" fg:x="23996" fg:w="11"/><text x="46.8899%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="46.6182%" y="165" width="0.2641%" height="15" fill="rgb(241,128,51)" fg:x="24007" fg:w="136"/><text x="46.9112%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (349 instructions, 0.68%)</title><rect x="46.5658%" y="181" width="0.6777%" height="15" fill="rgb(227,165,31)" fg:x="23980" fg:w="349"/><text x="46.8588%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="47.2435%" y="181" width="0.0757%" height="15" fill="rgb(228,167,24)" fg:x="24329" fg:w="39"/><text x="47.5365%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="47.3193%" y="165" width="0.1068%" height="15" fill="rgb(228,143,12)" fg:x="24368" fg:w="55"/><text x="47.6122%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (203 instructions, 0.39%)</title><rect x="47.3193%" y="181" width="0.3942%" height="15" fill="rgb(249,149,8)" fg:x="24368" fg:w="203"/><text x="47.6122%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="47.7232%" y="149" width="0.1029%" height="15" fill="rgb(243,35,44)" fg:x="24576" fg:w="53"/><text x="48.0161%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.61%)</title><rect x="47.8261%" y="149" width="0.6059%" height="15" fill="rgb(246,89,9)" fg:x="24629" fg:w="312"/><text x="48.1191%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="48.4319%" y="149" width="0.1398%" height="15" fill="rgb(233,213,13)" fg:x="24941" fg:w="72"/><text x="48.7249%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="47.7232%" y="165" width="1.3088%" height="15" fill="rgb(233,141,41)" fg:x="24576" fg:w="674"/><text x="48.0161%" y="175.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 1.71%)</title><rect x="47.7135%" y="181" width="1.7147%" height="15" fill="rgb(239,167,4)" fg:x="24571" fg:w="883"/><text x="48.0064%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.4281%" y="181" width="0.1476%" height="15" fill="rgb(209,217,16)" fg:x="25454" fg:w="76"/><text x="49.7211%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.5757%" y="181" width="0.1476%" height="15" fill="rgb(219,88,35)" fg:x="25530" fg:w="76"/><text x="49.8687%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="49.7233%" y="181" width="0.1515%" height="15" fill="rgb(220,193,23)" fg:x="25606" fg:w="78"/><text x="50.0163%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="49.8845%" y="133" width="0.1029%" height="15" fill="rgb(230,90,52)" fg:x="25689" fg:w="53"/><text x="50.1774%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="49.9874%" y="133" width="0.5942%" height="15" fill="rgb(252,106,19)" fg:x="25742" fg:w="306"/><text x="50.2803%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="50.5816%" y="133" width="0.1398%" height="15" fill="rgb(206,74,20)" fg:x="26048" fg:w="72"/><text x="50.8746%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="49.8845%" y="149" width="1.2972%" height="15" fill="rgb(230,138,44)" fg:x="25689" fg:w="668"/><text x="50.1774%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.53%)</title><rect x="49.8747%" y="165" width="1.5263%" height="15" fill="rgb(235,182,43)" fg:x="25684" fg:w="786"/><text x="50.1677%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="51.4011%" y="165" width="0.1476%" height="15" fill="rgb(242,16,51)" fg:x="26470" fg:w="76"/><text x="51.6940%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="51.5583%" y="133" width="0.1029%" height="15" fill="rgb(248,9,4)" fg:x="26551" fg:w="53"/><text x="51.8513%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="51.6613%" y="133" width="0.5942%" height="15" fill="rgb(210,31,22)" fg:x="26604" fg:w="306"/><text x="51.9542%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="52.2555%" y="133" width="0.1398%" height="15" fill="rgb(239,54,39)" fg:x="26910" fg:w="72"/><text x="52.5484%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="51.5583%" y="149" width="1.2972%" height="15" fill="rgb(230,99,41)" fg:x="26551" fg:w="668"/><text x="51.8513%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.70%)</title><rect x="51.5486%" y="165" width="1.7030%" height="15" fill="rgb(253,106,12)" fg:x="26546" fg:w="877"/><text x="51.8416%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="53.2516%" y="165" width="0.1476%" height="15" fill="rgb(213,46,41)" fg:x="27423" fg:w="76"/><text x="53.5446%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="53.4089%" y="133" width="0.1029%" height="15" fill="rgb(215,133,35)" fg:x="27504" fg:w="53"/><text x="53.7019%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="53.5119%" y="133" width="0.5942%" height="15" fill="rgb(213,28,5)" fg:x="27557" fg:w="306"/><text x="53.8048%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="54.1061%" y="133" width="0.1398%" height="15" fill="rgb(215,77,49)" fg:x="27863" fg:w="72"/><text x="54.3990%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="53.4089%" y="149" width="1.2972%" height="15" fill="rgb(248,100,22)" fg:x="27504" fg:w="668"/><text x="53.7019%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.87%)</title><rect x="54.7061%" y="149" width="0.8661%" height="15" fill="rgb(208,67,9)" fg:x="28172" fg:w="446"/><text x="54.9991%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="55.5722%" y="133" width="0.1573%" height="15" fill="rgb(219,133,21)" fg:x="28618" fg:w="81"/><text x="55.8651%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="55.5722%" y="149" width="0.2097%" height="15" fill="rgb(246,46,29)" fg:x="28618" fg:w="108"/><text x="55.8651%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 2.71%)</title><rect x="53.3992%" y="165" width="2.7108%" height="15" fill="rgb(246,185,52)" fg:x="27499" fg:w="1396"/><text x="53.6922%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="56.1101%" y="117" width="0.1029%" height="15" fill="rgb(252,136,11)" fg:x="28895" fg:w="53"/><text x="56.4030%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="56.1101%" y="133" width="0.1515%" height="15" fill="rgb(219,138,53)" fg:x="28895" fg:w="78"/><text x="56.4030%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="56.1101%" y="149" width="0.5690%" height="15" fill="rgb(211,51,23)" fg:x="28895" fg:w="293"/><text x="56.4030%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (9 instructions, 0.02%)</title><rect x="56.6790%" y="149" width="0.0175%" height="15" fill="rgb(247,221,28)" fg:x="29188" fg:w="9"/><text x="56.9720%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1331 (15 instructions, 0.03%)</title><rect x="56.6965%" y="149" width="0.0291%" height="15" fill="rgb(251,222,45)" fg:x="29197" fg:w="15"/><text x="56.9895%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.7256%" y="149" width="0.0214%" height="15" fill="rgb(217,162,53)" fg:x="29212" fg:w="11"/><text x="57.0186%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.01%)</title><rect x="56.1101%" y="165" width="1.0137%" height="15" fill="rgb(229,93,14)" fg:x="28895" fg:w="522"/><text x="56.4030%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,840 instructions, 7.46%)</title><rect x="49.8747%" y="181" width="7.4567%" height="15" fill="rgb(209,67,49)" fg:x="25684" fg:w="3840"/><text x="50.1677%" y="191.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="57.3315%" y="181" width="0.1515%" height="15" fill="rgb(213,87,29)" fg:x="29524" fg:w="78"/><text x="57.6245%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="57.4927%" y="149" width="0.1029%" height="15" fill="rgb(205,151,52)" fg:x="29607" fg:w="53"/><text x="57.7856%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.61%)</title><rect x="57.5956%" y="149" width="0.6059%" height="15" fill="rgb(253,215,39)" fg:x="29660" fg:w="312"/><text x="57.8886%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="58.2014%" y="149" width="0.1398%" height="15" fill="rgb(221,220,41)" fg:x="29972" fg:w="72"/><text x="58.4944%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="57.4927%" y="165" width="1.3088%" height="15" fill="rgb(218,133,21)" fg:x="29607" fg:w="674"/><text x="57.7856%" y="175.50"></text></g><g><title>memcmp (467 instructions, 0.91%)</title><rect x="58.8015%" y="165" width="0.9068%" height="15" fill="rgb(221,193,43)" fg:x="30281" fg:w="467"/><text x="59.0945%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="59.7083%" y="149" width="0.1573%" height="15" fill="rgb(240,128,52)" fg:x="30748" fg:w="81"/><text x="60.0013%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="59.7083%" y="165" width="0.2097%" height="15" fill="rgb(253,114,12)" fg:x="30748" fg:w="108"/><text x="60.0013%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,423 instructions, 2.76%)</title><rect x="57.4830%" y="181" width="2.7633%" height="15" fill="rgb(215,223,47)" fg:x="29602" fg:w="1423"/><text x="57.7759%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.2462%" y="133" width="0.1029%" height="15" fill="rgb(248,225,23)" fg:x="31025" fg:w="53"/><text x="60.5392%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="60.3491%" y="133" width="0.2990%" height="15" fill="rgb(250,108,0)" fg:x="31078" fg:w="154"/><text x="60.6421%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.6482%" y="117" width="0.1029%" height="15" fill="rgb(228,208,7)" fg:x="31232" fg:w="53"/><text x="60.9412%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="60.6482%" y="133" width="0.1515%" height="15" fill="rgb(244,45,10)" fg:x="31232" fg:w="78"/><text x="60.9412%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="60.2462%" y="149" width="0.6816%" height="15" fill="rgb(207,125,25)" fg:x="31025" fg:w="351"/><text x="60.5392%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.3453%" y="133" width="0.1029%" height="15" fill="rgb(210,195,18)" fg:x="31591" fg:w="53"/><text x="61.6383%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="61.4482%" y="133" width="0.2990%" height="15" fill="rgb(249,80,12)" fg:x="31644" fg:w="154"/><text x="61.7412%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.7473%" y="117" width="0.1029%" height="15" fill="rgb(221,65,9)" fg:x="31798" fg:w="53"/><text x="62.0403%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="61.7473%" y="133" width="0.1515%" height="15" fill="rgb(235,49,36)" fg:x="31798" fg:w="78"/><text x="62.0403%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="61.3453%" y="149" width="0.6816%" height="15" fill="rgb(225,32,20)" fg:x="31591" fg:w="351"/><text x="61.6383%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,132 instructions, 2.20%)</title><rect x="60.2462%" y="165" width="2.1982%" height="15" fill="rgb(215,141,46)" fg:x="31025" fg:w="1132"/><text x="60.5392%" y="175.50">c..</text></g><g><title>candid::types::internal::env_id (1,405 instructions, 2.73%)</title><rect x="60.2462%" y="181" width="2.7283%" height="15" fill="rgb(250,160,47)" fg:x="31025" fg:w="1405"/><text x="60.5392%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="62.9745%" y="149" width="0.1476%" height="15" fill="rgb(216,222,40)" fg:x="32430" fg:w="76"/><text x="63.2675%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.21%)</title><rect x="62.9745%" y="165" width="0.2136%" height="15" fill="rgb(234,217,39)" fg:x="32430" fg:w="110"/><text x="63.2675%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.35%)</title><rect x="62.9745%" y="181" width="0.3457%" height="15" fill="rgb(207,178,40)" fg:x="32430" fg:w="178"/><text x="63.2675%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="63.3202%" y="165" width="0.0466%" height="15" fill="rgb(221,136,13)" fg:x="32608" fg:w="24"/><text x="63.6132%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.3668%" y="149" width="0.1476%" height="15" fill="rgb(249,199,10)" fg:x="32632" fg:w="76"/><text x="63.6598%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="63.5144%" y="133" width="0.1515%" height="15" fill="rgb(249,222,13)" fg:x="32708" fg:w="78"/><text x="63.8073%" y="143.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.30%)</title><rect x="63.5144%" y="149" width="0.2971%" height="15" fill="rgb(244,185,38)" fg:x="32708" fg:w="153"/><text x="63.8073%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="63.8115%" y="149" width="0.1592%" height="15" fill="rgb(236,202,9)" fg:x="32861" fg:w="82"/><text x="64.1045%" y="159.50"></text></g><g><title>candid::types::internal::unroll (464 instructions, 0.90%)</title><rect x="63.3668%" y="165" width="0.9010%" height="15" fill="rgb(250,229,37)" fg:x="32632" fg:w="464"/><text x="63.6598%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.2678%" y="117" width="0.1029%" height="15" fill="rgb(206,174,23)" fg:x="33096" fg:w="53"/><text x="64.5608%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="64.3707%" y="117" width="0.2990%" height="15" fill="rgb(211,33,43)" fg:x="33149" fg:w="154"/><text x="64.6637%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.6698%" y="101" width="0.1029%" height="15" fill="rgb(245,58,50)" fg:x="33303" fg:w="53"/><text x="64.9628%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="64.6698%" y="117" width="0.1515%" height="15" fill="rgb(244,68,36)" fg:x="33303" fg:w="78"/><text x="64.9628%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="64.2678%" y="133" width="0.6816%" height="15" fill="rgb(232,229,15)" fg:x="33096" fg:w="351"/><text x="64.5608%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (566 instructions, 1.10%)</title><rect x="64.2678%" y="149" width="1.0991%" height="15" fill="rgb(254,30,23)" fg:x="33096" fg:w="566"/><text x="64.5608%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="65.3669%" y="149" width="0.1379%" height="15" fill="rgb(235,160,14)" fg:x="33662" fg:w="71"/><text x="65.6599%" y="159.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="65.5048%" y="149" width="0.2641%" height="15" fill="rgb(212,155,44)" fg:x="33733" fg:w="136"/><text x="65.7978%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,077 instructions, 2.09%)</title><rect x="64.2678%" y="165" width="2.0914%" height="15" fill="rgb(226,2,50)" fg:x="33096" fg:w="1077"/><text x="64.5608%" y="175.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="66.3592%" y="133" width="0.1592%" height="15" fill="rgb(234,177,6)" fg:x="34173" fg:w="82"/><text x="66.6522%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="66.3592%" y="149" width="0.2253%" height="15" fill="rgb(217,24,9)" fg:x="34173" fg:w="116"/><text x="66.6522%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.36%)</title><rect x="66.3592%" y="165" width="0.3573%" height="15" fill="rgb(220,13,46)" fg:x="34173" fg:w="184"/><text x="66.6522%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="66.7165%" y="117" width="0.1029%" height="15" fill="rgb(239,221,27)" fg:x="34357" fg:w="53"/><text x="67.0095%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="66.7165%" y="133" width="0.1515%" height="15" fill="rgb(222,198,25)" fg:x="34357" fg:w="78"/><text x="67.0095%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="66.7165%" y="149" width="0.5690%" height="15" fill="rgb(211,99,13)" fg:x="34357" fg:w="293"/><text x="67.0095%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.03%)</title><rect x="67.2855%" y="149" width="0.0350%" height="15" fill="rgb(232,111,31)" fg:x="34650" fg:w="18"/><text x="67.5784%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="67.3204%" y="149" width="0.0214%" height="15" fill="rgb(245,82,37)" fg:x="34668" fg:w="11"/><text x="67.6134%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.85%)</title><rect x="66.7165%" y="165" width="0.8505%" height="15" fill="rgb(227,149,46)" fg:x="34357" fg:w="438"/><text x="67.0095%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="67.5670%" y="117" width="0.1592%" height="15" fill="rgb(218,36,50)" fg:x="34795" fg:w="82"/><text x="67.8600%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="67.5670%" y="133" width="0.2253%" height="15" fill="rgb(226,80,48)" fg:x="34795" fg:w="116"/><text x="67.8600%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (181 instructions, 0.35%)</title><rect x="67.5670%" y="149" width="0.3515%" height="15" fill="rgb(238,224,15)" fg:x="34795" fg:w="181"/><text x="67.8600%" y="159.50"></text></g><g><title>leb128::write::signed (233 instructions, 0.45%)</title><rect x="67.5670%" y="165" width="0.4525%" height="15" fill="rgb(241,136,10)" fg:x="34795" fg:w="233"/><text x="67.8600%" y="175.50"></text></g><g><title>leb128::write::unsigned (44 instructions, 0.09%)</title><rect x="68.0195%" y="165" width="0.0854%" height="15" fill="rgb(208,32,45)" fg:x="35028" fg:w="44"/><text x="68.3125%" y="175.50"></text></g><g><title>candid::types::internal::Label::get_id (110 instructions, 0.21%)</title><rect x="68.1049%" y="165" width="0.2136%" height="15" fill="rgb(207,135,9)" fg:x="35072" fg:w="110"/><text x="68.3979%" y="175.50"></text></g><g><title>leb128::write::unsigned (212 instructions, 0.41%)</title><rect x="68.3185%" y="165" width="0.4117%" height="15" fill="rgb(206,86,44)" fg:x="35182" fg:w="212"/><text x="68.6115%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.11%)</title><rect x="68.7302%" y="165" width="0.1087%" height="15" fill="rgb(245,177,15)" fg:x="35394" fg:w="56"/><text x="69.0232%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="68.8390%" y="133" width="0.1573%" height="15" fill="rgb(206,64,50)" fg:x="35450" fg:w="81"/><text x="69.1319%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="68.8390%" y="149" width="0.2097%" height="15" fill="rgb(234,36,40)" fg:x="35450" fg:w="108"/><text x="69.1319%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="69.0487%" y="149" width="0.1573%" height="15" fill="rgb(213,64,8)" fg:x="35558" fg:w="81"/><text x="69.3417%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="69.2060%" y="149" width="0.1515%" height="15" fill="rgb(210,75,36)" fg:x="35639" fg:w="78"/><text x="69.4989%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (339 instructions, 0.66%)</title><rect x="68.8390%" y="165" width="0.6583%" height="15" fill="rgb(229,88,21)" fg:x="35450" fg:w="339"/><text x="69.1319%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.4973%" y="165" width="0.0214%" height="15" fill="rgb(252,204,47)" fg:x="35789" fg:w="11"/><text x="69.7902%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,476 instructions, 6.75%)</title><rect x="63.3202%" y="181" width="6.7499%" height="15" fill="rgb(208,77,27)" fg:x="32608" fg:w="3476"/><text x="63.6132%" y="191.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="70.0701%" y="181" width="0.0214%" height="15" fill="rgb(221,76,26)" fg:x="36084" fg:w="11"/><text x="70.3631%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="70.0915%" y="181" width="0.1515%" height="15" fill="rgb(225,139,18)" fg:x="36095" fg:w="78"/><text x="70.3844%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.2429%" y="181" width="0.2039%" height="15" fill="rgb(230,137,11)" fg:x="36173" fg:w="105"/><text x="70.5359%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="70.4468%" y="149" width="0.2291%" height="15" fill="rgb(212,28,1)" fg:x="36278" fg:w="118"/><text x="70.7398%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.30%)</title><rect x="70.4468%" y="165" width="0.2952%" height="15" fill="rgb(248,164,17)" fg:x="36278" fg:w="152"/><text x="70.7398%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.42%)</title><rect x="70.4468%" y="181" width="0.4214%" height="15" fill="rgb(222,171,42)" fg:x="36278" fg:w="217"/><text x="70.7398%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.8682%" y="181" width="0.2039%" height="15" fill="rgb(243,84,45)" fg:x="36495" fg:w="105"/><text x="71.1612%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="71.0721%" y="181" width="0.1573%" height="15" fill="rgb(252,49,23)" fg:x="36600" fg:w="81"/><text x="71.3651%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="71.2294%" y="181" width="0.1515%" height="15" fill="rgb(215,19,7)" fg:x="36681" fg:w="78"/><text x="71.5224%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.3809%" y="149" width="0.1515%" height="15" fill="rgb(238,81,41)" fg:x="36759" fg:w="78"/><text x="71.6738%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.3809%" y="165" width="0.2175%" height="15" fill="rgb(210,199,37)" fg:x="36759" fg:w="112"/><text x="71.6738%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="71.3809%" y="181" width="0.3437%" height="15" fill="rgb(244,192,49)" fg:x="36759" fg:w="177"/><text x="71.6738%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.7246%" y="133" width="0.1515%" height="15" fill="rgb(226,211,11)" fg:x="36936" fg:w="78"/><text x="72.0175%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.7246%" y="149" width="0.2175%" height="15" fill="rgb(236,162,54)" fg:x="36936" fg:w="112"/><text x="72.0175%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="71.7246%" y="165" width="0.3437%" height="15" fill="rgb(220,229,9)" fg:x="36936" fg:w="177"/><text x="72.0175%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="72.0683%" y="165" width="0.1476%" height="15" fill="rgb(250,87,22)" fg:x="37113" fg:w="76"/><text x="72.3612%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="72.2159%" y="165" width="0.2622%" height="15" fill="rgb(239,43,17)" fg:x="37189" fg:w="135"/><text x="72.5088%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="72.4780%" y="117" width="0.1379%" height="15" fill="rgb(231,177,25)" fg:x="37324" fg:w="71"/><text x="72.7710%" y="127.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="72.6159%" y="117" width="0.3787%" height="15" fill="rgb(219,179,1)" fg:x="37395" fg:w="195"/><text x="72.9088%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="72.9945%" y="117" width="0.1573%" height="15" fill="rgb(238,219,53)" fg:x="37590" fg:w="81"/><text x="73.2875%" y="127.50"></text></g><g><title>__rust_realloc (433 instructions, 0.84%)</title><rect x="72.4780%" y="133" width="0.8408%" height="15" fill="rgb(232,167,36)" fg:x="37324" fg:w="433"/><text x="72.7710%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.91%)</title><rect x="72.4780%" y="149" width="0.9088%" height="15" fill="rgb(244,19,51)" fg:x="37324" fg:w="468"/><text x="72.7710%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (541 instructions, 1.05%)</title><rect x="72.4780%" y="165" width="1.0505%" height="15" fill="rgb(224,6,22)" fg:x="37324" fg:w="541"/><text x="72.7710%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="73.5286%" y="165" width="0.2622%" height="15" fill="rgb(224,145,5)" fg:x="37865" fg:w="135"/><text x="73.8215%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="73.7907%" y="165" width="0.1515%" height="15" fill="rgb(234,130,49)" fg:x="38000" fg:w="78"/><text x="74.0837%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="73.9422%" y="117" width="0.1029%" height="15" fill="rgb(254,6,2)" fg:x="38078" fg:w="53"/><text x="74.2351%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="74.0451%" y="117" width="0.2990%" height="15" fill="rgb(208,96,46)" fg:x="38131" fg:w="154"/><text x="74.3381%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.3441%" y="101" width="0.1029%" height="15" fill="rgb(239,3,39)" fg:x="38285" fg:w="53"/><text x="74.6371%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="74.3441%" y="117" width="0.1515%" height="15" fill="rgb(233,210,1)" fg:x="38285" fg:w="78"/><text x="74.6371%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="73.9422%" y="133" width="0.6816%" height="15" fill="rgb(244,137,37)" fg:x="38078" fg:w="351"/><text x="74.2351%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (566 instructions, 1.10%)</title><rect x="73.9422%" y="149" width="1.0991%" height="15" fill="rgb(240,136,2)" fg:x="38078" fg:w="566"/><text x="74.2351%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="75.0413%" y="117" width="0.1515%" height="15" fill="rgb(239,18,37)" fg:x="38644" fg:w="78"/><text x="75.3342%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="75.0413%" y="133" width="0.2175%" height="15" fill="rgb(218,185,22)" fg:x="38644" fg:w="112"/><text x="75.3342%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="75.0413%" y="149" width="0.3437%" height="15" fill="rgb(225,218,4)" fg:x="38644" fg:w="177"/><text x="75.3342%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (916 instructions, 1.78%)</title><rect x="73.9422%" y="165" width="1.7787%" height="15" fill="rgb(230,182,32)" fg:x="38078" fg:w="916"/><text x="74.2351%" y="175.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="75.7209%" y="165" width="0.0583%" height="15" fill="rgb(242,56,43)" fg:x="38994" fg:w="30"/><text x="76.0139%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="75.7792%" y="165" width="0.1515%" height="15" fill="rgb(233,99,24)" fg:x="39024" fg:w="78"/><text x="76.0721%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,489 instructions, 4.83%)</title><rect x="71.7246%" y="181" width="4.8333%" height="15" fill="rgb(234,209,42)" fg:x="36936" fg:w="2489"/><text x="72.0175%" y="191.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="76.5579%" y="133" width="0.2291%" height="15" fill="rgb(227,7,12)" fg:x="39425" fg:w="118"/><text x="76.8508%" y="143.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="76.7870%" y="133" width="0.3787%" height="15" fill="rgb(245,203,43)" fg:x="39543" fg:w="195"/><text x="77.0800%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="77.1657%" y="133" width="0.1515%" height="15" fill="rgb(238,205,33)" fg:x="39738" fg:w="78"/><text x="77.4586%" y="143.50"></text></g><g><title>__rust_realloc (477 instructions, 0.93%)</title><rect x="76.5579%" y="149" width="0.9263%" height="15" fill="rgb(231,56,7)" fg:x="39425" fg:w="477"/><text x="76.8508%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (512 instructions, 0.99%)</title><rect x="76.5579%" y="165" width="0.9942%" height="15" fill="rgb(244,186,29)" fg:x="39425" fg:w="512"/><text x="76.8508%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (585 instructions, 1.14%)</title><rect x="76.5579%" y="181" width="1.1360%" height="15" fill="rgb(234,111,31)" fg:x="39425" fg:w="585"/><text x="76.8508%" y="191.50"></text></g><g><title>memcpy (180 instructions, 0.35%)</title><rect x="77.6938%" y="181" width="0.3495%" height="15" fill="rgb(241,149,10)" fg:x="40010" fg:w="180"/><text x="77.9868%" y="191.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="78.0434%" y="149" width="0.1961%" height="15" fill="rgb(249,206,44)" fg:x="40190" fg:w="101"/><text x="78.3363%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="78.0434%" y="165" width="0.2641%" height="15" fill="rgb(251,153,30)" fg:x="40190" fg:w="136"/><text x="78.3363%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.41%)</title><rect x="78.0434%" y="181" width="0.4058%" height="15" fill="rgb(239,152,38)" fg:x="40190" fg:w="209"/><text x="78.3363%" y="191.50"></text></g><g><title>memcpy (120 instructions, 0.23%)</title><rect x="78.4492%" y="181" width="0.2330%" height="15" fill="rgb(249,139,47)" fg:x="40399" fg:w="120"/><text x="78.7422%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.6823%" y="181" width="0.1087%" height="15" fill="rgb(244,64,35)" fg:x="40519" fg:w="56"/><text x="78.9752%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.7910%" y="181" width="0.1087%" height="15" fill="rgb(216,46,15)" fg:x="40575" fg:w="56"/><text x="79.0840%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.8997%" y="181" width="0.0214%" height="15" fill="rgb(250,74,19)" fg:x="40631" fg:w="11"/><text x="79.1927%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="78.9211%" y="181" width="0.2388%" height="15" fill="rgb(249,42,33)" fg:x="40642" fg:w="123"/><text x="79.2141%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.1697%" y="181" width="0.0214%" height="15" fill="rgb(242,149,17)" fg:x="40770" fg:w="11"/><text x="79.4626%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.1910%" y="181" width="0.2388%" height="15" fill="rgb(244,29,21)" fg:x="40781" fg:w="123"/><text x="79.4840%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.19%)</title><rect x="79.4299%" y="181" width="0.1903%" height="15" fill="rgb(220,130,37)" fg:x="40904" fg:w="98"/><text x="79.7228%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="79.6202%" y="181" width="0.1087%" height="15" fill="rgb(211,67,2)" fg:x="41002" fg:w="56"/><text x="79.9131%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="79.7289%" y="181" width="0.1515%" height="15" fill="rgb(235,68,52)" fg:x="41058" fg:w="78"/><text x="80.0219%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="79.8804%" y="181" width="0.1592%" height="15" fill="rgb(246,142,3)" fg:x="41136" fg:w="82"/><text x="80.1734%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.0396%" y="181" width="0.0369%" height="15" fill="rgb(241,25,7)" fg:x="41218" fg:w="19"/><text x="80.3326%" y="191.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (42,639 instructions, 82.80%)</title><rect x="0.9690%" y="197" width="82.7990%" height="15" fill="rgb(242,119,39)" fg:x="499" fg:w="42639"/><text x="1.2620%" y="207.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="83.7680%" y="197" width="0.0233%" height="15" fill="rgb(241,98,45)" fg:x="43138" fg:w="12"/><text x="84.0610%" y="207.50"></text></g><g><title>canister_update setup_subscribe (43,236 instructions, 83.96%)</title><rect x="0.0000%" y="213" width="83.9583%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="43236"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="83.9583%" y="197" width="0.1379%" height="15" fill="rgb(241,142,54)" fg:x="43236" fg:w="71"/><text x="84.2513%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="84.0962%" y="149" width="0.1340%" height="15" fill="rgb(222,85,15)" fg:x="43307" fg:w="69"/><text x="84.3891%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="84.2301%" y="149" width="0.7884%" height="15" fill="rgb(210,85,47)" fg:x="43376" fg:w="406"/><text x="84.5231%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="85.0185%" y="149" width="0.1592%" height="15" fill="rgb(224,206,25)" fg:x="43782" fg:w="82"/><text x="85.3115%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.1778%" y="149" width="0.1049%" height="15" fill="rgb(243,201,19)" fg:x="43864" fg:w="54"/><text x="85.4707%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.2826%" y="149" width="0.1049%" height="15" fill="rgb(236,59,4)" fg:x="43918" fg:w="54"/><text x="85.5756%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.3875%" y="149" width="0.1049%" height="15" fill="rgb(254,179,45)" fg:x="43972" fg:w="54"/><text x="85.6805%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.4924%" y="149" width="0.1049%" height="15" fill="rgb(226,14,10)" fg:x="44026" fg:w="54"/><text x="85.7853%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="85.5972%" y="149" width="0.1340%" height="15" fill="rgb(244,27,41)" fg:x="44080" fg:w="69"/><text x="85.8902%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="85.7312%" y="149" width="0.1262%" height="15" fill="rgb(235,35,32)" fg:x="44149" fg:w="65"/><text x="86.0242%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="85.8574%" y="149" width="0.7884%" height="15" fill="rgb(218,68,31)" fg:x="44214" fg:w="406"/><text x="86.1504%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="86.6458%" y="149" width="0.0311%" height="15" fill="rgb(207,120,37)" fg:x="44620" fg:w="16"/><text x="86.9388%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="86.6769%" y="133" width="0.2291%" height="15" fill="rgb(227,98,0)" fg:x="44636" fg:w="118"/><text x="86.9699%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="86.9060%" y="101" width="0.1165%" height="15" fill="rgb(207,7,3)" fg:x="44754" fg:w="60"/><text x="87.1990%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="86.9060%" y="117" width="0.1651%" height="15" fill="rgb(206,98,19)" fg:x="44754" fg:w="85"/><text x="87.1990%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="87.0711%" y="69" width="0.0175%" height="15" fill="rgb(217,5,26)" fg:x="44839" fg:w="9"/><text x="87.3641%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="87.0886%" y="53" width="0.0583%" height="15" fill="rgb(235,190,38)" fg:x="44848" fg:w="30"/><text x="87.3815%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="87.0886%" y="69" width="0.1068%" height="15" fill="rgb(247,86,24)" fg:x="44848" fg:w="55"/><text x="87.3815%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="87.0711%" y="85" width="0.2291%" height="15" fill="rgb(205,101,16)" fg:x="44839" fg:w="118"/><text x="87.3641%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="87.0711%" y="101" width="0.3321%" height="15" fill="rgb(246,168,33)" fg:x="44839" fg:w="171"/><text x="87.3641%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="87.0711%" y="117" width="0.3418%" height="15" fill="rgb(231,114,1)" fg:x="44839" fg:w="176"/><text x="87.3641%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="86.9060%" y="133" width="0.7224%" height="15" fill="rgb(207,184,53)" fg:x="44754" fg:w="372"/><text x="87.1990%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.23%)</title><rect x="86.6769%" y="149" width="1.2253%" height="15" fill="rgb(224,95,51)" fg:x="44636" fg:w="631"/><text x="86.9699%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="87.9022%" y="149" width="0.1592%" height="15" fill="rgb(212,188,45)" fg:x="45267" fg:w="82"/><text x="88.1952%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="88.0614%" y="149" width="0.1068%" height="15" fill="rgb(223,154,38)" fg:x="45349" fg:w="55"/><text x="88.3544%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="88.1682%" y="149" width="0.1223%" height="15" fill="rgb(251,22,52)" fg:x="45404" fg:w="63"/><text x="88.4612%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="88.2906%" y="149" width="0.1262%" height="15" fill="rgb(229,209,22)" fg:x="45467" fg:w="65"/><text x="88.5835%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="88.4168%" y="133" width="0.7884%" height="15" fill="rgb(234,138,34)" fg:x="45532" fg:w="406"/><text x="88.7098%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="89.2052%" y="133" width="0.0311%" height="15" fill="rgb(212,95,11)" fg:x="45938" fg:w="16"/><text x="89.4982%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="89.2363%" y="117" width="0.1476%" height="15" fill="rgb(240,179,47)" fg:x="45954" fg:w="76"/><text x="89.5292%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="89.3838%" y="85" width="0.1165%" height="15" fill="rgb(240,163,11)" fg:x="46030" fg:w="60"/><text x="89.6768%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="89.3838%" y="101" width="0.1651%" height="15" fill="rgb(236,37,12)" fg:x="46030" fg:w="85"/><text x="89.6768%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="89.5489%" y="53" width="0.0175%" height="15" fill="rgb(232,164,16)" fg:x="46115" fg:w="9"/><text x="89.8419%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="89.5664%" y="37" width="0.0583%" height="15" fill="rgb(244,205,15)" fg:x="46124" fg:w="30"/><text x="89.8594%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="89.5664%" y="53" width="0.1068%" height="15" fill="rgb(223,117,47)" fg:x="46124" fg:w="55"/><text x="89.8594%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="89.5489%" y="69" width="0.2291%" height="15" fill="rgb(244,107,35)" fg:x="46115" fg:w="118"/><text x="89.8419%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="89.5489%" y="85" width="0.3321%" height="15" fill="rgb(205,140,8)" fg:x="46115" fg:w="171"/><text x="89.8419%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="89.5489%" y="101" width="0.3418%" height="15" fill="rgb(228,84,46)" fg:x="46115" fg:w="176"/><text x="89.8419%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="89.3838%" y="117" width="0.7224%" height="15" fill="rgb(254,188,9)" fg:x="46030" fg:w="372"/><text x="89.6768%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.14%)</title><rect x="89.2363%" y="133" width="1.1438%" height="15" fill="rgb(206,112,54)" fg:x="45954" fg:w="589"/><text x="89.5292%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="90.3800%" y="133" width="0.1592%" height="15" fill="rgb(216,84,49)" fg:x="46543" fg:w="82"/><text x="90.6730%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="90.5393%" y="133" width="0.1068%" height="15" fill="rgb(214,194,35)" fg:x="46625" fg:w="55"/><text x="90.8322%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,307 instructions, 2.54%)</title><rect x="88.4168%" y="149" width="2.5380%" height="15" fill="rgb(249,28,3)" fg:x="45532" fg:w="1307"/><text x="88.7098%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="90.9548%" y="149" width="0.1223%" height="15" fill="rgb(222,56,52)" fg:x="46839" fg:w="63"/><text x="91.2478%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.0772%" y="149" width="0.0252%" height="15" fill="rgb(245,217,50)" fg:x="46902" fg:w="13"/><text x="91.3701%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.1024%" y="149" width="0.0252%" height="15" fill="rgb(213,201,24)" fg:x="46915" fg:w="13"/><text x="91.3954%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="91.1276%" y="149" width="0.0136%" height="15" fill="rgb(248,116,28)" fg:x="46928" fg:w="7"/><text x="91.4206%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="91.1412%" y="149" width="0.0291%" height="15" fill="rgb(219,72,43)" fg:x="46935" fg:w="15"/><text x="91.4342%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="91.1704%" y="149" width="0.1476%" height="15" fill="rgb(209,138,14)" fg:x="46950" fg:w="76"/><text x="91.4633%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="91.3179%" y="149" width="0.1592%" height="15" fill="rgb(222,18,33)" fg:x="47026" fg:w="82"/><text x="91.6109%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="91.4811%" y="149" width="0.7748%" height="15" fill="rgb(213,199,7)" fg:x="47110" fg:w="399"/><text x="91.7740%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="92.2559%" y="149" width="0.7748%" height="15" fill="rgb(250,110,10)" fg:x="47509" fg:w="399"/><text x="92.5488%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,383 instructions, 10.45%)</title><rect x="84.0962%" y="165" width="10.4530%" height="15" fill="rgb(248,123,6)" fg:x="43307" fg:w="5383"/><text x="84.3891%" y="175.50">candid::de::I..</text></g><g><title>memcpy (354 instructions, 0.69%)</title><rect x="94.5492%" y="165" width="0.6874%" height="15" fill="rgb(206,91,31)" fg:x="48690" fg:w="354"/><text x="94.8422%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="95.2366%" y="133" width="0.0233%" height="15" fill="rgb(211,154,13)" fg:x="49044" fg:w="12"/><text x="95.5296%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="95.2599%" y="117" width="0.1068%" height="15" fill="rgb(225,148,7)" fg:x="49056" fg:w="55"/><text x="95.5529%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="95.4192%" y="117" width="0.1087%" height="15" fill="rgb(220,160,43)" fg:x="49138" fg:w="56"/><text x="95.7121%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (165 instructions, 0.32%)</title><rect x="95.2599%" y="133" width="0.3204%" height="15" fill="rgb(213,52,39)" fg:x="49056" fg:w="165"/><text x="95.5529%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (214 instructions, 0.42%)</title><rect x="95.2366%" y="149" width="0.4156%" height="15" fill="rgb(243,137,7)" fg:x="49044" fg:w="214"/><text x="95.5296%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (252 instructions, 0.49%)</title><rect x="95.2366%" y="165" width="0.4893%" height="15" fill="rgb(230,79,13)" fg:x="49044" fg:w="252"/><text x="95.5296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="95.7260%" y="165" width="0.1573%" height="15" fill="rgb(247,105,23)" fg:x="49296" fg:w="81"/><text x="96.0189%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8930%" y="133" width="0.0214%" height="15" fill="rgb(223,179,41)" fg:x="49382" fg:w="11"/><text x="96.1859%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.9143%" y="133" width="0.0214%" height="15" fill="rgb(218,9,34)" fg:x="49393" fg:w="11"/><text x="96.2073%" y="143.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="95.9357%" y="133" width="0.2641%" height="15" fill="rgb(222,106,8)" fg:x="49404" fg:w="136"/><text x="96.2287%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (349 instructions, 0.68%)</title><rect x="95.8833%" y="149" width="0.6777%" height="15" fill="rgb(211,220,0)" fg:x="49377" fg:w="349"/><text x="96.1762%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.06%)</title><rect x="96.5610%" y="133" width="0.0621%" height="15" fill="rgb(229,52,16)" fg:x="49726" fg:w="32"/><text x="96.8539%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="96.6231%" y="85" width="0.1515%" height="15" fill="rgb(212,155,18)" fg:x="49758" fg:w="78"/><text x="96.9161%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="96.6231%" y="101" width="0.2175%" height="15" fill="rgb(242,21,14)" fg:x="49758" fg:w="112"/><text x="96.9161%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="96.6231%" y="117" width="0.3437%" height="15" fill="rgb(222,19,48)" fg:x="49758" fg:w="177"/><text x="96.9161%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9668%" y="117" width="0.0214%" height="15" fill="rgb(232,45,27)" fg:x="49935" fg:w="11"/><text x="97.2598%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9882%" y="117" width="0.0214%" height="15" fill="rgb(249,103,42)" fg:x="49946" fg:w="11"/><text x="97.2811%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 0.70%)</title><rect x="96.6231%" y="133" width="0.7010%" height="15" fill="rgb(246,81,33)" fg:x="49758" fg:w="361"/><text x="96.9161%" y="143.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.06%)</title><rect x="97.3241%" y="133" width="0.0583%" height="15" fill="rgb(252,33,42)" fg:x="50119" fg:w="30"/><text x="97.6171%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (496 instructions, 0.96%)</title><rect x="96.5610%" y="149" width="0.9632%" height="15" fill="rgb(209,212,41)" fg:x="49726" fg:w="496"/><text x="96.8539%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.5338%" y="149" width="0.1573%" height="15" fill="rgb(207,154,6)" fg:x="50227" fg:w="81"/><text x="97.8268%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (1,005 instructions, 1.95%)</title><rect x="95.8833%" y="165" width="1.9516%" height="15" fill="rgb(223,64,47)" fg:x="49377" fg:w="1005"/><text x="96.1762%" y="175.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (7,329 instructions, 14.23%)</title><rect x="84.0962%" y="181" width="14.2319%" height="15" fill="rgb(211,161,38)" fg:x="43307" fg:w="7329"/><text x="84.3891%" y="191.50">subscriber::setup_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="98.3281%" y="181" width="0.0233%" height="15" fill="rgb(219,138,40)" fg:x="50636" fg:w="12"/><text x="98.6210%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="98.3514%" y="181" width="0.0117%" height="15" fill="rgb(241,228,46)" fg:x="50648" fg:w="6"/><text x="98.6443%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="98.3630%" y="181" width="0.1573%" height="15" fill="rgb(223,209,38)" fg:x="50654" fg:w="81"/><text x="98.6560%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.24%)</title><rect x="98.5203%" y="181" width="0.2447%" height="15" fill="rgb(236,164,45)" fg:x="50735" fg:w="126"/><text x="98.8133%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,663 instructions, 14.88%)</title><rect x="84.0962%" y="197" width="14.8805%" height="15" fill="rgb(231,15,5)" fg:x="43307" fg:w="7663"/><text x="84.3891%" y="207.50">ic_cdk::futures::wa..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="98.9766%" y="181" width="0.1515%" height="15" fill="rgb(252,35,15)" fg:x="50970" fg:w="78"/><text x="99.2696%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.32%)</title><rect x="99.1281%" y="181" width="0.3204%" height="15" fill="rgb(248,181,18)" fg:x="51048" fg:w="165"/><text x="99.4211%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (291 instructions, 0.57%)</title><rect x="98.9766%" y="197" width="0.5651%" height="15" fill="rgb(233,39,42)" fg:x="50970" fg:w="291"/><text x="99.2696%" y="207.50"></text></g><g><title>all (51,497 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="51497"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (8,261 instructions, 16.04%)</title><rect x="83.9583%" y="213" width="16.0417%" height="15" fill="rgb(233,195,10)" fg:x="43236" fg:w="8261"/><text x="84.2513%" y="223.50">ic_cdk::api::call::ca..</text></g></svg></svg>