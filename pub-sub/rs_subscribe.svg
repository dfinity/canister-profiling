<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="51591"><g><title>ic_cdk::setup (48 instructions, 0.09%)</title><rect x="0.0000%" y="197" width="0.0930%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 0.72%)</title><rect x="0.0930%" y="197" width="0.7172%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="370"/><text x="0.3860%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.8102%" y="197" width="0.1589%" height="15" fill="rgb(221,193,54)" fg:x="418" fg:w="82"/><text x="1.1032%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.9692%" y="181" width="0.1589%" height="15" fill="rgb(248,212,6)" fg:x="500" fg:w="82"/><text x="1.2621%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.10%)</title><rect x="1.1281%" y="149" width="0.0969%" height="15" fill="rgb(208,68,35)" fg:x="582" fg:w="50"/><text x="1.4211%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.26%)</title><rect x="1.1281%" y="165" width="0.2578%" height="15" fill="rgb(232,128,0)" fg:x="582" fg:w="133"/><text x="1.4211%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="1.3859%" y="165" width="0.7753%" height="15" fill="rgb(207,160,47)" fg:x="715" fg:w="400"/><text x="1.6789%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="2.1612%" y="165" width="0.1648%" height="15" fill="rgb(228,23,34)" fg:x="1115" fg:w="85"/><text x="2.4542%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.3260%" y="165" width="0.1047%" height="15" fill="rgb(218,30,26)" fg:x="1200" fg:w="54"/><text x="2.6190%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.4307%" y="165" width="0.1047%" height="15" fill="rgb(220,122,19)" fg:x="1254" fg:w="54"/><text x="2.7236%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.5353%" y="165" width="0.1047%" height="15" fill="rgb(250,228,42)" fg:x="1308" fg:w="54"/><text x="2.8283%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.6400%" y="165" width="0.1047%" height="15" fill="rgb(240,193,28)" fg:x="1362" fg:w="54"/><text x="2.9330%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="2.7447%" y="165" width="0.1376%" height="15" fill="rgb(216,20,37)" fg:x="1416" fg:w="71"/><text x="3.0376%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="2.8823%" y="165" width="0.1260%" height="15" fill="rgb(206,188,39)" fg:x="1487" fg:w="65"/><text x="3.1753%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="3.0083%" y="165" width="0.7753%" height="15" fill="rgb(217,207,13)" fg:x="1552" fg:w="400"/><text x="3.3012%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.7836%" y="165" width="0.0310%" height="15" fill="rgb(231,73,38)" fg:x="1952" fg:w="16"/><text x="4.0766%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="3.8146%" y="149" width="0.1589%" height="15" fill="rgb(225,20,46)" fg:x="1968" fg:w="82"/><text x="4.1076%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="3.9736%" y="117" width="0.1163%" height="15" fill="rgb(210,31,41)" fg:x="2050" fg:w="60"/><text x="4.2665%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="3.9736%" y="133" width="0.1648%" height="15" fill="rgb(221,200,47)" fg:x="2050" fg:w="85"/><text x="4.2665%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1383%" y="85" width="0.0174%" height="15" fill="rgb(226,26,5)" fg:x="2135" fg:w="9"/><text x="4.4313%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.1558%" y="69" width="0.0581%" height="15" fill="rgb(249,33,26)" fg:x="2144" fg:w="30"/><text x="4.4487%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.1558%" y="85" width="0.1066%" height="15" fill="rgb(235,183,28)" fg:x="2144" fg:w="55"/><text x="4.4487%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="4.1383%" y="101" width="0.2287%" height="15" fill="rgb(221,5,38)" fg:x="2135" fg:w="118"/><text x="4.4313%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="4.1383%" y="117" width="0.3315%" height="15" fill="rgb(247,18,42)" fg:x="2135" fg:w="171"/><text x="4.4313%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="4.1383%" y="133" width="0.3411%" height="15" fill="rgb(241,131,45)" fg:x="2135" fg:w="176"/><text x="4.4313%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="3.9736%" y="149" width="0.7211%" height="15" fill="rgb(249,31,29)" fg:x="2050" fg:w="372"/><text x="4.2665%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.16%)</title><rect x="3.8146%" y="165" width="1.1630%" height="15" fill="rgb(225,111,53)" fg:x="1968" fg:w="600"/><text x="4.1076%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="4.9776%" y="165" width="0.1648%" height="15" fill="rgb(238,160,17)" fg:x="2568" fg:w="85"/><text x="5.2706%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="5.1424%" y="165" width="0.1105%" height="15" fill="rgb(214,148,48)" fg:x="2653" fg:w="57"/><text x="5.4353%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="5.2529%" y="165" width="0.1279%" height="15" fill="rgb(232,36,49)" fg:x="2710" fg:w="66"/><text x="5.5458%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="5.3808%" y="165" width="0.1260%" height="15" fill="rgb(209,103,24)" fg:x="2776" fg:w="65"/><text x="5.6738%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="5.5068%" y="149" width="0.7753%" height="15" fill="rgb(229,88,8)" fg:x="2841" fg:w="400"/><text x="5.7997%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.2821%" y="149" width="0.0310%" height="15" fill="rgb(213,181,19)" fg:x="3241" fg:w="16"/><text x="6.5751%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="6.3131%" y="133" width="0.1589%" height="15" fill="rgb(254,191,54)" fg:x="3257" fg:w="82"/><text x="6.6061%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="6.4721%" y="101" width="0.1163%" height="15" fill="rgb(241,83,37)" fg:x="3339" fg:w="60"/><text x="6.7650%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="6.4721%" y="117" width="0.1648%" height="15" fill="rgb(233,36,39)" fg:x="3339" fg:w="85"/><text x="6.7650%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.6368%" y="69" width="0.0174%" height="15" fill="rgb(226,3,54)" fg:x="3424" fg:w="9"/><text x="6.9298%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="6.6543%" y="53" width="0.0581%" height="15" fill="rgb(245,192,40)" fg:x="3433" fg:w="30"/><text x="6.9472%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="6.6543%" y="69" width="0.1066%" height="15" fill="rgb(238,167,29)" fg:x="3433" fg:w="55"/><text x="6.9472%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="6.6368%" y="85" width="0.2287%" height="15" fill="rgb(232,182,51)" fg:x="3424" fg:w="118"/><text x="6.9298%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="6.6368%" y="101" width="0.3315%" height="15" fill="rgb(231,60,39)" fg:x="3424" fg:w="171"/><text x="6.9298%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="6.6368%" y="117" width="0.3411%" height="15" fill="rgb(208,69,12)" fg:x="3424" fg:w="176"/><text x="6.9298%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="6.4721%" y="133" width="0.7211%" height="15" fill="rgb(235,93,37)" fg:x="3339" fg:w="372"/><text x="6.7650%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.16%)</title><rect x="6.3131%" y="149" width="1.1630%" height="15" fill="rgb(213,116,39)" fg:x="3257" fg:w="600"/><text x="6.6061%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="7.4761%" y="149" width="0.1648%" height="15" fill="rgb(222,207,29)" fg:x="3857" fg:w="85"/><text x="7.7691%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="7.6409%" y="149" width="0.1105%" height="15" fill="rgb(206,96,30)" fg:x="3942" fg:w="57"/><text x="7.9338%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="7.7514%" y="133" width="0.1376%" height="15" fill="rgb(218,138,4)" fg:x="3999" fg:w="71"/><text x="8.0443%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="7.8890%" y="133" width="0.1764%" height="15" fill="rgb(250,191,14)" fg:x="4070" fg:w="91"/><text x="8.1819%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="8.0654%" y="133" width="0.1279%" height="15" fill="rgb(239,60,40)" fg:x="4161" fg:w="66"/><text x="8.3583%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (291 instructions, 0.56%)</title><rect x="7.7514%" y="149" width="0.5641%" height="15" fill="rgb(206,27,48)" fg:x="3999" fg:w="291"/><text x="8.0443%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="8.3154%" y="149" width="0.1589%" height="15" fill="rgb(225,35,8)" fg:x="4290" fg:w="82"/><text x="8.6084%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="8.4743%" y="133" width="0.1376%" height="15" fill="rgb(250,213,24)" fg:x="4372" fg:w="71"/><text x="8.7673%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="8.6120%" y="133" width="0.1764%" height="15" fill="rgb(247,123,22)" fg:x="4443" fg:w="91"/><text x="8.9049%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="8.7884%" y="133" width="0.1279%" height="15" fill="rgb(231,138,38)" fg:x="4534" fg:w="66"/><text x="9.0813%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.56%)</title><rect x="8.4743%" y="149" width="0.5563%" height="15" fill="rgb(231,145,46)" fg:x="4372" fg:w="287"/><text x="8.7673%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,064 instructions, 4.00%)</title><rect x="5.5068%" y="165" width="4.0007%" height="15" fill="rgb(251,118,11)" fg:x="2841" fg:w="2064"/><text x="5.7997%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="9.5075%" y="165" width="0.1279%" height="15" fill="rgb(217,147,25)" fg:x="4905" fg:w="66"/><text x="9.8004%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6354%" y="165" width="0.0252%" height="15" fill="rgb(247,81,37)" fg:x="4971" fg:w="13"/><text x="9.9284%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6606%" y="165" width="0.0252%" height="15" fill="rgb(209,12,38)" fg:x="4984" fg:w="13"/><text x="9.9536%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="9.6858%" y="165" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="4997" fg:w="7"/><text x="9.9788%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="9.6994%" y="165" width="0.0291%" height="15" fill="rgb(248,47,43)" fg:x="5004" fg:w="15"/><text x="9.9923%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.7284%" y="149" width="0.1589%" height="15" fill="rgb(221,10,30)" fg:x="5019" fg:w="82"/><text x="10.0214%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (164 instructions, 0.32%)</title><rect x="9.7284%" y="165" width="0.3179%" height="15" fill="rgb(210,229,1)" fg:x="5019" fg:w="164"/><text x="10.0214%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.0463%" y="133" width="0.1589%" height="15" fill="rgb(222,148,37)" fg:x="5183" fg:w="82"/><text x="10.3393%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.23%)</title><rect x="10.0463%" y="149" width="0.2268%" height="15" fill="rgb(234,67,33)" fg:x="5183" fg:w="117"/><text x="10.3393%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.36%)</title><rect x="10.0463%" y="165" width="0.3586%" height="15" fill="rgb(247,98,35)" fg:x="5183" fg:w="185"/><text x="10.3393%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.4049%" y="149" width="0.1589%" height="15" fill="rgb(247,138,52)" fg:x="5368" fg:w="82"/><text x="10.6979%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="10.4049%" y="165" width="0.3198%" height="15" fill="rgb(213,79,30)" fg:x="5368" fg:w="165"/><text x="10.6979%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.7247%" y="165" width="0.1589%" height="15" fill="rgb(246,177,23)" fg:x="5533" fg:w="82"/><text x="11.0177%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="10.8837%" y="165" width="0.1570%" height="15" fill="rgb(230,62,27)" fg:x="5615" fg:w="81"/><text x="11.1767%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.0407%" y="165" width="0.1589%" height="15" fill="rgb(216,154,8)" fg:x="5696" fg:w="82"/><text x="11.3337%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.1996%" y="165" width="0.1589%" height="15" fill="rgb(244,35,45)" fg:x="5778" fg:w="82"/><text x="11.4926%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.3624%" y="165" width="0.1570%" height="15" fill="rgb(251,115,12)" fg:x="5862" fg:w="81"/><text x="11.6554%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.74%)</title><rect x="11.5195%" y="165" width="0.7385%" height="15" fill="rgb(240,54,50)" fg:x="5943" fg:w="381"/><text x="11.8124%" y="175.50"></text></g><g><title>memcpy (381 instructions, 0.74%)</title><rect x="12.2580%" y="165" width="0.7385%" height="15" fill="rgb(233,84,52)" fg:x="6324" fg:w="381"/><text x="12.5509%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,116 instructions, 13.79%)</title><rect x="1.1281%" y="181" width="13.7931%" height="15" fill="rgb(207,117,47)" fg:x="582" fg:w="7116"/><text x="1.4211%" y="191.50">candid::de::IDLDe..</text></g><g><title>memcpy (336 instructions, 0.65%)</title><rect x="14.9212%" y="181" width="0.6513%" height="15" fill="rgb(249,43,39)" fg:x="7698" fg:w="336"/><text x="15.2142%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.10%)</title><rect x="15.5725%" y="165" width="0.0969%" height="15" fill="rgb(209,38,44)" fg:x="8034" fg:w="50"/><text x="15.8655%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.16%)</title><rect x="15.5725%" y="181" width="0.1628%" height="15" fill="rgb(236,212,23)" fg:x="8034" fg:w="84"/><text x="15.8655%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="15.7353%" y="181" width="0.1589%" height="15" fill="rgb(242,79,21)" fg:x="8118" fg:w="82"/><text x="16.0283%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="15.9039%" y="149" width="0.1027%" height="15" fill="rgb(211,96,35)" fg:x="8205" fg:w="53"/><text x="16.1969%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.74%)</title><rect x="16.0067%" y="149" width="0.7424%" height="15" fill="rgb(253,215,40)" fg:x="8258" fg:w="383"/><text x="16.2996%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.31%)</title><rect x="16.7490%" y="149" width="0.3121%" height="15" fill="rgb(211,81,21)" fg:x="8641" fg:w="161"/><text x="17.0420%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.62%)</title><rect x="15.9039%" y="165" width="1.6166%" height="15" fill="rgb(208,190,38)" fg:x="8205" fg:w="834"/><text x="16.1969%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="17.5205%" y="165" width="0.1589%" height="15" fill="rgb(235,213,38)" fg:x="9039" fg:w="82"/><text x="17.8135%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="17.6794%" y="165" width="0.2636%" height="15" fill="rgb(237,122,38)" fg:x="9121" fg:w="136"/><text x="17.9724%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,469 instructions, 2.85%)</title><rect x="15.8942%" y="181" width="2.8474%" height="15" fill="rgb(244,218,35)" fg:x="8200" fg:w="1469"/><text x="16.1872%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="18.7416%" y="181" width="0.1589%" height="15" fill="rgb(240,68,47)" fg:x="9669" fg:w="82"/><text x="19.0346%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="18.9103%" y="149" width="0.1027%" height="15" fill="rgb(210,16,53)" fg:x="9756" fg:w="53"/><text x="19.2032%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.74%)</title><rect x="19.0130%" y="149" width="0.7424%" height="15" fill="rgb(235,124,12)" fg:x="9809" fg:w="383"/><text x="19.3060%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.31%)</title><rect x="19.7554%" y="149" width="0.3121%" height="15" fill="rgb(224,169,11)" fg:x="10192" fg:w="161"/><text x="20.0484%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.62%)</title><rect x="18.9103%" y="165" width="1.6166%" height="15" fill="rgb(250,166,2)" fg:x="9756" fg:w="834"/><text x="19.2032%" y="175.50"></text></g><g><title>memcmp (740 instructions, 1.43%)</title><rect x="20.5268%" y="165" width="1.4344%" height="15" fill="rgb(242,216,29)" fg:x="10590" fg:w="740"/><text x="20.8198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="21.9612%" y="149" width="0.1570%" height="15" fill="rgb(230,116,27)" fg:x="11330" fg:w="81"/><text x="22.2542%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="21.9612%" y="165" width="0.2093%" height="15" fill="rgb(228,99,48)" fg:x="11330" fg:w="108"/><text x="22.2542%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,855 instructions, 3.60%)</title><rect x="18.9006%" y="181" width="3.5956%" height="15" fill="rgb(253,11,6)" fg:x="9751" fg:w="1855"/><text x="19.1936%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="22.4962%" y="133" width="0.1027%" height="15" fill="rgb(247,143,39)" fg:x="11606" fg:w="53"/><text x="22.7891%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="22.4962%" y="149" width="0.1531%" height="15" fill="rgb(236,97,10)" fg:x="11606" fg:w="79"/><text x="22.7891%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="22.4962%" y="165" width="0.5660%" height="15" fill="rgb(233,208,19)" fg:x="11606" fg:w="292"/><text x="22.7891%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.0622%" y="165" width="0.1589%" height="15" fill="rgb(216,164,2)" fg:x="11898" fg:w="82"/><text x="23.3551%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="23.2211%" y="165" width="0.2636%" height="15" fill="rgb(220,129,5)" fg:x="11980" fg:w="136"/><text x="23.5141%" y="175.50"></text></g><g><title>candid::types::internal::env_id (967 instructions, 1.87%)</title><rect x="22.4962%" y="181" width="1.8744%" height="15" fill="rgb(242,17,10)" fg:x="11606" fg:w="967"/><text x="22.7891%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.06%)</title><rect x="24.3705%" y="181" width="0.0640%" height="15" fill="rgb(242,107,0)" fg:x="12573" fg:w="33"/><text x="24.6635%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.4345%" y="165" width="0.2384%" height="15" fill="rgb(251,28,31)" fg:x="12606" fg:w="123"/><text x="24.7275%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.7252%" y="165" width="0.2384%" height="15" fill="rgb(233,223,10)" fg:x="12756" fg:w="123"/><text x="25.0182%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.58%)</title><rect x="24.4345%" y="181" width="0.5815%" height="15" fill="rgb(215,21,27)" fg:x="12606" fg:w="300"/><text x="24.7275%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="25.0160%" y="165" width="0.0543%" height="15" fill="rgb(232,23,21)" fg:x="12906" fg:w="28"/><text x="25.3090%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="25.0703%" y="165" width="0.0543%" height="15" fill="rgb(244,5,23)" fg:x="12934" fg:w="28"/><text x="25.3632%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.1245%" y="165" width="0.0291%" height="15" fill="rgb(226,81,46)" fg:x="12962" fg:w="15"/><text x="25.4175%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.1536%" y="165" width="0.0291%" height="15" fill="rgb(247,70,30)" fg:x="12977" fg:w="15"/><text x="25.4466%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="25.1827%" y="165" width="0.1531%" height="15" fill="rgb(212,68,19)" fg:x="12992" fg:w="79"/><text x="25.4757%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="25.3358%" y="149" width="0.1376%" height="15" fill="rgb(240,187,13)" fg:x="13071" fg:w="71"/><text x="25.6288%" y="159.50"></text></g><g><title>binread::binary_template::write_named (82 instructions, 0.16%)</title><rect x="25.4734%" y="133" width="0.1589%" height="15" fill="rgb(223,113,26)" fg:x="13142" fg:w="82"/><text x="25.7664%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (152 instructions, 0.29%)</title><rect x="25.4734%" y="149" width="0.2946%" height="15" fill="rgb(206,192,2)" fg:x="13142" fg:w="152"/><text x="25.7664%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="25.7681%" y="149" width="0.1260%" height="15" fill="rgb(241,108,4)" fg:x="13294" fg:w="65"/><text x="26.0610%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="25.8941%" y="149" width="0.7753%" height="15" fill="rgb(247,173,49)" fg:x="13359" fg:w="400"/><text x="26.1870%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="26.6694%" y="133" width="0.2287%" height="15" fill="rgb(224,114,35)" fg:x="13759" fg:w="118"/><text x="26.9623%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="26.8981%" y="101" width="0.1163%" height="15" fill="rgb(245,159,27)" fg:x="13877" fg:w="60"/><text x="27.1911%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="26.8981%" y="117" width="0.1648%" height="15" fill="rgb(245,172,44)" fg:x="13877" fg:w="85"/><text x="27.1911%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="27.0629%" y="69" width="0.0174%" height="15" fill="rgb(236,23,11)" fg:x="13962" fg:w="9"/><text x="27.3558%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="27.0803%" y="53" width="0.0581%" height="15" fill="rgb(205,117,38)" fg:x="13971" fg:w="30"/><text x="27.3733%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="27.0803%" y="69" width="0.1066%" height="15" fill="rgb(237,72,25)" fg:x="13971" fg:w="55"/><text x="27.3733%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="27.0629%" y="85" width="0.2287%" height="15" fill="rgb(244,70,9)" fg:x="13962" fg:w="118"/><text x="27.3558%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="27.0629%" y="101" width="0.3315%" height="15" fill="rgb(217,125,39)" fg:x="13962" fg:w="171"/><text x="27.3558%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="27.0629%" y="117" width="0.3411%" height="15" fill="rgb(235,36,10)" fg:x="13962" fg:w="176"/><text x="27.3558%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="26.8981%" y="133" width="0.7211%" height="15" fill="rgb(251,123,47)" fg:x="13877" fg:w="372"/><text x="27.1911%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (636 instructions, 1.23%)</title><rect x="26.6694%" y="149" width="1.2328%" height="15" fill="rgb(221,13,13)" fg:x="13759" fg:w="636"/><text x="26.9623%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="27.9022%" y="149" width="0.1648%" height="15" fill="rgb(238,131,9)" fg:x="14395" fg:w="85"/><text x="28.1951%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="28.0669%" y="149" width="0.1066%" height="15" fill="rgb(211,50,8)" fg:x="14480" fg:w="55"/><text x="28.3599%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.1735%" y="133" width="0.1047%" height="15" fill="rgb(245,182,24)" fg:x="14535" fg:w="54"/><text x="28.4665%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 instructions, 0.22%)</title><rect x="28.1735%" y="149" width="0.2152%" height="15" fill="rgb(242,14,37)" fg:x="14535" fg:w="111"/><text x="28.4665%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="28.3887%" y="149" width="0.1473%" height="15" fill="rgb(246,228,12)" fg:x="14646" fg:w="76"/><text x="28.6816%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.5360%" y="133" width="0.1047%" height="15" fill="rgb(213,55,15)" fg:x="14722" fg:w="54"/><text x="28.8290%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.7511%" y="133" width="0.1047%" height="15" fill="rgb(209,9,3)" fg:x="14833" fg:w="54"/><text x="29.0441%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.9663%" y="133" width="0.1047%" height="15" fill="rgb(230,59,30)" fg:x="14944" fg:w="54"/><text x="29.2593%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.1814%" y="133" width="0.1047%" height="15" fill="rgb(209,121,21)" fg:x="15055" fg:w="54"/><text x="29.4744%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.3966%" y="133" width="0.1047%" height="15" fill="rgb(220,109,13)" fg:x="15166" fg:w="54"/><text x="29.6896%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.6118%" y="133" width="0.1047%" height="15" fill="rgb(232,18,1)" fg:x="15277" fg:w="54"/><text x="29.9047%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.8269%" y="133" width="0.1047%" height="15" fill="rgb(215,41,42)" fg:x="15388" fg:w="54"/><text x="30.1199%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="30.0421%" y="133" width="0.1047%" height="15" fill="rgb(224,123,36)" fg:x="15499" fg:w="54"/><text x="30.3350%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 1.72%)</title><rect x="28.5360%" y="149" width="1.7212%" height="15" fill="rgb(240,125,3)" fg:x="14722" fg:w="888"/><text x="28.8290%" y="159.50"></text></g><g><title>__rust_realloc (104 instructions, 0.20%)</title><rect x="30.2572%" y="117" width="0.2016%" height="15" fill="rgb(205,98,50)" fg:x="15610" fg:w="104"/><text x="30.5502%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.27%)</title><rect x="30.2572%" y="133" width="0.2694%" height="15" fill="rgb(205,185,37)" fg:x="15610" fg:w="139"/><text x="30.5502%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.41%)</title><rect x="30.2572%" y="149" width="0.4109%" height="15" fill="rgb(238,207,15)" fg:x="15610" fg:w="212"/><text x="30.5502%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="30.6681%" y="133" width="0.1047%" height="15" fill="rgb(213,199,42)" fg:x="15822" fg:w="54"/><text x="30.9611%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 instructions, 0.22%)</title><rect x="30.6681%" y="149" width="0.2152%" height="15" fill="rgb(235,201,11)" fg:x="15822" fg:w="111"/><text x="30.9611%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.06%)</title><rect x="30.8833%" y="149" width="0.0581%" height="15" fill="rgb(207,46,11)" fg:x="15933" fg:w="30"/><text x="31.1763%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="30.9414%" y="149" width="0.1279%" height="15" fill="rgb(241,35,35)" fg:x="15963" fg:w="66"/><text x="31.2344%" y="159.50"></text></g><g><title>binread::BinRead::read (3,566 instructions, 6.91%)</title><rect x="25.3358%" y="165" width="6.9121%" height="15" fill="rgb(243,32,47)" fg:x="13071" fg:w="3566"/><text x="25.6288%" y="175.50">binread..</text></g><g><title>__rust_realloc (47 instructions, 0.09%)</title><rect x="32.2479%" y="133" width="0.0911%" height="15" fill="rgb(247,202,23)" fg:x="16637" fg:w="47"/><text x="32.5408%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 instructions, 0.16%)</title><rect x="32.2479%" y="149" width="0.1589%" height="15" fill="rgb(219,102,11)" fg:x="16637" fg:w="82"/><text x="32.5408%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (155 instructions, 0.30%)</title><rect x="32.2479%" y="165" width="0.3004%" height="15" fill="rgb(243,110,44)" fg:x="16637" fg:w="155"/><text x="32.5408%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.5483%" y="165" width="0.3198%" height="15" fill="rgb(222,74,54)" fg:x="16792" fg:w="165"/><text x="32.8413%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.8681%" y="165" width="0.3198%" height="15" fill="rgb(216,99,12)" fg:x="16957" fg:w="165"/><text x="33.1611%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="33.1880%" y="165" width="0.1570%" height="15" fill="rgb(226,22,26)" fg:x="17122" fg:w="81"/><text x="33.4809%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="33.3450%" y="165" width="0.1066%" height="15" fill="rgb(217,163,10)" fg:x="17203" fg:w="55"/><text x="33.6379%" y="175.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,624 instructions, 8.96%)</title><rect x="25.0160%" y="181" width="8.9628%" height="15" fill="rgb(213,25,53)" fg:x="12906" fg:w="4624"/><text x="25.3090%" y="191.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.9788%" y="181" width="0.0213%" height="15" fill="rgb(252,105,26)" fg:x="17530" fg:w="11"/><text x="34.2718%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="34.0001%" y="181" width="0.0213%" height="15" fill="rgb(220,39,43)" fg:x="17541" fg:w="11"/><text x="34.2931%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="34.0214%" y="181" width="0.0213%" height="15" fill="rgb(229,68,48)" fg:x="17552" fg:w="11"/><text x="34.3144%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="34.0525%" y="133" width="0.1027%" height="15" fill="rgb(252,8,32)" fg:x="17568" fg:w="53"/><text x="34.3454%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="34.1552%" y="133" width="0.5912%" height="15" fill="rgb(223,20,43)" fg:x="17621" fg:w="305"/><text x="34.4482%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="34.7464%" y="133" width="0.1415%" height="15" fill="rgb(229,81,49)" fg:x="17926" fg:w="73"/><text x="35.0393%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="34.0525%" y="149" width="1.2948%" height="15" fill="rgb(236,28,36)" fg:x="17568" fg:w="668"/><text x="34.3454%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.52%)</title><rect x="34.0428%" y="165" width="1.5235%" height="15" fill="rgb(249,185,26)" fg:x="17563" fg:w="786"/><text x="34.3357%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.31%)</title><rect x="35.5663%" y="165" width="0.3082%" height="15" fill="rgb(249,174,33)" fg:x="18349" fg:w="159"/><text x="35.8592%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="35.8842%" y="133" width="0.1027%" height="15" fill="rgb(233,201,37)" fg:x="18513" fg:w="53"/><text x="36.1771%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="35.9869%" y="133" width="0.5912%" height="15" fill="rgb(221,78,26)" fg:x="18566" fg:w="305"/><text x="36.2799%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="36.5781%" y="133" width="0.1415%" height="15" fill="rgb(250,127,30)" fg:x="18871" fg:w="73"/><text x="36.8711%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="35.8842%" y="149" width="1.2948%" height="15" fill="rgb(230,49,44)" fg:x="18513" fg:w="668"/><text x="36.1771%" y="159.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 1.71%)</title><rect x="35.8745%" y="165" width="1.7115%" height="15" fill="rgb(229,67,23)" fg:x="18508" fg:w="883"/><text x="36.1674%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="37.5860%" y="165" width="0.1473%" height="15" fill="rgb(249,83,47)" fg:x="19391" fg:w="76"/><text x="37.8790%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="37.7430%" y="133" width="0.1027%" height="15" fill="rgb(215,43,3)" fg:x="19472" fg:w="53"/><text x="38.0360%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="37.8457%" y="133" width="0.5912%" height="15" fill="rgb(238,154,13)" fg:x="19525" fg:w="305"/><text x="38.1387%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="38.4369%" y="133" width="0.1415%" height="15" fill="rgb(219,56,2)" fg:x="19830" fg:w="73"/><text x="38.7299%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="37.7430%" y="149" width="1.2948%" height="15" fill="rgb(233,0,4)" fg:x="19472" fg:w="668"/><text x="38.0360%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="39.0378%" y="149" width="0.8645%" height="15" fill="rgb(235,30,7)" fg:x="20140" fg:w="446"/><text x="39.3308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="39.9023%" y="133" width="0.1570%" height="15" fill="rgb(250,79,13)" fg:x="20586" fg:w="81"/><text x="40.1953%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="39.9023%" y="149" width="0.2093%" height="15" fill="rgb(211,146,34)" fg:x="20586" fg:w="108"/><text x="40.1953%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,395 instructions, 2.70%)</title><rect x="37.7333%" y="165" width="2.7040%" height="15" fill="rgb(228,22,38)" fg:x="19467" fg:w="1395"/><text x="38.0263%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.4373%" y="117" width="0.1027%" height="15" fill="rgb(235,168,5)" fg:x="20862" fg:w="53"/><text x="40.7303%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="40.4373%" y="133" width="0.1531%" height="15" fill="rgb(221,155,16)" fg:x="20862" fg:w="79"/><text x="40.7303%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="40.4373%" y="149" width="0.5660%" height="15" fill="rgb(215,215,53)" fg:x="20862" fg:w="292"/><text x="40.7303%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (9 instructions, 0.02%)</title><rect x="41.0033%" y="149" width="0.0174%" height="15" fill="rgb(223,4,10)" fg:x="21154" fg:w="9"/><text x="41.2962%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="41.0207%" y="117" width="0.1027%" height="15" fill="rgb(234,103,6)" fg:x="21163" fg:w="53"/><text x="41.3137%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="41.0207%" y="133" width="0.1531%" height="15" fill="rgb(227,97,0)" fg:x="21163" fg:w="79"/><text x="41.3137%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="41.0207%" y="149" width="0.5660%" height="15" fill="rgb(234,150,53)" fg:x="21163" fg:w="292"/><text x="41.3137%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (9 instructions, 0.02%)</title><rect x="41.5867%" y="149" width="0.0174%" height="15" fill="rgb(228,201,54)" fg:x="21455" fg:w="9"/><text x="41.8797%" y="159.50"></text></g><g><title>candid::types::internal::env_id (949 instructions, 1.84%)</title><rect x="40.4373%" y="165" width="1.8395%" height="15" fill="rgb(222,22,37)" fg:x="20862" fg:w="949"/><text x="40.7303%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,355 instructions, 8.44%)</title><rect x="34.0428%" y="181" width="8.4414%" height="15" fill="rgb(237,53,32)" fg:x="17563" fg:w="4355"/><text x="34.3357%" y="191.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.06%)</title><rect x="42.4842%" y="181" width="0.0640%" height="15" fill="rgb(233,25,53)" fg:x="21918" fg:w="33"/><text x="42.7771%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.33%)</title><rect x="42.5694%" y="165" width="0.3256%" height="15" fill="rgb(210,40,34)" fg:x="21962" fg:w="168"/><text x="42.8624%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.40%)</title><rect x="42.5481%" y="181" width="0.3993%" height="15" fill="rgb(241,220,44)" fg:x="21951" fg:w="206"/><text x="42.8411%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="42.9474%" y="165" width="0.0543%" height="15" fill="rgb(235,28,35)" fg:x="22157" fg:w="28"/><text x="43.2404%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="43.0017%" y="165" width="0.0291%" height="15" fill="rgb(210,56,17)" fg:x="22185" fg:w="15"/><text x="43.2947%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="43.0308%" y="165" width="0.0291%" height="15" fill="rgb(224,130,29)" fg:x="22200" fg:w="15"/><text x="43.3237%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="43.0598%" y="149" width="0.1376%" height="15" fill="rgb(235,212,8)" fg:x="22215" fg:w="71"/><text x="43.3528%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="43.1975%" y="149" width="0.1260%" height="15" fill="rgb(223,33,50)" fg:x="22286" fg:w="65"/><text x="43.4904%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="43.3234%" y="149" width="0.1279%" height="15" fill="rgb(219,149,13)" fg:x="22351" fg:w="66"/><text x="43.6164%" y="159.50"></text></g><g><title>binread::BinRead::read (246 instructions, 0.48%)</title><rect x="43.0598%" y="165" width="0.4768%" height="15" fill="rgb(250,156,29)" fg:x="22215" fg:w="246"/><text x="43.3528%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.10%)</title><rect x="43.5367%" y="165" width="0.0989%" height="15" fill="rgb(216,193,19)" fg:x="22461" fg:w="51"/><text x="43.8296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="43.6355%" y="165" width="0.1473%" height="15" fill="rgb(216,135,14)" fg:x="22512" fg:w="76"/><text x="43.9285%" y="175.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="43.7828%" y="165" width="0.2035%" height="15" fill="rgb(241,47,5)" fg:x="22588" fg:w="105"/><text x="44.0758%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.28%)</title><rect x="43.9864%" y="165" width="0.2791%" height="15" fill="rgb(233,42,35)" fg:x="22693" fg:w="144"/><text x="44.2793%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (812 instructions, 1.57%)</title><rect x="42.9474%" y="181" width="1.5739%" height="15" fill="rgb(231,13,6)" fg:x="22157" fg:w="812"/><text x="43.2404%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.5213%" y="181" width="0.0213%" height="15" fill="rgb(207,181,40)" fg:x="22969" fg:w="11"/><text x="44.8143%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.5427%" y="181" width="0.0213%" height="15" fill="rgb(254,173,49)" fg:x="22980" fg:w="11"/><text x="44.8356%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.5640%" y="181" width="0.0213%" height="15" fill="rgb(221,1,38)" fg:x="22991" fg:w="11"/><text x="44.8569%" y="191.50"></text></g><g><title>memcpy (411 instructions, 0.80%)</title><rect x="44.5853%" y="181" width="0.7967%" height="15" fill="rgb(206,124,46)" fg:x="23002" fg:w="411"/><text x="44.8783%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="45.3819%" y="149" width="0.0233%" height="15" fill="rgb(249,21,11)" fg:x="23413" fg:w="12"/><text x="45.6749%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="45.4052%" y="149" width="0.2384%" height="15" fill="rgb(222,201,40)" fg:x="23425" fg:w="123"/><text x="45.6982%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.6436%" y="117" width="0.1221%" height="15" fill="rgb(235,61,29)" fg:x="23548" fg:w="63"/><text x="45.9366%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (209 instructions, 0.41%)</title><rect x="45.6436%" y="133" width="0.4051%" height="15" fill="rgb(219,207,3)" fg:x="23548" fg:w="209"/><text x="45.9366%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.46%)</title><rect x="45.6436%" y="149" width="0.4574%" height="15" fill="rgb(222,56,46)" fg:x="23548" fg:w="236"/><text x="45.9366%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.1011%" y="149" width="0.0213%" height="15" fill="rgb(239,76,54)" fg:x="23784" fg:w="11"/><text x="46.3940%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (424 instructions, 0.82%)</title><rect x="45.3819%" y="165" width="0.8218%" height="15" fill="rgb(231,124,27)" fg:x="23413" fg:w="424"/><text x="45.6749%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (458 instructions, 0.89%)</title><rect x="45.3819%" y="181" width="0.8878%" height="15" fill="rgb(249,195,6)" fg:x="23413" fg:w="458"/><text x="45.6749%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="46.2697%" y="165" width="0.1066%" height="15" fill="rgb(237,174,47)" fg:x="23871" fg:w="55"/><text x="46.5627%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="46.3763%" y="165" width="0.1221%" height="15" fill="rgb(206,201,31)" fg:x="23926" fg:w="63"/><text x="46.6693%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (200 instructions, 0.39%)</title><rect x="46.2697%" y="181" width="0.3877%" height="15" fill="rgb(231,57,52)" fg:x="23871" fg:w="200"/><text x="46.5627%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.6671%" y="165" width="0.0213%" height="15" fill="rgb(248,177,22)" fg:x="24076" fg:w="11"/><text x="46.9600%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.6884%" y="165" width="0.0213%" height="15" fill="rgb(215,211,37)" fg:x="24087" fg:w="11"/><text x="46.9813%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="46.7097%" y="165" width="0.2636%" height="15" fill="rgb(241,128,51)" fg:x="24098" fg:w="136"/><text x="47.0027%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 0.67%)</title><rect x="46.6574%" y="181" width="0.6745%" height="15" fill="rgb(227,165,31)" fg:x="24071" fg:w="348"/><text x="46.9503%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="47.3319%" y="181" width="0.0756%" height="15" fill="rgb(228,167,24)" fg:x="24419" fg:w="39"/><text x="47.6249%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="47.4075%" y="165" width="0.1066%" height="15" fill="rgb(228,143,12)" fg:x="24458" fg:w="55"/><text x="47.7005%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (202 instructions, 0.39%)</title><rect x="47.4075%" y="181" width="0.3915%" height="15" fill="rgb(249,149,8)" fg:x="24458" fg:w="202"/><text x="47.7005%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="47.8087%" y="149" width="0.1027%" height="15" fill="rgb(243,35,44)" fg:x="24665" fg:w="53"/><text x="48.1017%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.60%)</title><rect x="47.9115%" y="149" width="0.6028%" height="15" fill="rgb(246,89,9)" fg:x="24718" fg:w="311"/><text x="48.2044%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="48.5143%" y="149" width="0.1415%" height="15" fill="rgb(233,213,13)" fg:x="25029" fg:w="73"/><text x="48.8072%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="47.8087%" y="165" width="1.3064%" height="15" fill="rgb(233,141,41)" fg:x="24665" fg:w="674"/><text x="48.1017%" y="175.50"></text></g><g><title>candid::types::internal::env_add (889 instructions, 1.72%)</title><rect x="47.7990%" y="181" width="1.7232%" height="15" fill="rgb(239,167,4)" fg:x="24660" fg:w="889"/><text x="48.0920%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.5222%" y="181" width="0.1473%" height="15" fill="rgb(209,217,16)" fg:x="25549" fg:w="76"/><text x="49.8152%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.6695%" y="181" width="0.1473%" height="15" fill="rgb(219,88,35)" fg:x="25625" fg:w="76"/><text x="49.9625%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="49.8168%" y="181" width="0.1531%" height="15" fill="rgb(220,193,23)" fg:x="25701" fg:w="79"/><text x="50.1098%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="49.9796%" y="133" width="0.1027%" height="15" fill="rgb(230,90,52)" fg:x="25785" fg:w="53"/><text x="50.2726%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="50.0824%" y="133" width="0.5912%" height="15" fill="rgb(252,106,19)" fg:x="25838" fg:w="305"/><text x="50.3753%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="50.6736%" y="133" width="0.1415%" height="15" fill="rgb(206,74,20)" fg:x="26143" fg:w="73"/><text x="50.9665%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="49.9796%" y="149" width="1.2948%" height="15" fill="rgb(230,138,44)" fg:x="25785" fg:w="668"/><text x="50.2726%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.52%)</title><rect x="49.9700%" y="165" width="1.5235%" height="15" fill="rgb(235,182,43)" fg:x="25780" fg:w="786"/><text x="50.2629%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="51.4935%" y="165" width="0.1473%" height="15" fill="rgb(242,16,51)" fg:x="26566" fg:w="76"/><text x="51.7864%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="51.6505%" y="133" width="0.1027%" height="15" fill="rgb(248,9,4)" fg:x="26647" fg:w="53"/><text x="51.9435%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="51.7532%" y="133" width="0.5912%" height="15" fill="rgb(210,31,22)" fg:x="26700" fg:w="305"/><text x="52.0462%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="52.3444%" y="133" width="0.1415%" height="15" fill="rgb(239,54,39)" fg:x="27005" fg:w="73"/><text x="52.6374%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="51.6505%" y="149" width="1.2948%" height="15" fill="rgb(230,99,41)" fg:x="26647" fg:w="668"/><text x="51.9435%" y="159.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 1.71%)</title><rect x="51.6408%" y="165" width="1.7115%" height="15" fill="rgb(253,106,12)" fg:x="26642" fg:w="883"/><text x="51.9338%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="53.3523%" y="165" width="0.1473%" height="15" fill="rgb(213,46,41)" fg:x="27525" fg:w="76"/><text x="53.6453%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="53.5093%" y="133" width="0.1027%" height="15" fill="rgb(215,133,35)" fg:x="27606" fg:w="53"/><text x="53.8023%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="53.6121%" y="133" width="0.5912%" height="15" fill="rgb(213,28,5)" fg:x="27659" fg:w="305"/><text x="53.9050%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="54.2033%" y="133" width="0.1415%" height="15" fill="rgb(215,77,49)" fg:x="27964" fg:w="73"/><text x="54.4962%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="53.5093%" y="149" width="1.2948%" height="15" fill="rgb(248,100,22)" fg:x="27606" fg:w="668"/><text x="53.8023%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="54.8041%" y="149" width="0.8645%" height="15" fill="rgb(208,67,9)" fg:x="28274" fg:w="446"/><text x="55.0971%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="55.6686%" y="133" width="0.1570%" height="15" fill="rgb(219,133,21)" fg:x="28720" fg:w="81"/><text x="55.9616%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="55.6686%" y="149" width="0.2093%" height="15" fill="rgb(246,46,29)" fg:x="28720" fg:w="108"/><text x="55.9616%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,395 instructions, 2.70%)</title><rect x="53.4996%" y="165" width="2.7040%" height="15" fill="rgb(246,185,52)" fg:x="27601" fg:w="1395"/><text x="53.7926%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="56.2036%" y="117" width="0.1027%" height="15" fill="rgb(252,136,11)" fg:x="28996" fg:w="53"/><text x="56.4966%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="56.2036%" y="133" width="0.1531%" height="15" fill="rgb(219,138,53)" fg:x="28996" fg:w="79"/><text x="56.4966%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="56.2036%" y="149" width="0.5660%" height="15" fill="rgb(211,51,23)" fg:x="28996" fg:w="292"/><text x="56.4966%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (9 instructions, 0.02%)</title><rect x="56.7696%" y="149" width="0.0174%" height="15" fill="rgb(247,221,28)" fg:x="29288" fg:w="9"/><text x="57.0626%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.194 (15 instructions, 0.03%)</title><rect x="56.7870%" y="149" width="0.0291%" height="15" fill="rgb(251,222,45)" fg:x="29297" fg:w="15"/><text x="57.0800%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.8161%" y="149" width="0.0213%" height="15" fill="rgb(217,162,53)" fg:x="29312" fg:w="11"/><text x="57.1091%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.01%)</title><rect x="56.2036%" y="165" width="1.0118%" height="15" fill="rgb(229,93,14)" fg:x="28996" fg:w="522"/><text x="56.4966%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,845 instructions, 7.45%)</title><rect x="49.9700%" y="181" width="7.4529%" height="15" fill="rgb(209,67,49)" fg:x="25780" fg:w="3845"/><text x="50.2629%" y="191.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="57.4228%" y="181" width="0.1531%" height="15" fill="rgb(213,87,29)" fg:x="29625" fg:w="79"/><text x="57.7158%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="57.5856%" y="149" width="0.1027%" height="15" fill="rgb(205,151,52)" fg:x="29709" fg:w="53"/><text x="57.8786%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.60%)</title><rect x="57.6884%" y="149" width="0.6028%" height="15" fill="rgb(253,215,39)" fg:x="29762" fg:w="311"/><text x="57.9813%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="58.2912%" y="149" width="0.1415%" height="15" fill="rgb(221,220,41)" fg:x="30073" fg:w="73"/><text x="58.5841%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="57.5856%" y="165" width="1.3064%" height="15" fill="rgb(218,133,21)" fg:x="29709" fg:w="674"/><text x="57.8786%" y="175.50"></text></g><g><title>memcmp (467 instructions, 0.91%)</title><rect x="58.8921%" y="165" width="0.9052%" height="15" fill="rgb(221,193,43)" fg:x="30383" fg:w="467"/><text x="59.1850%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="59.7973%" y="149" width="0.1570%" height="15" fill="rgb(240,128,52)" fg:x="30850" fg:w="81"/><text x="60.0902%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="59.7973%" y="165" width="0.2093%" height="15" fill="rgb(253,114,12)" fg:x="30850" fg:w="108"/><text x="60.0902%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,422 instructions, 2.76%)</title><rect x="57.5759%" y="181" width="2.7563%" height="15" fill="rgb(215,223,47)" fg:x="29704" fg:w="1422"/><text x="57.8689%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.3322%" y="133" width="0.1027%" height="15" fill="rgb(248,225,23)" fg:x="31126" fg:w="53"/><text x="60.6252%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.30%)</title><rect x="60.4350%" y="133" width="0.2966%" height="15" fill="rgb(250,108,0)" fg:x="31179" fg:w="153"/><text x="60.7279%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.7315%" y="117" width="0.1027%" height="15" fill="rgb(228,208,7)" fg:x="31332" fg:w="53"/><text x="61.0245%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="60.7315%" y="133" width="0.1531%" height="15" fill="rgb(244,45,10)" fg:x="31332" fg:w="79"/><text x="61.0245%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="60.3322%" y="149" width="0.6804%" height="15" fill="rgb(207,125,25)" fg:x="31126" fg:w="351"/><text x="60.6252%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.4254%" y="133" width="0.1027%" height="15" fill="rgb(210,195,18)" fg:x="31690" fg:w="53"/><text x="61.7184%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.30%)</title><rect x="61.5282%" y="133" width="0.2966%" height="15" fill="rgb(249,80,12)" fg:x="31743" fg:w="153"/><text x="61.8211%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.8247%" y="117" width="0.1027%" height="15" fill="rgb(221,65,9)" fg:x="31896" fg:w="53"/><text x="62.1177%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="61.8247%" y="133" width="0.1531%" height="15" fill="rgb(235,49,36)" fg:x="31896" fg:w="79"/><text x="62.1177%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="61.4254%" y="149" width="0.6804%" height="15" fill="rgb(225,32,20)" fg:x="31690" fg:w="351"/><text x="61.7184%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,128 instructions, 2.19%)</title><rect x="60.3322%" y="165" width="2.1864%" height="15" fill="rgb(215,141,46)" fg:x="31126" fg:w="1128"/><text x="60.6252%" y="175.50">c..</text></g><g><title>candid::types::internal::env_id (1,405 instructions, 2.72%)</title><rect x="60.3322%" y="181" width="2.7233%" height="15" fill="rgb(250,160,47)" fg:x="31126" fg:w="1405"/><text x="60.6252%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.0556%" y="149" width="0.1473%" height="15" fill="rgb(216,222,40)" fg:x="32531" fg:w="76"/><text x="63.3485%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.22%)</title><rect x="63.0556%" y="165" width="0.2152%" height="15" fill="rgb(234,217,39)" fg:x="32531" fg:w="111"/><text x="63.3485%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.35%)</title><rect x="63.0556%" y="181" width="0.3470%" height="15" fill="rgb(207,178,40)" fg:x="32531" fg:w="179"/><text x="63.3485%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="63.4025%" y="165" width="0.0465%" height="15" fill="rgb(221,136,13)" fg:x="32710" fg:w="24"/><text x="63.6955%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.4491%" y="149" width="0.1473%" height="15" fill="rgb(249,199,10)" fg:x="32734" fg:w="76"/><text x="63.7420%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="63.5964%" y="133" width="0.1531%" height="15" fill="rgb(249,222,13)" fg:x="32810" fg:w="79"/><text x="63.8893%" y="143.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.30%)</title><rect x="63.5964%" y="149" width="0.2966%" height="15" fill="rgb(244,185,38)" fg:x="32810" fg:w="153"/><text x="63.8893%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="63.8929%" y="149" width="0.1589%" height="15" fill="rgb(236,202,9)" fg:x="32963" fg:w="82"/><text x="64.1859%" y="159.50"></text></g><g><title>candid::types::internal::unroll (472 instructions, 0.91%)</title><rect x="63.4491%" y="165" width="0.9149%" height="15" fill="rgb(250,229,37)" fg:x="32734" fg:w="472"/><text x="63.7420%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.3639%" y="117" width="0.1027%" height="15" fill="rgb(206,174,23)" fg:x="33206" fg:w="53"/><text x="64.6569%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.30%)</title><rect x="64.4667%" y="117" width="0.2966%" height="15" fill="rgb(211,33,43)" fg:x="33259" fg:w="153"/><text x="64.7596%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.7632%" y="101" width="0.1027%" height="15" fill="rgb(245,58,50)" fg:x="33412" fg:w="53"/><text x="65.0562%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="64.7632%" y="117" width="0.1531%" height="15" fill="rgb(244,68,36)" fg:x="33412" fg:w="79"/><text x="65.0562%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="64.3639%" y="133" width="0.6804%" height="15" fill="rgb(232,229,15)" fg:x="33206" fg:w="351"/><text x="64.6569%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (564 instructions, 1.09%)</title><rect x="64.3639%" y="149" width="1.0932%" height="15" fill="rgb(254,30,23)" fg:x="33206" fg:w="564"/><text x="64.6569%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="65.4572%" y="149" width="0.1415%" height="15" fill="rgb(235,160,14)" fg:x="33770" fg:w="73"/><text x="65.7501%" y="159.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="65.5987%" y="149" width="0.2636%" height="15" fill="rgb(212,155,44)" fg:x="33843" fg:w="136"/><text x="65.8916%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,136 instructions, 2.20%)</title><rect x="64.3639%" y="165" width="2.2019%" height="15" fill="rgb(226,2,50)" fg:x="33206" fg:w="1136"/><text x="64.6569%" y="175.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="66.5659%" y="133" width="0.1589%" height="15" fill="rgb(234,177,6)" fg:x="34342" fg:w="82"/><text x="66.8588%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.23%)</title><rect x="66.5659%" y="149" width="0.2268%" height="15" fill="rgb(217,24,9)" fg:x="34342" fg:w="117"/><text x="66.8588%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (185 instructions, 0.36%)</title><rect x="66.5659%" y="165" width="0.3586%" height="15" fill="rgb(220,13,46)" fg:x="34342" fg:w="185"/><text x="66.8588%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="66.9245%" y="117" width="0.1027%" height="15" fill="rgb(239,221,27)" fg:x="34527" fg:w="53"/><text x="67.2174%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="66.9245%" y="133" width="0.1531%" height="15" fill="rgb(222,198,25)" fg:x="34527" fg:w="79"/><text x="67.2174%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="66.9245%" y="149" width="0.5660%" height="15" fill="rgb(211,99,13)" fg:x="34527" fg:w="292"/><text x="67.2174%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.03%)</title><rect x="67.4905%" y="149" width="0.0349%" height="15" fill="rgb(232,111,31)" fg:x="34819" fg:w="18"/><text x="67.7834%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="67.5253%" y="149" width="0.0213%" height="15" fill="rgb(245,82,37)" fg:x="34837" fg:w="11"/><text x="67.8183%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 0.85%)</title><rect x="66.9245%" y="165" width="0.8470%" height="15" fill="rgb(227,149,46)" fg:x="34527" fg:w="437"/><text x="67.2174%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="67.7715%" y="117" width="0.1589%" height="15" fill="rgb(218,36,50)" fg:x="34964" fg:w="82"/><text x="68.0645%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.23%)</title><rect x="67.7715%" y="133" width="0.2268%" height="15" fill="rgb(226,80,48)" fg:x="34964" fg:w="117"/><text x="68.0645%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (182 instructions, 0.35%)</title><rect x="67.7715%" y="149" width="0.3528%" height="15" fill="rgb(238,224,15)" fg:x="34964" fg:w="182"/><text x="68.0645%" y="159.50"></text></g><g><title>leb128::write::signed (232 instructions, 0.45%)</title><rect x="67.7715%" y="165" width="0.4497%" height="15" fill="rgb(241,136,10)" fg:x="34964" fg:w="232"/><text x="68.0645%" y="175.50"></text></g><g><title>leb128::write::unsigned (43 instructions, 0.08%)</title><rect x="68.2212%" y="165" width="0.0833%" height="15" fill="rgb(208,32,45)" fg:x="35196" fg:w="43"/><text x="68.5142%" y="175.50"></text></g><g><title>candid::types::internal::Label::get_id (110 instructions, 0.21%)</title><rect x="68.3045%" y="165" width="0.2132%" height="15" fill="rgb(207,135,9)" fg:x="35239" fg:w="110"/><text x="68.5975%" y="175.50"></text></g><g><title>leb128::write::unsigned (207 instructions, 0.40%)</title><rect x="68.5178%" y="165" width="0.4012%" height="15" fill="rgb(206,86,44)" fg:x="35349" fg:w="207"/><text x="68.8107%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.10%)</title><rect x="68.9190%" y="165" width="0.0969%" height="15" fill="rgb(245,177,15)" fg:x="35556" fg:w="50"/><text x="69.2120%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="69.0159%" y="133" width="0.1570%" height="15" fill="rgb(206,64,50)" fg:x="35606" fg:w="81"/><text x="69.3089%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="69.0159%" y="149" width="0.2093%" height="15" fill="rgb(234,36,40)" fg:x="35606" fg:w="108"/><text x="69.3089%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="69.2253%" y="149" width="0.1570%" height="15" fill="rgb(213,64,8)" fg:x="35714" fg:w="81"/><text x="69.5182%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="69.3823%" y="149" width="0.1512%" height="15" fill="rgb(210,75,36)" fg:x="35795" fg:w="78"/><text x="69.6752%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (339 instructions, 0.66%)</title><rect x="69.0159%" y="165" width="0.6571%" height="15" fill="rgb(229,88,21)" fg:x="35606" fg:w="339"/><text x="69.3089%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.6730%" y="165" width="0.0213%" height="15" fill="rgb(252,204,47)" fg:x="35945" fg:w="11"/><text x="69.9660%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,530 instructions, 6.84%)</title><rect x="63.4025%" y="181" width="6.8423%" height="15" fill="rgb(208,77,27)" fg:x="32710" fg:w="3530"/><text x="63.6955%" y="191.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="70.2448%" y="181" width="0.0213%" height="15" fill="rgb(221,76,26)" fg:x="36240" fg:w="11"/><text x="70.5378%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="70.2661%" y="181" width="0.1531%" height="15" fill="rgb(225,139,18)" fg:x="36251" fg:w="79"/><text x="70.5591%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.4193%" y="181" width="0.2035%" height="15" fill="rgb(230,137,11)" fg:x="36330" fg:w="105"/><text x="70.7122%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="70.6228%" y="149" width="0.2287%" height="15" fill="rgb(212,28,1)" fg:x="36435" fg:w="118"/><text x="70.9158%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 instructions, 0.30%)</title><rect x="70.6228%" y="165" width="0.2966%" height="15" fill="rgb(248,164,17)" fg:x="36435" fg:w="153"/><text x="70.9158%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (218 instructions, 0.42%)</title><rect x="70.6228%" y="181" width="0.4226%" height="15" fill="rgb(222,171,42)" fg:x="36435" fg:w="218"/><text x="70.9158%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="71.0453%" y="181" width="0.2035%" height="15" fill="rgb(243,84,45)" fg:x="36653" fg:w="105"/><text x="71.3383%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="71.2489%" y="181" width="0.1570%" height="15" fill="rgb(252,49,23)" fg:x="36758" fg:w="81"/><text x="71.5418%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="71.4059%" y="181" width="0.1512%" height="15" fill="rgb(215,19,7)" fg:x="36839" fg:w="78"/><text x="71.6988%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="71.5571%" y="149" width="0.1531%" height="15" fill="rgb(238,81,41)" fg:x="36917" fg:w="79"/><text x="71.8500%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="71.5571%" y="165" width="0.2210%" height="15" fill="rgb(210,199,37)" fg:x="36917" fg:w="114"/><text x="71.8500%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="71.5571%" y="181" width="0.3470%" height="15" fill="rgb(244,192,49)" fg:x="36917" fg:w="179"/><text x="71.8500%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="71.9040%" y="133" width="0.1531%" height="15" fill="rgb(226,211,11)" fg:x="37096" fg:w="79"/><text x="72.1970%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="71.9040%" y="149" width="0.2210%" height="15" fill="rgb(236,162,54)" fg:x="37096" fg:w="114"/><text x="72.1970%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="71.9040%" y="165" width="0.3470%" height="15" fill="rgb(220,229,9)" fg:x="37096" fg:w="179"/><text x="72.1970%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="72.2510%" y="165" width="0.1473%" height="15" fill="rgb(250,87,22)" fg:x="37275" fg:w="76"/><text x="72.5439%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="72.3983%" y="165" width="0.2617%" height="15" fill="rgb(239,43,17)" fg:x="37351" fg:w="135"/><text x="72.6913%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="72.6600%" y="117" width="0.1415%" height="15" fill="rgb(231,177,25)" fg:x="37486" fg:w="73"/><text x="72.9529%" y="127.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="72.8015%" y="117" width="0.3780%" height="15" fill="rgb(219,179,1)" fg:x="37559" fg:w="195"/><text x="73.0944%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="73.1794%" y="117" width="0.1570%" height="15" fill="rgb(238,219,53)" fg:x="37754" fg:w="81"/><text x="73.4724%" y="127.50"></text></g><g><title>__rust_realloc (433 instructions, 0.84%)</title><rect x="72.6600%" y="133" width="0.8393%" height="15" fill="rgb(232,167,36)" fg:x="37486" fg:w="433"/><text x="72.9529%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.91%)</title><rect x="72.6600%" y="149" width="0.9071%" height="15" fill="rgb(244,19,51)" fg:x="37486" fg:w="468"/><text x="72.9529%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (541 instructions, 1.05%)</title><rect x="72.6600%" y="165" width="1.0486%" height="15" fill="rgb(224,6,22)" fg:x="37486" fg:w="541"/><text x="72.9529%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="73.7086%" y="165" width="0.2617%" height="15" fill="rgb(224,145,5)" fg:x="38027" fg:w="135"/><text x="74.0016%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="73.9703%" y="165" width="0.1512%" height="15" fill="rgb(234,130,49)" fg:x="38162" fg:w="78"/><text x="74.2632%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.1215%" y="117" width="0.1027%" height="15" fill="rgb(254,6,2)" fg:x="38240" fg:w="53"/><text x="74.4144%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.30%)</title><rect x="74.2242%" y="117" width="0.2966%" height="15" fill="rgb(208,96,46)" fg:x="38293" fg:w="153"/><text x="74.5172%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.5207%" y="101" width="0.1027%" height="15" fill="rgb(239,3,39)" fg:x="38446" fg:w="53"/><text x="74.8137%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="74.5207%" y="117" width="0.1531%" height="15" fill="rgb(233,210,1)" fg:x="38446" fg:w="79"/><text x="74.8137%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="74.1215%" y="133" width="0.6804%" height="15" fill="rgb(244,137,37)" fg:x="38240" fg:w="351"/><text x="74.4144%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (564 instructions, 1.09%)</title><rect x="74.1215%" y="149" width="1.0932%" height="15" fill="rgb(240,136,2)" fg:x="38240" fg:w="564"/><text x="74.4144%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="75.2147%" y="117" width="0.1531%" height="15" fill="rgb(239,18,37)" fg:x="38804" fg:w="79"/><text x="75.5076%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="75.2147%" y="133" width="0.2210%" height="15" fill="rgb(218,185,22)" fg:x="38804" fg:w="114"/><text x="75.5076%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="75.2147%" y="149" width="0.3470%" height="15" fill="rgb(225,218,4)" fg:x="38804" fg:w="179"/><text x="75.5076%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (910 instructions, 1.76%)</title><rect x="74.1215%" y="165" width="1.7639%" height="15" fill="rgb(230,182,32)" fg:x="38240" fg:w="910"/><text x="74.4144%" y="175.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="75.8853%" y="165" width="0.0581%" height="15" fill="rgb(242,56,43)" fg:x="39150" fg:w="30"/><text x="76.1783%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="75.9435%" y="165" width="0.1512%" height="15" fill="rgb(233,99,24)" fg:x="39180" fg:w="78"/><text x="76.2364%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,499 instructions, 4.84%)</title><rect x="71.9040%" y="181" width="4.8439%" height="15" fill="rgb(234,209,42)" fg:x="37096" fg:w="2499"/><text x="72.1970%" y="191.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="76.7479%" y="133" width="0.2287%" height="15" fill="rgb(227,7,12)" fg:x="39595" fg:w="118"/><text x="77.0409%" y="143.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="76.9766%" y="133" width="0.3780%" height="15" fill="rgb(245,203,43)" fg:x="39713" fg:w="195"/><text x="77.2696%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="77.3546%" y="133" width="0.1512%" height="15" fill="rgb(238,205,33)" fg:x="39908" fg:w="78"/><text x="77.6475%" y="143.50"></text></g><g><title>__rust_realloc (475 instructions, 0.92%)</title><rect x="76.7479%" y="149" width="0.9207%" height="15" fill="rgb(231,56,7)" fg:x="39595" fg:w="475"/><text x="77.0409%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (510 instructions, 0.99%)</title><rect x="76.7479%" y="165" width="0.9885%" height="15" fill="rgb(244,186,29)" fg:x="39595" fg:w="510"/><text x="77.0409%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (583 instructions, 1.13%)</title><rect x="76.7479%" y="181" width="1.1300%" height="15" fill="rgb(234,111,31)" fg:x="39595" fg:w="583"/><text x="77.0409%" y="191.50"></text></g><g><title>memcpy (180 instructions, 0.35%)</title><rect x="77.8779%" y="181" width="0.3489%" height="15" fill="rgb(241,149,10)" fg:x="40178" fg:w="180"/><text x="78.1709%" y="191.50"></text></g><g><title>__rust_realloc (104 instructions, 0.20%)</title><rect x="78.2268%" y="149" width="0.2016%" height="15" fill="rgb(249,206,44)" fg:x="40358" fg:w="104"/><text x="78.5198%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.27%)</title><rect x="78.2268%" y="165" width="0.2694%" height="15" fill="rgb(251,153,30)" fg:x="40358" fg:w="139"/><text x="78.5198%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.41%)</title><rect x="78.2268%" y="181" width="0.4109%" height="15" fill="rgb(239,152,38)" fg:x="40358" fg:w="212"/><text x="78.5198%" y="191.50"></text></g><g><title>memcpy (120 instructions, 0.23%)</title><rect x="78.6377%" y="181" width="0.2326%" height="15" fill="rgb(249,139,47)" fg:x="40570" fg:w="120"/><text x="78.9307%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="78.8703%" y="181" width="0.1105%" height="15" fill="rgb(244,64,35)" fg:x="40690" fg:w="57"/><text x="79.1633%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="78.9808%" y="181" width="0.1105%" height="15" fill="rgb(216,46,15)" fg:x="40747" fg:w="57"/><text x="79.2738%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.0913%" y="181" width="0.0213%" height="15" fill="rgb(250,74,19)" fg:x="40804" fg:w="11"/><text x="79.3843%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.1126%" y="181" width="0.2384%" height="15" fill="rgb(249,42,33)" fg:x="40815" fg:w="123"/><text x="79.4056%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.3607%" y="181" width="0.0213%" height="15" fill="rgb(242,149,17)" fg:x="40943" fg:w="11"/><text x="79.6537%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.3821%" y="181" width="0.2384%" height="15" fill="rgb(244,29,21)" fg:x="40954" fg:w="123"/><text x="79.6750%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (99 instructions, 0.19%)</title><rect x="79.6205%" y="181" width="0.1919%" height="15" fill="rgb(220,130,37)" fg:x="41077" fg:w="99"/><text x="79.9134%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="79.8124%" y="181" width="0.1105%" height="15" fill="rgb(211,67,2)" fg:x="41176" fg:w="57"/><text x="80.1053%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="79.9229%" y="181" width="0.1531%" height="15" fill="rgb(235,68,52)" fg:x="41233" fg:w="79"/><text x="80.2158%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="80.0760%" y="181" width="0.1589%" height="15" fill="rgb(246,142,3)" fg:x="41312" fg:w="82"/><text x="80.3690%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.2349%" y="181" width="0.0368%" height="15" fill="rgb(241,25,7)" fg:x="41394" fg:w="19"/><text x="80.5279%" y="191.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (42,776 instructions, 82.91%)</title><rect x="0.9692%" y="197" width="82.9137%" height="15" fill="rgb(242,119,39)" fg:x="500" fg:w="42776"/><text x="1.2621%" y="207.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="83.8828%" y="197" width="0.0233%" height="15" fill="rgb(241,98,45)" fg:x="43276" fg:w="12"/><text x="84.1758%" y="207.50"></text></g><g><title>canister_update setup_subscribe (43,374 instructions, 84.07%)</title><rect x="0.0000%" y="213" width="84.0728%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="43374"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="84.0728%" y="197" width="0.1415%" height="15" fill="rgb(241,142,54)" fg:x="43374" fg:w="73"/><text x="84.3658%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="84.2143%" y="149" width="0.1376%" height="15" fill="rgb(222,85,15)" fg:x="43447" fg:w="71"/><text x="84.5073%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="84.3519%" y="149" width="0.7753%" height="15" fill="rgb(210,85,47)" fg:x="43518" fg:w="400"/><text x="84.6449%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="85.1273%" y="149" width="0.1648%" height="15" fill="rgb(224,206,25)" fg:x="43918" fg:w="85"/><text x="85.4202%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.2920%" y="149" width="0.1047%" height="15" fill="rgb(243,201,19)" fg:x="44003" fg:w="54"/><text x="85.5850%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.3967%" y="149" width="0.1047%" height="15" fill="rgb(236,59,4)" fg:x="44057" fg:w="54"/><text x="85.6896%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.5013%" y="149" width="0.1047%" height="15" fill="rgb(254,179,45)" fg:x="44111" fg:w="54"/><text x="85.7943%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.6060%" y="149" width="0.1047%" height="15" fill="rgb(226,14,10)" fg:x="44165" fg:w="54"/><text x="85.8990%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="85.7107%" y="149" width="0.1376%" height="15" fill="rgb(244,27,41)" fg:x="44219" fg:w="71"/><text x="86.0037%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="85.8483%" y="149" width="0.1260%" height="15" fill="rgb(235,35,32)" fg:x="44290" fg:w="65"/><text x="86.1413%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="85.9743%" y="149" width="0.7753%" height="15" fill="rgb(218,68,31)" fg:x="44355" fg:w="400"/><text x="86.2673%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="86.7496%" y="149" width="0.0310%" height="15" fill="rgb(207,120,37)" fg:x="44755" fg:w="16"/><text x="87.0426%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="86.7806%" y="133" width="0.2287%" height="15" fill="rgb(227,98,0)" fg:x="44771" fg:w="118"/><text x="87.0736%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="87.0094%" y="101" width="0.1163%" height="15" fill="rgb(207,7,3)" fg:x="44889" fg:w="60"/><text x="87.3023%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="87.0094%" y="117" width="0.1648%" height="15" fill="rgb(206,98,19)" fg:x="44889" fg:w="85"/><text x="87.3023%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="87.1741%" y="69" width="0.0174%" height="15" fill="rgb(217,5,26)" fg:x="44974" fg:w="9"/><text x="87.4671%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="87.1916%" y="53" width="0.0581%" height="15" fill="rgb(235,190,38)" fg:x="44983" fg:w="30"/><text x="87.4845%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="87.1916%" y="69" width="0.1066%" height="15" fill="rgb(247,86,24)" fg:x="44983" fg:w="55"/><text x="87.4845%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="87.1741%" y="85" width="0.2287%" height="15" fill="rgb(205,101,16)" fg:x="44974" fg:w="118"/><text x="87.4671%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="87.1741%" y="101" width="0.3315%" height="15" fill="rgb(246,168,33)" fg:x="44974" fg:w="171"/><text x="87.4671%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="87.1741%" y="117" width="0.3411%" height="15" fill="rgb(231,114,1)" fg:x="44974" fg:w="176"/><text x="87.4671%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="87.0094%" y="133" width="0.7211%" height="15" fill="rgb(207,184,53)" fg:x="44889" fg:w="372"/><text x="87.3023%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (636 instructions, 1.23%)</title><rect x="86.7806%" y="149" width="1.2328%" height="15" fill="rgb(224,95,51)" fg:x="44771" fg:w="636"/><text x="87.0736%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="88.0134%" y="149" width="0.1648%" height="15" fill="rgb(212,188,45)" fg:x="45407" fg:w="85"/><text x="88.3064%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="88.1782%" y="149" width="0.1066%" height="15" fill="rgb(223,154,38)" fg:x="45492" fg:w="55"/><text x="88.4711%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="88.2848%" y="149" width="0.1279%" height="15" fill="rgb(251,22,52)" fg:x="45547" fg:w="66"/><text x="88.5777%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="88.4127%" y="149" width="0.1260%" height="15" fill="rgb(229,209,22)" fg:x="45613" fg:w="65"/><text x="88.7057%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.78%)</title><rect x="88.5387%" y="133" width="0.7753%" height="15" fill="rgb(234,138,34)" fg:x="45678" fg:w="400"/><text x="88.8317%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="89.3140%" y="133" width="0.0310%" height="15" fill="rgb(212,95,11)" fg:x="46078" fg:w="16"/><text x="89.6070%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="89.3450%" y="117" width="0.1473%" height="15" fill="rgb(240,179,47)" fg:x="46094" fg:w="76"/><text x="89.6380%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="89.4924%" y="85" width="0.1163%" height="15" fill="rgb(240,163,11)" fg:x="46170" fg:w="60"/><text x="89.7853%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="89.4924%" y="101" width="0.1648%" height="15" fill="rgb(236,37,12)" fg:x="46170" fg:w="85"/><text x="89.7853%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="89.6571%" y="53" width="0.0174%" height="15" fill="rgb(232,164,16)" fg:x="46255" fg:w="9"/><text x="89.9501%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="89.6746%" y="37" width="0.0581%" height="15" fill="rgb(244,205,15)" fg:x="46264" fg:w="30"/><text x="89.9675%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="89.6746%" y="53" width="0.1066%" height="15" fill="rgb(223,117,47)" fg:x="46264" fg:w="55"/><text x="89.9675%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="89.6571%" y="69" width="0.2287%" height="15" fill="rgb(244,107,35)" fg:x="46255" fg:w="118"/><text x="89.9501%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="89.6571%" y="85" width="0.3315%" height="15" fill="rgb(205,140,8)" fg:x="46255" fg:w="171"/><text x="89.9501%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="89.6571%" y="101" width="0.3411%" height="15" fill="rgb(228,84,46)" fg:x="46255" fg:w="176"/><text x="89.9501%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="89.4924%" y="117" width="0.7211%" height="15" fill="rgb(254,188,9)" fg:x="46170" fg:w="372"/><text x="89.7853%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.15%)</title><rect x="89.3450%" y="133" width="1.1514%" height="15" fill="rgb(206,112,54)" fg:x="46094" fg:w="594"/><text x="89.6380%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="90.4964%" y="133" width="0.1648%" height="15" fill="rgb(216,84,49)" fg:x="46688" fg:w="85"/><text x="90.7894%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="90.6612%" y="133" width="0.1066%" height="15" fill="rgb(214,194,35)" fg:x="46773" fg:w="55"/><text x="90.9541%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,308 instructions, 2.54%)</title><rect x="88.5387%" y="149" width="2.5353%" height="15" fill="rgb(249,28,3)" fg:x="45678" fg:w="1308"/><text x="88.8317%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="91.0740%" y="149" width="0.1279%" height="15" fill="rgb(222,56,52)" fg:x="46986" fg:w="66"/><text x="91.3670%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.2020%" y="149" width="0.0252%" height="15" fill="rgb(245,217,50)" fg:x="47052" fg:w="13"/><text x="91.4949%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.2272%" y="149" width="0.0252%" height="15" fill="rgb(213,201,24)" fg:x="47065" fg:w="13"/><text x="91.5201%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="91.2524%" y="149" width="0.0136%" height="15" fill="rgb(248,116,28)" fg:x="47078" fg:w="7"/><text x="91.5453%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="91.2659%" y="149" width="0.0291%" height="15" fill="rgb(219,72,43)" fg:x="47085" fg:w="15"/><text x="91.5589%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="91.2950%" y="149" width="0.1473%" height="15" fill="rgb(209,138,14)" fg:x="47100" fg:w="76"/><text x="91.5880%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="91.4423%" y="149" width="0.1589%" height="15" fill="rgb(222,18,33)" fg:x="47176" fg:w="82"/><text x="91.7353%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.74%)</title><rect x="91.6051%" y="149" width="0.7385%" height="15" fill="rgb(213,199,7)" fg:x="47260" fg:w="381"/><text x="91.8981%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.74%)</title><rect x="92.3436%" y="149" width="0.7385%" height="15" fill="rgb(250,110,10)" fg:x="47641" fg:w="381"/><text x="92.6366%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,346 instructions, 10.36%)</title><rect x="84.2143%" y="165" width="10.3623%" height="15" fill="rgb(248,123,6)" fg:x="43447" fg:w="5346"/><text x="84.5073%" y="175.50">candid::de::..</text></g><g><title>memcpy (336 instructions, 0.65%)</title><rect x="94.5766%" y="165" width="0.6513%" height="15" fill="rgb(206,91,31)" fg:x="48793" fg:w="336"/><text x="94.8695%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="95.2278%" y="133" width="0.0233%" height="15" fill="rgb(211,154,13)" fg:x="49129" fg:w="12"/><text x="95.5208%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="95.2511%" y="117" width="0.1066%" height="15" fill="rgb(225,148,7)" fg:x="49141" fg:w="55"/><text x="95.5441%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="95.4101%" y="117" width="0.1105%" height="15" fill="rgb(220,160,43)" fg:x="49223" fg:w="57"/><text x="95.7030%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (166 instructions, 0.32%)</title><rect x="95.2511%" y="133" width="0.3218%" height="15" fill="rgb(213,52,39)" fg:x="49141" fg:w="166"/><text x="95.5441%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (217 instructions, 0.42%)</title><rect x="95.2278%" y="149" width="0.4206%" height="15" fill="rgb(243,137,7)" fg:x="49129" fg:w="217"/><text x="95.5208%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (251 instructions, 0.49%)</title><rect x="95.2278%" y="165" width="0.4865%" height="15" fill="rgb(230,79,13)" fg:x="49129" fg:w="251"/><text x="95.5208%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="95.7144%" y="165" width="0.1570%" height="15" fill="rgb(247,105,23)" fg:x="49380" fg:w="81"/><text x="96.0073%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8811%" y="133" width="0.0213%" height="15" fill="rgb(223,179,41)" fg:x="49466" fg:w="11"/><text x="96.1740%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.9024%" y="133" width="0.0213%" height="15" fill="rgb(218,9,34)" fg:x="49477" fg:w="11"/><text x="96.1954%" y="143.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="95.9237%" y="133" width="0.2636%" height="15" fill="rgb(222,106,8)" fg:x="49488" fg:w="136"/><text x="96.2167%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 0.67%)</title><rect x="95.8714%" y="149" width="0.6745%" height="15" fill="rgb(211,220,0)" fg:x="49461" fg:w="348"/><text x="96.1643%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.06%)</title><rect x="96.5459%" y="133" width="0.0620%" height="15" fill="rgb(229,52,16)" fg:x="49809" fg:w="32"/><text x="96.8389%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="96.6079%" y="85" width="0.1531%" height="15" fill="rgb(212,155,18)" fg:x="49841" fg:w="79"/><text x="96.9009%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="96.6079%" y="101" width="0.2210%" height="15" fill="rgb(242,21,14)" fg:x="49841" fg:w="114"/><text x="96.9009%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="96.6079%" y="117" width="0.3470%" height="15" fill="rgb(222,19,48)" fg:x="49841" fg:w="179"/><text x="96.9009%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9549%" y="117" width="0.0213%" height="15" fill="rgb(232,45,27)" fg:x="50020" fg:w="11"/><text x="97.2479%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9762%" y="117" width="0.0213%" height="15" fill="rgb(249,103,42)" fg:x="50031" fg:w="11"/><text x="97.2692%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (366 instructions, 0.71%)</title><rect x="96.6079%" y="133" width="0.7094%" height="15" fill="rgb(246,81,33)" fg:x="49841" fg:w="366"/><text x="96.9009%" y="143.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.06%)</title><rect x="97.3174%" y="133" width="0.0581%" height="15" fill="rgb(252,33,42)" fg:x="50207" fg:w="30"/><text x="97.6103%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (501 instructions, 0.97%)</title><rect x="96.5459%" y="149" width="0.9711%" height="15" fill="rgb(209,212,41)" fg:x="49809" fg:w="501"/><text x="96.8389%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.5267%" y="149" width="0.1570%" height="15" fill="rgb(207,154,6)" fg:x="50315" fg:w="81"/><text x="97.8197%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (1,009 instructions, 1.96%)</title><rect x="95.8714%" y="165" width="1.9558%" height="15" fill="rgb(223,64,47)" fg:x="49461" fg:w="1009"/><text x="96.1643%" y="175.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (7,284 instructions, 14.12%)</title><rect x="84.2143%" y="181" width="14.1187%" height="15" fill="rgb(211,161,38)" fg:x="43447" fg:w="7284"/><text x="84.5073%" y="191.50">subscriber::setup_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="98.3330%" y="181" width="0.0233%" height="15" fill="rgb(219,138,40)" fg:x="50731" fg:w="12"/><text x="98.6260%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="98.3563%" y="181" width="0.0116%" height="15" fill="rgb(241,228,46)" fg:x="50743" fg:w="6"/><text x="98.6493%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="98.3679%" y="181" width="0.1570%" height="15" fill="rgb(223,209,38)" fg:x="50749" fg:w="81"/><text x="98.6609%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.24%)</title><rect x="98.5249%" y="181" width="0.2442%" height="15" fill="rgb(236,164,45)" fg:x="50830" fg:w="126"/><text x="98.8179%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,617 instructions, 14.76%)</title><rect x="84.2143%" y="197" width="14.7642%" height="15" fill="rgb(231,15,5)" fg:x="43447" fg:w="7617"/><text x="84.5073%" y="207.50">ic_cdk::futures::wa..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="98.9785%" y="181" width="0.1512%" height="15" fill="rgb(252,35,15)" fg:x="51064" fg:w="78"/><text x="99.2715%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.32%)</title><rect x="99.1297%" y="181" width="0.3198%" height="15" fill="rgb(248,181,18)" fg:x="51142" fg:w="165"/><text x="99.4227%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (291 instructions, 0.56%)</title><rect x="98.9785%" y="197" width="0.5641%" height="15" fill="rgb(233,39,42)" fg:x="51064" fg:w="291"/><text x="99.2715%" y="207.50"></text></g><g><title>all (51,591 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="51591"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (8,217 instructions, 15.93%)</title><rect x="84.0728%" y="213" width="15.9272%" height="15" fill="rgb(233,195,10)" fg:x="43374" fg:w="8217"/><text x="84.3658%" y="223.50">ic_cdk::api::call::ca..</text></g></svg></svg>