<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="59348"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (688 instructions, 1.16%)</title><rect x="0.0000%" y="213" width="1.1593%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="688"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="1.1593%" y="213" width="0.1533%" height="15" fill="rgb(217,0,24)" fg:x="688" fg:w="91"/><text x="1.4522%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="1.3126%" y="181" width="0.1533%" height="15" fill="rgb(221,193,54)" fg:x="779" fg:w="91"/><text x="1.6056%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,164 instructions, 1.96%)</title><rect x="1.3126%" y="197" width="1.9613%" height="15" fill="rgb(248,212,6)" fg:x="779" fg:w="1164"/><text x="1.6056%" y="207.50"></text></g><g><title>std::sys::sync::once::no_threads::Once::call (44 instructions, 0.07%)</title><rect x="3.2739%" y="165" width="0.0741%" height="15" fill="rgb(208,68,35)" fg:x="1943" fg:w="44"/><text x="3.5669%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (111 instructions, 0.19%)</title><rect x="3.2739%" y="181" width="0.1870%" height="15" fill="rgb(232,128,0)" fg:x="1943" fg:w="111"/><text x="3.5669%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="3.4609%" y="165" width="0.0101%" height="15" fill="rgb(207,160,47)" fg:x="2054" fg:w="6"/><text x="3.7539%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="3.4609%" y="181" width="0.7363%" height="15" fill="rgb(228,23,34)" fg:x="2054" fg:w="437"/><text x="3.7539%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="4.1973%" y="181" width="0.1078%" height="15" fill="rgb(218,30,26)" fg:x="2491" fg:w="64"/><text x="4.4902%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="4.3051%" y="181" width="0.1028%" height="15" fill="rgb(220,122,19)" fg:x="2555" fg:w="61"/><text x="4.5981%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="4.4079%" y="181" width="0.1028%" height="15" fill="rgb(250,228,42)" fg:x="2616" fg:w="61"/><text x="4.7009%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="4.5107%" y="181" width="0.1028%" height="15" fill="rgb(240,193,28)" fg:x="2677" fg:w="61"/><text x="4.8037%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="4.6135%" y="181" width="0.1028%" height="15" fill="rgb(216,20,37)" fg:x="2738" fg:w="61"/><text x="4.9064%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="4.7162%" y="181" width="0.0859%" height="15" fill="rgb(206,188,39)" fg:x="2799" fg:w="51"/><text x="5.0092%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.16%)</title><rect x="4.8022%" y="181" width="0.1601%" height="15" fill="rgb(217,207,13)" fg:x="2850" fg:w="95"/><text x="5.0952%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="4.9623%" y="165" width="0.0101%" height="15" fill="rgb(231,73,38)" fg:x="2945" fg:w="6"/><text x="5.2552%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="4.9623%" y="181" width="0.7363%" height="15" fill="rgb(225,20,46)" fg:x="2945" fg:w="437"/><text x="5.2552%" y="191.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.6986%" y="181" width="0.0320%" height="15" fill="rgb(210,31,41)" fg:x="3382" fg:w="19"/><text x="5.9916%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="5.7306%" y="149" width="0.1533%" height="15" fill="rgb(221,200,47)" fg:x="3401" fg:w="91"/><text x="6.0236%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="5.8839%" y="117" width="0.1129%" height="15" fill="rgb(226,26,5)" fg:x="3492" fg:w="67"/><text x="6.1769%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.16%)</title><rect x="5.8839%" y="133" width="0.1618%" height="15" fill="rgb(249,33,26)" fg:x="3492" fg:w="96"/><text x="6.1769%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.0457%" y="85" width="0.0185%" height="15" fill="rgb(235,183,28)" fg:x="3588" fg:w="11"/><text x="6.3387%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="6.0642%" y="69" width="0.0590%" height="15" fill="rgb(221,5,38)" fg:x="3599" fg:w="35"/><text x="6.3572%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.11%)</title><rect x="6.0642%" y="85" width="0.1078%" height="15" fill="rgb(247,18,42)" fg:x="3599" fg:w="64"/><text x="6.3572%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.24%)</title><rect x="6.0457%" y="101" width="0.2426%" height="15" fill="rgb(241,131,45)" fg:x="3588" fg:w="144"/><text x="6.3387%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.35%)</title><rect x="6.0457%" y="117" width="0.3538%" height="15" fill="rgb(249,31,29)" fg:x="3588" fg:w="210"/><text x="6.3387%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.37%)</title><rect x="6.0457%" y="133" width="0.3707%" height="15" fill="rgb(225,111,53)" fg:x="3588" fg:w="220"/><text x="6.3387%" y="143.50"></text></g><g><title>core::fmt::write (449 instructions, 0.76%)</title><rect x="5.8839%" y="149" width="0.7566%" height="15" fill="rgb(238,160,17)" fg:x="3492" fg:w="449"/><text x="6.1769%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.14%)</title><rect x="5.7306%" y="165" width="1.1390%" height="15" fill="rgb(214,148,48)" fg:x="3401" fg:w="676"/><text x="6.0236%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="6.8697%" y="165" width="0.1078%" height="15" fill="rgb(232,36,49)" fg:x="4077" fg:w="64"/><text x="7.1626%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="6.9775%" y="165" width="0.1045%" height="15" fill="rgb(209,103,24)" fg:x="4141" fg:w="62"/><text x="7.2705%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 1.54%)</title><rect x="5.7306%" y="181" width="1.5384%" height="15" fill="rgb(229,88,8)" fg:x="3401" fg:w="913"/><text x="6.0236%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.05%)</title><rect x="7.2690%" y="181" width="0.0455%" height="15" fill="rgb(213,181,19)" fg:x="4314" fg:w="27"/><text x="7.5620%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="7.3145%" y="181" width="0.0775%" height="15" fill="rgb(254,191,54)" fg:x="4341" fg:w="46"/><text x="7.6075%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.16%)</title><rect x="7.3920%" y="181" width="0.1601%" height="15" fill="rgb(241,83,37)" fg:x="4387" fg:w="95"/><text x="7.6850%" y="191.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="7.5521%" y="149" width="0.0101%" height="15" fill="rgb(233,36,39)" fg:x="4482" fg:w="6"/><text x="7.8450%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="7.5521%" y="165" width="0.7363%" height="15" fill="rgb(226,3,54)" fg:x="4482" fg:w="437"/><text x="7.8450%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="8.2884%" y="165" width="0.0320%" height="15" fill="rgb(245,192,40)" fg:x="4919" fg:w="19"/><text x="8.5814%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="8.3204%" y="133" width="0.1533%" height="15" fill="rgb(238,167,29)" fg:x="4938" fg:w="91"/><text x="8.6134%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="8.4737%" y="101" width="0.1129%" height="15" fill="rgb(232,182,51)" fg:x="5029" fg:w="67"/><text x="8.7667%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.16%)</title><rect x="8.4737%" y="117" width="0.1618%" height="15" fill="rgb(231,60,39)" fg:x="5029" fg:w="96"/><text x="8.7667%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="8.6355%" y="69" width="0.0185%" height="15" fill="rgb(208,69,12)" fg:x="5125" fg:w="11"/><text x="8.9285%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="8.6540%" y="53" width="0.0590%" height="15" fill="rgb(235,93,37)" fg:x="5136" fg:w="35"/><text x="8.9470%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.11%)</title><rect x="8.6540%" y="69" width="0.1078%" height="15" fill="rgb(213,116,39)" fg:x="5136" fg:w="64"/><text x="8.9470%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.24%)</title><rect x="8.6355%" y="85" width="0.2426%" height="15" fill="rgb(222,207,29)" fg:x="5125" fg:w="144"/><text x="8.9285%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.35%)</title><rect x="8.6355%" y="101" width="0.3538%" height="15" fill="rgb(206,96,30)" fg:x="5125" fg:w="210"/><text x="8.9285%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.37%)</title><rect x="8.6355%" y="117" width="0.3707%" height="15" fill="rgb(218,138,4)" fg:x="5125" fg:w="220"/><text x="8.9285%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 0.76%)</title><rect x="8.4737%" y="133" width="0.7566%" height="15" fill="rgb(250,191,14)" fg:x="5029" fg:w="449"/><text x="8.7667%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (676 instructions, 1.14%)</title><rect x="8.3204%" y="149" width="1.1390%" height="15" fill="rgb(239,60,40)" fg:x="4938" fg:w="676"/><text x="8.6134%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="9.4595%" y="149" width="0.1078%" height="15" fill="rgb(206,27,48)" fg:x="5614" fg:w="64"/><text x="9.7524%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="9.5673%" y="149" width="0.1045%" height="15" fill="rgb(225,35,8)" fg:x="5678" fg:w="62"/><text x="9.8603%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (913 instructions, 1.54%)</title><rect x="8.3204%" y="165" width="1.5384%" height="15" fill="rgb(250,213,24)" fg:x="4938" fg:w="913"/><text x="8.6134%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="9.8588%" y="149" width="0.0859%" height="15" fill="rgb(247,123,22)" fg:x="5851" fg:w="51"/><text x="10.1518%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.20%)</title><rect x="9.9447%" y="149" width="0.1988%" height="15" fill="rgb(231,138,38)" fg:x="5902" fg:w="118"/><text x="10.2377%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="10.1436%" y="149" width="0.0775%" height="15" fill="rgb(231,145,46)" fg:x="6020" fg:w="46"/><text x="10.4365%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (288 instructions, 0.49%)</title><rect x="9.8588%" y="165" width="0.4853%" height="15" fill="rgb(251,118,11)" fg:x="5851" fg:w="288"/><text x="10.1518%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="10.3441%" y="165" width="0.1533%" height="15" fill="rgb(217,147,25)" fg:x="6139" fg:w="91"/><text x="10.6370%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="10.4974%" y="149" width="0.0859%" height="15" fill="rgb(247,81,37)" fg:x="6230" fg:w="51"/><text x="10.7904%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.20%)</title><rect x="10.5833%" y="149" width="0.1988%" height="15" fill="rgb(209,12,38)" fg:x="6281" fg:w="118"/><text x="10.8763%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="10.7822%" y="149" width="0.0775%" height="15" fill="rgb(227,1,9)" fg:x="6399" fg:w="46"/><text x="11.0751%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.48%)</title><rect x="10.4974%" y="165" width="0.4768%" height="15" fill="rgb(248,47,43)" fg:x="6230" fg:w="283"/><text x="10.7904%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,267 instructions, 3.82%)</title><rect x="7.5521%" y="181" width="3.8198%" height="15" fill="rgb(221,10,30)" fg:x="4482" fg:w="2267"/><text x="7.8450%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="11.3719%" y="181" width="0.0775%" height="15" fill="rgb(210,229,1)" fg:x="6749" fg:w="46"/><text x="11.6649%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="11.4494%" y="181" width="0.0253%" height="15" fill="rgb(222,148,37)" fg:x="6795" fg:w="15"/><text x="11.7424%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="11.4747%" y="181" width="0.0135%" height="15" fill="rgb(234,67,33)" fg:x="6810" fg:w="8"/><text x="11.7677%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="11.4882%" y="165" width="0.1533%" height="15" fill="rgb(247,98,35)" fg:x="6818" fg:w="91"/><text x="11.7811%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.32%)</title><rect x="11.4882%" y="181" width="0.3151%" height="15" fill="rgb(247,138,52)" fg:x="6818" fg:w="187"/><text x="11.7811%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="11.8033%" y="149" width="0.1533%" height="15" fill="rgb(213,79,30)" fg:x="7005" fg:w="91"/><text x="12.0962%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.22%)</title><rect x="11.8033%" y="165" width="0.2224%" height="15" fill="rgb(246,177,23)" fg:x="7005" fg:w="132"/><text x="12.0962%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (219 instructions, 0.37%)</title><rect x="11.8033%" y="181" width="0.3690%" height="15" fill="rgb(230,62,27)" fg:x="7005" fg:w="219"/><text x="12.0962%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="12.1723%" y="165" width="0.1533%" height="15" fill="rgb(216,154,8)" fg:x="7224" fg:w="91"/><text x="12.4652%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.32%)</title><rect x="12.1723%" y="181" width="0.3151%" height="15" fill="rgb(244,35,45)" fg:x="7224" fg:w="187"/><text x="12.4652%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="12.4874%" y="181" width="0.1533%" height="15" fill="rgb(251,115,12)" fg:x="7411" fg:w="91"/><text x="12.7803%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="12.6407%" y="181" width="0.1500%" height="15" fill="rgb(240,54,50)" fg:x="7502" fg:w="89"/><text x="12.9337%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="12.7907%" y="181" width="0.1533%" height="15" fill="rgb(233,84,52)" fg:x="7591" fg:w="91"/><text x="13.0836%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="12.9440%" y="181" width="0.1533%" height="15" fill="rgb(207,117,47)" fg:x="7682" fg:w="91"/><text x="13.2370%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="13.1057%" y="181" width="0.1500%" height="15" fill="rgb(249,43,39)" fg:x="7778" fg:w="89"/><text x="13.3987%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.66%)</title><rect x="13.2557%" y="181" width="0.6605%" height="15" fill="rgb(209,38,44)" fg:x="7867" fg:w="392"/><text x="13.5487%" y="191.50"></text></g><g><title>memcpy (392 instructions, 0.66%)</title><rect x="13.9162%" y="181" width="0.6605%" height="15" fill="rgb(236,212,23)" fg:x="8259" fg:w="392"/><text x="14.2092%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.85%)</title><rect x="14.5767%" y="181" width="0.8492%" height="15" fill="rgb(242,79,21)" fg:x="8651" fg:w="504"/><text x="14.8697%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (8,537 instructions, 14.38%)</title><rect x="3.2739%" y="197" width="14.3846%" height="15" fill="rgb(211,96,35)" fg:x="1943" fg:w="8537"/><text x="3.5669%" y="207.50">candid::de::IDLDes..</text></g><g><title>memcpy (408 instructions, 0.69%)</title><rect x="17.6586%" y="197" width="0.6875%" height="15" fill="rgb(253,215,40)" fg:x="10480" fg:w="408"/><text x="17.9515%" y="207.50"></text></g><g><title>memcpy (408 instructions, 0.69%)</title><rect x="18.3460%" y="197" width="0.6875%" height="15" fill="rgb(211,81,21)" fg:x="10888" fg:w="408"/><text x="18.6390%" y="207.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.04%)</title><rect x="19.0335%" y="197" width="0.0404%" height="15" fill="rgb(208,190,38)" fg:x="11296" fg:w="24"/><text x="19.3265%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="19.0739%" y="197" width="0.1533%" height="15" fill="rgb(235,213,38)" fg:x="11320" fg:w="91"/><text x="19.3669%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="19.2273%" y="181" width="0.1533%" height="15" fill="rgb(237,122,38)" fg:x="11411" fg:w="91"/><text x="19.5202%" y="191.50"></text></g><g><title>candid::types::internal::env_add (175 instructions, 0.29%)</title><rect x="19.2273%" y="197" width="0.2949%" height="15" fill="rgb(244,218,35)" fg:x="11411" fg:w="175"/><text x="19.5202%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="19.5221%" y="197" width="0.1533%" height="15" fill="rgb(240,68,47)" fg:x="11586" fg:w="91"/><text x="19.8151%" y="207.50"></text></g><g><title>memcmp (537 instructions, 0.90%)</title><rect x="19.6755%" y="181" width="0.9048%" height="15" fill="rgb(210,16,53)" fg:x="11677" fg:w="537"/><text x="19.9684%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="20.5803%" y="165" width="0.1500%" height="15" fill="rgb(235,124,12)" fg:x="12214" fg:w="89"/><text x="20.8733%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.27%)</title><rect x="20.5803%" y="181" width="0.2696%" height="15" fill="rgb(224,169,11)" fg:x="12214" fg:w="160"/><text x="20.8733%" y="191.50"></text></g><g><title>candid::types::internal::env_add (876 instructions, 1.48%)</title><rect x="19.6755%" y="197" width="1.4760%" height="15" fill="rgb(250,166,2)" fg:x="11677" fg:w="876"/><text x="19.9684%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="21.1515%" y="181" width="0.1533%" height="15" fill="rgb(242,216,29)" fg:x="12553" fg:w="91"/><text x="21.4445%" y="191.50"></text></g><g><title>candid::types::internal::env_id (211 instructions, 0.36%)</title><rect x="21.1515%" y="197" width="0.3555%" height="15" fill="rgb(230,116,27)" fg:x="12553" fg:w="211"/><text x="21.4445%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="21.5070%" y="197" width="0.0826%" height="15" fill="rgb(228,99,48)" fg:x="12764" fg:w="49"/><text x="21.8000%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="21.5896%" y="165" width="0.0455%" height="15" fill="rgb(253,11,6)" fg:x="12813" fg:w="27"/><text x="21.8826%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.24%)</title><rect x="21.5896%" y="181" width="0.2393%" height="15" fill="rgb(247,143,39)" fg:x="12813" fg:w="142"/><text x="21.8826%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="21.9485%" y="165" width="0.0455%" height="15" fill="rgb(236,97,10)" fg:x="13026" fg:w="27"/><text x="22.2415%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.24%)</title><rect x="21.9485%" y="181" width="0.2393%" height="15" fill="rgb(233,208,19)" fg:x="13026" fg:w="142"/><text x="22.2415%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (426 instructions, 0.72%)</title><rect x="21.5896%" y="197" width="0.7178%" height="15" fill="rgb(216,164,2)" fg:x="12813" fg:w="426"/><text x="21.8826%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.06%)</title><rect x="22.3074%" y="181" width="0.0623%" height="15" fill="rgb(220,129,5)" fg:x="13239" fg:w="37"/><text x="22.6004%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.06%)</title><rect x="22.3698%" y="181" width="0.0623%" height="15" fill="rgb(242,17,10)" fg:x="13276" fg:w="37"/><text x="22.6627%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="22.4321%" y="181" width="0.0573%" height="15" fill="rgb(242,107,0)" fg:x="13313" fg:w="34"/><text x="22.7251%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="22.4894%" y="181" width="0.0573%" height="15" fill="rgb(251,28,31)" fg:x="13347" fg:w="34"/><text x="22.7824%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="22.5467%" y="181" width="0.1382%" height="15" fill="rgb(233,223,10)" fg:x="13381" fg:w="82"/><text x="22.8396%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="22.6848%" y="165" width="0.0859%" height="15" fill="rgb(215,21,27)" fg:x="13463" fg:w="51"/><text x="22.9778%" y="175.50"></text></g><g><title>binread::binary_template::write_named (61 instructions, 0.10%)</title><rect x="22.7708%" y="149" width="0.1028%" height="15" fill="rgb(232,23,21)" fg:x="13514" fg:w="61"/><text x="23.0637%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (140 instructions, 0.24%)</title><rect x="22.7708%" y="165" width="0.2359%" height="15" fill="rgb(244,5,23)" fg:x="13514" fg:w="140"/><text x="23.0637%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (94 instructions, 0.16%)</title><rect x="23.0067%" y="165" width="0.1584%" height="15" fill="rgb(226,81,46)" fg:x="13654" fg:w="94"/><text x="23.2996%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="23.1651%" y="149" width="0.0101%" height="15" fill="rgb(247,70,30)" fg:x="13748" fg:w="6"/><text x="23.4580%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="23.1651%" y="165" width="0.7363%" height="15" fill="rgb(212,68,19)" fg:x="13748" fg:w="437"/><text x="23.4580%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="23.9014%" y="133" width="0.1938%" height="15" fill="rgb(240,187,13)" fg:x="14185" fg:w="115"/><text x="24.1944%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="24.0952%" y="101" width="0.1129%" height="15" fill="rgb(223,113,26)" fg:x="14300" fg:w="67"/><text x="24.3881%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.16%)</title><rect x="24.0952%" y="117" width="0.1618%" height="15" fill="rgb(206,192,2)" fg:x="14300" fg:w="96"/><text x="24.3881%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="24.2569%" y="69" width="0.0185%" height="15" fill="rgb(241,108,4)" fg:x="14396" fg:w="11"/><text x="24.5499%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="24.2755%" y="53" width="0.0590%" height="15" fill="rgb(247,173,49)" fg:x="14407" fg:w="35"/><text x="24.5684%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.11%)</title><rect x="24.2755%" y="69" width="0.1078%" height="15" fill="rgb(224,114,35)" fg:x="14407" fg:w="64"/><text x="24.5684%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.24%)</title><rect x="24.2569%" y="85" width="0.2426%" height="15" fill="rgb(245,159,27)" fg:x="14396" fg:w="144"/><text x="24.5499%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.35%)</title><rect x="24.2569%" y="101" width="0.3538%" height="15" fill="rgb(245,172,44)" fg:x="14396" fg:w="210"/><text x="24.5499%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.37%)</title><rect x="24.2569%" y="117" width="0.3707%" height="15" fill="rgb(236,23,11)" fg:x="14396" fg:w="220"/><text x="24.5499%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 0.76%)</title><rect x="24.0952%" y="133" width="0.7566%" height="15" fill="rgb(205,117,38)" fg:x="14300" fg:w="449"/><text x="24.3881%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (700 instructions, 1.18%)</title><rect x="23.9014%" y="149" width="1.1795%" height="15" fill="rgb(237,72,25)" fg:x="14185" fg:w="700"/><text x="24.1944%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="25.0809%" y="149" width="0.1078%" height="15" fill="rgb(244,70,9)" fg:x="14885" fg:w="64"/><text x="25.3738%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="25.1887%" y="149" width="0.1028%" height="15" fill="rgb(217,125,39)" fg:x="14949" fg:w="61"/><text x="25.4817%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (936 instructions, 1.58%)</title><rect x="23.9014%" y="165" width="1.5771%" height="15" fill="rgb(235,36,10)" fg:x="14185" fg:w="936"/><text x="24.1944%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="25.4785%" y="149" width="0.1028%" height="15" fill="rgb(251,123,47)" fg:x="15121" fg:w="61"/><text x="25.7715%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 instructions, 0.21%)</title><rect x="25.4785%" y="165" width="0.2056%" height="15" fill="rgb(221,13,13)" fg:x="15121" fg:w="122"/><text x="25.7715%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="25.6841%" y="165" width="0.1382%" height="15" fill="rgb(238,131,9)" fg:x="15243" fg:w="82"/><text x="25.9771%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="25.8223%" y="149" width="0.1028%" height="15" fill="rgb(211,50,8)" fg:x="15325" fg:w="61"/><text x="26.1152%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="26.0278%" y="149" width="0.1028%" height="15" fill="rgb(245,182,24)" fg:x="15447" fg:w="61"/><text x="26.3208%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="26.2334%" y="149" width="0.1028%" height="15" fill="rgb(242,14,37)" fg:x="15569" fg:w="61"/><text x="26.5264%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="26.4390%" y="149" width="0.1028%" height="15" fill="rgb(246,228,12)" fg:x="15691" fg:w="61"/><text x="26.7319%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="26.6445%" y="149" width="0.1028%" height="15" fill="rgb(213,55,15)" fg:x="15813" fg:w="61"/><text x="26.9375%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="26.8501%" y="149" width="0.1028%" height="15" fill="rgb(209,9,3)" fg:x="15935" fg:w="61"/><text x="27.1431%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="27.0557%" y="149" width="0.1028%" height="15" fill="rgb(230,59,30)" fg:x="16057" fg:w="61"/><text x="27.3486%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="27.2612%" y="149" width="0.1028%" height="15" fill="rgb(209,121,21)" fg:x="16179" fg:w="61"/><text x="27.5542%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (976 instructions, 1.64%)</title><rect x="25.8223%" y="165" width="1.6445%" height="15" fill="rgb(220,109,13)" fg:x="15325" fg:w="976"/><text x="26.1152%" y="175.50"></text></g><g><title>__rust_realloc (133 instructions, 0.22%)</title><rect x="27.4668%" y="133" width="0.2241%" height="15" fill="rgb(232,18,1)" fg:x="16301" fg:w="133"/><text x="27.7598%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.30%)</title><rect x="27.4668%" y="149" width="0.2966%" height="15" fill="rgb(215,41,42)" fg:x="16301" fg:w="176"/><text x="27.7598%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (262 instructions, 0.44%)</title><rect x="27.4668%" y="165" width="0.4415%" height="15" fill="rgb(224,123,36)" fg:x="16301" fg:w="262"/><text x="27.7598%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="27.9083%" y="149" width="0.1028%" height="15" fill="rgb(240,125,3)" fg:x="16563" fg:w="61"/><text x="28.2012%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 instructions, 0.21%)</title><rect x="27.9083%" y="165" width="0.2056%" height="15" fill="rgb(205,98,50)" fg:x="16563" fg:w="122"/><text x="28.2012%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 instructions, 0.05%)</title><rect x="28.1138%" y="165" width="0.0472%" height="15" fill="rgb(205,185,37)" fg:x="16685" fg:w="28"/><text x="28.4068%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="28.1610%" y="165" width="0.0775%" height="15" fill="rgb(238,207,15)" fg:x="16713" fg:w="46"/><text x="28.4540%" y="175.50"></text></g><g><title>binread::BinRead::read (3,954 instructions, 6.66%)</title><rect x="22.6848%" y="181" width="6.6624%" height="15" fill="rgb(213,199,42)" fg:x="13463" fg:w="3954"/><text x="22.9778%" y="191.50">binread..</text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.05%)</title><rect x="29.3472%" y="181" width="0.0522%" height="15" fill="rgb(235,201,11)" fg:x="17417" fg:w="31"/><text x="29.6402%" y="191.50"></text></g><g><title>__rust_realloc (77 instructions, 0.13%)</title><rect x="29.3995%" y="149" width="0.1297%" height="15" fill="rgb(207,46,11)" fg:x="17448" fg:w="77"/><text x="29.6924%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (120 instructions, 0.20%)</title><rect x="29.3995%" y="165" width="0.2022%" height="15" fill="rgb(241,35,35)" fg:x="17448" fg:w="120"/><text x="29.6924%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.35%)</title><rect x="29.3995%" y="181" width="0.3471%" height="15" fill="rgb(243,32,47)" fg:x="17448" fg:w="206"/><text x="29.6924%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.30%)</title><rect x="29.7466%" y="181" width="0.3016%" height="15" fill="rgb(247,202,23)" fg:x="17654" fg:w="179"/><text x="30.0395%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.30%)</title><rect x="30.0482%" y="181" width="0.3016%" height="15" fill="rgb(219,102,11)" fg:x="17833" fg:w="179"/><text x="30.3412%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="30.3498%" y="181" width="0.1500%" height="15" fill="rgb(243,110,44)" fg:x="18012" fg:w="89"/><text x="30.6428%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="30.4998%" y="165" width="0.1028%" height="15" fill="rgb(222,74,54)" fg:x="18101" fg:w="61"/><text x="30.7927%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (102 instructions, 0.17%)</title><rect x="30.4998%" y="181" width="0.1719%" height="15" fill="rgb(216,99,12)" fg:x="18101" fg:w="102"/><text x="30.7927%" y="191.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,386 instructions, 9.08%)</title><rect x="22.3074%" y="197" width="9.0753%" height="15" fill="rgb(226,22,26)" fg:x="13239" fg:w="5386"/><text x="22.6004%" y="207.50">&lt;ic_princip..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="31.3827%" y="197" width="0.0236%" height="15" fill="rgb(217,163,10)" fg:x="18625" fg:w="14"/><text x="31.6757%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="31.4063%" y="197" width="0.0236%" height="15" fill="rgb(213,25,53)" fg:x="18639" fg:w="14"/><text x="31.6993%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="31.4299%" y="197" width="0.0236%" height="15" fill="rgb(252,105,26)" fg:x="18653" fg:w="14"/><text x="31.7228%" y="207.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.18%)</title><rect x="31.4535%" y="181" width="0.1803%" height="15" fill="rgb(220,39,43)" fg:x="18667" fg:w="107"/><text x="31.7464%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.27%)</title><rect x="31.6338%" y="181" width="0.2662%" height="15" fill="rgb(229,68,48)" fg:x="18774" fg:w="158"/><text x="31.9267%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.37%)</title><rect x="31.9000%" y="165" width="0.3707%" height="15" fill="rgb(252,8,32)" fg:x="18932" fg:w="220"/><text x="32.1929%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="32.2707%" y="165" width="0.1550%" height="15" fill="rgb(223,20,43)" fg:x="19152" fg:w="92"/><text x="32.5636%" y="175.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 0.90%)</title><rect x="31.9000%" y="181" width="0.9031%" height="15" fill="rgb(229,81,49)" fg:x="18932" fg:w="536"/><text x="32.1929%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="32.8031%" y="181" width="0.1382%" height="15" fill="rgb(236,28,36)" fg:x="19468" fg:w="82"/><text x="33.0961%" y="191.50"></text></g><g><title>memcmp (491 instructions, 0.83%)</title><rect x="32.9413%" y="165" width="0.8273%" height="15" fill="rgb(249,185,26)" fg:x="19550" fg:w="491"/><text x="33.2343%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="33.7686%" y="149" width="0.1500%" height="15" fill="rgb(249,174,33)" fg:x="20041" fg:w="89"/><text x="34.0616%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.27%)</title><rect x="33.7686%" y="165" width="0.2696%" height="15" fill="rgb(233,201,37)" fg:x="20041" fg:w="160"/><text x="34.0616%" y="175.50"></text></g><g><title>candid::types::internal::env_add (830 instructions, 1.40%)</title><rect x="32.9413%" y="181" width="1.3985%" height="15" fill="rgb(221,78,26)" fg:x="19550" fg:w="830"/><text x="33.2343%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="34.3398%" y="165" width="0.0573%" height="15" fill="rgb(250,127,30)" fg:x="20380" fg:w="34"/><text x="34.6328%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="34.3971%" y="165" width="0.0573%" height="15" fill="rgb(230,49,44)" fg:x="20414" fg:w="34"/><text x="34.6901%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="34.4544%" y="165" width="0.1550%" height="15" fill="rgb(229,67,23)" fg:x="20448" fg:w="92"/><text x="34.7474%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.37%)</title><rect x="34.6094%" y="165" width="0.3707%" height="15" fill="rgb(249,83,47)" fg:x="20540" fg:w="220"/><text x="34.9024%" y="175.50"></text></g><g><title>candid::types::internal::env_id (667 instructions, 1.12%)</title><rect x="34.3398%" y="181" width="1.1239%" height="15" fill="rgb(215,43,3)" fg:x="20380" fg:w="667"/><text x="34.6328%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,499 instructions, 4.21%)</title><rect x="31.4535%" y="197" width="4.2108%" height="15" fill="rgb(238,154,13)" fg:x="18667" fg:w="2499"/><text x="31.7464%" y="207.50">cand..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.08%)</title><rect x="35.6642%" y="197" width="0.0826%" height="15" fill="rgb(219,56,2)" fg:x="21166" fg:w="49"/><text x="35.9572%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="35.7704%" y="165" width="0.0455%" height="15" fill="rgb(233,0,4)" fg:x="21229" fg:w="27"/><text x="36.0633%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="35.8159%" y="165" width="0.0455%" height="15" fill="rgb(235,30,7)" fg:x="21256" fg:w="27"/><text x="36.1088%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.33%)</title><rect x="35.7704%" y="181" width="0.3319%" height="15" fill="rgb(250,79,13)" fg:x="21229" fg:w="197"/><text x="36.0633%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 0.48%)</title><rect x="35.7468%" y="197" width="0.4752%" height="15" fill="rgb(211,146,34)" fg:x="21215" fg:w="282"/><text x="36.0398%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.06%)</title><rect x="36.2219%" y="181" width="0.0623%" height="15" fill="rgb(228,22,38)" fg:x="21497" fg:w="37"/><text x="36.5149%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="36.2843%" y="181" width="0.0573%" height="15" fill="rgb(235,168,5)" fg:x="21534" fg:w="34"/><text x="36.5773%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="36.3416%" y="181" width="0.0573%" height="15" fill="rgb(221,155,16)" fg:x="21568" fg:w="34"/><text x="36.6345%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="36.3989%" y="165" width="0.0859%" height="15" fill="rgb(215,215,53)" fg:x="21602" fg:w="51"/><text x="36.6918%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (94 instructions, 0.16%)</title><rect x="36.4848%" y="165" width="0.1584%" height="15" fill="rgb(223,4,10)" fg:x="21653" fg:w="94"/><text x="36.7778%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="36.6432%" y="165" width="0.0775%" height="15" fill="rgb(234,103,6)" fg:x="21747" fg:w="46"/><text x="36.9362%" y="175.50"></text></g><g><title>binread::BinRead::read (254 instructions, 0.43%)</title><rect x="36.3989%" y="181" width="0.4280%" height="15" fill="rgb(227,97,0)" fg:x="21602" fg:w="254"/><text x="36.6918%" y="191.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.05%)</title><rect x="36.8269%" y="181" width="0.0522%" height="15" fill="rgb(234,150,53)" fg:x="21856" fg:w="31"/><text x="37.1198%" y="191.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (56 instructions, 0.09%)</title><rect x="36.8791%" y="181" width="0.0944%" height="15" fill="rgb(228,201,54)" fg:x="21887" fg:w="56"/><text x="37.1721%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="36.9734%" y="165" width="0.1382%" height="15" fill="rgb(222,22,37)" fg:x="21943" fg:w="82"/><text x="37.2664%" y="175.50"></text></g><g><title>memcpy (115 instructions, 0.19%)</title><rect x="37.1116%" y="165" width="0.1938%" height="15" fill="rgb(237,53,32)" fg:x="22025" fg:w="115"/><text x="37.4046%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (239 instructions, 0.40%)</title><rect x="36.9734%" y="181" width="0.4027%" height="15" fill="rgb(233,25,53)" fg:x="21943" fg:w="239"/><text x="37.2664%" y="191.50"></text></g><g><title>core::str::converts::from_utf8 (160 instructions, 0.27%)</title><rect x="37.3762%" y="181" width="0.2696%" height="15" fill="rgb(210,40,34)" fg:x="22182" fg:w="160"/><text x="37.6691%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,002 instructions, 1.69%)</title><rect x="36.2219%" y="197" width="1.6883%" height="15" fill="rgb(241,220,44)" fg:x="21497" fg:w="1002"/><text x="36.5149%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="37.9103%" y="197" width="0.0236%" height="15" fill="rgb(235,28,35)" fg:x="22499" fg:w="14"/><text x="38.2033%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="37.9339%" y="197" width="0.0236%" height="15" fill="rgb(210,56,17)" fg:x="22513" fg:w="14"/><text x="38.2269%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="37.9575%" y="197" width="0.0236%" height="15" fill="rgb(224,130,29)" fg:x="22527" fg:w="14"/><text x="38.2504%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.06%)</title><rect x="37.9811%" y="197" width="0.0623%" height="15" fill="rgb(235,212,8)" fg:x="22541" fg:w="37"/><text x="38.2740%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="38.0434%" y="181" width="0.0135%" height="15" fill="rgb(223,33,50)" fg:x="22578" fg:w="8"/><text x="38.3364%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="38.0569%" y="165" width="0.0455%" height="15" fill="rgb(219,149,13)" fg:x="22586" fg:w="27"/><text x="38.3499%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.24%)</title><rect x="38.0569%" y="181" width="0.2393%" height="15" fill="rgb(250,156,29)" fg:x="22586" fg:w="142"/><text x="38.3499%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="38.2962%" y="149" width="0.0455%" height="15" fill="rgb(216,193,19)" fg:x="22728" fg:w="27"/><text x="38.5891%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="38.3416%" y="149" width="0.0455%" height="15" fill="rgb(216,135,14)" fg:x="22755" fg:w="27"/><text x="38.6346%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.33%)</title><rect x="38.2962%" y="165" width="0.3319%" height="15" fill="rgb(241,47,5)" fg:x="22728" fg:w="197"/><text x="38.5891%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.45%)</title><rect x="38.2962%" y="181" width="0.4516%" height="15" fill="rgb(233,42,35)" fg:x="22728" fg:w="268"/><text x="38.5891%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="38.7477%" y="181" width="0.0236%" height="15" fill="rgb(231,13,6)" fg:x="22996" fg:w="14"/><text x="39.0407%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (523 instructions, 0.88%)</title><rect x="38.0434%" y="197" width="0.8812%" height="15" fill="rgb(207,181,40)" fg:x="22578" fg:w="523"/><text x="38.3364%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="38.9246%" y="181" width="0.0455%" height="15" fill="rgb(254,173,49)" fg:x="23101" fg:w="27"/><text x="39.2176%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.11%)</title><rect x="38.9701%" y="181" width="0.1129%" height="15" fill="rgb(221,1,38)" fg:x="23128" fg:w="67"/><text x="39.2631%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (187 instructions, 0.32%)</title><rect x="38.9246%" y="197" width="0.3151%" height="15" fill="rgb(206,124,46)" fg:x="23101" fg:w="187"/><text x="39.2176%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="39.2397%" y="181" width="0.0236%" height="15" fill="rgb(249,21,11)" fg:x="23288" fg:w="14"/><text x="39.5327%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="39.2633%" y="181" width="0.0236%" height="15" fill="rgb(222,201,40)" fg:x="23302" fg:w="14"/><text x="39.5563%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.11%)</title><rect x="39.2869%" y="181" width="0.1129%" height="15" fill="rgb(235,61,29)" fg:x="23316" fg:w="67"/><text x="39.5799%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (322 instructions, 0.54%)</title><rect x="39.2397%" y="197" width="0.5426%" height="15" fill="rgb(219,207,3)" fg:x="23288" fg:w="322"/><text x="39.5327%" y="207.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.04%)</title><rect x="39.7823%" y="197" width="0.0404%" height="15" fill="rgb(222,56,46)" fg:x="23610" fg:w="24"/><text x="40.0753%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="39.8227%" y="197" width="0.1382%" height="15" fill="rgb(239,76,54)" fg:x="23634" fg:w="82"/><text x="40.1157%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (214 instructions, 0.36%)</title><rect x="39.9609%" y="181" width="0.3606%" height="15" fill="rgb(231,124,27)" fg:x="23716" fg:w="214"/><text x="40.2539%" y="191.50"></text></g><g><title>candid::types::internal::env_add (298 instructions, 0.50%)</title><rect x="39.9609%" y="197" width="0.5021%" height="15" fill="rgb(249,195,6)" fg:x="23716" fg:w="298"/><text x="40.2539%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="40.4630%" y="197" width="0.1382%" height="15" fill="rgb(237,174,47)" fg:x="24014" fg:w="82"/><text x="40.7560%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="40.6012%" y="197" width="0.1382%" height="15" fill="rgb(206,201,31)" fg:x="24096" fg:w="82"/><text x="40.8942%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="40.7394%" y="197" width="0.1382%" height="15" fill="rgb(231,57,52)" fg:x="24178" fg:w="82"/><text x="41.0323%" y="207.50"></text></g><g><title>candid::types::internal::find_type (107 instructions, 0.18%)</title><rect x="40.8775%" y="181" width="0.1803%" height="15" fill="rgb(248,177,22)" fg:x="24260" fg:w="107"/><text x="41.1705%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.27%)</title><rect x="41.0578%" y="181" width="0.2662%" height="15" fill="rgb(215,211,37)" fg:x="24367" fg:w="158"/><text x="41.3508%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.37%)</title><rect x="41.3241%" y="165" width="0.3707%" height="15" fill="rgb(241,128,51)" fg:x="24525" fg:w="220"/><text x="41.6170%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="41.6947%" y="165" width="0.1550%" height="15" fill="rgb(227,165,31)" fg:x="24745" fg:w="92"/><text x="41.9877%" y="175.50"></text></g><g><title>candid::types::internal::env_add (536 instructions, 0.90%)</title><rect x="41.3241%" y="181" width="0.9031%" height="15" fill="rgb(228,167,24)" fg:x="24525" fg:w="536"/><text x="41.6170%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="42.2272%" y="181" width="0.1382%" height="15" fill="rgb(228,143,12)" fg:x="25061" fg:w="82"/><text x="42.5202%" y="191.50"></text></g><g><title>memcmp (491 instructions, 0.83%)</title><rect x="42.3654%" y="165" width="0.8273%" height="15" fill="rgb(249,149,8)" fg:x="25143" fg:w="491"/><text x="42.6583%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="43.1927%" y="149" width="0.1500%" height="15" fill="rgb(243,35,44)" fg:x="25634" fg:w="89"/><text x="43.4857%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.27%)</title><rect x="43.1927%" y="165" width="0.2696%" height="15" fill="rgb(246,89,9)" fg:x="25634" fg:w="160"/><text x="43.4857%" y="175.50"></text></g><g><title>candid::types::internal::env_add (830 instructions, 1.40%)</title><rect x="42.3654%" y="181" width="1.3985%" height="15" fill="rgb(233,213,13)" fg:x="25143" fg:w="830"/><text x="42.6583%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.08%)</title><rect x="43.7639%" y="165" width="0.0826%" height="15" fill="rgb(233,141,41)" fg:x="25973" fg:w="49"/><text x="44.0569%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="43.8465%" y="165" width="0.0236%" height="15" fill="rgb(239,167,4)" fg:x="26022" fg:w="14"/><text x="44.1394%" y="175.50"></text></g><g><title>candid::types::internal::env_id (200 instructions, 0.34%)</title><rect x="43.7639%" y="181" width="0.3370%" height="15" fill="rgb(209,217,16)" fg:x="25973" fg:w="200"/><text x="44.0569%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,032 instructions, 3.42%)</title><rect x="40.8775%" y="197" width="3.4239%" height="15" fill="rgb(219,88,35)" fg:x="24260" fg:w="2032"/><text x="41.1705%" y="207.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="44.3014%" y="197" width="0.1382%" height="15" fill="rgb(220,193,23)" fg:x="26292" fg:w="82"/><text x="44.5944%" y="207.50"></text></g><g><title>memcmp (514 instructions, 0.87%)</title><rect x="44.4396%" y="181" width="0.8661%" height="15" fill="rgb(230,90,52)" fg:x="26374" fg:w="514"/><text x="44.7325%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="45.3057%" y="165" width="0.1500%" height="15" fill="rgb(252,106,19)" fg:x="26888" fg:w="89"/><text x="45.5986%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.27%)</title><rect x="45.3057%" y="181" width="0.2696%" height="15" fill="rgb(206,74,20)" fg:x="26888" fg:w="160"/><text x="45.5986%" y="191.50"></text></g><g><title>candid::types::internal::env_add (894 instructions, 1.51%)</title><rect x="44.4396%" y="197" width="1.5064%" height="15" fill="rgb(230,138,44)" fg:x="26374" fg:w="894"/><text x="44.7325%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="45.9459%" y="181" width="0.0573%" height="15" fill="rgb(235,182,43)" fg:x="27268" fg:w="34"/><text x="46.2389%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="46.0032%" y="181" width="0.0573%" height="15" fill="rgb(242,16,51)" fg:x="27302" fg:w="34"/><text x="46.2962%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="46.0605%" y="181" width="0.0573%" height="15" fill="rgb(248,9,4)" fg:x="27336" fg:w="34"/><text x="46.3535%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="46.1178%" y="181" width="0.0573%" height="15" fill="rgb(210,31,22)" fg:x="27370" fg:w="34"/><text x="46.4108%" y="191.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="46.1751%" y="181" width="0.1550%" height="15" fill="rgb(239,54,39)" fg:x="27404" fg:w="92"/><text x="46.4681%" y="191.50"></text></g><g><title>memmove (220 instructions, 0.37%)</title><rect x="46.3301%" y="181" width="0.3707%" height="15" fill="rgb(230,99,41)" fg:x="27496" fg:w="220"/><text x="46.6231%" y="191.50"></text></g><g><title>candid::types::internal::env_id (801 instructions, 1.35%)</title><rect x="45.9459%" y="197" width="1.3497%" height="15" fill="rgb(253,106,12)" fg:x="27268" fg:w="801"/><text x="46.2389%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="47.2956%" y="165" width="0.1382%" height="15" fill="rgb(213,46,41)" fg:x="28069" fg:w="82"/><text x="47.5886%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.21%)</title><rect x="47.2956%" y="181" width="0.2073%" height="15" fill="rgb(215,133,35)" fg:x="28069" fg:w="123"/><text x="47.5886%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.35%)</title><rect x="47.2956%" y="197" width="0.3538%" height="15" fill="rgb(213,28,5)" fg:x="28069" fg:w="210"/><text x="47.5886%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.06%)</title><rect x="47.6495%" y="181" width="0.0640%" height="15" fill="rgb(215,77,49)" fg:x="28279" fg:w="38"/><text x="47.9424%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="47.7135%" y="181" width="0.1533%" height="15" fill="rgb(248,100,22)" fg:x="28317" fg:w="91"/><text x="48.0065%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.13%)</title><rect x="47.8668%" y="149" width="0.1348%" height="15" fill="rgb(208,67,9)" fg:x="28408" fg:w="80"/><text x="48.1598%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 instructions, 0.20%)</title><rect x="47.8668%" y="165" width="0.2039%" height="15" fill="rgb(219,133,21)" fg:x="28408" fg:w="121"/><text x="48.1598%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (197 instructions, 0.33%)</title><rect x="47.8668%" y="181" width="0.3319%" height="15" fill="rgb(246,46,29)" fg:x="28408" fg:w="197"/><text x="48.1598%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.06%)</title><rect x="48.1988%" y="165" width="0.0573%" height="15" fill="rgb(246,185,52)" fg:x="28605" fg:w="34"/><text x="48.4917%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.05%)</title><rect x="48.2560%" y="165" width="0.0522%" height="15" fill="rgb(252,136,11)" fg:x="28639" fg:w="31"/><text x="48.5490%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="48.3083%" y="165" width="0.0236%" height="15" fill="rgb(219,138,53)" fg:x="28670" fg:w="14"/><text x="48.6013%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (202 instructions, 0.34%)</title><rect x="48.1988%" y="181" width="0.3404%" height="15" fill="rgb(211,51,23)" fg:x="28605" fg:w="202"/><text x="48.4917%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="48.5391%" y="133" width="0.1382%" height="15" fill="rgb(247,221,28)" fg:x="28807" fg:w="82"/><text x="48.8321%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.21%)</title><rect x="48.5391%" y="149" width="0.2073%" height="15" fill="rgb(251,222,45)" fg:x="28807" fg:w="123"/><text x="48.8321%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.35%)</title><rect x="48.5391%" y="165" width="0.3471%" height="15" fill="rgb(217,162,53)" fg:x="28807" fg:w="206"/><text x="48.8321%" y="175.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.44%)</title><rect x="48.5391%" y="181" width="0.4381%" height="15" fill="rgb(229,93,14)" fg:x="28807" fg:w="260"/><text x="48.8321%" y="191.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.08%)</title><rect x="48.9772%" y="181" width="0.0792%" height="15" fill="rgb(209,67,49)" fg:x="29067" fg:w="47"/><text x="49.2702%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (68 instructions, 0.11%)</title><rect x="49.0564%" y="181" width="0.1146%" height="15" fill="rgb(213,87,29)" fg:x="29114" fg:w="68"/><text x="49.3494%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="49.1710%" y="181" width="0.0236%" height="15" fill="rgb(205,151,52)" fg:x="29182" fg:w="14"/><text x="49.4640%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (1,562 instructions, 2.63%)</title><rect x="47.6495%" y="197" width="2.6319%" height="15" fill="rgb(253,215,39)" fg:x="28279" fg:w="1562"/><text x="47.9424%" y="207.50">c..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="50.2814%" y="197" width="0.0236%" height="15" fill="rgb(221,220,41)" fg:x="29841" fg:w="14"/><text x="50.5744%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="50.3050%" y="197" width="0.1938%" height="15" fill="rgb(218,133,21)" fg:x="29855" fg:w="115"/><text x="50.5979%" y="207.50"></text></g><g><title>memcpy (115 instructions, 0.19%)</title><rect x="50.4988%" y="197" width="0.1938%" height="15" fill="rgb(221,193,43)" fg:x="29970" fg:w="115"/><text x="50.7917%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="50.6925%" y="165" width="0.1382%" height="15" fill="rgb(240,128,52)" fg:x="30085" fg:w="82"/><text x="50.9855%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.21%)</title><rect x="50.6925%" y="181" width="0.2073%" height="15" fill="rgb(253,114,12)" fg:x="30085" fg:w="123"/><text x="50.9855%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.35%)</title><rect x="50.6925%" y="197" width="0.3471%" height="15" fill="rgb(215,223,47)" fg:x="30085" fg:w="206"/><text x="50.9855%" y="207.50"></text></g><g><title>memcpy (115 instructions, 0.19%)</title><rect x="51.0396%" y="197" width="0.1938%" height="15" fill="rgb(248,225,23)" fg:x="30291" fg:w="115"/><text x="51.3326%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="51.3834%" y="181" width="0.0455%" height="15" fill="rgb(250,108,0)" fg:x="30495" fg:w="27"/><text x="51.6763%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.39%)</title><rect x="51.2334%" y="197" width="0.3892%" height="15" fill="rgb(228,208,7)" fg:x="30406" fg:w="231"/><text x="51.5264%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.13%)</title><rect x="51.6226%" y="165" width="0.1348%" height="15" fill="rgb(244,45,10)" fg:x="30637" fg:w="80"/><text x="51.9156%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (121 instructions, 0.20%)</title><rect x="51.6226%" y="181" width="0.2039%" height="15" fill="rgb(207,125,25)" fg:x="30637" fg:w="121"/><text x="51.9156%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (204 instructions, 0.34%)</title><rect x="51.6226%" y="197" width="0.3437%" height="15" fill="rgb(210,195,18)" fg:x="30637" fg:w="204"/><text x="51.9156%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="51.9664%" y="149" width="0.1938%" height="15" fill="rgb(249,80,12)" fg:x="30841" fg:w="115"/><text x="52.2593%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.26%)</title><rect x="51.9664%" y="165" width="0.2629%" height="15" fill="rgb(221,65,9)" fg:x="30841" fg:w="156"/><text x="52.2593%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.40%)</title><rect x="51.9664%" y="181" width="0.4027%" height="15" fill="rgb(235,49,36)" fg:x="30841" fg:w="239"/><text x="52.2593%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.13%)</title><rect x="52.3691%" y="181" width="0.1348%" height="15" fill="rgb(225,32,20)" fg:x="31080" fg:w="80"/><text x="52.6620%" y="191.50"></text></g><g><title>memcpy (147 instructions, 0.25%)</title><rect x="52.5039%" y="181" width="0.2477%" height="15" fill="rgb(215,141,46)" fg:x="31160" fg:w="147"/><text x="52.7968%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="52.7516%" y="133" width="0.1533%" height="15" fill="rgb(250,160,47)" fg:x="31307" fg:w="91"/><text x="53.0445%" y="143.50"></text></g><g><title>memcpy (211 instructions, 0.36%)</title><rect x="52.9049%" y="133" width="0.3555%" height="15" fill="rgb(216,222,40)" fg:x="31398" fg:w="211"/><text x="53.1979%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="53.2604%" y="133" width="0.1500%" height="15" fill="rgb(234,217,39)" fg:x="31609" fg:w="89"/><text x="53.5534%" y="143.50"></text></g><g><title>__rust_realloc (520 instructions, 0.88%)</title><rect x="52.7516%" y="149" width="0.8762%" height="15" fill="rgb(207,178,40)" fg:x="31307" fg:w="520"/><text x="53.0445%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (563 instructions, 0.95%)</title><rect x="52.7516%" y="165" width="0.9486%" height="15" fill="rgb(221,136,13)" fg:x="31307" fg:w="563"/><text x="53.0445%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (649 instructions, 1.09%)</title><rect x="52.7516%" y="181" width="1.0935%" height="15" fill="rgb(249,199,10)" fg:x="31307" fg:w="649"/><text x="53.0445%" y="191.50"></text></g><g><title>memcpy (147 instructions, 0.25%)</title><rect x="53.8451%" y="181" width="0.2477%" height="15" fill="rgb(249,222,13)" fg:x="31956" fg:w="147"/><text x="54.1381%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="54.0928%" y="165" width="0.0455%" height="15" fill="rgb(244,185,38)" fg:x="32103" fg:w="27"/><text x="54.3858%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.24%)</title><rect x="54.0928%" y="181" width="0.2426%" height="15" fill="rgb(236,202,9)" fg:x="32103" fg:w="144"/><text x="54.3858%" y="191.50"></text></g><g><title>memcmp (123 instructions, 0.21%)</title><rect x="54.3354%" y="133" width="0.2073%" height="15" fill="rgb(250,229,37)" fg:x="32247" fg:w="123"/><text x="54.6284%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (41 instructions, 0.07%)</title><rect x="54.5427%" y="133" width="0.0691%" height="15" fill="rgb(206,174,23)" fg:x="32370" fg:w="41"/><text x="54.8357%" y="143.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (313 instructions, 0.53%)</title><rect x="54.3354%" y="149" width="0.5274%" height="15" fill="rgb(211,33,43)" fg:x="32247" fg:w="313"/><text x="54.6284%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (380 instructions, 0.64%)</title><rect x="54.3354%" y="165" width="0.6403%" height="15" fill="rgb(245,58,50)" fg:x="32247" fg:w="380"/><text x="54.6284%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="54.9757%" y="117" width="0.1938%" height="15" fill="rgb(244,68,36)" fg:x="32627" fg:w="115"/><text x="55.2687%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.26%)</title><rect x="54.9757%" y="133" width="0.2629%" height="15" fill="rgb(232,229,15)" fg:x="32627" fg:w="156"/><text x="55.2687%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.40%)</title><rect x="54.9757%" y="149" width="0.4027%" height="15" fill="rgb(254,30,23)" fg:x="32627" fg:w="239"/><text x="55.2687%" y="159.50"></text></g><g><title>leb128::write::signed (293 instructions, 0.49%)</title><rect x="54.9757%" y="165" width="0.4937%" height="15" fill="rgb(235,160,14)" fg:x="32627" fg:w="293"/><text x="55.2687%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (807 instructions, 1.36%)</title><rect x="54.3354%" y="181" width="1.3598%" height="15" fill="rgb(212,155,44)" fg:x="32247" fg:w="807"/><text x="54.6284%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="55.6952%" y="181" width="0.0590%" height="15" fill="rgb(226,2,50)" fg:x="33054" fg:w="35"/><text x="55.9882%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="55.7542%" y="181" width="0.1028%" height="15" fill="rgb(234,177,6)" fg:x="33089" fg:w="61"/><text x="56.0472%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,767 instructions, 4.66%)</title><rect x="51.9664%" y="197" width="4.6623%" height="15" fill="rgb(217,24,9)" fg:x="30841" fg:w="2767"/><text x="52.2593%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.13%)</title><rect x="56.6287%" y="149" width="0.1348%" height="15" fill="rgb(220,13,46)" fg:x="33608" fg:w="80"/><text x="56.9217%" y="159.50"></text></g><g><title>memcpy (211 instructions, 0.36%)</title><rect x="56.7635%" y="149" width="0.3555%" height="15" fill="rgb(239,221,27)" fg:x="33688" fg:w="211"/><text x="57.0565%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="57.1190%" y="149" width="0.1500%" height="15" fill="rgb(222,198,25)" fg:x="33899" fg:w="89"/><text x="57.4120%" y="159.50"></text></g><g><title>__rust_realloc (509 instructions, 0.86%)</title><rect x="56.6287%" y="165" width="0.8577%" height="15" fill="rgb(211,99,13)" fg:x="33608" fg:w="509"/><text x="56.9217%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (552 instructions, 0.93%)</title><rect x="56.6287%" y="181" width="0.9301%" height="15" fill="rgb(232,111,31)" fg:x="33608" fg:w="552"/><text x="56.9217%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (638 instructions, 1.08%)</title><rect x="56.6287%" y="197" width="1.0750%" height="15" fill="rgb(245,82,37)" fg:x="33608" fg:w="638"/><text x="56.9217%" y="207.50"></text></g><g><title>memcpy (195 instructions, 0.33%)</title><rect x="57.7037%" y="197" width="0.3286%" height="15" fill="rgb(227,149,46)" fg:x="34246" fg:w="195"/><text x="57.9967%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.15%)</title><rect x="58.0323%" y="149" width="0.1533%" height="15" fill="rgb(218,36,50)" fg:x="34441" fg:w="91"/><text x="58.3253%" y="159.50"></text></g><g><title>memcpy (168 instructions, 0.28%)</title><rect x="58.1856%" y="149" width="0.2831%" height="15" fill="rgb(226,80,48)" fg:x="34532" fg:w="168"/><text x="58.4786%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="58.4687%" y="149" width="0.1500%" height="15" fill="rgb(238,224,15)" fg:x="34700" fg:w="89"/><text x="58.7617%" y="159.50"></text></g><g><title>__rust_realloc (477 instructions, 0.80%)</title><rect x="58.0323%" y="165" width="0.8037%" height="15" fill="rgb(241,136,10)" fg:x="34441" fg:w="477"/><text x="58.3253%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (520 instructions, 0.88%)</title><rect x="58.0323%" y="181" width="0.8762%" height="15" fill="rgb(208,32,45)" fg:x="34441" fg:w="520"/><text x="58.3253%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (606 instructions, 1.02%)</title><rect x="58.0323%" y="197" width="1.0211%" height="15" fill="rgb(207,135,9)" fg:x="34441" fg:w="606"/><text x="58.3253%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.22%)</title><rect x="59.0534%" y="197" width="0.2207%" height="15" fill="rgb(206,86,44)" fg:x="35047" fg:w="131"/><text x="59.3463%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.14%)</title><rect x="59.2741%" y="197" width="0.1399%" height="15" fill="rgb(245,177,15)" fg:x="35178" fg:w="83"/><text x="59.5671%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="59.4140%" y="197" width="0.1500%" height="15" fill="rgb(206,64,50)" fg:x="35261" fg:w="89"/><text x="59.7069%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="59.5639%" y="181" width="0.0236%" height="15" fill="rgb(234,36,40)" fg:x="35350" fg:w="14"/><text x="59.8569%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="59.5875%" y="181" width="0.1500%" height="15" fill="rgb(213,64,8)" fg:x="35364" fg:w="89"/><text x="59.8805%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (240 instructions, 0.40%)</title><rect x="59.5639%" y="197" width="0.4044%" height="15" fill="rgb(210,75,36)" fg:x="35350" fg:w="240"/><text x="59.8569%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="59.9683%" y="197" width="0.0135%" height="15" fill="rgb(229,88,21)" fg:x="35590" fg:w="8"/><text x="60.2613%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="59.9818%" y="197" width="0.0236%" height="15" fill="rgb(252,204,47)" fg:x="35598" fg:w="14"/><text x="60.2748%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="60.0054%" y="181" width="0.0455%" height="15" fill="rgb(208,77,27)" fg:x="35612" fg:w="27"/><text x="60.2984%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="60.2447%" y="181" width="0.0455%" height="15" fill="rgb(221,76,26)" fg:x="35754" fg:w="27"/><text x="60.5376%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="60.4873%" y="181" width="0.0455%" height="15" fill="rgb(225,139,18)" fg:x="35898" fg:w="27"/><text x="60.7803%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="60.5328%" y="181" width="0.0388%" height="15" fill="rgb(230,137,11)" fg:x="35925" fg:w="23"/><text x="60.8258%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (479 instructions, 0.81%)</title><rect x="60.0054%" y="197" width="0.8071%" height="15" fill="rgb(212,28,1)" fg:x="35612" fg:w="479"/><text x="60.2984%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="60.8125%" y="197" width="0.1382%" height="15" fill="rgb(248,164,17)" fg:x="36091" fg:w="82"/><text x="61.1055%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="60.9507%" y="197" width="0.1382%" height="15" fill="rgb(222,171,42)" fg:x="36173" fg:w="82"/><text x="61.2436%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.04%)</title><rect x="61.0888%" y="197" width="0.0354%" height="15" fill="rgb(243,84,45)" fg:x="36255" fg:w="21"/><text x="61.3818%" y="207.50"></text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (45,366 instructions, 76.44%)</title><rect x="1.3126%" y="213" width="76.4407%" height="15" fill="rgb(252,49,23)" fg:x="779" fg:w="45366"/><text x="1.6056%" y="223.50">subscriber::__canister_method_setup_subscribe::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.03%)</title><rect x="77.7533%" y="213" width="0.0253%" height="15" fill="rgb(215,19,7)" fg:x="46145" fg:w="15"/><text x="78.0462%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="77.7785%" y="213" width="0.0202%" height="15" fill="rgb(238,81,41)" fg:x="46160" fg:w="12"/><text x="78.0715%" y="223.50"></text></g><g><title>canister_update setup_subscribe (46,312 instructions, 78.03%)</title><rect x="0.0000%" y="229" width="78.0346%" height="15" fill="rgb(210,199,37)" fg:x="0" fg:w="46312"/><text x="0.2930%" y="239.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="78.0346%" y="197" width="0.1938%" height="15" fill="rgb(244,192,49)" fg:x="46312" fg:w="115"/><text x="78.3276%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,167 instructions, 1.97%)</title><rect x="78.0346%" y="213" width="1.9664%" height="15" fill="rgb(226,211,11)" fg:x="46312" fg:w="1167"/><text x="78.3276%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="80.0010%" y="165" width="0.0859%" height="15" fill="rgb(236,162,54)" fg:x="47479" fg:w="51"/><text x="80.2940%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="80.0869%" y="149" width="0.0101%" height="15" fill="rgb(220,229,9)" fg:x="47530" fg:w="6"/><text x="80.3799%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="80.0869%" y="165" width="0.7363%" height="15" fill="rgb(250,87,22)" fg:x="47530" fg:w="437"/><text x="80.3799%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="80.8233%" y="165" width="0.1078%" height="15" fill="rgb(239,43,17)" fg:x="47967" fg:w="64"/><text x="81.1162%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="80.9311%" y="165" width="0.1028%" height="15" fill="rgb(231,177,25)" fg:x="48031" fg:w="61"/><text x="81.2241%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="81.0339%" y="165" width="0.1028%" height="15" fill="rgb(219,179,1)" fg:x="48092" fg:w="61"/><text x="81.3269%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="81.1367%" y="165" width="0.1028%" height="15" fill="rgb(238,219,53)" fg:x="48153" fg:w="61"/><text x="81.4297%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (61 instructions, 0.10%)</title><rect x="81.2395%" y="165" width="0.1028%" height="15" fill="rgb(232,167,36)" fg:x="48214" fg:w="61"/><text x="81.5324%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.09%)</title><rect x="81.3423%" y="165" width="0.0859%" height="15" fill="rgb(244,19,51)" fg:x="48275" fg:w="51"/><text x="81.6352%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.16%)</title><rect x="81.4282%" y="165" width="0.1601%" height="15" fill="rgb(224,6,22)" fg:x="48326" fg:w="95"/><text x="81.7212%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="81.5883%" y="149" width="0.0101%" height="15" fill="rgb(224,145,5)" fg:x="48421" fg:w="6"/><text x="81.8812%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="81.5883%" y="165" width="0.7363%" height="15" fill="rgb(234,130,49)" fg:x="48421" fg:w="437"/><text x="81.8812%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="82.3246%" y="165" width="0.0320%" height="15" fill="rgb(254,6,2)" fg:x="48858" fg:w="19"/><text x="82.6176%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="82.3566%" y="133" width="0.1382%" height="15" fill="rgb(208,96,46)" fg:x="48877" fg:w="82"/><text x="82.6496%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="82.4948%" y="101" width="0.1129%" height="15" fill="rgb(239,3,39)" fg:x="48959" fg:w="67"/><text x="82.7877%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.16%)</title><rect x="82.4948%" y="117" width="0.1618%" height="15" fill="rgb(233,210,1)" fg:x="48959" fg:w="96"/><text x="82.7877%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="82.6565%" y="69" width="0.0185%" height="15" fill="rgb(244,137,37)" fg:x="49055" fg:w="11"/><text x="82.9495%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="82.6751%" y="53" width="0.0590%" height="15" fill="rgb(240,136,2)" fg:x="49066" fg:w="35"/><text x="82.9680%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.11%)</title><rect x="82.6751%" y="69" width="0.1078%" height="15" fill="rgb(239,18,37)" fg:x="49066" fg:w="64"/><text x="82.9680%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.24%)</title><rect x="82.6565%" y="85" width="0.2426%" height="15" fill="rgb(218,185,22)" fg:x="49055" fg:w="144"/><text x="82.9495%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.35%)</title><rect x="82.6565%" y="101" width="0.3538%" height="15" fill="rgb(225,218,4)" fg:x="49055" fg:w="210"/><text x="82.9495%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.37%)</title><rect x="82.6565%" y="117" width="0.3707%" height="15" fill="rgb(230,182,32)" fg:x="49055" fg:w="220"/><text x="82.9495%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 0.76%)</title><rect x="82.4948%" y="133" width="0.7566%" height="15" fill="rgb(242,56,43)" fg:x="48959" fg:w="449"/><text x="82.7877%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.12%)</title><rect x="82.3566%" y="149" width="1.1239%" height="15" fill="rgb(233,99,24)" fg:x="48877" fg:w="667"/><text x="82.6496%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="83.4805%" y="149" width="0.1078%" height="15" fill="rgb(234,209,42)" fg:x="49544" fg:w="64"/><text x="83.7735%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="83.5883%" y="149" width="0.1028%" height="15" fill="rgb(227,7,12)" fg:x="49608" fg:w="61"/><text x="83.8813%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 1.52%)</title><rect x="82.3566%" y="165" width="1.5215%" height="15" fill="rgb(245,203,43)" fg:x="48877" fg:w="903"/><text x="82.6496%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.05%)</title><rect x="83.8781%" y="165" width="0.0455%" height="15" fill="rgb(238,205,33)" fg:x="49780" fg:w="27"/><text x="84.1711%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="83.9236%" y="165" width="0.0775%" height="15" fill="rgb(231,56,7)" fg:x="49807" fg:w="46"/><text x="84.2166%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.16%)</title><rect x="84.0011%" y="165" width="0.1601%" height="15" fill="rgb(244,186,29)" fg:x="49853" fg:w="95"/><text x="84.2941%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="84.1612%" y="133" width="0.0101%" height="15" fill="rgb(234,111,31)" fg:x="49948" fg:w="6"/><text x="84.4542%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.74%)</title><rect x="84.1612%" y="149" width="0.7363%" height="15" fill="rgb(241,149,10)" fg:x="49948" fg:w="437"/><text x="84.4542%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="84.8976%" y="149" width="0.0320%" height="15" fill="rgb(249,206,44)" fg:x="50385" fg:w="19"/><text x="85.1905%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="84.9296%" y="117" width="0.1382%" height="15" fill="rgb(251,153,30)" fg:x="50404" fg:w="82"/><text x="85.2225%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.11%)</title><rect x="85.0677%" y="85" width="0.1129%" height="15" fill="rgb(239,152,38)" fg:x="50486" fg:w="67"/><text x="85.3607%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (96 instructions, 0.16%)</title><rect x="85.0677%" y="101" width="0.1618%" height="15" fill="rgb(249,139,47)" fg:x="50486" fg:w="96"/><text x="85.3607%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="85.2295%" y="53" width="0.0185%" height="15" fill="rgb(244,64,35)" fg:x="50582" fg:w="11"/><text x="85.5225%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="85.2480%" y="37" width="0.0590%" height="15" fill="rgb(216,46,15)" fg:x="50593" fg:w="35"/><text x="85.5410%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.14 (64 instructions, 0.11%)</title><rect x="85.2480%" y="53" width="0.1078%" height="15" fill="rgb(250,74,19)" fg:x="50593" fg:w="64"/><text x="85.5410%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.24%)</title><rect x="85.2295%" y="69" width="0.2426%" height="15" fill="rgb(249,42,33)" fg:x="50582" fg:w="144"/><text x="85.5225%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.35%)</title><rect x="85.2295%" y="85" width="0.3538%" height="15" fill="rgb(242,149,17)" fg:x="50582" fg:w="210"/><text x="85.5225%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.37%)</title><rect x="85.2295%" y="101" width="0.3707%" height="15" fill="rgb(244,29,21)" fg:x="50582" fg:w="220"/><text x="85.5225%" y="111.50"></text></g><g><title>core::fmt::write (449 instructions, 0.76%)</title><rect x="85.0677%" y="117" width="0.7566%" height="15" fill="rgb(220,130,37)" fg:x="50486" fg:w="449"/><text x="85.3607%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 1.12%)</title><rect x="84.9296%" y="133" width="1.1239%" height="15" fill="rgb(211,67,2)" fg:x="50404" fg:w="667"/><text x="85.2225%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.11%)</title><rect x="86.0534%" y="133" width="0.1078%" height="15" fill="rgb(235,68,52)" fg:x="51071" fg:w="64"/><text x="86.3464%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="86.1613%" y="133" width="0.1028%" height="15" fill="rgb(246,142,3)" fg:x="51135" fg:w="61"/><text x="86.4543%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 1.52%)</title><rect x="84.9296%" y="149" width="1.5215%" height="15" fill="rgb(241,25,7)" fg:x="50404" fg:w="903"/><text x="85.2225%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,486 instructions, 2.50%)</title><rect x="84.1612%" y="165" width="2.5039%" height="15" fill="rgb(242,119,39)" fg:x="49948" fg:w="1486"/><text x="84.4542%" y="175.50">b..</text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.08%)</title><rect x="86.6651%" y="165" width="0.0775%" height="15" fill="rgb(241,98,45)" fg:x="51434" fg:w="46"/><text x="86.9581%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="86.7426%" y="165" width="0.0253%" height="15" fill="rgb(254,28,30)" fg:x="51480" fg:w="15"/><text x="87.0356%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="86.7679%" y="165" width="0.0135%" height="15" fill="rgb(241,142,54)" fg:x="51495" fg:w="8"/><text x="87.0608%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.13%)</title><rect x="86.7814%" y="165" width="0.1348%" height="15" fill="rgb(222,85,15)" fg:x="51503" fg:w="80"/><text x="87.0743%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.19%)</title><rect x="86.9162%" y="165" width="0.1938%" height="15" fill="rgb(210,85,47)" fg:x="51583" fg:w="115"/><text x="87.2091%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.66%)</title><rect x="87.1184%" y="165" width="0.6605%" height="15" fill="rgb(224,206,25)" fg:x="51703" fg:w="392"/><text x="87.4113%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.66%)</title><rect x="87.7789%" y="165" width="0.6605%" height="15" fill="rgb(243,201,19)" fg:x="52095" fg:w="392"/><text x="88.0718%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.85%)</title><rect x="88.4394%" y="165" width="0.8492%" height="15" fill="rgb(236,59,4)" fg:x="52487" fg:w="504"/><text x="88.7323%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,505 instructions, 10.96%)</title><rect x="80.0010%" y="181" width="10.9608%" height="15" fill="rgb(254,179,45)" fg:x="47479" fg:w="6505"/><text x="80.2940%" y="191.50">candid::de::I..</text></g><g><title>memcpy (344 instructions, 0.58%)</title><rect x="90.9618%" y="181" width="0.5796%" height="15" fill="rgb(226,14,10)" fg:x="53984" fg:w="344"/><text x="91.2548%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.06%)</title><rect x="91.5414%" y="181" width="0.0623%" height="15" fill="rgb(244,27,41)" fg:x="54328" fg:w="37"/><text x="91.8344%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="91.6038%" y="165" width="0.0135%" height="15" fill="rgb(235,35,32)" fg:x="54365" fg:w="8"/><text x="91.8967%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="91.6172%" y="149" width="0.1500%" height="15" fill="rgb(218,68,31)" fg:x="54373" fg:w="89"/><text x="91.9102%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="91.8868%" y="149" width="0.1028%" height="15" fill="rgb(207,120,37)" fg:x="54533" fg:w="61"/><text x="92.1798%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (292 instructions, 0.49%)</title><rect x="91.6172%" y="165" width="0.4920%" height="15" fill="rgb(227,98,0)" fg:x="54373" fg:w="292"/><text x="91.9102%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (350 instructions, 0.59%)</title><rect x="91.6038%" y="181" width="0.5897%" height="15" fill="rgb(207,7,3)" fg:x="54365" fg:w="350"/><text x="91.8967%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="92.1935%" y="165" width="0.0455%" height="15" fill="rgb(206,98,19)" fg:x="54715" fg:w="27"/><text x="92.4865%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.24%)</title><rect x="92.1935%" y="181" width="0.2393%" height="15" fill="rgb(217,5,26)" fg:x="54715" fg:w="142"/><text x="92.4865%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="92.4328%" y="149" width="0.0236%" height="15" fill="rgb(235,190,38)" fg:x="54857" fg:w="14"/><text x="92.7257%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.02%)</title><rect x="92.4564%" y="149" width="0.0236%" height="15" fill="rgb(247,86,24)" fg:x="54871" fg:w="14"/><text x="92.7493%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="92.4799%" y="149" width="0.1500%" height="15" fill="rgb(205,101,16)" fg:x="54885" fg:w="89"/><text x="92.7729%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (344 instructions, 0.58%)</title><rect x="92.4328%" y="165" width="0.5796%" height="15" fill="rgb(246,168,33)" fg:x="54857" fg:w="344"/><text x="92.7257%" y="175.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.87%)</title><rect x="93.0124%" y="149" width="0.8728%" height="15" fill="rgb(231,114,1)" fg:x="55201" fg:w="518"/><text x="93.3054%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.14%)</title><rect x="93.8852%" y="101" width="0.1382%" height="15" fill="rgb(207,184,53)" fg:x="55719" fg:w="82"/><text x="94.1782%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.21%)</title><rect x="93.8852%" y="117" width="0.2073%" height="15" fill="rgb(224,95,51)" fg:x="55719" fg:w="123"/><text x="94.1782%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.35%)</title><rect x="93.8852%" y="133" width="0.3471%" height="15" fill="rgb(212,188,45)" fg:x="55719" fg:w="206"/><text x="94.1782%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="94.2323%" y="133" width="0.0253%" height="15" fill="rgb(223,154,38)" fg:x="55925" fg:w="15"/><text x="94.5253%" y="143.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="94.2576%" y="133" width="0.0253%" height="15" fill="rgb(251,22,52)" fg:x="55940" fg:w="15"/><text x="94.5506%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 0.72%)</title><rect x="93.8852%" y="149" width="0.7212%" height="15" fill="rgb(229,209,22)" fg:x="55719" fg:w="428"/><text x="94.1782%" y="159.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.87%)</title><rect x="94.6064%" y="149" width="0.8694%" height="15" fill="rgb(234,138,34)" fg:x="56147" fg:w="516"/><text x="94.8994%" y="159.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="95.4758%" y="149" width="0.0118%" height="15" fill="rgb(212,95,11)" fg:x="56663" fg:w="7"/><text x="95.7688%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,546 instructions, 2.60%)</title><rect x="93.0124%" y="165" width="2.6050%" height="15" fill="rgb(240,179,47)" fg:x="55201" fg:w="1546"/><text x="93.3054%" y="175.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="95.6174%" y="165" width="0.0135%" height="15" fill="rgb(240,163,11)" fg:x="56747" fg:w="8"/><text x="95.9103%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (8 instructions, 0.01%)</title><rect x="95.6309%" y="165" width="0.0135%" height="15" fill="rgb(236,37,12)" fg:x="56755" fg:w="8"/><text x="95.9238%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.10%)</title><rect x="95.6443%" y="165" width="0.1028%" height="15" fill="rgb(232,164,16)" fg:x="56763" fg:w="61"/><text x="95.9373%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (2,600 instructions, 4.38%)</title><rect x="92.4328%" y="181" width="4.3809%" height="15" fill="rgb(244,205,15)" fg:x="54857" fg:w="2600"/><text x="92.7257%" y="191.50">ic_c..</text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (10,264 instructions, 17.29%)</title><rect x="80.0010%" y="197" width="17.2946%" height="15" fill="rgb(223,117,47)" fg:x="47479" fg:w="10264"/><text x="80.2940%" y="207.50">subscriber::__canister_..</text></g><g><title>ic_cdk::futures::waker::drop (15 instructions, 0.03%)</title><rect x="97.2956%" y="197" width="0.0253%" height="15" fill="rgb(244,107,35)" fg:x="57743" fg:w="15"/><text x="97.5886%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::__canister_method_setup_subscribe::{{closure}}&gt; (7 instructions, 0.01%)</title><rect x="97.3209%" y="197" width="0.0118%" height="15" fill="rgb(205,140,8)" fg:x="57758" fg:w="7"/><text x="97.6139%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="97.4725%" y="181" width="0.0388%" height="15" fill="rgb(228,84,46)" fg:x="57848" fg:w="23"/><text x="97.7655%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="97.5113%" y="181" width="0.0455%" height="15" fill="rgb(254,188,9)" fg:x="57871" fg:w="27"/><text x="97.8043%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.11%)</title><rect x="97.5568%" y="181" width="0.1129%" height="15" fill="rgb(206,112,54)" fg:x="57898" fg:w="67"/><text x="97.8498%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (321 instructions, 0.54%)</title><rect x="97.3327%" y="197" width="0.5409%" height="15" fill="rgb(216,84,49)" fg:x="57765" fg:w="321"/><text x="97.6257%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (10,835 instructions, 18.26%)</title><rect x="80.0010%" y="213" width="18.2567%" height="15" fill="rgb(214,194,35)" fg:x="47479" fg:w="10835"/><text x="80.2940%" y="223.50">ic_cdk::futures::waker::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="98.2577%" y="197" width="0.1500%" height="15" fill="rgb(249,28,3)" fg:x="58314" fg:w="89"/><text x="98.5507%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="98.4077%" y="197" width="0.1045%" height="15" fill="rgb(222,56,52)" fg:x="58403" fg:w="62"/><text x="98.7007%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (267 instructions, 0.45%)</title><rect x="98.2577%" y="213" width="0.4499%" height="15" fill="rgb(245,217,50)" fg:x="58314" fg:w="267"/><text x="98.5507%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.10%)</title><rect x="98.7076%" y="213" width="0.1045%" height="15" fill="rgb(213,201,24)" fg:x="58581" fg:w="62"/><text x="99.0006%" y="223.50"></text></g><g><title>all (59,348 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(248,116,28)" fg:x="0" fg:w="59348"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (13,036 instructions, 21.97%)</title><rect x="78.0346%" y="229" width="21.9654%" height="15" fill="rgb(219,72,43)" fg:x="46312" fg:w="13036"/><text x="78.3276%" y="239.50">ic_cdk::api::call::callback</text></g></svg></svg>