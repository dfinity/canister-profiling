<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="51628"><g><title>ic_cdk::setup (48 instructions, 0.09%)</title><rect x="0.0000%" y="197" width="0.0930%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.71%)</title><rect x="0.0930%" y="197" width="0.7147%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="369"/><text x="0.3859%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.8077%" y="197" width="0.1588%" height="15" fill="rgb(221,193,54)" fg:x="417" fg:w="82"/><text x="1.1007%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.9665%" y="181" width="0.1588%" height="15" fill="rgb(248,212,6)" fg:x="499" fg:w="82"/><text x="1.2595%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.10%)</title><rect x="1.1254%" y="149" width="0.0968%" height="15" fill="rgb(208,68,35)" fg:x="581" fg:w="50"/><text x="1.4183%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.26%)</title><rect x="1.1254%" y="165" width="0.2576%" height="15" fill="rgb(232,128,0)" fg:x="581" fg:w="133"/><text x="1.4183%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="1.3830%" y="165" width="0.7786%" height="15" fill="rgb(207,160,47)" fg:x="714" fg:w="402"/><text x="1.6759%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="2.1616%" y="165" width="0.1608%" height="15" fill="rgb(228,23,34)" fg:x="1116" fg:w="83"/><text x="2.4546%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.3224%" y="165" width="0.1046%" height="15" fill="rgb(218,30,26)" fg:x="1199" fg:w="54"/><text x="2.6154%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.4270%" y="165" width="0.1046%" height="15" fill="rgb(220,122,19)" fg:x="1253" fg:w="54"/><text x="2.7199%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.5316%" y="165" width="0.1046%" height="15" fill="rgb(250,228,42)" fg:x="1307" fg:w="54"/><text x="2.8245%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="2.6362%" y="165" width="0.1046%" height="15" fill="rgb(240,193,28)" fg:x="1361" fg:w="54"/><text x="2.9291%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="2.7408%" y="165" width="0.1375%" height="15" fill="rgb(216,20,37)" fg:x="1415" fg:w="71"/><text x="3.0337%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="2.8783%" y="165" width="0.1259%" height="15" fill="rgb(206,188,39)" fg:x="1486" fg:w="65"/><text x="3.1713%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="3.0042%" y="165" width="0.7786%" height="15" fill="rgb(217,207,13)" fg:x="1551" fg:w="402"/><text x="3.2972%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.7828%" y="165" width="0.0310%" height="15" fill="rgb(231,73,38)" fg:x="1953" fg:w="16"/><text x="4.0758%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="3.8138%" y="149" width="0.1588%" height="15" fill="rgb(225,20,46)" fg:x="1969" fg:w="82"/><text x="4.1068%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="3.9727%" y="117" width="0.1162%" height="15" fill="rgb(210,31,41)" fg:x="2051" fg:w="60"/><text x="4.2656%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="3.9727%" y="133" width="0.1646%" height="15" fill="rgb(221,200,47)" fg:x="2051" fg:w="85"/><text x="4.2656%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1373%" y="85" width="0.0174%" height="15" fill="rgb(226,26,5)" fg:x="2136" fg:w="9"/><text x="4.4303%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.1547%" y="69" width="0.0581%" height="15" fill="rgb(249,33,26)" fg:x="2145" fg:w="30"/><text x="4.4477%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.1547%" y="85" width="0.1065%" height="15" fill="rgb(235,183,28)" fg:x="2145" fg:w="55"/><text x="4.4477%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.22%)</title><rect x="4.1373%" y="101" width="0.2208%" height="15" fill="rgb(221,5,38)" fg:x="2136" fg:w="114"/><text x="4.4303%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.32%)</title><rect x="4.1373%" y="117" width="0.3235%" height="15" fill="rgb(247,18,42)" fg:x="2136" fg:w="167"/><text x="4.4303%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.33%)</title><rect x="4.1373%" y="133" width="0.3332%" height="15" fill="rgb(241,131,45)" fg:x="2136" fg:w="172"/><text x="4.4303%" y="143.50"></text></g><g><title>core::fmt::write (368 instructions, 0.71%)</title><rect x="3.9727%" y="149" width="0.7128%" height="15" fill="rgb(249,31,29)" fg:x="2051" fg:w="368"/><text x="4.2656%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.11%)</title><rect x="3.8138%" y="165" width="1.1060%" height="15" fill="rgb(225,111,53)" fg:x="1969" fg:w="571"/><text x="4.1068%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="4.9198%" y="165" width="0.1608%" height="15" fill="rgb(238,160,17)" fg:x="2540" fg:w="83"/><text x="5.2128%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="5.0806%" y="165" width="0.1085%" height="15" fill="rgb(214,148,48)" fg:x="2623" fg:w="56"/><text x="5.3735%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="5.1890%" y="165" width="0.1259%" height="15" fill="rgb(232,36,49)" fg:x="2679" fg:w="65"/><text x="5.4820%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="5.3149%" y="165" width="0.1259%" height="15" fill="rgb(209,103,24)" fg:x="2744" fg:w="65"/><text x="5.6079%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="5.4408%" y="149" width="0.7786%" height="15" fill="rgb(229,88,8)" fg:x="2809" fg:w="402"/><text x="5.7338%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.2195%" y="149" width="0.0310%" height="15" fill="rgb(213,181,19)" fg:x="3211" fg:w="16"/><text x="6.5125%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="6.2505%" y="133" width="0.1588%" height="15" fill="rgb(254,191,54)" fg:x="3227" fg:w="82"/><text x="6.5435%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="6.4093%" y="101" width="0.1162%" height="15" fill="rgb(241,83,37)" fg:x="3309" fg:w="60"/><text x="6.7023%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="6.4093%" y="117" width="0.1646%" height="15" fill="rgb(233,36,39)" fg:x="3309" fg:w="85"/><text x="6.7023%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.5740%" y="69" width="0.0174%" height="15" fill="rgb(226,3,54)" fg:x="3394" fg:w="9"/><text x="6.8669%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="6.5914%" y="53" width="0.0581%" height="15" fill="rgb(245,192,40)" fg:x="3403" fg:w="30"/><text x="6.8844%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="6.5914%" y="69" width="0.1065%" height="15" fill="rgb(238,167,29)" fg:x="3403" fg:w="55"/><text x="6.8844%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.22%)</title><rect x="6.5740%" y="85" width="0.2208%" height="15" fill="rgb(232,182,51)" fg:x="3394" fg:w="114"/><text x="6.8669%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.32%)</title><rect x="6.5740%" y="101" width="0.3235%" height="15" fill="rgb(231,60,39)" fg:x="3394" fg:w="167"/><text x="6.8669%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.33%)</title><rect x="6.5740%" y="117" width="0.3332%" height="15" fill="rgb(208,69,12)" fg:x="3394" fg:w="172"/><text x="6.8669%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.71%)</title><rect x="6.4093%" y="133" width="0.7128%" height="15" fill="rgb(235,93,37)" fg:x="3309" fg:w="368"/><text x="6.7023%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 1.11%)</title><rect x="6.2505%" y="149" width="1.1060%" height="15" fill="rgb(213,116,39)" fg:x="3227" fg:w="571"/><text x="6.5435%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="7.3565%" y="149" width="0.1608%" height="15" fill="rgb(222,207,29)" fg:x="3798" fg:w="83"/><text x="7.6494%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="7.5172%" y="149" width="0.1085%" height="15" fill="rgb(206,96,30)" fg:x="3881" fg:w="56"/><text x="7.8102%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="7.6257%" y="133" width="0.1375%" height="15" fill="rgb(218,138,4)" fg:x="3937" fg:w="71"/><text x="7.9187%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.17%)</title><rect x="7.7632%" y="133" width="0.1743%" height="15" fill="rgb(250,191,14)" fg:x="4008" fg:w="90"/><text x="8.0562%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="7.9376%" y="133" width="0.1259%" height="15" fill="rgb(239,60,40)" fg:x="4098" fg:w="65"/><text x="8.2305%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (289 instructions, 0.56%)</title><rect x="7.6257%" y="149" width="0.5598%" height="15" fill="rgb(206,27,48)" fg:x="3937" fg:w="289"/><text x="7.9187%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="8.1855%" y="149" width="0.1588%" height="15" fill="rgb(225,35,8)" fg:x="4226" fg:w="82"/><text x="8.4784%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="8.3443%" y="133" width="0.1375%" height="15" fill="rgb(250,213,24)" fg:x="4308" fg:w="71"/><text x="8.6373%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.17%)</title><rect x="8.4818%" y="133" width="0.1743%" height="15" fill="rgb(247,123,22)" fg:x="4379" fg:w="90"/><text x="8.7748%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="8.6562%" y="133" width="0.1259%" height="15" fill="rgb(231,138,38)" fg:x="4469" fg:w="65"/><text x="8.9491%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.55%)</title><rect x="8.3443%" y="149" width="0.5520%" height="15" fill="rgb(231,145,46)" fg:x="4308" fg:w="285"/><text x="8.6373%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,029 instructions, 3.93%)</title><rect x="5.4408%" y="165" width="3.9300%" height="15" fill="rgb(251,118,11)" fg:x="2809" fg:w="2029"/><text x="5.7338%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="9.3709%" y="165" width="0.1259%" height="15" fill="rgb(217,147,25)" fg:x="4838" fg:w="65"/><text x="9.6639%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.4968%" y="165" width="0.0252%" height="15" fill="rgb(247,81,37)" fg:x="4903" fg:w="13"/><text x="9.7898%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.5220%" y="165" width="0.0252%" height="15" fill="rgb(209,12,38)" fg:x="4916" fg:w="13"/><text x="9.8149%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="9.5471%" y="165" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="4929" fg:w="7"/><text x="9.8401%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="9.5607%" y="165" width="0.0291%" height="15" fill="rgb(248,47,43)" fg:x="4936" fg:w="15"/><text x="9.8537%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.5898%" y="149" width="0.1588%" height="15" fill="rgb(221,10,30)" fg:x="4951" fg:w="82"/><text x="9.8827%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="9.5898%" y="165" width="0.3196%" height="15" fill="rgb(210,229,1)" fg:x="4951" fg:w="165"/><text x="9.8827%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.9094%" y="133" width="0.1588%" height="15" fill="rgb(222,148,37)" fg:x="5116" fg:w="82"/><text x="10.2023%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.22%)</title><rect x="9.9094%" y="149" width="0.2247%" height="15" fill="rgb(234,67,33)" fg:x="5116" fg:w="116"/><text x="10.2023%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.36%)</title><rect x="9.9094%" y="165" width="0.3603%" height="15" fill="rgb(247,98,35)" fg:x="5116" fg:w="186"/><text x="10.2023%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.2696%" y="149" width="0.1588%" height="15" fill="rgb(247,138,52)" fg:x="5302" fg:w="82"/><text x="10.5626%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="10.2696%" y="165" width="0.3196%" height="15" fill="rgb(213,79,30)" fg:x="5302" fg:w="165"/><text x="10.5626%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.5892%" y="165" width="0.1588%" height="15" fill="rgb(246,177,23)" fg:x="5467" fg:w="82"/><text x="10.8822%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="10.7480%" y="165" width="0.1569%" height="15" fill="rgb(230,62,27)" fg:x="5549" fg:w="81"/><text x="11.0410%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.9049%" y="165" width="0.1588%" height="15" fill="rgb(216,154,8)" fg:x="5630" fg:w="82"/><text x="11.1979%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.0638%" y="165" width="0.1588%" height="15" fill="rgb(244,35,45)" fg:x="5712" fg:w="82"/><text x="11.3567%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.2265%" y="165" width="0.1569%" height="15" fill="rgb(251,115,12)" fg:x="5796" fg:w="81"/><text x="11.5194%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="11.3834%" y="165" width="0.7728%" height="15" fill="rgb(240,54,50)" fg:x="5877" fg:w="399"/><text x="11.6763%" y="175.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="12.1562%" y="165" width="0.7728%" height="15" fill="rgb(233,84,52)" fg:x="6276" fg:w="399"/><text x="12.4492%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,138 instructions, 13.83%)</title><rect x="1.1254%" y="181" width="13.8258%" height="15" fill="rgb(207,117,47)" fg:x="581" fg:w="7138"/><text x="1.4183%" y="191.50">candid::de::IDLDe..</text></g><g><title>memcpy (354 instructions, 0.69%)</title><rect x="14.9512%" y="181" width="0.6857%" height="15" fill="rgb(249,43,39)" fg:x="7719" fg:w="354"/><text x="15.2442%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (49 instructions, 0.09%)</title><rect x="15.6369%" y="165" width="0.0949%" height="15" fill="rgb(209,38,44)" fg:x="8073" fg:w="49"/><text x="15.9298%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (87 instructions, 0.17%)</title><rect x="15.6369%" y="181" width="0.1685%" height="15" fill="rgb(236,212,23)" fg:x="8073" fg:w="87"/><text x="15.9298%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="15.8054%" y="181" width="0.1588%" height="15" fill="rgb(242,79,21)" fg:x="8160" fg:w="82"/><text x="16.0983%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="15.9642%" y="165" width="0.0232%" height="15" fill="rgb(211,96,35)" fg:x="8242" fg:w="12"/><text x="16.2572%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="15.9874%" y="149" width="0.1027%" height="15" fill="rgb(253,215,40)" fg:x="8254" fg:w="53"/><text x="16.2804%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.74%)</title><rect x="16.0901%" y="149" width="0.7438%" height="15" fill="rgb(211,81,21)" fg:x="8307" fg:w="384"/><text x="16.3831%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.31%)</title><rect x="16.8339%" y="149" width="0.3138%" height="15" fill="rgb(208,190,38)" fg:x="8691" fg:w="162"/><text x="17.1269%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.62%)</title><rect x="15.9874%" y="165" width="1.6193%" height="15" fill="rgb(235,213,38)" fg:x="8254" fg:w="836"/><text x="16.2804%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="17.6067%" y="165" width="0.1588%" height="15" fill="rgb(237,122,38)" fg:x="9090" fg:w="82"/><text x="17.8997%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="17.7656%" y="165" width="0.2634%" height="15" fill="rgb(244,218,35)" fg:x="9172" fg:w="136"/><text x="18.0585%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,423 instructions, 2.76%)</title><rect x="15.9642%" y="181" width="2.7563%" height="15" fill="rgb(240,68,47)" fg:x="8242" fg:w="1423"/><text x="16.2572%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="18.7205%" y="181" width="0.1588%" height="15" fill="rgb(210,16,53)" fg:x="9665" fg:w="82"/><text x="19.0134%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="18.8793%" y="165" width="0.0232%" height="15" fill="rgb(235,124,12)" fg:x="9747" fg:w="12"/><text x="19.1723%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="18.9025%" y="149" width="0.1027%" height="15" fill="rgb(224,169,11)" fg:x="9759" fg:w="53"/><text x="19.1955%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.74%)</title><rect x="19.0052%" y="149" width="0.7438%" height="15" fill="rgb(250,166,2)" fg:x="9812" fg:w="384"/><text x="19.2982%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.31%)</title><rect x="19.7490%" y="149" width="0.3138%" height="15" fill="rgb(242,216,29)" fg:x="10196" fg:w="162"/><text x="20.0419%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.62%)</title><rect x="18.9025%" y="165" width="1.6193%" height="15" fill="rgb(230,116,27)" fg:x="9759" fg:w="836"/><text x="19.1955%" y="175.50"></text></g><g><title>memcmp (740 instructions, 1.43%)</title><rect x="20.5218%" y="165" width="1.4333%" height="15" fill="rgb(228,99,48)" fg:x="10595" fg:w="740"/><text x="20.8148%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="21.9551%" y="149" width="0.1569%" height="15" fill="rgb(253,11,6)" fg:x="11335" fg:w="81"/><text x="22.2481%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="21.9551%" y="165" width="0.2092%" height="15" fill="rgb(247,143,39)" fg:x="11335" fg:w="108"/><text x="22.2481%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,863 instructions, 3.61%)</title><rect x="18.8793%" y="181" width="3.6085%" height="15" fill="rgb(236,97,10)" fg:x="9747" fg:w="1863"/><text x="19.1723%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="22.4878%" y="133" width="0.1027%" height="15" fill="rgb(233,208,19)" fg:x="11610" fg:w="53"/><text x="22.7808%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="22.4878%" y="149" width="0.1530%" height="15" fill="rgb(216,164,2)" fg:x="11610" fg:w="79"/><text x="22.7808%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="22.4878%" y="165" width="0.5656%" height="15" fill="rgb(220,129,5)" fg:x="11610" fg:w="292"/><text x="22.7808%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.0534%" y="165" width="0.1588%" height="15" fill="rgb(242,17,10)" fg:x="11902" fg:w="82"/><text x="23.3464%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="23.2122%" y="165" width="0.2634%" height="15" fill="rgb(242,107,0)" fg:x="11984" fg:w="136"/><text x="23.5052%" y="175.50"></text></g><g><title>candid::types::internal::env_id (933 instructions, 1.81%)</title><rect x="22.4878%" y="181" width="1.8072%" height="15" fill="rgb(251,28,31)" fg:x="11610" fg:w="933"/><text x="22.7808%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.09%)</title><rect x="24.2950%" y="181" width="0.0872%" height="15" fill="rgb(233,223,10)" fg:x="12543" fg:w="45"/><text x="24.5879%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.3821%" y="165" width="0.2382%" height="15" fill="rgb(215,21,27)" fg:x="12588" fg:w="123"/><text x="24.6751%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.6727%" y="165" width="0.2382%" height="15" fill="rgb(232,23,21)" fg:x="12738" fg:w="123"/><text x="24.9656%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.58%)</title><rect x="24.3821%" y="181" width="0.5811%" height="15" fill="rgb(244,5,23)" fg:x="12588" fg:w="300"/><text x="24.6751%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="24.9632%" y="165" width="0.0542%" height="15" fill="rgb(226,81,46)" fg:x="12888" fg:w="28"/><text x="25.2562%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="25.0174%" y="165" width="0.0542%" height="15" fill="rgb(247,70,30)" fg:x="12916" fg:w="28"/><text x="25.3104%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.0717%" y="165" width="0.0291%" height="15" fill="rgb(212,68,19)" fg:x="12944" fg:w="15"/><text x="25.3646%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.1007%" y="165" width="0.0291%" height="15" fill="rgb(240,187,13)" fg:x="12959" fg:w="15"/><text x="25.3937%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="25.1298%" y="165" width="0.1511%" height="15" fill="rgb(223,113,26)" fg:x="12974" fg:w="78"/><text x="25.4227%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="25.2809%" y="149" width="0.1375%" height="15" fill="rgb(206,192,2)" fg:x="13052" fg:w="71"/><text x="25.5738%" y="159.50"></text></g><g><title>binread::binary_template::write_named (80 instructions, 0.15%)</title><rect x="25.4184%" y="133" width="0.1550%" height="15" fill="rgb(241,108,4)" fg:x="13123" fg:w="80"/><text x="25.7113%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (150 instructions, 0.29%)</title><rect x="25.4184%" y="149" width="0.2905%" height="15" fill="rgb(247,173,49)" fg:x="13123" fg:w="150"/><text x="25.7113%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="25.7089%" y="149" width="0.1259%" height="15" fill="rgb(224,114,35)" fg:x="13273" fg:w="65"/><text x="26.0019%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="25.8348%" y="149" width="0.7786%" height="15" fill="rgb(245,159,27)" fg:x="13338" fg:w="402"/><text x="26.1278%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.22%)</title><rect x="26.6135%" y="133" width="0.2189%" height="15" fill="rgb(245,172,44)" fg:x="13740" fg:w="113"/><text x="26.9064%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="26.8323%" y="101" width="0.1162%" height="15" fill="rgb(236,23,11)" fg:x="13853" fg:w="60"/><text x="27.1253%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="26.8323%" y="117" width="0.1646%" height="15" fill="rgb(205,117,38)" fg:x="13853" fg:w="85"/><text x="27.1253%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="26.9970%" y="69" width="0.0174%" height="15" fill="rgb(237,72,25)" fg:x="13938" fg:w="9"/><text x="27.2899%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="27.0144%" y="53" width="0.0581%" height="15" fill="rgb(244,70,9)" fg:x="13947" fg:w="30"/><text x="27.3074%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="27.0144%" y="69" width="0.1065%" height="15" fill="rgb(217,125,39)" fg:x="13947" fg:w="55"/><text x="27.3074%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.22%)</title><rect x="26.9970%" y="85" width="0.2208%" height="15" fill="rgb(235,36,10)" fg:x="13938" fg:w="114"/><text x="27.2899%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.32%)</title><rect x="26.9970%" y="101" width="0.3235%" height="15" fill="rgb(251,123,47)" fg:x="13938" fg:w="167"/><text x="27.2899%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.33%)</title><rect x="26.9970%" y="117" width="0.3332%" height="15" fill="rgb(221,13,13)" fg:x="13938" fg:w="172"/><text x="27.2899%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.71%)</title><rect x="26.8323%" y="133" width="0.7128%" height="15" fill="rgb(238,131,9)" fg:x="13853" fg:w="368"/><text x="27.1253%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (602 instructions, 1.17%)</title><rect x="26.6135%" y="149" width="1.1660%" height="15" fill="rgb(211,50,8)" fg:x="13740" fg:w="602"/><text x="26.9064%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="27.7795%" y="149" width="0.1608%" height="15" fill="rgb(245,182,24)" fg:x="14342" fg:w="83"/><text x="28.0725%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="27.9403%" y="149" width="0.1065%" height="15" fill="rgb(242,14,37)" fg:x="14425" fg:w="55"/><text x="28.2332%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.0468%" y="133" width="0.1046%" height="15" fill="rgb(246,228,12)" fg:x="14480" fg:w="54"/><text x="28.3398%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.21%)</title><rect x="28.0468%" y="149" width="0.2073%" height="15" fill="rgb(213,55,15)" fg:x="14480" fg:w="107"/><text x="28.3398%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="28.2540%" y="149" width="0.1472%" height="15" fill="rgb(209,9,3)" fg:x="14587" fg:w="76"/><text x="28.5470%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.4013%" y="133" width="0.1046%" height="15" fill="rgb(230,59,30)" fg:x="14663" fg:w="54"/><text x="28.6942%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.6085%" y="133" width="0.1046%" height="15" fill="rgb(209,121,21)" fg:x="14770" fg:w="54"/><text x="28.9015%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="28.8158%" y="133" width="0.1046%" height="15" fill="rgb(220,109,13)" fg:x="14877" fg:w="54"/><text x="29.1087%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.0230%" y="133" width="0.1046%" height="15" fill="rgb(232,18,1)" fg:x="14984" fg:w="54"/><text x="29.3160%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.2303%" y="133" width="0.1046%" height="15" fill="rgb(215,41,42)" fg:x="15091" fg:w="54"/><text x="29.5232%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.4375%" y="133" width="0.1046%" height="15" fill="rgb(224,123,36)" fg:x="15198" fg:w="54"/><text x="29.7305%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.6448%" y="133" width="0.1046%" height="15" fill="rgb(240,125,3)" fg:x="15305" fg:w="54"/><text x="29.9377%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="29.8520%" y="133" width="0.1046%" height="15" fill="rgb(205,98,50)" fg:x="15412" fg:w="54"/><text x="30.1450%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (856 instructions, 1.66%)</title><rect x="28.4013%" y="149" width="1.6580%" height="15" fill="rgb(205,185,37)" fg:x="14663" fg:w="856"/><text x="28.6942%" y="159.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="30.0593%" y="117" width="0.1956%" height="15" fill="rgb(238,207,15)" fg:x="15519" fg:w="101"/><text x="30.3522%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="30.0593%" y="133" width="0.2634%" height="15" fill="rgb(213,199,42)" fg:x="15519" fg:w="136"/><text x="30.3522%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.41%)</title><rect x="30.0593%" y="149" width="0.4087%" height="15" fill="rgb(235,201,11)" fg:x="15519" fg:w="211"/><text x="30.3522%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="30.4680%" y="133" width="0.1046%" height="15" fill="rgb(207,46,11)" fg:x="15730" fg:w="54"/><text x="30.7609%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.21%)</title><rect x="30.4680%" y="149" width="0.2073%" height="15" fill="rgb(241,35,35)" fg:x="15730" fg:w="107"/><text x="30.7609%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 instructions, 0.05%)</title><rect x="30.6752%" y="149" width="0.0465%" height="15" fill="rgb(243,32,47)" fg:x="15837" fg:w="24"/><text x="30.9682%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="30.7217%" y="149" width="0.1259%" height="15" fill="rgb(247,202,23)" fg:x="15861" fg:w="65"/><text x="31.0147%" y="159.50"></text></g><g><title>binread::BinRead::read (3,463 instructions, 6.71%)</title><rect x="25.2809%" y="165" width="6.7076%" height="15" fill="rgb(219,102,11)" fg:x="13052" fg:w="3463"/><text x="25.5738%" y="175.50">binread..</text></g><g><title>__rust_realloc (48 instructions, 0.09%)</title><rect x="31.9885%" y="133" width="0.0930%" height="15" fill="rgb(243,110,44)" fg:x="16515" fg:w="48"/><text x="32.2814%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 instructions, 0.16%)</title><rect x="31.9885%" y="149" width="0.1608%" height="15" fill="rgb(222,74,54)" fg:x="16515" fg:w="83"/><text x="32.2814%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (158 instructions, 0.31%)</title><rect x="31.9885%" y="165" width="0.3060%" height="15" fill="rgb(216,99,12)" fg:x="16515" fg:w="158"/><text x="32.2814%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.2945%" y="165" width="0.3196%" height="15" fill="rgb(226,22,26)" fg:x="16673" fg:w="165"/><text x="32.5875%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.6141%" y="165" width="0.3196%" height="15" fill="rgb(217,163,10)" fg:x="16838" fg:w="165"/><text x="32.9071%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="32.9337%" y="165" width="0.1569%" height="15" fill="rgb(213,25,53)" fg:x="17003" fg:w="81"/><text x="33.2266%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="33.0906%" y="165" width="0.1065%" height="15" fill="rgb(252,105,26)" fg:x="17084" fg:w="55"/><text x="33.3835%" y="175.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,528 instructions, 8.77%)</title><rect x="24.9632%" y="181" width="8.7704%" height="15" fill="rgb(220,39,43)" fg:x="12888" fg:w="4528"/><text x="25.2562%" y="191.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.7336%" y="181" width="0.0213%" height="15" fill="rgb(229,68,48)" fg:x="17416" fg:w="11"/><text x="34.0266%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.7549%" y="181" width="0.0213%" height="15" fill="rgb(252,8,32)" fg:x="17427" fg:w="11"/><text x="34.0479%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.7762%" y="181" width="0.0213%" height="15" fill="rgb(223,20,43)" fg:x="17438" fg:w="11"/><text x="34.0692%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="33.7976%" y="149" width="0.0232%" height="15" fill="rgb(229,81,49)" fg:x="17449" fg:w="12"/><text x="34.0905%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="33.8208%" y="133" width="0.1027%" height="15" fill="rgb(236,28,36)" fg:x="17461" fg:w="53"/><text x="34.1138%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="33.9235%" y="133" width="0.5927%" height="15" fill="rgb(249,185,26)" fg:x="17514" fg:w="306"/><text x="34.2164%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="34.5162%" y="133" width="0.1395%" height="15" fill="rgb(249,174,33)" fg:x="17820" fg:w="72"/><text x="34.8091%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="33.8208%" y="149" width="1.2939%" height="15" fill="rgb(233,201,37)" fg:x="17461" fg:w="668"/><text x="34.1138%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 1.54%)</title><rect x="33.7976%" y="165" width="1.5399%" height="15" fill="rgb(221,78,26)" fg:x="17449" fg:w="795"/><text x="34.0905%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (152 instructions, 0.29%)</title><rect x="35.3374%" y="165" width="0.2944%" height="15" fill="rgb(250,127,30)" fg:x="18244" fg:w="152"/><text x="35.6304%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="35.6318%" y="149" width="0.0232%" height="15" fill="rgb(230,49,44)" fg:x="18396" fg:w="12"/><text x="35.9248%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="35.6551%" y="133" width="0.1027%" height="15" fill="rgb(229,67,23)" fg:x="18408" fg:w="53"/><text x="35.9480%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="35.7577%" y="133" width="0.5927%" height="15" fill="rgb(249,83,47)" fg:x="18461" fg:w="306"/><text x="36.0507%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="36.3504%" y="133" width="0.1395%" height="15" fill="rgb(215,43,3)" fg:x="18767" fg:w="72"/><text x="36.6434%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="35.6551%" y="149" width="1.2939%" height="15" fill="rgb(238,154,13)" fg:x="18408" fg:w="668"/><text x="35.9480%" y="159.50"></text></g><g><title>candid::types::internal::env_add (888 instructions, 1.72%)</title><rect x="35.6318%" y="165" width="1.7200%" height="15" fill="rgb(219,56,2)" fg:x="18396" fg:w="888"/><text x="35.9248%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="37.3518%" y="165" width="0.1472%" height="15" fill="rgb(233,0,4)" fg:x="19284" fg:w="76"/><text x="37.6448%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="37.4990%" y="149" width="0.0232%" height="15" fill="rgb(235,30,7)" fg:x="19360" fg:w="12"/><text x="37.7920%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="37.5223%" y="133" width="0.1027%" height="15" fill="rgb(250,79,13)" fg:x="19372" fg:w="53"/><text x="37.8152%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="37.6249%" y="133" width="0.5927%" height="15" fill="rgb(211,146,34)" fg:x="19425" fg:w="306"/><text x="37.9179%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="38.2176%" y="133" width="0.1395%" height="15" fill="rgb(228,22,38)" fg:x="19731" fg:w="72"/><text x="38.5106%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="37.5223%" y="149" width="1.2939%" height="15" fill="rgb(235,168,5)" fg:x="19372" fg:w="668"/><text x="37.8152%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="38.8161%" y="149" width="0.8639%" height="15" fill="rgb(221,155,16)" fg:x="20040" fg:w="446"/><text x="39.1091%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="39.6800%" y="133" width="0.1569%" height="15" fill="rgb(215,215,53)" fg:x="20486" fg:w="81"/><text x="39.9730%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="39.6800%" y="149" width="0.2092%" height="15" fill="rgb(223,4,10)" fg:x="20486" fg:w="108"/><text x="39.9730%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 2.71%)</title><rect x="37.4990%" y="165" width="2.7136%" height="15" fill="rgb(234,103,6)" fg:x="19360" fg:w="1401"/><text x="37.7920%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.2127%" y="117" width="0.1027%" height="15" fill="rgb(227,97,0)" fg:x="20761" fg:w="53"/><text x="40.5056%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="40.2127%" y="133" width="0.1530%" height="15" fill="rgb(234,150,53)" fg:x="20761" fg:w="79"/><text x="40.5056%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="40.2127%" y="149" width="0.5656%" height="15" fill="rgb(228,201,54)" fg:x="20761" fg:w="292"/><text x="40.5056%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (9 instructions, 0.02%)</title><rect x="40.7783%" y="149" width="0.0174%" height="15" fill="rgb(222,22,37)" fg:x="21053" fg:w="9"/><text x="41.0712%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.7957%" y="117" width="0.1027%" height="15" fill="rgb(237,53,32)" fg:x="21062" fg:w="53"/><text x="41.0887%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="40.7957%" y="133" width="0.1530%" height="15" fill="rgb(233,25,53)" fg:x="21062" fg:w="79"/><text x="41.0887%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="40.7957%" y="149" width="0.5656%" height="15" fill="rgb(210,40,34)" fg:x="21062" fg:w="292"/><text x="41.0887%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (9 instructions, 0.02%)</title><rect x="41.3613%" y="149" width="0.0174%" height="15" fill="rgb(241,220,44)" fg:x="21354" fg:w="9"/><text x="41.6542%" y="159.50"></text></g><g><title>candid::types::internal::env_id (981 instructions, 1.90%)</title><rect x="40.2127%" y="165" width="1.9001%" height="15" fill="rgb(235,28,35)" fg:x="20761" fg:w="981"/><text x="40.5056%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,390 instructions, 8.50%)</title><rect x="33.7976%" y="181" width="8.5031%" height="15" fill="rgb(210,56,17)" fg:x="17449" fg:w="4390"/><text x="34.0905%" y="191.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.09%)</title><rect x="42.3007%" y="181" width="0.0872%" height="15" fill="rgb(224,130,29)" fg:x="21839" fg:w="45"/><text x="42.5937%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.33%)</title><rect x="42.4092%" y="165" width="0.3254%" height="15" fill="rgb(235,212,8)" fg:x="21895" fg:w="168"/><text x="42.7021%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.40%)</title><rect x="42.3879%" y="181" width="0.3990%" height="15" fill="rgb(223,33,50)" fg:x="21884" fg:w="206"/><text x="42.6808%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="42.7869%" y="165" width="0.0542%" height="15" fill="rgb(219,149,13)" fg:x="22090" fg:w="28"/><text x="43.0798%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.8411%" y="165" width="0.0291%" height="15" fill="rgb(250,156,29)" fg:x="22118" fg:w="15"/><text x="43.1341%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.8701%" y="165" width="0.0291%" height="15" fill="rgb(216,193,19)" fg:x="22133" fg:w="15"/><text x="43.1631%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="42.8992%" y="149" width="0.1375%" height="15" fill="rgb(216,135,14)" fg:x="22148" fg:w="71"/><text x="43.1922%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="43.0367%" y="149" width="0.1259%" height="15" fill="rgb(241,47,5)" fg:x="22219" fg:w="65"/><text x="43.3297%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="43.1626%" y="149" width="0.1259%" height="15" fill="rgb(233,42,35)" fg:x="22284" fg:w="65"/><text x="43.4556%" y="159.50"></text></g><g><title>binread::BinRead::read (245 instructions, 0.47%)</title><rect x="42.8992%" y="165" width="0.4745%" height="15" fill="rgb(231,13,6)" fg:x="22148" fg:w="245"/><text x="43.1922%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (55 instructions, 0.11%)</title><rect x="43.3738%" y="165" width="0.1065%" height="15" fill="rgb(207,181,40)" fg:x="22393" fg:w="55"/><text x="43.6667%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="43.4803%" y="165" width="0.1472%" height="15" fill="rgb(254,173,49)" fg:x="22448" fg:w="76"/><text x="43.7733%" y="175.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="43.6275%" y="165" width="0.2034%" height="15" fill="rgb(221,1,38)" fg:x="22524" fg:w="105"/><text x="43.9205%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.28%)</title><rect x="43.8309%" y="165" width="0.2789%" height="15" fill="rgb(206,124,46)" fg:x="22629" fg:w="144"/><text x="44.1238%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (817 instructions, 1.58%)</title><rect x="42.7869%" y="181" width="1.5825%" height="15" fill="rgb(249,21,11)" fg:x="22090" fg:w="817"/><text x="43.0798%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.3693%" y="181" width="0.0213%" height="15" fill="rgb(222,201,40)" fg:x="22907" fg:w="11"/><text x="44.6623%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.3906%" y="181" width="0.0213%" height="15" fill="rgb(235,61,29)" fg:x="22918" fg:w="11"/><text x="44.6836%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4119%" y="181" width="0.0213%" height="15" fill="rgb(219,207,3)" fg:x="22929" fg:w="11"/><text x="44.7049%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.79%)</title><rect x="44.4333%" y="181" width="0.7941%" height="15" fill="rgb(222,56,46)" fg:x="22940" fg:w="410"/><text x="44.7262%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="45.2274%" y="149" width="0.0291%" height="15" fill="rgb(239,76,54)" fg:x="23350" fg:w="15"/><text x="45.5204%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="45.2564%" y="149" width="0.2382%" height="15" fill="rgb(231,124,27)" fg:x="23365" fg:w="123"/><text x="45.5494%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.4947%" y="117" width="0.1220%" height="15" fill="rgb(249,195,6)" fg:x="23488" fg:w="63"/><text x="45.7877%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.40%)</title><rect x="45.4947%" y="133" width="0.4029%" height="15" fill="rgb(237,174,47)" fg:x="23488" fg:w="208"/><text x="45.7877%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.46%)</title><rect x="45.4947%" y="149" width="0.4552%" height="15" fill="rgb(206,201,31)" fg:x="23488" fg:w="235"/><text x="45.7877%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="45.9499%" y="149" width="0.0213%" height="15" fill="rgb(231,57,52)" fg:x="23723" fg:w="11"/><text x="46.2428%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (424 instructions, 0.82%)</title><rect x="45.2274%" y="165" width="0.8213%" height="15" fill="rgb(248,177,22)" fg:x="23350" fg:w="424"/><text x="45.5204%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (461 instructions, 0.89%)</title><rect x="45.2274%" y="181" width="0.8929%" height="15" fill="rgb(215,211,37)" fg:x="23350" fg:w="461"/><text x="45.5204%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="46.1203%" y="165" width="0.1065%" height="15" fill="rgb(241,128,51)" fg:x="23811" fg:w="55"/><text x="46.4133%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="46.2269%" y="165" width="0.1220%" height="15" fill="rgb(227,165,31)" fg:x="23866" fg:w="63"/><text x="46.5198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.39%)</title><rect x="46.1203%" y="181" width="0.3854%" height="15" fill="rgb(228,167,24)" fg:x="23811" fg:w="199"/><text x="46.4133%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="46.5058%" y="165" width="0.0232%" height="15" fill="rgb(228,143,12)" fg:x="24010" fg:w="12"/><text x="46.7987%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5290%" y="165" width="0.0213%" height="15" fill="rgb(249,149,8)" fg:x="24022" fg:w="11"/><text x="46.8220%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5503%" y="165" width="0.0213%" height="15" fill="rgb(243,35,44)" fg:x="24033" fg:w="11"/><text x="46.8433%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="46.5716%" y="165" width="0.2634%" height="15" fill="rgb(246,89,9)" fg:x="24044" fg:w="136"/><text x="46.8646%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (354 instructions, 0.69%)</title><rect x="46.5058%" y="181" width="0.6857%" height="15" fill="rgb(233,213,13)" fg:x="24010" fg:w="354"/><text x="46.7987%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="47.1914%" y="165" width="0.0232%" height="15" fill="rgb(233,141,41)" fg:x="24364" fg:w="12"/><text x="47.4844%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.10%)</title><rect x="47.1914%" y="181" width="0.0968%" height="15" fill="rgb(239,167,4)" fg:x="24364" fg:w="50"/><text x="47.4844%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="47.2883%" y="165" width="0.1065%" height="15" fill="rgb(209,217,16)" fg:x="24414" fg:w="55"/><text x="47.5813%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (199 instructions, 0.39%)</title><rect x="47.2883%" y="181" width="0.3854%" height="15" fill="rgb(219,88,35)" fg:x="24414" fg:w="199"/><text x="47.5813%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="47.6737%" y="165" width="0.0232%" height="15" fill="rgb(220,193,23)" fg:x="24613" fg:w="12"/><text x="47.9667%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="47.6970%" y="149" width="0.1027%" height="15" fill="rgb(230,90,52)" fg:x="24625" fg:w="53"/><text x="47.9900%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.60%)</title><rect x="47.7996%" y="149" width="0.6043%" height="15" fill="rgb(252,106,19)" fg:x="24678" fg:w="312"/><text x="48.0926%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="48.4040%" y="149" width="0.1395%" height="15" fill="rgb(206,74,20)" fg:x="24990" fg:w="72"/><text x="48.6969%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="47.6970%" y="165" width="1.3055%" height="15" fill="rgb(230,138,44)" fg:x="24625" fg:w="674"/><text x="47.9900%" y="175.50"></text></g><g><title>candid::types::internal::env_add (894 instructions, 1.73%)</title><rect x="47.6737%" y="181" width="1.7316%" height="15" fill="rgb(235,182,43)" fg:x="24613" fg:w="894"/><text x="47.9667%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.4054%" y="181" width="0.1472%" height="15" fill="rgb(242,16,51)" fg:x="25507" fg:w="76"/><text x="49.6983%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.5526%" y="181" width="0.1472%" height="15" fill="rgb(248,9,4)" fg:x="25583" fg:w="76"/><text x="49.8455%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="49.6998%" y="181" width="0.1511%" height="15" fill="rgb(210,31,22)" fg:x="25659" fg:w="78"/><text x="49.9927%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="49.8509%" y="149" width="0.0232%" height="15" fill="rgb(239,54,39)" fg:x="25737" fg:w="12"/><text x="50.1438%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="49.8741%" y="133" width="0.1027%" height="15" fill="rgb(230,99,41)" fg:x="25749" fg:w="53"/><text x="50.1671%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="49.9768%" y="133" width="0.5927%" height="15" fill="rgb(253,106,12)" fg:x="25802" fg:w="306"/><text x="50.2697%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="50.5695%" y="133" width="0.1395%" height="15" fill="rgb(213,46,41)" fg:x="26108" fg:w="72"/><text x="50.8624%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="49.8741%" y="149" width="1.2939%" height="15" fill="rgb(215,133,35)" fg:x="25749" fg:w="668"/><text x="50.1671%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (795 instructions, 1.54%)</title><rect x="49.8509%" y="165" width="1.5399%" height="15" fill="rgb(213,28,5)" fg:x="25737" fg:w="795"/><text x="50.1438%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="51.3907%" y="165" width="0.1472%" height="15" fill="rgb(215,77,49)" fg:x="26532" fg:w="76"/><text x="51.6837%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="51.5379%" y="149" width="0.0232%" height="15" fill="rgb(248,100,22)" fg:x="26608" fg:w="12"/><text x="51.8309%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="51.5612%" y="133" width="0.1027%" height="15" fill="rgb(208,67,9)" fg:x="26620" fg:w="53"/><text x="51.8541%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="51.6638%" y="133" width="0.5927%" height="15" fill="rgb(219,133,21)" fg:x="26673" fg:w="306"/><text x="51.9568%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="52.2565%" y="133" width="0.1395%" height="15" fill="rgb(246,46,29)" fg:x="26979" fg:w="72"/><text x="52.5495%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="51.5612%" y="149" width="1.2939%" height="15" fill="rgb(246,185,52)" fg:x="26620" fg:w="668"/><text x="51.8541%" y="159.50"></text></g><g><title>candid::types::internal::env_add (888 instructions, 1.72%)</title><rect x="51.5379%" y="165" width="1.7200%" height="15" fill="rgb(252,136,11)" fg:x="26608" fg:w="888"/><text x="51.8309%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="53.2579%" y="165" width="0.1472%" height="15" fill="rgb(219,138,53)" fg:x="27496" fg:w="76"/><text x="53.5509%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="53.4051%" y="149" width="0.0232%" height="15" fill="rgb(211,51,23)" fg:x="27572" fg:w="12"/><text x="53.6981%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="53.4284%" y="133" width="0.1027%" height="15" fill="rgb(247,221,28)" fg:x="27584" fg:w="53"/><text x="53.7213%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.59%)</title><rect x="53.5310%" y="133" width="0.5927%" height="15" fill="rgb(251,222,45)" fg:x="27637" fg:w="306"/><text x="53.8240%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="54.1237%" y="133" width="0.1395%" height="15" fill="rgb(217,162,53)" fg:x="27943" fg:w="72"/><text x="54.4167%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.29%)</title><rect x="53.4284%" y="149" width="1.2939%" height="15" fill="rgb(229,93,14)" fg:x="27584" fg:w="668"/><text x="53.7213%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="54.7222%" y="149" width="0.8639%" height="15" fill="rgb(209,67,49)" fg:x="28252" fg:w="446"/><text x="55.0152%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="55.5861%" y="133" width="0.1569%" height="15" fill="rgb(213,87,29)" fg:x="28698" fg:w="81"/><text x="55.8791%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="55.5861%" y="149" width="0.2092%" height="15" fill="rgb(205,151,52)" fg:x="28698" fg:w="108"/><text x="55.8791%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,401 instructions, 2.71%)</title><rect x="53.4051%" y="165" width="2.7136%" height="15" fill="rgb(253,215,39)" fg:x="27572" fg:w="1401"/><text x="53.6981%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="56.1188%" y="117" width="0.1027%" height="15" fill="rgb(221,220,41)" fg:x="28973" fg:w="53"/><text x="56.4117%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="56.1188%" y="133" width="0.1530%" height="15" fill="rgb(218,133,21)" fg:x="28973" fg:w="79"/><text x="56.4117%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="56.1188%" y="149" width="0.5656%" height="15" fill="rgb(221,193,43)" fg:x="28973" fg:w="292"/><text x="56.4117%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (9 instructions, 0.02%)</title><rect x="56.6844%" y="149" width="0.0174%" height="15" fill="rgb(240,128,52)" fg:x="29265" fg:w="9"/><text x="56.9773%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.867 (15 instructions, 0.03%)</title><rect x="56.7018%" y="149" width="0.0291%" height="15" fill="rgb(253,114,12)" fg:x="29274" fg:w="15"/><text x="56.9948%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.7308%" y="149" width="0.0213%" height="15" fill="rgb(215,223,47)" fg:x="29289" fg:w="11"/><text x="57.0238%" y="159.50"></text></g><g><title>candid::types::internal::env_id (542 instructions, 1.05%)</title><rect x="56.1188%" y="165" width="1.0498%" height="15" fill="rgb(248,225,23)" fg:x="28973" fg:w="542"/><text x="56.4117%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,875 instructions, 7.51%)</title><rect x="49.8509%" y="181" width="7.5056%" height="15" fill="rgb(250,108,0)" fg:x="25737" fg:w="3875"/><text x="50.1438%" y="191.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="57.3565%" y="181" width="0.1511%" height="15" fill="rgb(228,208,7)" fg:x="29612" fg:w="78"/><text x="57.6494%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="57.5076%" y="165" width="0.0232%" height="15" fill="rgb(244,45,10)" fg:x="29690" fg:w="12"/><text x="57.8005%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="57.5308%" y="149" width="0.1027%" height="15" fill="rgb(207,125,25)" fg:x="29702" fg:w="53"/><text x="57.8238%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.60%)</title><rect x="57.6335%" y="149" width="0.6043%" height="15" fill="rgb(210,195,18)" fg:x="29755" fg:w="312"/><text x="57.9264%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="58.2378%" y="149" width="0.1395%" height="15" fill="rgb(249,80,12)" fg:x="30067" fg:w="72"/><text x="58.5307%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="57.5308%" y="165" width="1.3055%" height="15" fill="rgb(221,65,9)" fg:x="29702" fg:w="674"/><text x="57.8238%" y="175.50"></text></g><g><title>memcmp (467 instructions, 0.90%)</title><rect x="58.8363%" y="165" width="0.9045%" height="15" fill="rgb(235,49,36)" fg:x="30376" fg:w="467"/><text x="59.1293%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="59.7408%" y="149" width="0.1569%" height="15" fill="rgb(225,32,20)" fg:x="30843" fg:w="81"/><text x="60.0338%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="59.7408%" y="165" width="0.2092%" height="15" fill="rgb(215,141,46)" fg:x="30843" fg:w="108"/><text x="60.0338%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,428 instructions, 2.77%)</title><rect x="57.5076%" y="181" width="2.7659%" height="15" fill="rgb(250,160,47)" fg:x="29690" fg:w="1428"/><text x="57.8005%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.2735%" y="133" width="0.1027%" height="15" fill="rgb(216,222,40)" fg:x="31118" fg:w="53"/><text x="60.5665%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="60.3762%" y="133" width="0.2983%" height="15" fill="rgb(234,217,39)" fg:x="31171" fg:w="154"/><text x="60.6691%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.6744%" y="117" width="0.1027%" height="15" fill="rgb(207,178,40)" fg:x="31325" fg:w="53"/><text x="60.9674%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="60.6744%" y="133" width="0.1530%" height="15" fill="rgb(221,136,13)" fg:x="31325" fg:w="79"/><text x="60.9674%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (355 instructions, 0.69%)</title><rect x="60.2735%" y="149" width="0.6876%" height="15" fill="rgb(249,199,10)" fg:x="31118" fg:w="355"/><text x="60.5665%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.3737%" y="133" width="0.1027%" height="15" fill="rgb(249,222,13)" fg:x="31686" fg:w="53"/><text x="61.6666%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="61.4763%" y="133" width="0.2983%" height="15" fill="rgb(244,185,38)" fg:x="31739" fg:w="154"/><text x="61.7693%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.7746%" y="117" width="0.1027%" height="15" fill="rgb(236,202,9)" fg:x="31893" fg:w="53"/><text x="62.0676%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="61.7746%" y="133" width="0.1530%" height="15" fill="rgb(250,229,37)" fg:x="31893" fg:w="79"/><text x="62.0676%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (355 instructions, 0.69%)</title><rect x="61.3737%" y="149" width="0.6876%" height="15" fill="rgb(206,174,23)" fg:x="31686" fg:w="355"/><text x="61.6666%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,136 instructions, 2.20%)</title><rect x="60.2735%" y="165" width="2.2004%" height="15" fill="rgb(211,33,43)" fg:x="31118" fg:w="1136"/><text x="60.5665%" y="175.50">c..</text></g><g><title>candid::types::internal::env_id (1,443 instructions, 2.79%)</title><rect x="60.2735%" y="181" width="2.7950%" height="15" fill="rgb(245,58,50)" fg:x="31118" fg:w="1443"/><text x="60.5665%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.0685%" y="149" width="0.1472%" height="15" fill="rgb(244,68,36)" fg:x="32561" fg:w="76"/><text x="63.3615%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.21%)</title><rect x="63.0685%" y="165" width="0.2131%" height="15" fill="rgb(232,229,15)" fg:x="32561" fg:w="110"/><text x="63.3615%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.35%)</title><rect x="63.0685%" y="181" width="0.3486%" height="15" fill="rgb(254,30,23)" fg:x="32561" fg:w="180"/><text x="63.3615%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="63.4171%" y="165" width="0.0465%" height="15" fill="rgb(235,160,14)" fg:x="32741" fg:w="24"/><text x="63.7101%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.4636%" y="149" width="0.1472%" height="15" fill="rgb(212,155,44)" fg:x="32765" fg:w="76"/><text x="63.7566%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="63.6108%" y="133" width="0.1511%" height="15" fill="rgb(226,2,50)" fg:x="32841" fg:w="78"/><text x="63.9038%" y="143.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.30%)</title><rect x="63.6108%" y="149" width="0.2964%" height="15" fill="rgb(234,177,6)" fg:x="32841" fg:w="153"/><text x="63.9038%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="63.9072%" y="149" width="0.1588%" height="15" fill="rgb(217,24,9)" fg:x="32994" fg:w="82"/><text x="64.2002%" y="159.50"></text></g><g><title>candid::types::internal::unroll (464 instructions, 0.90%)</title><rect x="63.4636%" y="165" width="0.8987%" height="15" fill="rgb(220,13,46)" fg:x="32765" fg:w="464"/><text x="63.7566%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.3624%" y="117" width="0.1027%" height="15" fill="rgb(239,221,27)" fg:x="33229" fg:w="53"/><text x="64.6553%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="64.4650%" y="117" width="0.2983%" height="15" fill="rgb(222,198,25)" fg:x="33282" fg:w="154"/><text x="64.7580%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.7633%" y="101" width="0.1027%" height="15" fill="rgb(211,99,13)" fg:x="33436" fg:w="53"/><text x="65.0563%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="64.7633%" y="117" width="0.1530%" height="15" fill="rgb(232,111,31)" fg:x="33436" fg:w="79"/><text x="65.0563%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (355 instructions, 0.69%)</title><rect x="64.3624%" y="133" width="0.6876%" height="15" fill="rgb(245,82,37)" fg:x="33229" fg:w="355"/><text x="64.6553%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (568 instructions, 1.10%)</title><rect x="64.3624%" y="149" width="1.1002%" height="15" fill="rgb(227,149,46)" fg:x="33229" fg:w="568"/><text x="64.6553%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="65.4625%" y="149" width="0.1375%" height="15" fill="rgb(218,36,50)" fg:x="33797" fg:w="71"/><text x="65.7555%" y="159.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="65.6001%" y="149" width="0.2634%" height="15" fill="rgb(226,80,48)" fg:x="33868" fg:w="136"/><text x="65.8930%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 2.09%)</title><rect x="64.3624%" y="165" width="2.0880%" height="15" fill="rgb(238,224,15)" fg:x="33229" fg:w="1078"/><text x="64.6553%" y="175.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="66.4504%" y="133" width="0.1588%" height="15" fill="rgb(241,136,10)" fg:x="34307" fg:w="82"/><text x="66.7433%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.22%)</title><rect x="66.4504%" y="149" width="0.2247%" height="15" fill="rgb(208,32,45)" fg:x="34307" fg:w="116"/><text x="66.7433%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (186 instructions, 0.36%)</title><rect x="66.4504%" y="165" width="0.3603%" height="15" fill="rgb(207,135,9)" fg:x="34307" fg:w="186"/><text x="66.7433%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="66.8106%" y="117" width="0.1027%" height="15" fill="rgb(206,86,44)" fg:x="34493" fg:w="53"/><text x="67.1036%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="66.8106%" y="133" width="0.1530%" height="15" fill="rgb(245,177,15)" fg:x="34493" fg:w="79"/><text x="67.1036%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.57%)</title><rect x="66.8106%" y="149" width="0.5656%" height="15" fill="rgb(206,64,50)" fg:x="34493" fg:w="292"/><text x="67.1036%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.03%)</title><rect x="67.3762%" y="149" width="0.0349%" height="15" fill="rgb(234,36,40)" fg:x="34785" fg:w="18"/><text x="67.6692%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="67.4111%" y="149" width="0.0213%" height="15" fill="rgb(213,64,8)" fg:x="34803" fg:w="11"/><text x="67.7041%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (434 instructions, 0.84%)</title><rect x="66.8106%" y="165" width="0.8406%" height="15" fill="rgb(210,75,36)" fg:x="34493" fg:w="434"/><text x="67.1036%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="67.6513%" y="117" width="0.1588%" height="15" fill="rgb(229,88,21)" fg:x="34927" fg:w="82"/><text x="67.9442%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.22%)</title><rect x="67.6513%" y="133" width="0.2247%" height="15" fill="rgb(252,204,47)" fg:x="34927" fg:w="116"/><text x="67.9442%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (183 instructions, 0.35%)</title><rect x="67.6513%" y="149" width="0.3545%" height="15" fill="rgb(208,77,27)" fg:x="34927" fg:w="183"/><text x="67.9442%" y="159.50"></text></g><g><title>leb128::write::signed (235 instructions, 0.46%)</title><rect x="67.6513%" y="165" width="0.4552%" height="15" fill="rgb(221,76,26)" fg:x="34927" fg:w="235"/><text x="67.9442%" y="175.50"></text></g><g><title>leb128::write::unsigned (44 instructions, 0.09%)</title><rect x="68.1065%" y="165" width="0.0852%" height="15" fill="rgb(225,139,18)" fg:x="35162" fg:w="44"/><text x="68.3994%" y="175.50"></text></g><g><title>candid::types::internal::Label::get_id (110 instructions, 0.21%)</title><rect x="68.1917%" y="165" width="0.2131%" height="15" fill="rgb(230,137,11)" fg:x="35206" fg:w="110"/><text x="68.4846%" y="175.50"></text></g><g><title>leb128::write::unsigned (212 instructions, 0.41%)</title><rect x="68.4047%" y="165" width="0.4106%" height="15" fill="rgb(212,28,1)" fg:x="35316" fg:w="212"/><text x="68.6977%" y="175.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.09%)</title><rect x="68.8154%" y="149" width="0.0910%" height="15" fill="rgb(248,164,17)" fg:x="35528" fg:w="47"/><text x="69.1083%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (95 instructions, 0.18%)</title><rect x="68.8154%" y="165" width="0.1840%" height="15" fill="rgb(222,171,42)" fg:x="35528" fg:w="95"/><text x="69.1083%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="68.9994%" y="133" width="0.1569%" height="15" fill="rgb(243,84,45)" fg:x="35623" fg:w="81"/><text x="69.2923%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="68.9994%" y="149" width="0.2092%" height="15" fill="rgb(252,49,23)" fg:x="35623" fg:w="108"/><text x="69.2923%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="69.2086%" y="149" width="0.1569%" height="15" fill="rgb(215,19,7)" fg:x="35731" fg:w="81"/><text x="69.5015%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="69.3655%" y="149" width="0.1511%" height="15" fill="rgb(238,81,41)" fg:x="35812" fg:w="78"/><text x="69.6584%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (339 instructions, 0.66%)</title><rect x="68.9994%" y="165" width="0.6566%" height="15" fill="rgb(210,199,37)" fg:x="35623" fg:w="339"/><text x="69.2923%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.6560%" y="165" width="0.0213%" height="15" fill="rgb(244,192,49)" fg:x="35962" fg:w="11"/><text x="69.9490%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,515 instructions, 6.81%)</title><rect x="63.4171%" y="181" width="6.8083%" height="15" fill="rgb(226,211,11)" fg:x="32741" fg:w="3515"/><text x="63.7101%" y="191.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="70.2255%" y="181" width="0.0213%" height="15" fill="rgb(236,162,54)" fg:x="36256" fg:w="11"/><text x="70.5184%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="70.2468%" y="181" width="0.1511%" height="15" fill="rgb(220,229,9)" fg:x="36267" fg:w="78"/><text x="70.5397%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.3978%" y="181" width="0.2034%" height="15" fill="rgb(250,87,22)" fg:x="36345" fg:w="105"/><text x="70.6908%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.22%)</title><rect x="70.6012%" y="149" width="0.2189%" height="15" fill="rgb(239,43,17)" fg:x="36450" fg:w="113"/><text x="70.8942%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 instructions, 0.28%)</title><rect x="70.6012%" y="165" width="0.2847%" height="15" fill="rgb(231,177,25)" fg:x="36450" fg:w="147"/><text x="70.8942%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (214 instructions, 0.41%)</title><rect x="70.6012%" y="181" width="0.4145%" height="15" fill="rgb(219,179,1)" fg:x="36450" fg:w="214"/><text x="70.8942%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="71.0157%" y="181" width="0.2034%" height="15" fill="rgb(238,219,53)" fg:x="36664" fg:w="105"/><text x="71.3087%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="71.2191%" y="181" width="0.1569%" height="15" fill="rgb(232,167,36)" fg:x="36769" fg:w="81"/><text x="71.5121%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="71.3760%" y="181" width="0.1511%" height="15" fill="rgb(244,19,51)" fg:x="36850" fg:w="78"/><text x="71.6690%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.5271%" y="149" width="0.1511%" height="15" fill="rgb(224,6,22)" fg:x="36928" fg:w="78"/><text x="71.8200%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.5271%" y="165" width="0.2169%" height="15" fill="rgb(224,145,5)" fg:x="36928" fg:w="112"/><text x="71.8200%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="71.5271%" y="181" width="0.3467%" height="15" fill="rgb(234,130,49)" fg:x="36928" fg:w="179"/><text x="71.8200%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.8738%" y="133" width="0.1511%" height="15" fill="rgb(254,6,2)" fg:x="37107" fg:w="78"/><text x="72.1668%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.8738%" y="149" width="0.2169%" height="15" fill="rgb(208,96,46)" fg:x="37107" fg:w="112"/><text x="72.1668%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="71.8738%" y="165" width="0.3467%" height="15" fill="rgb(239,3,39)" fg:x="37107" fg:w="179"/><text x="72.1668%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="72.2205%" y="165" width="0.1472%" height="15" fill="rgb(233,210,1)" fg:x="37286" fg:w="76"/><text x="72.5135%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="72.3677%" y="165" width="0.2615%" height="15" fill="rgb(244,137,37)" fg:x="37362" fg:w="135"/><text x="72.6607%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="72.6292%" y="117" width="0.1375%" height="15" fill="rgb(240,136,2)" fg:x="37497" fg:w="71"/><text x="72.9222%" y="127.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="72.7667%" y="117" width="0.3777%" height="15" fill="rgb(239,18,37)" fg:x="37568" fg:w="195"/><text x="73.0597%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="73.1444%" y="117" width="0.1569%" height="15" fill="rgb(218,185,22)" fg:x="37763" fg:w="81"/><text x="73.4374%" y="127.50"></text></g><g><title>__rust_realloc (433 instructions, 0.84%)</title><rect x="72.6292%" y="133" width="0.8387%" height="15" fill="rgb(225,218,4)" fg:x="37497" fg:w="433"/><text x="72.9222%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.91%)</title><rect x="72.6292%" y="149" width="0.9065%" height="15" fill="rgb(230,182,32)" fg:x="37497" fg:w="468"/><text x="72.9222%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (543 instructions, 1.05%)</title><rect x="72.6292%" y="165" width="1.0518%" height="15" fill="rgb(242,56,43)" fg:x="37497" fg:w="543"/><text x="72.9222%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="73.6809%" y="165" width="0.2615%" height="15" fill="rgb(233,99,24)" fg:x="38040" fg:w="135"/><text x="73.9739%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="73.9424%" y="165" width="0.1511%" height="15" fill="rgb(234,209,42)" fg:x="38175" fg:w="78"/><text x="74.2354%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.0935%" y="117" width="0.1027%" height="15" fill="rgb(227,7,12)" fg:x="38253" fg:w="53"/><text x="74.3865%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="74.1962%" y="117" width="0.2983%" height="15" fill="rgb(245,203,43)" fg:x="38306" fg:w="154"/><text x="74.4891%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.4945%" y="101" width="0.1027%" height="15" fill="rgb(238,205,33)" fg:x="38460" fg:w="53"/><text x="74.7874%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="74.4945%" y="117" width="0.1530%" height="15" fill="rgb(231,56,7)" fg:x="38460" fg:w="79"/><text x="74.7874%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (355 instructions, 0.69%)</title><rect x="74.0935%" y="133" width="0.6876%" height="15" fill="rgb(244,186,29)" fg:x="38253" fg:w="355"/><text x="74.3865%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (568 instructions, 1.10%)</title><rect x="74.0935%" y="149" width="1.1002%" height="15" fill="rgb(234,111,31)" fg:x="38253" fg:w="568"/><text x="74.3865%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="75.1937%" y="101" width="0.1511%" height="15" fill="rgb(241,149,10)" fg:x="38821" fg:w="78"/><text x="75.4867%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="75.1937%" y="117" width="0.2169%" height="15" fill="rgb(249,206,44)" fg:x="38821" fg:w="112"/><text x="75.4867%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="75.1937%" y="133" width="0.3467%" height="15" fill="rgb(251,153,30)" fg:x="38821" fg:w="179"/><text x="75.4867%" y="143.50"></text></g><g><title>leb128::write::signed (231 instructions, 0.45%)</title><rect x="75.1937%" y="149" width="0.4474%" height="15" fill="rgb(239,152,38)" fg:x="38821" fg:w="231"/><text x="75.4867%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (936 instructions, 1.81%)</title><rect x="74.0935%" y="165" width="1.8130%" height="15" fill="rgb(249,139,47)" fg:x="38253" fg:w="936"/><text x="74.3865%" y="175.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="75.9065%" y="165" width="0.0581%" height="15" fill="rgb(244,64,35)" fg:x="39189" fg:w="30"/><text x="76.1995%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="75.9646%" y="165" width="0.1511%" height="15" fill="rgb(216,46,15)" fg:x="39219" fg:w="78"/><text x="76.2576%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,515 instructions, 4.87%)</title><rect x="71.8738%" y="181" width="4.8714%" height="15" fill="rgb(250,74,19)" fg:x="37107" fg:w="2515"/><text x="72.1668%" y="191.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.22%)</title><rect x="76.7452%" y="133" width="0.2189%" height="15" fill="rgb(249,42,33)" fg:x="39622" fg:w="113"/><text x="77.0381%" y="143.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="76.9641%" y="133" width="0.3777%" height="15" fill="rgb(242,149,17)" fg:x="39735" fg:w="195"/><text x="77.2570%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="77.3418%" y="133" width="0.1511%" height="15" fill="rgb(244,29,21)" fg:x="39930" fg:w="78"/><text x="77.6347%" y="143.50"></text></g><g><title>__rust_realloc (472 instructions, 0.91%)</title><rect x="76.7452%" y="149" width="0.9142%" height="15" fill="rgb(220,130,37)" fg:x="39622" fg:w="472"/><text x="77.0381%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (507 instructions, 0.98%)</title><rect x="76.7452%" y="165" width="0.9820%" height="15" fill="rgb(211,67,2)" fg:x="39622" fg:w="507"/><text x="77.0381%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (582 instructions, 1.13%)</title><rect x="76.7452%" y="181" width="1.1273%" height="15" fill="rgb(235,68,52)" fg:x="39622" fg:w="582"/><text x="77.0381%" y="191.50"></text></g><g><title>memcpy (180 instructions, 0.35%)</title><rect x="77.8725%" y="181" width="0.3486%" height="15" fill="rgb(246,142,3)" fg:x="40204" fg:w="180"/><text x="78.1654%" y="191.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="78.2211%" y="149" width="0.1956%" height="15" fill="rgb(241,25,7)" fg:x="40384" fg:w="101"/><text x="78.5141%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="78.2211%" y="165" width="0.2634%" height="15" fill="rgb(242,119,39)" fg:x="40384" fg:w="136"/><text x="78.5141%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.41%)</title><rect x="78.2211%" y="181" width="0.4087%" height="15" fill="rgb(241,98,45)" fg:x="40384" fg:w="211"/><text x="78.5141%" y="191.50"></text></g><g><title>memcpy (120 instructions, 0.23%)</title><rect x="78.6298%" y="181" width="0.2324%" height="15" fill="rgb(254,28,30)" fg:x="40595" fg:w="120"/><text x="78.9228%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.8622%" y="181" width="0.1085%" height="15" fill="rgb(241,142,54)" fg:x="40715" fg:w="56"/><text x="79.1552%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.9707%" y="181" width="0.1085%" height="15" fill="rgb(222,85,15)" fg:x="40771" fg:w="56"/><text x="79.2637%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.0792%" y="181" width="0.0213%" height="15" fill="rgb(210,85,47)" fg:x="40827" fg:w="11"/><text x="79.3722%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.1005%" y="181" width="0.2382%" height="15" fill="rgb(224,206,25)" fg:x="40838" fg:w="123"/><text x="79.3935%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.3484%" y="181" width="0.0213%" height="15" fill="rgb(243,201,19)" fg:x="40966" fg:w="11"/><text x="79.6414%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.3697%" y="181" width="0.2382%" height="15" fill="rgb(236,59,4)" fg:x="40977" fg:w="123"/><text x="79.6627%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.19%)</title><rect x="79.6080%" y="181" width="0.1898%" height="15" fill="rgb(254,179,45)" fg:x="41100" fg:w="98"/><text x="79.9009%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="79.7978%" y="181" width="0.1085%" height="15" fill="rgb(226,14,10)" fg:x="41198" fg:w="56"/><text x="80.0908%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="79.9063%" y="181" width="0.1511%" height="15" fill="rgb(244,27,41)" fg:x="41254" fg:w="78"/><text x="80.1992%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="80.0573%" y="181" width="0.1588%" height="15" fill="rgb(235,35,32)" fg:x="41332" fg:w="82"/><text x="80.3503%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.2162%" y="181" width="0.0368%" height="15" fill="rgb(218,68,31)" fg:x="41414" fg:w="19"/><text x="80.5091%" y="191.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (42,776 instructions, 82.85%)</title><rect x="0.9665%" y="197" width="82.8543%" height="15" fill="rgb(207,120,37)" fg:x="499" fg:w="42776"/><text x="1.2595%" y="207.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="83.8208%" y="197" width="0.0232%" height="15" fill="rgb(227,98,0)" fg:x="43275" fg:w="12"/><text x="84.1138%" y="207.50"></text></g><g><title>canister_update setup_subscribe (43,375 instructions, 84.01%)</title><rect x="0.0000%" y="213" width="84.0145%" height="15" fill="rgb(207,7,3)" fg:x="0" fg:w="43375"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="84.0145%" y="197" width="0.1375%" height="15" fill="rgb(206,98,19)" fg:x="43375" fg:w="71"/><text x="84.3075%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="84.1520%" y="149" width="0.1375%" height="15" fill="rgb(217,5,26)" fg:x="43446" fg:w="71"/><text x="84.4450%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="84.2895%" y="149" width="0.7786%" height="15" fill="rgb(235,190,38)" fg:x="43517" fg:w="402"/><text x="84.5825%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="85.0682%" y="149" width="0.1608%" height="15" fill="rgb(247,86,24)" fg:x="43919" fg:w="83"/><text x="85.3611%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.2289%" y="149" width="0.1046%" height="15" fill="rgb(205,101,16)" fg:x="44002" fg:w="54"/><text x="85.5219%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.3335%" y="149" width="0.1046%" height="15" fill="rgb(246,168,33)" fg:x="44056" fg:w="54"/><text x="85.6265%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.4381%" y="149" width="0.1046%" height="15" fill="rgb(231,114,1)" fg:x="44110" fg:w="54"/><text x="85.7311%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.10%)</title><rect x="85.5427%" y="149" width="0.1046%" height="15" fill="rgb(207,184,53)" fg:x="44164" fg:w="54"/><text x="85.8357%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="85.6473%" y="149" width="0.1375%" height="15" fill="rgb(224,95,51)" fg:x="44218" fg:w="71"/><text x="85.9403%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="85.7848%" y="149" width="0.1259%" height="15" fill="rgb(212,188,45)" fg:x="44289" fg:w="65"/><text x="86.0778%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="85.9107%" y="149" width="0.7786%" height="15" fill="rgb(223,154,38)" fg:x="44354" fg:w="402"/><text x="86.2037%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="86.6894%" y="149" width="0.0310%" height="15" fill="rgb(251,22,52)" fg:x="44756" fg:w="16"/><text x="86.9824%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.22%)</title><rect x="86.7204%" y="133" width="0.2189%" height="15" fill="rgb(229,209,22)" fg:x="44772" fg:w="113"/><text x="87.0134%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="86.9393%" y="101" width="0.1162%" height="15" fill="rgb(234,138,34)" fg:x="44885" fg:w="60"/><text x="87.2322%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="86.9393%" y="117" width="0.1646%" height="15" fill="rgb(212,95,11)" fg:x="44885" fg:w="85"/><text x="87.2322%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="87.1039%" y="69" width="0.0174%" height="15" fill="rgb(240,179,47)" fg:x="44970" fg:w="9"/><text x="87.3969%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="87.1213%" y="53" width="0.0581%" height="15" fill="rgb(240,163,11)" fg:x="44979" fg:w="30"/><text x="87.4143%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="87.1213%" y="69" width="0.1065%" height="15" fill="rgb(236,37,12)" fg:x="44979" fg:w="55"/><text x="87.4143%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.22%)</title><rect x="87.1039%" y="85" width="0.2208%" height="15" fill="rgb(232,164,16)" fg:x="44970" fg:w="114"/><text x="87.3969%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.32%)</title><rect x="87.1039%" y="101" width="0.3235%" height="15" fill="rgb(244,205,15)" fg:x="44970" fg:w="167"/><text x="87.3969%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.33%)</title><rect x="87.1039%" y="117" width="0.3332%" height="15" fill="rgb(223,117,47)" fg:x="44970" fg:w="172"/><text x="87.3969%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.71%)</title><rect x="86.9393%" y="133" width="0.7128%" height="15" fill="rgb(244,107,35)" fg:x="44885" fg:w="368"/><text x="87.2322%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (602 instructions, 1.17%)</title><rect x="86.7204%" y="149" width="1.1660%" height="15" fill="rgb(205,140,8)" fg:x="44772" fg:w="602"/><text x="87.0134%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="87.8864%" y="149" width="0.1608%" height="15" fill="rgb(228,84,46)" fg:x="45374" fg:w="83"/><text x="88.1794%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="88.0472%" y="149" width="0.1065%" height="15" fill="rgb(254,188,9)" fg:x="45457" fg:w="55"/><text x="88.3402%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="88.1537%" y="149" width="0.1259%" height="15" fill="rgb(206,112,54)" fg:x="45512" fg:w="65"/><text x="88.4467%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="88.2796%" y="149" width="0.1259%" height="15" fill="rgb(216,84,49)" fg:x="45577" fg:w="65"/><text x="88.5726%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.78%)</title><rect x="88.4055%" y="133" width="0.7786%" height="15" fill="rgb(214,194,35)" fg:x="45642" fg:w="402"/><text x="88.6985%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="89.1842%" y="133" width="0.0310%" height="15" fill="rgb(249,28,3)" fg:x="46044" fg:w="16"/><text x="89.4771%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="89.2152%" y="117" width="0.1472%" height="15" fill="rgb(222,56,52)" fg:x="46060" fg:w="76"/><text x="89.5081%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="89.3624%" y="85" width="0.1162%" height="15" fill="rgb(245,217,50)" fg:x="46136" fg:w="60"/><text x="89.6553%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="89.3624%" y="101" width="0.1646%" height="15" fill="rgb(213,201,24)" fg:x="46136" fg:w="85"/><text x="89.6553%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="89.5270%" y="53" width="0.0174%" height="15" fill="rgb(248,116,28)" fg:x="46221" fg:w="9"/><text x="89.8200%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="89.5444%" y="37" width="0.0581%" height="15" fill="rgb(219,72,43)" fg:x="46230" fg:w="30"/><text x="89.8374%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="89.5444%" y="53" width="0.1065%" height="15" fill="rgb(209,138,14)" fg:x="46230" fg:w="55"/><text x="89.8374%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.22%)</title><rect x="89.5270%" y="69" width="0.2208%" height="15" fill="rgb(222,18,33)" fg:x="46221" fg:w="114"/><text x="89.8200%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.32%)</title><rect x="89.5270%" y="85" width="0.3235%" height="15" fill="rgb(213,199,7)" fg:x="46221" fg:w="167"/><text x="89.8200%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.33%)</title><rect x="89.5270%" y="101" width="0.3332%" height="15" fill="rgb(250,110,10)" fg:x="46221" fg:w="172"/><text x="89.8200%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.71%)</title><rect x="89.3624%" y="117" width="0.7128%" height="15" fill="rgb(248,123,6)" fg:x="46136" fg:w="368"/><text x="89.6553%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.09%)</title><rect x="89.2152%" y="133" width="1.0944%" height="15" fill="rgb(206,91,31)" fg:x="46060" fg:w="565"/><text x="89.5081%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.16%)</title><rect x="90.3095%" y="133" width="0.1608%" height="15" fill="rgb(211,154,13)" fg:x="46625" fg:w="83"/><text x="90.6025%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="90.4703%" y="133" width="0.1065%" height="15" fill="rgb(225,148,7)" fg:x="46708" fg:w="55"/><text x="90.7633%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,280 instructions, 2.48%)</title><rect x="88.4055%" y="149" width="2.4793%" height="15" fill="rgb(220,160,43)" fg:x="45642" fg:w="1280"/><text x="88.6985%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.13%)</title><rect x="90.8848%" y="149" width="0.1259%" height="15" fill="rgb(213,52,39)" fg:x="46922" fg:w="65"/><text x="91.1778%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.0107%" y="149" width="0.0252%" height="15" fill="rgb(243,137,7)" fg:x="46987" fg:w="13"/><text x="91.3037%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.0359%" y="149" width="0.0252%" height="15" fill="rgb(230,79,13)" fg:x="47000" fg:w="13"/><text x="91.3288%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="91.0611%" y="149" width="0.0136%" height="15" fill="rgb(247,105,23)" fg:x="47013" fg:w="7"/><text x="91.3540%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="91.0746%" y="149" width="0.0291%" height="15" fill="rgb(223,179,41)" fg:x="47020" fg:w="15"/><text x="91.3676%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="91.1037%" y="149" width="0.1472%" height="15" fill="rgb(218,9,34)" fg:x="47035" fg:w="76"/><text x="91.3966%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="91.2509%" y="149" width="0.1588%" height="15" fill="rgb(222,106,8)" fg:x="47111" fg:w="82"/><text x="91.5438%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="91.4136%" y="149" width="0.7728%" height="15" fill="rgb(211,220,0)" fg:x="47195" fg:w="399"/><text x="91.7065%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.77%)</title><rect x="92.1864%" y="149" width="0.7728%" height="15" fill="rgb(229,52,16)" fg:x="47594" fg:w="399"/><text x="92.4794%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,363 instructions, 10.39%)</title><rect x="84.1520%" y="165" width="10.3878%" height="15" fill="rgb(212,155,18)" fg:x="43446" fg:w="5363"/><text x="84.4450%" y="175.50">candid::de::I..</text></g><g><title>memcpy (354 instructions, 0.69%)</title><rect x="94.5398%" y="165" width="0.6857%" height="15" fill="rgb(242,21,14)" fg:x="48809" fg:w="354"/><text x="94.8328%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="95.2255%" y="133" width="0.0291%" height="15" fill="rgb(222,19,48)" fg:x="49163" fg:w="15"/><text x="95.5184%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="95.2545%" y="117" width="0.1065%" height="15" fill="rgb(232,45,27)" fg:x="49178" fg:w="55"/><text x="95.5475%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="95.4133%" y="117" width="0.1085%" height="15" fill="rgb(249,103,42)" fg:x="49260" fg:w="56"/><text x="95.7063%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (165 instructions, 0.32%)</title><rect x="95.2545%" y="133" width="0.3196%" height="15" fill="rgb(246,81,33)" fg:x="49178" fg:w="165"/><text x="95.5475%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (217 instructions, 0.42%)</title><rect x="95.2255%" y="149" width="0.4203%" height="15" fill="rgb(252,33,42)" fg:x="49163" fg:w="217"/><text x="95.5184%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (254 instructions, 0.49%)</title><rect x="95.2255%" y="165" width="0.4920%" height="15" fill="rgb(209,212,41)" fg:x="49163" fg:w="254"/><text x="95.5184%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="95.7174%" y="165" width="0.1569%" height="15" fill="rgb(207,154,6)" fg:x="49417" fg:w="81"/><text x="96.0104%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.02%)</title><rect x="95.8743%" y="133" width="0.0232%" height="15" fill="rgb(223,64,47)" fg:x="49498" fg:w="12"/><text x="96.1673%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8976%" y="133" width="0.0213%" height="15" fill="rgb(211,161,38)" fg:x="49510" fg:w="11"/><text x="96.1905%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.9189%" y="133" width="0.0213%" height="15" fill="rgb(219,138,40)" fg:x="49521" fg:w="11"/><text x="96.2118%" y="143.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="95.9402%" y="133" width="0.2634%" height="15" fill="rgb(241,228,46)" fg:x="49532" fg:w="136"/><text x="96.2332%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (354 instructions, 0.69%)</title><rect x="95.8743%" y="149" width="0.6857%" height="15" fill="rgb(223,209,38)" fg:x="49498" fg:w="354"/><text x="96.1673%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.06%)</title><rect x="96.5600%" y="133" width="0.0620%" height="15" fill="rgb(236,164,45)" fg:x="49852" fg:w="32"/><text x="96.8530%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="96.6220%" y="85" width="0.1511%" height="15" fill="rgb(231,15,5)" fg:x="49884" fg:w="78"/><text x="96.9150%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="96.6220%" y="101" width="0.2169%" height="15" fill="rgb(252,35,15)" fg:x="49884" fg:w="112"/><text x="96.9150%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (179 instructions, 0.35%)</title><rect x="96.6220%" y="117" width="0.3467%" height="15" fill="rgb(248,181,18)" fg:x="49884" fg:w="179"/><text x="96.9150%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9687%" y="117" width="0.0213%" height="15" fill="rgb(233,39,42)" fg:x="50063" fg:w="11"/><text x="97.2617%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9900%" y="117" width="0.0213%" height="15" fill="rgb(238,110,33)" fg:x="50074" fg:w="11"/><text x="97.2830%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (363 instructions, 0.70%)</title><rect x="96.6220%" y="133" width="0.7031%" height="15" fill="rgb(233,195,10)" fg:x="49884" fg:w="363"/><text x="96.9150%" y="143.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.06%)</title><rect x="97.3251%" y="133" width="0.0581%" height="15" fill="rgb(254,105,3)" fg:x="50247" fg:w="30"/><text x="97.6181%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (498 instructions, 0.96%)</title><rect x="96.5600%" y="149" width="0.9646%" height="15" fill="rgb(221,225,9)" fg:x="49852" fg:w="498"/><text x="96.8530%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.5343%" y="149" width="0.1569%" height="15" fill="rgb(224,227,45)" fg:x="50355" fg:w="81"/><text x="97.8273%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (1,012 instructions, 1.96%)</title><rect x="95.8743%" y="165" width="1.9602%" height="15" fill="rgb(229,198,43)" fg:x="49498" fg:w="1012"/><text x="96.1673%" y="175.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (7,319 instructions, 14.18%)</title><rect x="84.1520%" y="181" width="14.1764%" height="15" fill="rgb(206,209,35)" fg:x="43446" fg:w="7319"/><text x="84.4450%" y="191.50">subscriber::setup_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="98.3284%" y="181" width="0.0232%" height="15" fill="rgb(245,195,53)" fg:x="50765" fg:w="12"/><text x="98.6214%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="98.3517%" y="181" width="0.0116%" height="15" fill="rgb(240,92,26)" fg:x="50777" fg:w="6"/><text x="98.6446%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="98.3633%" y="181" width="0.1569%" height="15" fill="rgb(207,40,23)" fg:x="50783" fg:w="81"/><text x="98.6563%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.24%)</title><rect x="98.5202%" y="181" width="0.2441%" height="15" fill="rgb(223,111,35)" fg:x="50864" fg:w="126"/><text x="98.8132%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,655 instructions, 14.83%)</title><rect x="84.1520%" y="197" width="14.8272%" height="15" fill="rgb(229,147,28)" fg:x="43446" fg:w="7655"/><text x="84.4450%" y="207.50">ic_cdk::futures::wa..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="98.9792%" y="181" width="0.1511%" height="15" fill="rgb(211,29,28)" fg:x="51101" fg:w="78"/><text x="99.2722%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.32%)</title><rect x="99.1303%" y="181" width="0.3196%" height="15" fill="rgb(228,72,33)" fg:x="51179" fg:w="165"/><text x="99.4233%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (291 instructions, 0.56%)</title><rect x="98.9792%" y="197" width="0.5636%" height="15" fill="rgb(205,214,31)" fg:x="51101" fg:w="291"/><text x="99.2722%" y="207.50"></text></g><g><title>all (51,628 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(224,111,15)" fg:x="0" fg:w="51628"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (8,253 instructions, 15.99%)</title><rect x="84.0145%" y="213" width="15.9855%" height="15" fill="rgb(253,21,26)" fg:x="43375" fg:w="8253"/><text x="84.3075%" y="223.50">ic_cdk::api::call::ca..</text></g></svg></svg>