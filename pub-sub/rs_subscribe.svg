<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="69189"><g><title>ic_cdk::setup (58 instructions, 0.08%)</title><rect x="0.0000%" y="197" width="0.0838%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (683 instructions, 0.99%)</title><rect x="0.0838%" y="197" width="0.9872%" height="15" fill="rgb(217,0,24)" fg:x="58" fg:w="683"/><text x="0.3768%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.0710%" y="197" width="0.1315%" height="15" fill="rgb(221,193,54)" fg:x="741" fg:w="91"/><text x="1.3639%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="1.2025%" y="181" width="0.1315%" height="15" fill="rgb(248,212,6)" fg:x="832" fg:w="91"/><text x="1.4955%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.08%)</title><rect x="1.3340%" y="149" width="0.0824%" height="15" fill="rgb(208,68,35)" fg:x="923" fg:w="57"/><text x="1.6270%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.22%)</title><rect x="1.3340%" y="165" width="0.2240%" height="15" fill="rgb(232,128,0)" fg:x="923" fg:w="155"/><text x="1.6270%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="1.5581%" y="165" width="0.6359%" height="15" fill="rgb(207,160,47)" fg:x="1078" fg:w="440"/><text x="1.8510%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="2.1940%" y="165" width="0.1373%" height="15" fill="rgb(228,23,34)" fg:x="1518" fg:w="95"/><text x="2.4870%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.3313%" y="165" width="0.0867%" height="15" fill="rgb(218,30,26)" fg:x="1613" fg:w="60"/><text x="2.6243%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.4180%" y="165" width="0.0867%" height="15" fill="rgb(220,122,19)" fg:x="1673" fg:w="60"/><text x="2.7110%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5047%" y="165" width="0.0867%" height="15" fill="rgb(250,228,42)" fg:x="1733" fg:w="60"/><text x="2.7977%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="2.5915%" y="165" width="0.0867%" height="15" fill="rgb(240,193,28)" fg:x="1793" fg:w="60"/><text x="2.8844%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="2.6782%" y="165" width="0.1185%" height="15" fill="rgb(216,20,37)" fg:x="1853" fg:w="82"/><text x="2.9711%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="2.7967%" y="165" width="0.1012%" height="15" fill="rgb(206,188,39)" fg:x="1935" fg:w="70"/><text x="3.0897%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="2.8979%" y="165" width="0.6359%" height="15" fill="rgb(217,207,13)" fg:x="2005" fg:w="440"/><text x="3.1908%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="3.5338%" y="165" width="0.0275%" height="15" fill="rgb(231,73,38)" fg:x="2445" fg:w="19"/><text x="3.8268%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="3.5613%" y="149" width="0.1315%" height="15" fill="rgb(225,20,46)" fg:x="2464" fg:w="91"/><text x="3.8542%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="3.6928%" y="117" width="0.0968%" height="15" fill="rgb(210,31,41)" fg:x="2555" fg:w="67"/><text x="3.9858%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="3.6928%" y="133" width="0.1416%" height="15" fill="rgb(221,200,47)" fg:x="2555" fg:w="98"/><text x="3.9858%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8344%" y="85" width="0.0159%" height="15" fill="rgb(226,26,5)" fg:x="2653" fg:w="11"/><text x="4.1274%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="3.8503%" y="69" width="0.0506%" height="15" fill="rgb(249,33,26)" fg:x="2664" fg:w="35"/><text x="4.1433%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="3.8503%" y="85" width="0.0954%" height="15" fill="rgb(235,183,28)" fg:x="2664" fg:w="66"/><text x="4.1433%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.21%)</title><rect x="3.8344%" y="101" width="0.2125%" height="15" fill="rgb(221,5,38)" fg:x="2653" fg:w="147"/><text x="4.1274%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="3.8344%" y="117" width="0.3064%" height="15" fill="rgb(247,18,42)" fg:x="2653" fg:w="212"/><text x="4.1274%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.32%)</title><rect x="3.8344%" y="133" width="0.3209%" height="15" fill="rgb(241,131,45)" fg:x="2653" fg:w="222"/><text x="4.1274%" y="143.50"></text></g><g><title>core::fmt::write (461 instructions, 0.67%)</title><rect x="3.6928%" y="149" width="0.6663%" height="15" fill="rgb(249,31,29)" fg:x="2555" fg:w="461"/><text x="3.9858%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.01%)</title><rect x="3.5613%" y="165" width="1.0074%" height="15" fill="rgb(225,111,53)" fg:x="2464" fg:w="697"/><text x="3.8542%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="4.5686%" y="165" width="0.1373%" height="15" fill="rgb(238,160,17)" fg:x="3161" fg:w="95"/><text x="4.8616%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="4.7060%" y="165" width="0.0911%" height="15" fill="rgb(214,148,48)" fg:x="3256" fg:w="63"/><text x="4.9989%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="4.7970%" y="165" width="0.1098%" height="15" fill="rgb(232,36,49)" fg:x="3319" fg:w="76"/><text x="5.0900%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="4.9068%" y="165" width="0.1012%" height="15" fill="rgb(209,103,24)" fg:x="3395" fg:w="70"/><text x="5.1998%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="5.0080%" y="149" width="0.6359%" height="15" fill="rgb(229,88,8)" fg:x="3465" fg:w="440"/><text x="5.3010%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="5.6440%" y="149" width="0.0275%" height="15" fill="rgb(213,181,19)" fg:x="3905" fg:w="19"/><text x="5.9369%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="5.6714%" y="133" width="0.1315%" height="15" fill="rgb(254,191,54)" fg:x="3924" fg:w="91"/><text x="5.9644%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="5.8029%" y="101" width="0.0968%" height="15" fill="rgb(241,83,37)" fg:x="4015" fg:w="67"/><text x="6.0959%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="5.8029%" y="117" width="0.1416%" height="15" fill="rgb(233,36,39)" fg:x="4015" fg:w="98"/><text x="6.0959%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="5.9446%" y="69" width="0.0159%" height="15" fill="rgb(226,3,54)" fg:x="4113" fg:w="11"/><text x="6.2376%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="5.9605%" y="53" width="0.0506%" height="15" fill="rgb(245,192,40)" fg:x="4124" fg:w="35"/><text x="6.2535%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="5.9605%" y="69" width="0.0954%" height="15" fill="rgb(238,167,29)" fg:x="4124" fg:w="66"/><text x="6.2535%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.21%)</title><rect x="5.9446%" y="85" width="0.2125%" height="15" fill="rgb(232,182,51)" fg:x="4113" fg:w="147"/><text x="6.2376%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="5.9446%" y="101" width="0.3064%" height="15" fill="rgb(231,60,39)" fg:x="4113" fg:w="212"/><text x="6.2376%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.32%)</title><rect x="5.9446%" y="117" width="0.3209%" height="15" fill="rgb(208,69,12)" fg:x="4113" fg:w="222"/><text x="6.2376%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.67%)</title><rect x="5.8029%" y="133" width="0.6663%" height="15" fill="rgb(235,93,37)" fg:x="4015" fg:w="461"/><text x="6.0959%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 1.01%)</title><rect x="5.6714%" y="149" width="1.0074%" height="15" fill="rgb(213,116,39)" fg:x="3924" fg:w="697"/><text x="5.9644%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="6.6788%" y="149" width="0.1373%" height="15" fill="rgb(222,207,29)" fg:x="4621" fg:w="95"/><text x="6.9718%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="6.8161%" y="149" width="0.0911%" height="15" fill="rgb(206,96,30)" fg:x="4716" fg:w="63"/><text x="7.1091%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="6.9072%" y="133" width="0.1185%" height="15" fill="rgb(218,138,4)" fg:x="4779" fg:w="82"/><text x="7.2001%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.0257%" y="133" width="0.1373%" height="15" fill="rgb(250,191,14)" fg:x="4861" fg:w="95"/><text x="7.3187%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.1630%" y="133" width="0.1098%" height="15" fill="rgb(239,60,40)" fg:x="4956" fg:w="76"/><text x="7.4560%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.48%)</title><rect x="6.9072%" y="149" width="0.4842%" height="15" fill="rgb(206,27,48)" fg:x="4779" fg:w="335"/><text x="7.2001%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="7.3913%" y="149" width="0.1315%" height="15" fill="rgb(225,35,8)" fg:x="5114" fg:w="91"/><text x="7.6843%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="7.5229%" y="133" width="0.1185%" height="15" fill="rgb(250,213,24)" fg:x="5205" fg:w="82"/><text x="7.8158%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.14%)</title><rect x="7.6414%" y="133" width="0.1373%" height="15" fill="rgb(247,123,22)" fg:x="5287" fg:w="95"/><text x="7.9344%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="7.7787%" y="133" width="0.1098%" height="15" fill="rgb(231,138,38)" fg:x="5382" fg:w="76"/><text x="8.0717%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.48%)</title><rect x="7.5229%" y="149" width="0.4770%" height="15" fill="rgb(231,145,46)" fg:x="5205" fg:w="330"/><text x="7.8158%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,365 instructions, 3.42%)</title><rect x="5.0080%" y="165" width="3.4182%" height="15" fill="rgb(251,118,11)" fg:x="3465" fg:w="2365"/><text x="5.3010%" y="175.50">bi..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="8.4262%" y="165" width="0.1098%" height="15" fill="rgb(217,147,25)" fg:x="5830" fg:w="76"/><text x="8.7192%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.5360%" y="165" width="0.0217%" height="15" fill="rgb(247,81,37)" fg:x="5906" fg:w="15"/><text x="8.8290%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="8.5577%" y="165" width="0.0217%" height="15" fill="rgb(209,12,38)" fg:x="5921" fg:w="15"/><text x="8.8507%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="8.5794%" y="165" width="0.0130%" height="15" fill="rgb(227,1,9)" fg:x="5936" fg:w="9"/><text x="8.8724%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="8.5924%" y="165" width="0.0260%" height="15" fill="rgb(248,47,43)" fg:x="5945" fg:w="18"/><text x="8.8854%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.6184%" y="149" width="0.1315%" height="15" fill="rgb(221,10,30)" fg:x="5963" fg:w="91"/><text x="8.9114%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="8.6184%" y="165" width="0.2703%" height="15" fill="rgb(210,229,1)" fg:x="5963" fg:w="187"/><text x="8.9114%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="8.8887%" y="133" width="0.1315%" height="15" fill="rgb(222,148,37)" fg:x="6150" fg:w="91"/><text x="9.1817%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.19%)</title><rect x="8.8887%" y="149" width="0.1937%" height="15" fill="rgb(234,67,33)" fg:x="6150" fg:w="134"/><text x="9.1817%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.31%)</title><rect x="8.8887%" y="165" width="0.3122%" height="15" fill="rgb(247,98,35)" fg:x="6150" fg:w="216"/><text x="9.1817%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.2009%" y="149" width="0.1315%" height="15" fill="rgb(247,138,52)" fg:x="6366" fg:w="91"/><text x="9.4939%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.27%)</title><rect x="9.2009%" y="165" width="0.2703%" height="15" fill="rgb(213,79,30)" fg:x="6366" fg:w="187"/><text x="9.4939%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.4712%" y="165" width="0.1315%" height="15" fill="rgb(246,177,23)" fg:x="6553" fg:w="91"/><text x="9.7641%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="9.6027%" y="165" width="0.1243%" height="15" fill="rgb(230,62,27)" fg:x="6644" fg:w="86"/><text x="9.8957%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.7270%" y="165" width="0.1315%" height="15" fill="rgb(216,154,8)" fg:x="6730" fg:w="91"/><text x="10.0199%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="9.8585%" y="165" width="0.1315%" height="15" fill="rgb(244,35,45)" fg:x="6821" fg:w="91"/><text x="10.1515%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="9.9958%" y="165" width="0.1243%" height="15" fill="rgb(251,115,12)" fg:x="6916" fg:w="86"/><text x="10.2888%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.62%)</title><rect x="10.1201%" y="165" width="0.6186%" height="15" fill="rgb(240,54,50)" fg:x="7002" fg:w="428"/><text x="10.4131%" y="175.50"></text></g><g><title>memcpy (428 instructions, 0.62%)</title><rect x="10.7387%" y="165" width="0.6186%" height="15" fill="rgb(233,84,52)" fg:x="7430" fg:w="428"/><text x="11.0317%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,174 instructions, 11.81%)</title><rect x="1.3340%" y="181" width="11.8140%" height="15" fill="rgb(207,117,47)" fg:x="923" fg:w="8174"/><text x="1.6270%" y="191.50">candid::de::IDL..</text></g><g><title>memcpy (380 instructions, 0.55%)</title><rect x="13.1480%" y="181" width="0.5492%" height="15" fill="rgb(249,43,39)" fg:x="9097" fg:w="380"/><text x="13.4410%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (51 instructions, 0.07%)</title><rect x="13.6973%" y="165" width="0.0737%" height="15" fill="rgb(209,38,44)" fg:x="9477" fg:w="51"/><text x="13.9902%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (100 instructions, 0.14%)</title><rect x="13.6973%" y="181" width="0.1445%" height="15" fill="rgb(236,212,23)" fg:x="9477" fg:w="100"/><text x="13.9902%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="13.8418%" y="181" width="0.1315%" height="15" fill="rgb(242,79,21)" fg:x="9577" fg:w="91"/><text x="14.1348%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="13.9733%" y="165" width="0.0202%" height="15" fill="rgb(211,96,35)" fg:x="9668" fg:w="14"/><text x="14.2663%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="13.9936%" y="149" width="0.0853%" height="15" fill="rgb(253,215,40)" fg:x="9682" fg:w="59"/><text x="14.2865%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.49%)</title><rect x="14.0788%" y="149" width="0.4856%" height="15" fill="rgb(211,81,21)" fg:x="9741" fg:w="336"/><text x="14.3718%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="14.5645%" y="149" width="0.1127%" height="15" fill="rgb(208,190,38)" fg:x="10077" fg:w="78"/><text x="14.8574%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.05%)</title><rect x="13.9936%" y="165" width="1.0493%" height="15" fill="rgb(235,213,38)" fg:x="9682" fg:w="726"/><text x="14.2865%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.0429%" y="165" width="0.1315%" height="15" fill="rgb(237,122,38)" fg:x="10408" fg:w="91"/><text x="15.3358%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="15.1744%" y="165" width="0.2197%" height="15" fill="rgb(244,218,35)" fg:x="10499" fg:w="152"/><text x="15.4673%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,380 instructions, 1.99%)</title><rect x="13.9733%" y="181" width="1.9945%" height="15" fill="rgb(240,68,47)" fg:x="9668" fg:w="1380"/><text x="14.2663%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="15.9679%" y="181" width="0.1315%" height="15" fill="rgb(210,16,53)" fg:x="11048" fg:w="91"/><text x="16.2608%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="16.0994%" y="165" width="0.0202%" height="15" fill="rgb(235,124,12)" fg:x="11139" fg:w="14"/><text x="16.3923%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="16.1196%" y="149" width="0.0853%" height="15" fill="rgb(224,169,11)" fg:x="11153" fg:w="59"/><text x="16.4126%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.49%)</title><rect x="16.2049%" y="149" width="0.4856%" height="15" fill="rgb(250,166,2)" fg:x="11212" fg:w="336"/><text x="16.4979%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="16.6905%" y="149" width="0.1127%" height="15" fill="rgb(242,216,29)" fg:x="11548" fg:w="78"/><text x="16.9835%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.05%)</title><rect x="16.1196%" y="165" width="1.0493%" height="15" fill="rgb(230,116,27)" fg:x="11153" fg:w="726"/><text x="16.4126%" y="175.50"></text></g><g><title>memcmp (537 instructions, 0.78%)</title><rect x="17.1689%" y="165" width="0.7761%" height="15" fill="rgb(228,99,48)" fg:x="11879" fg:w="537"/><text x="17.4619%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="17.9450%" y="149" width="0.1243%" height="15" fill="rgb(253,11,6)" fg:x="12416" fg:w="86"/><text x="18.2380%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.17%)</title><rect x="17.9450%" y="165" width="0.1749%" height="15" fill="rgb(247,143,39)" fg:x="12416" fg:w="121"/><text x="18.2380%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,593 instructions, 2.30%)</title><rect x="16.0994%" y="181" width="2.3024%" height="15" fill="rgb(236,97,10)" fg:x="11139" fg:w="1593"/><text x="16.3923%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="18.4018%" y="133" width="0.0853%" height="15" fill="rgb(233,208,19)" fg:x="12732" fg:w="59"/><text x="18.6947%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="18.4018%" y="149" width="0.1359%" height="15" fill="rgb(216,164,2)" fg:x="12732" fg:w="94"/><text x="18.6947%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="18.4018%" y="165" width="0.4553%" height="15" fill="rgb(220,129,5)" fg:x="12732" fg:w="315"/><text x="18.6947%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="18.8570%" y="165" width="0.1315%" height="15" fill="rgb(242,17,10)" fg:x="13047" fg:w="91"/><text x="19.1500%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="18.9886%" y="165" width="0.2197%" height="15" fill="rgb(242,107,0)" fg:x="13138" fg:w="152"/><text x="19.2815%" y="175.50"></text></g><g><title>candid::types::internal::env_id (1,017 instructions, 1.47%)</title><rect x="18.4018%" y="181" width="1.4699%" height="15" fill="rgb(251,28,31)" fg:x="12732" fg:w="1017"/><text x="18.6947%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="19.8717%" y="181" width="0.0766%" height="15" fill="rgb(233,223,10)" fg:x="13749" fg:w="53"/><text x="20.1646%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="19.9483%" y="165" width="0.1908%" height="15" fill="rgb(215,21,27)" fg:x="13802" fg:w="132"/><text x="20.2412%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="20.1896%" y="165" width="0.1908%" height="15" fill="rgb(232,23,21)" fg:x="13969" fg:w="132"/><text x="20.4826%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.48%)</title><rect x="19.9483%" y="181" width="0.4827%" height="15" fill="rgb(244,5,23)" fg:x="13802" fg:w="334"/><text x="20.2412%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="20.4310%" y="165" width="0.0491%" height="15" fill="rgb(226,81,46)" fg:x="14136" fg:w="34"/><text x="20.7240%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="20.4801%" y="165" width="0.0491%" height="15" fill="rgb(247,70,30)" fg:x="14170" fg:w="34"/><text x="20.7731%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="20.5293%" y="165" width="0.0260%" height="15" fill="rgb(212,68,19)" fg:x="14204" fg:w="18"/><text x="20.8222%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="20.5553%" y="165" width="0.0260%" height="15" fill="rgb(240,187,13)" fg:x="14222" fg:w="18"/><text x="20.8483%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="20.5813%" y="165" width="0.1185%" height="15" fill="rgb(223,113,26)" fg:x="14240" fg:w="82"/><text x="20.8743%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="20.6998%" y="149" width="0.1185%" height="15" fill="rgb(206,192,2)" fg:x="14322" fg:w="82"/><text x="20.9928%" y="159.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.13%)</title><rect x="20.8183%" y="133" width="0.1330%" height="15" fill="rgb(241,108,4)" fg:x="14404" fg:w="92"/><text x="21.1113%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.25%)</title><rect x="20.8183%" y="149" width="0.2515%" height="15" fill="rgb(247,173,49)" fg:x="14404" fg:w="174"/><text x="21.1113%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="21.0698%" y="149" width="0.1012%" height="15" fill="rgb(224,114,35)" fg:x="14578" fg:w="70"/><text x="21.3628%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="21.1710%" y="149" width="0.6359%" height="15" fill="rgb(245,159,27)" fg:x="14648" fg:w="440"/><text x="21.4640%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.17%)</title><rect x="21.8069%" y="133" width="0.1749%" height="15" fill="rgb(245,172,44)" fg:x="15088" fg:w="121"/><text x="22.0999%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="21.9818%" y="101" width="0.0968%" height="15" fill="rgb(236,23,11)" fg:x="15209" fg:w="67"/><text x="22.2748%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="21.9818%" y="117" width="0.1416%" height="15" fill="rgb(205,117,38)" fg:x="15209" fg:w="98"/><text x="22.2748%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="22.1235%" y="69" width="0.0159%" height="15" fill="rgb(237,72,25)" fg:x="15307" fg:w="11"/><text x="22.4164%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="22.1394%" y="53" width="0.0506%" height="15" fill="rgb(244,70,9)" fg:x="15318" fg:w="35"/><text x="22.4323%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="22.1394%" y="69" width="0.0954%" height="15" fill="rgb(217,125,39)" fg:x="15318" fg:w="66"/><text x="22.4323%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.21%)</title><rect x="22.1235%" y="85" width="0.2125%" height="15" fill="rgb(235,36,10)" fg:x="15307" fg:w="147"/><text x="22.4164%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="22.1235%" y="101" width="0.3064%" height="15" fill="rgb(251,123,47)" fg:x="15307" fg:w="212"/><text x="22.4164%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.32%)</title><rect x="22.1235%" y="117" width="0.3209%" height="15" fill="rgb(221,13,13)" fg:x="15307" fg:w="222"/><text x="22.4164%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.67%)</title><rect x="21.9818%" y="133" width="0.6663%" height="15" fill="rgb(238,131,9)" fg:x="15209" fg:w="461"/><text x="22.2748%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (727 instructions, 1.05%)</title><rect x="21.8069%" y="149" width="1.0507%" height="15" fill="rgb(211,50,8)" fg:x="15088" fg:w="727"/><text x="22.0999%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="22.8577%" y="149" width="0.1373%" height="15" fill="rgb(245,182,24)" fg:x="15815" fg:w="95"/><text x="23.1506%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="22.9950%" y="149" width="0.0867%" height="15" fill="rgb(242,14,37)" fg:x="15910" fg:w="60"/><text x="23.2880%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="23.0817%" y="133" width="0.0867%" height="15" fill="rgb(246,228,12)" fg:x="15970" fg:w="60"/><text x="23.3747%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.18%)</title><rect x="23.0817%" y="149" width="0.1792%" height="15" fill="rgb(213,55,15)" fg:x="15970" fg:w="124"/><text x="23.3747%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="23.2609%" y="149" width="0.1200%" height="15" fill="rgb(209,9,3)" fg:x="16094" fg:w="83"/><text x="23.5539%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="23.3809%" y="133" width="0.0867%" height="15" fill="rgb(230,59,30)" fg:x="16177" fg:w="60"/><text x="23.6739%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="23.5601%" y="133" width="0.0867%" height="15" fill="rgb(209,121,21)" fg:x="16301" fg:w="60"/><text x="23.8531%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="23.7393%" y="133" width="0.0867%" height="15" fill="rgb(220,109,13)" fg:x="16425" fg:w="60"/><text x="24.0323%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="23.9185%" y="133" width="0.0867%" height="15" fill="rgb(232,18,1)" fg:x="16549" fg:w="60"/><text x="24.2115%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="24.0978%" y="133" width="0.0867%" height="15" fill="rgb(215,41,42)" fg:x="16673" fg:w="60"/><text x="24.3907%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="24.2770%" y="133" width="0.0867%" height="15" fill="rgb(224,123,36)" fg:x="16797" fg:w="60"/><text x="24.5699%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="24.4562%" y="133" width="0.0867%" height="15" fill="rgb(240,125,3)" fg:x="16921" fg:w="60"/><text x="24.7492%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="24.6354%" y="133" width="0.0867%" height="15" fill="rgb(205,98,50)" fg:x="17045" fg:w="60"/><text x="24.9284%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (992 instructions, 1.43%)</title><rect x="23.3809%" y="149" width="1.4338%" height="15" fill="rgb(205,185,37)" fg:x="16177" fg:w="992"/><text x="23.6739%" y="159.50"></text></g><g><title>__rust_realloc (110 instructions, 0.16%)</title><rect x="24.8146%" y="117" width="0.1590%" height="15" fill="rgb(238,207,15)" fg:x="17169" fg:w="110"/><text x="25.1076%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.22%)</title><rect x="24.8146%" y="133" width="0.2240%" height="15" fill="rgb(213,199,42)" fg:x="17169" fg:w="155"/><text x="25.1076%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.35%)</title><rect x="24.8146%" y="149" width="0.3512%" height="15" fill="rgb(235,201,11)" fg:x="17169" fg:w="243"/><text x="25.1076%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="25.1659%" y="133" width="0.0867%" height="15" fill="rgb(207,46,11)" fg:x="17412" fg:w="60"/><text x="25.4588%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.18%)</title><rect x="25.1659%" y="149" width="0.1792%" height="15" fill="rgb(241,35,35)" fg:x="17412" fg:w="124"/><text x="25.4588%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 instructions, 0.04%)</title><rect x="25.3451%" y="149" width="0.0419%" height="15" fill="rgb(243,32,47)" fg:x="17536" fg:w="29"/><text x="25.6380%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="25.3870%" y="149" width="0.1098%" height="15" fill="rgb(247,202,23)" fg:x="17565" fg:w="76"/><text x="25.6800%" y="159.50"></text></g><g><title>binread::BinRead::read (4,032 instructions, 5.83%)</title><rect x="20.6998%" y="165" width="5.8275%" height="15" fill="rgb(219,102,11)" fg:x="14322" fg:w="4032"/><text x="20.9928%" y="175.50">binrea..</text></g><g><title>__rust_realloc (54 instructions, 0.08%)</title><rect x="26.5273%" y="133" width="0.0780%" height="15" fill="rgb(243,110,44)" fg:x="18354" fg:w="54"/><text x="26.8203%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 instructions, 0.14%)</title><rect x="26.5273%" y="149" width="0.1431%" height="15" fill="rgb(222,74,54)" fg:x="18354" fg:w="99"/><text x="26.8203%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.27%)</title><rect x="26.5273%" y="165" width="0.2703%" height="15" fill="rgb(216,99,12)" fg:x="18354" fg:w="187"/><text x="26.8203%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="26.7976%" y="165" width="0.2587%" height="15" fill="rgb(226,22,26)" fg:x="18541" fg:w="179"/><text x="27.0906%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.26%)</title><rect x="27.0563%" y="165" width="0.2587%" height="15" fill="rgb(217,163,10)" fg:x="18720" fg:w="179"/><text x="27.3493%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="27.3150%" y="165" width="0.1243%" height="15" fill="rgb(213,25,53)" fg:x="18899" fg:w="86"/><text x="27.6080%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="27.4393%" y="165" width="0.0867%" height="15" fill="rgb(252,105,26)" fg:x="18985" fg:w="60"/><text x="27.7323%" y="175.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,251 instructions, 7.59%)</title><rect x="20.4310%" y="181" width="7.5894%" height="15" fill="rgb(220,39,43)" fg:x="14136" fg:w="5251"/><text x="20.7240%" y="191.50">&lt;ic_prin..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="28.0204%" y="181" width="0.0188%" height="15" fill="rgb(229,68,48)" fg:x="19387" fg:w="13"/><text x="28.3133%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="28.0391%" y="181" width="0.0188%" height="15" fill="rgb(252,8,32)" fg:x="19400" fg:w="13"/><text x="28.3321%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="28.0579%" y="181" width="0.0188%" height="15" fill="rgb(223,20,43)" fg:x="19413" fg:w="13"/><text x="28.3509%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="28.0767%" y="149" width="0.0202%" height="15" fill="rgb(229,81,49)" fg:x="19426" fg:w="14"/><text x="28.3697%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="28.0970%" y="133" width="0.0853%" height="15" fill="rgb(236,28,36)" fg:x="19440" fg:w="59"/><text x="28.3899%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="28.1822%" y="133" width="0.4596%" height="15" fill="rgb(249,185,26)" fg:x="19499" fg:w="318"/><text x="28.4752%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="28.6418%" y="133" width="0.1127%" height="15" fill="rgb(249,174,33)" fg:x="19817" fg:w="78"/><text x="28.9348%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="28.0970%" y="149" width="1.0233%" height="15" fill="rgb(233,201,37)" fg:x="19440" fg:w="708"/><text x="28.3899%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.23%)</title><rect x="28.0767%" y="165" width="1.2343%" height="15" fill="rgb(221,78,26)" fg:x="19426" fg:w="854"/><text x="28.3697%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.23%)</title><rect x="29.3110%" y="165" width="0.2298%" height="15" fill="rgb(250,127,30)" fg:x="20280" fg:w="159"/><text x="29.6040%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="29.5408%" y="149" width="0.0202%" height="15" fill="rgb(230,49,44)" fg:x="20439" fg:w="14"/><text x="29.8338%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="29.5611%" y="133" width="0.0853%" height="15" fill="rgb(229,67,23)" fg:x="20453" fg:w="59"/><text x="29.8540%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="29.6463%" y="133" width="0.4596%" height="15" fill="rgb(249,83,47)" fg:x="20512" fg:w="318"/><text x="29.9393%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="30.1059%" y="133" width="0.1127%" height="15" fill="rgb(215,43,3)" fg:x="20830" fg:w="78"/><text x="30.3989%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="29.5611%" y="149" width="1.0233%" height="15" fill="rgb(238,154,13)" fg:x="20453" fg:w="708"/><text x="29.8540%" y="159.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.37%)</title><rect x="29.5408%" y="165" width="1.3731%" height="15" fill="rgb(219,56,2)" fg:x="20439" fg:w="950"/><text x="29.8338%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="30.9139%" y="165" width="0.1200%" height="15" fill="rgb(233,0,4)" fg:x="21389" fg:w="83"/><text x="31.2068%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="31.0338%" y="149" width="0.0202%" height="15" fill="rgb(235,30,7)" fg:x="21472" fg:w="14"/><text x="31.3268%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="31.0541%" y="133" width="0.0853%" height="15" fill="rgb(250,79,13)" fg:x="21486" fg:w="59"/><text x="31.3470%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="31.1393%" y="133" width="0.4596%" height="15" fill="rgb(211,146,34)" fg:x="21545" fg:w="318"/><text x="31.4323%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="31.5990%" y="133" width="0.1127%" height="15" fill="rgb(228,22,38)" fg:x="21863" fg:w="78"/><text x="31.8919%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="31.0541%" y="149" width="1.0233%" height="15" fill="rgb(235,168,5)" fg:x="21486" fg:w="708"/><text x="31.3470%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.71%)</title><rect x="32.0774%" y="149" width="0.7097%" height="15" fill="rgb(221,155,16)" fg:x="22194" fg:w="491"/><text x="32.3703%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="32.7870%" y="133" width="0.1243%" height="15" fill="rgb(215,215,53)" fg:x="22685" fg:w="86"/><text x="33.0800%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.17%)</title><rect x="32.7870%" y="149" width="0.1749%" height="15" fill="rgb(223,4,10)" fg:x="22685" fg:w="121"/><text x="33.0800%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 2.21%)</title><rect x="31.0338%" y="165" width="2.2099%" height="15" fill="rgb(234,103,6)" fg:x="21472" fg:w="1529"/><text x="31.3268%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.2437%" y="117" width="0.0853%" height="15" fill="rgb(227,97,0)" fg:x="23001" fg:w="59"/><text x="33.5367%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="33.2437%" y="133" width="0.1359%" height="15" fill="rgb(234,150,53)" fg:x="23001" fg:w="94"/><text x="33.5367%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="33.2437%" y="149" width="0.4553%" height="15" fill="rgb(228,201,54)" fg:x="23001" fg:w="315"/><text x="33.5367%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (11 instructions, 0.02%)</title><rect x="33.6990%" y="149" width="0.0159%" height="15" fill="rgb(222,22,37)" fg:x="23316" fg:w="11"/><text x="33.9920%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="33.7149%" y="117" width="0.0853%" height="15" fill="rgb(237,53,32)" fg:x="23327" fg:w="59"/><text x="34.0079%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="33.7149%" y="133" width="0.1359%" height="15" fill="rgb(233,25,53)" fg:x="23327" fg:w="94"/><text x="34.0079%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="33.7149%" y="149" width="0.4553%" height="15" fill="rgb(210,40,34)" fg:x="23327" fg:w="315"/><text x="34.0079%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (11 instructions, 0.02%)</title><rect x="34.1702%" y="149" width="0.0159%" height="15" fill="rgb(241,220,44)" fg:x="23642" fg:w="11"/><text x="34.4631%" y="159.50"></text></g><g><title>candid::types::internal::env_id (1,068 instructions, 1.54%)</title><rect x="33.2437%" y="165" width="1.5436%" height="15" fill="rgb(235,28,35)" fg:x="23001" fg:w="1068"/><text x="33.5367%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,772 instructions, 6.90%)</title><rect x="28.0767%" y="181" width="6.8971%" height="15" fill="rgb(210,56,17)" fg:x="19426" fg:w="4772"/><text x="28.3697%" y="191.50">candid:..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.08%)</title><rect x="34.9738%" y="181" width="0.0766%" height="15" fill="rgb(224,130,29)" fg:x="24198" fg:w="53"/><text x="35.2667%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.26%)</title><rect x="35.0692%" y="165" width="0.2616%" height="15" fill="rgb(235,212,8)" fg:x="24264" fg:w="181"/><text x="35.3621%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (229 instructions, 0.33%)</title><rect x="35.0504%" y="181" width="0.3310%" height="15" fill="rgb(223,33,50)" fg:x="24251" fg:w="229"/><text x="35.3433%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.05%)</title><rect x="35.3813%" y="165" width="0.0491%" height="15" fill="rgb(219,149,13)" fg:x="24480" fg:w="34"/><text x="35.6743%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="35.4305%" y="165" width="0.0260%" height="15" fill="rgb(250,156,29)" fg:x="24514" fg:w="18"/><text x="35.7235%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (18 instructions, 0.03%)</title><rect x="35.4565%" y="165" width="0.0260%" height="15" fill="rgb(216,193,19)" fg:x="24532" fg:w="18"/><text x="35.7495%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="35.4825%" y="149" width="0.1185%" height="15" fill="rgb(216,135,14)" fg:x="24550" fg:w="82"/><text x="35.7755%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="35.6010%" y="149" width="0.1012%" height="15" fill="rgb(241,47,5)" fg:x="24632" fg:w="70"/><text x="35.8940%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="35.7022%" y="149" width="0.1098%" height="15" fill="rgb(233,42,35)" fg:x="24702" fg:w="76"/><text x="35.9952%" y="159.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.42%)</title><rect x="35.4825%" y="165" width="0.4191%" height="15" fill="rgb(231,13,6)" fg:x="24550" fg:w="290"/><text x="35.7755%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.09%)</title><rect x="35.9017%" y="165" width="0.0911%" height="15" fill="rgb(207,181,40)" fg:x="24840" fg:w="63"/><text x="36.1946%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="35.9927%" y="165" width="0.1200%" height="15" fill="rgb(254,173,49)" fg:x="24903" fg:w="83"/><text x="36.2857%" y="175.50"></text></g><g><title>memcpy (115 instructions, 0.17%)</title><rect x="36.1127%" y="165" width="0.1662%" height="15" fill="rgb(221,1,38)" fg:x="24986" fg:w="115"/><text x="36.4056%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (163 instructions, 0.24%)</title><rect x="36.2789%" y="165" width="0.2356%" height="15" fill="rgb(206,124,46)" fg:x="25101" fg:w="163"/><text x="36.5719%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (965 instructions, 1.39%)</title><rect x="35.3813%" y="181" width="1.3947%" height="15" fill="rgb(249,21,11)" fg:x="24480" fg:w="965"/><text x="35.6743%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.7761%" y="181" width="0.0188%" height="15" fill="rgb(222,201,40)" fg:x="25445" fg:w="13"/><text x="37.0690%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.7949%" y="181" width="0.0188%" height="15" fill="rgb(235,61,29)" fg:x="25458" fg:w="13"/><text x="37.0878%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.8137%" y="181" width="0.0188%" height="15" fill="rgb(219,207,3)" fg:x="25471" fg:w="13"/><text x="37.1066%" y="191.50"></text></g><g><title>memcpy (440 instructions, 0.64%)</title><rect x="36.8324%" y="181" width="0.6359%" height="15" fill="rgb(222,56,46)" fg:x="25484" fg:w="440"/><text x="37.1254%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="37.4684%" y="149" width="0.0275%" height="15" fill="rgb(239,76,54)" fg:x="25924" fg:w="19"/><text x="37.7614%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="37.4958%" y="149" width="0.1908%" height="15" fill="rgb(231,124,27)" fg:x="25943" fg:w="132"/><text x="37.7888%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="37.6866%" y="117" width="0.0968%" height="15" fill="rgb(249,195,6)" fg:x="26075" fg:w="67"/><text x="37.9796%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (230 instructions, 0.33%)</title><rect x="37.6866%" y="133" width="0.3324%" height="15" fill="rgb(237,174,47)" fg:x="26075" fg:w="230"/><text x="37.9796%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (265 instructions, 0.38%)</title><rect x="37.6866%" y="149" width="0.3830%" height="15" fill="rgb(206,201,31)" fg:x="26075" fg:w="265"/><text x="37.9796%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.0696%" y="149" width="0.0188%" height="15" fill="rgb(231,57,52)" fg:x="26340" fg:w="13"/><text x="38.3626%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (491 instructions, 0.71%)</title><rect x="37.4684%" y="165" width="0.7097%" height="15" fill="rgb(248,177,22)" fg:x="25924" fg:w="491"/><text x="37.7614%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (540 instructions, 0.78%)</title><rect x="37.4684%" y="181" width="0.7805%" height="15" fill="rgb(215,211,37)" fg:x="25924" fg:w="540"/><text x="37.7614%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="38.2489%" y="165" width="0.0896%" height="15" fill="rgb(241,128,51)" fg:x="26464" fg:w="62"/><text x="38.5418%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.10%)</title><rect x="38.3385%" y="165" width="0.0968%" height="15" fill="rgb(227,165,31)" fg:x="26526" fg:w="67"/><text x="38.6314%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.33%)</title><rect x="38.2489%" y="181" width="0.3295%" height="15" fill="rgb(228,167,24)" fg:x="26464" fg:w="228"/><text x="38.5418%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="38.5784%" y="165" width="0.0202%" height="15" fill="rgb(228,143,12)" fg:x="26692" fg:w="14"/><text x="38.8714%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.5986%" y="165" width="0.0188%" height="15" fill="rgb(249,149,8)" fg:x="26706" fg:w="13"/><text x="38.8916%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.6174%" y="165" width="0.0188%" height="15" fill="rgb(243,35,44)" fg:x="26719" fg:w="13"/><text x="38.9104%" y="175.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="38.6362%" y="165" width="0.2197%" height="15" fill="rgb(246,89,9)" fg:x="26732" fg:w="152"/><text x="38.9292%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (404 instructions, 0.58%)</title><rect x="38.5784%" y="181" width="0.5839%" height="15" fill="rgb(233,213,13)" fg:x="26692" fg:w="404"/><text x="38.8714%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="39.1623%" y="165" width="0.0202%" height="15" fill="rgb(233,141,41)" fg:x="27096" fg:w="14"/><text x="39.4553%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.09%)</title><rect x="39.1623%" y="181" width="0.0911%" height="15" fill="rgb(239,167,4)" fg:x="27096" fg:w="63"/><text x="39.4553%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.09%)</title><rect x="39.2533%" y="165" width="0.0896%" height="15" fill="rgb(209,217,16)" fg:x="27159" fg:w="62"/><text x="39.5463%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (222 instructions, 0.32%)</title><rect x="39.2533%" y="181" width="0.3209%" height="15" fill="rgb(219,88,35)" fg:x="27159" fg:w="222"/><text x="39.5463%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="39.5742%" y="165" width="0.0202%" height="15" fill="rgb(220,193,23)" fg:x="27381" fg:w="14"/><text x="39.8672%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="39.5944%" y="149" width="0.0853%" height="15" fill="rgb(230,90,52)" fg:x="27395" fg:w="59"/><text x="39.8874%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (324 instructions, 0.47%)</title><rect x="39.6797%" y="149" width="0.4683%" height="15" fill="rgb(252,106,19)" fg:x="27454" fg:w="324"/><text x="39.9727%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="40.1480%" y="149" width="0.1127%" height="15" fill="rgb(206,74,20)" fg:x="27778" fg:w="78"/><text x="40.4410%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (714 instructions, 1.03%)</title><rect x="39.5944%" y="165" width="1.0320%" height="15" fill="rgb(230,138,44)" fg:x="27395" fg:w="714"/><text x="39.8874%" y="175.50"></text></g><g><title>candid::types::internal::env_add (956 instructions, 1.38%)</title><rect x="39.5742%" y="181" width="1.3817%" height="15" fill="rgb(235,182,43)" fg:x="27381" fg:w="956"/><text x="39.8672%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="40.9559%" y="181" width="0.1200%" height="15" fill="rgb(242,16,51)" fg:x="28337" fg:w="83"/><text x="41.2489%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="41.0759%" y="181" width="0.1200%" height="15" fill="rgb(248,9,4)" fg:x="28420" fg:w="83"/><text x="41.3689%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="41.1959%" y="181" width="0.1185%" height="15" fill="rgb(210,31,22)" fg:x="28503" fg:w="82"/><text x="41.4888%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="41.3144%" y="149" width="0.0202%" height="15" fill="rgb(239,54,39)" fg:x="28585" fg:w="14"/><text x="41.6073%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="41.3346%" y="133" width="0.0853%" height="15" fill="rgb(230,99,41)" fg:x="28599" fg:w="59"/><text x="41.6276%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="41.4199%" y="133" width="0.4596%" height="15" fill="rgb(253,106,12)" fg:x="28658" fg:w="318"/><text x="41.7128%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="41.8795%" y="133" width="0.1127%" height="15" fill="rgb(213,46,41)" fg:x="28976" fg:w="78"/><text x="42.1725%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="41.3346%" y="149" width="1.0233%" height="15" fill="rgb(215,133,35)" fg:x="28599" fg:w="708"/><text x="41.6276%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (854 instructions, 1.23%)</title><rect x="41.3144%" y="165" width="1.2343%" height="15" fill="rgb(213,28,5)" fg:x="28585" fg:w="854"/><text x="41.6073%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="42.5487%" y="165" width="0.1200%" height="15" fill="rgb(215,77,49)" fg:x="29439" fg:w="83"/><text x="42.8416%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="42.6686%" y="149" width="0.0202%" height="15" fill="rgb(248,100,22)" fg:x="29522" fg:w="14"/><text x="42.9616%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="42.6889%" y="133" width="0.0853%" height="15" fill="rgb(208,67,9)" fg:x="29536" fg:w="59"/><text x="42.9818%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="42.7741%" y="133" width="0.4596%" height="15" fill="rgb(219,133,21)" fg:x="29595" fg:w="318"/><text x="43.0671%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="43.2338%" y="133" width="0.1127%" height="15" fill="rgb(246,46,29)" fg:x="29913" fg:w="78"/><text x="43.5267%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="42.6889%" y="149" width="1.0233%" height="15" fill="rgb(246,185,52)" fg:x="29536" fg:w="708"/><text x="42.9818%" y="159.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.37%)</title><rect x="42.6686%" y="165" width="1.3731%" height="15" fill="rgb(252,136,11)" fg:x="29522" fg:w="950"/><text x="42.9616%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="44.0417%" y="165" width="0.1200%" height="15" fill="rgb(219,138,53)" fg:x="30472" fg:w="83"/><text x="44.3347%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="44.1616%" y="149" width="0.0202%" height="15" fill="rgb(211,51,23)" fg:x="30555" fg:w="14"/><text x="44.4546%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="44.1819%" y="133" width="0.0853%" height="15" fill="rgb(247,221,28)" fg:x="30569" fg:w="59"/><text x="44.4748%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (318 instructions, 0.46%)</title><rect x="44.2672%" y="133" width="0.4596%" height="15" fill="rgb(251,222,45)" fg:x="30628" fg:w="318"/><text x="44.5601%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="44.7268%" y="133" width="0.1127%" height="15" fill="rgb(217,162,53)" fg:x="30946" fg:w="78"/><text x="45.0197%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (708 instructions, 1.02%)</title><rect x="44.1819%" y="149" width="1.0233%" height="15" fill="rgb(229,93,14)" fg:x="30569" fg:w="708"/><text x="44.4748%" y="159.50"></text></g><g><title>memcmp (491 instructions, 0.71%)</title><rect x="45.2052%" y="149" width="0.7097%" height="15" fill="rgb(209,67,49)" fg:x="31277" fg:w="491"/><text x="45.4981%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="45.9148%" y="133" width="0.1243%" height="15" fill="rgb(213,87,29)" fg:x="31768" fg:w="86"/><text x="46.2078%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.17%)</title><rect x="45.9148%" y="149" width="0.1749%" height="15" fill="rgb(205,151,52)" fg:x="31768" fg:w="121"/><text x="46.2078%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,529 instructions, 2.21%)</title><rect x="44.1616%" y="165" width="2.2099%" height="15" fill="rgb(253,215,39)" fg:x="30555" fg:w="1529"/><text x="44.4546%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="46.3715%" y="117" width="0.0853%" height="15" fill="rgb(221,220,41)" fg:x="32084" fg:w="59"/><text x="46.6645%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="46.3715%" y="133" width="0.1359%" height="15" fill="rgb(218,133,21)" fg:x="32084" fg:w="94"/><text x="46.6645%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="46.3715%" y="149" width="0.4553%" height="15" fill="rgb(221,193,43)" fg:x="32084" fg:w="315"/><text x="46.6645%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (11 instructions, 0.02%)</title><rect x="46.8268%" y="149" width="0.0159%" height="15" fill="rgb(240,128,52)" fg:x="32399" fg:w="11"/><text x="47.1198%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.333 (18 instructions, 0.03%)</title><rect x="46.8427%" y="149" width="0.0260%" height="15" fill="rgb(253,114,12)" fg:x="32410" fg:w="18"/><text x="47.1357%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="46.8687%" y="149" width="0.0188%" height="15" fill="rgb(215,223,47)" fg:x="32428" fg:w="13"/><text x="47.1617%" y="159.50"></text></g><g><title>candid::types::internal::env_id (604 instructions, 0.87%)</title><rect x="46.3715%" y="165" width="0.8730%" height="15" fill="rgb(248,225,23)" fg:x="32084" fg:w="604"/><text x="46.6645%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,232 instructions, 6.12%)</title><rect x="41.3144%" y="181" width="6.1166%" height="15" fill="rgb(250,108,0)" fg:x="28585" fg:w="4232"/><text x="41.6073%" y="191.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="47.4310%" y="181" width="0.1185%" height="15" fill="rgb(228,208,7)" fg:x="32817" fg:w="82"/><text x="47.7239%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="47.5495%" y="165" width="0.0202%" height="15" fill="rgb(244,45,10)" fg:x="32899" fg:w="14"/><text x="47.8424%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="47.5697%" y="149" width="0.0853%" height="15" fill="rgb(207,125,25)" fg:x="32913" fg:w="59"/><text x="47.8627%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (324 instructions, 0.47%)</title><rect x="47.6550%" y="149" width="0.4683%" height="15" fill="rgb(210,195,18)" fg:x="32972" fg:w="324"/><text x="47.9479%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.11%)</title><rect x="48.1233%" y="149" width="0.1127%" height="15" fill="rgb(249,80,12)" fg:x="33296" fg:w="78"/><text x="48.4162%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (714 instructions, 1.03%)</title><rect x="47.5697%" y="165" width="1.0320%" height="15" fill="rgb(221,65,9)" fg:x="32913" fg:w="714"/><text x="47.8627%" y="175.50"></text></g><g><title>memcmp (514 instructions, 0.74%)</title><rect x="48.6017%" y="165" width="0.7429%" height="15" fill="rgb(235,49,36)" fg:x="33627" fg:w="514"/><text x="48.8946%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="49.3445%" y="149" width="0.1243%" height="15" fill="rgb(225,32,20)" fg:x="34141" fg:w="86"/><text x="49.6375%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.17%)</title><rect x="49.3445%" y="165" width="0.1749%" height="15" fill="rgb(215,141,46)" fg:x="34141" fg:w="121"/><text x="49.6375%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,558 instructions, 2.25%)</title><rect x="47.5495%" y="181" width="2.2518%" height="15" fill="rgb(250,160,47)" fg:x="32899" fg:w="1558"/><text x="47.8424%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="49.8013%" y="133" width="0.0853%" height="15" fill="rgb(216,222,40)" fg:x="34457" fg:w="59"/><text x="50.0942%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.24%)</title><rect x="49.8865%" y="133" width="0.2370%" height="15" fill="rgb(234,217,39)" fg:x="34516" fg:w="164"/><text x="50.1795%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="50.1236%" y="117" width="0.0853%" height="15" fill="rgb(207,178,40)" fg:x="34680" fg:w="59"/><text x="50.4165%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.13%)</title><rect x="50.1236%" y="133" width="0.1344%" height="15" fill="rgb(221,136,13)" fg:x="34680" fg:w="93"/><text x="50.4165%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.59%)</title><rect x="49.8013%" y="149" width="0.5854%" height="15" fill="rgb(249,199,10)" fg:x="34457" fg:w="405"/><text x="50.0942%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="50.7060%" y="133" width="0.0853%" height="15" fill="rgb(249,222,13)" fg:x="35083" fg:w="59"/><text x="50.9990%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.24%)</title><rect x="50.7913%" y="133" width="0.2370%" height="15" fill="rgb(244,185,38)" fg:x="35142" fg:w="164"/><text x="51.0843%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="51.0283%" y="117" width="0.0853%" height="15" fill="rgb(236,202,9)" fg:x="35306" fg:w="59"/><text x="51.3213%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.13%)</title><rect x="51.0283%" y="133" width="0.1344%" height="15" fill="rgb(250,229,37)" fg:x="35306" fg:w="93"/><text x="51.3213%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.59%)</title><rect x="50.7060%" y="149" width="0.5854%" height="15" fill="rgb(206,174,23)" fg:x="35083" fg:w="405"/><text x="50.9990%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,252 instructions, 1.81%)</title><rect x="49.8013%" y="165" width="1.8095%" height="15" fill="rgb(211,33,43)" fg:x="34457" fg:w="1252"/><text x="50.0942%" y="175.50"></text></g><g><title>candid::types::internal::env_id (1,582 instructions, 2.29%)</title><rect x="49.8013%" y="181" width="2.2865%" height="15" fill="rgb(245,58,50)" fg:x="34457" fg:w="1582"/><text x="50.0942%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="52.0878%" y="149" width="0.1200%" height="15" fill="rgb(244,68,36)" fg:x="36039" fg:w="83"/><text x="52.3807%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="52.0878%" y="165" width="0.1821%" height="15" fill="rgb(232,229,15)" fg:x="36039" fg:w="126"/><text x="52.3807%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.30%)</title><rect x="52.0878%" y="181" width="0.3006%" height="15" fill="rgb(254,30,23)" fg:x="36039" fg:w="208"/><text x="52.3807%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.04%)</title><rect x="52.3884%" y="165" width="0.0434%" height="15" fill="rgb(235,160,14)" fg:x="36247" fg:w="30"/><text x="52.6814%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="52.4317%" y="149" width="0.1200%" height="15" fill="rgb(212,155,44)" fg:x="36277" fg:w="83"/><text x="52.7247%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="52.5517%" y="133" width="0.1185%" height="15" fill="rgb(226,2,50)" fg:x="36360" fg:w="82"/><text x="52.8447%" y="143.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.25%)</title><rect x="52.5517%" y="149" width="0.2457%" height="15" fill="rgb(234,177,6)" fg:x="36360" fg:w="170"/><text x="52.8447%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="52.7974%" y="149" width="0.1315%" height="15" fill="rgb(217,24,9)" fg:x="36530" fg:w="91"/><text x="53.0904%" y="159.50"></text></g><g><title>candid::types::internal::unroll (521 instructions, 0.75%)</title><rect x="52.4317%" y="165" width="0.7530%" height="15" fill="rgb(220,13,46)" fg:x="36277" fg:w="521"/><text x="52.7247%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="53.1848%" y="117" width="0.0853%" height="15" fill="rgb(239,221,27)" fg:x="36798" fg:w="59"/><text x="53.4777%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.24%)</title><rect x="53.2700%" y="117" width="0.2370%" height="15" fill="rgb(222,198,25)" fg:x="36857" fg:w="164"/><text x="53.5630%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="53.5071%" y="101" width="0.0853%" height="15" fill="rgb(211,99,13)" fg:x="37021" fg:w="59"/><text x="53.8000%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.13%)</title><rect x="53.5071%" y="117" width="0.1344%" height="15" fill="rgb(232,111,31)" fg:x="37021" fg:w="93"/><text x="53.8000%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.59%)</title><rect x="53.1848%" y="133" width="0.5854%" height="15" fill="rgb(245,82,37)" fg:x="36798" fg:w="405"/><text x="53.4777%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (626 instructions, 0.90%)</title><rect x="53.1848%" y="149" width="0.9048%" height="15" fill="rgb(227,149,46)" fg:x="36798" fg:w="626"/><text x="53.4777%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="54.0895%" y="149" width="0.1113%" height="15" fill="rgb(218,36,50)" fg:x="37424" fg:w="77"/><text x="54.3825%" y="159.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="54.2008%" y="149" width="0.2197%" height="15" fill="rgb(226,80,48)" fg:x="37501" fg:w="152"/><text x="54.4938%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,191 instructions, 1.72%)</title><rect x="53.1848%" y="165" width="1.7214%" height="15" fill="rgb(238,224,15)" fg:x="36798" fg:w="1191"/><text x="53.4777%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="54.9061%" y="133" width="0.1315%" height="15" fill="rgb(241,136,10)" fg:x="37989" fg:w="91"/><text x="55.1991%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.19%)</title><rect x="54.9061%" y="149" width="0.1937%" height="15" fill="rgb(208,32,45)" fg:x="37989" fg:w="134"/><text x="55.1991%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (216 instructions, 0.31%)</title><rect x="54.9061%" y="165" width="0.3122%" height="15" fill="rgb(207,135,9)" fg:x="37989" fg:w="216"/><text x="55.1991%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="55.2183%" y="117" width="0.0853%" height="15" fill="rgb(206,86,44)" fg:x="38205" fg:w="59"/><text x="55.5113%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.14%)</title><rect x="55.2183%" y="133" width="0.1359%" height="15" fill="rgb(245,177,15)" fg:x="38205" fg:w="94"/><text x="55.5113%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.46%)</title><rect x="55.2183%" y="149" width="0.4553%" height="15" fill="rgb(206,64,50)" fg:x="38205" fg:w="315"/><text x="55.5113%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.03%)</title><rect x="55.6736%" y="149" width="0.0332%" height="15" fill="rgb(234,36,40)" fg:x="38520" fg:w="23"/><text x="55.9666%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="55.7068%" y="149" width="0.0188%" height="15" fill="rgb(213,64,8)" fg:x="38543" fg:w="13"/><text x="55.9998%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.70%)</title><rect x="55.2183%" y="165" width="0.7039%" height="15" fill="rgb(210,75,36)" fg:x="38205" fg:w="487"/><text x="55.5113%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="55.9222%" y="117" width="0.1315%" height="15" fill="rgb(229,88,21)" fg:x="38692" fg:w="91"/><text x="56.2152%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.19%)</title><rect x="55.9222%" y="133" width="0.1937%" height="15" fill="rgb(252,204,47)" fg:x="38692" fg:w="134"/><text x="56.2152%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (213 instructions, 0.31%)</title><rect x="55.9222%" y="149" width="0.3079%" height="15" fill="rgb(208,77,27)" fg:x="38692" fg:w="213"/><text x="56.2152%" y="159.50"></text></g><g><title>leb128::write::signed (272 instructions, 0.39%)</title><rect x="55.9222%" y="165" width="0.3931%" height="15" fill="rgb(221,76,26)" fg:x="38692" fg:w="272"/><text x="56.2152%" y="175.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.07%)</title><rect x="56.3153%" y="165" width="0.0679%" height="15" fill="rgb(225,139,18)" fg:x="38964" fg:w="47"/><text x="56.6083%" y="175.50"></text></g><g><title>candid::types::internal::Label::get_id (121 instructions, 0.17%)</title><rect x="56.3832%" y="165" width="0.1749%" height="15" fill="rgb(230,137,11)" fg:x="39011" fg:w="121"/><text x="56.6762%" y="175.50"></text></g><g><title>leb128::write::unsigned (227 instructions, 0.33%)</title><rect x="56.5581%" y="165" width="0.3281%" height="15" fill="rgb(212,28,1)" fg:x="39132" fg:w="227"/><text x="56.8511%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.09%)</title><rect x="56.8862%" y="165" width="0.0896%" height="15" fill="rgb(248,164,17)" fg:x="39359" fg:w="62"/><text x="57.1792%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="56.9758%" y="133" width="0.1243%" height="15" fill="rgb(222,171,42)" fg:x="39421" fg:w="86"/><text x="57.2688%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.17%)</title><rect x="56.9758%" y="149" width="0.1749%" height="15" fill="rgb(243,84,45)" fg:x="39421" fg:w="121"/><text x="57.2688%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="57.1507%" y="149" width="0.1243%" height="15" fill="rgb(252,49,23)" fg:x="39542" fg:w="86"/><text x="57.4437%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="57.2750%" y="149" width="0.1214%" height="15" fill="rgb(215,19,7)" fg:x="39628" fg:w="84"/><text x="57.5680%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (384 instructions, 0.56%)</title><rect x="56.9758%" y="165" width="0.5550%" height="15" fill="rgb(238,81,41)" fg:x="39421" fg:w="384"/><text x="57.2688%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="57.5308%" y="165" width="0.0188%" height="15" fill="rgb(210,199,37)" fg:x="39805" fg:w="13"/><text x="57.8238%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,928 instructions, 5.68%)</title><rect x="52.3884%" y="181" width="5.6772%" height="15" fill="rgb(244,192,49)" fg:x="36247" fg:w="3928"/><text x="52.6814%" y="191.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="58.0656%" y="181" width="0.0188%" height="15" fill="rgb(226,211,11)" fg:x="40175" fg:w="13"/><text x="58.3586%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="58.0844%" y="181" width="0.1185%" height="15" fill="rgb(236,162,54)" fg:x="40188" fg:w="82"/><text x="58.3773%" y="191.50"></text></g><g><title>memcpy (115 instructions, 0.17%)</title><rect x="58.2029%" y="181" width="0.1662%" height="15" fill="rgb(220,229,9)" fg:x="40270" fg:w="115"/><text x="58.4959%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (122 instructions, 0.18%)</title><rect x="58.3691%" y="149" width="0.1763%" height="15" fill="rgb(250,87,22)" fg:x="40385" fg:w="122"/><text x="58.6621%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (165 instructions, 0.24%)</title><rect x="58.3691%" y="165" width="0.2385%" height="15" fill="rgb(239,43,17)" fg:x="40385" fg:w="165"/><text x="58.6621%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (244 instructions, 0.35%)</title><rect x="58.3691%" y="181" width="0.3527%" height="15" fill="rgb(231,177,25)" fg:x="40385" fg:w="244"/><text x="58.6621%" y="191.50"></text></g><g><title>memcpy (115 instructions, 0.17%)</title><rect x="58.7218%" y="181" width="0.1662%" height="15" fill="rgb(219,179,1)" fg:x="40629" fg:w="115"/><text x="59.0147%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="58.8880%" y="181" width="0.1243%" height="15" fill="rgb(238,219,53)" fg:x="40744" fg:w="86"/><text x="59.1809%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="59.0123%" y="181" width="0.1214%" height="15" fill="rgb(232,167,36)" fg:x="40830" fg:w="84"/><text x="59.3052%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="59.1337%" y="149" width="0.1200%" height="15" fill="rgb(244,19,51)" fg:x="40914" fg:w="83"/><text x="59.4266%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="59.1337%" y="165" width="0.1821%" height="15" fill="rgb(224,6,22)" fg:x="40914" fg:w="126"/><text x="59.4266%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="59.1337%" y="181" width="0.2963%" height="15" fill="rgb(224,145,5)" fg:x="40914" fg:w="205"/><text x="59.4266%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="59.4300%" y="133" width="0.1185%" height="15" fill="rgb(234,130,49)" fg:x="41119" fg:w="82"/><text x="59.7229%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (125 instructions, 0.18%)</title><rect x="59.4300%" y="149" width="0.1807%" height="15" fill="rgb(254,6,2)" fg:x="41119" fg:w="125"/><text x="59.7229%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (204 instructions, 0.29%)</title><rect x="59.4300%" y="165" width="0.2948%" height="15" fill="rgb(208,96,46)" fg:x="41119" fg:w="204"/><text x="59.7229%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="59.7248%" y="165" width="0.1200%" height="15" fill="rgb(239,3,39)" fg:x="41323" fg:w="83"/><text x="60.0178%" y="175.50"></text></g><g><title>memcpy (147 instructions, 0.21%)</title><rect x="59.8448%" y="165" width="0.2125%" height="15" fill="rgb(233,210,1)" fg:x="41406" fg:w="147"/><text x="60.1377%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="60.0572%" y="117" width="0.1113%" height="15" fill="rgb(244,137,37)" fg:x="41553" fg:w="77"/><text x="60.3502%" y="127.50"></text></g><g><title>memcpy (211 instructions, 0.30%)</title><rect x="60.1685%" y="117" width="0.3050%" height="15" fill="rgb(240,136,2)" fg:x="41630" fg:w="211"/><text x="60.4615%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="60.4735%" y="117" width="0.1243%" height="15" fill="rgb(239,18,37)" fg:x="41841" fg:w="86"/><text x="60.7665%" y="127.50"></text></g><g><title>__rust_realloc (480 instructions, 0.69%)</title><rect x="60.0572%" y="133" width="0.6938%" height="15" fill="rgb(218,185,22)" fg:x="41553" fg:w="480"/><text x="60.3502%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (525 instructions, 0.76%)</title><rect x="60.0572%" y="149" width="0.7588%" height="15" fill="rgb(225,218,4)" fg:x="41553" fg:w="525"/><text x="60.3502%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (613 instructions, 0.89%)</title><rect x="60.0572%" y="165" width="0.8860%" height="15" fill="rgb(230,182,32)" fg:x="41553" fg:w="613"/><text x="60.3502%" y="175.50"></text></g><g><title>memcpy (147 instructions, 0.21%)</title><rect x="60.9432%" y="165" width="0.2125%" height="15" fill="rgb(242,56,43)" fg:x="42166" fg:w="147"/><text x="61.2362%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="61.1557%" y="165" width="0.1214%" height="15" fill="rgb(233,99,24)" fg:x="42313" fg:w="84"/><text x="61.4486%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="61.2771%" y="117" width="0.0853%" height="15" fill="rgb(234,209,42)" fg:x="42397" fg:w="59"/><text x="61.5701%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.24%)</title><rect x="61.3624%" y="117" width="0.2370%" height="15" fill="rgb(227,7,12)" fg:x="42456" fg:w="164"/><text x="61.6553%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.09%)</title><rect x="61.5994%" y="101" width="0.0853%" height="15" fill="rgb(245,203,43)" fg:x="42620" fg:w="59"/><text x="61.8924%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.13%)</title><rect x="61.5994%" y="117" width="0.1344%" height="15" fill="rgb(238,205,33)" fg:x="42620" fg:w="93"/><text x="61.8924%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (405 instructions, 0.59%)</title><rect x="61.2771%" y="133" width="0.5854%" height="15" fill="rgb(231,56,7)" fg:x="42397" fg:w="405"/><text x="61.5701%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (626 instructions, 0.90%)</title><rect x="61.2771%" y="149" width="0.9048%" height="15" fill="rgb(244,186,29)" fg:x="42397" fg:w="626"/><text x="61.5701%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="62.1818%" y="117" width="0.1200%" height="15" fill="rgb(234,111,31)" fg:x="43023" fg:w="83"/><text x="62.4748%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.18%)</title><rect x="62.1818%" y="133" width="0.1821%" height="15" fill="rgb(241,149,10)" fg:x="43023" fg:w="126"/><text x="62.4748%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.30%)</title><rect x="62.1818%" y="149" width="0.2963%" height="15" fill="rgb(249,206,44)" fg:x="43023" fg:w="205"/><text x="62.4748%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,020 instructions, 1.47%)</title><rect x="61.2771%" y="165" width="1.4742%" height="15" fill="rgb(251,153,30)" fg:x="42397" fg:w="1020"/><text x="61.5701%" y="175.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="62.7513%" y="165" width="0.0506%" height="15" fill="rgb(239,152,38)" fg:x="43417" fg:w="35"/><text x="63.0443%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="62.8019%" y="165" width="0.1214%" height="15" fill="rgb(249,139,47)" fg:x="43452" fg:w="84"/><text x="63.0949%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,804 instructions, 4.05%)</title><rect x="59.4300%" y="181" width="4.0527%" height="15" fill="rgb(244,64,35)" fg:x="41119" fg:w="2804"/><text x="59.7229%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.17%)</title><rect x="63.4826%" y="133" width="0.1749%" height="15" fill="rgb(216,46,15)" fg:x="43923" fg:w="121"/><text x="63.7756%" y="143.50"></text></g><g><title>memcpy (211 instructions, 0.30%)</title><rect x="63.6575%" y="133" width="0.3050%" height="15" fill="rgb(250,74,19)" fg:x="44044" fg:w="211"/><text x="63.9505%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="63.9625%" y="133" width="0.1214%" height="15" fill="rgb(249,42,33)" fg:x="44255" fg:w="84"/><text x="64.2554%" y="143.50"></text></g><g><title>__rust_realloc (522 instructions, 0.75%)</title><rect x="63.4826%" y="149" width="0.7545%" height="15" fill="rgb(242,149,17)" fg:x="43923" fg:w="522"/><text x="63.7756%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (567 instructions, 0.82%)</title><rect x="63.4826%" y="165" width="0.8195%" height="15" fill="rgb(244,29,21)" fg:x="43923" fg:w="567"/><text x="63.7756%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (655 instructions, 0.95%)</title><rect x="63.4826%" y="181" width="0.9467%" height="15" fill="rgb(220,130,37)" fg:x="43923" fg:w="655"/><text x="63.7756%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.28%)</title><rect x="64.4293%" y="181" width="0.2818%" height="15" fill="rgb(211,67,2)" fg:x="44578" fg:w="195"/><text x="64.7223%" y="191.50"></text></g><g><title>__rust_realloc (110 instructions, 0.16%)</title><rect x="64.7112%" y="149" width="0.1590%" height="15" fill="rgb(235,68,52)" fg:x="44773" fg:w="110"/><text x="65.0041%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.22%)</title><rect x="64.7112%" y="165" width="0.2240%" height="15" fill="rgb(246,142,3)" fg:x="44773" fg:w="155"/><text x="65.0041%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.35%)</title><rect x="64.7112%" y="181" width="0.3512%" height="15" fill="rgb(241,25,7)" fg:x="44773" fg:w="243"/><text x="65.0041%" y="191.50"></text></g><g><title>memcpy (131 instructions, 0.19%)</title><rect x="65.0624%" y="181" width="0.1893%" height="15" fill="rgb(242,119,39)" fg:x="45016" fg:w="131"/><text x="65.3553%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="65.2517%" y="181" width="0.0911%" height="15" fill="rgb(241,98,45)" fg:x="45147" fg:w="63"/><text x="65.5447%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="65.3428%" y="181" width="0.0911%" height="15" fill="rgb(254,28,30)" fg:x="45210" fg:w="63"/><text x="65.6357%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="65.4338%" y="181" width="0.0188%" height="15" fill="rgb(241,142,54)" fg:x="45273" fg:w="13"/><text x="65.7268%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (133 instructions, 0.19%)</title><rect x="65.4526%" y="181" width="0.1922%" height="15" fill="rgb(222,85,15)" fg:x="45286" fg:w="133"/><text x="65.7456%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="65.6448%" y="181" width="0.0101%" height="15" fill="rgb(210,85,47)" fg:x="45419" fg:w="7"/><text x="65.9378%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="65.6549%" y="181" width="0.0188%" height="15" fill="rgb(224,206,25)" fg:x="45426" fg:w="13"/><text x="65.9479%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.19%)</title><rect x="65.6737%" y="181" width="0.1908%" height="15" fill="rgb(243,201,19)" fg:x="45439" fg:w="132"/><text x="65.9667%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (110 instructions, 0.16%)</title><rect x="65.8645%" y="181" width="0.1590%" height="15" fill="rgb(236,59,4)" fg:x="45571" fg:w="110"/><text x="66.1575%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="66.0235%" y="181" width="0.0911%" height="15" fill="rgb(254,179,45)" fg:x="45681" fg:w="63"/><text x="66.3165%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="66.1146%" y="181" width="0.1185%" height="15" fill="rgb(226,14,10)" fg:x="45744" fg:w="82"/><text x="66.4075%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="66.2331%" y="181" width="0.1315%" height="15" fill="rgb(244,27,41)" fg:x="45826" fg:w="91"/><text x="66.5260%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.03%)</title><rect x="66.3646%" y="181" width="0.0304%" height="15" fill="rgb(235,35,32)" fg:x="45917" fg:w="21"/><text x="66.6576%" y="191.50"></text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (55,784 instructions, 80.63%)</title><rect x="1.2025%" y="197" width="80.6255%" height="15" fill="rgb(218,68,31)" fg:x="832" fg:w="55784"/><text x="1.4955%" y="207.50">subscriber::__canister_method_setup_subscribe::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="81.8280%" y="197" width="0.0202%" height="15" fill="rgb(207,120,37)" fg:x="56616" fg:w="14"/><text x="82.1210%" y="207.50"></text></g><g><title>canister_update setup_subscribe (56,750 instructions, 82.02%)</title><rect x="0.0000%" y="213" width="82.0217%" height="15" fill="rgb(227,98,0)" fg:x="0" fg:w="56750"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.11%)</title><rect x="82.0217%" y="197" width="0.1113%" height="15" fill="rgb(207,7,3)" fg:x="56750" fg:w="77"/><text x="82.3147%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="82.1330%" y="149" width="0.1185%" height="15" fill="rgb(206,98,19)" fg:x="56827" fg:w="82"/><text x="82.4260%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="82.2515%" y="149" width="0.6359%" height="15" fill="rgb(217,5,26)" fg:x="56909" fg:w="440"/><text x="82.5445%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="82.8875%" y="149" width="0.1373%" height="15" fill="rgb(235,190,38)" fg:x="57349" fg:w="95"/><text x="83.1804%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.0248%" y="149" width="0.0867%" height="15" fill="rgb(247,86,24)" fg:x="57444" fg:w="60"/><text x="83.3177%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.1115%" y="149" width="0.0867%" height="15" fill="rgb(205,101,16)" fg:x="57504" fg:w="60"/><text x="83.4044%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.1982%" y="149" width="0.0867%" height="15" fill="rgb(246,168,33)" fg:x="57564" fg:w="60"/><text x="83.4912%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.09%)</title><rect x="83.2849%" y="149" width="0.0867%" height="15" fill="rgb(231,114,1)" fg:x="57624" fg:w="60"/><text x="83.5779%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.12%)</title><rect x="83.3716%" y="149" width="0.1185%" height="15" fill="rgb(207,184,53)" fg:x="57684" fg:w="82"/><text x="83.6646%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="83.4902%" y="149" width="0.1012%" height="15" fill="rgb(224,95,51)" fg:x="57766" fg:w="70"/><text x="83.7831%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="83.5913%" y="149" width="0.6359%" height="15" fill="rgb(212,188,45)" fg:x="57836" fg:w="440"/><text x="83.8843%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="84.2273%" y="149" width="0.0275%" height="15" fill="rgb(223,154,38)" fg:x="58276" fg:w="19"/><text x="84.5202%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.17%)</title><rect x="84.2547%" y="133" width="0.1749%" height="15" fill="rgb(251,22,52)" fg:x="58295" fg:w="121"/><text x="84.5477%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="84.4296%" y="101" width="0.0968%" height="15" fill="rgb(229,209,22)" fg:x="58416" fg:w="67"/><text x="84.7226%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="84.4296%" y="117" width="0.1416%" height="15" fill="rgb(234,138,34)" fg:x="58416" fg:w="98"/><text x="84.7226%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="84.5712%" y="69" width="0.0159%" height="15" fill="rgb(212,95,11)" fg:x="58514" fg:w="11"/><text x="84.8642%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="84.5871%" y="53" width="0.0506%" height="15" fill="rgb(240,179,47)" fg:x="58525" fg:w="35"/><text x="84.8801%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="84.5871%" y="69" width="0.0954%" height="15" fill="rgb(240,163,11)" fg:x="58525" fg:w="66"/><text x="84.8801%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.21%)</title><rect x="84.5712%" y="85" width="0.2125%" height="15" fill="rgb(236,37,12)" fg:x="58514" fg:w="147"/><text x="84.8642%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="84.5712%" y="101" width="0.3064%" height="15" fill="rgb(232,164,16)" fg:x="58514" fg:w="212"/><text x="84.8642%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.32%)</title><rect x="84.5712%" y="117" width="0.3209%" height="15" fill="rgb(244,205,15)" fg:x="58514" fg:w="222"/><text x="84.8642%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.67%)</title><rect x="84.4296%" y="133" width="0.6663%" height="15" fill="rgb(223,117,47)" fg:x="58416" fg:w="461"/><text x="84.7226%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (727 instructions, 1.05%)</title><rect x="84.2547%" y="149" width="1.0507%" height="15" fill="rgb(244,107,35)" fg:x="58295" fg:w="727"/><text x="84.5477%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="85.3055%" y="149" width="0.1373%" height="15" fill="rgb(205,140,8)" fg:x="59022" fg:w="95"/><text x="85.5984%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="85.4428%" y="149" width="0.0867%" height="15" fill="rgb(228,84,46)" fg:x="59117" fg:w="60"/><text x="85.7357%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="85.5295%" y="149" width="0.1098%" height="15" fill="rgb(254,188,9)" fg:x="59177" fg:w="76"/><text x="85.8225%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.10%)</title><rect x="85.6393%" y="149" width="0.1012%" height="15" fill="rgb(206,112,54)" fg:x="59253" fg:w="70"/><text x="85.9323%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.64%)</title><rect x="85.7405%" y="133" width="0.6359%" height="15" fill="rgb(216,84,49)" fg:x="59323" fg:w="440"/><text x="86.0335%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="86.3764%" y="133" width="0.0275%" height="15" fill="rgb(214,194,35)" fg:x="59763" fg:w="19"/><text x="86.6694%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="86.4039%" y="117" width="0.1200%" height="15" fill="rgb(249,28,3)" fg:x="59782" fg:w="83"/><text x="86.6969%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.10%)</title><rect x="86.5239%" y="85" width="0.0968%" height="15" fill="rgb(222,56,52)" fg:x="59865" fg:w="67"/><text x="86.8168%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.14%)</title><rect x="86.5239%" y="101" width="0.1416%" height="15" fill="rgb(245,217,50)" fg:x="59865" fg:w="98"/><text x="86.8168%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="86.6655%" y="53" width="0.0159%" height="15" fill="rgb(213,201,24)" fg:x="59963" fg:w="11"/><text x="86.9585%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.05%)</title><rect x="86.6814%" y="37" width="0.0506%" height="15" fill="rgb(248,116,28)" fg:x="59974" fg:w="35"/><text x="86.9744%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.10%)</title><rect x="86.6814%" y="53" width="0.0954%" height="15" fill="rgb(219,72,43)" fg:x="59974" fg:w="66"/><text x="86.9744%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.21%)</title><rect x="86.6655%" y="69" width="0.2125%" height="15" fill="rgb(209,138,14)" fg:x="59963" fg:w="147"/><text x="86.9585%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.31%)</title><rect x="86.6655%" y="85" width="0.3064%" height="15" fill="rgb(222,18,33)" fg:x="59963" fg:w="212"/><text x="86.9585%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.32%)</title><rect x="86.6655%" y="101" width="0.3209%" height="15" fill="rgb(213,199,7)" fg:x="59963" fg:w="222"/><text x="86.9585%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.67%)</title><rect x="86.5239%" y="117" width="0.6663%" height="15" fill="rgb(250,110,10)" fg:x="59865" fg:w="461"/><text x="86.8168%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.00%)</title><rect x="86.4039%" y="133" width="0.9958%" height="15" fill="rgb(248,123,6)" fg:x="59782" fg:w="689"/><text x="86.6969%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.14%)</title><rect x="87.3997%" y="133" width="0.1373%" height="15" fill="rgb(206,91,31)" fg:x="60471" fg:w="95"/><text x="87.6927%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="87.5370%" y="133" width="0.0867%" height="15" fill="rgb(211,154,13)" fg:x="60566" fg:w="60"/><text x="87.8300%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,492 instructions, 2.16%)</title><rect x="85.7405%" y="149" width="2.1564%" height="15" fill="rgb(225,148,7)" fg:x="59323" fg:w="1492"/><text x="86.0335%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.11%)</title><rect x="87.8969%" y="149" width="0.1098%" height="15" fill="rgb(220,160,43)" fg:x="60815" fg:w="76"/><text x="88.1899%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="88.0068%" y="149" width="0.0217%" height="15" fill="rgb(213,52,39)" fg:x="60891" fg:w="15"/><text x="88.2997%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.02%)</title><rect x="88.0284%" y="149" width="0.0217%" height="15" fill="rgb(243,137,7)" fg:x="60906" fg:w="15"/><text x="88.3214%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.01%)</title><rect x="88.0501%" y="149" width="0.0130%" height="15" fill="rgb(230,79,13)" fg:x="60921" fg:w="9"/><text x="88.3431%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="88.0631%" y="149" width="0.0260%" height="15" fill="rgb(247,105,23)" fg:x="60930" fg:w="18"/><text x="88.3561%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.12%)</title><rect x="88.0891%" y="149" width="0.1200%" height="15" fill="rgb(223,179,41)" fg:x="60948" fg:w="83"/><text x="88.3821%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.13%)</title><rect x="88.2091%" y="149" width="0.1315%" height="15" fill="rgb(218,9,34)" fg:x="61031" fg:w="91"/><text x="88.5021%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.62%)</title><rect x="88.3464%" y="149" width="0.6186%" height="15" fill="rgb(222,106,8)" fg:x="61126" fg:w="428"/><text x="88.6394%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.62%)</title><rect x="88.9650%" y="149" width="0.6186%" height="15" fill="rgb(211,220,0)" fg:x="61554" fg:w="428"/><text x="89.2580%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,126 instructions, 8.85%)</title><rect x="82.1330%" y="165" width="8.8540%" height="15" fill="rgb(229,52,16)" fg:x="56827" fg:w="6126"/><text x="82.4260%" y="175.50">candid::de..</text></g><g><title>memcpy (380 instructions, 0.55%)</title><rect x="90.9870%" y="165" width="0.5492%" height="15" fill="rgb(212,155,18)" fg:x="62953" fg:w="380"/><text x="91.2800%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.03%)</title><rect x="91.5362%" y="133" width="0.0275%" height="15" fill="rgb(242,21,14)" fg:x="63333" fg:w="19"/><text x="91.8292%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.09%)</title><rect x="91.5637%" y="117" width="0.0867%" height="15" fill="rgb(222,19,48)" fg:x="63352" fg:w="60"/><text x="91.8567%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.09%)</title><rect x="91.7010%" y="117" width="0.0911%" height="15" fill="rgb(232,45,27)" fg:x="63447" fg:w="63"/><text x="91.9940%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (193 instructions, 0.28%)</title><rect x="91.5637%" y="133" width="0.2789%" height="15" fill="rgb(249,103,42)" fg:x="63352" fg:w="193"/><text x="91.8567%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (267 instructions, 0.39%)</title><rect x="91.5362%" y="149" width="0.3859%" height="15" fill="rgb(246,81,33)" fg:x="63333" fg:w="267"/><text x="91.8292%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (316 instructions, 0.46%)</title><rect x="91.5362%" y="165" width="0.4567%" height="15" fill="rgb(252,33,42)" fg:x="63333" fg:w="316"/><text x="91.8292%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="91.9929%" y="165" width="0.1243%" height="15" fill="rgb(209,212,41)" fg:x="63649" fg:w="86"/><text x="92.2859%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.02%)</title><rect x="92.1172%" y="133" width="0.0202%" height="15" fill="rgb(207,154,6)" fg:x="63735" fg:w="14"/><text x="92.4102%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="92.1375%" y="133" width="0.0188%" height="15" fill="rgb(223,64,47)" fg:x="63749" fg:w="13"/><text x="92.4304%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="92.1563%" y="133" width="0.0188%" height="15" fill="rgb(211,161,38)" fg:x="63762" fg:w="13"/><text x="92.4492%" y="143.50"></text></g><g><title>memset (152 instructions, 0.22%)</title><rect x="92.1751%" y="133" width="0.2197%" height="15" fill="rgb(219,138,40)" fg:x="63775" fg:w="152"/><text x="92.4680%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (404 instructions, 0.58%)</title><rect x="92.1172%" y="149" width="0.5839%" height="15" fill="rgb(241,228,46)" fg:x="63735" fg:w="404"/><text x="92.4102%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.75%)</title><rect x="92.7012%" y="133" width="0.7487%" height="15" fill="rgb(223,209,38)" fg:x="64139" fg:w="518"/><text x="92.9941%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.12%)</title><rect x="93.4498%" y="85" width="0.1185%" height="15" fill="rgb(236,164,45)" fg:x="64657" fg:w="82"/><text x="93.7428%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (125 instructions, 0.18%)</title><rect x="93.4498%" y="101" width="0.1807%" height="15" fill="rgb(231,15,5)" fg:x="64657" fg:w="125"/><text x="93.7428%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (204 instructions, 0.29%)</title><rect x="93.4498%" y="117" width="0.2948%" height="15" fill="rgb(252,35,15)" fg:x="64657" fg:w="204"/><text x="93.7428%" y="127.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="93.7447%" y="117" width="0.0217%" height="15" fill="rgb(248,181,18)" fg:x="64861" fg:w="15"/><text x="94.0376%" y="127.50"></text></g><g><title>memcpy (15 instructions, 0.02%)</title><rect x="93.7664%" y="117" width="0.0217%" height="15" fill="rgb(233,39,42)" fg:x="64876" fg:w="15"/><text x="94.0593%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (422 instructions, 0.61%)</title><rect x="93.4498%" y="133" width="0.6099%" height="15" fill="rgb(238,110,33)" fg:x="64657" fg:w="422"/><text x="93.7428%" y="143.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.75%)</title><rect x="94.0597%" y="133" width="0.7458%" height="15" fill="rgb(233,195,10)" fg:x="65079" fg:w="516"/><text x="94.3527%" y="143.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="94.8055%" y="133" width="0.0101%" height="15" fill="rgb(254,105,3)" fg:x="65595" fg:w="7"/><text x="95.0985%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,556 instructions, 2.25%)</title><rect x="92.7012%" y="149" width="2.2489%" height="15" fill="rgb(221,225,9)" fg:x="64139" fg:w="1556"/><text x="92.9941%" y="159.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="94.9501%" y="149" width="0.0101%" height="15" fill="rgb(224,227,45)" fg:x="65695" fg:w="7"/><text x="95.2430%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="94.9602%" y="149" width="0.1243%" height="15" fill="rgb(229,198,43)" fg:x="65702" fg:w="86"/><text x="95.2532%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (2,659 instructions, 3.84%)</title><rect x="92.1172%" y="165" width="3.8431%" height="15" fill="rgb(206,209,35)" fg:x="63735" fg:w="2659"/><text x="92.4102%" y="175.50">ic_..</text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (9,863 instructions, 14.26%)</title><rect x="82.1330%" y="181" width="14.2552%" height="15" fill="rgb(245,195,53)" fg:x="56827" fg:w="9863"/><text x="82.4260%" y="191.50">subscriber::__cani..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="96.3882%" y="181" width="0.0202%" height="15" fill="rgb(240,92,26)" fg:x="66690" fg:w="14"/><text x="96.6811%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::__canister_method_setup_subscribe::{{closure}}&gt; (8 instructions, 0.01%)</title><rect x="96.4084%" y="181" width="0.0116%" height="15" fill="rgb(207,40,23)" fg:x="66704" fg:w="8"/><text x="96.7014%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.12%)</title><rect x="96.4200%" y="181" width="0.1243%" height="15" fill="rgb(223,111,35)" fg:x="66712" fg:w="86"/><text x="96.7129%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.20%)</title><rect x="96.5442%" y="181" width="0.1951%" height="15" fill="rgb(229,147,28)" fg:x="66798" fg:w="135"/><text x="96.8372%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (10,264 instructions, 14.83%)</title><rect x="82.1330%" y="197" width="14.8347%" height="15" fill="rgb(211,29,28)" fg:x="56827" fg:w="10264"/><text x="82.4260%" y="207.50">ic_cdk::futures::wa..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.12%)</title><rect x="96.9677%" y="181" width="0.1214%" height="15" fill="rgb(228,72,33)" fg:x="67091" fg:w="84"/><text x="97.2607%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (179 instructions, 0.26%)</title><rect x="97.0891%" y="181" width="0.2587%" height="15" fill="rgb(205,214,31)" fg:x="67175" fg:w="179"/><text x="97.3821%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (326 instructions, 0.47%)</title><rect x="96.9677%" y="197" width="0.4712%" height="15" fill="rgb(224,111,15)" fg:x="67091" fg:w="326"/><text x="97.2607%" y="207.50"></text></g><g><title>all (69,189 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(253,21,26)" fg:x="0" fg:w="69189"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (12,439 instructions, 17.98%)</title><rect x="82.0217%" y="213" width="17.9783%" height="15" fill="rgb(245,139,43)" fg:x="56750" fg:w="12439"/><text x="82.3147%" y="223.50">ic_cdk::api::call::callb..</text></g></svg></svg>