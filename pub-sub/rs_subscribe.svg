<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="57647"><g><title>ic_cdk::setup (59 instructions, 0.10%)</title><rect x="0.0000%" y="229" width="0.1023%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="59"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (411 instructions, 0.71%)</title><rect x="0.1023%" y="197" width="0.7130%" height="15" fill="rgb(217,0,24)" fg:x="59" fg:w="411"/><text x="0.3953%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (421 instructions, 0.73%)</title><rect x="0.1023%" y="213" width="0.7303%" height="15" fill="rgb(221,193,54)" fg:x="59" fg:w="421"/><text x="0.3953%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="0.8379%" y="197" width="0.1613%" height="15" fill="rgb(248,212,6)" fg:x="483" fg:w="93"/><text x="1.1308%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="0.8379%" y="213" width="0.1787%" height="15" fill="rgb(208,68,35)" fg:x="483" fg:w="103"/><text x="1.1308%" y="223.50"></text></g><g><title>__rust_alloc (530 instructions, 0.92%)</title><rect x="0.1023%" y="229" width="0.9194%" height="15" fill="rgb(232,128,0)" fg:x="59" fg:w="530"/><text x="0.3953%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="1.0217%" y="165" width="0.1613%" height="15" fill="rgb(207,160,47)" fg:x="589" fg:w="93"/><text x="1.3147%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="1.0217%" y="181" width="0.1787%" height="15" fill="rgb(228,23,34)" fg:x="589" fg:w="103"/><text x="1.3147%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="1.0217%" y="197" width="0.1839%" height="15" fill="rgb(218,30,26)" fg:x="589" fg:w="106"/><text x="1.3147%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (181 instructions, 0.31%)</title><rect x="1.0217%" y="213" width="0.3140%" height="15" fill="rgb(220,122,19)" fg:x="589" fg:w="181"/><text x="1.3147%" y="223.50"></text></g><g><title>std::sys::wasm::once::Once::call (88 instructions, 0.15%)</title><rect x="1.3357%" y="181" width="0.1527%" height="15" fill="rgb(250,228,42)" fg:x="770" fg:w="88"/><text x="1.6287%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (163 instructions, 0.28%)</title><rect x="1.3357%" y="197" width="0.2828%" height="15" fill="rgb(240,193,28)" fg:x="770" fg:w="163"/><text x="1.6287%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="1.6185%" y="197" width="0.7060%" height="15" fill="rgb(216,20,37)" fg:x="933" fg:w="407"/><text x="1.9114%" y="207.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="2.3245%" y="197" width="0.1284%" height="15" fill="rgb(206,188,39)" fg:x="1340" fg:w="74"/><text x="2.6175%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="2.4529%" y="197" width="0.0937%" height="15" fill="rgb(217,207,13)" fg:x="1414" fg:w="54"/><text x="2.7458%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="2.5465%" y="197" width="0.0937%" height="15" fill="rgb(231,73,38)" fg:x="1468" fg:w="54"/><text x="2.8395%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="2.6402%" y="197" width="0.0937%" height="15" fill="rgb(225,20,46)" fg:x="1522" fg:w="54"/><text x="2.9332%" y="207.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="2.7339%" y="197" width="0.0937%" height="15" fill="rgb(210,31,41)" fg:x="1576" fg:w="54"/><text x="3.0268%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="2.8276%" y="197" width="0.1058%" height="15" fill="rgb(221,200,47)" fg:x="1630" fg:w="61"/><text x="3.1205%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="2.9334%" y="197" width="0.1683%" height="15" fill="rgb(226,26,5)" fg:x="1691" fg:w="97"/><text x="3.2263%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="3.1016%" y="197" width="0.7060%" height="15" fill="rgb(249,33,26)" fg:x="1788" fg:w="407"/><text x="3.3946%" y="207.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.8077%" y="197" width="0.0278%" height="15" fill="rgb(235,183,28)" fg:x="2195" fg:w="16"/><text x="4.1006%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="3.8354%" y="133" width="0.1613%" height="15" fill="rgb(221,5,38)" fg:x="2211" fg:w="93"/><text x="4.1284%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="3.8354%" y="149" width="0.1787%" height="15" fill="rgb(247,18,42)" fg:x="2211" fg:w="103"/><text x="4.1284%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="3.8354%" y="165" width="0.1839%" height="15" fill="rgb(241,131,45)" fg:x="2211" fg:w="106"/><text x="4.1284%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.10%)</title><rect x="4.0193%" y="133" width="0.1041%" height="15" fill="rgb(249,31,29)" fg:x="2317" fg:w="60"/><text x="4.3123%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.15%)</title><rect x="4.0193%" y="149" width="0.1474%" height="15" fill="rgb(225,111,53)" fg:x="2317" fg:w="85"/><text x="4.3123%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1667%" y="101" width="0.0156%" height="15" fill="rgb(238,160,17)" fg:x="2402" fg:w="9"/><text x="4.4597%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="4.1824%" y="85" width="0.0520%" height="15" fill="rgb(214,148,48)" fg:x="2411" fg:w="30"/><text x="4.4753%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.10%)</title><rect x="4.1824%" y="101" width="0.0954%" height="15" fill="rgb(232,36,49)" fg:x="2411" fg:w="55"/><text x="4.4753%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.20%)</title><rect x="4.1667%" y="117" width="0.2012%" height="15" fill="rgb(209,103,24)" fg:x="2402" fg:w="116"/><text x="4.4597%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.29%)</title><rect x="4.1667%" y="133" width="0.2932%" height="15" fill="rgb(229,88,8)" fg:x="2402" fg:w="169"/><text x="4.4597%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.30%)</title><rect x="4.1667%" y="149" width="0.3018%" height="15" fill="rgb(213,181,19)" fg:x="2402" fg:w="174"/><text x="4.4597%" y="159.50"></text></g><g><title>core::fmt::write (367 instructions, 0.64%)</title><rect x="4.0193%" y="165" width="0.6366%" height="15" fill="rgb(254,191,54)" fg:x="2317" fg:w="367"/><text x="4.3123%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.07%)</title><rect x="3.8354%" y="181" width="1.0686%" height="15" fill="rgb(241,83,37)" fg:x="2211" fg:w="616"/><text x="4.1284%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="4.9040%" y="181" width="0.1284%" height="15" fill="rgb(233,36,39)" fg:x="2827" fg:w="74"/><text x="5.1970%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="5.0324%" y="181" width="0.0954%" height="15" fill="rgb(226,3,54)" fg:x="2901" fg:w="55"/><text x="5.3253%" y="191.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 1.42%)</title><rect x="3.8354%" y="197" width="1.4155%" height="15" fill="rgb(245,192,40)" fg:x="2211" fg:w="816"/><text x="4.1284%" y="207.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="5.2509%" y="197" width="0.0971%" height="15" fill="rgb(238,167,29)" fg:x="3027" fg:w="56"/><text x="5.5439%" y="207.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="5.3481%" y="197" width="0.1683%" height="15" fill="rgb(232,182,51)" fg:x="3083" fg:w="97"/><text x="5.6410%" y="207.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="5.5163%" y="181" width="0.7060%" height="15" fill="rgb(231,60,39)" fg:x="3180" fg:w="407"/><text x="5.8093%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.2224%" y="181" width="0.0278%" height="15" fill="rgb(208,69,12)" fg:x="3587" fg:w="16"/><text x="6.5153%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="6.2501%" y="117" width="0.1613%" height="15" fill="rgb(235,93,37)" fg:x="3603" fg:w="93"/><text x="6.5431%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="6.2501%" y="133" width="0.1787%" height="15" fill="rgb(213,116,39)" fg:x="3603" fg:w="103"/><text x="6.5431%" y="143.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="6.2501%" y="149" width="0.1839%" height="15" fill="rgb(222,207,29)" fg:x="3603" fg:w="106"/><text x="6.5431%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.10%)</title><rect x="6.4340%" y="117" width="0.1041%" height="15" fill="rgb(206,96,30)" fg:x="3709" fg:w="60"/><text x="6.7270%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.15%)</title><rect x="6.4340%" y="133" width="0.1474%" height="15" fill="rgb(218,138,4)" fg:x="3709" fg:w="85"/><text x="6.7270%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.5814%" y="85" width="0.0156%" height="15" fill="rgb(250,191,14)" fg:x="3794" fg:w="9"/><text x="6.8744%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="6.5970%" y="69" width="0.0520%" height="15" fill="rgb(239,60,40)" fg:x="3803" fg:w="30"/><text x="6.8900%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.10%)</title><rect x="6.5970%" y="85" width="0.0954%" height="15" fill="rgb(206,27,48)" fg:x="3803" fg:w="55"/><text x="6.8900%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.20%)</title><rect x="6.5814%" y="101" width="0.2012%" height="15" fill="rgb(225,35,8)" fg:x="3794" fg:w="116"/><text x="6.8744%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.29%)</title><rect x="6.5814%" y="117" width="0.2932%" height="15" fill="rgb(250,213,24)" fg:x="3794" fg:w="169"/><text x="6.8744%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.30%)</title><rect x="6.5814%" y="133" width="0.3018%" height="15" fill="rgb(247,123,22)" fg:x="3794" fg:w="174"/><text x="6.8744%" y="143.50"></text></g><g><title>core::fmt::write (367 instructions, 0.64%)</title><rect x="6.4340%" y="149" width="0.6366%" height="15" fill="rgb(231,138,38)" fg:x="3709" fg:w="367"/><text x="6.7270%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (616 instructions, 1.07%)</title><rect x="6.2501%" y="165" width="1.0686%" height="15" fill="rgb(231,145,46)" fg:x="3603" fg:w="616"/><text x="6.5431%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="7.3187%" y="165" width="0.1284%" height="15" fill="rgb(251,118,11)" fg:x="4219" fg:w="74"/><text x="7.6116%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="7.4470%" y="165" width="0.0954%" height="15" fill="rgb(217,147,25)" fg:x="4293" fg:w="55"/><text x="7.7400%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (816 instructions, 1.42%)</title><rect x="6.2501%" y="181" width="1.4155%" height="15" fill="rgb(247,81,37)" fg:x="3603" fg:w="816"/><text x="6.5431%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="7.6656%" y="165" width="0.1058%" height="15" fill="rgb(209,12,38)" fg:x="4419" fg:w="61"/><text x="7.9586%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.22%)</title><rect x="7.7714%" y="165" width="0.2186%" height="15" fill="rgb(227,1,9)" fg:x="4480" fg:w="126"/><text x="8.0644%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="7.9900%" y="165" width="0.0971%" height="15" fill="rgb(248,47,43)" fg:x="4606" fg:w="56"/><text x="8.2830%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.53%)</title><rect x="7.6656%" y="181" width="0.5291%" height="15" fill="rgb(221,10,30)" fg:x="4419" fg:w="305"/><text x="7.9586%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="8.1947%" y="149" width="0.1613%" height="15" fill="rgb(210,229,1)" fg:x="4724" fg:w="93"/><text x="8.4877%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="8.1947%" y="165" width="0.1787%" height="15" fill="rgb(222,148,37)" fg:x="4724" fg:w="103"/><text x="8.4877%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="8.1947%" y="181" width="0.1839%" height="15" fill="rgb(234,67,33)" fg:x="4724" fg:w="106"/><text x="8.4877%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="8.3786%" y="165" width="0.1058%" height="15" fill="rgb(247,98,35)" fg:x="4830" fg:w="61"/><text x="8.6715%" y="175.50"></text></g><g><title>candid::binary_parser::read_sleb (126 instructions, 0.22%)</title><rect x="8.4844%" y="165" width="0.2186%" height="15" fill="rgb(247,138,52)" fg:x="4891" fg:w="126"/><text x="8.7774%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="8.7030%" y="165" width="0.0971%" height="15" fill="rgb(213,79,30)" fg:x="5017" fg:w="56"/><text x="8.9959%" y="175.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (305 instructions, 0.53%)</title><rect x="8.3786%" y="181" width="0.5291%" height="15" fill="rgb(246,177,23)" fg:x="4830" fg:w="305"/><text x="8.6715%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,232 instructions, 3.87%)</title><rect x="5.5163%" y="197" width="3.8718%" height="15" fill="rgb(230,62,27)" fg:x="3180" fg:w="2232"/><text x="5.8093%" y="207.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="9.3882%" y="197" width="0.0971%" height="15" fill="rgb(216,154,8)" fg:x="5412" fg:w="56"/><text x="9.6811%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="9.4853%" y="197" width="0.0226%" height="15" fill="rgb(244,35,45)" fg:x="5468" fg:w="13"/><text x="9.7783%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="9.5079%" y="197" width="0.0226%" height="15" fill="rgb(251,115,12)" fg:x="5481" fg:w="13"/><text x="9.8008%" y="207.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="9.5304%" y="197" width="0.0382%" height="15" fill="rgb(240,54,50)" fg:x="5494" fg:w="22"/><text x="9.8234%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="9.5686%" y="149" width="0.1613%" height="15" fill="rgb(233,84,52)" fg:x="5516" fg:w="93"/><text x="9.8615%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="9.5686%" y="165" width="0.1787%" height="15" fill="rgb(207,117,47)" fg:x="5516" fg:w="103"/><text x="9.8615%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="9.5686%" y="181" width="0.1839%" height="15" fill="rgb(249,43,39)" fg:x="5516" fg:w="106"/><text x="9.8615%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (185 instructions, 0.32%)</title><rect x="9.5686%" y="197" width="0.3209%" height="15" fill="rgb(209,38,44)" fg:x="5516" fg:w="185"/><text x="9.8615%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="9.8895%" y="133" width="0.1613%" height="15" fill="rgb(236,212,23)" fg:x="5701" fg:w="93"/><text x="10.1825%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="9.8895%" y="149" width="0.1787%" height="15" fill="rgb(242,79,21)" fg:x="5701" fg:w="103"/><text x="10.1825%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="9.8895%" y="165" width="0.1839%" height="15" fill="rgb(211,96,35)" fg:x="5701" fg:w="106"/><text x="10.1825%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.24%)</title><rect x="9.8895%" y="181" width="0.2359%" height="15" fill="rgb(253,215,40)" fg:x="5701" fg:w="136"/><text x="10.1825%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.35%)</title><rect x="9.8895%" y="197" width="0.3539%" height="15" fill="rgb(211,81,21)" fg:x="5701" fg:w="204"/><text x="10.1825%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="10.2434%" y="149" width="0.1613%" height="15" fill="rgb(208,190,38)" fg:x="5905" fg:w="93"/><text x="10.5363%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="10.2434%" y="165" width="0.1787%" height="15" fill="rgb(235,213,38)" fg:x="5905" fg:w="103"/><text x="10.5363%" y="175.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="10.2434%" y="181" width="0.1839%" height="15" fill="rgb(237,122,38)" fg:x="5905" fg:w="106"/><text x="10.5363%" y="191.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (186 instructions, 0.32%)</title><rect x="10.2434%" y="197" width="0.3227%" height="15" fill="rgb(244,218,35)" fg:x="5905" fg:w="186"/><text x="10.5363%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="10.5660%" y="165" width="0.1613%" height="15" fill="rgb(240,68,47)" fg:x="6091" fg:w="93"/><text x="10.8590%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="10.5660%" y="181" width="0.1787%" height="15" fill="rgb(210,16,53)" fg:x="6091" fg:w="103"/><text x="10.8590%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="10.5660%" y="197" width="0.1839%" height="15" fill="rgb(235,124,12)" fg:x="6091" fg:w="106"/><text x="10.8590%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="10.7499%" y="197" width="0.1405%" height="15" fill="rgb(224,169,11)" fg:x="6197" fg:w="81"/><text x="11.0429%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="10.8904%" y="165" width="0.1613%" height="15" fill="rgb(250,166,2)" fg:x="6278" fg:w="93"/><text x="11.1834%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="10.8904%" y="181" width="0.1787%" height="15" fill="rgb(242,216,29)" fg:x="6278" fg:w="103"/><text x="11.1834%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="11.0743%" y="165" width="0.1613%" height="15" fill="rgb(230,116,27)" fg:x="6384" fg:w="93"/><text x="11.3673%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="11.0743%" y="181" width="0.1787%" height="15" fill="rgb(228,99,48)" fg:x="6384" fg:w="103"/><text x="11.3673%" y="191.50"></text></g><g><title>__rust_alloc (212 instructions, 0.37%)</title><rect x="10.8904%" y="197" width="0.3678%" height="15" fill="rgb(253,11,6)" fg:x="6278" fg:w="212"/><text x="11.1834%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (33 instructions, 0.06%)</title><rect x="11.2582%" y="197" width="0.0572%" height="15" fill="rgb(247,143,39)" fg:x="6490" fg:w="33"/><text x="11.5511%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="11.3154%" y="197" width="0.1405%" height="15" fill="rgb(236,97,10)" fg:x="6523" fg:w="81"/><text x="11.6084%" y="207.50"></text></g><g><title>memcpy (411 instructions, 0.71%)</title><rect x="11.4559%" y="197" width="0.7130%" height="15" fill="rgb(233,208,19)" fg:x="6604" fg:w="411"/><text x="11.7489%" y="207.50"></text></g><g><title>memcpy (366 instructions, 0.63%)</title><rect x="12.1689%" y="197" width="0.6349%" height="15" fill="rgb(216,164,2)" fg:x="7015" fg:w="366"/><text x="12.4619%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,003 instructions, 13.88%)</title><rect x="1.3357%" y="213" width="13.8828%" height="15" fill="rgb(220,129,5)" fg:x="770" fg:w="8003"/><text x="1.6287%" y="223.50">candid::de::IDLDes..</text></g><g><title>memcpy (381 instructions, 0.66%)</title><rect x="15.2185%" y="213" width="0.6609%" height="15" fill="rgb(242,17,10)" fg:x="8773" fg:w="381"/><text x="15.5115%" y="223.50"></text></g><g><title>memcpy (381 instructions, 0.66%)</title><rect x="15.8794%" y="213" width="0.6609%" height="15" fill="rgb(242,107,0)" fg:x="9154" fg:w="381"/><text x="16.1724%" y="223.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.02%)</title><rect x="16.5403%" y="197" width="0.0243%" height="15" fill="rgb(251,28,31)" fg:x="9535" fg:w="14"/><text x="16.8333%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.01%)</title><rect x="16.5646%" y="197" width="0.0104%" height="15" fill="rgb(233,223,10)" fg:x="9549" fg:w="6"/><text x="16.8576%" y="207.50"></text></g><g><title>candid::types::internal::find_type (143 instructions, 0.25%)</title><rect x="16.5403%" y="213" width="0.2481%" height="15" fill="rgb(215,21,27)" fg:x="9535" fg:w="143"/><text x="16.8333%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="16.7884%" y="165" width="0.1613%" height="15" fill="rgb(232,23,21)" fg:x="9678" fg:w="93"/><text x="17.0814%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="16.7884%" y="181" width="0.1787%" height="15" fill="rgb(244,5,23)" fg:x="9678" fg:w="103"/><text x="17.0814%" y="191.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="16.7884%" y="197" width="0.1839%" height="15" fill="rgb(226,81,46)" fg:x="9678" fg:w="106"/><text x="17.0814%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (152 instructions, 0.26%)</title><rect x="16.7884%" y="213" width="0.2637%" height="15" fill="rgb(247,70,30)" fg:x="9678" fg:w="152"/><text x="17.0814%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="17.0607%" y="165" width="0.0919%" height="15" fill="rgb(212,68,19)" fg:x="9835" fg:w="53"/><text x="17.3537%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.66%)</title><rect x="17.1527%" y="165" width="0.6644%" height="15" fill="rgb(240,187,13)" fg:x="9888" fg:w="383"/><text x="17.4456%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.28%)</title><rect x="17.8171%" y="165" width="0.2793%" height="15" fill="rgb(223,113,26)" fg:x="10271" fg:w="161"/><text x="18.1100%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (840 instructions, 1.46%)</title><rect x="17.0607%" y="181" width="1.4571%" height="15" fill="rgb(206,192,2)" fg:x="9835" fg:w="840"/><text x="17.3537%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="18.5179%" y="133" width="0.1613%" height="15" fill="rgb(241,108,4)" fg:x="10675" fg:w="93"/><text x="18.8108%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="18.5179%" y="149" width="0.1787%" height="15" fill="rgb(247,173,49)" fg:x="10675" fg:w="103"/><text x="18.8108%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="18.5179%" y="165" width="0.1839%" height="15" fill="rgb(224,114,35)" fg:x="10675" fg:w="106"/><text x="18.8108%" y="175.50"></text></g><g><title>memset (136 instructions, 0.24%)</title><rect x="18.7018%" y="165" width="0.2359%" height="15" fill="rgb(245,159,27)" fg:x="10781" fg:w="136"/><text x="18.9947%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (348 instructions, 0.60%)</title><rect x="18.5179%" y="181" width="0.6037%" height="15" fill="rgb(245,172,44)" fg:x="10675" fg:w="348"/><text x="18.8108%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,589 instructions, 2.76%)</title><rect x="17.0521%" y="197" width="2.7564%" height="15" fill="rgb(236,23,11)" fg:x="9830" fg:w="1589"/><text x="17.3450%" y="207.50">s..</text></g><g><title>candid::types::internal::env_add (1,615 instructions, 2.80%)</title><rect x="17.0521%" y="213" width="2.8015%" height="15" fill="rgb(205,117,38)" fg:x="9830" fg:w="1615"/><text x="17.3450%" y="223.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="19.8536%" y="181" width="0.1613%" height="15" fill="rgb(237,72,25)" fg:x="11445" fg:w="93"/><text x="20.1466%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="19.8536%" y="197" width="0.1787%" height="15" fill="rgb(244,70,9)" fg:x="11445" fg:w="103"/><text x="20.1466%" y="207.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="19.8536%" y="213" width="0.1839%" height="15" fill="rgb(217,125,39)" fg:x="11445" fg:w="106"/><text x="20.1466%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="20.0461%" y="165" width="0.0919%" height="15" fill="rgb(235,36,10)" fg:x="11556" fg:w="53"/><text x="20.3391%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.66%)</title><rect x="20.1381%" y="165" width="0.6644%" height="15" fill="rgb(251,123,47)" fg:x="11609" fg:w="383"/><text x="20.4311%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.28%)</title><rect x="20.8025%" y="165" width="0.2793%" height="15" fill="rgb(221,13,13)" fg:x="11992" fg:w="161"/><text x="21.0954%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (840 instructions, 1.46%)</title><rect x="20.0461%" y="181" width="1.4571%" height="15" fill="rgb(238,131,9)" fg:x="11556" fg:w="840"/><text x="20.3391%" y="191.50"></text></g><g><title>memcmp (740 instructions, 1.28%)</title><rect x="21.5033%" y="181" width="1.2837%" height="15" fill="rgb(211,50,8)" fg:x="12396" fg:w="740"/><text x="21.7963%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="22.7870%" y="165" width="0.1405%" height="15" fill="rgb(245,182,24)" fg:x="13136" fg:w="81"/><text x="23.0799%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.19%)</title><rect x="22.7870%" y="181" width="0.1926%" height="15" fill="rgb(242,14,37)" fg:x="13136" fg:w="111"/><text x="23.0799%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,870 instructions, 3.24%)</title><rect x="20.0375%" y="197" width="3.2439%" height="15" fill="rgb(246,228,12)" fg:x="11551" fg:w="1870"/><text x="20.3304%" y="207.50">st..</text></g><g><title>candid::types::internal::env_add (1,896 instructions, 3.29%)</title><rect x="20.0375%" y="213" width="3.2890%" height="15" fill="rgb(213,55,15)" fg:x="11551" fg:w="1896"/><text x="20.3304%" y="223.50">ca..</text></g><g><title>candid::types::internal::ID::__getit (81 instructions, 0.14%)</title><rect x="23.3265%" y="181" width="0.1405%" height="15" fill="rgb(209,9,3)" fg:x="13447" fg:w="81"/><text x="23.6194%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="23.4670%" y="149" width="0.0919%" height="15" fill="rgb(230,59,30)" fg:x="13528" fg:w="53"/><text x="23.7599%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="23.4670%" y="165" width="0.1353%" height="15" fill="rgb(209,121,21)" fg:x="13528" fg:w="78"/><text x="23.7599%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.52%)</title><rect x="23.4670%" y="181" width="0.5204%" height="15" fill="rgb(220,109,13)" fg:x="13528" fg:w="300"/><text x="23.7599%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="23.9874%" y="133" width="0.1613%" height="15" fill="rgb(232,18,1)" fg:x="13828" fg:w="93"/><text x="24.2803%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="23.9874%" y="149" width="0.1787%" height="15" fill="rgb(215,41,42)" fg:x="13828" fg:w="103"/><text x="24.2803%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="23.9874%" y="165" width="0.1839%" height="15" fill="rgb(224,123,36)" fg:x="13828" fg:w="106"/><text x="24.2803%" y="175.50"></text></g><g><title>memset (136 instructions, 0.24%)</title><rect x="24.1712%" y="165" width="0.2359%" height="15" fill="rgb(240,125,3)" fg:x="13934" fg:w="136"/><text x="24.4642%" y="175.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (348 instructions, 0.60%)</title><rect x="23.9874%" y="181" width="0.6037%" height="15" fill="rgb(205,98,50)" fg:x="13828" fg:w="348"/><text x="24.2803%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,167 instructions, 2.02%)</title><rect x="23.3265%" y="197" width="2.0244%" height="15" fill="rgb(205,185,37)" fg:x="13447" fg:w="1167"/><text x="23.6194%" y="207.50"></text></g><g><title>candid::types::internal::env_id (1,204 instructions, 2.09%)</title><rect x="23.3265%" y="213" width="2.0886%" height="15" fill="rgb(238,207,15)" fg:x="13447" fg:w="1204"/><text x="23.6194%" y="223.50">c..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (37 instructions, 0.06%)</title><rect x="25.4150%" y="213" width="0.0642%" height="15" fill="rgb(213,199,42)" fg:x="14651" fg:w="37"/><text x="25.7080%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.21%)</title><rect x="25.4792%" y="197" width="0.2134%" height="15" fill="rgb(235,201,11)" fg:x="14688" fg:w="123"/><text x="25.7722%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.21%)</title><rect x="25.7446%" y="197" width="0.2134%" height="15" fill="rgb(207,46,11)" fg:x="14841" fg:w="123"/><text x="26.0376%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (306 instructions, 0.53%)</title><rect x="25.4792%" y="213" width="0.5308%" height="15" fill="rgb(241,35,35)" fg:x="14688" fg:w="306"/><text x="25.7722%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="26.0100%" y="197" width="0.0486%" height="15" fill="rgb(243,32,47)" fg:x="14994" fg:w="28"/><text x="26.3030%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="26.0586%" y="197" width="0.0486%" height="15" fill="rgb(247,202,23)" fg:x="15022" fg:w="28"/><text x="26.3516%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="26.1072%" y="197" width="0.0278%" height="15" fill="rgb(219,102,11)" fg:x="15050" fg:w="16"/><text x="26.4001%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="26.1349%" y="197" width="0.0278%" height="15" fill="rgb(243,110,44)" fg:x="15066" fg:w="16"/><text x="26.4279%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="26.1627%" y="165" width="0.1631%" height="15" fill="rgb(222,74,54)" fg:x="15082" fg:w="94"/><text x="26.4556%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="26.1627%" y="181" width="0.1804%" height="15" fill="rgb(216,99,12)" fg:x="15082" fg:w="104"/><text x="26.4556%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="26.1627%" y="197" width="0.1856%" height="15" fill="rgb(226,22,26)" fg:x="15082" fg:w="107"/><text x="26.4556%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="26.3483%" y="181" width="0.1058%" height="15" fill="rgb(217,163,10)" fg:x="15189" fg:w="61"/><text x="26.6413%" y="191.50"></text></g><g><title>binread::binary_template::write_named (71 instructions, 0.12%)</title><rect x="26.4541%" y="165" width="0.1232%" height="15" fill="rgb(213,25,53)" fg:x="15250" fg:w="71"/><text x="26.7471%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (141 instructions, 0.24%)</title><rect x="26.4541%" y="181" width="0.2446%" height="15" fill="rgb(252,105,26)" fg:x="15250" fg:w="141"/><text x="26.7471%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="26.6987%" y="181" width="0.1683%" height="15" fill="rgb(220,39,43)" fg:x="15391" fg:w="97"/><text x="26.9917%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="26.8670%" y="181" width="0.7060%" height="15" fill="rgb(229,68,48)" fg:x="15488" fg:w="407"/><text x="27.1599%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.24%)</title><rect x="27.5730%" y="117" width="0.2359%" height="15" fill="rgb(252,8,32)" fg:x="15895" fg:w="136"/><text x="27.8660%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (146 instructions, 0.25%)</title><rect x="27.5730%" y="133" width="0.2533%" height="15" fill="rgb(223,20,43)" fg:x="15895" fg:w="146"/><text x="27.8660%" y="143.50"></text></g><g><title>__rust_alloc (149 instructions, 0.26%)</title><rect x="27.5730%" y="149" width="0.2585%" height="15" fill="rgb(229,81,49)" fg:x="15895" fg:w="149"/><text x="27.8660%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.10%)</title><rect x="27.8315%" y="117" width="0.1041%" height="15" fill="rgb(236,28,36)" fg:x="16044" fg:w="60"/><text x="28.1244%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.15%)</title><rect x="27.8315%" y="133" width="0.1474%" height="15" fill="rgb(249,185,26)" fg:x="16044" fg:w="85"/><text x="28.1244%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="27.9789%" y="85" width="0.0156%" height="15" fill="rgb(249,174,33)" fg:x="16129" fg:w="9"/><text x="28.2719%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="27.9945%" y="69" width="0.0520%" height="15" fill="rgb(233,201,37)" fg:x="16138" fg:w="30"/><text x="28.2875%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.10%)</title><rect x="27.9945%" y="85" width="0.0954%" height="15" fill="rgb(221,78,26)" fg:x="16138" fg:w="55"/><text x="28.2875%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.20%)</title><rect x="27.9789%" y="101" width="0.2012%" height="15" fill="rgb(250,127,30)" fg:x="16129" fg:w="116"/><text x="28.2719%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.29%)</title><rect x="27.9789%" y="117" width="0.2932%" height="15" fill="rgb(230,49,44)" fg:x="16129" fg:w="169"/><text x="28.2719%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.30%)</title><rect x="27.9789%" y="133" width="0.3018%" height="15" fill="rgb(229,67,23)" fg:x="16129" fg:w="174"/><text x="28.2719%" y="143.50"></text></g><g><title>core::fmt::write (367 instructions, 0.64%)</title><rect x="27.8315%" y="149" width="0.6366%" height="15" fill="rgb(249,83,47)" fg:x="16044" fg:w="367"/><text x="28.1244%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (659 instructions, 1.14%)</title><rect x="27.5730%" y="165" width="1.1432%" height="15" fill="rgb(215,43,3)" fg:x="15895" fg:w="659"/><text x="27.8660%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="28.7162%" y="165" width="0.1284%" height="15" fill="rgb(238,154,13)" fg:x="16554" fg:w="74"/><text x="29.0091%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.09%)</title><rect x="28.8445%" y="165" width="0.0937%" height="15" fill="rgb(219,56,2)" fg:x="16628" fg:w="54"/><text x="29.1375%" y="175.50"></text></g><g><title>binread::binary_template::write_vec (858 instructions, 1.49%)</title><rect x="27.5730%" y="181" width="1.4884%" height="15" fill="rgb(233,0,4)" fg:x="15895" fg:w="858"/><text x="27.8660%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="29.0614%" y="165" width="0.0954%" height="15" fill="rgb(235,30,7)" fg:x="16753" fg:w="55"/><text x="29.3543%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 instructions, 0.19%)</title><rect x="29.0614%" y="181" width="0.1873%" height="15" fill="rgb(250,79,13)" fg:x="16753" fg:w="108"/><text x="29.3543%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="29.2487%" y="149" width="0.1561%" height="15" fill="rgb(211,146,34)" fg:x="16861" fg:w="90"/><text x="29.5417%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="29.2487%" y="165" width="0.1735%" height="15" fill="rgb(228,22,38)" fg:x="16861" fg:w="100"/><text x="29.5417%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="29.2487%" y="181" width="0.1787%" height="15" fill="rgb(235,168,5)" fg:x="16861" fg:w="103"/><text x="29.5417%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="29.4274%" y="165" width="0.0954%" height="15" fill="rgb(221,155,16)" fg:x="16964" fg:w="55"/><text x="29.7203%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="29.6147%" y="165" width="0.0954%" height="15" fill="rgb(215,215,53)" fg:x="17072" fg:w="55"/><text x="29.9077%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="29.8021%" y="165" width="0.0954%" height="15" fill="rgb(223,4,10)" fg:x="17180" fg:w="55"/><text x="30.0950%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="29.9894%" y="165" width="0.0954%" height="15" fill="rgb(234,103,6)" fg:x="17288" fg:w="55"/><text x="30.2824%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="30.1768%" y="165" width="0.0954%" height="15" fill="rgb(227,97,0)" fg:x="17396" fg:w="55"/><text x="30.4697%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="30.3641%" y="165" width="0.0954%" height="15" fill="rgb(234,150,53)" fg:x="17504" fg:w="55"/><text x="30.6571%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="30.5515%" y="165" width="0.0954%" height="15" fill="rgb(228,201,54)" fg:x="17612" fg:w="55"/><text x="30.8444%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="30.7388%" y="165" width="0.0954%" height="15" fill="rgb(222,22,37)" fg:x="17720" fg:w="55"/><text x="31.0318%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (864 instructions, 1.50%)</title><rect x="29.4274%" y="181" width="1.4988%" height="15" fill="rgb(237,53,32)" fg:x="16964" fg:w="864"/><text x="29.7203%" y="191.50"></text></g><g><title>__rust_realloc (122 instructions, 0.21%)</title><rect x="30.9262%" y="149" width="0.2116%" height="15" fill="rgb(233,25,53)" fg:x="17828" fg:w="122"/><text x="31.2191%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (158 instructions, 0.27%)</title><rect x="30.9262%" y="165" width="0.2741%" height="15" fill="rgb(210,40,34)" fg:x="17828" fg:w="158"/><text x="31.2191%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (233 instructions, 0.40%)</title><rect x="30.9262%" y="181" width="0.4042%" height="15" fill="rgb(241,220,44)" fg:x="17828" fg:w="233"/><text x="31.2191%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (55 instructions, 0.10%)</title><rect x="31.3303%" y="165" width="0.0954%" height="15" fill="rgb(235,28,35)" fg:x="18061" fg:w="55"/><text x="31.6233%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (108 instructions, 0.19%)</title><rect x="31.3303%" y="181" width="0.1873%" height="15" fill="rgb(210,56,17)" fg:x="18061" fg:w="108"/><text x="31.6233%" y="191.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 instructions, 0.04%)</title><rect x="31.5177%" y="181" width="0.0382%" height="15" fill="rgb(224,130,29)" fg:x="18169" fg:w="22"/><text x="31.8107%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="31.5558%" y="181" width="0.0971%" height="15" fill="rgb(235,212,8)" fg:x="18191" fg:w="56"/><text x="31.8488%" y="191.50"></text></g><g><title>binread::BinRead::read (3,690 instructions, 6.40%)</title><rect x="26.3483%" y="197" width="6.4010%" height="15" fill="rgb(223,33,50)" fg:x="15189" fg:w="3690"/><text x="26.6413%" y="207.50">binread..</text></g><g><title>__rust_realloc (57 instructions, 0.10%)</title><rect x="32.7493%" y="149" width="0.0989%" height="15" fill="rgb(219,149,13)" fg:x="18879" fg:w="57"/><text x="33.0423%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (93 instructions, 0.16%)</title><rect x="32.7493%" y="165" width="0.1613%" height="15" fill="rgb(250,156,29)" fg:x="18879" fg:w="93"/><text x="33.0423%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (168 instructions, 0.29%)</title><rect x="32.7493%" y="181" width="0.2914%" height="15" fill="rgb(216,193,19)" fg:x="18879" fg:w="168"/><text x="33.0423%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.29%)</title><rect x="33.0407%" y="181" width="0.2862%" height="15" fill="rgb(216,135,14)" fg:x="19047" fg:w="165"/><text x="33.3337%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (362 instructions, 0.63%)</title><rect x="32.7493%" y="197" width="0.6280%" height="15" fill="rgb(241,47,5)" fg:x="18879" fg:w="362"/><text x="33.0423%" y="207.50"></text></g><g><title>memcpy (165 instructions, 0.29%)</title><rect x="33.3773%" y="181" width="0.2862%" height="15" fill="rgb(233,42,35)" fg:x="19241" fg:w="165"/><text x="33.6702%" y="191.50"></text></g><g><title>candid::types::principal::Principal::try_from_slice (236 instructions, 0.41%)</title><rect x="33.3773%" y="197" width="0.4094%" height="15" fill="rgb(231,13,6)" fg:x="19241" fg:w="236"/><text x="33.6702%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="33.7867%" y="197" width="0.1405%" height="15" fill="rgb(207,181,40)" fg:x="19477" fg:w="81"/><text x="34.0796%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.09%)</title><rect x="33.9272%" y="197" width="0.0937%" height="15" fill="rgb(254,173,49)" fg:x="19558" fg:w="54"/><text x="34.2201%" y="207.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,868 instructions, 8.44%)</title><rect x="26.0100%" y="213" width="8.4445%" height="15" fill="rgb(221,1,38)" fg:x="14994" fg:w="4868"/><text x="26.3030%" y="223.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="34.4545%" y="213" width="0.0191%" height="15" fill="rgb(206,124,46)" fg:x="19862" fg:w="11"/><text x="34.7475%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="34.4736%" y="213" width="0.0191%" height="15" fill="rgb(249,21,11)" fg:x="19873" fg:w="11"/><text x="34.7666%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="34.4927%" y="213" width="0.0191%" height="15" fill="rgb(222,201,40)" fg:x="19884" fg:w="11"/><text x="34.7857%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="34.5118%" y="149" width="0.0919%" height="15" fill="rgb(235,61,29)" fg:x="19895" fg:w="53"/><text x="34.8047%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="34.6037%" y="149" width="0.5291%" height="15" fill="rgb(219,207,3)" fg:x="19948" fg:w="305"/><text x="34.8967%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="35.1328%" y="149" width="0.1266%" height="15" fill="rgb(222,56,46)" fg:x="20253" fg:w="73"/><text x="35.4258%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="34.5118%" y="165" width="1.1692%" height="15" fill="rgb(239,76,54)" fg:x="19895" fg:w="674"/><text x="34.8047%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (754 instructions, 1.31%)</title><rect x="34.5118%" y="181" width="1.3080%" height="15" fill="rgb(231,124,27)" fg:x="19895" fg:w="754"/><text x="34.8047%" y="191.50"></text></g><g><title>candid::types::internal::find_type (793 instructions, 1.38%)</title><rect x="34.5118%" y="197" width="1.3756%" height="15" fill="rgb(249,195,6)" fg:x="19895" fg:w="793"/><text x="34.8047%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (176 instructions, 0.31%)</title><rect x="35.8874%" y="149" width="0.3053%" height="15" fill="rgb(237,174,47)" fg:x="20688" fg:w="176"/><text x="36.1804%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (186 instructions, 0.32%)</title><rect x="35.8874%" y="165" width="0.3227%" height="15" fill="rgb(206,201,31)" fg:x="20688" fg:w="186"/><text x="36.1804%" y="175.50"></text></g><g><title>__rust_alloc (189 instructions, 0.33%)</title><rect x="35.8874%" y="181" width="0.3279%" height="15" fill="rgb(231,57,52)" fg:x="20688" fg:w="189"/><text x="36.1804%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (235 instructions, 0.41%)</title><rect x="35.8874%" y="197" width="0.4077%" height="15" fill="rgb(248,177,22)" fg:x="20688" fg:w="235"/><text x="36.1804%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="36.3037%" y="149" width="0.0919%" height="15" fill="rgb(215,211,37)" fg:x="20928" fg:w="53"/><text x="36.5967%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="36.3956%" y="149" width="0.5291%" height="15" fill="rgb(241,128,51)" fg:x="20981" fg:w="305"/><text x="36.6886%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="36.9247%" y="149" width="0.1266%" height="15" fill="rgb(227,165,31)" fg:x="21286" fg:w="73"/><text x="37.2177%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="36.3037%" y="165" width="1.1692%" height="15" fill="rgb(228,167,24)" fg:x="20928" fg:w="674"/><text x="36.5967%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (924 instructions, 1.60%)</title><rect x="36.2950%" y="181" width="1.6029%" height="15" fill="rgb(228,143,12)" fg:x="20923" fg:w="924"/><text x="36.5880%" y="191.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.65%)</title><rect x="36.2950%" y="197" width="1.6480%" height="15" fill="rgb(249,149,8)" fg:x="20923" fg:w="950"/><text x="36.5880%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="37.9430%" y="165" width="0.1561%" height="15" fill="rgb(243,35,44)" fg:x="21873" fg:w="90"/><text x="38.2360%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="37.9430%" y="181" width="0.1735%" height="15" fill="rgb(246,89,9)" fg:x="21873" fg:w="100"/><text x="38.2360%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="37.9430%" y="197" width="0.1787%" height="15" fill="rgb(233,213,13)" fg:x="21873" fg:w="103"/><text x="38.2360%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="38.1303%" y="149" width="0.0919%" height="15" fill="rgb(233,141,41)" fg:x="21981" fg:w="53"/><text x="38.4233%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="38.2223%" y="149" width="0.5291%" height="15" fill="rgb(239,167,4)" fg:x="22034" fg:w="305"/><text x="38.5153%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="38.7514%" y="149" width="0.1266%" height="15" fill="rgb(209,217,16)" fg:x="22339" fg:w="73"/><text x="39.0443%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="38.1303%" y="165" width="1.1692%" height="15" fill="rgb(219,88,35)" fg:x="21981" fg:w="674"/><text x="38.4233%" y="175.50"></text></g><g><title>memcmp (446 instructions, 0.77%)</title><rect x="39.2995%" y="165" width="0.7737%" height="15" fill="rgb(220,193,23)" fg:x="22655" fg:w="446"/><text x="39.5925%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="40.0732%" y="149" width="0.1405%" height="15" fill="rgb(230,90,52)" fg:x="23101" fg:w="81"/><text x="40.3662%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.19%)</title><rect x="40.0732%" y="165" width="0.1926%" height="15" fill="rgb(252,106,19)" fg:x="23101" fg:w="111"/><text x="40.3662%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,410 instructions, 2.45%)</title><rect x="38.1217%" y="181" width="2.4459%" height="15" fill="rgb(206,74,20)" fg:x="21976" fg:w="1410"/><text x="38.4146%" y="191.50">s..</text></g><g><title>candid::types::internal::env_add (1,436 instructions, 2.49%)</title><rect x="38.1217%" y="197" width="2.4910%" height="15" fill="rgb(230,138,44)" fg:x="21976" fg:w="1436"/><text x="38.4146%" y="207.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="40.6214%" y="133" width="0.0919%" height="15" fill="rgb(235,182,43)" fg:x="23417" fg:w="53"/><text x="40.9143%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="40.6214%" y="149" width="0.1353%" height="15" fill="rgb(242,16,51)" fg:x="23417" fg:w="78"/><text x="40.9143%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.52%)</title><rect x="40.6214%" y="165" width="0.5204%" height="15" fill="rgb(248,9,4)" fg:x="23417" fg:w="300"/><text x="40.9143%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="41.1418%" y="165" width="0.0260%" height="15" fill="rgb(210,31,22)" fg:x="23717" fg:w="15"/><text x="41.4347%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="41.1678%" y="133" width="0.0919%" height="15" fill="rgb(239,54,39)" fg:x="23732" fg:w="53"/><text x="41.4608%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="41.1678%" y="149" width="0.1353%" height="15" fill="rgb(230,99,41)" fg:x="23732" fg:w="78"/><text x="41.4608%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.52%)</title><rect x="41.1678%" y="165" width="0.5204%" height="15" fill="rgb(253,106,12)" fg:x="23732" fg:w="300"/><text x="41.4608%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="41.6882%" y="165" width="0.0260%" height="15" fill="rgb(213,46,41)" fg:x="24032" fg:w="15"/><text x="41.9812%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,062 instructions, 1.84%)</title><rect x="40.6127%" y="181" width="1.8422%" height="15" fill="rgb(215,133,35)" fg:x="23412" fg:w="1062"/><text x="40.9057%" y="191.50"></text></g><g><title>candid::types::internal::env_id (1,099 instructions, 1.91%)</title><rect x="40.6127%" y="197" width="1.9064%" height="15" fill="rgb(213,28,5)" fg:x="23412" fg:w="1099"/><text x="40.9057%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (4,729 instructions, 8.20%)</title><rect x="34.5118%" y="213" width="8.2034%" height="15" fill="rgb(215,77,49)" fg:x="19895" fg:w="4729"/><text x="34.8047%" y="223.50">candid::t..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (37 instructions, 0.06%)</title><rect x="42.7151%" y="213" width="0.0642%" height="15" fill="rgb(248,100,22)" fg:x="24624" fg:w="37"/><text x="43.0081%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (169 instructions, 0.29%)</title><rect x="42.7984%" y="197" width="0.2932%" height="15" fill="rgb(208,67,9)" fg:x="24672" fg:w="169"/><text x="43.0914%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (210 instructions, 0.36%)</title><rect x="42.7793%" y="213" width="0.3643%" height="15" fill="rgb(219,133,21)" fg:x="24661" fg:w="210"/><text x="43.0723%" y="223.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="43.1436%" y="197" width="0.0486%" height="15" fill="rgb(246,46,29)" fg:x="24871" fg:w="28"/><text x="43.4366%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="43.1922%" y="197" width="0.0278%" height="15" fill="rgb(246,185,52)" fg:x="24899" fg:w="16"/><text x="43.4852%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.03%)</title><rect x="43.2199%" y="197" width="0.0278%" height="15" fill="rgb(252,136,11)" fg:x="24915" fg:w="16"/><text x="43.5129%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="43.2477%" y="181" width="0.1058%" height="15" fill="rgb(219,138,53)" fg:x="24931" fg:w="61"/><text x="43.5407%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="43.3535%" y="181" width="0.1683%" height="15" fill="rgb(211,51,23)" fg:x="24992" fg:w="97"/><text x="43.6465%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="43.5218%" y="181" width="0.0971%" height="15" fill="rgb(247,221,28)" fg:x="25089" fg:w="56"/><text x="43.8147%" y="191.50"></text></g><g><title>binread::BinRead::read (258 instructions, 0.45%)</title><rect x="43.2477%" y="197" width="0.4476%" height="15" fill="rgb(251,222,45)" fg:x="24931" fg:w="258"/><text x="43.5407%" y="207.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (53 instructions, 0.09%)</title><rect x="43.6952%" y="197" width="0.0919%" height="15" fill="rgb(217,162,53)" fg:x="25189" fg:w="53"/><text x="43.9882%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="43.7872%" y="165" width="0.1561%" height="15" fill="rgb(229,93,14)" fg:x="25242" fg:w="90"/><text x="44.0802%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="43.7872%" y="181" width="0.1735%" height="15" fill="rgb(209,67,49)" fg:x="25242" fg:w="100"/><text x="44.0802%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="43.7872%" y="197" width="0.1787%" height="15" fill="rgb(213,87,29)" fg:x="25242" fg:w="103"/><text x="44.0802%" y="207.50"></text></g><g><title>memcpy (105 instructions, 0.18%)</title><rect x="43.9659%" y="197" width="0.1821%" height="15" fill="rgb(205,151,52)" fg:x="25345" fg:w="105"/><text x="44.2588%" y="207.50"></text></g><g><title>core::str::converts::from_utf8 (149 instructions, 0.26%)</title><rect x="44.1480%" y="197" width="0.2585%" height="15" fill="rgb(253,215,39)" fg:x="25450" fg:w="149"/><text x="44.4410%" y="207.50"></text></g><g><title>&lt;&amp;mut candid::de::Deserializer as serde::de::Deserializer&gt;::deserialize_string (862 instructions, 1.50%)</title><rect x="43.1436%" y="213" width="1.4953%" height="15" fill="rgb(221,220,41)" fg:x="24871" fg:w="862"/><text x="43.4366%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.6389%" y="213" width="0.0191%" height="15" fill="rgb(218,133,21)" fg:x="25733" fg:w="11"/><text x="44.9319%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.6580%" y="213" width="0.0191%" height="15" fill="rgb(221,193,43)" fg:x="25744" fg:w="11"/><text x="44.9510%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.6771%" y="213" width="0.0191%" height="15" fill="rgb(240,128,52)" fg:x="25755" fg:w="11"/><text x="44.9701%" y="223.50"></text></g><g><title>memcpy (411 instructions, 0.71%)</title><rect x="44.6962%" y="213" width="0.7130%" height="15" fill="rgb(253,114,12)" fg:x="25766" fg:w="411"/><text x="44.9891%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="45.4091%" y="197" width="0.0382%" height="15" fill="rgb(215,223,47)" fg:x="26177" fg:w="22"/><text x="45.7021%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.21%)</title><rect x="45.4473%" y="197" width="0.2134%" height="15" fill="rgb(248,225,23)" fg:x="26199" fg:w="123"/><text x="45.7403%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.12%)</title><rect x="45.6607%" y="165" width="0.1232%" height="15" fill="rgb(250,108,0)" fg:x="26322" fg:w="71"/><text x="45.9536%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (216 instructions, 0.37%)</title><rect x="45.6607%" y="181" width="0.3747%" height="15" fill="rgb(228,208,7)" fg:x="26322" fg:w="216"/><text x="45.9536%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (246 instructions, 0.43%)</title><rect x="45.6607%" y="197" width="0.4267%" height="15" fill="rgb(244,45,10)" fg:x="26322" fg:w="246"/><text x="45.9536%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.0874%" y="197" width="0.0191%" height="15" fill="rgb(207,125,25)" fg:x="26568" fg:w="11"/><text x="46.3804%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (501 instructions, 0.87%)</title><rect x="45.4091%" y="213" width="0.8691%" height="15" fill="rgb(210,195,18)" fg:x="26177" fg:w="501"/><text x="45.7021%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.09%)</title><rect x="46.2782%" y="197" width="0.0937%" height="15" fill="rgb(249,80,12)" fg:x="26678" fg:w="54"/><text x="46.5712%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (71 instructions, 0.12%)</title><rect x="46.3719%" y="197" width="0.1232%" height="15" fill="rgb(221,65,9)" fg:x="26732" fg:w="71"/><text x="46.6649%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.36%)</title><rect x="46.2782%" y="213" width="0.3556%" height="15" fill="rgb(235,49,36)" fg:x="26678" fg:w="205"/><text x="46.5712%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.6425%" y="197" width="0.0191%" height="15" fill="rgb(225,32,20)" fg:x="26888" fg:w="11"/><text x="46.9355%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.6616%" y="197" width="0.0191%" height="15" fill="rgb(215,141,46)" fg:x="26899" fg:w="11"/><text x="46.9545%" y="207.50"></text></g><g><title>memset (136 instructions, 0.24%)</title><rect x="46.6807%" y="197" width="0.2359%" height="15" fill="rgb(250,160,47)" fg:x="26910" fg:w="136"/><text x="46.9736%" y="207.50"></text></g><g><title>candid::ser::IDLBuilder::new (346 instructions, 0.60%)</title><rect x="46.6338%" y="213" width="0.6002%" height="15" fill="rgb(216,222,40)" fg:x="26883" fg:w="346"/><text x="46.9268%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 instructions, 0.01%)</title><rect x="47.2340%" y="197" width="0.0104%" height="15" fill="rgb(234,217,39)" fg:x="27229" fg:w="6"/><text x="47.5270%" y="207.50"></text></g><g><title>candid::types::internal::find_type (45 instructions, 0.08%)</title><rect x="47.2340%" y="213" width="0.0781%" height="15" fill="rgb(207,178,40)" fg:x="27229" fg:w="45"/><text x="47.5270%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.09%)</title><rect x="47.3121%" y="149" width="0.0937%" height="15" fill="rgb(221,136,13)" fg:x="27274" fg:w="54"/><text x="47.6051%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (218 instructions, 0.38%)</title><rect x="47.3121%" y="165" width="0.3782%" height="15" fill="rgb(249,199,10)" fg:x="27274" fg:w="218"/><text x="47.6051%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (228 instructions, 0.40%)</title><rect x="47.3121%" y="181" width="0.3955%" height="15" fill="rgb(249,222,13)" fg:x="27274" fg:w="228"/><text x="47.6051%" y="191.50"></text></g><g><title>__rust_alloc (231 instructions, 0.40%)</title><rect x="47.3121%" y="197" width="0.4007%" height="15" fill="rgb(244,185,38)" fg:x="27274" fg:w="231"/><text x="47.6051%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (277 instructions, 0.48%)</title><rect x="47.3121%" y="213" width="0.4805%" height="15" fill="rgb(236,202,9)" fg:x="27274" fg:w="277"/><text x="47.6051%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="47.8013%" y="165" width="0.0919%" height="15" fill="rgb(250,229,37)" fg:x="27556" fg:w="53"/><text x="48.0942%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.54%)</title><rect x="47.8932%" y="165" width="0.5395%" height="15" fill="rgb(206,174,23)" fg:x="27609" fg:w="311"/><text x="48.1862%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="48.4327%" y="165" width="0.1266%" height="15" fill="rgb(211,33,43)" fg:x="27920" fg:w="73"/><text x="48.7257%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (680 instructions, 1.18%)</title><rect x="47.8013%" y="181" width="1.1796%" height="15" fill="rgb(245,58,50)" fg:x="27556" fg:w="680"/><text x="48.0942%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (930 instructions, 1.61%)</title><rect x="47.7926%" y="197" width="1.6133%" height="15" fill="rgb(244,68,36)" fg:x="27551" fg:w="930"/><text x="48.0856%" y="207.50"></text></g><g><title>candid::types::internal::env_add (956 instructions, 1.66%)</title><rect x="47.7926%" y="213" width="1.6584%" height="15" fill="rgb(232,229,15)" fg:x="27551" fg:w="956"/><text x="48.0856%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="49.4510%" y="181" width="0.1561%" height="15" fill="rgb(254,30,23)" fg:x="28507" fg:w="90"/><text x="49.7439%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="49.4510%" y="197" width="0.1735%" height="15" fill="rgb(235,160,14)" fg:x="28507" fg:w="100"/><text x="49.7439%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="49.6296%" y="181" width="0.1561%" height="15" fill="rgb(212,155,44)" fg:x="28610" fg:w="90"/><text x="49.9226%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="49.6296%" y="197" width="0.1735%" height="15" fill="rgb(226,2,50)" fg:x="28610" fg:w="100"/><text x="49.9226%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="49.8083%" y="181" width="0.1631%" height="15" fill="rgb(234,177,6)" fg:x="28713" fg:w="94"/><text x="50.1013%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="49.8083%" y="197" width="0.1804%" height="15" fill="rgb(217,24,9)" fg:x="28713" fg:w="104"/><text x="50.1013%" y="207.50"></text></g><g><title>__rust_alloc (313 instructions, 0.54%)</title><rect x="49.4510%" y="213" width="0.5430%" height="15" fill="rgb(220,13,46)" fg:x="28507" fg:w="313"/><text x="49.7439%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="49.9939%" y="149" width="0.0919%" height="15" fill="rgb(239,221,27)" fg:x="28820" fg:w="53"/><text x="50.2869%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="50.0859%" y="149" width="0.5291%" height="15" fill="rgb(222,198,25)" fg:x="28873" fg:w="305"/><text x="50.3788%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="50.6149%" y="149" width="0.1266%" height="15" fill="rgb(211,99,13)" fg:x="29178" fg:w="73"/><text x="50.9079%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="49.9939%" y="165" width="1.1692%" height="15" fill="rgb(232,111,31)" fg:x="28820" fg:w="674"/><text x="50.2869%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (754 instructions, 1.31%)</title><rect x="49.9939%" y="181" width="1.3080%" height="15" fill="rgb(245,82,37)" fg:x="28820" fg:w="754"/><text x="50.2869%" y="191.50"></text></g><g><title>candid::types::internal::find_type (793 instructions, 1.38%)</title><rect x="49.9939%" y="197" width="1.3756%" height="15" fill="rgb(227,149,46)" fg:x="28820" fg:w="793"/><text x="50.2869%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="51.3695%" y="149" width="0.1561%" height="15" fill="rgb(218,36,50)" fg:x="29613" fg:w="90"/><text x="51.6625%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="51.3695%" y="165" width="0.1735%" height="15" fill="rgb(226,80,48)" fg:x="29613" fg:w="100"/><text x="51.6625%" y="175.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="51.3695%" y="181" width="0.1787%" height="15" fill="rgb(238,224,15)" fg:x="29613" fg:w="103"/><text x="51.6625%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (149 instructions, 0.26%)</title><rect x="51.3695%" y="197" width="0.2585%" height="15" fill="rgb(241,136,10)" fg:x="29613" fg:w="149"/><text x="51.6625%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="51.6367%" y="149" width="0.0919%" height="15" fill="rgb(208,32,45)" fg:x="29767" fg:w="53"/><text x="51.9297%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="51.7286%" y="149" width="0.5291%" height="15" fill="rgb(207,135,9)" fg:x="29820" fg:w="305"/><text x="52.0216%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="52.2577%" y="149" width="0.1266%" height="15" fill="rgb(206,86,44)" fg:x="30125" fg:w="73"/><text x="52.5507%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="51.6367%" y="165" width="1.1692%" height="15" fill="rgb(245,177,15)" fg:x="29767" fg:w="674"/><text x="51.9297%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (924 instructions, 1.60%)</title><rect x="51.6280%" y="181" width="1.6029%" height="15" fill="rgb(206,64,50)" fg:x="29762" fg:w="924"/><text x="51.9210%" y="191.50"></text></g><g><title>candid::types::internal::env_add (950 instructions, 1.65%)</title><rect x="51.6280%" y="197" width="1.6480%" height="15" fill="rgb(234,36,40)" fg:x="29762" fg:w="950"/><text x="51.9210%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="53.2760%" y="165" width="0.1561%" height="15" fill="rgb(213,64,8)" fg:x="30712" fg:w="90"/><text x="53.5689%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="53.2760%" y="181" width="0.1735%" height="15" fill="rgb(210,75,36)" fg:x="30712" fg:w="100"/><text x="53.5689%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="53.2760%" y="197" width="0.1787%" height="15" fill="rgb(229,88,21)" fg:x="30712" fg:w="103"/><text x="53.5689%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="53.4633%" y="149" width="0.0919%" height="15" fill="rgb(252,204,47)" fg:x="30820" fg:w="53"/><text x="53.7563%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.53%)</title><rect x="53.5553%" y="149" width="0.5291%" height="15" fill="rgb(208,77,27)" fg:x="30873" fg:w="305"/><text x="53.8482%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="54.0843%" y="149" width="0.1266%" height="15" fill="rgb(221,76,26)" fg:x="31178" fg:w="73"/><text x="54.3773%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.17%)</title><rect x="53.4633%" y="165" width="1.1692%" height="15" fill="rgb(225,139,18)" fg:x="30820" fg:w="674"/><text x="53.7563%" y="175.50"></text></g><g><title>memcmp (446 instructions, 0.77%)</title><rect x="54.6325%" y="165" width="0.7737%" height="15" fill="rgb(230,137,11)" fg:x="31494" fg:w="446"/><text x="54.9255%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="55.4062%" y="149" width="0.1405%" height="15" fill="rgb(212,28,1)" fg:x="31940" fg:w="81"/><text x="55.6991%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.19%)</title><rect x="55.4062%" y="165" width="0.1926%" height="15" fill="rgb(248,164,17)" fg:x="31940" fg:w="111"/><text x="55.6991%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,410 instructions, 2.45%)</title><rect x="53.4546%" y="181" width="2.4459%" height="15" fill="rgb(222,171,42)" fg:x="30815" fg:w="1410"/><text x="53.7476%" y="191.50">s..</text></g><g><title>candid::types::internal::env_add (1,436 instructions, 2.49%)</title><rect x="53.4546%" y="197" width="2.4910%" height="15" fill="rgb(243,84,45)" fg:x="30815" fg:w="1436"/><text x="53.7476%" y="207.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="55.9543%" y="133" width="0.0919%" height="15" fill="rgb(252,49,23)" fg:x="32256" fg:w="53"/><text x="56.2473%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="55.9543%" y="149" width="0.1353%" height="15" fill="rgb(215,19,7)" fg:x="32256" fg:w="78"/><text x="56.2473%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.52%)</title><rect x="55.9543%" y="165" width="0.5204%" height="15" fill="rgb(238,81,41)" fg:x="32256" fg:w="300"/><text x="56.2473%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="56.4748%" y="165" width="0.0260%" height="15" fill="rgb(210,199,37)" fg:x="32556" fg:w="15"/><text x="56.7677%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (27 instructions, 0.05%)</title><rect x="56.5008%" y="165" width="0.0468%" height="15" fill="rgb(244,192,49)" fg:x="32571" fg:w="27"/><text x="56.7937%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.5476%" y="165" width="0.0191%" height="15" fill="rgb(226,211,11)" fg:x="32598" fg:w="11"/><text x="56.8406%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (559 instructions, 0.97%)</title><rect x="55.9457%" y="181" width="0.9697%" height="15" fill="rgb(236,162,54)" fg:x="32251" fg:w="559"/><text x="56.2386%" y="191.50"></text></g><g><title>candid::types::internal::env_id (596 instructions, 1.03%)</title><rect x="55.9457%" y="197" width="1.0339%" height="15" fill="rgb(220,229,9)" fg:x="32251" fg:w="596"/><text x="56.2386%" y="207.50"></text></g><g><title>candid::types::CandidType::ty (4,140 instructions, 7.18%)</title><rect x="49.9939%" y="213" width="7.1816%" height="15" fill="rgb(250,87,22)" fg:x="28820" fg:w="4140"/><text x="50.2869%" y="223.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="57.1756%" y="165" width="0.1631%" height="15" fill="rgb(239,43,17)" fg:x="32960" fg:w="94"/><text x="57.4685%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="57.1756%" y="181" width="0.1804%" height="15" fill="rgb(231,177,25)" fg:x="32960" fg:w="104"/><text x="57.4685%" y="191.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="57.1756%" y="197" width="0.1856%" height="15" fill="rgb(219,179,1)" fg:x="32960" fg:w="107"/><text x="57.4685%" y="207.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (153 instructions, 0.27%)</title><rect x="57.1756%" y="213" width="0.2654%" height="15" fill="rgb(238,219,53)" fg:x="32960" fg:w="153"/><text x="57.4685%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="57.4497%" y="165" width="0.0919%" height="15" fill="rgb(232,167,36)" fg:x="33118" fg:w="53"/><text x="57.7426%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.54%)</title><rect x="57.5416%" y="165" width="0.5395%" height="15" fill="rgb(244,19,51)" fg:x="33171" fg:w="311"/><text x="57.8346%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.13%)</title><rect x="58.0811%" y="165" width="0.1266%" height="15" fill="rgb(224,6,22)" fg:x="33482" fg:w="73"/><text x="58.3740%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (680 instructions, 1.18%)</title><rect x="57.4497%" y="181" width="1.1796%" height="15" fill="rgb(224,145,5)" fg:x="33118" fg:w="680"/><text x="57.7426%" y="191.50"></text></g><g><title>memcmp (467 instructions, 0.81%)</title><rect x="58.6292%" y="181" width="0.8101%" height="15" fill="rgb(234,130,49)" fg:x="33798" fg:w="467"/><text x="58.9222%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="59.4393%" y="165" width="0.1405%" height="15" fill="rgb(254,6,2)" fg:x="34265" fg:w="81"/><text x="59.7323%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.19%)</title><rect x="59.4393%" y="181" width="0.1926%" height="15" fill="rgb(208,96,46)" fg:x="34265" fg:w="111"/><text x="59.7323%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,437 instructions, 2.49%)</title><rect x="57.4410%" y="197" width="2.4928%" height="15" fill="rgb(239,3,39)" fg:x="33113" fg:w="1437"/><text x="57.7339%" y="207.50">s..</text></g><g><title>candid::types::internal::env_add (1,463 instructions, 2.54%)</title><rect x="57.4410%" y="213" width="2.5379%" height="15" fill="rgb(233,210,1)" fg:x="33113" fg:w="1463"/><text x="57.7339%" y="223.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="59.9875%" y="149" width="0.0919%" height="15" fill="rgb(244,137,37)" fg:x="34581" fg:w="53"/><text x="60.2805%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.27%)</title><rect x="60.0794%" y="149" width="0.2654%" height="15" fill="rgb(240,136,2)" fg:x="34634" fg:w="153"/><text x="60.3724%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="60.3449%" y="133" width="0.0919%" height="15" fill="rgb(239,18,37)" fg:x="34787" fg:w="53"/><text x="60.6378%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="60.3449%" y="149" width="0.1353%" height="15" fill="rgb(218,185,22)" fg:x="34787" fg:w="78"/><text x="60.6378%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.61%)</title><rect x="59.9875%" y="165" width="0.6106%" height="15" fill="rgb(225,218,4)" fg:x="34581" fg:w="352"/><text x="60.2805%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="60.9832%" y="149" width="0.0919%" height="15" fill="rgb(230,182,32)" fg:x="35155" fg:w="53"/><text x="61.2762%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.27%)</title><rect x="61.0752%" y="149" width="0.2654%" height="15" fill="rgb(242,56,43)" fg:x="35208" fg:w="153"/><text x="61.3681%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="61.3406%" y="133" width="0.0919%" height="15" fill="rgb(233,99,24)" fg:x="35361" fg:w="53"/><text x="61.6335%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="61.3406%" y="149" width="0.1353%" height="15" fill="rgb(234,209,42)" fg:x="35361" fg:w="78"/><text x="61.6335%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.61%)</title><rect x="60.9832%" y="165" width="0.6106%" height="15" fill="rgb(227,7,12)" fg:x="35155" fg:w="352"/><text x="61.2762%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,148 instructions, 1.99%)</title><rect x="59.9875%" y="181" width="1.9914%" height="15" fill="rgb(245,203,43)" fg:x="34581" fg:w="1148"/><text x="60.2805%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,521 instructions, 2.64%)</title><rect x="59.9788%" y="197" width="2.6385%" height="15" fill="rgb(238,205,33)" fg:x="34576" fg:w="1521"/><text x="60.2718%" y="207.50">s..</text></g><g><title>candid::types::internal::env_id (1,558 instructions, 2.70%)</title><rect x="59.9788%" y="213" width="2.7027%" height="15" fill="rgb(231,56,7)" fg:x="34576" fg:w="1558"/><text x="60.2718%" y="223.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="62.6815%" y="133" width="0.1561%" height="15" fill="rgb(244,186,29)" fg:x="36134" fg:w="90"/><text x="62.9745%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="62.6815%" y="149" width="0.1735%" height="15" fill="rgb(234,111,31)" fg:x="36134" fg:w="100"/><text x="62.9745%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="62.6815%" y="165" width="0.1787%" height="15" fill="rgb(241,149,10)" fg:x="36134" fg:w="103"/><text x="62.9745%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 instructions, 0.23%)</title><rect x="62.6815%" y="181" width="0.2307%" height="15" fill="rgb(249,206,44)" fg:x="36134" fg:w="133"/><text x="62.9745%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (201 instructions, 0.35%)</title><rect x="62.6815%" y="197" width="0.3487%" height="15" fill="rgb(251,153,30)" fg:x="36134" fg:w="201"/><text x="62.9745%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (16 instructions, 0.03%)</title><rect x="63.0302%" y="181" width="0.0278%" height="15" fill="rgb(239,152,38)" fg:x="36335" fg:w="16"/><text x="63.3231%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="63.0579%" y="133" width="0.1561%" height="15" fill="rgb(249,139,47)" fg:x="36351" fg:w="90"/><text x="63.3509%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="63.0579%" y="149" width="0.1735%" height="15" fill="rgb(244,64,35)" fg:x="36351" fg:w="100"/><text x="63.3509%" y="159.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="63.0579%" y="165" width="0.1787%" height="15" fill="rgb(216,46,15)" fg:x="36351" fg:w="103"/><text x="63.3509%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="63.2366%" y="117" width="0.1631%" height="15" fill="rgb(250,74,19)" fg:x="36454" fg:w="94"/><text x="63.5296%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="63.2366%" y="133" width="0.1804%" height="15" fill="rgb(249,42,33)" fg:x="36454" fg:w="104"/><text x="63.5296%" y="143.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="63.2366%" y="149" width="0.1856%" height="15" fill="rgb(242,149,17)" fg:x="36454" fg:w="107"/><text x="63.5296%" y="159.50"></text></g><g><title>candid::types::internal::unroll (198 instructions, 0.34%)</title><rect x="63.2366%" y="165" width="0.3435%" height="15" fill="rgb(244,29,21)" fg:x="36454" fg:w="198"/><text x="63.5296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="63.5801%" y="133" width="0.1613%" height="15" fill="rgb(220,130,37)" fg:x="36652" fg:w="93"/><text x="63.8730%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="63.5801%" y="149" width="0.1787%" height="15" fill="rgb(211,67,2)" fg:x="36652" fg:w="103"/><text x="63.8730%" y="159.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="63.5801%" y="165" width="0.1839%" height="15" fill="rgb(235,68,52)" fg:x="36652" fg:w="106"/><text x="63.8730%" y="175.50"></text></g><g><title>candid::types::internal::unroll (565 instructions, 0.98%)</title><rect x="63.0579%" y="181" width="0.9801%" height="15" fill="rgb(246,142,3)" fg:x="36351" fg:w="565"/><text x="63.3509%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="64.0380%" y="133" width="0.0919%" height="15" fill="rgb(241,25,7)" fg:x="36916" fg:w="53"/><text x="64.3310%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.27%)</title><rect x="64.1300%" y="133" width="0.2654%" height="15" fill="rgb(242,119,39)" fg:x="36969" fg:w="153"/><text x="64.4229%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="64.3954%" y="117" width="0.0919%" height="15" fill="rgb(241,98,45)" fg:x="37122" fg:w="53"/><text x="64.6883%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="64.3954%" y="133" width="0.1353%" height="15" fill="rgb(254,28,30)" fg:x="37122" fg:w="78"/><text x="64.6883%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.61%)</title><rect x="64.0380%" y="149" width="0.6106%" height="15" fill="rgb(241,142,54)" fg:x="36916" fg:w="352"/><text x="64.3310%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (574 instructions, 1.00%)</title><rect x="64.0380%" y="165" width="0.9957%" height="15" fill="rgb(222,85,15)" fg:x="36916" fg:w="574"/><text x="64.3310%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.15%)</title><rect x="65.0337%" y="117" width="0.1544%" height="15" fill="rgb(210,85,47)" fg:x="37490" fg:w="89"/><text x="65.3267%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (99 instructions, 0.17%)</title><rect x="65.0337%" y="133" width="0.1717%" height="15" fill="rgb(224,206,25)" fg:x="37490" fg:w="99"/><text x="65.3267%" y="143.50"></text></g><g><title>__rust_alloc (102 instructions, 0.18%)</title><rect x="65.0337%" y="149" width="0.1769%" height="15" fill="rgb(243,201,19)" fg:x="37490" fg:w="102"/><text x="65.3267%" y="159.50"></text></g><g><title>memset (136 instructions, 0.24%)</title><rect x="65.2107%" y="149" width="0.2359%" height="15" fill="rgb(236,59,4)" fg:x="37592" fg:w="136"/><text x="65.5036%" y="159.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (344 instructions, 0.60%)</title><rect x="65.0337%" y="165" width="0.5967%" height="15" fill="rgb(254,179,45)" fg:x="37490" fg:w="344"/><text x="65.3267%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,248 instructions, 2.16%)</title><rect x="64.0380%" y="181" width="2.1649%" height="15" fill="rgb(226,14,10)" fg:x="36916" fg:w="1248"/><text x="64.3310%" y="191.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="66.2029%" y="117" width="0.1613%" height="15" fill="rgb(244,27,41)" fg:x="38164" fg:w="93"/><text x="66.4959%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="66.2029%" y="133" width="0.1787%" height="15" fill="rgb(235,35,32)" fg:x="38164" fg:w="103"/><text x="66.4959%" y="143.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="66.2029%" y="149" width="0.1839%" height="15" fill="rgb(218,68,31)" fg:x="38164" fg:w="106"/><text x="66.4959%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.24%)</title><rect x="66.2029%" y="165" width="0.2359%" height="15" fill="rgb(207,120,37)" fg:x="38164" fg:w="136"/><text x="66.4959%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (204 instructions, 0.35%)</title><rect x="66.2029%" y="181" width="0.3539%" height="15" fill="rgb(227,98,0)" fg:x="38164" fg:w="204"/><text x="66.4959%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="66.5568%" y="133" width="0.0919%" height="15" fill="rgb(207,7,3)" fg:x="38368" fg:w="53"/><text x="66.8498%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="66.5568%" y="149" width="0.1353%" height="15" fill="rgb(206,98,19)" fg:x="38368" fg:w="78"/><text x="66.8498%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (300 instructions, 0.52%)</title><rect x="66.5568%" y="165" width="0.5204%" height="15" fill="rgb(217,5,26)" fg:x="38368" fg:w="300"/><text x="66.8498%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (10 instructions, 0.02%)</title><rect x="67.0772%" y="165" width="0.0173%" height="15" fill="rgb(235,190,38)" fg:x="38668" fg:w="10"/><text x="67.3702%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="67.0946%" y="165" width="0.0191%" height="15" fill="rgb(247,86,24)" fg:x="38678" fg:w="11"/><text x="67.3875%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (435 instructions, 0.75%)</title><rect x="66.5568%" y="181" width="0.7546%" height="15" fill="rgb(205,101,16)" fg:x="38368" fg:w="435"/><text x="66.8498%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="67.3114%" y="101" width="0.1613%" height="15" fill="rgb(246,168,33)" fg:x="38803" fg:w="93"/><text x="67.6044%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="67.3114%" y="117" width="0.1787%" height="15" fill="rgb(231,114,1)" fg:x="38803" fg:w="103"/><text x="67.6044%" y="127.50"></text></g><g><title>__rust_alloc (106 instructions, 0.18%)</title><rect x="67.3114%" y="133" width="0.1839%" height="15" fill="rgb(207,184,53)" fg:x="38803" fg:w="106"/><text x="67.6044%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.24%)</title><rect x="67.3114%" y="149" width="0.2359%" height="15" fill="rgb(224,95,51)" fg:x="38803" fg:w="136"/><text x="67.6044%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (201 instructions, 0.35%)</title><rect x="67.3114%" y="165" width="0.3487%" height="15" fill="rgb(212,188,45)" fg:x="38803" fg:w="201"/><text x="67.6044%" y="175.50"></text></g><g><title>leb128::write::signed (257 instructions, 0.45%)</title><rect x="67.3114%" y="181" width="0.4458%" height="15" fill="rgb(223,154,38)" fg:x="38803" fg:w="257"/><text x="67.6044%" y="191.50"></text></g><g><title>leb128::write::unsigned (49 instructions, 0.09%)</title><rect x="67.7572%" y="181" width="0.0850%" height="15" fill="rgb(251,22,52)" fg:x="39060" fg:w="49"/><text x="68.0502%" y="191.50"></text></g><g><title>candid::types::internal::Label::get_id (112 instructions, 0.19%)</title><rect x="67.8422%" y="181" width="0.1943%" height="15" fill="rgb(229,209,22)" fg:x="39109" fg:w="112"/><text x="68.1352%" y="191.50"></text></g><g><title>leb128::write::unsigned (209 instructions, 0.36%)</title><rect x="68.0365%" y="181" width="0.3626%" height="15" fill="rgb(234,138,34)" fg:x="39221" fg:w="209"/><text x="68.3295%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (60 instructions, 0.10%)</title><rect x="68.3990%" y="181" width="0.1041%" height="15" fill="rgb(212,95,11)" fg:x="39430" fg:w="60"/><text x="68.6920%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="68.5031%" y="149" width="0.1405%" height="15" fill="rgb(240,179,47)" fg:x="39490" fg:w="81"/><text x="68.7961%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.19%)</title><rect x="68.5031%" y="165" width="0.1926%" height="15" fill="rgb(240,163,11)" fg:x="39490" fg:w="111"/><text x="68.7961%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="68.6957%" y="165" width="0.1405%" height="15" fill="rgb(236,37,12)" fg:x="39601" fg:w="81"/><text x="68.9887%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.14%)</title><rect x="68.8362%" y="165" width="0.1353%" height="15" fill="rgb(232,164,16)" fg:x="39682" fg:w="78"/><text x="69.1292%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (345 instructions, 0.60%)</title><rect x="68.5031%" y="181" width="0.5985%" height="15" fill="rgb(244,205,15)" fg:x="39490" fg:w="345"/><text x="68.7961%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.1016%" y="181" width="0.0191%" height="15" fill="rgb(223,117,47)" fg:x="39835" fg:w="11"/><text x="69.3946%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,810 instructions, 6.61%)</title><rect x="63.0302%" y="197" width="6.6092%" height="15" fill="rgb(244,107,35)" fg:x="36335" fg:w="3810"/><text x="63.3231%" y="207.50">candid:..</text></g><g><title>candid::ser::TypeSerialize::push_type (4,060 instructions, 7.04%)</title><rect x="62.6815%" y="213" width="7.0429%" height="15" fill="rgb(205,140,8)" fg:x="36134" fg:w="4060"/><text x="62.9745%" y="223.50">candid::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.7244%" y="213" width="0.0191%" height="15" fill="rgb(228,84,46)" fg:x="40194" fg:w="11"/><text x="70.0173%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="69.7434%" y="181" width="0.1631%" height="15" fill="rgb(254,188,9)" fg:x="40205" fg:w="94"/><text x="70.0364%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="69.7434%" y="197" width="0.1804%" height="15" fill="rgb(206,112,54)" fg:x="40205" fg:w="104"/><text x="70.0364%" y="207.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="69.7434%" y="213" width="0.1856%" height="15" fill="rgb(216,84,49)" fg:x="40205" fg:w="107"/><text x="70.0364%" y="223.50"></text></g><g><title>memcpy (105 instructions, 0.18%)</title><rect x="69.9291%" y="213" width="0.1821%" height="15" fill="rgb(214,194,35)" fg:x="40312" fg:w="105"/><text x="70.2220%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (135 instructions, 0.23%)</title><rect x="70.1112%" y="149" width="0.2342%" height="15" fill="rgb(249,28,3)" fg:x="40417" fg:w="135"/><text x="70.4042%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (145 instructions, 0.25%)</title><rect x="70.1112%" y="165" width="0.2515%" height="15" fill="rgb(222,56,52)" fg:x="40417" fg:w="145"/><text x="70.4042%" y="175.50"></text></g><g><title>__rust_alloc (148 instructions, 0.26%)</title><rect x="70.1112%" y="181" width="0.2567%" height="15" fill="rgb(245,217,50)" fg:x="40417" fg:w="148"/><text x="70.4042%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (178 instructions, 0.31%)</title><rect x="70.1112%" y="197" width="0.3088%" height="15" fill="rgb(213,201,24)" fg:x="40417" fg:w="178"/><text x="70.4042%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.42%)</title><rect x="70.1112%" y="213" width="0.4215%" height="15" fill="rgb(248,116,28)" fg:x="40417" fg:w="243"/><text x="70.4042%" y="223.50"></text></g><g><title>memcpy (105 instructions, 0.18%)</title><rect x="70.5327%" y="213" width="0.1821%" height="15" fill="rgb(219,72,43)" fg:x="40660" fg:w="105"/><text x="70.8257%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="70.7149%" y="213" width="0.1405%" height="15" fill="rgb(209,138,14)" fg:x="40765" fg:w="81"/><text x="71.0078%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.14%)</title><rect x="70.8554%" y="213" width="0.1353%" height="15" fill="rgb(222,18,33)" fg:x="40846" fg:w="78"/><text x="71.1483%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="70.9907%" y="149" width="0.1631%" height="15" fill="rgb(213,199,7)" fg:x="40924" fg:w="94"/><text x="71.2837%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="70.9907%" y="165" width="0.1804%" height="15" fill="rgb(250,110,10)" fg:x="40924" fg:w="104"/><text x="71.2837%" y="175.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="70.9907%" y="181" width="0.1856%" height="15" fill="rgb(248,123,6)" fg:x="40924" fg:w="107"/><text x="71.2837%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.24%)</title><rect x="70.9907%" y="197" width="0.2377%" height="15" fill="rgb(206,91,31)" fg:x="40924" fg:w="137"/><text x="71.2837%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 instructions, 0.35%)</title><rect x="70.9907%" y="213" width="0.3504%" height="15" fill="rgb(211,154,13)" fg:x="40924" fg:w="202"/><text x="71.2837%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="71.3411%" y="133" width="0.1631%" height="15" fill="rgb(225,148,7)" fg:x="41126" fg:w="94"/><text x="71.6341%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="71.3411%" y="149" width="0.1804%" height="15" fill="rgb(220,160,43)" fg:x="41126" fg:w="104"/><text x="71.6341%" y="159.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="71.3411%" y="165" width="0.1856%" height="15" fill="rgb(213,52,39)" fg:x="41126" fg:w="107"/><text x="71.6341%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.24%)</title><rect x="71.3411%" y="181" width="0.2377%" height="15" fill="rgb(243,137,7)" fg:x="41126" fg:w="137"/><text x="71.6341%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 instructions, 0.35%)</title><rect x="71.3411%" y="197" width="0.3504%" height="15" fill="rgb(230,79,13)" fg:x="41126" fg:w="202"/><text x="71.6341%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="71.6915%" y="165" width="0.1561%" height="15" fill="rgb(247,105,23)" fg:x="41328" fg:w="90"/><text x="71.9845%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="71.6915%" y="181" width="0.1735%" height="15" fill="rgb(223,179,41)" fg:x="41328" fg:w="100"/><text x="71.9845%" y="191.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="71.6915%" y="197" width="0.1787%" height="15" fill="rgb(218,9,34)" fg:x="41328" fg:w="103"/><text x="71.9845%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.23%)</title><rect x="71.8702%" y="197" width="0.2342%" height="15" fill="rgb(222,106,8)" fg:x="41431" fg:w="135"/><text x="72.1631%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (89 instructions, 0.15%)</title><rect x="72.1044%" y="149" width="0.1544%" height="15" fill="rgb(211,220,0)" fg:x="41566" fg:w="89"/><text x="72.3973%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.34%)</title><rect x="72.2587%" y="149" width="0.3383%" height="15" fill="rgb(229,52,16)" fg:x="41655" fg:w="195"/><text x="72.5517%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="72.5970%" y="149" width="0.1405%" height="15" fill="rgb(212,155,18)" fg:x="41850" fg:w="81"/><text x="72.8900%" y="159.50"></text></g><g><title>__rust_realloc (453 instructions, 0.79%)</title><rect x="72.1044%" y="165" width="0.7858%" height="15" fill="rgb(242,21,14)" fg:x="41566" fg:w="453"/><text x="72.3973%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (489 instructions, 0.85%)</title><rect x="72.1044%" y="181" width="0.8483%" height="15" fill="rgb(222,19,48)" fg:x="41566" fg:w="489"/><text x="72.3973%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (564 instructions, 0.98%)</title><rect x="72.1044%" y="197" width="0.9784%" height="15" fill="rgb(232,45,27)" fg:x="41566" fg:w="564"/><text x="72.3973%" y="207.50"></text></g><g><title>memcpy (135 instructions, 0.23%)</title><rect x="73.0827%" y="197" width="0.2342%" height="15" fill="rgb(249,103,42)" fg:x="42130" fg:w="135"/><text x="73.3757%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.14%)</title><rect x="73.3169%" y="197" width="0.1353%" height="15" fill="rgb(246,81,33)" fg:x="42265" fg:w="78"/><text x="73.6099%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="73.4522%" y="149" width="0.0919%" height="15" fill="rgb(252,33,42)" fg:x="42343" fg:w="53"/><text x="73.7452%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.27%)</title><rect x="73.5442%" y="149" width="0.2654%" height="15" fill="rgb(209,212,41)" fg:x="42396" fg:w="153"/><text x="73.8371%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.09%)</title><rect x="73.8096%" y="133" width="0.0919%" height="15" fill="rgb(207,154,6)" fg:x="42549" fg:w="53"/><text x="74.1025%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.14%)</title><rect x="73.8096%" y="149" width="0.1353%" height="15" fill="rgb(223,64,47)" fg:x="42549" fg:w="78"/><text x="74.1025%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (352 instructions, 0.61%)</title><rect x="73.4522%" y="165" width="0.6106%" height="15" fill="rgb(211,161,38)" fg:x="42343" fg:w="352"/><text x="73.7452%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (574 instructions, 1.00%)</title><rect x="73.4522%" y="181" width="0.9957%" height="15" fill="rgb(219,138,40)" fg:x="42343" fg:w="574"/><text x="73.7452%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (20 instructions, 0.03%)</title><rect x="74.4479%" y="181" width="0.0347%" height="15" fill="rgb(241,228,46)" fg:x="42917" fg:w="20"/><text x="74.7409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="74.4826%" y="117" width="0.1631%" height="15" fill="rgb(223,209,38)" fg:x="42937" fg:w="94"/><text x="74.7756%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="74.4826%" y="133" width="0.1804%" height="15" fill="rgb(236,164,45)" fg:x="42937" fg:w="104"/><text x="74.7756%" y="143.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="74.4826%" y="149" width="0.1856%" height="15" fill="rgb(231,15,5)" fg:x="42937" fg:w="107"/><text x="74.7756%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.24%)</title><rect x="74.4826%" y="165" width="0.2377%" height="15" fill="rgb(252,35,15)" fg:x="42937" fg:w="137"/><text x="74.7756%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 instructions, 0.35%)</title><rect x="74.4826%" y="181" width="0.3504%" height="15" fill="rgb(248,181,18)" fg:x="42937" fg:w="202"/><text x="74.7756%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (971 instructions, 1.68%)</title><rect x="73.4522%" y="197" width="1.6844%" height="15" fill="rgb(233,39,42)" fg:x="42343" fg:w="971"/><text x="73.7452%" y="207.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="75.1366%" y="197" width="0.0520%" height="15" fill="rgb(238,110,33)" fg:x="43314" fg:w="30"/><text x="75.4296%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.14%)</title><rect x="75.1886%" y="197" width="0.1353%" height="15" fill="rgb(233,195,10)" fg:x="43344" fg:w="78"/><text x="75.4816%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,663 instructions, 4.62%)</title><rect x="71.3411%" y="213" width="4.6195%" height="15" fill="rgb(254,105,3)" fg:x="41126" fg:w="2663"/><text x="71.6341%" y="223.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (136 instructions, 0.24%)</title><rect x="75.9606%" y="165" width="0.2359%" height="15" fill="rgb(221,225,9)" fg:x="43789" fg:w="136"/><text x="76.2536%" y="175.50"></text></g><g><title>memcpy (195 instructions, 0.34%)</title><rect x="76.1965%" y="165" width="0.3383%" height="15" fill="rgb(224,227,45)" fg:x="43925" fg:w="195"/><text x="76.4895%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.14%)</title><rect x="76.5348%" y="165" width="0.1353%" height="15" fill="rgb(229,198,43)" fg:x="44120" fg:w="78"/><text x="76.8277%" y="175.50"></text></g><g><title>__rust_realloc (497 instructions, 0.86%)</title><rect x="75.9606%" y="181" width="0.8621%" height="15" fill="rgb(206,209,35)" fg:x="43789" fg:w="497"/><text x="76.2536%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (533 instructions, 0.92%)</title><rect x="75.9606%" y="197" width="0.9246%" height="15" fill="rgb(245,195,53)" fg:x="43789" fg:w="533"/><text x="76.2536%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (608 instructions, 1.05%)</title><rect x="75.9606%" y="213" width="1.0547%" height="15" fill="rgb(240,92,26)" fg:x="43789" fg:w="608"/><text x="76.2536%" y="223.50"></text></g><g><title>memcpy (180 instructions, 0.31%)</title><rect x="77.0153%" y="213" width="0.3122%" height="15" fill="rgb(207,40,23)" fg:x="44397" fg:w="180"/><text x="77.3083%" y="223.50"></text></g><g><title>__rust_realloc (122 instructions, 0.21%)</title><rect x="77.3275%" y="181" width="0.2116%" height="15" fill="rgb(223,111,35)" fg:x="44577" fg:w="122"/><text x="77.6205%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (158 instructions, 0.27%)</title><rect x="77.3275%" y="197" width="0.2741%" height="15" fill="rgb(229,147,28)" fg:x="44577" fg:w="158"/><text x="77.6205%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (233 instructions, 0.40%)</title><rect x="77.3275%" y="213" width="0.4042%" height="15" fill="rgb(211,29,28)" fg:x="44577" fg:w="233"/><text x="77.6205%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.21%)</title><rect x="77.7317%" y="213" width="0.2082%" height="15" fill="rgb(228,72,33)" fg:x="44810" fg:w="120"/><text x="78.0247%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="77.9399%" y="213" width="0.0954%" height="15" fill="rgb(205,214,31)" fg:x="44930" fg:w="55"/><text x="78.2328%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="78.0353%" y="213" width="0.0954%" height="15" fill="rgb(224,111,15)" fg:x="44985" fg:w="55"/><text x="78.3283%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.1307%" y="213" width="0.0191%" height="15" fill="rgb(253,21,26)" fg:x="45040" fg:w="11"/><text x="78.4237%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.22%)</title><rect x="78.1498%" y="213" width="0.2151%" height="15" fill="rgb(245,139,43)" fg:x="45051" fg:w="124"/><text x="78.4427%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.3735%" y="213" width="0.0191%" height="15" fill="rgb(252,170,7)" fg:x="45180" fg:w="11"/><text x="78.6665%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.21%)</title><rect x="78.3926%" y="213" width="0.2134%" height="15" fill="rgb(231,118,14)" fg:x="45191" fg:w="123"/><text x="78.6856%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.17%)</title><rect x="78.6060%" y="213" width="0.1700%" height="15" fill="rgb(238,83,0)" fg:x="45314" fg:w="98"/><text x="78.8990%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="78.7760%" y="213" width="0.0954%" height="15" fill="rgb(221,39,39)" fg:x="45412" fg:w="55"/><text x="79.0690%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.30%)</title><rect x="78.8714%" y="181" width="0.3001%" height="15" fill="rgb(222,119,46)" fg:x="45467" fg:w="173"/><text x="79.1644%" y="191.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (183 instructions, 0.32%)</title><rect x="78.8714%" y="197" width="0.3174%" height="15" fill="rgb(222,165,49)" fg:x="45467" fg:w="183"/><text x="79.1644%" y="207.50"></text></g><g><title>__rust_alloc (186 instructions, 0.32%)</title><rect x="78.8714%" y="213" width="0.3227%" height="15" fill="rgb(219,113,52)" fg:x="45467" fg:w="186"/><text x="79.1644%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.21%)</title><rect x="79.1941%" y="213" width="0.2082%" height="15" fill="rgb(214,7,15)" fg:x="45653" fg:w="120"/><text x="79.4870%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.01%)</title><rect x="79.4022%" y="213" width="0.0104%" height="15" fill="rgb(235,32,4)" fg:x="45773" fg:w="6"/><text x="79.6952%" y="223.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (47,216 instructions, 81.91%)</title><rect x="1.0217%" y="229" width="81.9054%" height="15" fill="rgb(238,90,54)" fg:x="589" fg:w="47216"/><text x="1.3147%" y="239.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>canister_update setup_subscribe (47,934 instructions, 83.15%)</title><rect x="0.0000%" y="245" width="83.1509%" height="15" fill="rgb(213,208,19)" fg:x="0" fg:w="47934"/><text x="0.2930%" y="255.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="83.1509%" y="197" width="0.1631%" height="15" fill="rgb(233,156,4)" fg:x="47934" fg:w="94"/><text x="83.4439%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="83.1509%" y="213" width="0.1804%" height="15" fill="rgb(207,194,5)" fg:x="47934" fg:w="104"/><text x="83.4439%" y="223.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="83.1509%" y="229" width="0.1856%" height="15" fill="rgb(206,111,30)" fg:x="47934" fg:w="107"/><text x="83.4439%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="83.3365%" y="165" width="0.1058%" height="15" fill="rgb(243,70,54)" fg:x="48041" fg:w="61"/><text x="83.6295%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="83.4423%" y="165" width="0.7060%" height="15" fill="rgb(242,28,8)" fg:x="48102" fg:w="407"/><text x="83.7353%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="84.1484%" y="165" width="0.1284%" height="15" fill="rgb(219,106,18)" fg:x="48509" fg:w="74"/><text x="84.4413%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="84.2767%" y="165" width="0.0937%" height="15" fill="rgb(244,222,10)" fg:x="48583" fg:w="54"/><text x="84.5697%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="84.3704%" y="165" width="0.0937%" height="15" fill="rgb(236,179,52)" fg:x="48637" fg:w="54"/><text x="84.6634%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="84.4641%" y="165" width="0.0937%" height="15" fill="rgb(213,23,39)" fg:x="48691" fg:w="54"/><text x="84.7570%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.09%)</title><rect x="84.5577%" y="165" width="0.0937%" height="15" fill="rgb(238,48,10)" fg:x="48745" fg:w="54"/><text x="84.8507%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (61 instructions, 0.11%)</title><rect x="84.6514%" y="165" width="0.1058%" height="15" fill="rgb(251,196,23)" fg:x="48799" fg:w="61"/><text x="84.9444%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="84.7572%" y="165" width="0.1683%" height="15" fill="rgb(250,152,24)" fg:x="48860" fg:w="97"/><text x="85.0502%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="84.9255%" y="165" width="0.7060%" height="15" fill="rgb(209,150,17)" fg:x="48957" fg:w="407"/><text x="85.2185%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="85.6315%" y="165" width="0.0278%" height="15" fill="rgb(234,202,34)" fg:x="49364" fg:w="16"/><text x="85.9245%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="85.6593%" y="101" width="0.1561%" height="15" fill="rgb(253,148,53)" fg:x="49380" fg:w="90"/><text x="85.9522%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="85.6593%" y="117" width="0.1735%" height="15" fill="rgb(218,129,16)" fg:x="49380" fg:w="100"/><text x="85.9522%" y="127.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="85.6593%" y="133" width="0.1787%" height="15" fill="rgb(216,85,19)" fg:x="49380" fg:w="103"/><text x="85.9522%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.10%)</title><rect x="85.8379%" y="101" width="0.1041%" height="15" fill="rgb(235,228,7)" fg:x="49483" fg:w="60"/><text x="86.1309%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.15%)</title><rect x="85.8379%" y="117" width="0.1474%" height="15" fill="rgb(245,175,0)" fg:x="49483" fg:w="85"/><text x="86.1309%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="85.9854%" y="69" width="0.0156%" height="15" fill="rgb(208,168,36)" fg:x="49568" fg:w="9"/><text x="86.2784%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="86.0010%" y="53" width="0.0520%" height="15" fill="rgb(246,171,24)" fg:x="49577" fg:w="30"/><text x="86.2940%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.10%)</title><rect x="86.0010%" y="69" width="0.0954%" height="15" fill="rgb(215,142,24)" fg:x="49577" fg:w="55"/><text x="86.2940%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.20%)</title><rect x="85.9854%" y="85" width="0.2012%" height="15" fill="rgb(250,187,7)" fg:x="49568" fg:w="116"/><text x="86.2784%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.29%)</title><rect x="85.9854%" y="101" width="0.2932%" height="15" fill="rgb(228,66,33)" fg:x="49568" fg:w="169"/><text x="86.2784%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.30%)</title><rect x="85.9854%" y="117" width="0.3018%" height="15" fill="rgb(234,215,21)" fg:x="49568" fg:w="174"/><text x="86.2784%" y="127.50"></text></g><g><title>core::fmt::write (367 instructions, 0.64%)</title><rect x="85.8379%" y="133" width="0.6366%" height="15" fill="rgb(222,191,20)" fg:x="49483" fg:w="367"/><text x="86.1309%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.06%)</title><rect x="85.6593%" y="149" width="1.0634%" height="15" fill="rgb(245,79,54)" fg:x="49380" fg:w="613"/><text x="85.9522%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="86.7226%" y="149" width="0.1284%" height="15" fill="rgb(240,10,37)" fg:x="49993" fg:w="74"/><text x="87.0156%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.09%)</title><rect x="86.8510%" y="149" width="0.0937%" height="15" fill="rgb(214,192,32)" fg:x="50067" fg:w="54"/><text x="87.1440%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.41%)</title><rect x="85.6593%" y="165" width="1.4086%" height="15" fill="rgb(209,36,54)" fg:x="49380" fg:w="812"/><text x="85.9522%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="87.0678%" y="165" width="0.0971%" height="15" fill="rgb(220,10,11)" fg:x="50192" fg:w="56"/><text x="87.3608%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (97 instructions, 0.17%)</title><rect x="87.1650%" y="165" width="0.1683%" height="15" fill="rgb(221,106,17)" fg:x="50248" fg:w="97"/><text x="87.4580%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (407 instructions, 0.71%)</title><rect x="87.3333%" y="149" width="0.7060%" height="15" fill="rgb(251,142,44)" fg:x="50345" fg:w="407"/><text x="87.6262%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="88.0393%" y="149" width="0.0278%" height="15" fill="rgb(238,13,15)" fg:x="50752" fg:w="16"/><text x="88.3322%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (90 instructions, 0.16%)</title><rect x="88.0670%" y="85" width="0.1561%" height="15" fill="rgb(208,107,27)" fg:x="50768" fg:w="90"/><text x="88.3600%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (100 instructions, 0.17%)</title><rect x="88.0670%" y="101" width="0.1735%" height="15" fill="rgb(205,136,37)" fg:x="50768" fg:w="100"/><text x="88.3600%" y="111.50"></text></g><g><title>__rust_alloc (103 instructions, 0.18%)</title><rect x="88.0670%" y="117" width="0.1787%" height="15" fill="rgb(250,205,27)" fg:x="50768" fg:w="103"/><text x="88.3600%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.10%)</title><rect x="88.2457%" y="85" width="0.1041%" height="15" fill="rgb(210,80,43)" fg:x="50871" fg:w="60"/><text x="88.5387%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.15%)</title><rect x="88.2457%" y="101" width="0.1474%" height="15" fill="rgb(247,160,36)" fg:x="50871" fg:w="85"/><text x="88.5387%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="88.3932%" y="53" width="0.0156%" height="15" fill="rgb(234,13,49)" fg:x="50956" fg:w="9"/><text x="88.6861%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.05%)</title><rect x="88.4088%" y="37" width="0.0520%" height="15" fill="rgb(234,122,0)" fg:x="50965" fg:w="30"/><text x="88.7017%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.10%)</title><rect x="88.4088%" y="53" width="0.0954%" height="15" fill="rgb(207,146,38)" fg:x="50965" fg:w="55"/><text x="88.7017%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (116 instructions, 0.20%)</title><rect x="88.3932%" y="69" width="0.2012%" height="15" fill="rgb(207,177,25)" fg:x="50956" fg:w="116"/><text x="88.6861%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (169 instructions, 0.29%)</title><rect x="88.3932%" y="85" width="0.2932%" height="15" fill="rgb(211,178,42)" fg:x="50956" fg:w="169"/><text x="88.6861%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (174 instructions, 0.30%)</title><rect x="88.3932%" y="101" width="0.3018%" height="15" fill="rgb(230,69,54)" fg:x="50956" fg:w="174"/><text x="88.6861%" y="111.50"></text></g><g><title>core::fmt::write (367 instructions, 0.64%)</title><rect x="88.2457%" y="117" width="0.6366%" height="15" fill="rgb(214,135,41)" fg:x="50871" fg:w="367"/><text x="88.5387%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (613 instructions, 1.06%)</title><rect x="88.0670%" y="133" width="1.0634%" height="15" fill="rgb(237,67,25)" fg:x="50768" fg:w="613"/><text x="88.3600%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (74 instructions, 0.13%)</title><rect x="89.1304%" y="133" width="0.1284%" height="15" fill="rgb(222,189,50)" fg:x="51381" fg:w="74"/><text x="89.4234%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.09%)</title><rect x="89.2588%" y="133" width="0.0937%" height="15" fill="rgb(245,148,34)" fg:x="51455" fg:w="54"/><text x="89.5517%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (812 instructions, 1.41%)</title><rect x="88.0670%" y="149" width="1.4086%" height="15" fill="rgb(222,29,6)" fg:x="50768" fg:w="812"/><text x="88.3600%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,402 instructions, 2.43%)</title><rect x="87.3333%" y="165" width="2.4320%" height="15" fill="rgb(221,189,43)" fg:x="50345" fg:w="1402"/><text x="87.6262%" y="175.50">b..</text></g><g><title>binread::binary_template::write_end_struct (56 instructions, 0.10%)</title><rect x="89.7653%" y="165" width="0.0971%" height="15" fill="rgb(207,36,27)" fg:x="51747" fg:w="56"/><text x="90.0583%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="89.8624%" y="165" width="0.0226%" height="15" fill="rgb(217,90,24)" fg:x="51803" fg:w="13"/><text x="90.1554%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="89.8850%" y="165" width="0.0226%" height="15" fill="rgb(224,66,35)" fg:x="51816" fg:w="13"/><text x="90.1780%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="89.9075%" y="165" width="0.0382%" height="15" fill="rgb(221,13,50)" fg:x="51829" fg:w="22"/><text x="90.2005%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="89.9457%" y="133" width="0.1631%" height="15" fill="rgb(236,68,49)" fg:x="51851" fg:w="94"/><text x="90.2387%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="89.9457%" y="149" width="0.1804%" height="15" fill="rgb(229,146,28)" fg:x="51851" fg:w="104"/><text x="90.2387%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (93 instructions, 0.16%)</title><rect x="90.1313%" y="133" width="0.1613%" height="15" fill="rgb(225,31,38)" fg:x="51958" fg:w="93"/><text x="90.4243%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (103 instructions, 0.18%)</title><rect x="90.1313%" y="149" width="0.1787%" height="15" fill="rgb(250,208,3)" fg:x="51958" fg:w="103"/><text x="90.4243%" y="159.50"></text></g><g><title>__rust_alloc (213 instructions, 0.37%)</title><rect x="89.9457%" y="165" width="0.3695%" height="15" fill="rgb(246,54,23)" fg:x="51851" fg:w="213"/><text x="90.2387%" y="175.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (14 instructions, 0.02%)</title><rect x="90.3152%" y="165" width="0.0243%" height="15" fill="rgb(243,76,11)" fg:x="52064" fg:w="14"/><text x="90.6082%" y="175.50"></text></g><g><title>memcpy (411 instructions, 0.71%)</title><rect x="90.3395%" y="165" width="0.7130%" height="15" fill="rgb(245,21,50)" fg:x="52078" fg:w="411"/><text x="90.6324%" y="175.50"></text></g><g><title>memcpy (366 instructions, 0.63%)</title><rect x="91.0524%" y="165" width="0.6349%" height="15" fill="rgb(228,9,43)" fg:x="52489" fg:w="366"/><text x="91.3454%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,001 instructions, 10.41%)</title><rect x="83.3365%" y="181" width="10.4099%" height="15" fill="rgb(208,100,47)" fg:x="48041" fg:w="6001"/><text x="83.6295%" y="191.50">candid::de::I..</text></g><g><title>memcpy (381 instructions, 0.66%)</title><rect x="93.7464%" y="181" width="0.6609%" height="15" fill="rgb(232,26,8)" fg:x="54042" fg:w="381"/><text x="94.0394%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.66%)</title><rect x="94.4073%" y="181" width="0.6609%" height="15" fill="rgb(216,166,38)" fg:x="54423" fg:w="381"/><text x="94.7003%" y="191.50"></text></g><g><title>memcpy (411 instructions, 0.71%)</title><rect x="95.0683%" y="181" width="0.7130%" height="15" fill="rgb(251,202,51)" fg:x="54804" fg:w="411"/><text x="95.3612%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (22 instructions, 0.04%)</title><rect x="95.7812%" y="165" width="0.0382%" height="15" fill="rgb(254,216,34)" fg:x="55215" fg:w="22"/><text x="96.0742%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="95.8194%" y="149" width="0.1405%" height="15" fill="rgb(251,32,27)" fg:x="55237" fg:w="81"/><text x="96.1124%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.10%)</title><rect x="96.0119%" y="149" width="0.0954%" height="15" fill="rgb(208,127,28)" fg:x="55348" fg:w="55"/><text x="96.3049%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.34%)</title><rect x="95.8194%" y="165" width="0.3400%" height="15" fill="rgb(224,137,22)" fg:x="55237" fg:w="196"/><text x="96.1124%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (312 instructions, 0.54%)</title><rect x="95.7812%" y="181" width="0.5412%" height="15" fill="rgb(254,70,32)" fg:x="55215" fg:w="312"/><text x="96.0742%" y="191.50"></text></g><g><title>candid::utils::decode_args (7,574 instructions, 13.14%)</title><rect x="83.3365%" y="197" width="13.1386%" height="15" fill="rgb(229,75,37)" fg:x="48041" fg:w="7574"/><text x="83.6295%" y="207.50">candid::utils::de..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="96.4751%" y="197" width="0.1405%" height="15" fill="rgb(252,64,23)" fg:x="55615" fg:w="81"/><text x="96.7681%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.6243%" y="165" width="0.0191%" height="15" fill="rgb(232,162,48)" fg:x="55701" fg:w="11"/><text x="96.9173%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.6434%" y="165" width="0.0191%" height="15" fill="rgb(246,160,12)" fg:x="55712" fg:w="11"/><text x="96.9363%" y="175.50"></text></g><g><title>memset (136 instructions, 0.24%)</title><rect x="96.6624%" y="165" width="0.2359%" height="15" fill="rgb(247,166,0)" fg:x="55723" fg:w="136"/><text x="96.9554%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (346 instructions, 0.60%)</title><rect x="96.6156%" y="181" width="0.6002%" height="15" fill="rgb(249,219,21)" fg:x="55696" fg:w="346"/><text x="96.9086%" y="191.50"></text></g><g><title>std::io::Write::write_all (78 instructions, 0.14%)</title><rect x="97.2158%" y="165" width="0.1353%" height="15" fill="rgb(205,209,3)" fg:x="56042" fg:w="78"/><text x="97.5088%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (94 instructions, 0.16%)</title><rect x="97.3511%" y="85" width="0.1631%" height="15" fill="rgb(243,44,1)" fg:x="56120" fg:w="94"/><text x="97.6441%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (104 instructions, 0.18%)</title><rect x="97.3511%" y="101" width="0.1804%" height="15" fill="rgb(206,159,16)" fg:x="56120" fg:w="104"/><text x="97.6441%" y="111.50"></text></g><g><title>__rust_alloc (107 instructions, 0.19%)</title><rect x="97.3511%" y="117" width="0.1856%" height="15" fill="rgb(244,77,30)" fg:x="56120" fg:w="107"/><text x="97.6441%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (137 instructions, 0.24%)</title><rect x="97.3511%" y="133" width="0.2377%" height="15" fill="rgb(218,69,12)" fg:x="56120" fg:w="137"/><text x="97.6441%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (202 instructions, 0.35%)</title><rect x="97.3511%" y="149" width="0.3504%" height="15" fill="rgb(212,87,7)" fg:x="56120" fg:w="202"/><text x="97.6441%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="97.7015%" y="149" width="0.0191%" height="15" fill="rgb(245,114,25)" fg:x="56322" fg:w="11"/><text x="97.9945%" y="159.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="97.7206%" y="149" width="0.0191%" height="15" fill="rgb(210,61,42)" fg:x="56333" fg:w="11"/><text x="98.0136%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (426 instructions, 0.74%)</title><rect x="97.3511%" y="165" width="0.7390%" height="15" fill="rgb(211,52,33)" fg:x="56120" fg:w="426"/><text x="97.6441%" y="175.50"></text></g><g><title>std::io::Write::write_all (76 instructions, 0.13%)</title><rect x="98.0901%" y="165" width="0.1318%" height="15" fill="rgb(234,58,33)" fg:x="56546" fg:w="76"/><text x="98.3831%" y="175.50"></text></g><g><title>std::io::Write::write_all (14 instructions, 0.02%)</title><rect x="98.2219%" y="165" width="0.0243%" height="15" fill="rgb(220,115,36)" fg:x="56622" fg:w="14"/><text x="98.5149%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (674 instructions, 1.17%)</title><rect x="97.2158%" y="181" width="1.1692%" height="15" fill="rgb(243,153,54)" fg:x="56042" fg:w="674"/><text x="97.5088%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="98.3937%" y="181" width="0.1405%" height="15" fill="rgb(251,47,18)" fg:x="56721" fg:w="81"/><text x="98.6866%" y="191.50"></text></g><g><title>candid::utils::write_args (1,170 instructions, 2.03%)</title><rect x="96.6156%" y="197" width="2.0296%" height="15" fill="rgb(242,102,42)" fg:x="55696" fg:w="1170"/><text x="96.9086%" y="207.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (9,035 instructions, 15.67%)</title><rect x="83.3365%" y="213" width="15.6730%" height="15" fill="rgb(234,31,38)" fg:x="48041" fg:w="9035"/><text x="83.6295%" y="223.50">subscriber::setup_su..</text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="99.0095%" y="213" width="0.0104%" height="15" fill="rgb(221,117,51)" fg:x="57076" fg:w="6"/><text x="99.3025%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.14%)</title><rect x="99.0199%" y="213" width="0.1405%" height="15" fill="rgb(212,20,18)" fg:x="57082" fg:w="81"/><text x="99.3129%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (169 instructions, 0.29%)</title><rect x="99.1604%" y="213" width="0.2932%" height="15" fill="rgb(245,133,36)" fg:x="57163" fg:w="169"/><text x="99.4534%" y="223.50"></text></g><g><title>ic_cdk::futures::waker::wake (9,353 instructions, 16.22%)</title><rect x="83.3365%" y="229" width="16.2246%" height="15" fill="rgb(212,6,19)" fg:x="48041" fg:w="9353"/><text x="83.6295%" y="239.50">ic_cdk::futures::wake..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (54 instructions, 0.09%)</title><rect x="99.5611%" y="213" width="0.0937%" height="15" fill="rgb(218,1,36)" fg:x="57394" fg:w="54"/><text x="99.8541%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (86 instructions, 0.15%)</title><rect x="99.5611%" y="229" width="0.1492%" height="15" fill="rgb(246,84,54)" fg:x="57394" fg:w="86"/><text x="99.8541%" y="239.50"></text></g><g><title>all (57,647 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(242,110,6)" fg:x="0" fg:w="57647"/><text x="0.2930%" y="271.50"></text></g><g><title>ic_cdk::api::call::callback (9,713 instructions, 16.85%)</title><rect x="83.1509%" y="245" width="16.8491%" height="15" fill="rgb(214,47,5)" fg:x="47934" fg:w="9713"/><text x="83.4439%" y="255.50">ic_cdk::api::call::cal..</text></g></svg></svg>