<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="294" onload="init(evt)" viewBox="0 0 1024 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="294" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="277.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="277.00"> </text><svg id="frames" x="10" width="1004" total_samples="52071"><g><title>ic_cdk::setup (48 instructions, 0.09%)</title><rect x="0.0000%" y="213" width="0.0922%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="48"/><text x="0.2930%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (370 instructions, 0.71%)</title><rect x="0.0922%" y="213" width="0.7106%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="370"/><text x="0.3852%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.8028%" y="213" width="0.1575%" height="15" fill="rgb(221,193,54)" fg:x="418" fg:w="82"/><text x="1.0957%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.9602%" y="197" width="0.1575%" height="15" fill="rgb(248,212,6)" fg:x="500" fg:w="82"/><text x="1.2532%" y="207.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.10%)</title><rect x="1.1177%" y="165" width="0.0960%" height="15" fill="rgb(208,68,35)" fg:x="582" fg:w="50"/><text x="1.4107%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (133 instructions, 0.26%)</title><rect x="1.1177%" y="181" width="0.2554%" height="15" fill="rgb(232,128,0)" fg:x="582" fg:w="133"/><text x="1.4107%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="1.3731%" y="181" width="0.7682%" height="15" fill="rgb(207,160,47)" fg:x="715" fg:w="400"/><text x="1.6661%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="2.1413%" y="181" width="0.1632%" height="15" fill="rgb(228,23,34)" fg:x="1115" fg:w="85"/><text x="2.4343%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="2.3045%" y="181" width="0.1075%" height="15" fill="rgb(218,30,26)" fg:x="1200" fg:w="56"/><text x="2.5975%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="2.4121%" y="181" width="0.1075%" height="15" fill="rgb(220,122,19)" fg:x="1256" fg:w="56"/><text x="2.7051%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="2.5196%" y="181" width="0.1075%" height="15" fill="rgb(250,228,42)" fg:x="1312" fg:w="56"/><text x="2.8126%" y="191.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="2.6272%" y="181" width="0.1075%" height="15" fill="rgb(240,193,28)" fg:x="1368" fg:w="56"/><text x="2.9202%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="2.7347%" y="181" width="0.1364%" height="15" fill="rgb(216,20,37)" fg:x="1424" fg:w="71"/><text x="3.0277%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="2.8711%" y="181" width="0.1325%" height="15" fill="rgb(206,188,39)" fg:x="1495" fg:w="69"/><text x="3.1640%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="3.0036%" y="181" width="0.7682%" height="15" fill="rgb(217,207,13)" fg:x="1564" fg:w="400"/><text x="3.2966%" y="191.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.7718%" y="181" width="0.0307%" height="15" fill="rgb(231,73,38)" fg:x="1964" fg:w="16"/><text x="4.0647%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="3.8025%" y="165" width="0.1575%" height="15" fill="rgb(225,20,46)" fg:x="1980" fg:w="82"/><text x="4.0955%" y="175.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="3.9600%" y="133" width="0.1152%" height="15" fill="rgb(210,31,41)" fg:x="2062" fg:w="60"/><text x="4.2529%" y="143.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="3.9600%" y="149" width="0.1632%" height="15" fill="rgb(221,200,47)" fg:x="2062" fg:w="85"/><text x="4.2529%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1232%" y="101" width="0.0173%" height="15" fill="rgb(226,26,5)" fg:x="2147" fg:w="9"/><text x="4.4162%" y="111.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.1405%" y="85" width="0.0576%" height="15" fill="rgb(249,33,26)" fg:x="2156" fg:w="30"/><text x="4.4335%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.1405%" y="101" width="0.1056%" height="15" fill="rgb(235,183,28)" fg:x="2156" fg:w="55"/><text x="4.4335%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="4.1232%" y="117" width="0.2266%" height="15" fill="rgb(221,5,38)" fg:x="2147" fg:w="118"/><text x="4.4162%" y="127.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="4.1232%" y="133" width="0.3284%" height="15" fill="rgb(247,18,42)" fg:x="2147" fg:w="171"/><text x="4.4162%" y="143.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="4.1232%" y="149" width="0.3380%" height="15" fill="rgb(241,131,45)" fg:x="2147" fg:w="176"/><text x="4.4162%" y="159.50"></text></g><g><title>core::fmt::write (372 instructions, 0.71%)</title><rect x="3.9600%" y="165" width="0.7144%" height="15" fill="rgb(249,31,29)" fg:x="2062" fg:w="372"/><text x="4.2529%" y="175.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.15%)</title><rect x="3.8025%" y="181" width="1.1523%" height="15" fill="rgb(225,111,53)" fg:x="1980" fg:w="600"/><text x="4.0955%" y="191.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="4.9548%" y="181" width="0.1632%" height="15" fill="rgb(238,160,17)" fg:x="2580" fg:w="85"/><text x="5.2477%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="5.1180%" y="181" width="0.1095%" height="15" fill="rgb(214,148,48)" fg:x="2665" fg:w="57"/><text x="5.4110%" y="191.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="5.2275%" y="181" width="0.1268%" height="15" fill="rgb(232,36,49)" fg:x="2722" fg:w="66"/><text x="5.5204%" y="191.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="5.3542%" y="181" width="0.1325%" height="15" fill="rgb(209,103,24)" fg:x="2788" fg:w="69"/><text x="5.6472%" y="191.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="5.4867%" y="165" width="0.7682%" height="15" fill="rgb(229,88,8)" fg:x="2857" fg:w="400"/><text x="5.7797%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.2549%" y="165" width="0.0307%" height="15" fill="rgb(213,181,19)" fg:x="3257" fg:w="16"/><text x="6.5479%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="6.2856%" y="149" width="0.1575%" height="15" fill="rgb(254,191,54)" fg:x="3273" fg:w="82"/><text x="6.5786%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="6.4431%" y="117" width="0.1152%" height="15" fill="rgb(241,83,37)" fg:x="3355" fg:w="60"/><text x="6.7361%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="6.4431%" y="133" width="0.1632%" height="15" fill="rgb(233,36,39)" fg:x="3355" fg:w="85"/><text x="6.7361%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.6064%" y="85" width="0.0173%" height="15" fill="rgb(226,3,54)" fg:x="3440" fg:w="9"/><text x="6.8993%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="6.6236%" y="69" width="0.0576%" height="15" fill="rgb(245,192,40)" fg:x="3449" fg:w="30"/><text x="6.9166%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="6.6236%" y="85" width="0.1056%" height="15" fill="rgb(238,167,29)" fg:x="3449" fg:w="55"/><text x="6.9166%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="6.6064%" y="101" width="0.2266%" height="15" fill="rgb(232,182,51)" fg:x="3440" fg:w="118"/><text x="6.8993%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="6.6064%" y="117" width="0.3284%" height="15" fill="rgb(231,60,39)" fg:x="3440" fg:w="171"/><text x="6.8993%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="6.6064%" y="133" width="0.3380%" height="15" fill="rgb(208,69,12)" fg:x="3440" fg:w="176"/><text x="6.8993%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.71%)</title><rect x="6.4431%" y="149" width="0.7144%" height="15" fill="rgb(235,93,37)" fg:x="3355" fg:w="372"/><text x="6.7361%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 1.15%)</title><rect x="6.2856%" y="165" width="1.1523%" height="15" fill="rgb(213,116,39)" fg:x="3273" fg:w="600"/><text x="6.5786%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="7.4379%" y="165" width="0.1632%" height="15" fill="rgb(222,207,29)" fg:x="3873" fg:w="85"/><text x="7.7309%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="7.6012%" y="165" width="0.1095%" height="15" fill="rgb(206,96,30)" fg:x="3958" fg:w="57"/><text x="7.8941%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="7.7106%" y="149" width="0.1364%" height="15" fill="rgb(218,138,4)" fg:x="4015" fg:w="71"/><text x="8.0036%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="7.8470%" y="149" width="0.1824%" height="15" fill="rgb(250,191,14)" fg:x="4086" fg:w="95"/><text x="8.1399%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="8.0294%" y="149" width="0.1268%" height="15" fill="rgb(239,60,40)" fg:x="4181" fg:w="66"/><text x="8.3224%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.55%)</title><rect x="7.7106%" y="165" width="0.5512%" height="15" fill="rgb(206,27,48)" fg:x="4015" fg:w="287"/><text x="8.0036%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="8.2618%" y="165" width="0.1575%" height="15" fill="rgb(225,35,8)" fg:x="4302" fg:w="82"/><text x="8.5548%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="8.4193%" y="149" width="0.1364%" height="15" fill="rgb(250,213,24)" fg:x="4384" fg:w="71"/><text x="8.7122%" y="159.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="8.5556%" y="149" width="0.1824%" height="15" fill="rgb(247,123,22)" fg:x="4455" fg:w="95"/><text x="8.8486%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="8.7381%" y="149" width="0.1268%" height="15" fill="rgb(231,138,38)" fg:x="4550" fg:w="66"/><text x="9.0310%" y="159.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.54%)</title><rect x="8.4193%" y="165" width="0.5435%" height="15" fill="rgb(231,145,46)" fg:x="4384" fg:w="283"/><text x="8.7122%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,023 instructions, 3.89%)</title><rect x="5.4867%" y="181" width="3.8851%" height="15" fill="rgb(251,118,11)" fg:x="2857" fg:w="2023"/><text x="5.7797%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="9.3718%" y="181" width="0.1268%" height="15" fill="rgb(217,147,25)" fg:x="4880" fg:w="66"/><text x="9.6648%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="9.4986%" y="181" width="0.0250%" height="15" fill="rgb(247,81,37)" fg:x="4946" fg:w="13"/><text x="9.7915%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="9.5235%" y="181" width="0.0250%" height="15" fill="rgb(209,12,38)" fg:x="4959" fg:w="13"/><text x="9.8165%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="9.5485%" y="181" width="0.0134%" height="15" fill="rgb(227,1,9)" fg:x="4972" fg:w="7"/><text x="9.8415%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="9.5619%" y="181" width="0.0230%" height="15" fill="rgb(248,47,43)" fg:x="4979" fg:w="12"/><text x="9.8549%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.5850%" y="165" width="0.1575%" height="15" fill="rgb(221,10,30)" fg:x="4991" fg:w="82"/><text x="9.8780%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (164 instructions, 0.31%)</title><rect x="9.5850%" y="181" width="0.3150%" height="15" fill="rgb(210,229,1)" fg:x="4991" fg:w="164"/><text x="9.8780%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.8999%" y="149" width="0.1575%" height="15" fill="rgb(222,148,37)" fg:x="5155" fg:w="82"/><text x="10.1929%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.22%)</title><rect x="9.8999%" y="165" width="0.2247%" height="15" fill="rgb(234,67,33)" fg:x="5155" fg:w="117"/><text x="10.1929%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.36%)</title><rect x="9.8999%" y="181" width="0.3630%" height="15" fill="rgb(247,98,35)" fg:x="5155" fg:w="189"/><text x="10.1929%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.2629%" y="165" width="0.1575%" height="15" fill="rgb(247,138,52)" fg:x="5344" fg:w="82"/><text x="10.5559%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="10.2629%" y="181" width="0.3169%" height="15" fill="rgb(213,79,30)" fg:x="5344" fg:w="165"/><text x="10.5559%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.5798%" y="181" width="0.1575%" height="15" fill="rgb(246,177,23)" fg:x="5509" fg:w="82"/><text x="10.8728%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="10.7373%" y="181" width="0.1556%" height="15" fill="rgb(230,62,27)" fg:x="5591" fg:w="81"/><text x="11.0302%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.8928%" y="181" width="0.1575%" height="15" fill="rgb(216,154,8)" fg:x="5672" fg:w="82"/><text x="11.1858%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.0503%" y="181" width="0.1575%" height="15" fill="rgb(244,35,45)" fg:x="5754" fg:w="82"/><text x="11.3433%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.2116%" y="181" width="0.1556%" height="15" fill="rgb(251,115,12)" fg:x="5838" fg:w="81"/><text x="11.5046%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.73%)</title><rect x="11.3672%" y="181" width="0.7317%" height="15" fill="rgb(240,54,50)" fg:x="5919" fg:w="381"/><text x="11.6601%" y="191.50"></text></g><g><title>memcpy (381 instructions, 0.73%)</title><rect x="12.0989%" y="181" width="0.7317%" height="15" fill="rgb(233,84,52)" fg:x="6300" fg:w="381"/><text x="12.3918%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,080 instructions, 13.60%)</title><rect x="1.1177%" y="197" width="13.5968%" height="15" fill="rgb(207,117,47)" fg:x="582" fg:w="7080"/><text x="1.4107%" y="207.50">candid::de::IDLDe..</text></g><g><title>memcpy (336 instructions, 0.65%)</title><rect x="14.7145%" y="197" width="0.6453%" height="15" fill="rgb(249,43,39)" fg:x="7662" fg:w="336"/><text x="15.0075%" y="207.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.10%)</title><rect x="15.3598%" y="181" width="0.0960%" height="15" fill="rgb(209,38,44)" fg:x="7998" fg:w="50"/><text x="15.6528%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.16%)</title><rect x="15.3598%" y="197" width="0.1613%" height="15" fill="rgb(236,212,23)" fg:x="7998" fg:w="84"/><text x="15.6528%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="15.5211%" y="197" width="0.1575%" height="15" fill="rgb(242,79,21)" fg:x="8082" fg:w="82"/><text x="15.8141%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="15.6882%" y="165" width="0.1018%" height="15" fill="rgb(211,96,35)" fg:x="8169" fg:w="53"/><text x="15.9812%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.74%)</title><rect x="15.7900%" y="165" width="0.7355%" height="15" fill="rgb(253,215,40)" fg:x="8222" fg:w="383"/><text x="16.0829%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.31%)</title><rect x="16.5255%" y="165" width="0.3092%" height="15" fill="rgb(211,81,21)" fg:x="8605" fg:w="161"/><text x="16.8185%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.60%)</title><rect x="15.6882%" y="181" width="1.6017%" height="15" fill="rgb(208,190,38)" fg:x="8169" fg:w="834"/><text x="15.9812%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="17.2899%" y="181" width="0.1575%" height="15" fill="rgb(235,213,38)" fg:x="9003" fg:w="82"/><text x="17.5828%" y="191.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="17.4473%" y="181" width="0.2612%" height="15" fill="rgb(237,122,38)" fg:x="9085" fg:w="136"/><text x="17.7403%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,467 instructions, 2.82%)</title><rect x="15.6786%" y="197" width="2.8173%" height="15" fill="rgb(244,218,35)" fg:x="8164" fg:w="1467"/><text x="15.9716%" y="207.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="18.4959%" y="197" width="0.1575%" height="15" fill="rgb(240,68,47)" fg:x="9631" fg:w="82"/><text x="18.7889%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="18.6630%" y="165" width="0.1018%" height="15" fill="rgb(210,16,53)" fg:x="9718" fg:w="53"/><text x="18.9559%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.74%)</title><rect x="18.7648%" y="165" width="0.7355%" height="15" fill="rgb(235,124,12)" fg:x="9771" fg:w="383"/><text x="19.0577%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.31%)</title><rect x="19.5003%" y="165" width="0.3092%" height="15" fill="rgb(224,169,11)" fg:x="10154" fg:w="161"/><text x="19.7933%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 1.60%)</title><rect x="18.6630%" y="181" width="1.6017%" height="15" fill="rgb(250,166,2)" fg:x="9718" fg:w="834"/><text x="18.9559%" y="191.50"></text></g><g><title>memcmp (740 instructions, 1.42%)</title><rect x="20.2646%" y="181" width="1.4211%" height="15" fill="rgb(242,216,29)" fg:x="10552" fg:w="740"/><text x="20.5576%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="21.6858%" y="165" width="0.1556%" height="15" fill="rgb(230,116,27)" fg:x="11292" fg:w="81"/><text x="21.9787%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.21%)</title><rect x="21.6858%" y="181" width="0.2132%" height="15" fill="rgb(228,99,48)" fg:x="11292" fg:w="111"/><text x="21.9787%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,859 instructions, 3.57%)</title><rect x="18.6534%" y="197" width="3.5701%" height="15" fill="rgb(253,11,6)" fg:x="9713" fg:w="1859"/><text x="18.9463%" y="207.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="22.2235%" y="149" width="0.1018%" height="15" fill="rgb(247,143,39)" fg:x="11572" fg:w="53"/><text x="22.5165%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="22.2235%" y="165" width="0.1517%" height="15" fill="rgb(236,97,10)" fg:x="11572" fg:w="79"/><text x="22.5165%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.56%)</title><rect x="22.2235%" y="181" width="0.5608%" height="15" fill="rgb(233,208,19)" fg:x="11572" fg:w="292"/><text x="22.5165%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="22.7843%" y="181" width="0.1575%" height="15" fill="rgb(216,164,2)" fg:x="11864" fg:w="82"/><text x="23.0772%" y="191.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="22.9418%" y="181" width="0.2612%" height="15" fill="rgb(220,129,5)" fg:x="11946" fg:w="136"/><text x="23.2347%" y="191.50"></text></g><g><title>candid::types::internal::env_id (964 instructions, 1.85%)</title><rect x="22.2235%" y="197" width="1.8513%" height="15" fill="rgb(242,17,10)" fg:x="11572" fg:w="964"/><text x="22.5165%" y="207.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.06%)</title><rect x="24.0748%" y="197" width="0.0634%" height="15" fill="rgb(242,107,0)" fg:x="12536" fg:w="33"/><text x="24.3678%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.24%)</title><rect x="24.1382%" y="181" width="0.2381%" height="15" fill="rgb(251,28,31)" fg:x="12569" fg:w="124"/><text x="24.4312%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.24%)</title><rect x="24.4339%" y="181" width="0.2381%" height="15" fill="rgb(233,223,10)" fg:x="12723" fg:w="124"/><text x="24.7269%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (308 instructions, 0.59%)</title><rect x="24.1382%" y="197" width="0.5915%" height="15" fill="rgb(215,21,27)" fg:x="12569" fg:w="308"/><text x="24.4312%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="24.7297%" y="181" width="0.0288%" height="15" fill="rgb(232,23,21)" fg:x="12877" fg:w="15"/><text x="25.0227%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="24.7585%" y="181" width="0.0288%" height="15" fill="rgb(244,5,23)" fg:x="12892" fg:w="15"/><text x="25.0515%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="24.7873%" y="181" width="0.1517%" height="15" fill="rgb(226,81,46)" fg:x="12907" fg:w="79"/><text x="25.0803%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="24.9390%" y="165" width="0.1364%" height="15" fill="rgb(247,70,30)" fg:x="12986" fg:w="71"/><text x="25.2320%" y="175.50"></text></g><g><title>binread::binary_template::write_named (82 instructions, 0.16%)</title><rect x="25.0754%" y="149" width="0.1575%" height="15" fill="rgb(212,68,19)" fg:x="13057" fg:w="82"/><text x="25.3683%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (154 instructions, 0.30%)</title><rect x="25.0754%" y="165" width="0.2958%" height="15" fill="rgb(240,187,13)" fg:x="13057" fg:w="154"/><text x="25.3683%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="25.3711%" y="165" width="0.1325%" height="15" fill="rgb(223,113,26)" fg:x="13211" fg:w="69"/><text x="25.6641%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="25.5036%" y="165" width="0.7682%" height="15" fill="rgb(206,192,2)" fg:x="13280" fg:w="400"/><text x="25.7966%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.22%)</title><rect x="26.2718%" y="149" width="0.2247%" height="15" fill="rgb(241,108,4)" fg:x="13680" fg:w="117"/><text x="26.5648%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="26.4965%" y="117" width="0.1152%" height="15" fill="rgb(247,173,49)" fg:x="13797" fg:w="60"/><text x="26.7895%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="26.4965%" y="133" width="0.1632%" height="15" fill="rgb(224,114,35)" fg:x="13797" fg:w="85"/><text x="26.7895%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="26.6598%" y="85" width="0.0173%" height="15" fill="rgb(245,159,27)" fg:x="13882" fg:w="9"/><text x="26.9527%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="26.6770%" y="69" width="0.0576%" height="15" fill="rgb(245,172,44)" fg:x="13891" fg:w="30"/><text x="26.9700%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="26.6770%" y="85" width="0.1056%" height="15" fill="rgb(236,23,11)" fg:x="13891" fg:w="55"/><text x="26.9700%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="26.6598%" y="101" width="0.2266%" height="15" fill="rgb(205,117,38)" fg:x="13882" fg:w="118"/><text x="26.9527%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="26.6598%" y="117" width="0.3284%" height="15" fill="rgb(237,72,25)" fg:x="13882" fg:w="171"/><text x="26.9527%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="26.6598%" y="133" width="0.3380%" height="15" fill="rgb(244,70,9)" fg:x="13882" fg:w="176"/><text x="26.9527%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.71%)</title><rect x="26.4965%" y="149" width="0.7144%" height="15" fill="rgb(217,125,39)" fg:x="13797" fg:w="372"/><text x="26.7895%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (635 instructions, 1.22%)</title><rect x="26.2718%" y="165" width="1.2195%" height="15" fill="rgb(235,36,10)" fg:x="13680" fg:w="635"/><text x="26.5648%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="27.4913%" y="165" width="0.1632%" height="15" fill="rgb(251,123,47)" fg:x="14315" fg:w="85"/><text x="27.7843%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="27.6545%" y="165" width="0.1056%" height="15" fill="rgb(221,13,13)" fg:x="14400" fg:w="55"/><text x="27.9475%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="27.7602%" y="149" width="0.1075%" height="15" fill="rgb(238,131,9)" fg:x="14455" fg:w="56"/><text x="28.0531%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 instructions, 0.22%)</title><rect x="27.7602%" y="165" width="0.2209%" height="15" fill="rgb(211,50,8)" fg:x="14455" fg:w="115"/><text x="28.0531%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="27.9810%" y="165" width="0.1460%" height="15" fill="rgb(245,182,24)" fg:x="14570" fg:w="76"/><text x="28.2740%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.1270%" y="149" width="0.1075%" height="15" fill="rgb(242,14,37)" fg:x="14646" fg:w="56"/><text x="28.4199%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.3478%" y="149" width="0.1075%" height="15" fill="rgb(246,228,12)" fg:x="14761" fg:w="56"/><text x="28.6408%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.5687%" y="149" width="0.1075%" height="15" fill="rgb(213,55,15)" fg:x="14876" fg:w="56"/><text x="28.8617%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="28.7895%" y="149" width="0.1075%" height="15" fill="rgb(209,9,3)" fg:x="14991" fg:w="56"/><text x="29.0825%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.0104%" y="149" width="0.1075%" height="15" fill="rgb(230,59,30)" fg:x="15106" fg:w="56"/><text x="29.3034%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.2312%" y="149" width="0.1075%" height="15" fill="rgb(209,121,21)" fg:x="15221" fg:w="56"/><text x="29.5242%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.4521%" y="149" width="0.1075%" height="15" fill="rgb(220,109,13)" fg:x="15336" fg:w="56"/><text x="29.7451%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="29.6729%" y="149" width="0.1075%" height="15" fill="rgb(232,18,1)" fg:x="15451" fg:w="56"/><text x="29.9659%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (920 instructions, 1.77%)</title><rect x="28.1270%" y="165" width="1.7668%" height="15" fill="rgb(215,41,42)" fg:x="14646" fg:w="920"/><text x="28.4199%" y="175.50"></text></g><g><title>__rust_realloc (104 instructions, 0.20%)</title><rect x="29.8938%" y="133" width="0.1997%" height="15" fill="rgb(224,123,36)" fg:x="15566" fg:w="104"/><text x="30.1868%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.27%)</title><rect x="29.8938%" y="149" width="0.2669%" height="15" fill="rgb(240,125,3)" fg:x="15566" fg:w="139"/><text x="30.1868%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.41%)</title><rect x="29.8938%" y="165" width="0.4148%" height="15" fill="rgb(205,98,50)" fg:x="15566" fg:w="216"/><text x="30.1868%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="30.3086%" y="149" width="0.1075%" height="15" fill="rgb(205,185,37)" fg:x="15782" fg:w="56"/><text x="30.6016%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (115 instructions, 0.22%)</title><rect x="30.3086%" y="165" width="0.2209%" height="15" fill="rgb(238,207,15)" fg:x="15782" fg:w="115"/><text x="30.6016%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.06%)</title><rect x="30.5295%" y="165" width="0.0576%" height="15" fill="rgb(213,199,42)" fg:x="15897" fg:w="30"/><text x="30.8224%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="30.5871%" y="165" width="0.1268%" height="15" fill="rgb(235,201,11)" fg:x="15927" fg:w="66"/><text x="30.8801%" y="175.50"></text></g><g><title>binread::BinRead::read (3,615 instructions, 6.94%)</title><rect x="24.9390%" y="181" width="6.9424%" height="15" fill="rgb(207,46,11)" fg:x="12986" fg:w="3615"/><text x="25.2320%" y="191.50">binread:..</text></g><g><title>__rust_realloc (47 instructions, 0.09%)</title><rect x="31.8815%" y="149" width="0.0903%" height="15" fill="rgb(241,35,35)" fg:x="16601" fg:w="47"/><text x="32.1744%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (82 instructions, 0.16%)</title><rect x="31.8815%" y="165" width="0.1575%" height="15" fill="rgb(243,32,47)" fg:x="16601" fg:w="82"/><text x="32.1744%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (159 instructions, 0.31%)</title><rect x="31.8815%" y="181" width="0.3054%" height="15" fill="rgb(247,202,23)" fg:x="16601" fg:w="159"/><text x="32.1744%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.1868%" y="181" width="0.3169%" height="15" fill="rgb(219,102,11)" fg:x="16760" fg:w="165"/><text x="32.4798%" y="191.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.5037%" y="181" width="0.3169%" height="15" fill="rgb(243,110,44)" fg:x="16925" fg:w="165"/><text x="32.7967%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="32.8206%" y="181" width="0.1556%" height="15" fill="rgb(222,74,54)" fg:x="17090" fg:w="81"/><text x="33.1135%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="32.9761%" y="181" width="0.1056%" height="15" fill="rgb(216,99,12)" fg:x="17171" fg:w="55"/><text x="33.2691%" y="191.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,628 instructions, 8.89%)</title><rect x="24.7297%" y="197" width="8.8879%" height="15" fill="rgb(226,22,26)" fg:x="12877" fg:w="4628"/><text x="25.0227%" y="207.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.6176%" y="197" width="0.0211%" height="15" fill="rgb(217,163,10)" fg:x="17505" fg:w="11"/><text x="33.9105%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.6387%" y="197" width="0.0211%" height="15" fill="rgb(213,25,53)" fg:x="17516" fg:w="11"/><text x="33.9317%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.6598%" y="197" width="0.0211%" height="15" fill="rgb(252,105,26)" fg:x="17527" fg:w="11"/><text x="33.9528%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="33.6905%" y="149" width="0.1018%" height="15" fill="rgb(220,39,43)" fg:x="17543" fg:w="53"/><text x="33.9835%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="33.7923%" y="149" width="0.5857%" height="15" fill="rgb(229,68,48)" fg:x="17596" fg:w="305"/><text x="34.0853%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="34.3781%" y="149" width="0.1402%" height="15" fill="rgb(252,8,32)" fg:x="17901" fg:w="73"/><text x="34.6710%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="33.6905%" y="165" width="1.2829%" height="15" fill="rgb(223,20,43)" fg:x="17543" fg:w="668"/><text x="33.9835%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 instructions, 1.51%)</title><rect x="33.6809%" y="181" width="1.5114%" height="15" fill="rgb(229,81,49)" fg:x="17538" fg:w="787"/><text x="33.9739%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (158 instructions, 0.30%)</title><rect x="35.1923%" y="181" width="0.3034%" height="15" fill="rgb(236,28,36)" fg:x="18325" fg:w="158"/><text x="35.4853%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="35.5054%" y="149" width="0.1018%" height="15" fill="rgb(249,185,26)" fg:x="18488" fg:w="53"/><text x="35.7983%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="35.6072%" y="149" width="0.5857%" height="15" fill="rgb(249,174,33)" fg:x="18541" fg:w="305"/><text x="35.9001%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="36.1929%" y="149" width="0.1402%" height="15" fill="rgb(233,201,37)" fg:x="18846" fg:w="73"/><text x="36.4859%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="35.5054%" y="165" width="1.2829%" height="15" fill="rgb(221,78,26)" fg:x="18488" fg:w="668"/><text x="35.7983%" y="175.50"></text></g><g><title>candid::types::internal::env_add (887 instructions, 1.70%)</title><rect x="35.4958%" y="181" width="1.7034%" height="15" fill="rgb(250,127,30)" fg:x="18483" fg:w="887"/><text x="35.7887%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="37.1992%" y="181" width="0.1460%" height="15" fill="rgb(230,49,44)" fg:x="19370" fg:w="76"/><text x="37.4922%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="37.3548%" y="149" width="0.1018%" height="15" fill="rgb(229,67,23)" fg:x="19451" fg:w="53"/><text x="37.6477%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="37.4565%" y="149" width="0.5857%" height="15" fill="rgb(249,83,47)" fg:x="19504" fg:w="305"/><text x="37.7495%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="38.0423%" y="149" width="0.1402%" height="15" fill="rgb(215,43,3)" fg:x="19809" fg:w="73"/><text x="38.3353%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="37.3548%" y="165" width="1.2829%" height="15" fill="rgb(238,154,13)" fg:x="19451" fg:w="668"/><text x="37.6477%" y="175.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="38.6376%" y="165" width="0.8565%" height="15" fill="rgb(219,56,2)" fg:x="20119" fg:w="446"/><text x="38.9306%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="39.4942%" y="149" width="0.1556%" height="15" fill="rgb(233,0,4)" fg:x="20565" fg:w="81"/><text x="39.7871%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.21%)</title><rect x="39.4942%" y="165" width="0.2132%" height="15" fill="rgb(235,30,7)" fg:x="20565" fg:w="111"/><text x="39.7871%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,399 instructions, 2.69%)</title><rect x="37.3452%" y="181" width="2.6867%" height="15" fill="rgb(250,79,13)" fg:x="19446" fg:w="1399"/><text x="37.6381%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.0319%" y="133" width="0.1018%" height="15" fill="rgb(211,146,34)" fg:x="20845" fg:w="53"/><text x="40.3248%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="40.0319%" y="149" width="0.1517%" height="15" fill="rgb(228,22,38)" fg:x="20845" fg:w="79"/><text x="40.3248%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.56%)</title><rect x="40.0319%" y="165" width="0.5608%" height="15" fill="rgb(235,168,5)" fg:x="20845" fg:w="292"/><text x="40.3248%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (9 instructions, 0.02%)</title><rect x="40.5927%" y="165" width="0.0173%" height="15" fill="rgb(221,155,16)" fg:x="21137" fg:w="9"/><text x="40.8856%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.6099%" y="133" width="0.1018%" height="15" fill="rgb(215,215,53)" fg:x="21146" fg:w="53"/><text x="40.9029%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="40.6099%" y="149" width="0.1517%" height="15" fill="rgb(223,4,10)" fg:x="21146" fg:w="79"/><text x="40.9029%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.56%)</title><rect x="40.6099%" y="165" width="0.5608%" height="15" fill="rgb(234,103,6)" fg:x="21146" fg:w="292"/><text x="40.9029%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (9 instructions, 0.02%)</title><rect x="41.1707%" y="165" width="0.0173%" height="15" fill="rgb(227,97,0)" fg:x="21438" fg:w="9"/><text x="41.4637%" y="175.50"></text></g><g><title>candid::types::internal::env_id (954 instructions, 1.83%)</title><rect x="40.0319%" y="181" width="1.8321%" height="15" fill="rgb(234,150,53)" fg:x="20845" fg:w="954"/><text x="40.3248%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (4,368 instructions, 8.39%)</title><rect x="33.6809%" y="197" width="8.3885%" height="15" fill="rgb(228,201,54)" fg:x="17538" fg:w="4368"/><text x="33.9739%" y="207.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.06%)</title><rect x="42.0695%" y="197" width="0.0634%" height="15" fill="rgb(222,22,37)" fg:x="21906" fg:w="33"/><text x="42.3625%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (170 instructions, 0.33%)</title><rect x="42.1540%" y="181" width="0.3265%" height="15" fill="rgb(237,53,32)" fg:x="21950" fg:w="170"/><text x="42.4470%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (211 instructions, 0.41%)</title><rect x="42.1329%" y="197" width="0.4052%" height="15" fill="rgb(233,25,53)" fg:x="21939" fg:w="211"/><text x="42.4258%" y="207.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.5381%" y="181" width="0.0288%" height="15" fill="rgb(210,40,34)" fg:x="22150" fg:w="15"/><text x="42.8310%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.5669%" y="181" width="0.0288%" height="15" fill="rgb(241,220,44)" fg:x="22165" fg:w="15"/><text x="42.8598%" y="191.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="42.5957%" y="165" width="0.1364%" height="15" fill="rgb(235,28,35)" fg:x="22180" fg:w="71"/><text x="42.8887%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="42.7320%" y="165" width="0.1325%" height="15" fill="rgb(210,56,17)" fg:x="22251" fg:w="69"/><text x="43.0250%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="42.8646%" y="165" width="0.1268%" height="15" fill="rgb(224,130,29)" fg:x="22320" fg:w="66"/><text x="43.1575%" y="175.50"></text></g><g><title>binread::BinRead::read (250 instructions, 0.48%)</title><rect x="42.5957%" y="181" width="0.4801%" height="15" fill="rgb(235,212,8)" fg:x="22180" fg:w="250"/><text x="42.8887%" y="191.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.10%)</title><rect x="43.0758%" y="181" width="0.0979%" height="15" fill="rgb(223,33,50)" fg:x="22430" fg:w="51"/><text x="43.3688%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="43.1737%" y="181" width="0.1460%" height="15" fill="rgb(219,149,13)" fg:x="22481" fg:w="76"/><text x="43.4667%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="43.3197%" y="181" width="0.2016%" height="15" fill="rgb(250,156,29)" fg:x="22557" fg:w="105"/><text x="43.6127%" y="191.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.28%)</title><rect x="43.5213%" y="181" width="0.2765%" height="15" fill="rgb(216,193,19)" fg:x="22662" fg:w="144"/><text x="43.8143%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (798 instructions, 1.53%)</title><rect x="42.5381%" y="197" width="1.5325%" height="15" fill="rgb(216,135,14)" fg:x="22150" fg:w="798"/><text x="42.8310%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.0706%" y="197" width="0.0211%" height="15" fill="rgb(241,47,5)" fg:x="22948" fg:w="11"/><text x="44.3636%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.0917%" y="197" width="0.0211%" height="15" fill="rgb(233,42,35)" fg:x="22959" fg:w="11"/><text x="44.3847%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.1128%" y="197" width="0.0211%" height="15" fill="rgb(231,13,6)" fg:x="22970" fg:w="11"/><text x="44.4058%" y="207.50"></text></g><g><title>memcpy (411 instructions, 0.79%)</title><rect x="44.1340%" y="197" width="0.7893%" height="15" fill="rgb(207,181,40)" fg:x="22981" fg:w="411"/><text x="44.4269%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.24%)</title><rect x="44.9329%" y="181" width="0.2381%" height="15" fill="rgb(254,173,49)" fg:x="23397" fg:w="124"/><text x="45.2258%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.1710%" y="149" width="0.1210%" height="15" fill="rgb(221,1,38)" fg:x="23521" fg:w="63"/><text x="45.4640%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (211 instructions, 0.41%)</title><rect x="45.1710%" y="165" width="0.4052%" height="15" fill="rgb(206,124,46)" fg:x="23521" fg:w="211"/><text x="45.4640%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (241 instructions, 0.46%)</title><rect x="45.1710%" y="181" width="0.4628%" height="15" fill="rgb(249,21,11)" fg:x="23521" fg:w="241"/><text x="45.4640%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="45.6338%" y="181" width="0.0211%" height="15" fill="rgb(222,201,40)" fg:x="23762" fg:w="11"/><text x="45.9268%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (448 instructions, 0.86%)</title><rect x="44.9233%" y="197" width="0.8604%" height="15" fill="rgb(235,61,29)" fg:x="23392" fg:w="448"/><text x="45.2162%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.7836%" y="181" width="0.1210%" height="15" fill="rgb(219,207,3)" fg:x="23840" fg:w="63"/><text x="46.0766%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.38%)</title><rect x="45.7836%" y="197" width="0.3783%" height="15" fill="rgb(222,56,46)" fg:x="23840" fg:w="197"/><text x="46.0766%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.1716%" y="181" width="0.0211%" height="15" fill="rgb(239,76,54)" fg:x="24042" fg:w="11"/><text x="46.4645%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.1927%" y="181" width="0.0211%" height="15" fill="rgb(231,124,27)" fg:x="24053" fg:w="11"/><text x="46.4857%" y="191.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="46.2138%" y="181" width="0.2612%" height="15" fill="rgb(249,195,6)" fg:x="24064" fg:w="136"/><text x="46.5068%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 0.67%)</title><rect x="46.1620%" y="197" width="0.6683%" height="15" fill="rgb(237,174,47)" fg:x="24037" fg:w="348"/><text x="46.4549%" y="207.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.07%)</title><rect x="46.8303%" y="197" width="0.0749%" height="15" fill="rgb(206,201,31)" fg:x="24385" fg:w="39"/><text x="47.1233%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (202 instructions, 0.39%)</title><rect x="46.9052%" y="197" width="0.3879%" height="15" fill="rgb(231,57,52)" fg:x="24424" fg:w="202"/><text x="47.1982%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="47.3027%" y="165" width="0.1018%" height="15" fill="rgb(248,177,22)" fg:x="24631" fg:w="53"/><text x="47.5957%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.60%)</title><rect x="47.4045%" y="165" width="0.5973%" height="15" fill="rgb(215,211,37)" fg:x="24684" fg:w="311"/><text x="47.6975%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="48.0018%" y="165" width="0.1402%" height="15" fill="rgb(241,128,51)" fg:x="24995" fg:w="73"/><text x="48.2947%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.29%)</title><rect x="47.3027%" y="181" width="1.2944%" height="15" fill="rgb(227,165,31)" fg:x="24631" fg:w="674"/><text x="47.5957%" y="191.50"></text></g><g><title>candid::types::internal::env_add (893 instructions, 1.71%)</title><rect x="47.2931%" y="197" width="1.7150%" height="15" fill="rgb(228,167,24)" fg:x="24626" fg:w="893"/><text x="47.5861%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.0081%" y="197" width="0.1460%" height="15" fill="rgb(228,143,12)" fg:x="25519" fg:w="76"/><text x="49.3011%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.1540%" y="197" width="0.1460%" height="15" fill="rgb(249,149,8)" fg:x="25595" fg:w="76"/><text x="49.4470%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="49.3000%" y="197" width="0.1517%" height="15" fill="rgb(243,35,44)" fg:x="25671" fg:w="79"/><text x="49.5930%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="49.4613%" y="149" width="0.1018%" height="15" fill="rgb(246,89,9)" fg:x="25755" fg:w="53"/><text x="49.7543%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="49.5631%" y="149" width="0.5857%" height="15" fill="rgb(233,213,13)" fg:x="25808" fg:w="305"/><text x="49.8561%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="50.1488%" y="149" width="0.1402%" height="15" fill="rgb(233,141,41)" fg:x="26113" fg:w="73"/><text x="50.4418%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="49.4613%" y="165" width="1.2829%" height="15" fill="rgb(239,167,4)" fg:x="25755" fg:w="668"/><text x="49.7543%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (787 instructions, 1.51%)</title><rect x="49.4517%" y="181" width="1.5114%" height="15" fill="rgb(209,217,16)" fg:x="25750" fg:w="787"/><text x="49.7447%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="50.9631%" y="181" width="0.1460%" height="15" fill="rgb(219,88,35)" fg:x="26537" fg:w="76"/><text x="51.2561%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="51.1187%" y="149" width="0.1018%" height="15" fill="rgb(220,193,23)" fg:x="26618" fg:w="53"/><text x="51.4116%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="51.2204%" y="149" width="0.5857%" height="15" fill="rgb(230,90,52)" fg:x="26671" fg:w="305"/><text x="51.5134%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="51.8062%" y="149" width="0.1402%" height="15" fill="rgb(252,106,19)" fg:x="26976" fg:w="73"/><text x="52.0992%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="51.1187%" y="165" width="1.2829%" height="15" fill="rgb(206,74,20)" fg:x="26618" fg:w="668"/><text x="51.4116%" y="175.50"></text></g><g><title>candid::types::internal::env_add (887 instructions, 1.70%)</title><rect x="51.1091%" y="181" width="1.7034%" height="15" fill="rgb(230,138,44)" fg:x="26613" fg:w="887"/><text x="51.4020%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="52.8125%" y="181" width="0.1460%" height="15" fill="rgb(235,182,43)" fg:x="27500" fg:w="76"/><text x="53.1055%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="52.9681%" y="149" width="0.1018%" height="15" fill="rgb(242,16,51)" fg:x="27581" fg:w="53"/><text x="53.2610%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (305 instructions, 0.59%)</title><rect x="53.0698%" y="149" width="0.5857%" height="15" fill="rgb(248,9,4)" fg:x="27634" fg:w="305"/><text x="53.3628%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="53.6556%" y="149" width="0.1402%" height="15" fill="rgb(210,31,22)" fg:x="27939" fg:w="73"/><text x="53.9486%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.28%)</title><rect x="52.9681%" y="165" width="1.2829%" height="15" fill="rgb(239,54,39)" fg:x="27581" fg:w="668"/><text x="53.2610%" y="175.50"></text></g><g><title>memcmp (446 instructions, 0.86%)</title><rect x="54.2509%" y="165" width="0.8565%" height="15" fill="rgb(230,99,41)" fg:x="28249" fg:w="446"/><text x="54.5439%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="55.1074%" y="149" width="0.1556%" height="15" fill="rgb(253,106,12)" fg:x="28695" fg:w="81"/><text x="55.4004%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.21%)</title><rect x="55.1074%" y="165" width="0.2132%" height="15" fill="rgb(213,46,41)" fg:x="28695" fg:w="111"/><text x="55.4004%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,399 instructions, 2.69%)</title><rect x="52.9585%" y="181" width="2.6867%" height="15" fill="rgb(215,133,35)" fg:x="27576" fg:w="1399"/><text x="53.2514%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="55.6452%" y="133" width="0.1018%" height="15" fill="rgb(213,28,5)" fg:x="28975" fg:w="53"/><text x="55.9381%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="55.6452%" y="149" width="0.1517%" height="15" fill="rgb(215,77,49)" fg:x="28975" fg:w="79"/><text x="55.9381%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.56%)</title><rect x="55.6452%" y="165" width="0.5608%" height="15" fill="rgb(248,100,22)" fg:x="28975" fg:w="292"/><text x="55.9381%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (9 instructions, 0.02%)</title><rect x="56.2059%" y="165" width="0.0173%" height="15" fill="rgb(208,67,9)" fg:x="29267" fg:w="9"/><text x="56.4989%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.248 (15 instructions, 0.03%)</title><rect x="56.2232%" y="165" width="0.0288%" height="15" fill="rgb(219,133,21)" fg:x="29276" fg:w="15"/><text x="56.5162%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.2520%" y="165" width="0.0211%" height="15" fill="rgb(246,46,29)" fg:x="29291" fg:w="11"/><text x="56.5450%" y="175.50"></text></g><g><title>candid::types::internal::env_id (523 instructions, 1.00%)</title><rect x="55.6452%" y="181" width="1.0044%" height="15" fill="rgb(246,185,52)" fg:x="28975" fg:w="523"/><text x="55.9381%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (3,855 instructions, 7.40%)</title><rect x="49.4517%" y="197" width="7.4034%" height="15" fill="rgb(252,136,11)" fg:x="25750" fg:w="3855"/><text x="49.7447%" y="207.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="56.8551%" y="197" width="0.1517%" height="15" fill="rgb(219,138,53)" fg:x="29605" fg:w="79"/><text x="57.1480%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="57.0164%" y="165" width="0.1018%" height="15" fill="rgb(211,51,23)" fg:x="29689" fg:w="53"/><text x="57.3094%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (311 instructions, 0.60%)</title><rect x="57.1182%" y="165" width="0.5973%" height="15" fill="rgb(247,221,28)" fg:x="29742" fg:w="311"/><text x="57.4111%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.14%)</title><rect x="57.7154%" y="165" width="0.1402%" height="15" fill="rgb(251,222,45)" fg:x="30053" fg:w="73"/><text x="58.0084%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.29%)</title><rect x="57.0164%" y="181" width="1.2944%" height="15" fill="rgb(217,162,53)" fg:x="29689" fg:w="674"/><text x="57.3094%" y="191.50"></text></g><g><title>memcmp (467 instructions, 0.90%)</title><rect x="58.3108%" y="181" width="0.8969%" height="15" fill="rgb(229,93,14)" fg:x="30363" fg:w="467"/><text x="58.6037%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="59.2076%" y="165" width="0.1556%" height="15" fill="rgb(209,67,49)" fg:x="30830" fg:w="81"/><text x="59.5006%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.21%)</title><rect x="59.2076%" y="181" width="0.2132%" height="15" fill="rgb(213,87,29)" fg:x="30830" fg:w="111"/><text x="59.5006%" y="191.50"></text></g><g><title>candid::types::internal::env_add (1,426 instructions, 2.74%)</title><rect x="57.0068%" y="197" width="2.7386%" height="15" fill="rgb(205,151,52)" fg:x="29684" fg:w="1426"/><text x="57.2997%" y="207.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="59.7453%" y="149" width="0.1018%" height="15" fill="rgb(253,215,39)" fg:x="31110" fg:w="53"/><text x="60.0383%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.29%)</title><rect x="59.8471%" y="149" width="0.2938%" height="15" fill="rgb(221,220,41)" fg:x="31163" fg:w="153"/><text x="60.1401%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.1410%" y="133" width="0.1018%" height="15" fill="rgb(218,133,21)" fg:x="31316" fg:w="53"/><text x="60.4339%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="60.1410%" y="149" width="0.1517%" height="15" fill="rgb(221,193,43)" fg:x="31316" fg:w="79"/><text x="60.4339%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.67%)</title><rect x="59.7453%" y="165" width="0.6741%" height="15" fill="rgb(240,128,52)" fg:x="31110" fg:w="351"/><text x="60.0383%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.8285%" y="149" width="0.1018%" height="15" fill="rgb(253,114,12)" fg:x="31674" fg:w="53"/><text x="61.1215%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.29%)</title><rect x="60.9303%" y="149" width="0.2938%" height="15" fill="rgb(215,223,47)" fg:x="31727" fg:w="153"/><text x="61.2232%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.2241%" y="133" width="0.1018%" height="15" fill="rgb(248,225,23)" fg:x="31880" fg:w="53"/><text x="61.5171%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="61.2241%" y="149" width="0.1517%" height="15" fill="rgb(250,108,0)" fg:x="31880" fg:w="79"/><text x="61.5171%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.67%)</title><rect x="60.8285%" y="165" width="0.6741%" height="15" fill="rgb(228,208,7)" fg:x="31674" fg:w="351"/><text x="61.1215%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,128 instructions, 2.17%)</title><rect x="59.7453%" y="181" width="2.1663%" height="15" fill="rgb(244,45,10)" fg:x="31110" fg:w="1128"/><text x="60.0383%" y="191.50">c..</text></g><g><title>candid::types::internal::env_id (1,410 instructions, 2.71%)</title><rect x="59.7453%" y="197" width="2.7078%" height="15" fill="rgb(207,125,25)" fg:x="31110" fg:w="1410"/><text x="60.0383%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="62.4532%" y="165" width="0.1460%" height="15" fill="rgb(210,195,18)" fg:x="32520" fg:w="76"/><text x="62.7462%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.21%)</title><rect x="62.4532%" y="181" width="0.2132%" height="15" fill="rgb(249,80,12)" fg:x="32520" fg:w="111"/><text x="62.7462%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (183 instructions, 0.35%)</title><rect x="62.4532%" y="197" width="0.3514%" height="15" fill="rgb(221,65,9)" fg:x="32520" fg:w="183"/><text x="62.7462%" y="207.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="62.8046%" y="181" width="0.0461%" height="15" fill="rgb(235,49,36)" fg:x="32703" fg:w="24"/><text x="63.0976%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="62.8507%" y="165" width="0.1460%" height="15" fill="rgb(225,32,20)" fg:x="32727" fg:w="76"/><text x="63.1437%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="62.9967%" y="149" width="0.1517%" height="15" fill="rgb(215,141,46)" fg:x="32803" fg:w="79"/><text x="63.2896%" y="159.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.29%)</title><rect x="62.9967%" y="165" width="0.2938%" height="15" fill="rgb(250,160,47)" fg:x="32803" fg:w="153"/><text x="63.2896%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="63.2905%" y="165" width="0.1575%" height="15" fill="rgb(216,222,40)" fg:x="32956" fg:w="82"/><text x="63.5835%" y="175.50"></text></g><g><title>candid::types::internal::unroll (472 instructions, 0.91%)</title><rect x="62.8507%" y="181" width="0.9065%" height="15" fill="rgb(234,217,39)" fg:x="32727" fg:w="472"/><text x="63.1437%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="63.7572%" y="133" width="0.1018%" height="15" fill="rgb(207,178,40)" fg:x="33199" fg:w="53"/><text x="64.0501%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.29%)</title><rect x="63.8590%" y="133" width="0.2938%" height="15" fill="rgb(221,136,13)" fg:x="33252" fg:w="153"/><text x="64.1519%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.1528%" y="117" width="0.1018%" height="15" fill="rgb(249,199,10)" fg:x="33405" fg:w="53"/><text x="64.4458%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="64.1528%" y="133" width="0.1517%" height="15" fill="rgb(249,222,13)" fg:x="33405" fg:w="79"/><text x="64.4458%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.67%)</title><rect x="63.7572%" y="149" width="0.6741%" height="15" fill="rgb(244,185,38)" fg:x="33199" fg:w="351"/><text x="64.0501%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (564 instructions, 1.08%)</title><rect x="63.7572%" y="165" width="1.0831%" height="15" fill="rgb(236,202,9)" fg:x="33199" fg:w="564"/><text x="64.0501%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="64.8403%" y="165" width="0.1402%" height="15" fill="rgb(250,229,37)" fg:x="33763" fg:w="73"/><text x="65.1333%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="64.9805%" y="165" width="0.2612%" height="15" fill="rgb(206,174,23)" fg:x="33836" fg:w="136"/><text x="65.2735%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,144 instructions, 2.20%)</title><rect x="63.7572%" y="181" width="2.1970%" height="15" fill="rgb(211,33,43)" fg:x="33199" fg:w="1144"/><text x="64.0501%" y="191.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="65.9542%" y="149" width="0.1575%" height="15" fill="rgb(245,58,50)" fg:x="34343" fg:w="82"/><text x="66.2471%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.22%)</title><rect x="65.9542%" y="165" width="0.2247%" height="15" fill="rgb(244,68,36)" fg:x="34343" fg:w="117"/><text x="66.2471%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (189 instructions, 0.36%)</title><rect x="65.9542%" y="181" width="0.3630%" height="15" fill="rgb(232,229,15)" fg:x="34343" fg:w="189"/><text x="66.2471%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="66.3171%" y="133" width="0.1018%" height="15" fill="rgb(254,30,23)" fg:x="34532" fg:w="53"/><text x="66.6101%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="66.3171%" y="149" width="0.1517%" height="15" fill="rgb(235,160,14)" fg:x="34532" fg:w="79"/><text x="66.6101%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.56%)</title><rect x="66.3171%" y="165" width="0.5608%" height="15" fill="rgb(212,155,44)" fg:x="34532" fg:w="292"/><text x="66.6101%" y="175.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.03%)</title><rect x="66.8779%" y="165" width="0.0346%" height="15" fill="rgb(226,2,50)" fg:x="34824" fg:w="18"/><text x="67.1709%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="66.9125%" y="165" width="0.0211%" height="15" fill="rgb(234,177,6)" fg:x="34842" fg:w="11"/><text x="67.2055%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (440 instructions, 0.85%)</title><rect x="66.3171%" y="181" width="0.8450%" height="15" fill="rgb(217,24,9)" fg:x="34532" fg:w="440"/><text x="66.6101%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="67.1621%" y="133" width="0.1575%" height="15" fill="rgb(220,13,46)" fg:x="34972" fg:w="82"/><text x="67.4551%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.22%)</title><rect x="67.1621%" y="149" width="0.2247%" height="15" fill="rgb(239,221,27)" fg:x="34972" fg:w="117"/><text x="67.4551%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (186 instructions, 0.36%)</title><rect x="67.1621%" y="165" width="0.3572%" height="15" fill="rgb(222,198,25)" fg:x="34972" fg:w="186"/><text x="67.4551%" y="175.50"></text></g><g><title>leb128::write::signed (236 instructions, 0.45%)</title><rect x="67.1621%" y="181" width="0.4532%" height="15" fill="rgb(211,99,13)" fg:x="34972" fg:w="236"/><text x="67.4551%" y="191.50"></text></g><g><title>leb128::write::unsigned (43 instructions, 0.08%)</title><rect x="67.6154%" y="181" width="0.0826%" height="15" fill="rgb(232,111,31)" fg:x="35208" fg:w="43"/><text x="67.9083%" y="191.50"></text></g><g><title>candid::types::internal::Label::get_id (110 instructions, 0.21%)</title><rect x="67.6980%" y="181" width="0.2113%" height="15" fill="rgb(245,82,37)" fg:x="35251" fg:w="110"/><text x="67.9909%" y="191.50"></text></g><g><title>leb128::write::unsigned (207 instructions, 0.40%)</title><rect x="67.9092%" y="181" width="0.3975%" height="15" fill="rgb(227,149,46)" fg:x="35361" fg:w="207"/><text x="68.2022%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.10%)</title><rect x="68.3067%" y="181" width="0.0960%" height="15" fill="rgb(218,36,50)" fg:x="35568" fg:w="50"/><text x="68.5997%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="68.4028%" y="149" width="0.1556%" height="15" fill="rgb(226,80,48)" fg:x="35618" fg:w="81"/><text x="68.6957%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (111 instructions, 0.21%)</title><rect x="68.4028%" y="165" width="0.2132%" height="15" fill="rgb(238,224,15)" fg:x="35618" fg:w="111"/><text x="68.6957%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="68.6159%" y="165" width="0.1556%" height="15" fill="rgb(241,136,10)" fg:x="35729" fg:w="81"/><text x="68.9089%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="68.7715%" y="165" width="0.1498%" height="15" fill="rgb(208,32,45)" fg:x="35810" fg:w="78"/><text x="69.0645%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (345 instructions, 0.66%)</title><rect x="68.4028%" y="181" width="0.6626%" height="15" fill="rgb(207,135,9)" fg:x="35618" fg:w="345"/><text x="68.6957%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.0653%" y="181" width="0.0211%" height="15" fill="rgb(206,86,44)" fg:x="35963" fg:w="11"/><text x="69.3583%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,557 instructions, 6.83%)</title><rect x="62.8046%" y="197" width="6.8311%" height="15" fill="rgb(245,177,15)" fg:x="32703" fg:w="3557"/><text x="63.0976%" y="207.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.6357%" y="197" width="0.0211%" height="15" fill="rgb(206,64,50)" fg:x="36260" fg:w="11"/><text x="69.9287%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="69.6568%" y="197" width="0.1517%" height="15" fill="rgb(234,36,40)" fg:x="36271" fg:w="79"/><text x="69.9498%" y="207.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="69.8085%" y="197" width="0.2016%" height="15" fill="rgb(213,64,8)" fg:x="36350" fg:w="105"/><text x="70.1015%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.22%)</title><rect x="70.0102%" y="165" width="0.2247%" height="15" fill="rgb(210,75,36)" fg:x="36455" fg:w="117"/><text x="70.3031%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.29%)</title><rect x="70.0102%" y="181" width="0.2919%" height="15" fill="rgb(229,88,21)" fg:x="36455" fg:w="152"/><text x="70.3031%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (221 instructions, 0.42%)</title><rect x="70.0102%" y="197" width="0.4244%" height="15" fill="rgb(252,204,47)" fg:x="36455" fg:w="221"/><text x="70.3031%" y="207.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.4346%" y="197" width="0.2016%" height="15" fill="rgb(208,77,27)" fg:x="36676" fg:w="105"/><text x="70.7276%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="70.6362%" y="197" width="0.1556%" height="15" fill="rgb(221,76,26)" fg:x="36781" fg:w="81"/><text x="70.9292%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="70.7918%" y="197" width="0.1498%" height="15" fill="rgb(225,139,18)" fg:x="36862" fg:w="78"/><text x="71.0848%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="70.9416%" y="165" width="0.1517%" height="15" fill="rgb(230,137,11)" fg:x="36940" fg:w="79"/><text x="71.2346%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="70.9416%" y="181" width="0.2189%" height="15" fill="rgb(212,28,1)" fg:x="36940" fg:w="114"/><text x="71.2346%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (183 instructions, 0.35%)</title><rect x="70.9416%" y="197" width="0.3514%" height="15" fill="rgb(248,164,17)" fg:x="36940" fg:w="183"/><text x="71.2346%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="71.2930%" y="149" width="0.1517%" height="15" fill="rgb(222,171,42)" fg:x="37123" fg:w="79"/><text x="71.5860%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="71.2930%" y="165" width="0.2189%" height="15" fill="rgb(243,84,45)" fg:x="37123" fg:w="114"/><text x="71.5860%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (183 instructions, 0.35%)</title><rect x="71.2930%" y="181" width="0.3514%" height="15" fill="rgb(252,49,23)" fg:x="37123" fg:w="183"/><text x="71.5860%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="71.6445%" y="181" width="0.1460%" height="15" fill="rgb(215,19,7)" fg:x="37306" fg:w="76"/><text x="71.9375%" y="191.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="71.7904%" y="181" width="0.2593%" height="15" fill="rgb(238,81,41)" fg:x="37382" fg:w="135"/><text x="72.0834%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="72.0497%" y="133" width="0.1402%" height="15" fill="rgb(210,199,37)" fg:x="37517" fg:w="73"/><text x="72.3427%" y="143.50"></text></g><g><title>memcpy (195 instructions, 0.37%)</title><rect x="72.1899%" y="133" width="0.3745%" height="15" fill="rgb(244,192,49)" fg:x="37590" fg:w="195"/><text x="72.4829%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="72.5644%" y="133" width="0.1556%" height="15" fill="rgb(226,211,11)" fg:x="37785" fg:w="81"/><text x="72.8574%" y="143.50"></text></g><g><title>__rust_realloc (433 instructions, 0.83%)</title><rect x="72.0497%" y="149" width="0.8316%" height="15" fill="rgb(236,162,54)" fg:x="37517" fg:w="433"/><text x="72.3427%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.90%)</title><rect x="72.0497%" y="165" width="0.8988%" height="15" fill="rgb(220,229,9)" fg:x="37517" fg:w="468"/><text x="72.3427%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (545 instructions, 1.05%)</title><rect x="72.0497%" y="181" width="1.0466%" height="15" fill="rgb(250,87,22)" fg:x="37517" fg:w="545"/><text x="72.3427%" y="191.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="73.0963%" y="181" width="0.2593%" height="15" fill="rgb(239,43,17)" fg:x="38062" fg:w="135"/><text x="73.3893%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="73.3556%" y="181" width="0.1498%" height="15" fill="rgb(231,177,25)" fg:x="38197" fg:w="78"/><text x="73.6486%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="73.5054%" y="133" width="0.1018%" height="15" fill="rgb(219,179,1)" fg:x="38275" fg:w="53"/><text x="73.7984%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.29%)</title><rect x="73.6072%" y="133" width="0.2938%" height="15" fill="rgb(238,219,53)" fg:x="38328" fg:w="153"/><text x="73.9002%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="73.9010%" y="117" width="0.1018%" height="15" fill="rgb(232,167,36)" fg:x="38481" fg:w="53"/><text x="74.1940%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.15%)</title><rect x="73.9010%" y="133" width="0.1517%" height="15" fill="rgb(244,19,51)" fg:x="38481" fg:w="79"/><text x="74.1940%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (351 instructions, 0.67%)</title><rect x="73.5054%" y="149" width="0.6741%" height="15" fill="rgb(224,6,22)" fg:x="38275" fg:w="351"/><text x="73.7984%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (564 instructions, 1.08%)</title><rect x="73.5054%" y="165" width="1.0831%" height="15" fill="rgb(224,145,5)" fg:x="38275" fg:w="564"/><text x="73.7984%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="74.5885%" y="133" width="0.1517%" height="15" fill="rgb(234,130,49)" fg:x="38839" fg:w="79"/><text x="74.8815%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="74.5885%" y="149" width="0.2189%" height="15" fill="rgb(254,6,2)" fg:x="38839" fg:w="114"/><text x="74.8815%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (183 instructions, 0.35%)</title><rect x="74.5885%" y="165" width="0.3514%" height="15" fill="rgb(208,96,46)" fg:x="38839" fg:w="183"/><text x="74.8815%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (917 instructions, 1.76%)</title><rect x="73.5054%" y="181" width="1.7611%" height="15" fill="rgb(239,3,39)" fg:x="38275" fg:w="917"/><text x="73.7984%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="75.2665%" y="181" width="0.0576%" height="15" fill="rgb(233,210,1)" fg:x="39192" fg:w="30"/><text x="75.5594%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="75.3241%" y="181" width="0.1498%" height="15" fill="rgb(244,137,37)" fg:x="39222" fg:w="78"/><text x="75.6170%" y="191.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,514 instructions, 4.83%)</title><rect x="71.2930%" y="197" width="4.8280%" height="15" fill="rgb(240,136,2)" fg:x="37123" fg:w="2514"/><text x="71.5860%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.22%)</title><rect x="76.1211%" y="149" width="0.2247%" height="15" fill="rgb(239,18,37)" fg:x="39637" fg:w="117"/><text x="76.4140%" y="159.50"></text></g><g><title>memcpy (195 instructions, 0.37%)</title><rect x="76.3458%" y="149" width="0.3745%" height="15" fill="rgb(218,185,22)" fg:x="39754" fg:w="195"/><text x="76.6387%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="76.7202%" y="149" width="0.1498%" height="15" fill="rgb(225,218,4)" fg:x="39949" fg:w="78"/><text x="77.0132%" y="159.50"></text></g><g><title>__rust_realloc (474 instructions, 0.91%)</title><rect x="76.1211%" y="165" width="0.9103%" height="15" fill="rgb(230,182,32)" fg:x="39637" fg:w="474"/><text x="76.4140%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (509 instructions, 0.98%)</title><rect x="76.1211%" y="181" width="0.9775%" height="15" fill="rgb(242,56,43)" fg:x="39637" fg:w="509"/><text x="76.4140%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (586 instructions, 1.13%)</title><rect x="76.1211%" y="197" width="1.1254%" height="15" fill="rgb(233,99,24)" fg:x="39637" fg:w="586"/><text x="76.4140%" y="207.50"></text></g><g><title>memcpy (180 instructions, 0.35%)</title><rect x="77.2465%" y="197" width="0.3457%" height="15" fill="rgb(234,209,42)" fg:x="40223" fg:w="180"/><text x="77.5394%" y="207.50"></text></g><g><title>__rust_realloc (104 instructions, 0.20%)</title><rect x="77.5921%" y="165" width="0.1997%" height="15" fill="rgb(227,7,12)" fg:x="40403" fg:w="104"/><text x="77.8851%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.27%)</title><rect x="77.5921%" y="181" width="0.2669%" height="15" fill="rgb(245,203,43)" fg:x="40403" fg:w="139"/><text x="77.8851%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (216 instructions, 0.41%)</title><rect x="77.5921%" y="197" width="0.4148%" height="15" fill="rgb(238,205,33)" fg:x="40403" fg:w="216"/><text x="77.8851%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.23%)</title><rect x="78.0070%" y="197" width="0.2305%" height="15" fill="rgb(231,56,7)" fg:x="40619" fg:w="120"/><text x="78.2999%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="78.2374%" y="197" width="0.1095%" height="15" fill="rgb(244,186,29)" fg:x="40739" fg:w="57"/><text x="78.5304%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="78.3469%" y="197" width="0.1095%" height="15" fill="rgb(234,111,31)" fg:x="40796" fg:w="57"/><text x="78.6398%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.4563%" y="197" width="0.0211%" height="15" fill="rgb(241,149,10)" fg:x="40853" fg:w="11"/><text x="78.7493%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="78.4775%" y="197" width="0.2362%" height="15" fill="rgb(249,206,44)" fg:x="40864" fg:w="123"/><text x="78.7704%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.7233%" y="197" width="0.0211%" height="15" fill="rgb(251,153,30)" fg:x="40992" fg:w="11"/><text x="79.0163%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (124 instructions, 0.24%)</title><rect x="78.7444%" y="197" width="0.2381%" height="15" fill="rgb(239,152,38)" fg:x="41003" fg:w="124"/><text x="79.0374%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (99 instructions, 0.19%)</title><rect x="78.9825%" y="197" width="0.1901%" height="15" fill="rgb(249,139,47)" fg:x="41127" fg:w="99"/><text x="79.2755%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="79.1727%" y="197" width="0.1095%" height="15" fill="rgb(244,64,35)" fg:x="41226" fg:w="57"/><text x="79.4656%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="79.2821%" y="197" width="0.1517%" height="15" fill="rgb(216,46,15)" fg:x="41283" fg:w="79"/><text x="79.5751%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="79.4338%" y="197" width="0.1575%" height="15" fill="rgb(250,74,19)" fg:x="41362" fg:w="82"/><text x="79.7268%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="79.5913%" y="197" width="0.0365%" height="15" fill="rgb(249,42,33)" fg:x="41444" fg:w="19"/><text x="79.8843%" y="207.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (42,827 instructions, 82.25%)</title><rect x="0.9602%" y="213" width="82.2473%" height="15" fill="rgb(242,149,17)" fg:x="500" fg:w="42827"/><text x="1.2532%" y="223.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="83.2075%" y="213" width="0.0230%" height="15" fill="rgb(244,29,21)" fg:x="43327" fg:w="12"/><text x="83.5005%" y="223.50"></text></g><g><title>canister_update setup_subscribe (43,427 instructions, 83.40%)</title><rect x="0.0000%" y="229" width="83.3996%" height="15" fill="rgb(220,130,37)" fg:x="0" fg:w="43427"/><text x="0.2930%" y="239.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.14%)</title><rect x="83.3996%" y="213" width="0.1402%" height="15" fill="rgb(211,67,2)" fg:x="43427" fg:w="73"/><text x="83.6926%" y="223.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="83.5398%" y="149" width="0.1364%" height="15" fill="rgb(235,68,52)" fg:x="43500" fg:w="71"/><text x="83.8328%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="83.6761%" y="149" width="0.7682%" height="15" fill="rgb(246,142,3)" fg:x="43571" fg:w="400"/><text x="83.9691%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="84.4443%" y="149" width="0.1632%" height="15" fill="rgb(241,25,7)" fg:x="43971" fg:w="85"/><text x="84.7373%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="84.6076%" y="149" width="0.1075%" height="15" fill="rgb(242,119,39)" fg:x="44056" fg:w="56"/><text x="84.9005%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="84.7151%" y="149" width="0.1075%" height="15" fill="rgb(241,98,45)" fg:x="44112" fg:w="56"/><text x="85.0081%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="84.8226%" y="149" width="0.1075%" height="15" fill="rgb(254,28,30)" fg:x="44168" fg:w="56"/><text x="85.1156%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.11%)</title><rect x="84.9302%" y="149" width="0.1075%" height="15" fill="rgb(241,142,54)" fg:x="44224" fg:w="56"/><text x="85.2232%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.14%)</title><rect x="85.0377%" y="149" width="0.1364%" height="15" fill="rgb(222,85,15)" fg:x="44280" fg:w="71"/><text x="85.3307%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="85.1741%" y="149" width="0.1325%" height="15" fill="rgb(210,85,47)" fg:x="44351" fg:w="69"/><text x="85.4671%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="85.3066%" y="149" width="0.7682%" height="15" fill="rgb(224,206,25)" fg:x="44420" fg:w="400"/><text x="85.5996%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="86.0748%" y="149" width="0.0307%" height="15" fill="rgb(243,201,19)" fg:x="44820" fg:w="16"/><text x="86.3678%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.22%)</title><rect x="86.1055%" y="133" width="0.2247%" height="15" fill="rgb(236,59,4)" fg:x="44836" fg:w="117"/><text x="86.3985%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="86.3302%" y="101" width="0.1152%" height="15" fill="rgb(254,179,45)" fg:x="44953" fg:w="60"/><text x="86.6232%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="86.3302%" y="117" width="0.1632%" height="15" fill="rgb(226,14,10)" fg:x="44953" fg:w="85"/><text x="86.6232%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="86.4934%" y="69" width="0.0173%" height="15" fill="rgb(244,27,41)" fg:x="45038" fg:w="9"/><text x="86.7864%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="86.5107%" y="53" width="0.0576%" height="15" fill="rgb(235,35,32)" fg:x="45047" fg:w="30"/><text x="86.8037%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="86.5107%" y="69" width="0.1056%" height="15" fill="rgb(218,68,31)" fg:x="45047" fg:w="55"/><text x="86.8037%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="86.4934%" y="85" width="0.2266%" height="15" fill="rgb(207,120,37)" fg:x="45038" fg:w="118"/><text x="86.7864%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="86.4934%" y="101" width="0.3284%" height="15" fill="rgb(227,98,0)" fg:x="45038" fg:w="171"/><text x="86.7864%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="86.4934%" y="117" width="0.3380%" height="15" fill="rgb(207,7,3)" fg:x="45038" fg:w="176"/><text x="86.7864%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.71%)</title><rect x="86.3302%" y="133" width="0.7144%" height="15" fill="rgb(206,98,19)" fg:x="44953" fg:w="372"/><text x="86.6232%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (635 instructions, 1.22%)</title><rect x="86.1055%" y="149" width="1.2195%" height="15" fill="rgb(217,5,26)" fg:x="44836" fg:w="635"/><text x="86.3985%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="87.3250%" y="149" width="0.1632%" height="15" fill="rgb(235,190,38)" fg:x="45471" fg:w="85"/><text x="87.6180%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="87.4882%" y="149" width="0.1056%" height="15" fill="rgb(247,86,24)" fg:x="45556" fg:w="55"/><text x="87.7812%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="87.5939%" y="149" width="0.1268%" height="15" fill="rgb(205,101,16)" fg:x="45611" fg:w="66"/><text x="87.8868%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (69 instructions, 0.13%)</title><rect x="87.7206%" y="149" width="0.1325%" height="15" fill="rgb(246,168,33)" fg:x="45677" fg:w="69"/><text x="88.0136%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.77%)</title><rect x="87.8531%" y="133" width="0.7682%" height="15" fill="rgb(231,114,1)" fg:x="45746" fg:w="400"/><text x="88.1461%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="88.6213%" y="133" width="0.0307%" height="15" fill="rgb(207,184,53)" fg:x="46146" fg:w="16"/><text x="88.9143%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="88.6520%" y="117" width="0.1460%" height="15" fill="rgb(224,95,51)" fg:x="46162" fg:w="76"/><text x="88.9450%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="88.7980%" y="85" width="0.1152%" height="15" fill="rgb(212,188,45)" fg:x="46238" fg:w="60"/><text x="89.0910%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.16%)</title><rect x="88.7980%" y="101" width="0.1632%" height="15" fill="rgb(223,154,38)" fg:x="46238" fg:w="85"/><text x="89.0910%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="88.9612%" y="53" width="0.0173%" height="15" fill="rgb(251,22,52)" fg:x="46323" fg:w="9"/><text x="89.2542%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="88.9785%" y="37" width="0.0576%" height="15" fill="rgb(229,209,22)" fg:x="46332" fg:w="30"/><text x="89.2715%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="88.9785%" y="53" width="0.1056%" height="15" fill="rgb(234,138,34)" fg:x="46332" fg:w="55"/><text x="89.2715%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="88.9612%" y="69" width="0.2266%" height="15" fill="rgb(212,95,11)" fg:x="46323" fg:w="118"/><text x="89.2542%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="88.9612%" y="85" width="0.3284%" height="15" fill="rgb(240,179,47)" fg:x="46323" fg:w="171"/><text x="89.2542%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="88.9612%" y="101" width="0.3380%" height="15" fill="rgb(240,163,11)" fg:x="46323" fg:w="176"/><text x="89.2542%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.71%)</title><rect x="88.7980%" y="117" width="0.7144%" height="15" fill="rgb(236,37,12)" fg:x="46238" fg:w="372"/><text x="89.0910%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.14%)</title><rect x="88.6520%" y="133" width="1.1408%" height="15" fill="rgb(232,164,16)" fg:x="46162" fg:w="594"/><text x="88.9450%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.16%)</title><rect x="89.7928%" y="133" width="0.1632%" height="15" fill="rgb(244,205,15)" fg:x="46756" fg:w="85"/><text x="90.0858%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="89.9560%" y="133" width="0.1056%" height="15" fill="rgb(223,117,47)" fg:x="46841" fg:w="55"/><text x="90.2490%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,277 instructions, 2.45%)</title><rect x="87.8531%" y="149" width="2.4524%" height="15" fill="rgb(244,107,35)" fg:x="45746" fg:w="1277"/><text x="88.1461%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.13%)</title><rect x="90.3055%" y="149" width="0.1268%" height="15" fill="rgb(205,140,8)" fg:x="47023" fg:w="66"/><text x="90.5985%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="90.4323%" y="149" width="0.0250%" height="15" fill="rgb(228,84,46)" fg:x="47089" fg:w="13"/><text x="90.7253%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.02%)</title><rect x="90.4573%" y="149" width="0.0250%" height="15" fill="rgb(254,188,9)" fg:x="47102" fg:w="13"/><text x="90.7502%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="90.4822%" y="149" width="0.0134%" height="15" fill="rgb(206,112,54)" fg:x="47115" fg:w="7"/><text x="90.7752%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="90.4957%" y="149" width="0.0230%" height="15" fill="rgb(216,84,49)" fg:x="47122" fg:w="12"/><text x="90.7886%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="90.5187%" y="149" width="0.1460%" height="15" fill="rgb(214,194,35)" fg:x="47134" fg:w="76"/><text x="90.8117%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="90.6647%" y="149" width="0.1575%" height="15" fill="rgb(249,28,3)" fg:x="47210" fg:w="82"/><text x="90.9576%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.73%)</title><rect x="90.8260%" y="149" width="0.7317%" height="15" fill="rgb(222,56,52)" fg:x="47294" fg:w="381"/><text x="91.1190%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.73%)</title><rect x="91.5577%" y="149" width="0.7317%" height="15" fill="rgb(245,217,50)" fg:x="47675" fg:w="381"/><text x="91.8506%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,315 instructions, 10.21%)</title><rect x="83.5398%" y="165" width="10.2072%" height="15" fill="rgb(213,201,24)" fg:x="43500" fg:w="5315"/><text x="83.8328%" y="175.50">candid::de::..</text></g><g><title>memcpy (396 instructions, 0.76%)</title><rect x="93.7470%" y="165" width="0.7605%" height="15" fill="rgb(248,116,28)" fg:x="48815" fg:w="396"/><text x="94.0400%" y="175.50"></text></g><g><title>memcpy (396 instructions, 0.76%)</title><rect x="94.5075%" y="165" width="0.7605%" height="15" fill="rgb(219,72,43)" fg:x="49211" fg:w="396"/><text x="94.8005%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="95.2776%" y="133" width="0.1056%" height="15" fill="rgb(209,138,14)" fg:x="49612" fg:w="55"/><text x="95.5706%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.11%)</title><rect x="95.4408%" y="133" width="0.1095%" height="15" fill="rgb(222,18,33)" fg:x="49697" fg:w="57"/><text x="95.7338%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (172 instructions, 0.33%)</title><rect x="95.2776%" y="149" width="0.3303%" height="15" fill="rgb(213,199,7)" fg:x="49612" fg:w="172"/><text x="95.5706%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (241 instructions, 0.46%)</title><rect x="95.2680%" y="165" width="0.4628%" height="15" fill="rgb(250,110,10)" fg:x="49607" fg:w="241"/><text x="95.5610%" y="175.50"></text></g><g><title>candid::utils::decode_args (6,413 instructions, 12.32%)</title><rect x="83.5398%" y="181" width="12.3159%" height="15" fill="rgb(248,123,6)" fg:x="43500" fg:w="6413"/><text x="83.8328%" y="191.50">candid::utils::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="95.8557%" y="181" width="0.1556%" height="15" fill="rgb(206,91,31)" fg:x="49913" fg:w="81"/><text x="96.1486%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.0208%" y="149" width="0.0211%" height="15" fill="rgb(211,154,13)" fg:x="49999" fg:w="11"/><text x="96.3138%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="96.0419%" y="149" width="0.0211%" height="15" fill="rgb(225,148,7)" fg:x="50010" fg:w="11"/><text x="96.3349%" y="159.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="96.0631%" y="149" width="0.2612%" height="15" fill="rgb(220,160,43)" fg:x="50021" fg:w="136"/><text x="96.3560%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::new (348 instructions, 0.67%)</title><rect x="96.0112%" y="165" width="0.6683%" height="15" fill="rgb(213,52,39)" fg:x="49994" fg:w="348"/><text x="96.3042%" y="175.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.06%)</title><rect x="96.6795%" y="149" width="0.0615%" height="15" fill="rgb(243,137,7)" fg:x="50342" fg:w="32"/><text x="96.9725%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.15%)</title><rect x="96.7410%" y="101" width="0.1517%" height="15" fill="rgb(230,79,13)" fg:x="50374" fg:w="79"/><text x="97.0340%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (114 instructions, 0.22%)</title><rect x="96.7410%" y="117" width="0.2189%" height="15" fill="rgb(247,105,23)" fg:x="50374" fg:w="114"/><text x="97.0340%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (183 instructions, 0.35%)</title><rect x="96.7410%" y="133" width="0.3514%" height="15" fill="rgb(223,179,41)" fg:x="50374" fg:w="183"/><text x="97.0340%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="97.0924%" y="133" width="0.0211%" height="15" fill="rgb(218,9,34)" fg:x="50557" fg:w="11"/><text x="97.3854%" y="143.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="97.1136%" y="133" width="0.0211%" height="15" fill="rgb(222,106,8)" fg:x="50568" fg:w="11"/><text x="97.4065%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (370 instructions, 0.71%)</title><rect x="96.7410%" y="149" width="0.7106%" height="15" fill="rgb(211,220,0)" fg:x="50374" fg:w="370"/><text x="97.0340%" y="159.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.06%)</title><rect x="97.4516%" y="149" width="0.0576%" height="15" fill="rgb(229,52,16)" fg:x="50744" fg:w="30"/><text x="97.7445%" y="159.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (505 instructions, 0.97%)</title><rect x="96.6795%" y="165" width="0.9698%" height="15" fill="rgb(212,155,18)" fg:x="50342" fg:w="505"/><text x="96.9725%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.6590%" y="165" width="0.1556%" height="15" fill="rgb(242,21,14)" fg:x="50852" fg:w="81"/><text x="97.9519%" y="175.50"></text></g><g><title>ic_cdk::api::call::reply (1,013 instructions, 1.95%)</title><rect x="96.0112%" y="181" width="1.9454%" height="15" fill="rgb(222,19,48)" fg:x="49994" fg:w="1013"/><text x="96.3042%" y="191.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (7,703 instructions, 14.79%)</title><rect x="83.5398%" y="197" width="14.7933%" height="15" fill="rgb(232,45,27)" fg:x="43500" fg:w="7703"/><text x="83.8328%" y="207.50">subscriber::setup_s..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="98.3330%" y="197" width="0.0230%" height="15" fill="rgb(249,103,42)" fg:x="51203" fg:w="12"/><text x="98.6260%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="98.3561%" y="197" width="0.0115%" height="15" fill="rgb(246,81,33)" fg:x="51215" fg:w="6"/><text x="98.6491%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="98.3676%" y="197" width="0.1556%" height="15" fill="rgb(252,33,42)" fg:x="51221" fg:w="81"/><text x="98.6606%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (127 instructions, 0.24%)</title><rect x="98.5232%" y="197" width="0.2439%" height="15" fill="rgb(209,212,41)" fg:x="51302" fg:w="127"/><text x="98.8161%" y="207.50"></text></g><g><title>ic_cdk::futures::waker::wake (8,043 instructions, 15.45%)</title><rect x="83.5398%" y="213" width="15.4462%" height="15" fill="rgb(207,154,6)" fg:x="43500" fg:w="8043"/><text x="83.8328%" y="223.50">ic_cdk::futures::wak..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="98.9860%" y="197" width="0.1498%" height="15" fill="rgb(223,64,47)" fg:x="51543" fg:w="78"/><text x="99.2790%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.32%)</title><rect x="99.1358%" y="197" width="0.3188%" height="15" fill="rgb(211,161,38)" fg:x="51621" fg:w="166"/><text x="99.4288%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (292 instructions, 0.56%)</title><rect x="98.9860%" y="213" width="0.5608%" height="15" fill="rgb(219,138,40)" fg:x="51543" fg:w="292"/><text x="99.2790%" y="223.50"></text></g><g><title>all (52,071 instructions, 100%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(241,228,46)" fg:x="0" fg:w="52071"/><text x="0.2930%" y="255.50"></text></g><g><title>ic_cdk::api::call::callback (8,644 instructions, 16.60%)</title><rect x="83.3996%" y="229" width="16.6004%" height="15" fill="rgb(223,209,38)" fg:x="43427" fg:w="8644"/><text x="83.6926%" y="239.50">ic_cdk::api::call::cal..</text></g></svg></svg>