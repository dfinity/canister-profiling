<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="57488"><g><title>ic_cdk::setup (58 instructions, 0.10%)</title><rect x="0.0000%" y="197" width="0.1009%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="58"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (689 instructions, 1.20%)</title><rect x="0.1009%" y="197" width="1.1985%" height="15" fill="rgb(217,0,24)" fg:x="58" fg:w="689"/><text x="0.3939%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="1.2994%" y="197" width="0.1583%" height="15" fill="rgb(221,193,54)" fg:x="747" fg:w="91"/><text x="1.5924%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="1.4577%" y="181" width="0.1583%" height="15" fill="rgb(248,212,6)" fg:x="838" fg:w="91"/><text x="1.7507%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (57 instructions, 0.10%)</title><rect x="1.6160%" y="149" width="0.0992%" height="15" fill="rgb(208,68,35)" fg:x="929" fg:w="57"/><text x="1.9090%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (155 instructions, 0.27%)</title><rect x="1.6160%" y="165" width="0.2696%" height="15" fill="rgb(232,128,0)" fg:x="929" fg:w="155"/><text x="1.9090%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="1.8856%" y="149" width="0.0104%" height="15" fill="rgb(207,160,47)" fg:x="1084" fg:w="6"/><text x="2.1786%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="1.8856%" y="165" width="0.7706%" height="15" fill="rgb(228,23,34)" fg:x="1084" fg:w="443"/><text x="2.1786%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="2.6562%" y="165" width="0.1653%" height="15" fill="rgb(218,30,26)" fg:x="1527" fg:w="95"/><text x="2.9492%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="2.8215%" y="165" width="0.1044%" height="15" fill="rgb(220,122,19)" fg:x="1622" fg:w="60"/><text x="3.1144%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="2.9258%" y="165" width="0.1044%" height="15" fill="rgb(250,228,42)" fg:x="1682" fg:w="60"/><text x="3.2188%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="3.0302%" y="165" width="0.1044%" height="15" fill="rgb(240,193,28)" fg:x="1742" fg:w="60"/><text x="3.3232%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="3.1346%" y="165" width="0.1044%" height="15" fill="rgb(216,20,37)" fg:x="1802" fg:w="60"/><text x="3.4275%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="3.2389%" y="165" width="0.1426%" height="15" fill="rgb(206,188,39)" fg:x="1862" fg:w="82"/><text x="3.5319%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="3.3816%" y="165" width="0.1218%" height="15" fill="rgb(217,207,13)" fg:x="1944" fg:w="70"/><text x="3.6745%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="3.5033%" y="149" width="0.0104%" height="15" fill="rgb(231,73,38)" fg:x="2014" fg:w="6"/><text x="3.7963%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="3.5033%" y="165" width="0.7706%" height="15" fill="rgb(225,20,46)" fg:x="2014" fg:w="443"/><text x="3.7963%" y="175.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="4.2739%" y="165" width="0.0331%" height="15" fill="rgb(210,31,41)" fg:x="2457" fg:w="19"/><text x="4.5669%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="4.3070%" y="149" width="0.1583%" height="15" fill="rgb(221,200,47)" fg:x="2476" fg:w="91"/><text x="4.6000%" y="159.50"></text></g><g><title>memcpy (67 instructions, 0.12%)</title><rect x="4.4653%" y="117" width="0.1165%" height="15" fill="rgb(226,26,5)" fg:x="2567" fg:w="67"/><text x="4.7582%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.17%)</title><rect x="4.4653%" y="133" width="0.1670%" height="15" fill="rgb(249,33,26)" fg:x="2567" fg:w="96"/><text x="4.7582%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="4.6323%" y="85" width="0.0191%" height="15" fill="rgb(235,183,28)" fg:x="2663" fg:w="11"/><text x="4.9252%" y="95.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="4.6514%" y="69" width="0.0609%" height="15" fill="rgb(221,5,38)" fg:x="2674" fg:w="35"/><text x="4.9444%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.11%)</title><rect x="4.6514%" y="85" width="0.1113%" height="15" fill="rgb(247,18,42)" fg:x="2674" fg:w="64"/><text x="4.9444%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.25%)</title><rect x="4.6323%" y="101" width="0.2505%" height="15" fill="rgb(241,131,45)" fg:x="2663" fg:w="144"/><text x="4.9252%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.36%)</title><rect x="4.6323%" y="117" width="0.3636%" height="15" fill="rgb(249,31,29)" fg:x="2663" fg:w="209"/><text x="4.9252%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.38%)</title><rect x="4.6323%" y="133" width="0.3809%" height="15" fill="rgb(225,111,53)" fg:x="2663" fg:w="219"/><text x="4.9252%" y="143.50"></text></g><g><title>core::fmt::write (457 instructions, 0.79%)</title><rect x="4.4653%" y="149" width="0.7949%" height="15" fill="rgb(238,160,17)" fg:x="2567" fg:w="457"/><text x="4.7582%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.19%)</title><rect x="4.3070%" y="165" width="1.1933%" height="15" fill="rgb(214,148,48)" fg:x="2476" fg:w="686"/><text x="4.6000%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="5.5003%" y="165" width="0.1653%" height="15" fill="rgb(232,36,49)" fg:x="3162" fg:w="95"/><text x="5.7932%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.11%)</title><rect x="5.6655%" y="165" width="0.1096%" height="15" fill="rgb(209,103,24)" fg:x="3257" fg:w="63"/><text x="5.9585%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="5.7751%" y="165" width="0.1322%" height="15" fill="rgb(229,88,8)" fg:x="3320" fg:w="76"/><text x="6.0681%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="5.9073%" y="165" width="0.1218%" height="15" fill="rgb(213,181,19)" fg:x="3396" fg:w="70"/><text x="6.2003%" y="175.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="6.0291%" y="133" width="0.0104%" height="15" fill="rgb(254,191,54)" fg:x="3466" fg:w="6"/><text x="6.3221%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="6.0291%" y="149" width="0.7706%" height="15" fill="rgb(241,83,37)" fg:x="3466" fg:w="443"/><text x="6.3221%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="6.7997%" y="149" width="0.0331%" height="15" fill="rgb(233,36,39)" fg:x="3909" fg:w="19"/><text x="7.0926%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="6.8327%" y="133" width="0.1583%" height="15" fill="rgb(226,3,54)" fg:x="3928" fg:w="91"/><text x="7.1257%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.12%)</title><rect x="6.9910%" y="101" width="0.1165%" height="15" fill="rgb(245,192,40)" fg:x="4019" fg:w="67"/><text x="7.2840%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.17%)</title><rect x="6.9910%" y="117" width="0.1670%" height="15" fill="rgb(238,167,29)" fg:x="4019" fg:w="96"/><text x="7.2840%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="7.1580%" y="69" width="0.0191%" height="15" fill="rgb(232,182,51)" fg:x="4115" fg:w="11"/><text x="7.4510%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="7.1772%" y="53" width="0.0609%" height="15" fill="rgb(231,60,39)" fg:x="4126" fg:w="35"/><text x="7.4701%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.11%)</title><rect x="7.1772%" y="69" width="0.1113%" height="15" fill="rgb(208,69,12)" fg:x="4126" fg:w="64"/><text x="7.4701%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.25%)</title><rect x="7.1580%" y="85" width="0.2505%" height="15" fill="rgb(235,93,37)" fg:x="4115" fg:w="144"/><text x="7.4510%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.36%)</title><rect x="7.1580%" y="101" width="0.3636%" height="15" fill="rgb(213,116,39)" fg:x="4115" fg:w="209"/><text x="7.4510%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.38%)</title><rect x="7.1580%" y="117" width="0.3809%" height="15" fill="rgb(222,207,29)" fg:x="4115" fg:w="219"/><text x="7.4510%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.79%)</title><rect x="6.9910%" y="133" width="0.7949%" height="15" fill="rgb(206,96,30)" fg:x="4019" fg:w="457"/><text x="7.2840%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 1.19%)</title><rect x="6.8327%" y="149" width="1.1933%" height="15" fill="rgb(218,138,4)" fg:x="3928" fg:w="686"/><text x="7.1257%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="8.0260%" y="149" width="0.1653%" height="15" fill="rgb(250,191,14)" fg:x="4614" fg:w="95"/><text x="8.3190%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.11%)</title><rect x="8.1913%" y="149" width="0.1096%" height="15" fill="rgb(239,60,40)" fg:x="4709" fg:w="63"/><text x="8.4842%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="8.3009%" y="133" width="0.1426%" height="15" fill="rgb(206,27,48)" fg:x="4772" fg:w="82"/><text x="8.5938%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.17%)</title><rect x="8.4435%" y="133" width="0.1653%" height="15" fill="rgb(225,35,8)" fg:x="4854" fg:w="95"/><text x="8.7365%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="8.6088%" y="133" width="0.1322%" height="15" fill="rgb(250,213,24)" fg:x="4949" fg:w="76"/><text x="8.9017%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.58%)</title><rect x="8.3009%" y="149" width="0.5827%" height="15" fill="rgb(247,123,22)" fg:x="4772" fg:w="335"/><text x="8.5938%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="8.8836%" y="149" width="0.1583%" height="15" fill="rgb(231,138,38)" fg:x="5107" fg:w="91"/><text x="9.1766%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="9.0419%" y="133" width="0.1426%" height="15" fill="rgb(231,145,46)" fg:x="5198" fg:w="82"/><text x="9.3349%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.17%)</title><rect x="9.1845%" y="133" width="0.1653%" height="15" fill="rgb(251,118,11)" fg:x="5280" fg:w="95"/><text x="9.4775%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="9.3498%" y="133" width="0.1322%" height="15" fill="rgb(217,147,25)" fg:x="5375" fg:w="76"/><text x="9.6427%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.57%)</title><rect x="9.0419%" y="149" width="0.5740%" height="15" fill="rgb(247,81,37)" fg:x="5198" fg:w="330"/><text x="9.3349%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,358 instructions, 4.10%)</title><rect x="6.0291%" y="165" width="4.1017%" height="15" fill="rgb(209,12,38)" fg:x="3466" fg:w="2358"/><text x="6.3221%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="10.1308%" y="165" width="0.1322%" height="15" fill="rgb(227,1,9)" fg:x="5824" fg:w="76"/><text x="10.4238%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.2630%" y="165" width="0.0261%" height="15" fill="rgb(248,47,43)" fg:x="5900" fg:w="15"/><text x="10.5560%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.2891%" y="165" width="0.0261%" height="15" fill="rgb(221,10,30)" fg:x="5915" fg:w="15"/><text x="10.5821%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.3152%" y="165" width="0.0261%" height="15" fill="rgb(210,229,1)" fg:x="5930" fg:w="15"/><text x="10.6082%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 instructions, 0.01%)</title><rect x="10.3413%" y="165" width="0.0104%" height="15" fill="rgb(222,148,37)" fg:x="5945" fg:w="6"/><text x="10.6343%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="10.3517%" y="149" width="0.1583%" height="15" fill="rgb(234,67,33)" fg:x="5951" fg:w="91"/><text x="10.6447%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.33%)</title><rect x="10.3517%" y="165" width="0.3253%" height="15" fill="rgb(247,98,35)" fg:x="5951" fg:w="187"/><text x="10.6447%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="10.6770%" y="133" width="0.1583%" height="15" fill="rgb(247,138,52)" fg:x="6138" fg:w="91"/><text x="10.9700%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (134 instructions, 0.23%)</title><rect x="10.6770%" y="149" width="0.2331%" height="15" fill="rgb(213,79,30)" fg:x="6138" fg:w="134"/><text x="10.9700%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (219 instructions, 0.38%)</title><rect x="10.6770%" y="165" width="0.3809%" height="15" fill="rgb(246,177,23)" fg:x="6138" fg:w="219"/><text x="10.9700%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="11.0580%" y="149" width="0.1583%" height="15" fill="rgb(230,62,27)" fg:x="6357" fg:w="91"/><text x="11.3509%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (187 instructions, 0.33%)</title><rect x="11.0580%" y="165" width="0.3253%" height="15" fill="rgb(216,154,8)" fg:x="6357" fg:w="187"/><text x="11.3509%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="11.3832%" y="165" width="0.1583%" height="15" fill="rgb(244,35,45)" fg:x="6544" fg:w="91"/><text x="11.6762%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="11.5415%" y="165" width="0.1548%" height="15" fill="rgb(251,115,12)" fg:x="6635" fg:w="89"/><text x="11.8345%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="11.6964%" y="165" width="0.1583%" height="15" fill="rgb(240,54,50)" fg:x="6724" fg:w="91"/><text x="11.9893%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="11.8546%" y="165" width="0.1583%" height="15" fill="rgb(233,84,52)" fg:x="6815" fg:w="91"/><text x="12.1476%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="12.0199%" y="165" width="0.1548%" height="15" fill="rgb(207,117,47)" fg:x="6910" fg:w="89"/><text x="12.3129%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.68%)</title><rect x="12.1747%" y="165" width="0.6819%" height="15" fill="rgb(249,43,39)" fg:x="6999" fg:w="392"/><text x="12.4677%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.68%)</title><rect x="12.8566%" y="165" width="0.6819%" height="15" fill="rgb(209,38,44)" fg:x="7391" fg:w="392"/><text x="13.1496%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.88%)</title><rect x="13.5385%" y="165" width="0.8767%" height="15" fill="rgb(236,212,23)" fg:x="7783" fg:w="504"/><text x="13.8314%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (8,655 instructions, 15.06%)</title><rect x="1.6160%" y="181" width="15.0553%" height="15" fill="rgb(242,79,21)" fg:x="929" fg:w="8655"/><text x="1.9090%" y="191.50">candid::de::IDLDese..</text></g><g><title>memcpy (344 instructions, 0.60%)</title><rect x="16.6713%" y="181" width="0.5984%" height="15" fill="rgb(211,96,35)" fg:x="9584" fg:w="344"/><text x="16.9643%" y="191.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.04%)</title><rect x="17.2697%" y="181" width="0.0400%" height="15" fill="rgb(253,215,40)" fg:x="9928" fg:w="23"/><text x="17.5627%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="17.3097%" y="181" width="0.1583%" height="15" fill="rgb(211,81,21)" fg:x="9951" fg:w="91"/><text x="17.6027%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="17.4680%" y="165" width="0.1583%" height="15" fill="rgb(208,190,38)" fg:x="10042" fg:w="91"/><text x="17.7610%" y="175.50"></text></g><g><title>candid::types::internal::env_add (174 instructions, 0.30%)</title><rect x="17.4680%" y="181" width="0.3027%" height="15" fill="rgb(235,213,38)" fg:x="10042" fg:w="174"/><text x="17.7610%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="17.7707%" y="181" width="0.1583%" height="15" fill="rgb(237,122,38)" fg:x="10216" fg:w="91"/><text x="18.0636%" y="191.50"></text></g><g><title>memcmp (537 instructions, 0.93%)</title><rect x="17.9290%" y="165" width="0.9341%" height="15" fill="rgb(244,218,35)" fg:x="10307" fg:w="537"/><text x="18.2219%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="18.8631%" y="149" width="0.1548%" height="15" fill="rgb(240,68,47)" fg:x="10844" fg:w="89"/><text x="19.1560%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.23%)</title><rect x="18.8631%" y="165" width="0.2314%" height="15" fill="rgb(210,16,53)" fg:x="10844" fg:w="133"/><text x="19.1560%" y="175.50"></text></g><g><title>candid::types::internal::env_add (842 instructions, 1.46%)</title><rect x="17.9290%" y="181" width="1.4647%" height="15" fill="rgb(235,124,12)" fg:x="10307" fg:w="842"/><text x="18.2219%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="19.3936%" y="165" width="0.1583%" height="15" fill="rgb(224,169,11)" fg:x="11149" fg:w="91"/><text x="19.6866%" y="175.50"></text></g><g><title>candid::types::internal::env_id (202 instructions, 0.35%)</title><rect x="19.3936%" y="181" width="0.3514%" height="15" fill="rgb(250,166,2)" fg:x="11149" fg:w="202"/><text x="19.6866%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.09%)</title><rect x="19.7450%" y="181" width="0.0852%" height="15" fill="rgb(242,216,29)" fg:x="11351" fg:w="49"/><text x="20.0380%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="19.8302%" y="149" width="0.0470%" height="15" fill="rgb(230,116,27)" fg:x="11400" fg:w="27"/><text x="20.1232%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.25%)</title><rect x="19.8302%" y="165" width="0.2470%" height="15" fill="rgb(228,99,48)" fg:x="11400" fg:w="142"/><text x="20.1232%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="20.1538%" y="149" width="0.0470%" height="15" fill="rgb(253,11,6)" fg:x="11586" fg:w="27"/><text x="20.4467%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.25%)</title><rect x="20.1538%" y="165" width="0.2470%" height="15" fill="rgb(247,143,39)" fg:x="11586" fg:w="142"/><text x="20.4467%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.65%)</title><rect x="19.8302%" y="181" width="0.6471%" height="15" fill="rgb(236,97,10)" fg:x="11400" fg:w="372"/><text x="20.1232%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.06%)</title><rect x="20.4773%" y="165" width="0.0609%" height="15" fill="rgb(233,208,19)" fg:x="11772" fg:w="35"/><text x="20.7703%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.06%)</title><rect x="20.5382%" y="165" width="0.0609%" height="15" fill="rgb(216,164,2)" fg:x="11807" fg:w="35"/><text x="20.8312%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="20.5991%" y="165" width="0.0591%" height="15" fill="rgb(220,129,5)" fg:x="11842" fg:w="34"/><text x="20.8921%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="20.6582%" y="165" width="0.0591%" height="15" fill="rgb(242,17,10)" fg:x="11876" fg:w="34"/><text x="20.9512%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="20.7174%" y="165" width="0.1444%" height="15" fill="rgb(242,107,0)" fg:x="11910" fg:w="83"/><text x="21.0103%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="20.8617%" y="149" width="0.1426%" height="15" fill="rgb(251,28,31)" fg:x="11993" fg:w="82"/><text x="21.1547%" y="159.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.16%)</title><rect x="21.0044%" y="133" width="0.1600%" height="15" fill="rgb(233,223,10)" fg:x="12075" fg:w="92"/><text x="21.2974%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.30%)</title><rect x="21.0044%" y="149" width="0.3027%" height="15" fill="rgb(215,21,27)" fg:x="12075" fg:w="174"/><text x="21.2974%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="21.3071%" y="149" width="0.1218%" height="15" fill="rgb(232,23,21)" fg:x="12249" fg:w="70"/><text x="21.6000%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="21.4288%" y="133" width="0.0104%" height="15" fill="rgb(244,5,23)" fg:x="12319" fg:w="6"/><text x="21.7218%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="21.4288%" y="149" width="0.7706%" height="15" fill="rgb(226,81,46)" fg:x="12319" fg:w="443"/><text x="21.7218%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="22.1994%" y="133" width="0.1983%" height="15" fill="rgb(247,70,30)" fg:x="12762" fg:w="114"/><text x="22.4924%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.12%)</title><rect x="22.3977%" y="101" width="0.1165%" height="15" fill="rgb(212,68,19)" fg:x="12876" fg:w="67"/><text x="22.6907%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.17%)</title><rect x="22.3977%" y="117" width="0.1670%" height="15" fill="rgb(240,187,13)" fg:x="12876" fg:w="96"/><text x="22.6907%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="22.5647%" y="69" width="0.0191%" height="15" fill="rgb(223,113,26)" fg:x="12972" fg:w="11"/><text x="22.8577%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="22.5838%" y="53" width="0.0609%" height="15" fill="rgb(206,192,2)" fg:x="12983" fg:w="35"/><text x="22.8768%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.11%)</title><rect x="22.5838%" y="69" width="0.1113%" height="15" fill="rgb(241,108,4)" fg:x="12983" fg:w="64"/><text x="22.8768%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.25%)</title><rect x="22.5647%" y="85" width="0.2505%" height="15" fill="rgb(247,173,49)" fg:x="12972" fg:w="144"/><text x="22.8577%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.36%)</title><rect x="22.5647%" y="101" width="0.3636%" height="15" fill="rgb(224,114,35)" fg:x="12972" fg:w="209"/><text x="22.8577%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.38%)</title><rect x="22.5647%" y="117" width="0.3809%" height="15" fill="rgb(245,159,27)" fg:x="12972" fg:w="219"/><text x="22.8577%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.79%)</title><rect x="22.3977%" y="133" width="0.7949%" height="15" fill="rgb(245,172,44)" fg:x="12876" fg:w="457"/><text x="22.6907%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.23%)</title><rect x="22.1994%" y="149" width="1.2333%" height="15" fill="rgb(236,23,11)" fg:x="12762" fg:w="709"/><text x="22.4924%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="23.4327%" y="149" width="0.1653%" height="15" fill="rgb(205,117,38)" fg:x="13471" fg:w="95"/><text x="23.7257%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="23.5980%" y="149" width="0.1044%" height="15" fill="rgb(237,72,25)" fg:x="13566" fg:w="60"/><text x="23.8909%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="23.7023%" y="133" width="0.1044%" height="15" fill="rgb(244,70,9)" fg:x="13626" fg:w="60"/><text x="23.9953%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.22%)</title><rect x="23.7023%" y="149" width="0.2157%" height="15" fill="rgb(217,125,39)" fg:x="13626" fg:w="124"/><text x="23.9953%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="23.9180%" y="149" width="0.1444%" height="15" fill="rgb(235,36,10)" fg:x="13750" fg:w="83"/><text x="24.2110%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="24.0624%" y="133" width="0.1044%" height="15" fill="rgb(251,123,47)" fg:x="13833" fg:w="60"/><text x="24.3554%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="24.2781%" y="133" width="0.1044%" height="15" fill="rgb(221,13,13)" fg:x="13957" fg:w="60"/><text x="24.5711%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="24.4938%" y="133" width="0.1044%" height="15" fill="rgb(238,131,9)" fg:x="14081" fg:w="60"/><text x="24.7868%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="24.7095%" y="133" width="0.1044%" height="15" fill="rgb(211,50,8)" fg:x="14205" fg:w="60"/><text x="25.0025%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="24.9252%" y="133" width="0.1044%" height="15" fill="rgb(245,182,24)" fg:x="14329" fg:w="60"/><text x="25.2182%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="25.1409%" y="133" width="0.1044%" height="15" fill="rgb(242,14,37)" fg:x="14453" fg:w="60"/><text x="25.4339%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="25.3566%" y="133" width="0.1044%" height="15" fill="rgb(246,228,12)" fg:x="14577" fg:w="60"/><text x="25.6496%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="25.5723%" y="133" width="0.1044%" height="15" fill="rgb(213,55,15)" fg:x="14701" fg:w="60"/><text x="25.8653%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (992 instructions, 1.73%)</title><rect x="24.0624%" y="149" width="1.7256%" height="15" fill="rgb(209,9,3)" fg:x="13833" fg:w="992"/><text x="24.3554%" y="159.50"></text></g><g><title>__rust_realloc (111 instructions, 0.19%)</title><rect x="25.7880%" y="117" width="0.1931%" height="15" fill="rgb(230,59,30)" fg:x="14825" fg:w="111"/><text x="26.0810%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.27%)</title><rect x="25.7880%" y="133" width="0.2714%" height="15" fill="rgb(209,121,21)" fg:x="14825" fg:w="156"/><text x="26.0810%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.42%)</title><rect x="25.7880%" y="149" width="0.4227%" height="15" fill="rgb(220,109,13)" fg:x="14825" fg:w="243"/><text x="26.0810%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="26.2107%" y="133" width="0.1044%" height="15" fill="rgb(232,18,1)" fg:x="15068" fg:w="60"/><text x="26.5037%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.22%)</title><rect x="26.2107%" y="149" width="0.2157%" height="15" fill="rgb(215,41,42)" fg:x="15068" fg:w="124"/><text x="26.5037%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 instructions, 0.05%)</title><rect x="26.4264%" y="149" width="0.0504%" height="15" fill="rgb(224,123,36)" fg:x="15192" fg:w="29"/><text x="26.7194%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="26.4768%" y="149" width="0.1322%" height="15" fill="rgb(240,125,3)" fg:x="15221" fg:w="76"/><text x="26.7698%" y="159.50"></text></g><g><title>binread::BinRead::read (4,049 instructions, 7.04%)</title><rect x="20.8617%" y="165" width="7.0432%" height="15" fill="rgb(205,98,50)" fg:x="11993" fg:w="4049"/><text x="21.1547%" y="175.50">binread:..</text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="27.9050%" y="165" width="0.0574%" height="15" fill="rgb(205,185,37)" fg:x="16042" fg:w="33"/><text x="28.1979%" y="175.50"></text></g><g><title>__rust_realloc (55 instructions, 0.10%)</title><rect x="27.9624%" y="133" width="0.0957%" height="15" fill="rgb(238,207,15)" fg:x="16075" fg:w="55"/><text x="28.2553%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.17%)</title><rect x="27.9624%" y="149" width="0.1739%" height="15" fill="rgb(213,199,42)" fg:x="16075" fg:w="100"/><text x="28.2553%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.33%)</title><rect x="27.9624%" y="165" width="0.3253%" height="15" fill="rgb(235,201,11)" fg:x="16075" fg:w="187"/><text x="28.2553%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.31%)</title><rect x="28.2876%" y="165" width="0.3114%" height="15" fill="rgb(207,46,11)" fg:x="16262" fg:w="179"/><text x="28.5806%" y="175.50"></text></g><g><title>memcpy (179 instructions, 0.31%)</title><rect x="28.5990%" y="165" width="0.3114%" height="15" fill="rgb(241,35,35)" fg:x="16441" fg:w="179"/><text x="28.8920%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="28.9104%" y="165" width="0.1548%" height="15" fill="rgb(243,32,47)" fg:x="16620" fg:w="89"/><text x="29.2034%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="29.0652%" y="165" width="0.1044%" height="15" fill="rgb(247,202,23)" fg:x="16709" fg:w="60"/><text x="29.3582%" y="175.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,373 instructions, 9.35%)</title><rect x="20.4773%" y="181" width="9.3463%" height="15" fill="rgb(219,102,11)" fg:x="11772" fg:w="5373"/><text x="20.7703%" y="191.50">&lt;ic_princip..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="29.8236%" y="181" width="0.0226%" height="15" fill="rgb(243,110,44)" fg:x="17145" fg:w="13"/><text x="30.1166%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="29.8462%" y="181" width="0.0226%" height="15" fill="rgb(222,74,54)" fg:x="17158" fg:w="13"/><text x="30.1392%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="29.8688%" y="181" width="0.0226%" height="15" fill="rgb(216,99,12)" fg:x="17171" fg:w="13"/><text x="30.1618%" y="191.50"></text></g><g><title>candid::types::internal::find_type (99 instructions, 0.17%)</title><rect x="29.8915%" y="165" width="0.1722%" height="15" fill="rgb(226,22,26)" fg:x="17184" fg:w="99"/><text x="30.1844%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.27%)</title><rect x="30.0637%" y="165" width="0.2731%" height="15" fill="rgb(217,163,10)" fg:x="17283" fg:w="157"/><text x="30.3566%" y="175.50"></text></g><g><title>candid::types::internal::env_add (182 instructions, 0.32%)</title><rect x="30.3368%" y="165" width="0.3166%" height="15" fill="rgb(213,25,53)" fg:x="17440" fg:w="182"/><text x="30.6297%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="30.6534%" y="165" width="0.1444%" height="15" fill="rgb(252,105,26)" fg:x="17622" fg:w="83"/><text x="30.9463%" y="175.50"></text></g><g><title>memcmp (491 instructions, 0.85%)</title><rect x="30.7977%" y="149" width="0.8541%" height="15" fill="rgb(220,39,43)" fg:x="17705" fg:w="491"/><text x="31.0907%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="31.6518%" y="133" width="0.1548%" height="15" fill="rgb(229,68,48)" fg:x="18196" fg:w="89"/><text x="31.9448%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.23%)</title><rect x="31.6518%" y="149" width="0.2314%" height="15" fill="rgb(252,8,32)" fg:x="18196" fg:w="133"/><text x="31.9448%" y="159.50"></text></g><g><title>candid::types::internal::env_add (835 instructions, 1.45%)</title><rect x="30.7977%" y="165" width="1.4525%" height="15" fill="rgb(223,20,43)" fg:x="17705" fg:w="835"/><text x="31.0907%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.05%)</title><rect x="32.2502%" y="149" width="0.0539%" height="15" fill="rgb(229,81,49)" fg:x="18540" fg:w="31"/><text x="32.5432%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.05%)</title><rect x="32.3041%" y="149" width="0.0539%" height="15" fill="rgb(236,28,36)" fg:x="18571" fg:w="31"/><text x="32.5971%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="32.3581%" y="149" width="0.1600%" height="15" fill="rgb(249,185,26)" fg:x="18602" fg:w="92"/><text x="32.6510%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.38%)</title><rect x="32.5181%" y="149" width="0.3827%" height="15" fill="rgb(249,174,33)" fg:x="18694" fg:w="220"/><text x="32.8111%" y="159.50"></text></g><g><title>candid::types::internal::env_id (655 instructions, 1.14%)</title><rect x="32.2502%" y="165" width="1.1394%" height="15" fill="rgb(233,201,37)" fg:x="18540" fg:w="655"/><text x="32.5432%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (2,140 instructions, 3.72%)</title><rect x="29.8915%" y="181" width="3.7225%" height="15" fill="rgb(221,78,26)" fg:x="17184" fg:w="2140"/><text x="30.1844%" y="191.50">can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.09%)</title><rect x="33.6140%" y="181" width="0.0852%" height="15" fill="rgb(250,127,30)" fg:x="19324" fg:w="49"/><text x="33.9069%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="33.7218%" y="149" width="0.0470%" height="15" fill="rgb(230,49,44)" fg:x="19386" fg:w="27"/><text x="34.0148%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="33.7688%" y="149" width="0.0470%" height="15" fill="rgb(229,67,23)" fg:x="19413" fg:w="27"/><text x="34.0618%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.34%)</title><rect x="33.7218%" y="165" width="0.3427%" height="15" fill="rgb(249,83,47)" fg:x="19386" fg:w="197"/><text x="34.0148%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (254 instructions, 0.44%)</title><rect x="33.6992%" y="181" width="0.4418%" height="15" fill="rgb(215,43,3)" fg:x="19373" fg:w="254"/><text x="33.9922%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.06%)</title><rect x="34.1410%" y="165" width="0.0609%" height="15" fill="rgb(238,154,13)" fg:x="19627" fg:w="35"/><text x="34.4340%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="34.2019%" y="165" width="0.0591%" height="15" fill="rgb(219,56,2)" fg:x="19662" fg:w="34"/><text x="34.4949%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (34 instructions, 0.06%)</title><rect x="34.2611%" y="165" width="0.0591%" height="15" fill="rgb(233,0,4)" fg:x="19696" fg:w="34"/><text x="34.5540%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="34.3202%" y="149" width="0.1426%" height="15" fill="rgb(235,30,7)" fg:x="19730" fg:w="82"/><text x="34.6132%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="34.4628%" y="149" width="0.1218%" height="15" fill="rgb(250,79,13)" fg:x="19812" fg:w="70"/><text x="34.7558%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="34.5846%" y="149" width="0.1322%" height="15" fill="rgb(211,146,34)" fg:x="19882" fg:w="76"/><text x="34.8776%" y="159.50"></text></g><g><title>binread::BinRead::read (290 instructions, 0.50%)</title><rect x="34.3202%" y="165" width="0.5045%" height="15" fill="rgb(228,22,38)" fg:x="19730" fg:w="290"/><text x="34.6132%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="34.8247%" y="165" width="0.0574%" height="15" fill="rgb(235,168,5)" fg:x="20020" fg:w="33"/><text x="35.1176%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (63 instructions, 0.11%)</title><rect x="34.8821%" y="165" width="0.1096%" height="15" fill="rgb(221,155,16)" fg:x="20053" fg:w="63"/><text x="35.1750%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="34.9917%" y="165" width="0.1444%" height="15" fill="rgb(215,215,53)" fg:x="20116" fg:w="83"/><text x="35.2846%" y="175.50"></text></g><g><title>memcpy (115 instructions, 0.20%)</title><rect x="35.1360%" y="165" width="0.2000%" height="15" fill="rgb(223,4,10)" fg:x="20199" fg:w="115"/><text x="35.4290%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (162 instructions, 0.28%)</title><rect x="35.3361%" y="165" width="0.2818%" height="15" fill="rgb(234,103,6)" fg:x="20314" fg:w="162"/><text x="35.6290%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (1,053 instructions, 1.83%)</title><rect x="34.1410%" y="181" width="1.8317%" height="15" fill="rgb(227,97,0)" fg:x="19627" fg:w="1053"/><text x="34.4340%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="35.9727%" y="181" width="0.0226%" height="15" fill="rgb(234,150,53)" fg:x="20680" fg:w="13"/><text x="36.2657%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="35.9953%" y="181" width="0.0226%" height="15" fill="rgb(228,201,54)" fg:x="20693" fg:w="13"/><text x="36.2883%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.0180%" y="181" width="0.0226%" height="15" fill="rgb(222,22,37)" fg:x="20706" fg:w="13"/><text x="36.3109%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.07%)</title><rect x="36.0406%" y="181" width="0.0748%" height="15" fill="rgb(237,53,32)" fg:x="20719" fg:w="43"/><text x="36.3335%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="36.1154%" y="165" width="0.0122%" height="15" fill="rgb(233,25,53)" fg:x="20762" fg:w="7"/><text x="36.4083%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="36.1275%" y="149" width="0.0470%" height="15" fill="rgb(210,40,34)" fg:x="20769" fg:w="27"/><text x="36.4205%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.25%)</title><rect x="36.1275%" y="165" width="0.2470%" height="15" fill="rgb(241,220,44)" fg:x="20769" fg:w="142"/><text x="36.4205%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="36.3745%" y="133" width="0.0470%" height="15" fill="rgb(235,28,35)" fg:x="20911" fg:w="27"/><text x="36.6675%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="36.4215%" y="133" width="0.0470%" height="15" fill="rgb(210,56,17)" fg:x="20938" fg:w="27"/><text x="36.7145%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.34%)</title><rect x="36.3745%" y="149" width="0.3427%" height="15" fill="rgb(224,130,29)" fg:x="20911" fg:w="197"/><text x="36.6675%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (241 instructions, 0.42%)</title><rect x="36.3745%" y="165" width="0.4192%" height="15" fill="rgb(235,212,8)" fg:x="20911" fg:w="241"/><text x="36.6675%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="36.7938%" y="165" width="0.0226%" height="15" fill="rgb(223,33,50)" fg:x="21152" fg:w="13"/><text x="37.0867%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (463 instructions, 0.81%)</title><rect x="36.1154%" y="181" width="0.8054%" height="15" fill="rgb(219,149,13)" fg:x="20762" fg:w="463"/><text x="36.4083%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="36.9207%" y="165" width="0.0470%" height="15" fill="rgb(250,156,29)" fg:x="21225" fg:w="27"/><text x="37.2137%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.12%)</title><rect x="36.9677%" y="165" width="0.1183%" height="15" fill="rgb(216,193,19)" fg:x="21252" fg:w="68"/><text x="37.2607%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (189 instructions, 0.33%)</title><rect x="36.9207%" y="181" width="0.3288%" height="15" fill="rgb(216,135,14)" fg:x="21225" fg:w="189"/><text x="37.2137%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.2495%" y="165" width="0.0226%" height="15" fill="rgb(241,47,5)" fg:x="21414" fg:w="13"/><text x="37.5425%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="37.2721%" y="165" width="0.0226%" height="15" fill="rgb(233,42,35)" fg:x="21427" fg:w="13"/><text x="37.5651%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.12%)</title><rect x="37.2947%" y="165" width="0.1165%" height="15" fill="rgb(231,13,6)" fg:x="21440" fg:w="67"/><text x="37.5877%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (265 instructions, 0.46%)</title><rect x="37.2495%" y="181" width="0.4610%" height="15" fill="rgb(207,181,40)" fg:x="21414" fg:w="265"/><text x="37.5425%" y="191.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.04%)</title><rect x="37.7105%" y="181" width="0.0400%" height="15" fill="rgb(254,173,49)" fg:x="21679" fg:w="23"/><text x="38.0034%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="37.7505%" y="181" width="0.1444%" height="15" fill="rgb(221,1,38)" fg:x="21702" fg:w="83"/><text x="38.0435%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (218 instructions, 0.38%)</title><rect x="37.8949%" y="165" width="0.3792%" height="15" fill="rgb(206,124,46)" fg:x="21785" fg:w="218"/><text x="38.1878%" y="175.50"></text></g><g><title>candid::types::internal::env_add (301 instructions, 0.52%)</title><rect x="37.8949%" y="181" width="0.5236%" height="15" fill="rgb(249,21,11)" fg:x="21785" fg:w="301"/><text x="38.1878%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="38.4185%" y="181" width="0.1444%" height="15" fill="rgb(222,201,40)" fg:x="22086" fg:w="83"/><text x="38.7114%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="38.5628%" y="181" width="0.1444%" height="15" fill="rgb(235,61,29)" fg:x="22169" fg:w="83"/><text x="38.8558%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="38.7072%" y="181" width="0.1444%" height="15" fill="rgb(219,207,3)" fg:x="22252" fg:w="83"/><text x="39.0002%" y="191.50"></text></g><g><title>candid::types::internal::find_type (99 instructions, 0.17%)</title><rect x="38.8516%" y="165" width="0.1722%" height="15" fill="rgb(222,56,46)" fg:x="22335" fg:w="99"/><text x="39.1446%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.27%)</title><rect x="39.0238%" y="165" width="0.2731%" height="15" fill="rgb(239,76,54)" fg:x="22434" fg:w="157"/><text x="39.3168%" y="175.50"></text></g><g><title>candid::types::internal::env_add (182 instructions, 0.32%)</title><rect x="39.2969%" y="165" width="0.3166%" height="15" fill="rgb(231,124,27)" fg:x="22591" fg:w="182"/><text x="39.5899%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="39.6135%" y="165" width="0.1444%" height="15" fill="rgb(249,195,6)" fg:x="22773" fg:w="83"/><text x="39.9065%" y="175.50"></text></g><g><title>memcmp (491 instructions, 0.85%)</title><rect x="39.7579%" y="149" width="0.8541%" height="15" fill="rgb(237,174,47)" fg:x="22856" fg:w="491"/><text x="40.0508%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="40.6120%" y="133" width="0.1548%" height="15" fill="rgb(206,201,31)" fg:x="23347" fg:w="89"/><text x="40.9049%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.23%)</title><rect x="40.6120%" y="149" width="0.2314%" height="15" fill="rgb(231,57,52)" fg:x="23347" fg:w="133"/><text x="40.9049%" y="159.50"></text></g><g><title>candid::types::internal::env_add (835 instructions, 1.45%)</title><rect x="39.7579%" y="165" width="1.4525%" height="15" fill="rgb(248,177,22)" fg:x="22856" fg:w="835"/><text x="40.0508%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.09%)</title><rect x="41.2103%" y="149" width="0.0887%" height="15" fill="rgb(215,211,37)" fg:x="23691" fg:w="51"/><text x="41.5033%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="41.2991%" y="149" width="0.0226%" height="15" fill="rgb(241,128,51)" fg:x="23742" fg:w="13"/><text x="41.5920%" y="159.50"></text></g><g><title>candid::types::internal::env_id (198 instructions, 0.34%)</title><rect x="41.2103%" y="165" width="0.3444%" height="15" fill="rgb(227,165,31)" fg:x="23691" fg:w="198"/><text x="41.5033%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (1,683 instructions, 2.93%)</title><rect x="38.8516%" y="181" width="2.9276%" height="15" fill="rgb(228,167,24)" fg:x="22335" fg:w="1683"/><text x="39.1446%" y="191.50">ca..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="41.7792%" y="181" width="0.1444%" height="15" fill="rgb(228,143,12)" fg:x="24018" fg:w="83"/><text x="42.0721%" y="191.50"></text></g><g><title>memcmp (514 instructions, 0.89%)</title><rect x="41.9235%" y="165" width="0.8941%" height="15" fill="rgb(249,149,8)" fg:x="24101" fg:w="514"/><text x="42.2165%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="42.8176%" y="149" width="0.1548%" height="15" fill="rgb(243,35,44)" fg:x="24615" fg:w="89"/><text x="43.1106%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.23%)</title><rect x="42.8176%" y="165" width="0.2314%" height="15" fill="rgb(246,89,9)" fg:x="24615" fg:w="133"/><text x="43.1106%" y="175.50"></text></g><g><title>candid::types::internal::env_add (819 instructions, 1.42%)</title><rect x="41.9235%" y="181" width="1.4246%" height="15" fill="rgb(233,213,13)" fg:x="24101" fg:w="819"/><text x="42.2165%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.08%)</title><rect x="43.3482%" y="165" width="0.0765%" height="15" fill="rgb(233,141,41)" fg:x="24920" fg:w="44"/><text x="43.6411%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.05%)</title><rect x="43.4247%" y="165" width="0.0539%" height="15" fill="rgb(239,167,4)" fg:x="24964" fg:w="31"/><text x="43.7177%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.08%)</title><rect x="43.4786%" y="165" width="0.0765%" height="15" fill="rgb(209,217,16)" fg:x="24995" fg:w="44"/><text x="43.7716%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.05%)</title><rect x="43.5552%" y="165" width="0.0539%" height="15" fill="rgb(219,88,35)" fg:x="25039" fg:w="31"/><text x="43.8481%" y="175.50"></text></g><g><title>memmove (92 instructions, 0.16%)</title><rect x="43.6091%" y="165" width="0.1600%" height="15" fill="rgb(220,193,23)" fg:x="25070" fg:w="92"/><text x="43.9021%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.38%)</title><rect x="43.7691%" y="165" width="0.3827%" height="15" fill="rgb(230,90,52)" fg:x="25162" fg:w="220"/><text x="44.0621%" y="175.50"></text></g><g><title>candid::types::internal::env_id (809 instructions, 1.41%)</title><rect x="43.3482%" y="181" width="1.4073%" height="15" fill="rgb(252,106,19)" fg:x="24920" fg:w="809"/><text x="43.6411%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="44.7554%" y="149" width="0.1444%" height="15" fill="rgb(206,74,20)" fg:x="25729" fg:w="83"/><text x="45.0484%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.22%)</title><rect x="44.7554%" y="165" width="0.2192%" height="15" fill="rgb(230,138,44)" fg:x="25729" fg:w="126"/><text x="45.0484%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.37%)</title><rect x="44.7554%" y="181" width="0.3670%" height="15" fill="rgb(235,182,43)" fg:x="25729" fg:w="211"/><text x="45.0484%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.07%)</title><rect x="45.1225%" y="165" width="0.0661%" height="15" fill="rgb(242,16,51)" fg:x="25940" fg:w="38"/><text x="45.4154%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="45.1886%" y="165" width="0.1583%" height="15" fill="rgb(248,9,4)" fg:x="25978" fg:w="91"/><text x="45.4815%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.14%)</title><rect x="45.3469%" y="133" width="0.1409%" height="15" fill="rgb(210,31,22)" fg:x="26069" fg:w="81"/><text x="45.6398%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.22%)</title><rect x="45.3469%" y="149" width="0.2157%" height="15" fill="rgb(239,54,39)" fg:x="26069" fg:w="124"/><text x="45.6398%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.36%)</title><rect x="45.3469%" y="165" width="0.3636%" height="15" fill="rgb(230,99,41)" fg:x="26069" fg:w="209"/><text x="45.6398%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.05%)</title><rect x="45.7104%" y="149" width="0.0539%" height="15" fill="rgb(253,106,12)" fg:x="26278" fg:w="31"/><text x="46.0034%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.05%)</title><rect x="45.7643%" y="149" width="0.0539%" height="15" fill="rgb(213,46,41)" fg:x="26309" fg:w="31"/><text x="46.0573%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="45.8183%" y="149" width="0.0226%" height="15" fill="rgb(215,133,35)" fg:x="26340" fg:w="13"/><text x="46.1112%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (203 instructions, 0.35%)</title><rect x="45.7104%" y="165" width="0.3531%" height="15" fill="rgb(213,28,5)" fg:x="26278" fg:w="203"/><text x="46.0034%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="46.0635%" y="117" width="0.1444%" height="15" fill="rgb(215,77,49)" fg:x="26481" fg:w="83"/><text x="46.3565%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.22%)</title><rect x="46.0635%" y="133" width="0.2192%" height="15" fill="rgb(248,100,22)" fg:x="26481" fg:w="126"/><text x="46.3565%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.36%)</title><rect x="46.0635%" y="149" width="0.3618%" height="15" fill="rgb(208,67,9)" fg:x="26481" fg:w="208"/><text x="46.3565%" y="159.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.46%)</title><rect x="46.0635%" y="165" width="0.4644%" height="15" fill="rgb(219,133,21)" fg:x="26481" fg:w="267"/><text x="46.3565%" y="175.50"></text></g><g><title>leb128::write::unsigned (47 instructions, 0.08%)</title><rect x="46.5280%" y="165" width="0.0818%" height="15" fill="rgb(246,46,29)" fg:x="26748" fg:w="47"/><text x="46.8209%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.11%)</title><rect x="46.6097%" y="165" width="0.1148%" height="15" fill="rgb(246,185,52)" fg:x="26795" fg:w="66"/><text x="46.9027%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="46.7245%" y="165" width="0.0226%" height="15" fill="rgb(252,136,11)" fg:x="26861" fg:w="13"/><text x="47.0175%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (1,592 instructions, 2.77%)</title><rect x="45.1225%" y="181" width="2.7693%" height="15" fill="rgb(219,138,53)" fg:x="25940" fg:w="1592"/><text x="45.4154%" y="191.50">ca..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="47.8917%" y="181" width="0.0226%" height="15" fill="rgb(211,51,23)" fg:x="27532" fg:w="13"/><text x="48.1847%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="47.9143%" y="181" width="0.1983%" height="15" fill="rgb(247,221,28)" fg:x="27545" fg:w="114"/><text x="48.2073%" y="191.50"></text></g><g><title>memcpy (115 instructions, 0.20%)</title><rect x="48.1126%" y="181" width="0.2000%" height="15" fill="rgb(251,222,45)" fg:x="27659" fg:w="115"/><text x="48.4056%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="48.3127%" y="149" width="0.1444%" height="15" fill="rgb(217,162,53)" fg:x="27774" fg:w="83"/><text x="48.6057%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.22%)</title><rect x="48.3127%" y="165" width="0.2192%" height="15" fill="rgb(229,93,14)" fg:x="27774" fg:w="126"/><text x="48.6057%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.36%)</title><rect x="48.3127%" y="181" width="0.3618%" height="15" fill="rgb(209,67,49)" fg:x="27774" fg:w="208"/><text x="48.6057%" y="191.50"></text></g><g><title>memcpy (115 instructions, 0.20%)</title><rect x="48.6745%" y="181" width="0.2000%" height="15" fill="rgb(213,87,29)" fg:x="27982" fg:w="115"/><text x="48.9675%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="49.0294%" y="165" width="0.0470%" height="15" fill="rgb(205,151,52)" fg:x="28186" fg:w="27"/><text x="49.3223%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.40%)</title><rect x="48.8745%" y="181" width="0.4018%" height="15" fill="rgb(253,215,39)" fg:x="28097" fg:w="231"/><text x="49.1675%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.14%)</title><rect x="49.2764%" y="149" width="0.1409%" height="15" fill="rgb(221,220,41)" fg:x="28328" fg:w="81"/><text x="49.5693%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (124 instructions, 0.22%)</title><rect x="49.2764%" y="165" width="0.2157%" height="15" fill="rgb(218,133,21)" fg:x="28328" fg:w="124"/><text x="49.5693%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.36%)</title><rect x="49.2764%" y="181" width="0.3583%" height="15" fill="rgb(221,193,43)" fg:x="28328" fg:w="206"/><text x="49.5693%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="49.6347%" y="133" width="0.1983%" height="15" fill="rgb(240,128,52)" fg:x="28534" fg:w="114"/><text x="49.9277%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.27%)</title><rect x="49.6347%" y="149" width="0.2731%" height="15" fill="rgb(253,114,12)" fg:x="28534" fg:w="157"/><text x="49.9277%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.42%)</title><rect x="49.6347%" y="165" width="0.4157%" height="15" fill="rgb(215,223,47)" fg:x="28534" fg:w="239"/><text x="49.9277%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.14%)</title><rect x="50.0504%" y="165" width="0.1409%" height="15" fill="rgb(248,225,23)" fg:x="28773" fg:w="81"/><text x="50.3434%" y="175.50"></text></g><g><title>memcpy (147 instructions, 0.26%)</title><rect x="50.1913%" y="165" width="0.2557%" height="15" fill="rgb(250,108,0)" fg:x="28854" fg:w="147"/><text x="50.4843%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="50.4470%" y="117" width="0.1583%" height="15" fill="rgb(228,208,7)" fg:x="29001" fg:w="91"/><text x="50.7400%" y="127.50"></text></g><g><title>memcpy (211 instructions, 0.37%)</title><rect x="50.6053%" y="117" width="0.3670%" height="15" fill="rgb(244,45,10)" fg:x="29092" fg:w="211"/><text x="50.8983%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="50.9724%" y="117" width="0.1548%" height="15" fill="rgb(207,125,25)" fg:x="29303" fg:w="89"/><text x="51.2653%" y="127.50"></text></g><g><title>__rust_realloc (498 instructions, 0.87%)</title><rect x="50.4470%" y="133" width="0.8663%" height="15" fill="rgb(210,195,18)" fg:x="29001" fg:w="498"/><text x="50.7400%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (543 instructions, 0.94%)</title><rect x="50.4470%" y="149" width="0.9445%" height="15" fill="rgb(249,80,12)" fg:x="29001" fg:w="543"/><text x="50.7400%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (630 instructions, 1.10%)</title><rect x="50.4470%" y="165" width="1.0959%" height="15" fill="rgb(221,65,9)" fg:x="29001" fg:w="630"/><text x="50.7400%" y="175.50"></text></g><g><title>memcpy (147 instructions, 0.26%)</title><rect x="51.5429%" y="165" width="0.2557%" height="15" fill="rgb(235,49,36)" fg:x="29631" fg:w="147"/><text x="51.8359%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="51.7986%" y="149" width="0.0470%" height="15" fill="rgb(225,32,20)" fg:x="29778" fg:w="27"/><text x="52.0916%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.25%)</title><rect x="51.7986%" y="165" width="0.2505%" height="15" fill="rgb(215,141,46)" fg:x="29778" fg:w="144"/><text x="52.0916%" y="175.50"></text></g><g><title>memcmp (123 instructions, 0.21%)</title><rect x="52.0491%" y="117" width="0.2140%" height="15" fill="rgb(250,160,47)" fg:x="29922" fg:w="123"/><text x="52.3421%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::Ord&gt;::cmp (43 instructions, 0.07%)</title><rect x="52.2631%" y="117" width="0.0748%" height="15" fill="rgb(216,222,40)" fg:x="30045" fg:w="43"/><text x="52.5560%" y="127.50"></text></g><g><title>&lt;A as core::slice::cmp::SliceOrd&gt;::compare (309 instructions, 0.54%)</title><rect x="52.0491%" y="133" width="0.5375%" height="15" fill="rgb(234,217,39)" fg:x="29922" fg:w="309"/><text x="52.3421%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (386 instructions, 0.67%)</title><rect x="52.0491%" y="149" width="0.6714%" height="15" fill="rgb(207,178,40)" fg:x="29922" fg:w="386"/><text x="52.3421%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="52.7206%" y="117" width="0.1983%" height="15" fill="rgb(221,136,13)" fg:x="30308" fg:w="114"/><text x="53.0135%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.27%)</title><rect x="52.7206%" y="133" width="0.2731%" height="15" fill="rgb(249,199,10)" fg:x="30308" fg:w="157"/><text x="53.0135%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.42%)</title><rect x="52.7206%" y="149" width="0.4157%" height="15" fill="rgb(249,222,13)" fg:x="30308" fg:w="239"/><text x="53.0135%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (792 instructions, 1.38%)</title><rect x="52.0491%" y="165" width="1.3777%" height="15" fill="rgb(244,185,38)" fg:x="29922" fg:w="792"/><text x="52.3421%" y="175.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="53.4268%" y="165" width="0.0609%" height="15" fill="rgb(236,202,9)" fg:x="30714" fg:w="35"/><text x="53.7198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="53.4877%" y="165" width="0.1044%" height="15" fill="rgb(250,229,37)" fg:x="30749" fg:w="60"/><text x="53.7807%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,666 instructions, 4.64%)</title><rect x="49.6347%" y="181" width="4.6375%" height="15" fill="rgb(206,174,23)" fg:x="28534" fg:w="2666"/><text x="49.9277%" y="191.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.14%)</title><rect x="54.2722%" y="133" width="0.1409%" height="15" fill="rgb(211,33,43)" fg:x="31200" fg:w="81"/><text x="54.5652%" y="143.50"></text></g><g><title>memcpy (211 instructions, 0.37%)</title><rect x="54.4131%" y="133" width="0.3670%" height="15" fill="rgb(245,58,50)" fg:x="31281" fg:w="211"/><text x="54.7061%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="54.7801%" y="133" width="0.1548%" height="15" fill="rgb(244,68,36)" fg:x="31492" fg:w="89"/><text x="55.0731%" y="143.50"></text></g><g><title>__rust_realloc (488 instructions, 0.85%)</title><rect x="54.2722%" y="149" width="0.8489%" height="15" fill="rgb(232,229,15)" fg:x="31200" fg:w="488"/><text x="54.5652%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (533 instructions, 0.93%)</title><rect x="54.2722%" y="165" width="0.9272%" height="15" fill="rgb(254,30,23)" fg:x="31200" fg:w="533"/><text x="54.5652%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (620 instructions, 1.08%)</title><rect x="54.2722%" y="181" width="1.0785%" height="15" fill="rgb(235,160,14)" fg:x="31200" fg:w="620"/><text x="54.5652%" y="191.50"></text></g><g><title>memcpy (195 instructions, 0.34%)</title><rect x="55.3507%" y="181" width="0.3392%" height="15" fill="rgb(212,155,44)" fg:x="31820" fg:w="195"/><text x="55.6437%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.16%)</title><rect x="55.6899%" y="133" width="0.1583%" height="15" fill="rgb(226,2,50)" fg:x="32015" fg:w="91"/><text x="55.9829%" y="143.50"></text></g><g><title>memcpy (168 instructions, 0.29%)</title><rect x="55.8482%" y="133" width="0.2922%" height="15" fill="rgb(234,177,6)" fg:x="32106" fg:w="168"/><text x="56.1411%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="56.1404%" y="133" width="0.1548%" height="15" fill="rgb(217,24,9)" fg:x="32274" fg:w="89"/><text x="56.4334%" y="143.50"></text></g><g><title>__rust_realloc (455 instructions, 0.79%)</title><rect x="55.6899%" y="149" width="0.7915%" height="15" fill="rgb(220,13,46)" fg:x="32015" fg:w="455"/><text x="55.9829%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (500 instructions, 0.87%)</title><rect x="55.6899%" y="165" width="0.8697%" height="15" fill="rgb(239,221,27)" fg:x="32015" fg:w="500"/><text x="55.9829%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (587 instructions, 1.02%)</title><rect x="55.6899%" y="181" width="1.0211%" height="15" fill="rgb(222,198,25)" fg:x="32015" fg:w="587"/><text x="55.9829%" y="191.50"></text></g><g><title>memcpy (131 instructions, 0.23%)</title><rect x="56.7110%" y="181" width="0.2279%" height="15" fill="rgb(211,99,13)" fg:x="32602" fg:w="131"/><text x="57.0039%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.14%)</title><rect x="56.9388%" y="181" width="0.1444%" height="15" fill="rgb(232,111,31)" fg:x="32733" fg:w="83"/><text x="57.2318%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="57.0832%" y="181" width="0.1548%" height="15" fill="rgb(245,82,37)" fg:x="32816" fg:w="89"/><text x="57.3762%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="57.2380%" y="165" width="0.0226%" height="15" fill="rgb(227,149,46)" fg:x="32905" fg:w="13"/><text x="57.5310%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="57.2606%" y="165" width="0.1548%" height="15" fill="rgb(218,36,50)" fg:x="32918" fg:w="89"/><text x="57.5536%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (186 instructions, 0.32%)</title><rect x="57.2380%" y="181" width="0.3235%" height="15" fill="rgb(226,80,48)" fg:x="32905" fg:w="186"/><text x="57.5310%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="57.5616%" y="181" width="0.0122%" height="15" fill="rgb(238,224,15)" fg:x="33091" fg:w="7"/><text x="57.8545%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="57.5738%" y="181" width="0.0226%" height="15" fill="rgb(241,136,10)" fg:x="33098" fg:w="13"/><text x="57.8667%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="57.5964%" y="165" width="0.0470%" height="15" fill="rgb(208,32,45)" fg:x="33111" fg:w="27"/><text x="57.8893%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="57.8434%" y="165" width="0.0470%" height="15" fill="rgb(207,135,9)" fg:x="33253" fg:w="27"/><text x="58.1363%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="58.0939%" y="165" width="0.0470%" height="15" fill="rgb(206,86,44)" fg:x="33397" fg:w="27"/><text x="58.3868%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="58.1408%" y="165" width="0.0400%" height="15" fill="rgb(245,177,15)" fg:x="33424" fg:w="23"/><text x="58.4338%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (479 instructions, 0.83%)</title><rect x="57.5964%" y="181" width="0.8332%" height="15" fill="rgb(206,64,50)" fg:x="33111" fg:w="479"/><text x="57.8893%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="58.4296%" y="181" width="0.1444%" height="15" fill="rgb(234,36,40)" fg:x="33590" fg:w="83"/><text x="58.7226%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="58.5740%" y="181" width="0.1444%" height="15" fill="rgb(213,64,8)" fg:x="33673" fg:w="83"/><text x="58.8669%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (21 instructions, 0.04%)</title><rect x="58.7183%" y="181" width="0.0365%" height="15" fill="rgb(210,75,36)" fg:x="33756" fg:w="21"/><text x="59.0113%" y="191.50"></text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (43,623 instructions, 75.88%)</title><rect x="1.4577%" y="197" width="75.8819%" height="15" fill="rgb(229,88,21)" fg:x="838" fg:w="43623"/><text x="1.7507%" y="207.50">subscriber::__canister_method_setup_subscribe::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="77.3396%" y="197" width="0.0244%" height="15" fill="rgb(252,204,47)" fg:x="44461" fg:w="14"/><text x="77.6326%" y="207.50"></text></g><g><title>canister_update setup_subscribe (44,595 instructions, 77.57%)</title><rect x="0.0000%" y="213" width="77.5727%" height="15" fill="rgb(208,77,27)" fg:x="0" fg:w="44595"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="77.5727%" y="197" width="0.1983%" height="15" fill="rgb(221,76,26)" fg:x="44595" fg:w="114"/><text x="77.8657%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="77.7710%" y="149" width="0.1426%" height="15" fill="rgb(225,139,18)" fg:x="44709" fg:w="82"/><text x="78.0640%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="77.9137%" y="133" width="0.0104%" height="15" fill="rgb(230,137,11)" fg:x="44791" fg:w="6"/><text x="78.2066%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="77.9137%" y="149" width="0.7706%" height="15" fill="rgb(212,28,1)" fg:x="44791" fg:w="443"/><text x="78.2066%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="78.6842%" y="149" width="0.1653%" height="15" fill="rgb(248,164,17)" fg:x="45234" fg:w="95"/><text x="78.9772%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="78.8495%" y="149" width="0.1044%" height="15" fill="rgb(222,171,42)" fg:x="45329" fg:w="60"/><text x="79.1425%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="78.9539%" y="149" width="0.1044%" height="15" fill="rgb(243,84,45)" fg:x="45389" fg:w="60"/><text x="79.2468%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="79.0582%" y="149" width="0.1044%" height="15" fill="rgb(252,49,23)" fg:x="45449" fg:w="60"/><text x="79.3512%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.10%)</title><rect x="79.1626%" y="149" width="0.1044%" height="15" fill="rgb(215,19,7)" fg:x="45509" fg:w="60"/><text x="79.4556%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.14%)</title><rect x="79.2670%" y="149" width="0.1426%" height="15" fill="rgb(238,81,41)" fg:x="45569" fg:w="82"/><text x="79.5599%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="79.4096%" y="149" width="0.1218%" height="15" fill="rgb(210,199,37)" fg:x="45651" fg:w="70"/><text x="79.7026%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="79.5314%" y="133" width="0.0104%" height="15" fill="rgb(244,192,49)" fg:x="45721" fg:w="6"/><text x="79.8243%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="79.5314%" y="149" width="0.7706%" height="15" fill="rgb(226,211,11)" fg:x="45721" fg:w="443"/><text x="79.8243%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="80.3020%" y="149" width="0.0331%" height="15" fill="rgb(236,162,54)" fg:x="46164" fg:w="19"/><text x="80.5949%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="80.3350%" y="133" width="0.1444%" height="15" fill="rgb(220,229,9)" fg:x="46183" fg:w="83"/><text x="80.6280%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.12%)</title><rect x="80.4794%" y="101" width="0.1165%" height="15" fill="rgb(250,87,22)" fg:x="46266" fg:w="67"/><text x="80.7724%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.17%)</title><rect x="80.4794%" y="117" width="0.1670%" height="15" fill="rgb(239,43,17)" fg:x="46266" fg:w="96"/><text x="80.7724%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="80.6464%" y="69" width="0.0191%" height="15" fill="rgb(231,177,25)" fg:x="46362" fg:w="11"/><text x="80.9394%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="80.6655%" y="53" width="0.0609%" height="15" fill="rgb(219,179,1)" fg:x="46373" fg:w="35"/><text x="80.9585%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.11%)</title><rect x="80.6655%" y="69" width="0.1113%" height="15" fill="rgb(238,219,53)" fg:x="46373" fg:w="64"/><text x="80.9585%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.25%)</title><rect x="80.6464%" y="85" width="0.2505%" height="15" fill="rgb(232,167,36)" fg:x="46362" fg:w="144"/><text x="80.9394%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.36%)</title><rect x="80.6464%" y="101" width="0.3636%" height="15" fill="rgb(244,19,51)" fg:x="46362" fg:w="209"/><text x="80.9394%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.38%)</title><rect x="80.6464%" y="117" width="0.3809%" height="15" fill="rgb(224,6,22)" fg:x="46362" fg:w="219"/><text x="80.9394%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.79%)</title><rect x="80.4794%" y="133" width="0.7949%" height="15" fill="rgb(224,145,5)" fg:x="46266" fg:w="457"/><text x="80.7724%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.18%)</title><rect x="80.3350%" y="149" width="1.1794%" height="15" fill="rgb(234,130,49)" fg:x="46183" fg:w="678"/><text x="80.6280%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="81.5144%" y="149" width="0.1653%" height="15" fill="rgb(254,6,2)" fg:x="46861" fg:w="95"/><text x="81.8074%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="81.6797%" y="149" width="0.1044%" height="15" fill="rgb(208,96,46)" fg:x="46956" fg:w="60"/><text x="81.9726%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="81.7840%" y="149" width="0.1322%" height="15" fill="rgb(239,3,39)" fg:x="47016" fg:w="76"/><text x="82.0770%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.12%)</title><rect x="81.9162%" y="149" width="0.1218%" height="15" fill="rgb(233,210,1)" fg:x="47092" fg:w="70"/><text x="82.2092%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="82.0380%" y="117" width="0.0104%" height="15" fill="rgb(244,137,37)" fg:x="47162" fg:w="6"/><text x="82.3310%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.77%)</title><rect x="82.0380%" y="133" width="0.7706%" height="15" fill="rgb(240,136,2)" fg:x="47162" fg:w="443"/><text x="82.3310%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.03%)</title><rect x="82.8086%" y="133" width="0.0331%" height="15" fill="rgb(239,18,37)" fg:x="47605" fg:w="19"/><text x="83.1016%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="82.8416%" y="117" width="0.1444%" height="15" fill="rgb(218,185,22)" fg:x="47624" fg:w="83"/><text x="83.1346%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.12%)</title><rect x="82.9860%" y="85" width="0.1165%" height="15" fill="rgb(225,218,4)" fg:x="47707" fg:w="67"/><text x="83.2790%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.17%)</title><rect x="82.9860%" y="101" width="0.1670%" height="15" fill="rgb(230,182,32)" fg:x="47707" fg:w="96"/><text x="83.2790%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="83.1530%" y="53" width="0.0191%" height="15" fill="rgb(242,56,43)" fg:x="47803" fg:w="11"/><text x="83.4460%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.06%)</title><rect x="83.1721%" y="37" width="0.0609%" height="15" fill="rgb(233,99,24)" fg:x="47814" fg:w="35"/><text x="83.4651%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.11%)</title><rect x="83.1721%" y="53" width="0.1113%" height="15" fill="rgb(234,209,42)" fg:x="47814" fg:w="64"/><text x="83.4651%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.25%)</title><rect x="83.1530%" y="69" width="0.2505%" height="15" fill="rgb(227,7,12)" fg:x="47803" fg:w="144"/><text x="83.4460%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.36%)</title><rect x="83.1530%" y="85" width="0.3636%" height="15" fill="rgb(245,203,43)" fg:x="47803" fg:w="209"/><text x="83.4460%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.38%)</title><rect x="83.1530%" y="101" width="0.3809%" height="15" fill="rgb(238,205,33)" fg:x="47803" fg:w="219"/><text x="83.4460%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.79%)</title><rect x="82.9860%" y="117" width="0.7949%" height="15" fill="rgb(231,56,7)" fg:x="47707" fg:w="457"/><text x="83.2790%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.18%)</title><rect x="82.8416%" y="133" width="1.1794%" height="15" fill="rgb(244,186,29)" fg:x="47624" fg:w="678"/><text x="83.1346%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.17%)</title><rect x="84.0210%" y="133" width="0.1653%" height="15" fill="rgb(234,111,31)" fg:x="48302" fg:w="95"/><text x="84.3140%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="84.1863%" y="133" width="0.1044%" height="15" fill="rgb(241,149,10)" fg:x="48397" fg:w="60"/><text x="84.4792%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,484 instructions, 2.58%)</title><rect x="82.0380%" y="149" width="2.5814%" height="15" fill="rgb(249,206,44)" fg:x="47162" fg:w="1484"/><text x="82.3310%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.13%)</title><rect x="84.6194%" y="149" width="0.1322%" height="15" fill="rgb(251,153,30)" fg:x="48646" fg:w="76"/><text x="84.9124%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="84.7516%" y="149" width="0.0261%" height="15" fill="rgb(239,152,38)" fg:x="48722" fg:w="15"/><text x="85.0446%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="84.7777%" y="149" width="0.0261%" height="15" fill="rgb(249,139,47)" fg:x="48737" fg:w="15"/><text x="85.0707%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="84.8038%" y="149" width="0.0261%" height="15" fill="rgb(244,64,35)" fg:x="48752" fg:w="15"/><text x="85.0968%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 instructions, 0.01%)</title><rect x="84.8299%" y="149" width="0.0104%" height="15" fill="rgb(216,46,15)" fg:x="48767" fg:w="6"/><text x="85.1228%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.14%)</title><rect x="84.8403%" y="149" width="0.1409%" height="15" fill="rgb(250,74,19)" fg:x="48773" fg:w="81"/><text x="85.1333%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.20%)</title><rect x="84.9812%" y="149" width="0.1983%" height="15" fill="rgb(249,42,33)" fg:x="48854" fg:w="114"/><text x="85.2742%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.68%)</title><rect x="85.1865%" y="149" width="0.6819%" height="15" fill="rgb(242,149,17)" fg:x="48972" fg:w="392"/><text x="85.4794%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.68%)</title><rect x="85.8684%" y="149" width="0.6819%" height="15" fill="rgb(244,29,21)" fg:x="49364" fg:w="392"/><text x="86.1613%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.88%)</title><rect x="86.5502%" y="149" width="0.8767%" height="15" fill="rgb(220,130,37)" fg:x="49756" fg:w="504"/><text x="86.8432%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,597 instructions, 11.48%)</title><rect x="77.7710%" y="165" width="11.4754%" height="15" fill="rgb(211,67,2)" fg:x="44709" fg:w="6597"/><text x="78.0640%" y="175.50">candid::de::ID..</text></g><g><title>memcpy (344 instructions, 0.60%)</title><rect x="89.2465%" y="165" width="0.5984%" height="15" fill="rgb(235,68,52)" fg:x="51306" fg:w="344"/><text x="89.5394%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.07%)</title><rect x="89.8448%" y="165" width="0.0748%" height="15" fill="rgb(246,142,3)" fg:x="51650" fg:w="43"/><text x="90.1378%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="89.9196%" y="149" width="0.0122%" height="15" fill="rgb(241,25,7)" fg:x="51693" fg:w="7"/><text x="90.2126%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="89.9318%" y="133" width="0.1548%" height="15" fill="rgb(242,119,39)" fg:x="51700" fg:w="89"/><text x="90.2248%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="90.1632%" y="133" width="0.1044%" height="15" fill="rgb(241,98,45)" fg:x="51833" fg:w="60"/><text x="90.4561%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (237 instructions, 0.41%)</title><rect x="89.9318%" y="149" width="0.4123%" height="15" fill="rgb(254,28,30)" fg:x="51700" fg:w="237"/><text x="90.2248%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (295 instructions, 0.51%)</title><rect x="89.9196%" y="165" width="0.5132%" height="15" fill="rgb(241,142,54)" fg:x="51693" fg:w="295"/><text x="90.2126%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.4328%" y="149" width="0.0470%" height="15" fill="rgb(222,85,15)" fg:x="51988" fg:w="27"/><text x="90.7258%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.25%)</title><rect x="90.4328%" y="165" width="0.2470%" height="15" fill="rgb(210,85,47)" fg:x="51988" fg:w="142"/><text x="90.7258%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.6798%" y="133" width="0.0226%" height="15" fill="rgb(224,206,25)" fg:x="52130" fg:w="13"/><text x="90.9728%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.7024%" y="133" width="0.0226%" height="15" fill="rgb(243,201,19)" fg:x="52143" fg:w="13"/><text x="90.9954%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="90.7250%" y="133" width="0.1548%" height="15" fill="rgb(236,59,4)" fg:x="52156" fg:w="89"/><text x="91.0180%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (287 instructions, 0.50%)</title><rect x="90.6798%" y="149" width="0.4992%" height="15" fill="rgb(254,179,45)" fg:x="52130" fg:w="287"/><text x="90.9728%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.90%)</title><rect x="91.1790%" y="133" width="0.9011%" height="15" fill="rgb(226,14,10)" fg:x="52417" fg:w="518"/><text x="91.4720%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.14%)</title><rect x="92.0801%" y="85" width="0.1444%" height="15" fill="rgb(244,27,41)" fg:x="52935" fg:w="83"/><text x="92.3731%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.22%)</title><rect x="92.0801%" y="101" width="0.2192%" height="15" fill="rgb(235,35,32)" fg:x="52935" fg:w="126"/><text x="92.3731%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.36%)</title><rect x="92.0801%" y="117" width="0.3618%" height="15" fill="rgb(218,68,31)" fg:x="52935" fg:w="208"/><text x="92.3731%" y="127.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="92.4419%" y="117" width="0.0261%" height="15" fill="rgb(207,120,37)" fg:x="53143" fg:w="15"/><text x="92.7349%" y="127.50"></text></g><g><title>memcpy (15 instructions, 0.03%)</title><rect x="92.4680%" y="117" width="0.0261%" height="15" fill="rgb(227,98,0)" fg:x="53158" fg:w="15"/><text x="92.7610%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (424 instructions, 0.74%)</title><rect x="92.0801%" y="133" width="0.7375%" height="15" fill="rgb(207,7,3)" fg:x="52935" fg:w="424"/><text x="92.3731%" y="143.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.90%)</title><rect x="92.8176%" y="133" width="0.8976%" height="15" fill="rgb(206,98,19)" fg:x="53359" fg:w="516"/><text x="93.1106%" y="143.50"></text></g><g><title>std::io::Write::write_all (7 instructions, 0.01%)</title><rect x="93.7152%" y="133" width="0.0122%" height="15" fill="rgb(217,5,26)" fg:x="53875" fg:w="7"/><text x="94.0082%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,562 instructions, 2.72%)</title><rect x="91.1790%" y="149" width="2.7171%" height="15" fill="rgb(235,190,38)" fg:x="52417" fg:w="1562"/><text x="91.4720%" y="159.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="93.8961%" y="149" width="0.0122%" height="15" fill="rgb(247,86,24)" fg:x="53979" fg:w="7"/><text x="94.1891%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="93.9083%" y="149" width="0.0122%" height="15" fill="rgb(205,101,16)" fg:x="53986" fg:w="7"/><text x="94.2013%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.10%)</title><rect x="93.9205%" y="149" width="0.1044%" height="15" fill="rgb(246,168,33)" fg:x="53993" fg:w="60"/><text x="94.2134%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (2,527 instructions, 4.40%)</title><rect x="90.6798%" y="165" width="4.3957%" height="15" fill="rgb(231,114,1)" fg:x="52130" fg:w="2527"/><text x="90.9728%" y="175.50">ic_c..</text></g><g><title>subscriber::__canister_method_setup_subscribe::{{closure}} (10,289 instructions, 17.90%)</title><rect x="77.7710%" y="181" width="17.8976%" height="15" fill="rgb(207,184,53)" fg:x="44709" fg:w="10289"/><text x="78.0640%" y="191.50">subscriber::__canister_..</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.02%)</title><rect x="95.6687%" y="181" width="0.0244%" height="15" fill="rgb(224,95,51)" fg:x="54998" fg:w="14"/><text x="95.9616%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::__canister_method_setup_subscribe::{{closure}}&gt; (8 instructions, 0.01%)</title><rect x="95.6930%" y="181" width="0.0139%" height="15" fill="rgb(212,188,45)" fg:x="55012" fg:w="8"/><text x="95.9860%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.04%)</title><rect x="95.8513%" y="165" width="0.0400%" height="15" fill="rgb(223,154,38)" fg:x="55103" fg:w="23"/><text x="96.1443%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="95.8913%" y="165" width="0.0470%" height="15" fill="rgb(251,22,52)" fg:x="55126" fg:w="27"/><text x="96.1843%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.12%)</title><rect x="95.9383%" y="165" width="0.1183%" height="15" fill="rgb(229,209,22)" fg:x="55153" fg:w="68"/><text x="96.2313%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (323 instructions, 0.56%)</title><rect x="95.7069%" y="181" width="0.5619%" height="15" fill="rgb(234,138,34)" fg:x="55020" fg:w="323"/><text x="95.9999%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (10,792 instructions, 18.77%)</title><rect x="77.7710%" y="197" width="18.7726%" height="15" fill="rgb(212,95,11)" fg:x="44709" fg:w="10792"/><text x="78.0640%" y="207.50">ic_cdk::futures::waker::w..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.15%)</title><rect x="96.5436%" y="181" width="0.1548%" height="15" fill="rgb(240,179,47)" fg:x="55501" fg:w="89"/><text x="96.8366%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.11%)</title><rect x="96.6984%" y="181" width="0.1096%" height="15" fill="rgb(240,163,11)" fg:x="55590" fg:w="63"/><text x="96.9914%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (215 instructions, 0.37%)</title><rect x="96.5436%" y="197" width="0.3740%" height="15" fill="rgb(236,37,12)" fg:x="55501" fg:w="215"/><text x="96.8366%" y="207.50"></text></g><g><title>all (57,488 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(232,164,16)" fg:x="0" fg:w="57488"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (12,893 instructions, 22.43%)</title><rect x="77.5727%" y="213" width="22.4273%" height="15" fill="rgb(244,205,15)" fg:x="44595" fg:w="12893"/><text x="77.8657%" y="223.50">ic_cdk::api::call::callback</text></g></svg></svg>