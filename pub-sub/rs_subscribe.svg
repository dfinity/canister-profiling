<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="278" onload="init(evt)" viewBox="0 0 1024 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="278" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Subscribe Apples</text><text id="details" fill="rgb(0,0,0)" x="10" y="261.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="261.00"> </text><svg id="frames" x="10" width="1004" total_samples="51355"><g><title>ic_cdk::setup (48 instructions, 0.09%)</title><rect x="0.0000%" y="197" width="0.0935%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="48"/><text x="0.2930%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (369 instructions, 0.72%)</title><rect x="0.0935%" y="197" width="0.7185%" height="15" fill="rgb(217,0,24)" fg:x="48" fg:w="369"/><text x="0.3864%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.8120%" y="197" width="0.1597%" height="15" fill="rgb(221,193,54)" fg:x="417" fg:w="82"/><text x="1.1050%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="0.9717%" y="181" width="0.1597%" height="15" fill="rgb(248,212,6)" fg:x="499" fg:w="82"/><text x="1.2646%" y="191.50"></text></g><g><title>std::sys::wasm::once::Once::call (50 instructions, 0.10%)</title><rect x="1.1313%" y="149" width="0.0974%" height="15" fill="rgb(208,68,35)" fg:x="581" fg:w="50"/><text x="1.4243%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (131 instructions, 0.26%)</title><rect x="1.1313%" y="165" width="0.2551%" height="15" fill="rgb(232,128,0)" fg:x="581" fg:w="131"/><text x="1.4243%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="1.3864%" y="165" width="0.7906%" height="15" fill="rgb(207,160,47)" fg:x="712" fg:w="406"/><text x="1.6794%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="2.1770%" y="165" width="0.1597%" height="15" fill="rgb(228,23,34)" fg:x="1118" fg:w="82"/><text x="2.4700%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.3367%" y="165" width="0.1052%" height="15" fill="rgb(218,30,26)" fg:x="1200" fg:w="54"/><text x="2.6296%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.4418%" y="165" width="0.1052%" height="15" fill="rgb(220,122,19)" fg:x="1254" fg:w="54"/><text x="2.7348%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.5470%" y="165" width="0.1052%" height="15" fill="rgb(250,228,42)" fg:x="1308" fg:w="54"/><text x="2.8399%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="2.6521%" y="165" width="0.1052%" height="15" fill="rgb(240,193,28)" fg:x="1362" fg:w="54"/><text x="2.9451%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="2.7573%" y="165" width="0.1344%" height="15" fill="rgb(216,20,37)" fg:x="1416" fg:w="69"/><text x="3.0502%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="2.8916%" y="165" width="0.1266%" height="15" fill="rgb(206,188,39)" fg:x="1485" fg:w="65"/><text x="3.1846%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="3.0182%" y="165" width="0.7906%" height="15" fill="rgb(217,207,13)" fg:x="1550" fg:w="406"/><text x="3.3112%" y="175.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="3.8088%" y="165" width="0.0312%" height="15" fill="rgb(231,73,38)" fg:x="1956" fg:w="16"/><text x="4.1018%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="3.8399%" y="149" width="0.1597%" height="15" fill="rgb(225,20,46)" fg:x="1972" fg:w="82"/><text x="4.1329%" y="159.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="3.9996%" y="117" width="0.1168%" height="15" fill="rgb(210,31,41)" fg:x="2054" fg:w="60"/><text x="4.2926%" y="127.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="3.9996%" y="133" width="0.1655%" height="15" fill="rgb(221,200,47)" fg:x="2054" fg:w="85"/><text x="4.2926%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1651%" y="85" width="0.0175%" height="15" fill="rgb(226,26,5)" fg:x="2139" fg:w="9"/><text x="4.4581%" y="95.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="4.1827%" y="69" width="0.0584%" height="15" fill="rgb(249,33,26)" fg:x="2148" fg:w="30"/><text x="4.4756%" y="79.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="4.1827%" y="85" width="0.1071%" height="15" fill="rgb(235,183,28)" fg:x="2148" fg:w="55"/><text x="4.4756%" y="95.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="4.1651%" y="101" width="0.2298%" height="15" fill="rgb(221,5,38)" fg:x="2139" fg:w="118"/><text x="4.4581%" y="111.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="4.1651%" y="117" width="0.3330%" height="15" fill="rgb(247,18,42)" fg:x="2139" fg:w="171"/><text x="4.4581%" y="127.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="4.1651%" y="133" width="0.3427%" height="15" fill="rgb(241,131,45)" fg:x="2139" fg:w="176"/><text x="4.4581%" y="143.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="3.9996%" y="149" width="0.7244%" height="15" fill="rgb(249,31,29)" fg:x="2054" fg:w="372"/><text x="4.2926%" y="159.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.16%)</title><rect x="3.8399%" y="165" width="1.1586%" height="15" fill="rgb(225,111,53)" fg:x="1972" fg:w="595"/><text x="4.1329%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="4.9985%" y="165" width="0.1597%" height="15" fill="rgb(238,160,17)" fg:x="2567" fg:w="82"/><text x="5.2915%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="5.1582%" y="165" width="0.1090%" height="15" fill="rgb(214,148,48)" fg:x="2649" fg:w="56"/><text x="5.4512%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="5.2673%" y="165" width="0.1227%" height="15" fill="rgb(232,36,49)" fg:x="2705" fg:w="63"/><text x="5.5602%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="5.3899%" y="165" width="0.1266%" height="15" fill="rgb(209,103,24)" fg:x="2768" fg:w="65"/><text x="5.6829%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="5.5165%" y="149" width="0.7906%" height="15" fill="rgb(229,88,8)" fg:x="2833" fg:w="406"/><text x="5.8095%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="6.3071%" y="149" width="0.0312%" height="15" fill="rgb(213,181,19)" fg:x="3239" fg:w="16"/><text x="6.6000%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="6.3382%" y="133" width="0.1597%" height="15" fill="rgb(254,191,54)" fg:x="3255" fg:w="82"/><text x="6.6312%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="6.4979%" y="101" width="0.1168%" height="15" fill="rgb(241,83,37)" fg:x="3337" fg:w="60"/><text x="6.7909%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="6.4979%" y="117" width="0.1655%" height="15" fill="rgb(233,36,39)" fg:x="3337" fg:w="85"/><text x="6.7909%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.6634%" y="69" width="0.0175%" height="15" fill="rgb(226,3,54)" fg:x="3422" fg:w="9"/><text x="6.9564%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="6.6809%" y="53" width="0.0584%" height="15" fill="rgb(245,192,40)" fg:x="3431" fg:w="30"/><text x="6.9739%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="6.6809%" y="69" width="0.1071%" height="15" fill="rgb(238,167,29)" fg:x="3431" fg:w="55"/><text x="6.9739%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="6.6634%" y="85" width="0.2298%" height="15" fill="rgb(232,182,51)" fg:x="3422" fg:w="118"/><text x="6.9564%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="6.6634%" y="101" width="0.3330%" height="15" fill="rgb(231,60,39)" fg:x="3422" fg:w="171"/><text x="6.9564%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="6.6634%" y="117" width="0.3427%" height="15" fill="rgb(208,69,12)" fg:x="3422" fg:w="176"/><text x="6.9564%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="6.4979%" y="133" width="0.7244%" height="15" fill="rgb(235,93,37)" fg:x="3337" fg:w="372"/><text x="6.7909%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 1.16%)</title><rect x="6.3382%" y="149" width="1.1586%" height="15" fill="rgb(213,116,39)" fg:x="3255" fg:w="595"/><text x="6.6312%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="7.4968%" y="149" width="0.1597%" height="15" fill="rgb(222,207,29)" fg:x="3850" fg:w="82"/><text x="7.7898%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="7.6565%" y="149" width="0.1090%" height="15" fill="rgb(206,96,30)" fg:x="3932" fg:w="56"/><text x="7.9495%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="7.7656%" y="133" width="0.1344%" height="15" fill="rgb(218,138,4)" fg:x="3988" fg:w="69"/><text x="8.0585%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="7.8999%" y="133" width="0.1772%" height="15" fill="rgb(250,191,14)" fg:x="4057" fg:w="91"/><text x="8.1929%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="8.0771%" y="133" width="0.1227%" height="15" fill="rgb(239,60,40)" fg:x="4148" fg:w="63"/><text x="8.3701%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.56%)</title><rect x="7.7656%" y="149" width="0.5569%" height="15" fill="rgb(206,27,48)" fg:x="3988" fg:w="286"/><text x="8.0585%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="8.3225%" y="149" width="0.1597%" height="15" fill="rgb(225,35,8)" fg:x="4274" fg:w="82"/><text x="8.6154%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="8.4821%" y="133" width="0.1344%" height="15" fill="rgb(250,213,24)" fg:x="4356" fg:w="69"/><text x="8.7751%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.18%)</title><rect x="8.6165%" y="133" width="0.1772%" height="15" fill="rgb(247,123,22)" fg:x="4425" fg:w="91"/><text x="8.9095%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="8.7937%" y="133" width="0.1227%" height="15" fill="rgb(231,138,38)" fg:x="4516" fg:w="63"/><text x="9.0867%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.55%)</title><rect x="8.4821%" y="149" width="0.5491%" height="15" fill="rgb(231,145,46)" fg:x="4356" fg:w="282"/><text x="8.7751%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,053 instructions, 4.00%)</title><rect x="5.5165%" y="165" width="3.9977%" height="15" fill="rgb(251,118,11)" fg:x="2833" fg:w="2053"/><text x="5.8095%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="9.5142%" y="165" width="0.1227%" height="15" fill="rgb(217,147,25)" fg:x="4886" fg:w="63"/><text x="9.8071%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6368%" y="165" width="0.0253%" height="15" fill="rgb(247,81,37)" fg:x="4949" fg:w="13"/><text x="9.9298%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="9.6622%" y="165" width="0.0253%" height="15" fill="rgb(209,12,38)" fg:x="4962" fg:w="13"/><text x="9.9551%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="9.6875%" y="165" width="0.0136%" height="15" fill="rgb(227,1,9)" fg:x="4975" fg:w="7"/><text x="9.9804%" y="175.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="9.7011%" y="165" width="0.0292%" height="15" fill="rgb(248,47,43)" fg:x="4982" fg:w="15"/><text x="9.9941%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="9.7303%" y="149" width="0.1597%" height="15" fill="rgb(221,10,30)" fg:x="4997" fg:w="82"/><text x="10.0233%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="9.7303%" y="165" width="0.3213%" height="15" fill="rgb(210,229,1)" fg:x="4997" fg:w="165"/><text x="10.0233%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.0516%" y="133" width="0.1597%" height="15" fill="rgb(222,148,37)" fg:x="5162" fg:w="82"/><text x="10.3446%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="10.0516%" y="149" width="0.2259%" height="15" fill="rgb(234,67,33)" fg:x="5162" fg:w="116"/><text x="10.3446%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.36%)</title><rect x="10.0516%" y="165" width="0.3583%" height="15" fill="rgb(247,98,35)" fg:x="5162" fg:w="184"/><text x="10.3446%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.4099%" y="149" width="0.1597%" height="15" fill="rgb(247,138,52)" fg:x="5346" fg:w="82"/><text x="10.7029%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (165 instructions, 0.32%)</title><rect x="10.4099%" y="165" width="0.3213%" height="15" fill="rgb(213,79,30)" fg:x="5346" fg:w="165"/><text x="10.7029%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="10.7312%" y="165" width="0.1597%" height="15" fill="rgb(246,177,23)" fg:x="5511" fg:w="82"/><text x="11.0242%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="10.8909%" y="165" width="0.1577%" height="15" fill="rgb(230,62,27)" fg:x="5593" fg:w="81"/><text x="11.1838%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.0486%" y="165" width="0.1597%" height="15" fill="rgb(216,154,8)" fg:x="5674" fg:w="82"/><text x="11.3416%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="11.2083%" y="165" width="0.1597%" height="15" fill="rgb(244,35,45)" fg:x="5756" fg:w="82"/><text x="11.5012%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="11.3718%" y="165" width="0.1577%" height="15" fill="rgb(251,115,12)" fg:x="5840" fg:w="81"/><text x="11.6648%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.74%)</title><rect x="11.5295%" y="165" width="0.7399%" height="15" fill="rgb(240,54,50)" fg:x="5921" fg:w="380"/><text x="11.8225%" y="175.50"></text></g><g><title>memcpy (380 instructions, 0.74%)</title><rect x="12.2695%" y="165" width="0.7399%" height="15" fill="rgb(233,84,52)" fg:x="6301" fg:w="380"/><text x="12.5625%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,122 instructions, 13.87%)</title><rect x="1.1313%" y="181" width="13.8682%" height="15" fill="rgb(207,117,47)" fg:x="581" fg:w="7122"/><text x="1.4243%" y="191.50">candid::de::IDLDes..</text></g><g><title>memcpy (335 instructions, 0.65%)</title><rect x="14.9995%" y="181" width="0.6523%" height="15" fill="rgb(249,43,39)" fg:x="7703" fg:w="335"/><text x="15.2925%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (50 instructions, 0.10%)</title><rect x="15.6518%" y="165" width="0.0974%" height="15" fill="rgb(209,38,44)" fg:x="8038" fg:w="50"/><text x="15.9448%" y="175.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (84 instructions, 0.16%)</title><rect x="15.6518%" y="181" width="0.1636%" height="15" fill="rgb(236,212,23)" fg:x="8038" fg:w="84"/><text x="15.9448%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="15.8154%" y="181" width="0.1597%" height="15" fill="rgb(242,79,21)" fg:x="8122" fg:w="82"/><text x="16.1084%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="15.9848%" y="149" width="0.1032%" height="15" fill="rgb(211,96,35)" fg:x="8209" fg:w="53"/><text x="16.2778%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.75%)</title><rect x="16.0880%" y="149" width="0.7477%" height="15" fill="rgb(253,215,40)" fg:x="8262" fg:w="384"/><text x="16.3810%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.32%)</title><rect x="16.8358%" y="149" width="0.3155%" height="15" fill="rgb(211,81,21)" fg:x="8646" fg:w="162"/><text x="17.1287%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.63%)</title><rect x="15.9848%" y="165" width="1.6279%" height="15" fill="rgb(208,190,38)" fg:x="8209" fg:w="836"/><text x="16.2778%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="17.6127%" y="165" width="0.1597%" height="15" fill="rgb(235,213,38)" fg:x="9045" fg:w="82"/><text x="17.9057%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="17.7724%" y="165" width="0.2648%" height="15" fill="rgb(237,122,38)" fg:x="9127" fg:w="136"/><text x="18.0653%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,415 instructions, 2.76%)</title><rect x="15.9751%" y="181" width="2.7553%" height="15" fill="rgb(244,218,35)" fg:x="8204" fg:w="1415"/><text x="16.2680%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="18.7304%" y="181" width="0.1597%" height="15" fill="rgb(240,68,47)" fg:x="9619" fg:w="82"/><text x="19.0234%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="18.8998%" y="149" width="0.1032%" height="15" fill="rgb(210,16,53)" fg:x="9706" fg:w="53"/><text x="19.1928%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.75%)</title><rect x="19.0030%" y="149" width="0.7477%" height="15" fill="rgb(235,124,12)" fg:x="9759" fg:w="384"/><text x="19.2960%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.32%)</title><rect x="19.7508%" y="149" width="0.3155%" height="15" fill="rgb(224,169,11)" fg:x="10143" fg:w="162"/><text x="20.0437%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.63%)</title><rect x="18.8998%" y="165" width="1.6279%" height="15" fill="rgb(250,166,2)" fg:x="9706" fg:w="836"/><text x="19.1928%" y="175.50"></text></g><g><title>memcmp (740 instructions, 1.44%)</title><rect x="20.5277%" y="165" width="1.4410%" height="15" fill="rgb(242,216,29)" fg:x="10542" fg:w="740"/><text x="20.8207%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="21.9686%" y="149" width="0.1577%" height="15" fill="rgb(230,116,27)" fg:x="11282" fg:w="81"/><text x="22.2616%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="21.9686%" y="165" width="0.2103%" height="15" fill="rgb(228,99,48)" fg:x="11282" fg:w="108"/><text x="22.2616%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 3.62%)</title><rect x="18.8901%" y="181" width="3.6180%" height="15" fill="rgb(253,11,6)" fg:x="9701" fg:w="1858"/><text x="19.1830%" y="191.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="22.5080%" y="133" width="0.1032%" height="15" fill="rgb(247,143,39)" fg:x="11559" fg:w="53"/><text x="22.8010%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="22.5080%" y="149" width="0.1519%" height="15" fill="rgb(236,97,10)" fg:x="11559" fg:w="78"/><text x="22.8010%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="22.5080%" y="165" width="0.5705%" height="15" fill="rgb(233,208,19)" fg:x="11559" fg:w="293"/><text x="22.8010%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="23.0786%" y="165" width="0.1597%" height="15" fill="rgb(216,164,2)" fg:x="11852" fg:w="82"/><text x="23.3715%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="23.2382%" y="165" width="0.2648%" height="15" fill="rgb(220,129,5)" fg:x="11934" fg:w="136"/><text x="23.5312%" y="175.50"></text></g><g><title>candid::types::internal::env_id (916 instructions, 1.78%)</title><rect x="22.5080%" y="181" width="1.7837%" height="15" fill="rgb(242,17,10)" fg:x="11559" fg:w="916"/><text x="22.8010%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.09%)</title><rect x="24.2917%" y="181" width="0.0915%" height="15" fill="rgb(242,107,0)" fg:x="12475" fg:w="47"/><text x="24.5847%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.3832%" y="165" width="0.2395%" height="15" fill="rgb(251,28,31)" fg:x="12522" fg:w="123"/><text x="24.6762%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="24.6753%" y="165" width="0.2395%" height="15" fill="rgb(233,223,10)" fg:x="12672" fg:w="123"/><text x="24.9683%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.58%)</title><rect x="24.3832%" y="181" width="0.5842%" height="15" fill="rgb(215,21,27)" fg:x="12522" fg:w="300"/><text x="24.6762%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="24.9674%" y="165" width="0.0545%" height="15" fill="rgb(232,23,21)" fg:x="12822" fg:w="28"/><text x="25.2604%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="25.0219%" y="165" width="0.0545%" height="15" fill="rgb(244,5,23)" fg:x="12850" fg:w="28"/><text x="25.3149%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.0764%" y="165" width="0.0292%" height="15" fill="rgb(226,81,46)" fg:x="12878" fg:w="15"/><text x="25.3694%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="25.1056%" y="165" width="0.0292%" height="15" fill="rgb(247,70,30)" fg:x="12893" fg:w="15"/><text x="25.3986%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="25.1348%" y="165" width="0.1519%" height="15" fill="rgb(212,68,19)" fg:x="12908" fg:w="78"/><text x="25.4278%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="25.2867%" y="149" width="0.1344%" height="15" fill="rgb(240,187,13)" fg:x="12986" fg:w="69"/><text x="25.5797%" y="159.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.15%)</title><rect x="25.4211%" y="133" width="0.1538%" height="15" fill="rgb(223,113,26)" fg:x="13055" fg:w="79"/><text x="25.7141%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.29%)</title><rect x="25.4211%" y="149" width="0.2901%" height="15" fill="rgb(206,192,2)" fg:x="13055" fg:w="149"/><text x="25.7141%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="25.7112%" y="149" width="0.1266%" height="15" fill="rgb(241,108,4)" fg:x="13204" fg:w="65"/><text x="26.0042%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="25.8378%" y="149" width="0.7906%" height="15" fill="rgb(247,173,49)" fg:x="13269" fg:w="406"/><text x="26.1308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="26.6284%" y="133" width="0.2298%" height="15" fill="rgb(224,114,35)" fg:x="13675" fg:w="118"/><text x="26.9213%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="26.8581%" y="101" width="0.1168%" height="15" fill="rgb(245,159,27)" fg:x="13793" fg:w="60"/><text x="27.1511%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="26.8581%" y="117" width="0.1655%" height="15" fill="rgb(245,172,44)" fg:x="13793" fg:w="85"/><text x="27.1511%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="27.0237%" y="69" width="0.0175%" height="15" fill="rgb(236,23,11)" fg:x="13878" fg:w="9"/><text x="27.3166%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="27.0412%" y="53" width="0.0584%" height="15" fill="rgb(205,117,38)" fg:x="13887" fg:w="30"/><text x="27.3342%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="27.0412%" y="69" width="0.1071%" height="15" fill="rgb(237,72,25)" fg:x="13887" fg:w="55"/><text x="27.3342%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="27.0237%" y="85" width="0.2298%" height="15" fill="rgb(244,70,9)" fg:x="13878" fg:w="118"/><text x="27.3166%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="27.0237%" y="101" width="0.3330%" height="15" fill="rgb(217,125,39)" fg:x="13878" fg:w="171"/><text x="27.3166%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="27.0237%" y="117" width="0.3427%" height="15" fill="rgb(235,36,10)" fg:x="13878" fg:w="176"/><text x="27.3166%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="26.8581%" y="133" width="0.7244%" height="15" fill="rgb(251,123,47)" fg:x="13793" fg:w="372"/><text x="27.1511%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.23%)</title><rect x="26.6284%" y="149" width="1.2287%" height="15" fill="rgb(221,13,13)" fg:x="13675" fg:w="631"/><text x="26.9213%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="27.8571%" y="149" width="0.1597%" height="15" fill="rgb(238,131,9)" fg:x="14306" fg:w="82"/><text x="28.1500%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="28.0167%" y="149" width="0.1071%" height="15" fill="rgb(211,50,8)" fg:x="14388" fg:w="55"/><text x="28.3097%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="28.1238%" y="133" width="0.1052%" height="15" fill="rgb(245,182,24)" fg:x="14443" fg:w="54"/><text x="28.4168%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 instructions, 0.20%)</title><rect x="28.1238%" y="149" width="0.2045%" height="15" fill="rgb(242,14,37)" fg:x="14443" fg:w="105"/><text x="28.4168%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="28.3283%" y="149" width="0.1480%" height="15" fill="rgb(246,228,12)" fg:x="14548" fg:w="76"/><text x="28.6213%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="28.4763%" y="133" width="0.1052%" height="15" fill="rgb(213,55,15)" fg:x="14624" fg:w="54"/><text x="28.7693%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="28.6808%" y="133" width="0.1052%" height="15" fill="rgb(209,9,3)" fg:x="14729" fg:w="54"/><text x="28.9737%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="28.8852%" y="133" width="0.1052%" height="15" fill="rgb(230,59,30)" fg:x="14834" fg:w="54"/><text x="29.1782%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="29.0897%" y="133" width="0.1052%" height="15" fill="rgb(209,121,21)" fg:x="14939" fg:w="54"/><text x="29.3826%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="29.2941%" y="133" width="0.1052%" height="15" fill="rgb(220,109,13)" fg:x="15044" fg:w="54"/><text x="29.5871%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="29.4986%" y="133" width="0.1052%" height="15" fill="rgb(232,18,1)" fg:x="15149" fg:w="54"/><text x="29.7916%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="29.7030%" y="133" width="0.1052%" height="15" fill="rgb(215,41,42)" fg:x="15254" fg:w="54"/><text x="29.9960%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="29.9075%" y="133" width="0.1052%" height="15" fill="rgb(224,123,36)" fg:x="15359" fg:w="54"/><text x="30.2005%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (840 instructions, 1.64%)</title><rect x="28.4763%" y="149" width="1.6357%" height="15" fill="rgb(240,125,3)" fg:x="14624" fg:w="840"/><text x="28.7693%" y="159.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="30.1120%" y="117" width="0.1967%" height="15" fill="rgb(205,98,50)" fg:x="15464" fg:w="101"/><text x="30.4049%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="30.1120%" y="133" width="0.2648%" height="15" fill="rgb(205,185,37)" fg:x="15464" fg:w="136"/><text x="30.4049%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.41%)</title><rect x="30.1120%" y="149" width="0.4070%" height="15" fill="rgb(238,207,15)" fg:x="15464" fg:w="209"/><text x="30.4049%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="30.5189%" y="133" width="0.1052%" height="15" fill="rgb(213,199,42)" fg:x="15673" fg:w="54"/><text x="30.8119%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (105 instructions, 0.20%)</title><rect x="30.5189%" y="149" width="0.2045%" height="15" fill="rgb(235,201,11)" fg:x="15673" fg:w="105"/><text x="30.8119%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 instructions, 0.05%)</title><rect x="30.7234%" y="149" width="0.0487%" height="15" fill="rgb(207,46,11)" fg:x="15778" fg:w="25"/><text x="31.0164%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="30.7721%" y="149" width="0.1227%" height="15" fill="rgb(241,35,35)" fg:x="15803" fg:w="63"/><text x="31.0650%" y="159.50"></text></g><g><title>binread::BinRead::read (3,489 instructions, 6.79%)</title><rect x="25.2867%" y="165" width="6.7939%" height="15" fill="rgb(243,32,47)" fg:x="12986" fg:w="3489"/><text x="25.5797%" y="175.50">binread..</text></g><g><title>__rust_realloc (45 instructions, 0.09%)</title><rect x="32.0806%" y="133" width="0.0876%" height="15" fill="rgb(247,202,23)" fg:x="16475" fg:w="45"/><text x="32.3736%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.16%)</title><rect x="32.0806%" y="149" width="0.1558%" height="15" fill="rgb(219,102,11)" fg:x="16475" fg:w="80"/><text x="32.3736%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.30%)</title><rect x="32.0806%" y="165" width="0.2979%" height="15" fill="rgb(243,110,44)" fg:x="16475" fg:w="153"/><text x="32.3736%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.3785%" y="165" width="0.3213%" height="15" fill="rgb(222,74,54)" fg:x="16628" fg:w="165"/><text x="32.6715%" y="175.50"></text></g><g><title>memcpy (165 instructions, 0.32%)</title><rect x="32.6998%" y="165" width="0.3213%" height="15" fill="rgb(216,99,12)" fg:x="16793" fg:w="165"/><text x="32.9928%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="33.0211%" y="165" width="0.1577%" height="15" fill="rgb(226,22,26)" fg:x="16958" fg:w="81"/><text x="33.3141%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="33.1789%" y="165" width="0.1071%" height="15" fill="rgb(217,163,10)" fg:x="17039" fg:w="55"/><text x="33.4718%" y="175.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (4,548 instructions, 8.86%)</title><rect x="24.9674%" y="181" width="8.8560%" height="15" fill="rgb(213,25,53)" fg:x="12822" fg:w="4548"/><text x="25.2604%" y="191.50">&lt;candid::t..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8234%" y="181" width="0.0214%" height="15" fill="rgb(252,105,26)" fg:x="17370" fg:w="11"/><text x="34.1164%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8448%" y="181" width="0.0214%" height="15" fill="rgb(220,39,43)" fg:x="17381" fg:w="11"/><text x="34.1378%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="33.8662%" y="181" width="0.0214%" height="15" fill="rgb(229,68,48)" fg:x="17392" fg:w="11"/><text x="34.1592%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="33.8974%" y="133" width="0.1032%" height="15" fill="rgb(252,8,32)" fg:x="17408" fg:w="53"/><text x="34.1903%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="34.0006%" y="133" width="0.5959%" height="15" fill="rgb(223,20,43)" fg:x="17461" fg:w="306"/><text x="34.2936%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="34.5964%" y="133" width="0.1402%" height="15" fill="rgb(229,81,49)" fg:x="17767" fg:w="72"/><text x="34.8894%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="33.8974%" y="149" width="1.3007%" height="15" fill="rgb(236,28,36)" fg:x="17408" fg:w="668"/><text x="34.1903%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.53%)</title><rect x="33.8876%" y="165" width="1.5305%" height="15" fill="rgb(249,185,26)" fg:x="17403" fg:w="786"/><text x="34.1806%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (157 instructions, 0.31%)</title><rect x="35.4182%" y="165" width="0.3057%" height="15" fill="rgb(249,174,33)" fg:x="18189" fg:w="157"/><text x="35.7111%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="35.7336%" y="133" width="0.1032%" height="15" fill="rgb(233,201,37)" fg:x="18351" fg:w="53"/><text x="36.0266%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="35.8368%" y="133" width="0.5959%" height="15" fill="rgb(221,78,26)" fg:x="18404" fg:w="306"/><text x="36.1298%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="36.4327%" y="133" width="0.1402%" height="15" fill="rgb(250,127,30)" fg:x="18710" fg:w="72"/><text x="36.7256%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="35.7336%" y="149" width="1.3007%" height="15" fill="rgb(230,49,44)" fg:x="18351" fg:w="668"/><text x="36.0266%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.71%)</title><rect x="35.7239%" y="165" width="1.7077%" height="15" fill="rgb(229,67,23)" fg:x="18346" fg:w="877"/><text x="36.0169%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="37.4316%" y="165" width="0.1480%" height="15" fill="rgb(249,83,47)" fg:x="19223" fg:w="76"/><text x="37.7246%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="37.5893%" y="133" width="0.1032%" height="15" fill="rgb(215,43,3)" fg:x="19304" fg:w="53"/><text x="37.8823%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="37.6925%" y="133" width="0.5959%" height="15" fill="rgb(238,154,13)" fg:x="19357" fg:w="306"/><text x="37.9855%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="38.2884%" y="133" width="0.1402%" height="15" fill="rgb(219,56,2)" fg:x="19663" fg:w="72"/><text x="38.5814%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="37.5893%" y="149" width="1.3007%" height="15" fill="rgb(233,0,4)" fg:x="19304" fg:w="668"/><text x="37.8823%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.87%)</title><rect x="38.8901%" y="149" width="0.8685%" height="15" fill="rgb(235,30,7)" fg:x="19972" fg:w="446"/><text x="39.1830%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="39.7585%" y="133" width="0.1577%" height="15" fill="rgb(250,79,13)" fg:x="20418" fg:w="81"/><text x="40.0515%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="39.7585%" y="149" width="0.2103%" height="15" fill="rgb(211,146,34)" fg:x="20418" fg:w="108"/><text x="40.0515%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 2.72%)</title><rect x="37.5796%" y="165" width="2.7183%" height="15" fill="rgb(228,22,38)" fg:x="19299" fg:w="1396"/><text x="37.8726%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.2979%" y="117" width="0.1032%" height="15" fill="rgb(235,168,5)" fg:x="20695" fg:w="53"/><text x="40.5909%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="40.2979%" y="133" width="0.1519%" height="15" fill="rgb(221,155,16)" fg:x="20695" fg:w="78"/><text x="40.5909%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="40.2979%" y="149" width="0.5705%" height="15" fill="rgb(215,215,53)" fg:x="20695" fg:w="293"/><text x="40.5909%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (9 instructions, 0.02%)</title><rect x="40.8685%" y="149" width="0.0175%" height="15" fill="rgb(223,4,10)" fg:x="20988" fg:w="9"/><text x="41.1614%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="40.8860%" y="117" width="0.1032%" height="15" fill="rgb(234,103,6)" fg:x="20997" fg:w="53"/><text x="41.1790%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="40.8860%" y="133" width="0.1519%" height="15" fill="rgb(227,97,0)" fg:x="20997" fg:w="78"/><text x="41.1790%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="40.8860%" y="149" width="0.5705%" height="15" fill="rgb(234,150,53)" fg:x="20997" fg:w="293"/><text x="41.1790%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (9 instructions, 0.02%)</title><rect x="41.4565%" y="149" width="0.0175%" height="15" fill="rgb(228,201,54)" fg:x="21290" fg:w="9"/><text x="41.7495%" y="159.50"></text></g><g><title>candid::types::internal::env_id (949 instructions, 1.85%)</title><rect x="40.2979%" y="165" width="1.8479%" height="15" fill="rgb(222,22,37)" fg:x="20695" fg:w="949"/><text x="40.5909%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (4,348 instructions, 8.47%)</title><rect x="33.8876%" y="181" width="8.4666%" height="15" fill="rgb(237,53,32)" fg:x="17403" fg:w="4348"/><text x="34.1806%" y="191.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.09%)</title><rect x="42.3542%" y="181" width="0.0915%" height="15" fill="rgb(233,25,53)" fg:x="21751" fg:w="47"/><text x="42.6472%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.33%)</title><rect x="42.4671%" y="165" width="0.3271%" height="15" fill="rgb(210,40,34)" fg:x="21809" fg:w="168"/><text x="42.7601%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.40%)</title><rect x="42.4457%" y="181" width="0.4011%" height="15" fill="rgb(241,220,44)" fg:x="21798" fg:w="206"/><text x="42.7387%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.05%)</title><rect x="42.8469%" y="165" width="0.0545%" height="15" fill="rgb(235,28,35)" fg:x="22004" fg:w="28"/><text x="43.1398%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.9014%" y="165" width="0.0292%" height="15" fill="rgb(210,56,17)" fg:x="22032" fg:w="15"/><text x="43.1943%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (15 instructions, 0.03%)</title><rect x="42.9306%" y="165" width="0.0292%" height="15" fill="rgb(224,130,29)" fg:x="22047" fg:w="15"/><text x="43.2235%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="42.9598%" y="149" width="0.1344%" height="15" fill="rgb(235,212,8)" fg:x="22062" fg:w="69"/><text x="43.2528%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="43.0941%" y="149" width="0.1266%" height="15" fill="rgb(223,33,50)" fg:x="22131" fg:w="65"/><text x="43.3871%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="43.2207%" y="149" width="0.1227%" height="15" fill="rgb(219,149,13)" fg:x="22196" fg:w="63"/><text x="43.5137%" y="159.50"></text></g><g><title>binread::BinRead::read (241 instructions, 0.47%)</title><rect x="42.9598%" y="165" width="0.4693%" height="15" fill="rgb(250,156,29)" fg:x="22062" fg:w="241"/><text x="43.2528%" y="175.50"></text></g><g><title>candid::de::Deserializer::borrow_bytes (51 instructions, 0.10%)</title><rect x="43.4291%" y="165" width="0.0993%" height="15" fill="rgb(216,193,19)" fg:x="22303" fg:w="51"/><text x="43.7220%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="43.5284%" y="165" width="0.1480%" height="15" fill="rgb(216,135,14)" fg:x="22354" fg:w="76"/><text x="43.8213%" y="175.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="43.6764%" y="165" width="0.2045%" height="15" fill="rgb(241,47,5)" fg:x="22430" fg:w="105"/><text x="43.9693%" y="175.50"></text></g><g><title>core::str::converts::from_utf8 (144 instructions, 0.28%)</title><rect x="43.8808%" y="165" width="0.2804%" height="15" fill="rgb(233,42,35)" fg:x="22535" fg:w="144"/><text x="44.1738%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for alloc::string::String&gt;::deserialize (807 instructions, 1.57%)</title><rect x="42.8469%" y="181" width="1.5714%" height="15" fill="rgb(231,13,6)" fg:x="22004" fg:w="807"/><text x="43.1398%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4183%" y="181" width="0.0214%" height="15" fill="rgb(207,181,40)" fg:x="22811" fg:w="11"/><text x="44.7112%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4397%" y="181" width="0.0214%" height="15" fill="rgb(254,173,49)" fg:x="22822" fg:w="11"/><text x="44.7327%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="44.4611%" y="181" width="0.0214%" height="15" fill="rgb(221,1,38)" fg:x="22833" fg:w="11"/><text x="44.7541%" y="191.50"></text></g><g><title>memcpy (410 instructions, 0.80%)</title><rect x="44.4825%" y="181" width="0.7984%" height="15" fill="rgb(206,124,46)" fg:x="22844" fg:w="410"/><text x="44.7755%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="45.2809%" y="149" width="0.0234%" height="15" fill="rgb(249,21,11)" fg:x="23254" fg:w="12"/><text x="45.5739%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="45.3043%" y="149" width="0.2395%" height="15" fill="rgb(222,201,40)" fg:x="23266" fg:w="123"/><text x="45.5972%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="45.5438%" y="117" width="0.1227%" height="15" fill="rgb(235,61,29)" fg:x="23389" fg:w="63"/><text x="45.8367%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (208 instructions, 0.41%)</title><rect x="45.5438%" y="133" width="0.4050%" height="15" fill="rgb(219,207,3)" fg:x="23389" fg:w="208"/><text x="45.8367%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 instructions, 0.46%)</title><rect x="45.5438%" y="149" width="0.4576%" height="15" fill="rgb(222,56,46)" fg:x="23389" fg:w="235"/><text x="45.8367%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.0014%" y="149" width="0.0214%" height="15" fill="rgb(239,76,54)" fg:x="23624" fg:w="11"/><text x="46.2943%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (423 instructions, 0.82%)</title><rect x="45.2809%" y="165" width="0.8237%" height="15" fill="rgb(231,124,27)" fg:x="23254" fg:w="423"/><text x="45.5739%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (458 instructions, 0.89%)</title><rect x="45.2809%" y="181" width="0.8918%" height="15" fill="rgb(249,195,6)" fg:x="23254" fg:w="458"/><text x="45.5739%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="46.1727%" y="165" width="0.1071%" height="15" fill="rgb(237,174,47)" fg:x="23712" fg:w="55"/><text x="46.4657%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.12%)</title><rect x="46.2798%" y="165" width="0.1227%" height="15" fill="rgb(206,201,31)" fg:x="23767" fg:w="63"/><text x="46.5728%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (199 instructions, 0.39%)</title><rect x="46.1727%" y="181" width="0.3875%" height="15" fill="rgb(231,57,52)" fg:x="23712" fg:w="199"/><text x="46.4657%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5700%" y="165" width="0.0214%" height="15" fill="rgb(248,177,22)" fg:x="23916" fg:w="11"/><text x="46.8629%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="46.5914%" y="165" width="0.0214%" height="15" fill="rgb(215,211,37)" fg:x="23927" fg:w="11"/><text x="46.8843%" y="175.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="46.6128%" y="165" width="0.2648%" height="15" fill="rgb(241,128,51)" fg:x="23938" fg:w="136"/><text x="46.9058%" y="175.50"></text></g><g><title>candid::ser::IDLBuilder::new (349 instructions, 0.68%)</title><rect x="46.5602%" y="181" width="0.6796%" height="15" fill="rgb(227,165,31)" fg:x="23911" fg:w="349"/><text x="46.8532%" y="191.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="47.2398%" y="181" width="0.0759%" height="15" fill="rgb(228,167,24)" fg:x="24260" fg:w="39"/><text x="47.5328%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.11%)</title><rect x="47.3157%" y="165" width="0.1071%" height="15" fill="rgb(228,143,12)" fg:x="24299" fg:w="55"/><text x="47.6087%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (203 instructions, 0.40%)</title><rect x="47.3157%" y="181" width="0.3953%" height="15" fill="rgb(249,149,8)" fg:x="24299" fg:w="203"/><text x="47.6087%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="47.7208%" y="149" width="0.1032%" height="15" fill="rgb(243,35,44)" fg:x="24507" fg:w="53"/><text x="48.0137%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.61%)</title><rect x="47.8240%" y="149" width="0.6075%" height="15" fill="rgb(246,89,9)" fg:x="24560" fg:w="312"/><text x="48.1169%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="48.4315%" y="149" width="0.1402%" height="15" fill="rgb(233,213,13)" fg:x="24872" fg:w="72"/><text x="48.7245%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="47.7208%" y="165" width="1.3124%" height="15" fill="rgb(233,141,41)" fg:x="24507" fg:w="674"/><text x="48.0137%" y="175.50"></text></g><g><title>candid::types::internal::env_add (883 instructions, 1.72%)</title><rect x="47.7110%" y="181" width="1.7194%" height="15" fill="rgb(239,167,4)" fg:x="24502" fg:w="883"/><text x="48.0040%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.4304%" y="181" width="0.1480%" height="15" fill="rgb(209,217,16)" fg:x="25385" fg:w="76"/><text x="49.7234%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="49.5784%" y="181" width="0.1480%" height="15" fill="rgb(219,88,35)" fg:x="25461" fg:w="76"/><text x="49.8714%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="49.7264%" y="181" width="0.1519%" height="15" fill="rgb(220,193,23)" fg:x="25537" fg:w="78"/><text x="50.0194%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="49.8880%" y="133" width="0.1032%" height="15" fill="rgb(230,90,52)" fg:x="25620" fg:w="53"/><text x="50.1810%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="49.9912%" y="133" width="0.5959%" height="15" fill="rgb(252,106,19)" fg:x="25673" fg:w="306"/><text x="50.2842%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="50.5871%" y="133" width="0.1402%" height="15" fill="rgb(206,74,20)" fg:x="25979" fg:w="72"/><text x="50.8801%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="49.8880%" y="149" width="1.3007%" height="15" fill="rgb(230,138,44)" fg:x="25620" fg:w="668"/><text x="50.1810%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (786 instructions, 1.53%)</title><rect x="49.8783%" y="165" width="1.5305%" height="15" fill="rgb(235,182,43)" fg:x="25615" fg:w="786"/><text x="50.1713%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="51.4088%" y="165" width="0.1480%" height="15" fill="rgb(242,16,51)" fg:x="26401" fg:w="76"/><text x="51.7018%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="51.5665%" y="133" width="0.1032%" height="15" fill="rgb(248,9,4)" fg:x="26482" fg:w="53"/><text x="51.8595%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="51.6697%" y="133" width="0.5959%" height="15" fill="rgb(210,31,22)" fg:x="26535" fg:w="306"/><text x="51.9627%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="52.2656%" y="133" width="0.1402%" height="15" fill="rgb(239,54,39)" fg:x="26841" fg:w="72"/><text x="52.5586%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="51.5665%" y="149" width="1.3007%" height="15" fill="rgb(230,99,41)" fg:x="26482" fg:w="668"/><text x="51.8595%" y="159.50"></text></g><g><title>candid::types::internal::env_add (877 instructions, 1.71%)</title><rect x="51.5568%" y="165" width="1.7077%" height="15" fill="rgb(253,106,12)" fg:x="26477" fg:w="877"/><text x="51.8498%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="53.2645%" y="165" width="0.1480%" height="15" fill="rgb(213,46,41)" fg:x="27354" fg:w="76"/><text x="53.5575%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="53.4223%" y="133" width="0.1032%" height="15" fill="rgb(215,133,35)" fg:x="27435" fg:w="53"/><text x="53.7152%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (306 instructions, 0.60%)</title><rect x="53.5255%" y="133" width="0.5959%" height="15" fill="rgb(213,28,5)" fg:x="27488" fg:w="306"/><text x="53.8184%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="54.1213%" y="133" width="0.1402%" height="15" fill="rgb(215,77,49)" fg:x="27794" fg:w="72"/><text x="54.4143%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (668 instructions, 1.30%)</title><rect x="53.4223%" y="149" width="1.3007%" height="15" fill="rgb(248,100,22)" fg:x="27435" fg:w="668"/><text x="53.7152%" y="159.50"></text></g><g><title>memcmp (446 instructions, 0.87%)</title><rect x="54.7230%" y="149" width="0.8685%" height="15" fill="rgb(208,67,9)" fg:x="28103" fg:w="446"/><text x="55.0160%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="55.5915%" y="133" width="0.1577%" height="15" fill="rgb(219,133,21)" fg:x="28549" fg:w="81"/><text x="55.8844%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="55.5915%" y="149" width="0.2103%" height="15" fill="rgb(246,46,29)" fg:x="28549" fg:w="108"/><text x="55.8844%" y="159.50"></text></g><g><title>candid::types::internal::env_add (1,396 instructions, 2.72%)</title><rect x="53.4125%" y="165" width="2.7183%" height="15" fill="rgb(246,185,52)" fg:x="27430" fg:w="1396"/><text x="53.7055%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="56.1309%" y="117" width="0.1032%" height="15" fill="rgb(252,136,11)" fg:x="28826" fg:w="53"/><text x="56.4238%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="56.1309%" y="133" width="0.1519%" height="15" fill="rgb(219,138,53)" fg:x="28826" fg:w="78"/><text x="56.4238%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="56.1309%" y="149" width="0.5705%" height="15" fill="rgb(211,51,23)" fg:x="28826" fg:w="293"/><text x="56.4238%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (9 instructions, 0.02%)</title><rect x="56.7014%" y="149" width="0.0175%" height="15" fill="rgb(247,221,28)" fg:x="29119" fg:w="9"/><text x="56.9944%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1286 (15 instructions, 0.03%)</title><rect x="56.7189%" y="149" width="0.0292%" height="15" fill="rgb(251,222,45)" fg:x="29128" fg:w="15"/><text x="57.0119%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="56.7481%" y="149" width="0.0214%" height="15" fill="rgb(217,162,53)" fg:x="29143" fg:w="11"/><text x="57.0411%" y="159.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.02%)</title><rect x="56.1309%" y="165" width="1.0165%" height="15" fill="rgb(229,93,14)" fg:x="28826" fg:w="522"/><text x="56.4238%" y="175.50"></text></g><g><title>candid::types::CandidType::ty (3,840 instructions, 7.48%)</title><rect x="49.8783%" y="181" width="7.4774%" height="15" fill="rgb(209,67,49)" fg:x="25615" fg:w="3840"/><text x="50.1713%" y="191.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="57.3557%" y="181" width="0.1519%" height="15" fill="rgb(213,87,29)" fg:x="29455" fg:w="78"/><text x="57.6486%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="57.5173%" y="149" width="0.1032%" height="15" fill="rgb(205,151,52)" fg:x="29538" fg:w="53"/><text x="57.8103%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (312 instructions, 0.61%)</title><rect x="57.6205%" y="149" width="0.6075%" height="15" fill="rgb(253,215,39)" fg:x="29591" fg:w="312"/><text x="57.9135%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.14%)</title><rect x="58.2280%" y="149" width="0.1402%" height="15" fill="rgb(221,220,41)" fg:x="29903" fg:w="72"/><text x="58.5210%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674 instructions, 1.31%)</title><rect x="57.5173%" y="165" width="1.3124%" height="15" fill="rgb(218,133,21)" fg:x="29538" fg:w="674"/><text x="57.8103%" y="175.50"></text></g><g><title>memcmp (467 instructions, 0.91%)</title><rect x="58.8297%" y="165" width="0.9094%" height="15" fill="rgb(221,193,43)" fg:x="30212" fg:w="467"/><text x="59.1227%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="59.7391%" y="149" width="0.1577%" height="15" fill="rgb(240,128,52)" fg:x="30679" fg:w="81"/><text x="60.0320%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="59.7391%" y="165" width="0.2103%" height="15" fill="rgb(253,114,12)" fg:x="30679" fg:w="108"/><text x="60.0320%" y="175.50"></text></g><g><title>candid::types::internal::env_add (1,423 instructions, 2.77%)</title><rect x="57.5075%" y="181" width="2.7709%" height="15" fill="rgb(215,223,47)" fg:x="29533" fg:w="1423"/><text x="57.8005%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.2785%" y="133" width="0.1032%" height="15" fill="rgb(248,225,23)" fg:x="30956" fg:w="53"/><text x="60.5714%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="60.3817%" y="133" width="0.2999%" height="15" fill="rgb(250,108,0)" fg:x="31009" fg:w="154"/><text x="60.6746%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="60.6815%" y="117" width="0.1032%" height="15" fill="rgb(228,208,7)" fg:x="31163" fg:w="53"/><text x="60.9745%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="60.6815%" y="133" width="0.1519%" height="15" fill="rgb(244,45,10)" fg:x="31163" fg:w="78"/><text x="60.9745%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="60.2785%" y="149" width="0.6835%" height="15" fill="rgb(207,125,25)" fg:x="30956" fg:w="351"/><text x="60.5714%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.3806%" y="133" width="0.1032%" height="15" fill="rgb(210,195,18)" fg:x="31522" fg:w="53"/><text x="61.6736%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="61.4838%" y="133" width="0.2999%" height="15" fill="rgb(249,80,12)" fg:x="31575" fg:w="154"/><text x="61.7768%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="61.7837%" y="117" width="0.1032%" height="15" fill="rgb(221,65,9)" fg:x="31729" fg:w="53"/><text x="62.0766%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="61.7837%" y="133" width="0.1519%" height="15" fill="rgb(235,49,36)" fg:x="31729" fg:w="78"/><text x="62.0766%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="61.3806%" y="149" width="0.6835%" height="15" fill="rgb(225,32,20)" fg:x="31522" fg:w="351"/><text x="61.6736%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,132 instructions, 2.20%)</title><rect x="60.2785%" y="165" width="2.2043%" height="15" fill="rgb(215,141,46)" fg:x="30956" fg:w="1132"/><text x="60.5714%" y="175.50">c..</text></g><g><title>candid::types::internal::env_id (1,405 instructions, 2.74%)</title><rect x="60.2785%" y="181" width="2.7359%" height="15" fill="rgb(250,160,47)" fg:x="30956" fg:w="1405"/><text x="60.5714%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.0143%" y="149" width="0.1480%" height="15" fill="rgb(216,222,40)" fg:x="32361" fg:w="76"/><text x="63.3073%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.21%)</title><rect x="63.0143%" y="165" width="0.2142%" height="15" fill="rgb(234,217,39)" fg:x="32361" fg:w="110"/><text x="63.3073%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.35%)</title><rect x="63.0143%" y="181" width="0.3466%" height="15" fill="rgb(207,178,40)" fg:x="32361" fg:w="178"/><text x="63.3073%" y="191.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="63.3609%" y="165" width="0.0467%" height="15" fill="rgb(221,136,13)" fg:x="32539" fg:w="24"/><text x="63.6539%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="63.4077%" y="149" width="0.1480%" height="15" fill="rgb(249,199,10)" fg:x="32563" fg:w="76"/><text x="63.7006%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="63.5556%" y="133" width="0.1519%" height="15" fill="rgb(249,222,13)" fg:x="32639" fg:w="78"/><text x="63.8486%" y="143.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.30%)</title><rect x="63.5556%" y="149" width="0.2979%" height="15" fill="rgb(244,185,38)" fg:x="32639" fg:w="153"/><text x="63.8486%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="63.8536%" y="149" width="0.1597%" height="15" fill="rgb(236,202,9)" fg:x="32792" fg:w="82"/><text x="64.1465%" y="159.50"></text></g><g><title>candid::types::internal::unroll (464 instructions, 0.90%)</title><rect x="63.4077%" y="165" width="0.9035%" height="15" fill="rgb(250,229,37)" fg:x="32563" fg:w="464"/><text x="63.7006%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.3112%" y="117" width="0.1032%" height="15" fill="rgb(206,174,23)" fg:x="33027" fg:w="53"/><text x="64.6041%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="64.4144%" y="117" width="0.2999%" height="15" fill="rgb(211,33,43)" fg:x="33080" fg:w="154"/><text x="64.7073%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="64.7142%" y="101" width="0.1032%" height="15" fill="rgb(245,58,50)" fg:x="33234" fg:w="53"/><text x="65.0072%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="64.7142%" y="117" width="0.1519%" height="15" fill="rgb(244,68,36)" fg:x="33234" fg:w="78"/><text x="65.0072%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="64.3112%" y="133" width="0.6835%" height="15" fill="rgb(232,229,15)" fg:x="33027" fg:w="351"/><text x="64.6041%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (566 instructions, 1.10%)</title><rect x="64.3112%" y="149" width="1.1021%" height="15" fill="rgb(254,30,23)" fg:x="33027" fg:w="566"/><text x="64.6041%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="65.4133%" y="149" width="0.1383%" height="15" fill="rgb(235,160,14)" fg:x="33593" fg:w="71"/><text x="65.7063%" y="159.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="65.5516%" y="149" width="0.2648%" height="15" fill="rgb(212,155,44)" fg:x="33664" fg:w="136"/><text x="65.8445%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,077 instructions, 2.10%)</title><rect x="64.3112%" y="165" width="2.0972%" height="15" fill="rgb(226,2,50)" fg:x="33027" fg:w="1077"/><text x="64.6041%" y="175.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="66.4083%" y="133" width="0.1597%" height="15" fill="rgb(234,177,6)" fg:x="34104" fg:w="82"/><text x="66.7013%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="66.4083%" y="149" width="0.2259%" height="15" fill="rgb(217,24,9)" fg:x="34104" fg:w="116"/><text x="66.7013%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (184 instructions, 0.36%)</title><rect x="66.4083%" y="165" width="0.3583%" height="15" fill="rgb(220,13,46)" fg:x="34104" fg:w="184"/><text x="66.7013%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="66.7666%" y="117" width="0.1032%" height="15" fill="rgb(239,221,27)" fg:x="34288" fg:w="53"/><text x="67.0596%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="66.7666%" y="133" width="0.1519%" height="15" fill="rgb(222,198,25)" fg:x="34288" fg:w="78"/><text x="67.0596%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.57%)</title><rect x="66.7666%" y="149" width="0.5705%" height="15" fill="rgb(211,99,13)" fg:x="34288" fg:w="293"/><text x="67.0596%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="67.3372%" y="149" width="0.0351%" height="15" fill="rgb(232,111,31)" fg:x="34581" fg:w="18"/><text x="67.6301%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="67.3722%" y="149" width="0.0214%" height="15" fill="rgb(245,82,37)" fg:x="34599" fg:w="11"/><text x="67.6652%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.85%)</title><rect x="66.7666%" y="165" width="0.8529%" height="15" fill="rgb(227,149,46)" fg:x="34288" fg:w="438"/><text x="67.0596%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="67.6195%" y="117" width="0.1597%" height="15" fill="rgb(218,36,50)" fg:x="34726" fg:w="82"/><text x="67.9125%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (116 instructions, 0.23%)</title><rect x="67.6195%" y="133" width="0.2259%" height="15" fill="rgb(226,80,48)" fg:x="34726" fg:w="116"/><text x="67.9125%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (181 instructions, 0.35%)</title><rect x="67.6195%" y="149" width="0.3524%" height="15" fill="rgb(238,224,15)" fg:x="34726" fg:w="181"/><text x="67.9125%" y="159.50"></text></g><g><title>leb128::write::signed (233 instructions, 0.45%)</title><rect x="67.6195%" y="165" width="0.4537%" height="15" fill="rgb(241,136,10)" fg:x="34726" fg:w="233"/><text x="67.9125%" y="175.50"></text></g><g><title>leb128::write::unsigned (44 instructions, 0.09%)</title><rect x="68.0732%" y="165" width="0.0857%" height="15" fill="rgb(208,32,45)" fg:x="34959" fg:w="44"/><text x="68.3662%" y="175.50"></text></g><g><title>candid::types::internal::Label::get_id (110 instructions, 0.21%)</title><rect x="68.1589%" y="165" width="0.2142%" height="15" fill="rgb(207,135,9)" fg:x="35003" fg:w="110"/><text x="68.4519%" y="175.50"></text></g><g><title>leb128::write::unsigned (212 instructions, 0.41%)</title><rect x="68.3731%" y="165" width="0.4128%" height="15" fill="rgb(206,86,44)" fg:x="35113" fg:w="212"/><text x="68.6661%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.11%)</title><rect x="68.7859%" y="165" width="0.1090%" height="15" fill="rgb(245,177,15)" fg:x="35325" fg:w="56"/><text x="69.0789%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="68.8949%" y="133" width="0.1577%" height="15" fill="rgb(206,64,50)" fg:x="35381" fg:w="81"/><text x="69.1879%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.21%)</title><rect x="68.8949%" y="149" width="0.2103%" height="15" fill="rgb(234,36,40)" fg:x="35381" fg:w="108"/><text x="69.1879%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="69.1052%" y="149" width="0.1577%" height="15" fill="rgb(213,64,8)" fg:x="35489" fg:w="81"/><text x="69.3982%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="69.2630%" y="149" width="0.1519%" height="15" fill="rgb(210,75,36)" fg:x="35570" fg:w="78"/><text x="69.5559%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (339 instructions, 0.66%)</title><rect x="68.8949%" y="165" width="0.6601%" height="15" fill="rgb(229,88,21)" fg:x="35381" fg:w="339"/><text x="69.1879%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="69.5551%" y="165" width="0.0214%" height="15" fill="rgb(252,204,47)" fg:x="35720" fg:w="11"/><text x="69.8480%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,476 instructions, 6.77%)</title><rect x="63.3609%" y="181" width="6.7686%" height="15" fill="rgb(208,77,27)" fg:x="32539" fg:w="3476"/><text x="63.6539%" y="191.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="70.1295%" y="181" width="0.0214%" height="15" fill="rgb(221,76,26)" fg:x="36015" fg:w="11"/><text x="70.4225%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="70.1509%" y="181" width="0.1519%" height="15" fill="rgb(225,139,18)" fg:x="36026" fg:w="78"/><text x="70.4439%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.3028%" y="181" width="0.2045%" height="15" fill="rgb(230,137,11)" fg:x="36104" fg:w="105"/><text x="70.5958%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="70.5073%" y="149" width="0.2298%" height="15" fill="rgb(212,28,1)" fg:x="36209" fg:w="118"/><text x="70.8002%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.30%)</title><rect x="70.5073%" y="165" width="0.2960%" height="15" fill="rgb(248,164,17)" fg:x="36209" fg:w="152"/><text x="70.8002%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.42%)</title><rect x="70.5073%" y="181" width="0.4225%" height="15" fill="rgb(222,171,42)" fg:x="36209" fg:w="217"/><text x="70.8002%" y="191.50"></text></g><g><title>memcpy (105 instructions, 0.20%)</title><rect x="70.9298%" y="181" width="0.2045%" height="15" fill="rgb(243,84,45)" fg:x="36426" fg:w="105"/><text x="71.2228%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="71.1343%" y="181" width="0.1577%" height="15" fill="rgb(252,49,23)" fg:x="36531" fg:w="81"/><text x="71.4272%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="71.2920%" y="181" width="0.1519%" height="15" fill="rgb(215,19,7)" fg:x="36612" fg:w="78"/><text x="71.5850%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.4439%" y="149" width="0.1519%" height="15" fill="rgb(238,81,41)" fg:x="36690" fg:w="78"/><text x="71.7368%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.4439%" y="165" width="0.2181%" height="15" fill="rgb(210,199,37)" fg:x="36690" fg:w="112"/><text x="71.7368%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="71.4439%" y="181" width="0.3447%" height="15" fill="rgb(244,192,49)" fg:x="36690" fg:w="177"/><text x="71.7368%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="71.7885%" y="133" width="0.1519%" height="15" fill="rgb(226,211,11)" fg:x="36867" fg:w="78"/><text x="72.0815%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="71.7885%" y="149" width="0.2181%" height="15" fill="rgb(236,162,54)" fg:x="36867" fg:w="112"/><text x="72.0815%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="71.7885%" y="165" width="0.3447%" height="15" fill="rgb(220,229,9)" fg:x="36867" fg:w="177"/><text x="72.0815%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="72.1332%" y="165" width="0.1480%" height="15" fill="rgb(250,87,22)" fg:x="37044" fg:w="76"/><text x="72.4262%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="72.2812%" y="165" width="0.2629%" height="15" fill="rgb(239,43,17)" fg:x="37120" fg:w="135"/><text x="72.5741%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="72.5441%" y="117" width="0.1383%" height="15" fill="rgb(231,177,25)" fg:x="37255" fg:w="71"/><text x="72.8370%" y="127.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="72.6823%" y="117" width="0.3797%" height="15" fill="rgb(219,179,1)" fg:x="37326" fg:w="195"/><text x="72.9753%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="73.0620%" y="117" width="0.1577%" height="15" fill="rgb(238,219,53)" fg:x="37521" fg:w="81"/><text x="73.3550%" y="127.50"></text></g><g><title>__rust_realloc (433 instructions, 0.84%)</title><rect x="72.5441%" y="133" width="0.8432%" height="15" fill="rgb(232,167,36)" fg:x="37255" fg:w="433"/><text x="72.8370%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (468 instructions, 0.91%)</title><rect x="72.5441%" y="149" width="0.9113%" height="15" fill="rgb(244,19,51)" fg:x="37255" fg:w="468"/><text x="72.8370%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (541 instructions, 1.05%)</title><rect x="72.5441%" y="165" width="1.0535%" height="15" fill="rgb(224,6,22)" fg:x="37255" fg:w="541"/><text x="72.8370%" y="175.50"></text></g><g><title>memcpy (135 instructions, 0.26%)</title><rect x="73.5975%" y="165" width="0.2629%" height="15" fill="rgb(224,145,5)" fg:x="37796" fg:w="135"/><text x="73.8905%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="73.8604%" y="165" width="0.1519%" height="15" fill="rgb(234,130,49)" fg:x="37931" fg:w="78"/><text x="74.1534%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.0123%" y="117" width="0.1032%" height="15" fill="rgb(254,6,2)" fg:x="38009" fg:w="53"/><text x="74.3052%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.30%)</title><rect x="74.1155%" y="117" width="0.2999%" height="15" fill="rgb(208,96,46)" fg:x="38062" fg:w="154"/><text x="74.4084%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.10%)</title><rect x="74.4153%" y="101" width="0.1032%" height="15" fill="rgb(239,3,39)" fg:x="38216" fg:w="53"/><text x="74.7083%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.15%)</title><rect x="74.4153%" y="117" width="0.1519%" height="15" fill="rgb(233,210,1)" fg:x="38216" fg:w="78"/><text x="74.7083%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (351 instructions, 0.68%)</title><rect x="74.0123%" y="133" width="0.6835%" height="15" fill="rgb(244,137,37)" fg:x="38009" fg:w="351"/><text x="74.3052%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (566 instructions, 1.10%)</title><rect x="74.0123%" y="149" width="1.1021%" height="15" fill="rgb(240,136,2)" fg:x="38009" fg:w="566"/><text x="74.3052%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="75.1144%" y="117" width="0.1519%" height="15" fill="rgb(239,18,37)" fg:x="38575" fg:w="78"/><text x="75.4074%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="75.1144%" y="133" width="0.2181%" height="15" fill="rgb(218,185,22)" fg:x="38575" fg:w="112"/><text x="75.4074%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="75.1144%" y="149" width="0.3447%" height="15" fill="rgb(225,218,4)" fg:x="38575" fg:w="177"/><text x="75.4074%" y="159.50"></text></g><g><title>candid::ser::TypeSerialize::encode (916 instructions, 1.78%)</title><rect x="74.0123%" y="165" width="1.7837%" height="15" fill="rgb(230,182,32)" fg:x="38009" fg:w="916"/><text x="74.3052%" y="175.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="75.7959%" y="165" width="0.0584%" height="15" fill="rgb(242,56,43)" fg:x="38925" fg:w="30"/><text x="76.0889%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="75.8543%" y="165" width="0.1519%" height="15" fill="rgb(233,99,24)" fg:x="38955" fg:w="78"/><text x="76.1473%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,489 instructions, 4.85%)</title><rect x="71.7885%" y="181" width="4.8467%" height="15" fill="rgb(234,209,42)" fg:x="36867" fg:w="2489"/><text x="72.0815%" y="191.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="76.6352%" y="133" width="0.2298%" height="15" fill="rgb(227,7,12)" fg:x="39356" fg:w="118"/><text x="76.9282%" y="143.50"></text></g><g><title>memcpy (195 instructions, 0.38%)</title><rect x="76.8650%" y="133" width="0.3797%" height="15" fill="rgb(245,203,43)" fg:x="39474" fg:w="195"/><text x="77.1579%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="77.2447%" y="133" width="0.1519%" height="15" fill="rgb(238,205,33)" fg:x="39669" fg:w="78"/><text x="77.5376%" y="143.50"></text></g><g><title>__rust_realloc (477 instructions, 0.93%)</title><rect x="76.6352%" y="149" width="0.9288%" height="15" fill="rgb(231,56,7)" fg:x="39356" fg:w="477"/><text x="76.9282%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (512 instructions, 1.00%)</title><rect x="76.6352%" y="165" width="0.9970%" height="15" fill="rgb(244,186,29)" fg:x="39356" fg:w="512"/><text x="76.9282%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (585 instructions, 1.14%)</title><rect x="76.6352%" y="181" width="1.1391%" height="15" fill="rgb(234,111,31)" fg:x="39356" fg:w="585"/><text x="76.9282%" y="191.50"></text></g><g><title>memcpy (180 instructions, 0.35%)</title><rect x="77.7743%" y="181" width="0.3505%" height="15" fill="rgb(241,149,10)" fg:x="39941" fg:w="180"/><text x="78.0673%" y="191.50"></text></g><g><title>__rust_realloc (101 instructions, 0.20%)</title><rect x="78.1248%" y="149" width="0.1967%" height="15" fill="rgb(249,206,44)" fg:x="40121" fg:w="101"/><text x="78.4178%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.26%)</title><rect x="78.1248%" y="165" width="0.2648%" height="15" fill="rgb(251,153,30)" fg:x="40121" fg:w="136"/><text x="78.4178%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.41%)</title><rect x="78.1248%" y="181" width="0.4070%" height="15" fill="rgb(239,152,38)" fg:x="40121" fg:w="209"/><text x="78.4178%" y="191.50"></text></g><g><title>memcpy (120 instructions, 0.23%)</title><rect x="78.5318%" y="181" width="0.2337%" height="15" fill="rgb(249,139,47)" fg:x="40330" fg:w="120"/><text x="78.8248%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.7655%" y="181" width="0.1090%" height="15" fill="rgb(244,64,35)" fg:x="40450" fg:w="56"/><text x="79.0584%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="78.8745%" y="181" width="0.1090%" height="15" fill="rgb(216,46,15)" fg:x="40506" fg:w="56"/><text x="79.1675%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="78.9835%" y="181" width="0.0214%" height="15" fill="rgb(250,74,19)" fg:x="40562" fg:w="11"/><text x="79.2765%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.0050%" y="181" width="0.2395%" height="15" fill="rgb(249,42,33)" fg:x="40573" fg:w="123"/><text x="79.2979%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="79.2542%" y="181" width="0.0214%" height="15" fill="rgb(242,149,17)" fg:x="40701" fg:w="11"/><text x="79.5472%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.24%)</title><rect x="79.2756%" y="181" width="0.2395%" height="15" fill="rgb(244,29,21)" fg:x="40712" fg:w="123"/><text x="79.5686%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.19%)</title><rect x="79.5151%" y="181" width="0.1908%" height="15" fill="rgb(220,130,37)" fg:x="40835" fg:w="98"/><text x="79.8081%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="79.7060%" y="181" width="0.1090%" height="15" fill="rgb(211,67,2)" fg:x="40933" fg:w="56"/><text x="79.9989%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="79.8150%" y="181" width="0.1519%" height="15" fill="rgb(235,68,52)" fg:x="40989" fg:w="78"/><text x="80.1080%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="79.9669%" y="181" width="0.1597%" height="15" fill="rgb(246,142,3)" fg:x="41067" fg:w="82"/><text x="80.2599%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::clone (19 instructions, 0.04%)</title><rect x="80.1266%" y="181" width="0.0370%" height="15" fill="rgb(241,25,7)" fg:x="41149" fg:w="19"/><text x="80.4195%" y="191.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (42,530 instructions, 82.82%)</title><rect x="0.9717%" y="197" width="82.8157%" height="15" fill="rgb(242,119,39)" fg:x="499" fg:w="42530"/><text x="1.2646%" y="207.50">subscriber::setup_subscribe_0_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="83.7874%" y="197" width="0.0234%" height="15" fill="rgb(241,98,45)" fg:x="43029" fg:w="12"/><text x="84.0803%" y="207.50"></text></g><g><title>canister_update setup_subscribe (43,127 instructions, 83.98%)</title><rect x="0.0000%" y="213" width="83.9782%" height="15" fill="rgb(254,28,30)" fg:x="0" fg:w="43127"/><text x="0.2930%" y="223.50">canister_update setup_subscribe</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.14%)</title><rect x="83.9782%" y="197" width="0.1383%" height="15" fill="rgb(241,142,54)" fg:x="43127" fg:w="71"/><text x="84.2712%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="84.1164%" y="149" width="0.1344%" height="15" fill="rgb(222,85,15)" fg:x="43198" fg:w="69"/><text x="84.4094%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="84.2508%" y="149" width="0.7906%" height="15" fill="rgb(210,85,47)" fg:x="43267" fg:w="406"/><text x="84.5438%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="85.0414%" y="149" width="0.1597%" height="15" fill="rgb(224,206,25)" fg:x="43673" fg:w="82"/><text x="85.3343%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="85.2011%" y="149" width="0.1052%" height="15" fill="rgb(243,201,19)" fg:x="43755" fg:w="54"/><text x="85.4940%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="85.3062%" y="149" width="0.1052%" height="15" fill="rgb(236,59,4)" fg:x="43809" fg:w="54"/><text x="85.5992%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="85.4114%" y="149" width="0.1052%" height="15" fill="rgb(254,179,45)" fg:x="43863" fg:w="54"/><text x="85.7043%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.11%)</title><rect x="85.5165%" y="149" width="0.1052%" height="15" fill="rgb(226,14,10)" fg:x="43917" fg:w="54"/><text x="85.8095%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.13%)</title><rect x="85.6217%" y="149" width="0.1344%" height="15" fill="rgb(244,27,41)" fg:x="43971" fg:w="69"/><text x="85.9146%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="85.7560%" y="149" width="0.1266%" height="15" fill="rgb(235,35,32)" fg:x="44040" fg:w="65"/><text x="86.0490%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="85.8826%" y="149" width="0.7906%" height="15" fill="rgb(218,68,31)" fg:x="44105" fg:w="406"/><text x="86.1756%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="86.6732%" y="149" width="0.0312%" height="15" fill="rgb(207,120,37)" fg:x="44511" fg:w="16"/><text x="86.9661%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.23%)</title><rect x="86.7043%" y="133" width="0.2298%" height="15" fill="rgb(227,98,0)" fg:x="44527" fg:w="118"/><text x="86.9973%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="86.9341%" y="101" width="0.1168%" height="15" fill="rgb(207,7,3)" fg:x="44645" fg:w="60"/><text x="87.2271%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="86.9341%" y="117" width="0.1655%" height="15" fill="rgb(206,98,19)" fg:x="44645" fg:w="85"/><text x="87.2271%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="87.0996%" y="69" width="0.0175%" height="15" fill="rgb(217,5,26)" fg:x="44730" fg:w="9"/><text x="87.3926%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="87.1171%" y="53" width="0.0584%" height="15" fill="rgb(235,190,38)" fg:x="44739" fg:w="30"/><text x="87.4101%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="87.1171%" y="69" width="0.1071%" height="15" fill="rgb(247,86,24)" fg:x="44739" fg:w="55"/><text x="87.4101%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="87.0996%" y="85" width="0.2298%" height="15" fill="rgb(205,101,16)" fg:x="44730" fg:w="118"/><text x="87.3926%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="87.0996%" y="101" width="0.3330%" height="15" fill="rgb(246,168,33)" fg:x="44730" fg:w="171"/><text x="87.3926%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="87.0996%" y="117" width="0.3427%" height="15" fill="rgb(231,114,1)" fg:x="44730" fg:w="176"/><text x="87.3926%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="86.9341%" y="133" width="0.7244%" height="15" fill="rgb(207,184,53)" fg:x="44645" fg:w="372"/><text x="87.2271%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (631 instructions, 1.23%)</title><rect x="86.7043%" y="149" width="1.2287%" height="15" fill="rgb(224,95,51)" fg:x="44527" fg:w="631"/><text x="86.9973%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="87.9330%" y="149" width="0.1597%" height="15" fill="rgb(212,188,45)" fg:x="45158" fg:w="82"/><text x="88.2260%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="88.0927%" y="149" width="0.1071%" height="15" fill="rgb(223,154,38)" fg:x="45240" fg:w="55"/><text x="88.3857%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="88.1998%" y="149" width="0.1227%" height="15" fill="rgb(251,22,52)" fg:x="45295" fg:w="63"/><text x="88.4928%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.13%)</title><rect x="88.3225%" y="149" width="0.1266%" height="15" fill="rgb(229,209,22)" fg:x="45358" fg:w="65"/><text x="88.6154%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.79%)</title><rect x="88.4490%" y="133" width="0.7906%" height="15" fill="rgb(234,138,34)" fg:x="45423" fg:w="406"/><text x="88.7420%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.03%)</title><rect x="89.2396%" y="133" width="0.0312%" height="15" fill="rgb(212,95,11)" fg:x="45829" fg:w="16"/><text x="89.5326%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="89.2708%" y="117" width="0.1480%" height="15" fill="rgb(240,179,47)" fg:x="45845" fg:w="76"/><text x="89.5637%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.12%)</title><rect x="89.4188%" y="85" width="0.1168%" height="15" fill="rgb(240,163,11)" fg:x="45921" fg:w="60"/><text x="89.7117%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.17%)</title><rect x="89.4188%" y="101" width="0.1655%" height="15" fill="rgb(236,37,12)" fg:x="45921" fg:w="85"/><text x="89.7117%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="89.5843%" y="53" width="0.0175%" height="15" fill="rgb(232,164,16)" fg:x="46006" fg:w="9"/><text x="89.8772%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.06%)</title><rect x="89.6018%" y="37" width="0.0584%" height="15" fill="rgb(244,205,15)" fg:x="46015" fg:w="30"/><text x="89.8948%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.11%)</title><rect x="89.6018%" y="53" width="0.1071%" height="15" fill="rgb(223,117,47)" fg:x="46015" fg:w="55"/><text x="89.8948%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.23%)</title><rect x="89.5843%" y="69" width="0.2298%" height="15" fill="rgb(244,107,35)" fg:x="46006" fg:w="118"/><text x="89.8772%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.33%)</title><rect x="89.5843%" y="85" width="0.3330%" height="15" fill="rgb(205,140,8)" fg:x="46006" fg:w="171"/><text x="89.8772%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.34%)</title><rect x="89.5843%" y="101" width="0.3427%" height="15" fill="rgb(228,84,46)" fg:x="46006" fg:w="176"/><text x="89.8772%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.72%)</title><rect x="89.4188%" y="117" width="0.7244%" height="15" fill="rgb(254,188,9)" fg:x="45921" fg:w="372"/><text x="89.7117%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.15%)</title><rect x="89.2708%" y="133" width="1.1469%" height="15" fill="rgb(206,112,54)" fg:x="45845" fg:w="589"/><text x="89.5637%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.16%)</title><rect x="90.4177%" y="133" width="0.1597%" height="15" fill="rgb(216,84,49)" fg:x="46434" fg:w="82"/><text x="90.7106%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="90.5774%" y="133" width="0.1071%" height="15" fill="rgb(214,194,35)" fg:x="46516" fg:w="55"/><text x="90.8703%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,307 instructions, 2.55%)</title><rect x="88.4490%" y="149" width="2.5450%" height="15" fill="rgb(249,28,3)" fg:x="45423" fg:w="1307"/><text x="88.7420%" y="159.50">b..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.12%)</title><rect x="90.9941%" y="149" width="0.1227%" height="15" fill="rgb(222,56,52)" fg:x="46730" fg:w="63"/><text x="91.2870%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.1167%" y="149" width="0.0253%" height="15" fill="rgb(245,217,50)" fg:x="46793" fg:w="13"/><text x="91.4097%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="91.1421%" y="149" width="0.0253%" height="15" fill="rgb(213,201,24)" fg:x="46806" fg:w="13"/><text x="91.4350%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.01%)</title><rect x="91.1674%" y="149" width="0.0136%" height="15" fill="rgb(248,116,28)" fg:x="46819" fg:w="7"/><text x="91.4603%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="91.1810%" y="149" width="0.0292%" height="15" fill="rgb(219,72,43)" fg:x="46826" fg:w="15"/><text x="91.4740%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.15%)</title><rect x="91.2102%" y="149" width="0.1480%" height="15" fill="rgb(209,138,14)" fg:x="46841" fg:w="76"/><text x="91.5032%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="91.3582%" y="149" width="0.1597%" height="15" fill="rgb(222,18,33)" fg:x="46917" fg:w="82"/><text x="91.6512%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.74%)</title><rect x="91.5218%" y="149" width="0.7399%" height="15" fill="rgb(213,199,7)" fg:x="47001" fg:w="380"/><text x="91.8147%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.74%)</title><rect x="92.2617%" y="149" width="0.7399%" height="15" fill="rgb(250,110,10)" fg:x="47381" fg:w="380"/><text x="92.5547%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,362 instructions, 10.44%)</title><rect x="84.1164%" y="165" width="10.4410%" height="15" fill="rgb(248,123,6)" fg:x="43198" fg:w="5362"/><text x="84.4094%" y="175.50">candid::de::I..</text></g><g><title>memcpy (335 instructions, 0.65%)</title><rect x="94.5575%" y="165" width="0.6523%" height="15" fill="rgb(206,91,31)" fg:x="48560" fg:w="335"/><text x="94.8505%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.02%)</title><rect x="95.2098%" y="133" width="0.0234%" height="15" fill="rgb(211,154,13)" fg:x="48895" fg:w="12"/><text x="95.5028%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.11%)</title><rect x="95.2332%" y="117" width="0.1071%" height="15" fill="rgb(225,148,7)" fg:x="48907" fg:w="55"/><text x="95.5261%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.11%)</title><rect x="95.3929%" y="117" width="0.1090%" height="15" fill="rgb(220,160,43)" fg:x="48989" fg:w="56"/><text x="95.6858%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (165 instructions, 0.32%)</title><rect x="95.2332%" y="133" width="0.3213%" height="15" fill="rgb(213,52,39)" fg:x="48907" fg:w="165"/><text x="95.5261%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (216 instructions, 0.42%)</title><rect x="95.2098%" y="149" width="0.4206%" height="15" fill="rgb(243,137,7)" fg:x="48895" fg:w="216"/><text x="95.5028%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (251 instructions, 0.49%)</title><rect x="95.2098%" y="165" width="0.4888%" height="15" fill="rgb(230,79,13)" fg:x="48895" fg:w="251"/><text x="95.5028%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="95.6986%" y="165" width="0.1577%" height="15" fill="rgb(247,105,23)" fg:x="49146" fg:w="81"/><text x="95.9915%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8660%" y="133" width="0.0214%" height="15" fill="rgb(223,179,41)" fg:x="49232" fg:w="11"/><text x="96.1590%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="95.8875%" y="133" width="0.0214%" height="15" fill="rgb(218,9,34)" fg:x="49243" fg:w="11"/><text x="96.1804%" y="143.50"></text></g><g><title>memset (136 instructions, 0.26%)</title><rect x="95.9089%" y="133" width="0.2648%" height="15" fill="rgb(222,106,8)" fg:x="49254" fg:w="136"/><text x="96.2018%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::new (349 instructions, 0.68%)</title><rect x="95.8563%" y="149" width="0.6796%" height="15" fill="rgb(211,220,0)" fg:x="49227" fg:w="349"/><text x="96.1493%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.06%)</title><rect x="96.5359%" y="133" width="0.0623%" height="15" fill="rgb(229,52,16)" fg:x="49576" fg:w="32"/><text x="96.8288%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.15%)</title><rect x="96.5982%" y="85" width="0.1519%" height="15" fill="rgb(212,155,18)" fg:x="49608" fg:w="78"/><text x="96.8912%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.22%)</title><rect x="96.5982%" y="101" width="0.2181%" height="15" fill="rgb(242,21,14)" fg:x="49608" fg:w="112"/><text x="96.8912%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.34%)</title><rect x="96.5982%" y="117" width="0.3447%" height="15" fill="rgb(222,19,48)" fg:x="49608" fg:w="177"/><text x="96.8912%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9428%" y="117" width="0.0214%" height="15" fill="rgb(232,45,27)" fg:x="49785" fg:w="11"/><text x="97.2358%" y="127.50"></text></g><g><title>memcpy (11 instructions, 0.02%)</title><rect x="96.9643%" y="117" width="0.0214%" height="15" fill="rgb(249,103,42)" fg:x="49796" fg:w="11"/><text x="97.2572%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (361 instructions, 0.70%)</title><rect x="96.5982%" y="133" width="0.7030%" height="15" fill="rgb(246,81,33)" fg:x="49608" fg:w="361"/><text x="96.8912%" y="143.50"></text></g><g><title>std::io::Write::write_all (30 instructions, 0.06%)</title><rect x="97.3011%" y="133" width="0.0584%" height="15" fill="rgb(252,33,42)" fg:x="49969" fg:w="30"/><text x="97.5941%" y="143.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (496 instructions, 0.97%)</title><rect x="96.5359%" y="149" width="0.9658%" height="15" fill="rgb(209,212,41)" fg:x="49576" fg:w="496"/><text x="96.8288%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="97.5114%" y="149" width="0.1577%" height="15" fill="rgb(207,154,6)" fg:x="50077" fg:w="81"/><text x="97.8044%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (1,005 instructions, 1.96%)</title><rect x="95.8563%" y="165" width="1.9570%" height="15" fill="rgb(223,64,47)" fg:x="49227" fg:w="1005"/><text x="96.1493%" y="175.50"></text></g><g><title>subscriber::setup_subscribe_0_::{{closure}} (7,296 instructions, 14.21%)</title><rect x="84.1164%" y="181" width="14.2070%" height="15" fill="rgb(211,161,38)" fg:x="43198" fg:w="7296"/><text x="84.4094%" y="191.50">subscriber::setup_..</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.02%)</title><rect x="98.3234%" y="181" width="0.0234%" height="15" fill="rgb(219,138,40)" fg:x="50494" fg:w="12"/><text x="98.6164%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;subscriber::setup_subscribe_0_::{{closure}}&gt; (6 instructions, 0.01%)</title><rect x="98.3468%" y="181" width="0.0117%" height="15" fill="rgb(241,228,46)" fg:x="50506" fg:w="6"/><text x="98.6398%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.16%)</title><rect x="98.3585%" y="181" width="0.1577%" height="15" fill="rgb(223,209,38)" fg:x="50512" fg:w="81"/><text x="98.6515%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.25%)</title><rect x="98.5162%" y="181" width="0.2454%" height="15" fill="rgb(236,164,45)" fg:x="50593" fg:w="126"/><text x="98.8092%" y="191.50"></text></g><g><title>ic_cdk::futures::waker::wake (7,630 instructions, 14.86%)</title><rect x="84.1164%" y="197" width="14.8574%" height="15" fill="rgb(231,15,5)" fg:x="43198" fg:w="7630"/><text x="84.4094%" y="207.50">ic_cdk::futures::wa..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.15%)</title><rect x="98.9738%" y="181" width="0.1519%" height="15" fill="rgb(252,35,15)" fg:x="50828" fg:w="78"/><text x="99.2668%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (165 instructions, 0.32%)</title><rect x="99.1257%" y="181" width="0.3213%" height="15" fill="rgb(248,181,18)" fg:x="50906" fg:w="165"/><text x="99.4187%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (291 instructions, 0.57%)</title><rect x="98.9738%" y="197" width="0.5666%" height="15" fill="rgb(233,39,42)" fg:x="50828" fg:w="291"/><text x="99.2668%" y="207.50"></text></g><g><title>all (51,355 instructions, 100%)</title><rect x="0.0000%" y="229" width="100.0000%" height="15" fill="rgb(238,110,33)" fg:x="0" fg:w="51355"/><text x="0.2930%" y="239.50"></text></g><g><title>ic_cdk::api::call::callback (8,228 instructions, 16.02%)</title><rect x="83.9782%" y="213" width="16.0218%" height="15" fill="rgb(233,195,10)" fg:x="43127" fg:w="8228"/><text x="84.2712%" y="223.50">ic_cdk::api::call::ca..</text></g></svg></svg>