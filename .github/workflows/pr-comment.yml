name: Comment on forked pull request
on:
#  workflow_run:
#    # This job only runs from the main branch. You won't see any change until it's merged to main.
#    # To test this job, you can temporarily change it to `pull_request` and hardcode the run_id and pr_number
#    workflows: ['Perf']
#    types: [completed]
   pull_request:

jobs:
  pr_comment:
    # if: github.event.workflow_run.event == 'pull_request' && github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: get artifact url
        uses: actions/github-script@v6
        id: url
        with:
          result-encoding: string
          script: |
            const {owner, repo} = context.repo;
            //const run_id = ${{github.event.workflow_run.id}};
            const run_id = 4456673068;
            
            const artifacts = await github.paginate(
              github.rest.actions.listWorkflowRunArtifacts, {owner, repo, run_id});
            if (!artifacts.length) {
              return core.error(`No artifacts found`);
            }
            for (const art of artifacts) {
              if (art.name === 'reports') {
                 console.log(art.archive_download_url);
                 return art.archive_download_url;
              }
            }
      - name: download artifact
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          set -eu
          # A useful wrapper around CURL
          crl() {
            curl --silent --show-error --location --retry 1 "${@:2}" \
              -H "Accept: application/vnd.github.antiope-preview+json, application/vnd.github.v3+json" \
             "$1"
          }
          auth_crl() {
            crl "$1" -H "authorization: Bearer $GITHUB_TOKEN" "${@:2}"
          }
          auth_crl "${{ steps.url.outputs.result }}" > a.zip
          unzip a.zip
          ls -R
      - name: Read diff
        id: diff
        run: |
          set -eu
          echo "TAG_NAME=$(cat ./DIFF.md | base64)" >> $GITHUB_OUTPUT
      - uses: actions/github-script@v6
        with:
          # This snippet is public-domain, taken from
          # https://github.com/oprypin/nightly.link/blob/master/.github/workflows/pr-comment.yml
          script: |
            async function upsertComment(owner, repo, issue_number, purpose, body) {
              const {data: comments} = await github.rest.issues.listComments(
                {owner, repo, issue_number});

              const marker = `<!-- bot: ${purpose} -->`;
              body = marker + "\n" + body;

              const existing = comments.filter((c) => c.body.includes(marker));
              if (existing.length > 0) {
                const last = existing[existing.length - 1];
                core.info(`Updating comment ${last.id}`);
                await github.rest.issues.updateComment({
                  owner, repo,
                  body,
                  comment_id: last.id,
                });
              } else {
                core.info(`Creating a comment in issue / PR #${issue_number}`);
                await github.rest.issues.createComment({issue_number, body, owner, repo});
              }
            }

            const {owner, repo} = context.repo;

            /*const pull_requests = ${{ toJSON(github.event.workflow_run.pull_requests) }};
            if (!pull_requests.length) {
              return core.error("This workflow doesn't match any pull requests!");
            }*/
            const diff = btoa(`${{ steps.diff.outputs.TAG_NAME }}`);

            /*for (const pr of pull_requests) {
              await upsertComment(owner, repo, pr.number,
                "diff", body);
            }*/
            await upsertComment(owner, repo, 39, "diff", diff);
            //await upsertComment(owner, repo, 39, "perf", perf);            
