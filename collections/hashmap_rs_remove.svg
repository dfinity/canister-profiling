<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap_rs.batch_remove</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="21668"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0369%" height="15" fill="rgb(209,32,31)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0369%" y="181" width="0.0415%" height="15" fill="rgb(247,224,10)" fg:x="8" fg:w="9"/><text x="0.3299%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0785%" y="181" width="0.0415%" height="15" fill="rgb(231,185,48)" fg:x="17" fg:w="9"/><text x="0.3714%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1200%" y="181" width="0.0415%" height="15" fill="rgb(244,110,16)" fg:x="26" fg:w="9"/><text x="0.4130%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1615%" y="181" width="0.0138%" height="15" fill="rgb(231,191,16)" fg:x="35" fg:w="3"/><text x="0.4545%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.1754%" y="181" width="0.0462%" height="15" fill="rgb(230,49,25)" fg:x="38" fg:w="10"/><text x="0.4683%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2215%" y="181" width="0.0231%" height="15" fill="rgb(250,149,10)" fg:x="48" fg:w="5"/><text x="0.5145%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2446%" y="181" width="0.0138%" height="15" fill="rgb(245,185,0)" fg:x="53" fg:w="3"/><text x="0.5376%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="0.0369%" y="197" width="0.6092%" height="15" fill="rgb(213,83,14)" fg:x="8" fg:w="132"/><text x="0.3299%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="0.0369%" y="213" width="0.6553%" height="15" fill="rgb(226,181,45)" fg:x="8" fg:w="142"/><text x="0.3299%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="0.0369%" y="229" width="0.6692%" height="15" fill="rgb(234,200,19)" fg:x="8" fg:w="145"/><text x="0.3299%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7338%" y="181" width="0.0415%" height="15" fill="rgb(237,218,14)" fg:x="159" fg:w="9"/><text x="1.0268%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7753%" y="181" width="0.0415%" height="15" fill="rgb(233,217,0)" fg:x="168" fg:w="9"/><text x="1.0683%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8169%" y="181" width="0.0415%" height="15" fill="rgb(248,196,5)" fg:x="177" fg:w="9"/><text x="1.1098%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.8584%" y="181" width="0.0138%" height="15" fill="rgb(205,22,53)" fg:x="186" fg:w="3"/><text x="1.1514%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.8723%" y="181" width="0.0462%" height="15" fill="rgb(233,203,30)" fg:x="189" fg:w="10"/><text x="1.1652%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.9184%" y="181" width="0.0231%" height="15" fill="rgb(226,94,14)" fg:x="199" fg:w="5"/><text x="1.2114%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.9415%" y="181" width="0.0138%" height="15" fill="rgb(231,62,37)" fg:x="204" fg:w="3"/><text x="1.2344%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="0.7338%" y="197" width="0.6092%" height="15" fill="rgb(217,68,13)" fg:x="159" fg:w="132"/><text x="1.0268%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="0.7338%" y="213" width="0.6553%" height="15" fill="rgb(221,88,2)" fg:x="159" fg:w="142"/><text x="1.0268%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="0.7338%" y="229" width="0.6692%" height="15" fill="rgb(251,187,28)" fg:x="159" fg:w="145"/><text x="1.0268%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.39%)</title><rect x="0.0369%" y="245" width="1.3938%" height="15" fill="rgb(205,30,51)" fg:x="8" fg:w="302"/><text x="0.3299%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.4307%" y="245" width="0.0277%" height="15" fill="rgb(224,214,34)" fg:x="310" fg:w="6"/><text x="1.7236%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4584%" y="149" width="0.0415%" height="15" fill="rgb(224,117,34)" fg:x="316" fg:w="9"/><text x="1.7513%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4999%" y="149" width="0.0415%" height="15" fill="rgb(251,150,48)" fg:x="325" fg:w="9"/><text x="1.7929%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5414%" y="149" width="0.0415%" height="15" fill="rgb(220,31,16)" fg:x="334" fg:w="9"/><text x="1.8344%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.5830%" y="149" width="0.0138%" height="15" fill="rgb(248,55,42)" fg:x="343" fg:w="3"/><text x="1.8759%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="1.5968%" y="149" width="0.0462%" height="15" fill="rgb(217,104,4)" fg:x="346" fg:w="10"/><text x="1.8898%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.6430%" y="149" width="0.0231%" height="15" fill="rgb(248,74,54)" fg:x="356" fg:w="5"/><text x="1.9359%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.6661%" y="149" width="0.0138%" height="15" fill="rgb(249,217,24)" fg:x="361" fg:w="3"/><text x="1.9590%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="1.4584%" y="165" width="0.6092%" height="15" fill="rgb(217,161,42)" fg:x="316" fg:w="132"/><text x="1.7513%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="1.4584%" y="181" width="0.6553%" height="15" fill="rgb(211,185,26)" fg:x="316" fg:w="142"/><text x="1.7513%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="1.4584%" y="197" width="0.6692%" height="15" fill="rgb(205,131,2)" fg:x="316" fg:w="145"/><text x="1.7513%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="1.4584%" y="213" width="0.6969%" height="15" fill="rgb(205,126,24)" fg:x="316" fg:w="151"/><text x="1.7513%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (211 instructions, 0.97%)</title><rect x="1.4584%" y="229" width="0.9738%" height="15" fill="rgb(244,206,25)" fg:x="316" fg:w="211"/><text x="1.7513%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.34%)</title><rect x="2.4368%" y="181" width="0.3369%" height="15" fill="rgb(249,216,14)" fg:x="528" fg:w="73"/><text x="2.7297%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.7737%" y="117" width="0.0277%" height="15" fill="rgb(234,172,19)" fg:x="601" fg:w="6"/><text x="3.0666%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="2.7737%" y="133" width="0.0462%" height="15" fill="rgb(223,203,32)" fg:x="601" fg:w="10"/><text x="3.0666%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.00%)</title><rect x="2.7737%" y="149" width="1.9983%" height="15" fill="rgb(251,87,13)" fg:x="601" fg:w="433"/><text x="3.0666%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.40%)</title><rect x="4.7720%" y="149" width="0.4015%" height="15" fill="rgb(236,160,32)" fg:x="1034" fg:w="87"/><text x="5.0650%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.1735%" y="149" width="0.2400%" height="15" fill="rgb(218,227,39)" fg:x="1121" fg:w="52"/><text x="5.4665%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.4135%" y="149" width="0.2400%" height="15" fill="rgb(224,83,13)" fg:x="1173" fg:w="52"/><text x="5.7065%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.6535%" y="149" width="0.2400%" height="15" fill="rgb(207,145,4)" fg:x="1225" fg:w="52"/><text x="5.9465%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.8935%" y="149" width="0.2400%" height="15" fill="rgb(237,103,53)" fg:x="1277" fg:w="52"/><text x="6.1865%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (880 instructions, 4.06%)</title><rect x="2.7737%" y="181" width="4.0613%" height="15" fill="rgb(207,16,52)" fg:x="601" fg:w="880"/><text x="3.0666%" y="191.50">bin..</text></g><g><title> 4]&gt;::read_options (880 instructions, 4.06%)</title><rect x="2.7737%" y="165" width="4.0613%" height="15" fill="rgb(236,220,54)" fg:x="601" fg:w="880"/><text x="3.0666%" y="175.50"> 4]..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.34%)</title><rect x="6.8350%" y="181" width="0.3369%" height="15" fill="rgb(240,0,16)" fg:x="1481" fg:w="73"/><text x="7.1279%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.36%)</title><rect x="7.1719%" y="165" width="0.3554%" height="15" fill="rgb(208,100,49)" fg:x="1554" fg:w="77"/><text x="7.4648%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.48%)</title><rect x="7.1719%" y="181" width="0.4800%" height="15" fill="rgb(250,161,46)" fg:x="1554" fg:w="104"/><text x="7.4648%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="7.6518%" y="133" width="0.0277%" height="15" fill="rgb(227,88,49)" fg:x="1658" fg:w="6"/><text x="7.9448%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="7.6518%" y="149" width="0.0462%" height="15" fill="rgb(228,102,3)" fg:x="1658" fg:w="10"/><text x="7.9448%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.00%)</title><rect x="7.6518%" y="165" width="1.9983%" height="15" fill="rgb(210,81,15)" fg:x="1658" fg:w="433"/><text x="7.9448%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="9.6502%" y="149" width="0.0831%" height="15" fill="rgb(226,19,48)" fg:x="2091" fg:w="18"/><text x="9.9431%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="9.6502%" y="165" width="0.1015%" height="15" fill="rgb(210,226,9)" fg:x="2091" fg:w="22"/><text x="9.9431%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.7517%" y="69" width="0.0415%" height="15" fill="rgb(241,229,52)" fg:x="2113" fg:w="9"/><text x="10.0447%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.7932%" y="69" width="0.0415%" height="15" fill="rgb(230,150,22)" fg:x="2122" fg:w="9"/><text x="10.0862%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.8348%" y="69" width="0.0415%" height="15" fill="rgb(222,46,8)" fg:x="2131" fg:w="9"/><text x="10.1277%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="9.8763%" y="69" width="0.0138%" height="15" fill="rgb(210,206,5)" fg:x="2140" fg:w="3"/><text x="10.1693%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="9.8902%" y="69" width="0.0462%" height="15" fill="rgb(229,30,6)" fg:x="2143" fg:w="10"/><text x="10.1831%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="9.9363%" y="69" width="0.0231%" height="15" fill="rgb(206,40,12)" fg:x="2153" fg:w="5"/><text x="10.2293%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="9.9594%" y="69" width="0.0138%" height="15" fill="rgb(215,177,13)" fg:x="2158" fg:w="3"/><text x="10.2524%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="9.7517%" y="85" width="0.6092%" height="15" fill="rgb(218,21,39)" fg:x="2113" fg:w="132"/><text x="10.0447%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="9.7517%" y="101" width="0.6553%" height="15" fill="rgb(233,173,1)" fg:x="2113" fg:w="142"/><text x="10.0447%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="9.7517%" y="117" width="0.6692%" height="15" fill="rgb(251,73,29)" fg:x="2113" fg:w="145"/><text x="10.0447%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="9.7517%" y="133" width="0.6969%" height="15" fill="rgb(254,97,39)" fg:x="2113" fg:w="151"/><text x="10.0447%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.28%)</title><rect x="10.4486%" y="85" width="0.2769%" height="15" fill="rgb(251,72,26)" fg:x="2264" fg:w="60"/><text x="10.7416%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.30%)</title><rect x="10.4486%" y="101" width="0.2954%" height="15" fill="rgb(248,24,49)" fg:x="2264" fg:w="64"/><text x="10.7416%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.41%)</title><rect x="10.4486%" y="117" width="0.4107%" height="15" fill="rgb(233,180,3)" fg:x="2264" fg:w="89"/><text x="10.7416%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="10.8593%" y="69" width="0.0462%" height="15" fill="rgb(244,56,6)" fg:x="2353" fg:w="10"/><text x="11.1523%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="10.9055%" y="37" width="0.1385%" height="15" fill="rgb(212,59,53)" fg:x="2363" fg:w="30"/><text x="11.1985%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="10.9055%" y="53" width="0.1569%" height="15" fill="rgb(252,22,41)" fg:x="2363" fg:w="34"/><text x="11.1985%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.27%)</title><rect x="10.9055%" y="69" width="0.2723%" height="15" fill="rgb(219,182,28)" fg:x="2363" fg:w="59"/><text x="11.1985%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.55%)</title><rect x="10.8593%" y="85" width="0.5492%" height="15" fill="rgb(217,19,19)" fg:x="2353" fg:w="119"/><text x="11.1523%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.80%)</title><rect x="10.8593%" y="101" width="0.8030%" height="15" fill="rgb(238,219,14)" fg:x="2353" fg:w="174"/><text x="11.1523%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.83%)</title><rect x="10.8593%" y="117" width="0.8261%" height="15" fill="rgb(208,151,18)" fg:x="2353" fg:w="179"/><text x="11.1523%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.75%)</title><rect x="10.4486%" y="133" width="1.7491%" height="15" fill="rgb(212,68,0)" fg:x="2264" fg:w="379"/><text x="10.7416%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.11%)</title><rect x="9.7517%" y="149" width="3.1060%" height="15" fill="rgb(226,200,6)" fg:x="2113" fg:w="673"/><text x="10.0447%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.40%)</title><rect x="12.8577%" y="149" width="0.4015%" height="15" fill="rgb(210,80,17)" fg:x="2786" fg:w="87"/><text x="13.1506%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="13.2592%" y="101" width="0.0138%" height="15" fill="rgb(223,157,19)" fg:x="2873" fg:w="3"/><text x="13.5522%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="13.2730%" y="101" width="0.0185%" height="15" fill="rgb(236,153,51)" fg:x="2876" fg:w="4"/><text x="13.5660%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="13.2915%" y="101" width="0.0138%" height="15" fill="rgb(221,45,42)" fg:x="2880" fg:w="3"/><text x="13.5845%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="13.3053%" y="101" width="0.0185%" height="15" fill="rgb(211,50,45)" fg:x="2883" fg:w="4"/><text x="13.5983%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="13.3238%" y="101" width="0.0277%" height="15" fill="rgb(243,227,8)" fg:x="2887" fg:w="6"/><text x="13.6168%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="13.3515%" y="101" width="0.0462%" height="15" fill="rgb(249,166,0)" fg:x="2893" fg:w="10"/><text x="13.6445%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="13.2592%" y="117" width="0.3231%" height="15" fill="rgb(235,214,31)" fg:x="2873" fg:w="70"/><text x="13.5522%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="13.2592%" y="133" width="0.3323%" height="15" fill="rgb(242,43,41)" fg:x="2873" fg:w="72"/><text x="13.5522%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="13.2592%" y="149" width="0.3554%" height="15" fill="rgb(237,19,0)" fg:x="2873" fg:w="77"/><text x="13.5522%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.19%)</title><rect x="9.7517%" y="165" width="4.1905%" height="15" fill="rgb(244,169,3)" fg:x="2113" fg:w="908"/><text x="10.0447%" y="175.50">binr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="13.9422%" y="165" width="0.1154%" height="15" fill="rgb(217,156,37)" fg:x="3021" fg:w="25"/><text x="14.2352%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,536 instructions, 7.09%)</title><rect x="7.6518%" y="181" width="7.0888%" height="15" fill="rgb(249,106,9)" fg:x="1658" fg:w="1536"/><text x="7.9448%" y="191.50">binread:..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="14.7406%" y="181" width="0.3138%" height="15" fill="rgb(254,128,2)" fg:x="3194" fg:w="68"/><text x="15.0336%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.36%)</title><rect x="15.0545%" y="165" width="0.3554%" height="15" fill="rgb(250,123,5)" fg:x="3262" fg:w="77"/><text x="15.3474%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.48%)</title><rect x="15.0545%" y="181" width="0.4800%" height="15" fill="rgb(244,136,40)" fg:x="3262" fg:w="104"/><text x="15.3474%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="15.5344%" y="133" width="0.0277%" height="15" fill="rgb(241,201,5)" fg:x="3366" fg:w="6"/><text x="15.8274%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="15.5344%" y="149" width="0.0462%" height="15" fill="rgb(205,57,42)" fg:x="3366" fg:w="10"/><text x="15.8274%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.00%)</title><rect x="15.5344%" y="165" width="1.9983%" height="15" fill="rgb(216,116,37)" fg:x="3366" fg:w="433"/><text x="15.8274%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="17.5328%" y="149" width="0.0831%" height="15" fill="rgb(250,113,23)" fg:x="3799" fg:w="18"/><text x="17.8257%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="17.5328%" y="165" width="0.1015%" height="15" fill="rgb(223,70,51)" fg:x="3799" fg:w="22"/><text x="17.8257%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.6343%" y="69" width="0.0415%" height="15" fill="rgb(221,113,39)" fg:x="3821" fg:w="9"/><text x="17.9273%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.6758%" y="69" width="0.0415%" height="15" fill="rgb(254,72,26)" fg:x="3830" fg:w="9"/><text x="17.9688%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.7174%" y="69" width="0.0415%" height="15" fill="rgb(216,15,5)" fg:x="3839" fg:w="9"/><text x="18.0103%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="17.7589%" y="69" width="0.0138%" height="15" fill="rgb(234,157,23)" fg:x="3848" fg:w="3"/><text x="18.0519%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="17.7728%" y="69" width="0.0462%" height="15" fill="rgb(220,77,19)" fg:x="3851" fg:w="10"/><text x="18.0657%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="17.8189%" y="69" width="0.0231%" height="15" fill="rgb(224,152,1)" fg:x="3861" fg:w="5"/><text x="18.1119%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="17.8420%" y="69" width="0.0138%" height="15" fill="rgb(234,66,37)" fg:x="3866" fg:w="3"/><text x="18.1349%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="17.6343%" y="85" width="0.6092%" height="15" fill="rgb(223,194,50)" fg:x="3821" fg:w="132"/><text x="17.9273%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="17.6343%" y="101" width="0.6553%" height="15" fill="rgb(218,111,20)" fg:x="3821" fg:w="142"/><text x="17.9273%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="17.6343%" y="117" width="0.6692%" height="15" fill="rgb(230,162,2)" fg:x="3821" fg:w="145"/><text x="17.9273%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="17.6343%" y="133" width="0.6969%" height="15" fill="rgb(248,90,50)" fg:x="3821" fg:w="151"/><text x="17.9273%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.28%)</title><rect x="18.3312%" y="85" width="0.2769%" height="15" fill="rgb(211,119,7)" fg:x="3972" fg:w="60"/><text x="18.6241%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.30%)</title><rect x="18.3312%" y="101" width="0.2954%" height="15" fill="rgb(232,35,44)" fg:x="3972" fg:w="64"/><text x="18.6241%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.41%)</title><rect x="18.3312%" y="117" width="0.4107%" height="15" fill="rgb(207,201,13)" fg:x="3972" fg:w="89"/><text x="18.6241%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="18.7419%" y="69" width="0.0462%" height="15" fill="rgb(209,227,42)" fg:x="4061" fg:w="10"/><text x="19.0349%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="18.7881%" y="37" width="0.1385%" height="15" fill="rgb(224,58,41)" fg:x="4071" fg:w="30"/><text x="19.0810%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="18.7881%" y="53" width="0.1569%" height="15" fill="rgb(237,151,7)" fg:x="4071" fg:w="34"/><text x="19.0810%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.27%)</title><rect x="18.7881%" y="69" width="0.2723%" height="15" fill="rgb(253,60,14)" fg:x="4071" fg:w="59"/><text x="19.0810%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.55%)</title><rect x="18.7419%" y="85" width="0.5492%" height="15" fill="rgb(223,74,50)" fg:x="4061" fg:w="119"/><text x="19.0349%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.80%)</title><rect x="18.7419%" y="101" width="0.8030%" height="15" fill="rgb(205,73,38)" fg:x="4061" fg:w="174"/><text x="19.0349%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.83%)</title><rect x="18.7419%" y="117" width="0.8261%" height="15" fill="rgb(218,131,11)" fg:x="4061" fg:w="179"/><text x="19.0349%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.75%)</title><rect x="18.3312%" y="133" width="1.7491%" height="15" fill="rgb(225,15,42)" fg:x="3972" fg:w="379"/><text x="18.6241%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.11%)</title><rect x="17.6343%" y="149" width="3.1060%" height="15" fill="rgb(224,133,7)" fg:x="3821" fg:w="673"/><text x="17.9273%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.40%)</title><rect x="20.7403%" y="149" width="0.4015%" height="15" fill="rgb(232,141,40)" fg:x="4494" fg:w="87"/><text x="21.0332%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="21.1418%" y="101" width="0.0138%" height="15" fill="rgb(240,177,18)" fg:x="4581" fg:w="3"/><text x="21.4347%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="21.1556%" y="101" width="0.0185%" height="15" fill="rgb(253,2,22)" fg:x="4584" fg:w="4"/><text x="21.4486%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="21.1741%" y="101" width="0.0138%" height="15" fill="rgb(250,114,19)" fg:x="4588" fg:w="3"/><text x="21.4671%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="21.1879%" y="101" width="0.0185%" height="15" fill="rgb(209,85,28)" fg:x="4591" fg:w="4"/><text x="21.4809%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="21.2064%" y="101" width="0.0277%" height="15" fill="rgb(205,113,16)" fg:x="4595" fg:w="6"/><text x="21.4994%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="21.2341%" y="101" width="0.0462%" height="15" fill="rgb(216,88,22)" fg:x="4601" fg:w="10"/><text x="21.5270%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="21.1418%" y="117" width="0.3231%" height="15" fill="rgb(212,77,48)" fg:x="4581" fg:w="70"/><text x="21.4347%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="21.1418%" y="133" width="0.3323%" height="15" fill="rgb(210,165,7)" fg:x="4581" fg:w="72"/><text x="21.4347%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="21.1418%" y="149" width="0.3554%" height="15" fill="rgb(232,129,33)" fg:x="4581" fg:w="77"/><text x="21.4347%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.19%)</title><rect x="17.6343%" y="165" width="4.1905%" height="15" fill="rgb(225,109,16)" fg:x="3821" fg:w="908"/><text x="17.9273%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.34%)</title><rect x="21.8248%" y="133" width="0.3369%" height="15" fill="rgb(230,70,26)" fg:x="4729" fg:w="73"/><text x="22.1178%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.51%)</title><rect x="22.1617%" y="117" width="0.5077%" height="15" fill="rgb(245,73,5)" fg:x="4802" fg:w="110"/><text x="22.4547%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.63%)</title><rect x="22.1617%" y="133" width="0.6323%" height="15" fill="rgb(216,116,14)" fg:x="4802" fg:w="137"/><text x="22.4547%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="22.7940%" y="133" width="0.3138%" height="15" fill="rgb(233,10,25)" fg:x="4939" fg:w="68"/><text x="23.0870%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (337 instructions, 1.56%)</title><rect x="21.8248%" y="149" width="1.5553%" height="15" fill="rgb(244,63,47)" fg:x="4729" fg:w="337"/><text x="22.1178%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.3801%" y="85" width="0.0415%" height="15" fill="rgb(207,114,41)" fg:x="5066" fg:w="9"/><text x="23.6731%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.4216%" y="85" width="0.0415%" height="15" fill="rgb(240,87,22)" fg:x="5075" fg:w="9"/><text x="23.7146%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.4632%" y="85" width="0.0415%" height="15" fill="rgb(251,84,20)" fg:x="5084" fg:w="9"/><text x="23.7561%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="23.5047%" y="85" width="0.0138%" height="15" fill="rgb(221,67,2)" fg:x="5093" fg:w="3"/><text x="23.7977%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="23.5186%" y="85" width="0.0462%" height="15" fill="rgb(207,9,30)" fg:x="5096" fg:w="10"/><text x="23.8115%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="23.5647%" y="85" width="0.0231%" height="15" fill="rgb(221,61,36)" fg:x="5106" fg:w="5"/><text x="23.8577%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="23.5878%" y="85" width="0.0138%" height="15" fill="rgb(211,50,0)" fg:x="5111" fg:w="3"/><text x="23.8807%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="23.3801%" y="101" width="0.6092%" height="15" fill="rgb(217,192,4)" fg:x="5066" fg:w="132"/><text x="23.6731%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="23.3801%" y="117" width="0.6553%" height="15" fill="rgb(215,110,46)" fg:x="5066" fg:w="142"/><text x="23.6731%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="23.3801%" y="133" width="0.6692%" height="15" fill="rgb(211,214,36)" fg:x="5066" fg:w="145"/><text x="23.6731%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="23.3801%" y="149" width="0.6969%" height="15" fill="rgb(216,29,6)" fg:x="5066" fg:w="151"/><text x="23.6731%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (567 instructions, 2.62%)</title><rect x="21.8248%" y="165" width="2.6168%" height="15" fill="rgb(205,148,49)" fg:x="4729" fg:w="567"/><text x="22.1178%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,078 instructions, 9.59%)</title><rect x="15.5344%" y="181" width="9.5902%" height="15" fill="rgb(239,202,13)" fg:x="3366" fg:w="2078"/><text x="15.8274%" y="191.50">binread::bi..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="25.1246%" y="181" width="0.3138%" height="15" fill="rgb(235,117,5)" fg:x="5444" fg:w="68"/><text x="25.4176%" y="191.50"></text></g><g><title>binread::BinRead::read (5,202 instructions, 24.01%)</title><rect x="2.4322%" y="197" width="24.0078%" height="15" fill="rgb(244,132,37)" fg:x="527" fg:w="5202"/><text x="2.7251%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="26.4399%" y="181" width="0.0646%" height="15" fill="rgb(214,16,1)" fg:x="5729" fg:w="14"/><text x="26.7329%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="26.5045%" y="165" width="0.0646%" height="15" fill="rgb(232,144,19)" fg:x="5743" fg:w="14"/><text x="26.7975%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 instructions, 0.30%)</title><rect x="26.5691%" y="165" width="0.3000%" height="15" fill="rgb(208,198,44)" fg:x="5757" fg:w="65"/><text x="26.8621%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="26.8691%" y="165" width="0.0877%" height="15" fill="rgb(235,33,31)" fg:x="5822" fg:w="19"/><text x="27.1621%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (250 instructions, 1.15%)</title><rect x="26.5045%" y="181" width="1.1538%" height="15" fill="rgb(253,138,48)" fg:x="5743" fg:w="250"/><text x="26.7975%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.6583%" y="101" width="0.0415%" height="15" fill="rgb(234,205,43)" fg:x="5993" fg:w="9"/><text x="27.9513%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.6998%" y="101" width="0.0415%" height="15" fill="rgb(251,76,21)" fg:x="6002" fg:w="9"/><text x="27.9928%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.7414%" y="101" width="0.0415%" height="15" fill="rgb(206,66,38)" fg:x="6011" fg:w="9"/><text x="28.0343%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="27.7829%" y="101" width="0.0138%" height="15" fill="rgb(230,186,53)" fg:x="6020" fg:w="3"/><text x="28.0759%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="27.7968%" y="101" width="0.0462%" height="15" fill="rgb(253,90,6)" fg:x="6023" fg:w="10"/><text x="28.0897%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="27.8429%" y="101" width="0.0231%" height="15" fill="rgb(237,39,30)" fg:x="6033" fg:w="5"/><text x="28.1359%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="27.8660%" y="101" width="0.0138%" height="15" fill="rgb(247,170,24)" fg:x="6038" fg:w="3"/><text x="28.1589%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="27.6583%" y="117" width="0.6092%" height="15" fill="rgb(228,166,54)" fg:x="5993" fg:w="132"/><text x="27.9513%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="27.6583%" y="133" width="0.6553%" height="15" fill="rgb(210,32,27)" fg:x="5993" fg:w="142"/><text x="27.9513%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="27.6583%" y="149" width="0.6692%" height="15" fill="rgb(211,201,14)" fg:x="5993" fg:w="145"/><text x="27.9513%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="27.6583%" y="165" width="0.6969%" height="15" fill="rgb(218,114,26)" fg:x="5993" fg:w="151"/><text x="27.9513%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.07%)</title><rect x="27.6583%" y="181" width="1.0707%" height="15" fill="rgb(240,1,3)" fg:x="5993" fg:w="232"/><text x="27.9513%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.7290%" y="85" width="0.0415%" height="15" fill="rgb(213,158,31)" fg:x="6225" fg:w="9"/><text x="29.0220%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.7705%" y="85" width="0.0415%" height="15" fill="rgb(238,37,37)" fg:x="6234" fg:w="9"/><text x="29.0635%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.06%)</title><rect x="28.8121%" y="85" width="0.0646%" height="15" fill="rgb(234,144,49)" fg:x="6243" fg:w="14"/><text x="29.1050%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="28.8767%" y="85" width="0.0138%" height="15" fill="rgb(210,113,45)" fg:x="6257" fg:w="3"/><text x="29.1697%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.54%)</title><rect x="28.7290%" y="101" width="0.5400%" height="15" fill="rgb(232,95,7)" fg:x="6225" fg:w="117"/><text x="29.0220%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.59%)</title><rect x="28.7290%" y="117" width="0.5861%" height="15" fill="rgb(220,88,14)" fg:x="6225" fg:w="127"/><text x="29.0220%" y="127.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.60%)</title><rect x="28.7290%" y="133" width="0.6000%" height="15" fill="rgb(240,94,6)" fg:x="6225" fg:w="130"/><text x="29.0220%" y="143.50"></text></g><g><title>__rust_alloc (136 instructions, 0.63%)</title><rect x="28.7290%" y="149" width="0.6277%" height="15" fill="rgb(207,32,9)" fg:x="6225" fg:w="136"/><text x="29.0220%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.78%)</title><rect x="28.7290%" y="165" width="0.7753%" height="15" fill="rgb(209,188,34)" fg:x="6225" fg:w="168"/><text x="29.0220%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (238 instructions, 1.10%)</title><rect x="28.7290%" y="181" width="1.0984%" height="15" fill="rgb(216,210,54)" fg:x="6225" fg:w="238"/><text x="29.0220%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (961 instructions, 4.44%)</title><rect x="26.4399%" y="197" width="4.4351%" height="15" fill="rgb(205,27,34)" fg:x="5729" fg:w="961"/><text x="26.7329%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.8750%" y="117" width="0.0415%" height="15" fill="rgb(218,94,5)" fg:x="6690" fg:w="9"/><text x="31.1680%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.9166%" y="117" width="0.0415%" height="15" fill="rgb(211,146,30)" fg:x="6699" fg:w="9"/><text x="31.2095%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.9581%" y="117" width="0.0415%" height="15" fill="rgb(242,40,9)" fg:x="6708" fg:w="9"/><text x="31.2511%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="30.9996%" y="117" width="0.0138%" height="15" fill="rgb(225,123,30)" fg:x="6717" fg:w="3"/><text x="31.2926%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="31.0135%" y="117" width="0.0462%" height="15" fill="rgb(240,133,22)" fg:x="6720" fg:w="10"/><text x="31.3064%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="31.0596%" y="117" width="0.0231%" height="15" fill="rgb(231,200,14)" fg:x="6730" fg:w="5"/><text x="31.3526%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="31.0827%" y="117" width="0.0138%" height="15" fill="rgb(233,147,54)" fg:x="6735" fg:w="3"/><text x="31.3757%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="30.8750%" y="133" width="0.6092%" height="15" fill="rgb(218,23,13)" fg:x="6690" fg:w="132"/><text x="31.1680%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="30.8750%" y="149" width="0.6553%" height="15" fill="rgb(230,44,30)" fg:x="6690" fg:w="142"/><text x="31.1680%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="30.8750%" y="165" width="0.6692%" height="15" fill="rgb(240,57,31)" fg:x="6690" fg:w="145"/><text x="31.1680%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="30.8750%" y="181" width="0.6969%" height="15" fill="rgb(229,92,43)" fg:x="6690" fg:w="151"/><text x="31.1680%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="31.5719%" y="133" width="0.0138%" height="15" fill="rgb(249,41,47)" fg:x="6841" fg:w="3"/><text x="31.8649%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="31.5857%" y="133" width="0.0185%" height="15" fill="rgb(225,137,44)" fg:x="6844" fg:w="4"/><text x="31.8787%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="31.6042%" y="133" width="0.0138%" height="15" fill="rgb(241,141,8)" fg:x="6848" fg:w="3"/><text x="31.8972%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="31.6181%" y="133" width="0.0185%" height="15" fill="rgb(240,96,17)" fg:x="6851" fg:w="4"/><text x="31.9110%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="31.6365%" y="133" width="0.0277%" height="15" fill="rgb(224,161,6)" fg:x="6855" fg:w="6"/><text x="31.9295%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="31.6642%" y="133" width="0.0738%" height="15" fill="rgb(210,150,1)" fg:x="6861" fg:w="16"/><text x="31.9572%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.45%)</title><rect x="31.5719%" y="149" width="0.4523%" height="15" fill="rgb(232,124,20)" fg:x="6841" fg:w="98"/><text x="31.8649%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.46%)</title><rect x="31.5719%" y="165" width="0.4615%" height="15" fill="rgb(249,186,40)" fg:x="6841" fg:w="100"/><text x="31.8649%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="31.5719%" y="181" width="0.4846%" height="15" fill="rgb(247,138,33)" fg:x="6841" fg:w="105"/><text x="31.8649%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.71%)</title><rect x="30.8750%" y="197" width="1.7076%" height="15" fill="rgb(235,40,47)" fg:x="6690" fg:w="370"/><text x="31.1680%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.5826%" y="133" width="0.0415%" height="15" fill="rgb(231,128,16)" fg:x="7060" fg:w="9"/><text x="32.8756%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.6241%" y="133" width="0.0415%" height="15" fill="rgb(251,36,26)" fg:x="7069" fg:w="9"/><text x="32.9171%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.6657%" y="133" width="0.0415%" height="15" fill="rgb(236,125,44)" fg:x="7078" fg:w="9"/><text x="32.9587%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.7072%" y="133" width="0.0138%" height="15" fill="rgb(233,151,21)" fg:x="7087" fg:w="3"/><text x="33.0002%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="32.7211%" y="133" width="0.0462%" height="15" fill="rgb(239,73,50)" fg:x="7090" fg:w="10"/><text x="33.0140%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.7672%" y="133" width="0.0231%" height="15" fill="rgb(219,99,2)" fg:x="7100" fg:w="5"/><text x="33.0602%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.7903%" y="133" width="0.0138%" height="15" fill="rgb(206,8,1)" fg:x="7105" fg:w="3"/><text x="33.0833%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="32.5826%" y="149" width="0.6092%" height="15" fill="rgb(254,122,27)" fg:x="7060" fg:w="132"/><text x="32.8756%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="32.5826%" y="165" width="0.6553%" height="15" fill="rgb(254,36,32)" fg:x="7060" fg:w="142"/><text x="32.8756%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="32.5826%" y="181" width="0.6692%" height="15" fill="rgb(212,121,53)" fg:x="7060" fg:w="145"/><text x="32.8756%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.2795%" y="133" width="0.0415%" height="15" fill="rgb(223,19,16)" fg:x="7211" fg:w="9"/><text x="33.5725%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.3210%" y="133" width="0.0415%" height="15" fill="rgb(241,116,32)" fg:x="7220" fg:w="9"/><text x="33.6140%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.3626%" y="133" width="0.0415%" height="15" fill="rgb(244,22,24)" fg:x="7229" fg:w="9"/><text x="33.6555%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="33.4041%" y="133" width="0.0138%" height="15" fill="rgb(252,209,18)" fg:x="7238" fg:w="3"/><text x="33.6971%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="33.4179%" y="133" width="0.0462%" height="15" fill="rgb(239,80,17)" fg:x="7241" fg:w="10"/><text x="33.7109%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="33.4641%" y="133" width="0.0231%" height="15" fill="rgb(207,204,22)" fg:x="7251" fg:w="5"/><text x="33.7571%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="33.4872%" y="133" width="0.0138%" height="15" fill="rgb(247,200,8)" fg:x="7256" fg:w="3"/><text x="33.7801%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="33.2795%" y="149" width="0.6092%" height="15" fill="rgb(218,44,53)" fg:x="7211" fg:w="132"/><text x="33.5725%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="33.2795%" y="165" width="0.6553%" height="15" fill="rgb(225,167,44)" fg:x="7211" fg:w="142"/><text x="33.5725%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="33.2795%" y="181" width="0.6692%" height="15" fill="rgb(245,105,9)" fg:x="7211" fg:w="145"/><text x="33.5725%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.39%)</title><rect x="32.5826%" y="197" width="1.3938%" height="15" fill="rgb(211,170,36)" fg:x="7060" fg:w="302"/><text x="32.8756%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="33.9764%" y="149" width="0.0138%" height="15" fill="rgb(225,140,45)" fg:x="7362" fg:w="3"/><text x="34.2693%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="33.9902%" y="149" width="0.0185%" height="15" fill="rgb(253,87,4)" fg:x="7365" fg:w="4"/><text x="34.2832%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="34.0087%" y="149" width="0.0138%" height="15" fill="rgb(237,176,29)" fg:x="7369" fg:w="3"/><text x="34.3016%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="34.0225%" y="149" width="0.0185%" height="15" fill="rgb(249,198,37)" fg:x="7372" fg:w="4"/><text x="34.3155%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="34.0410%" y="149" width="0.0277%" height="15" fill="rgb(231,135,37)" fg:x="7376" fg:w="6"/><text x="34.3340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="34.0687%" y="149" width="0.0738%" height="15" fill="rgb(245,85,43)" fg:x="7382" fg:w="16"/><text x="34.3616%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.45%)</title><rect x="33.9764%" y="165" width="0.4523%" height="15" fill="rgb(220,4,35)" fg:x="7362" fg:w="98"/><text x="34.2693%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.46%)</title><rect x="33.9764%" y="181" width="0.4615%" height="15" fill="rgb(253,84,10)" fg:x="7362" fg:w="100"/><text x="34.2693%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="33.9764%" y="197" width="0.4846%" height="15" fill="rgb(209,15,51)" fg:x="7362" fg:w="105"/><text x="34.2693%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.91%)</title><rect x="34.4610%" y="165" width="1.9060%" height="15" fill="rgb(213,113,23)" fg:x="7467" fg:w="413"/><text x="34.7539%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.92%)</title><rect x="34.4610%" y="181" width="1.9245%" height="15" fill="rgb(230,64,32)" fg:x="7467" fg:w="417"/><text x="34.7539%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 2.02%)</title><rect x="34.4610%" y="197" width="2.0168%" height="15" fill="rgb(207,37,54)" fg:x="7467" fg:w="437"/><text x="34.7539%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.70%)</title><rect x="36.4778%" y="181" width="1.6984%" height="15" fill="rgb(214,204,4)" fg:x="7904" fg:w="368"/><text x="36.7707%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.72%)</title><rect x="36.4778%" y="197" width="1.7168%" height="15" fill="rgb(232,160,13)" fg:x="7904" fg:w="372"/><text x="36.7707%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,097 instructions, 37.37%)</title><rect x="2.4322%" y="213" width="37.3685%" height="15" fill="rgb(206,10,2)" fg:x="527" fg:w="8097"/><text x="2.7251%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.77%)</title><rect x="39.8006%" y="197" width="1.7676%" height="15" fill="rgb(211,216,17)" fg:x="8624" fg:w="383"/><text x="40.0936%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.77%)</title><rect x="41.5867%" y="197" width="1.7676%" height="15" fill="rgb(220,208,19)" fg:x="9011" fg:w="383"/><text x="41.8796%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.57%)</title><rect x="39.8006%" y="213" width="3.5721%" height="15" fill="rgb(229,37,33)" fg:x="8624" fg:w="774"/><text x="40.0936%" y="223.50">mem..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="43.3727%" y="149" width="0.0369%" height="15" fill="rgb(210,90,6)" fg:x="9398" fg:w="8"/><text x="43.6657%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 instructions, 0.25%)</title><rect x="43.3727%" y="165" width="0.2492%" height="15" fill="rgb(233,44,36)" fg:x="9398" fg:w="54"/><text x="43.6657%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.34%)</title><rect x="43.3727%" y="181" width="0.3369%" height="15" fill="rgb(241,115,5)" fg:x="9398" fg:w="73"/><text x="43.6657%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.7096%" y="101" width="0.0415%" height="15" fill="rgb(212,190,49)" fg:x="9471" fg:w="9"/><text x="44.0026%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.7512%" y="101" width="0.0415%" height="15" fill="rgb(228,64,46)" fg:x="9480" fg:w="9"/><text x="44.0441%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.7927%" y="101" width="0.0415%" height="15" fill="rgb(225,186,27)" fg:x="9489" fg:w="9"/><text x="44.0857%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="43.8342%" y="101" width="0.0138%" height="15" fill="rgb(213,224,52)" fg:x="9498" fg:w="3"/><text x="44.1272%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="43.8481%" y="101" width="0.0462%" height="15" fill="rgb(221,179,19)" fg:x="9501" fg:w="10"/><text x="44.1410%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="43.8942%" y="101" width="0.0231%" height="15" fill="rgb(234,41,24)" fg:x="9511" fg:w="5"/><text x="44.1872%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="43.9173%" y="101" width="0.0138%" height="15" fill="rgb(233,202,36)" fg:x="9516" fg:w="3"/><text x="44.2103%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="43.7096%" y="117" width="0.6092%" height="15" fill="rgb(222,91,12)" fg:x="9471" fg:w="132"/><text x="44.0026%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="43.7096%" y="133" width="0.6553%" height="15" fill="rgb(216,44,39)" fg:x="9471" fg:w="142"/><text x="44.0026%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="43.7096%" y="149" width="0.6692%" height="15" fill="rgb(220,118,37)" fg:x="9471" fg:w="145"/><text x="44.0026%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="43.7096%" y="165" width="0.6969%" height="15" fill="rgb(228,51,17)" fg:x="9471" fg:w="151"/><text x="44.0026%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.90%)</title><rect x="43.7096%" y="181" width="0.9046%" height="15" fill="rgb(249,63,28)" fg:x="9471" fg:w="196"/><text x="44.0026%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="44.6142%" y="149" width="0.0369%" height="15" fill="rgb(235,38,19)" fg:x="9667" fg:w="8"/><text x="44.9071%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="44.6511%" y="133" width="0.2492%" height="15" fill="rgb(219,90,49)" fg:x="9675" fg:w="54"/><text x="44.9441%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.42%)</title><rect x="44.9003%" y="133" width="0.4154%" height="15" fill="rgb(237,5,2)" fg:x="9729" fg:w="90"/><text x="45.1933%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.75%)</title><rect x="45.3157%" y="133" width="0.7523%" height="15" fill="rgb(229,89,14)" fg:x="9819" fg:w="163"/><text x="45.6086%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.57%)</title><rect x="44.6511%" y="149" width="2.5660%" height="15" fill="rgb(221,128,17)" fg:x="9675" fg:w="556"/><text x="44.9441%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.46%)</title><rect x="47.2171%" y="149" width="0.4569%" height="15" fill="rgb(226,210,53)" fg:x="10231" fg:w="99"/><text x="47.5101%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (826 instructions, 3.81%)</title><rect x="44.6142%" y="165" width="3.8121%" height="15" fill="rgb(209,115,4)" fg:x="9667" fg:w="826"/><text x="44.9071%" y="175.50">std..</text></g><g><title>candid::types::internal::env_add (853 instructions, 3.94%)</title><rect x="44.6142%" y="181" width="3.9367%" height="15" fill="rgb(235,192,26)" fg:x="9667" fg:w="853"/><text x="44.9071%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.5509%" y="101" width="0.0415%" height="15" fill="rgb(247,113,31)" fg:x="10520" fg:w="9"/><text x="48.8438%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.5924%" y="101" width="0.0415%" height="15" fill="rgb(216,5,50)" fg:x="10529" fg:w="9"/><text x="48.8854%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.6339%" y="101" width="0.0415%" height="15" fill="rgb(251,222,27)" fg:x="10538" fg:w="9"/><text x="48.9269%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="48.6755%" y="101" width="0.0138%" height="15" fill="rgb(228,18,13)" fg:x="10547" fg:w="3"/><text x="48.9684%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="48.6893%" y="101" width="0.0462%" height="15" fill="rgb(233,31,13)" fg:x="10550" fg:w="10"/><text x="48.9823%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="48.7355%" y="101" width="0.0231%" height="15" fill="rgb(211,186,50)" fg:x="10560" fg:w="5"/><text x="49.0284%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="48.7585%" y="101" width="0.0138%" height="15" fill="rgb(211,16,41)" fg:x="10565" fg:w="3"/><text x="49.0515%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="48.5509%" y="117" width="0.6092%" height="15" fill="rgb(241,89,18)" fg:x="10520" fg:w="132"/><text x="48.8438%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="48.5509%" y="133" width="0.6553%" height="15" fill="rgb(220,163,17)" fg:x="10520" fg:w="142"/><text x="48.8438%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="48.5509%" y="149" width="0.6692%" height="15" fill="rgb(224,69,5)" fg:x="10520" fg:w="145"/><text x="48.8438%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="48.5509%" y="165" width="0.6969%" height="15" fill="rgb(244,83,41)" fg:x="10520" fg:w="151"/><text x="48.8438%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.75%)</title><rect x="48.5509%" y="181" width="0.7523%" height="15" fill="rgb(250,115,43)" fg:x="10520" fg:w="163"/><text x="48.8438%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="49.3031%" y="149" width="0.0369%" height="15" fill="rgb(237,193,23)" fg:x="10683" fg:w="8"/><text x="49.5961%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="49.3400%" y="133" width="0.2492%" height="15" fill="rgb(245,208,54)" fg:x="10691" fg:w="54"/><text x="49.6330%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.42%)</title><rect x="49.5893%" y="133" width="0.4154%" height="15" fill="rgb(229,90,20)" fg:x="10745" fg:w="90"/><text x="49.8822%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.75%)</title><rect x="50.0046%" y="133" width="0.7523%" height="15" fill="rgb(249,152,30)" fg:x="10835" fg:w="163"/><text x="50.2976%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.57%)</title><rect x="49.3400%" y="149" width="2.5660%" height="15" fill="rgb(234,217,46)" fg:x="10691" fg:w="556"/><text x="49.6330%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.34%)</title><rect x="51.9060%" y="133" width="0.3415%" height="15" fill="rgb(246,218,20)" fg:x="11247" fg:w="74"/><text x="52.1990%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.36%)</title><rect x="51.9060%" y="149" width="0.3600%" height="15" fill="rgb(246,207,50)" fg:x="11247" fg:w="78"/><text x="52.1990%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="52.2660%" y="85" width="0.0138%" height="15" fill="rgb(223,214,37)" fg:x="11325" fg:w="3"/><text x="52.5590%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="52.2799%" y="85" width="0.0185%" height="15" fill="rgb(219,108,36)" fg:x="11328" fg:w="4"/><text x="52.5728%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="52.2983%" y="85" width="0.0138%" height="15" fill="rgb(226,4,23)" fg:x="11332" fg:w="3"/><text x="52.5913%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="52.3122%" y="85" width="0.0185%" height="15" fill="rgb(238,1,31)" fg:x="11335" fg:w="4"/><text x="52.6051%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="52.3306%" y="85" width="0.0277%" height="15" fill="rgb(209,111,5)" fg:x="11339" fg:w="6"/><text x="52.6236%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="52.3583%" y="85" width="0.0738%" height="15" fill="rgb(246,74,14)" fg:x="11345" fg:w="16"/><text x="52.6513%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.45%)</title><rect x="52.2660%" y="101" width="0.4523%" height="15" fill="rgb(251,181,28)" fg:x="11325" fg:w="98"/><text x="52.5590%" y="111.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.46%)</title><rect x="52.2660%" y="117" width="0.4615%" height="15" fill="rgb(219,103,46)" fg:x="11325" fg:w="100"/><text x="52.5590%" y="127.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="52.2660%" y="133" width="0.4846%" height="15" fill="rgb(222,142,27)" fg:x="11325" fg:w="105"/><text x="52.5590%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.63%)</title><rect x="52.2660%" y="149" width="0.6323%" height="15" fill="rgb(251,142,48)" fg:x="11325" fg:w="137"/><text x="52.5590%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 4.39%)</title><rect x="49.3031%" y="165" width="4.3936%" height="15" fill="rgb(250,46,48)" fg:x="10683" fg:w="952"/><text x="49.5961%" y="175.50">std:..</text></g><g><title>candid::types::internal::env_add (979 instructions, 4.52%)</title><rect x="49.3031%" y="181" width="4.5182%" height="15" fill="rgb(247,92,6)" fg:x="10683" fg:w="979"/><text x="49.5961%" y="191.50">cand..</text></g><g><title>candid::types::internal::ID::__getit (8 instructions, 0.04%)</title><rect x="53.8213%" y="149" width="0.0369%" height="15" fill="rgb(210,139,42)" fg:x="11662" fg:w="8"/><text x="54.1143%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="53.8582%" y="117" width="0.2492%" height="15" fill="rgb(236,63,2)" fg:x="11670" fg:w="54"/><text x="54.1512%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.36%)</title><rect x="53.8582%" y="133" width="0.3646%" height="15" fill="rgb(250,32,16)" fg:x="11670" fg:w="79"/><text x="54.1512%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.40%)</title><rect x="53.8582%" y="149" width="1.3984%" height="15" fill="rgb(237,201,23)" fg:x="11670" fg:w="303"/><text x="54.1512%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (18 instructions, 0.08%)</title><rect x="55.2566%" y="149" width="0.0831%" height="15" fill="rgb(243,167,7)" fg:x="11973" fg:w="18"/><text x="55.5496%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="55.3397%" y="149" width="0.0508%" height="15" fill="rgb(220,19,1)" fg:x="11991" fg:w="11"/><text x="55.6326%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (521 instructions, 2.40%)</title><rect x="53.8213%" y="165" width="2.4045%" height="15" fill="rgb(212,183,42)" fg:x="11662" fg:w="521"/><text x="54.1143%" y="175.50">s..</text></g><g><title>candid::types::internal::env_id (559 instructions, 2.58%)</title><rect x="53.8213%" y="181" width="2.5798%" height="15" fill="rgb(244,123,37)" fg:x="11662" fg:w="559"/><text x="54.1143%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,931 instructions, 13.53%)</title><rect x="43.3727%" y="197" width="13.5269%" height="15" fill="rgb(208,168,52)" fg:x="9398" fg:w="2931"/><text x="43.6657%" y="207.50">candid::types::Ca..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.18%)</title><rect x="56.8996%" y="197" width="0.1754%" height="15" fill="rgb(252,39,36)" fg:x="12329" fg:w="38"/><text x="57.1925%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="57.0749%" y="133" width="0.0138%" height="15" fill="rgb(212,56,15)" fg:x="12367" fg:w="3"/><text x="57.3679%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.0888%" y="133" width="0.0185%" height="15" fill="rgb(235,125,18)" fg:x="12370" fg:w="4"/><text x="57.3818%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="57.1073%" y="133" width="0.0138%" height="15" fill="rgb(220,184,13)" fg:x="12374" fg:w="3"/><text x="57.4002%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="57.1211%" y="133" width="0.0185%" height="15" fill="rgb(240,220,17)" fg:x="12377" fg:w="4"/><text x="57.4141%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="57.1396%" y="133" width="0.0277%" height="15" fill="rgb(207,13,54)" fg:x="12381" fg:w="6"/><text x="57.4325%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.1673%" y="133" width="0.0185%" height="15" fill="rgb(251,74,0)" fg:x="12387" fg:w="4"/><text x="57.4602%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="57.1857%" y="133" width="0.0462%" height="15" fill="rgb(207,162,47)" fg:x="12391" fg:w="10"/><text x="57.4787%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.65%)</title><rect x="57.0749%" y="149" width="0.6507%" height="15" fill="rgb(243,194,50)" fg:x="12367" fg:w="141"/><text x="57.3679%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.66%)</title><rect x="57.0749%" y="165" width="0.6600%" height="15" fill="rgb(249,193,30)" fg:x="12367" fg:w="143"/><text x="57.3679%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.68%)</title><rect x="57.0749%" y="181" width="0.6830%" height="15" fill="rgb(252,84,40)" fg:x="12367" fg:w="148"/><text x="57.3679%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="57.9057%" y="133" width="0.0138%" height="15" fill="rgb(207,197,17)" fg:x="12547" fg:w="3"/><text x="58.1986%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.9195%" y="133" width="0.0185%" height="15" fill="rgb(225,150,52)" fg:x="12550" fg:w="4"/><text x="58.2125%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="57.9380%" y="133" width="0.0138%" height="15" fill="rgb(248,207,2)" fg:x="12554" fg:w="3"/><text x="58.2309%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="57.9518%" y="133" width="0.0185%" height="15" fill="rgb(240,101,29)" fg:x="12557" fg:w="4"/><text x="58.2448%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="57.9703%" y="133" width="0.0277%" height="15" fill="rgb(211,174,54)" fg:x="12561" fg:w="6"/><text x="58.2632%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.9980%" y="133" width="0.0185%" height="15" fill="rgb(214,208,18)" fg:x="12567" fg:w="4"/><text x="58.2909%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="58.0164%" y="133" width="0.0462%" height="15" fill="rgb(217,146,29)" fg:x="12571" fg:w="10"/><text x="58.3094%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.65%)</title><rect x="57.9057%" y="149" width="0.6507%" height="15" fill="rgb(254,227,11)" fg:x="12547" fg:w="141"/><text x="58.1986%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.66%)</title><rect x="57.9057%" y="165" width="0.6600%" height="15" fill="rgb(240,219,12)" fg:x="12547" fg:w="143"/><text x="58.1986%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.68%)</title><rect x="57.9057%" y="181" width="0.6830%" height="15" fill="rgb(245,145,46)" fg:x="12547" fg:w="148"/><text x="58.1986%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.66%)</title><rect x="57.0749%" y="197" width="1.6614%" height="15" fill="rgb(250,93,33)" fg:x="12367" fg:w="360"/><text x="57.3679%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.13%)</title><rect x="58.7364%" y="181" width="0.1292%" height="15" fill="rgb(237,48,44)" fg:x="12727" fg:w="28"/><text x="59.0294%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.07%)</title><rect x="58.8656%" y="181" width="0.0738%" height="15" fill="rgb(242,22,39)" fg:x="12755" fg:w="16"/><text x="59.1586%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.07%)</title><rect x="58.9394%" y="181" width="0.0738%" height="15" fill="rgb(234,30,51)" fg:x="12771" fg:w="16"/><text x="59.2324%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (141 instructions, 0.65%)</title><rect x="58.7364%" y="197" width="0.6507%" height="15" fill="rgb(246,173,11)" fg:x="12727" fg:w="141"/><text x="59.0294%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="59.3871%" y="197" width="0.0508%" height="15" fill="rgb(229,141,22)" fg:x="12868" fg:w="11"/><text x="59.6801%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="59.4379%" y="197" width="0.0508%" height="15" fill="rgb(227,205,33)" fg:x="12879" fg:w="11"/><text x="59.7308%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="59.4886%" y="197" width="0.0508%" height="15" fill="rgb(229,66,44)" fg:x="12890" fg:w="11"/><text x="59.7816%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,675 instructions, 16.96%)</title><rect x="43.3727%" y="213" width="16.9605%" height="15" fill="rgb(218,220,26)" fg:x="9398" fg:w="3675"/><text x="43.6657%" y="223.50">candid::de::IDLDeseria..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.91%)</title><rect x="60.3332%" y="197" width="1.9060%" height="15" fill="rgb(243,82,10)" fg:x="13073" fg:w="413"/><text x="60.6262%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.92%)</title><rect x="60.3332%" y="213" width="1.9245%" height="15" fill="rgb(252,217,53)" fg:x="13073" fg:w="417"/><text x="60.6262%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="62.2577%" y="197" width="0.0877%" height="15" fill="rgb(228,200,26)" fg:x="13490" fg:w="19"/><text x="62.5507%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="62.3454%" y="149" width="0.0138%" height="15" fill="rgb(228,181,48)" fg:x="13509" fg:w="3"/><text x="62.6384%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="62.3592%" y="149" width="0.0185%" height="15" fill="rgb(231,223,29)" fg:x="13512" fg:w="4"/><text x="62.6522%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="62.3777%" y="149" width="0.0138%" height="15" fill="rgb(239,204,10)" fg:x="13516" fg:w="3"/><text x="62.6707%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="62.3915%" y="149" width="0.0185%" height="15" fill="rgb(242,193,2)" fg:x="13519" fg:w="4"/><text x="62.6845%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="62.4100%" y="149" width="0.0277%" height="15" fill="rgb(230,102,4)" fg:x="13523" fg:w="6"/><text x="62.7030%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="62.4377%" y="149" width="0.0185%" height="15" fill="rgb(217,169,39)" fg:x="13529" fg:w="4"/><text x="62.7307%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="62.4562%" y="149" width="0.0462%" height="15" fill="rgb(238,200,3)" fg:x="13533" fg:w="10"/><text x="62.7491%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.65%)</title><rect x="62.3454%" y="165" width="0.6507%" height="15" fill="rgb(211,225,40)" fg:x="13509" fg:w="141"/><text x="62.6384%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.66%)</title><rect x="62.3454%" y="181" width="0.6600%" height="15" fill="rgb(247,195,27)" fg:x="13509" fg:w="143"/><text x="62.6384%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.68%)</title><rect x="62.3454%" y="197" width="0.6830%" height="15" fill="rgb(240,105,31)" fg:x="13509" fg:w="148"/><text x="62.6384%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="63.0284%" y="133" width="0.0138%" height="15" fill="rgb(253,70,32)" fg:x="13657" fg:w="3"/><text x="63.3214%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.0423%" y="133" width="0.0185%" height="15" fill="rgb(251,106,46)" fg:x="13660" fg:w="4"/><text x="63.3352%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="63.0607%" y="133" width="0.0138%" height="15" fill="rgb(226,67,20)" fg:x="13664" fg:w="3"/><text x="63.3537%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="63.0746%" y="133" width="0.0185%" height="15" fill="rgb(227,62,52)" fg:x="13667" fg:w="4"/><text x="63.3675%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="63.0930%" y="133" width="0.0231%" height="15" fill="rgb(236,37,8)" fg:x="13671" fg:w="5"/><text x="63.3860%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="63.1161%" y="133" width="0.0138%" height="15" fill="rgb(242,25,8)" fg:x="13676" fg:w="3"/><text x="63.4091%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="63.1300%" y="133" width="0.0277%" height="15" fill="rgb(234,194,2)" fg:x="13679" fg:w="6"/><text x="63.4229%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.1577%" y="133" width="0.0185%" height="15" fill="rgb(253,50,6)" fg:x="13685" fg:w="4"/><text x="63.4506%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="63.1761%" y="133" width="0.0462%" height="15" fill="rgb(218,117,32)" fg:x="13689" fg:w="10"/><text x="63.4691%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.34%)</title><rect x="63.2223%" y="133" width="0.3415%" height="15" fill="rgb(213,141,45)" fg:x="13699" fg:w="74"/><text x="63.5152%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 1.12%)</title><rect x="63.0284%" y="149" width="1.1215%" height="15" fill="rgb(231,229,51)" fg:x="13657" fg:w="243"/><text x="63.3214%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 1.13%)</title><rect x="63.0284%" y="165" width="1.1307%" height="15" fill="rgb(233,198,7)" fg:x="13657" fg:w="245"/><text x="63.3214%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 1.15%)</title><rect x="63.0284%" y="181" width="1.1538%" height="15" fill="rgb(229,91,22)" fg:x="13657" fg:w="250"/><text x="63.3214%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 1.30%)</title><rect x="63.0284%" y="197" width="1.3015%" height="15" fill="rgb(210,204,8)" fg:x="13657" fg:w="282"/><text x="63.3214%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="64.3299%" y="197" width="0.0508%" height="15" fill="rgb(216,64,28)" fg:x="13939" fg:w="11"/><text x="64.6229%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="64.3807%" y="197" width="0.0231%" height="15" fill="rgb(248,63,8)" fg:x="13950" fg:w="5"/><text x="64.6736%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 2.59%)</title><rect x="62.2577%" y="213" width="2.5937%" height="15" fill="rgb(254,217,5)" fg:x="13490" fg:w="562"/><text x="62.5507%" y="223.50">c..</text></g><g><title>candid::utils::decode_args (13,628 instructions, 62.89%)</title><rect x="2.4322%" y="229" width="62.8946%" height="15" fill="rgb(218,176,42)" fg:x="527" fg:w="13628"/><text x="2.7251%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="65.3267%" y="181" width="0.0138%" height="15" fill="rgb(231,69,19)" fg:x="14155" fg:w="3"/><text x="65.6197%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.3406%" y="181" width="0.0185%" height="15" fill="rgb(211,104,31)" fg:x="14158" fg:w="4"/><text x="65.6336%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="65.3591%" y="181" width="0.0138%" height="15" fill="rgb(234,134,2)" fg:x="14162" fg:w="3"/><text x="65.6520%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="65.3729%" y="181" width="0.0185%" height="15" fill="rgb(225,148,30)" fg:x="14165" fg:w="4"/><text x="65.6659%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="65.3914%" y="181" width="0.0277%" height="15" fill="rgb(232,102,45)" fg:x="14169" fg:w="6"/><text x="65.6843%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.4191%" y="181" width="0.0185%" height="15" fill="rgb(246,9,11)" fg:x="14175" fg:w="4"/><text x="65.7120%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.26%)</title><rect x="65.4375%" y="181" width="0.2584%" height="15" fill="rgb(243,107,23)" fg:x="14179" fg:w="56"/><text x="65.7305%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="65.6960%" y="181" width="0.0462%" height="15" fill="rgb(237,214,42)" fg:x="14235" fg:w="10"/><text x="65.9889%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.34%)</title><rect x="65.7421%" y="181" width="0.3415%" height="15" fill="rgb(211,68,13)" fg:x="14245" fg:w="74"/><text x="66.0351%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 1.05%)</title><rect x="65.3267%" y="197" width="1.0522%" height="15" fill="rgb(214,50,6)" fg:x="14155" fg:w="228"/><text x="65.6197%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 1.06%)</title><rect x="65.3267%" y="213" width="1.0615%" height="15" fill="rgb(249,154,18)" fg:x="14155" fg:w="230"/><text x="65.6197%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 1.08%)</title><rect x="65.3267%" y="229" width="1.0845%" height="15" fill="rgb(224,37,30)" fg:x="14155" fg:w="235"/><text x="65.6197%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (14,115 instructions, 65.14%)</title><rect x="1.4584%" y="245" width="65.1421%" height="15" fill="rgb(251,122,46)" fg:x="316" fg:w="14115"/><text x="1.7513%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>hashmap::MAP::__getit (15 instructions, 0.07%)</title><rect x="66.6005%" y="229" width="0.0692%" height="15" fill="rgb(247,130,53)" fg:x="14431" fg:w="15"/><text x="66.8935%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="66.6697%" y="229" width="0.3000%" height="15" fill="rgb(234,119,18)" fg:x="14446" fg:w="65"/><text x="66.9627%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.49%)</title><rect x="66.9697%" y="229" width="0.4938%" height="15" fill="rgb(236,225,9)" fg:x="14511" fg:w="107"/><text x="67.2627%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.4635%" y="229" width="0.3000%" height="15" fill="rgb(223,174,16)" fg:x="14618" fg:w="65"/><text x="67.7565%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.7635%" y="229" width="0.3000%" height="15" fill="rgb(219,182,13)" fg:x="14683" fg:w="65"/><text x="68.0565%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.0635%" y="229" width="0.3000%" height="15" fill="rgb(230,46,6)" fg:x="14748" fg:w="65"/><text x="68.3565%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.3635%" y="229" width="0.3000%" height="15" fill="rgb(252,112,23)" fg:x="14813" fg:w="65"/><text x="68.6565%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.6635%" y="229" width="0.3000%" height="15" fill="rgb(251,112,52)" fg:x="14878" fg:w="65"/><text x="68.9564%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.9634%" y="229" width="0.3000%" height="15" fill="rgb(223,215,37)" fg:x="14943" fg:w="65"/><text x="69.2564%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="69.2634%" y="229" width="0.3000%" height="15" fill="rgb(229,226,54)" fg:x="15008" fg:w="65"/><text x="69.5564%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="69.5634%" y="229" width="0.3000%" height="15" fill="rgb(222,27,47)" fg:x="15073" fg:w="65"/><text x="69.8564%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="69.8634%" y="229" width="0.3000%" height="15" fill="rgb(236,133,42)" fg:x="15138" fg:w="65"/><text x="70.1564%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.49%)</title><rect x="70.1634%" y="229" width="0.4938%" height="15" fill="rgb(240,198,8)" fg:x="15203" fg:w="107"/><text x="70.4563%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="70.6572%" y="229" width="0.3000%" height="15" fill="rgb(220,169,38)" fg:x="15310" fg:w="65"/><text x="70.9502%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="70.9572%" y="229" width="0.3000%" height="15" fill="rgb(227,41,9)" fg:x="15375" fg:w="65"/><text x="71.2501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.2572%" y="229" width="0.3000%" height="15" fill="rgb(205,91,39)" fg:x="15440" fg:w="65"/><text x="71.5501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.5571%" y="229" width="0.3000%" height="15" fill="rgb(210,57,40)" fg:x="15505" fg:w="65"/><text x="71.8501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.8571%" y="229" width="0.3000%" height="15" fill="rgb(212,141,25)" fg:x="15570" fg:w="65"/><text x="72.1501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.1571%" y="229" width="0.3000%" height="15" fill="rgb(241,17,27)" fg:x="15635" fg:w="65"/><text x="72.4501%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.4571%" y="229" width="0.3000%" height="15" fill="rgb(252,218,24)" fg:x="15700" fg:w="65"/><text x="72.7500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.7571%" y="229" width="0.3000%" height="15" fill="rgb(206,138,34)" fg:x="15765" fg:w="65"/><text x="73.0500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.0570%" y="229" width="0.3000%" height="15" fill="rgb(249,124,48)" fg:x="15830" fg:w="65"/><text x="73.3500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.3570%" y="229" width="0.3000%" height="15" fill="rgb(213,142,39)" fg:x="15895" fg:w="65"/><text x="73.6500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.6570%" y="229" width="0.3000%" height="15" fill="rgb(249,9,24)" fg:x="15960" fg:w="65"/><text x="73.9500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.9570%" y="229" width="0.3000%" height="15" fill="rgb(232,146,14)" fg:x="16025" fg:w="65"/><text x="74.2500%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.2570%" y="229" width="0.3000%" height="15" fill="rgb(237,0,53)" fg:x="16090" fg:w="65"/><text x="74.5499%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.5570%" y="229" width="0.3000%" height="15" fill="rgb(225,225,10)" fg:x="16155" fg:w="65"/><text x="74.8499%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.8569%" y="229" width="0.3000%" height="15" fill="rgb(219,135,43)" fg:x="16220" fg:w="65"/><text x="75.1499%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.1569%" y="229" width="0.3000%" height="15" fill="rgb(220,113,12)" fg:x="16285" fg:w="65"/><text x="75.4499%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.4569%" y="229" width="0.3000%" height="15" fill="rgb(236,119,3)" fg:x="16350" fg:w="65"/><text x="75.7499%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.7569%" y="229" width="0.3000%" height="15" fill="rgb(252,60,8)" fg:x="16415" fg:w="65"/><text x="76.0498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.0569%" y="229" width="0.3000%" height="15" fill="rgb(205,39,22)" fg:x="16480" fg:w="65"/><text x="76.3498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.3568%" y="229" width="0.3000%" height="15" fill="rgb(211,14,32)" fg:x="16545" fg:w="65"/><text x="76.6498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.6568%" y="229" width="0.3000%" height="15" fill="rgb(227,148,20)" fg:x="16610" fg:w="65"/><text x="76.9498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.9568%" y="229" width="0.3000%" height="15" fill="rgb(209,84,22)" fg:x="16675" fg:w="65"/><text x="77.2498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.49%)</title><rect x="77.2568%" y="229" width="0.4938%" height="15" fill="rgb(240,183,28)" fg:x="16740" fg:w="107"/><text x="77.5498%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="77.7506%" y="229" width="0.3000%" height="15" fill="rgb(234,55,42)" fg:x="16847" fg:w="65"/><text x="78.0436%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="78.0506%" y="229" width="0.3000%" height="15" fill="rgb(218,16,5)" fg:x="16912" fg:w="65"/><text x="78.3436%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="78.3506%" y="229" width="0.3000%" height="15" fill="rgb(225,82,34)" fg:x="16977" fg:w="65"/><text x="78.6435%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="78.6505%" y="229" width="0.3000%" height="15" fill="rgb(222,89,10)" fg:x="17042" fg:w="65"/><text x="78.9435%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.49%)</title><rect x="78.9505%" y="229" width="0.4938%" height="15" fill="rgb(220,137,23)" fg:x="17107" fg:w="107"/><text x="79.2435%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.49%)</title><rect x="79.4443%" y="229" width="0.4938%" height="15" fill="rgb(210,101,29)" fg:x="17214" fg:w="107"/><text x="79.7373%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="79.9382%" y="229" width="0.3000%" height="15" fill="rgb(227,50,12)" fg:x="17321" fg:w="65"/><text x="80.2311%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.2381%" y="229" width="0.3000%" height="15" fill="rgb(228,105,21)" fg:x="17386" fg:w="65"/><text x="80.5311%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.5381%" y="229" width="0.3000%" height="15" fill="rgb(231,103,10)" fg:x="17451" fg:w="65"/><text x="80.8311%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.8381%" y="229" width="0.3000%" height="15" fill="rgb(211,121,48)" fg:x="17516" fg:w="65"/><text x="81.1311%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.1381%" y="229" width="0.3000%" height="15" fill="rgb(216,187,14)" fg:x="17581" fg:w="65"/><text x="81.4311%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.4381%" y="229" width="0.3000%" height="15" fill="rgb(224,74,53)" fg:x="17646" fg:w="65"/><text x="81.7310%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.7380%" y="229" width="0.3000%" height="15" fill="rgb(254,113,48)" fg:x="17711" fg:w="65"/><text x="82.0310%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="82.0380%" y="229" width="0.3000%" height="15" fill="rgb(209,214,41)" fg:x="17776" fg:w="65"/><text x="82.3310%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="82.3380%" y="229" width="0.3000%" height="15" fill="rgb(215,187,16)" fg:x="17841" fg:w="65"/><text x="82.6310%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,483 instructions, 25.30%)</title><rect x="66.6005%" y="245" width="25.3046%" height="15" fill="rgb(205,76,20)" fg:x="14431" fg:w="5483"/><text x="66.8935%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::w..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="91.9051%" y="213" width="0.0369%" height="15" fill="rgb(206,144,19)" fg:x="19914" fg:w="8"/><text x="92.1981%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="91.9420%" y="133" width="0.0138%" height="15" fill="rgb(226,77,6)" fg:x="19922" fg:w="3"/><text x="92.2350%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="91.9559%" y="133" width="0.0185%" height="15" fill="rgb(240,60,11)" fg:x="19925" fg:w="4"/><text x="92.2488%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="91.9743%" y="133" width="0.0138%" height="15" fill="rgb(217,28,31)" fg:x="19929" fg:w="3"/><text x="92.2673%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="91.9882%" y="133" width="0.0185%" height="15" fill="rgb(234,66,12)" fg:x="19932" fg:w="4"/><text x="92.2812%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="92.0066%" y="133" width="0.0231%" height="15" fill="rgb(205,48,27)" fg:x="19936" fg:w="5"/><text x="92.2996%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="92.0297%" y="133" width="0.0138%" height="15" fill="rgb(229,111,52)" fg:x="19941" fg:w="3"/><text x="92.3227%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.26%)</title><rect x="92.0436%" y="133" width="0.2584%" height="15" fill="rgb(212,0,16)" fg:x="19944" fg:w="56"/><text x="92.3365%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="92.3020%" y="133" width="0.0277%" height="15" fill="rgb(229,202,44)" fg:x="20000" fg:w="6"/><text x="92.5950%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="92.3297%" y="133" width="0.0462%" height="15" fill="rgb(211,170,37)" fg:x="20006" fg:w="10"/><text x="92.6227%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (159 instructions, 0.73%)</title><rect x="91.9420%" y="149" width="0.7338%" height="15" fill="rgb(213,64,20)" fg:x="19922" fg:w="159"/><text x="92.2350%" y="159.50"></text></g><g><title>__rdl_dealloc (161 instructions, 0.74%)</title><rect x="91.9420%" y="165" width="0.7430%" height="15" fill="rgb(238,28,8)" fg:x="19922" fg:w="161"/><text x="92.2350%" y="175.50"></text></g><g><title>__rust_dealloc (166 instructions, 0.77%)</title><rect x="91.9420%" y="181" width="0.7661%" height="15" fill="rgb(253,71,12)" fg:x="19922" fg:w="166"/><text x="92.2350%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (198 instructions, 0.91%)</title><rect x="91.9420%" y="197" width="0.9138%" height="15" fill="rgb(246,91,8)" fg:x="19922" fg:w="198"/><text x="92.2350%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.62%)</title><rect x="92.8558%" y="181" width="0.6230%" height="15" fill="rgb(238,45,51)" fg:x="20120" fg:w="135"/><text x="93.1488%" y="191.50"></text></g><g><title>memset (139 instructions, 0.64%)</title><rect x="92.8558%" y="197" width="0.6415%" height="15" fill="rgb(228,218,1)" fg:x="20120" fg:w="139"/><text x="93.1488%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (412 instructions, 1.90%)</title><rect x="91.9420%" y="213" width="1.9014%" height="15" fill="rgb(222,118,34)" fg:x="19922" fg:w="412"/><text x="92.2350%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (505 instructions, 2.33%)</title><rect x="91.9051%" y="229" width="2.3306%" height="15" fill="rgb(214,174,32)" fg:x="19914" fg:w="505"/><text x="92.1981%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="94.2357%" y="229" width="0.0138%" height="15" fill="rgb(233,138,35)" fg:x="20419" fg:w="3"/><text x="94.5287%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.15%)</title><rect x="94.2496%" y="197" width="0.1523%" height="15" fill="rgb(244,222,4)" fg:x="20422" fg:w="33"/><text x="94.5426%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.41%)</title><rect x="94.2496%" y="213" width="0.4061%" height="15" fill="rgb(236,97,31)" fg:x="20422" fg:w="88"/><text x="94.5426%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.6557%" y="101" width="0.0415%" height="15" fill="rgb(210,50,48)" fg:x="20510" fg:w="9"/><text x="94.9487%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.6972%" y="101" width="0.0415%" height="15" fill="rgb(231,192,18)" fg:x="20519" fg:w="9"/><text x="94.9902%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.7388%" y="101" width="0.0415%" height="15" fill="rgb(230,93,45)" fg:x="20528" fg:w="9"/><text x="95.0318%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.7803%" y="101" width="0.0138%" height="15" fill="rgb(247,67,44)" fg:x="20537" fg:w="3"/><text x="95.0733%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="94.7942%" y="101" width="0.0462%" height="15" fill="rgb(233,27,29)" fg:x="20540" fg:w="10"/><text x="95.0871%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.8403%" y="101" width="0.0231%" height="15" fill="rgb(254,39,14)" fg:x="20550" fg:w="5"/><text x="95.1333%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="94.8634%" y="101" width="0.0138%" height="15" fill="rgb(219,1,17)" fg:x="20555" fg:w="3"/><text x="95.1564%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.61%)</title><rect x="94.6557%" y="117" width="0.6092%" height="15" fill="rgb(241,27,25)" fg:x="20510" fg:w="132"/><text x="94.9487%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="94.6557%" y="133" width="0.6553%" height="15" fill="rgb(208,74,31)" fg:x="20510" fg:w="142"/><text x="94.9487%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.67%)</title><rect x="94.6557%" y="149" width="0.6692%" height="15" fill="rgb(218,220,9)" fg:x="20510" fg:w="145"/><text x="94.9487%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.70%)</title><rect x="94.6557%" y="165" width="0.6969%" height="15" fill="rgb(211,83,13)" fg:x="20510" fg:w="151"/><text x="94.9487%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.84%)</title><rect x="94.6557%" y="181" width="0.8446%" height="15" fill="rgb(245,215,38)" fg:x="20510" fg:w="183"/><text x="94.9487%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.15%)</title><rect x="94.6557%" y="197" width="1.1538%" height="15" fill="rgb(243,225,43)" fg:x="20510" fg:w="250"/><text x="94.9487%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.05%)</title><rect x="95.8095%" y="197" width="0.0462%" height="15" fill="rgb(212,88,15)" fg:x="20760" fg:w="10"/><text x="96.1025%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.8556%" y="181" width="0.0508%" height="15" fill="rgb(205,138,45)" fg:x="20770" fg:w="11"/><text x="96.1486%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.9249%" y="181" width="0.0508%" height="15" fill="rgb(250,97,33)" fg:x="20785" fg:w="11"/><text x="96.2178%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.14%)</title><rect x="95.8556%" y="197" width="0.1385%" height="15" fill="rgb(251,24,13)" fg:x="20770" fg:w="30"/><text x="96.1486%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.27%)</title><rect x="94.6557%" y="213" width="2.2706%" height="15" fill="rgb(229,204,5)" fg:x="20510" fg:w="492"/><text x="94.9487%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="96.9263%" y="213" width="0.0277%" height="15" fill="rgb(216,196,27)" fg:x="21002" fg:w="6"/><text x="97.2193%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.14%)</title><rect x="96.9540%" y="197" width="0.1431%" height="15" fill="rgb(206,61,17)" fg:x="21008" fg:w="31"/><text x="97.2470%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.40%)</title><rect x="96.9540%" y="213" width="0.3969%" height="15" fill="rgb(239,195,33)" fg:x="21008" fg:w="86"/><text x="97.2470%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.3509%" y="213" width="0.0277%" height="15" fill="rgb(235,197,13)" fg:x="21094" fg:w="6"/><text x="97.6439%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.3786%" y="213" width="0.0692%" height="15" fill="rgb(249,151,21)" fg:x="21100" fg:w="15"/><text x="97.6716%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.56%)</title><rect x="94.2496%" y="229" width="3.5629%" height="15" fill="rgb(243,23,4)" fg:x="20422" fg:w="772"/><text x="94.5426%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.8124%" y="229" width="0.0231%" height="15" fill="rgb(210,159,39)" fg:x="21194" fg:w="5"/><text x="98.1054%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.8355%" y="181" width="0.0138%" height="15" fill="rgb(250,30,5)" fg:x="21199" fg:w="3"/><text x="98.1285%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.8494%" y="181" width="0.0185%" height="15" fill="rgb(227,47,41)" fg:x="21202" fg:w="4"/><text x="98.1423%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.8678%" y="181" width="0.0138%" height="15" fill="rgb(219,174,20)" fg:x="21206" fg:w="3"/><text x="98.1608%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.8817%" y="181" width="0.0185%" height="15" fill="rgb(239,15,52)" fg:x="21209" fg:w="4"/><text x="98.1746%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.9001%" y="181" width="0.0277%" height="15" fill="rgb(214,78,37)" fg:x="21213" fg:w="6"/><text x="98.1931%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="97.9278%" y="181" width="0.0462%" height="15" fill="rgb(228,14,33)" fg:x="21219" fg:w="10"/><text x="98.2208%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="97.8355%" y="197" width="0.3231%" height="15" fill="rgb(216,131,20)" fg:x="21199" fg:w="70"/><text x="98.1285%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="97.8355%" y="213" width="0.3323%" height="15" fill="rgb(208,174,40)" fg:x="21199" fg:w="72"/><text x="98.1285%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="97.8355%" y="229" width="0.3554%" height="15" fill="rgb(223,21,8)" fg:x="21199" fg:w="77"/><text x="98.1285%" y="239.50"></text></g><g><title>candid::utils::write_args (1,438 instructions, 6.64%)</title><rect x="91.9051%" y="245" width="6.6365%" height="15" fill="rgb(252,41,36)" fg:x="19914" fg:w="1438"/><text x="92.1981%" y="255.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.5416%" y="197" width="0.0138%" height="15" fill="rgb(238,163,39)" fg:x="21352" fg:w="3"/><text x="98.8346%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.5555%" y="197" width="0.0185%" height="15" fill="rgb(254,138,3)" fg:x="21355" fg:w="4"/><text x="98.8484%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.5739%" y="197" width="0.0138%" height="15" fill="rgb(237,166,10)" fg:x="21359" fg:w="3"/><text x="98.8669%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.5878%" y="197" width="0.0185%" height="15" fill="rgb(216,90,16)" fg:x="21362" fg:w="4"/><text x="98.8807%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.6062%" y="197" width="0.0277%" height="15" fill="rgb(219,63,53)" fg:x="21366" fg:w="6"/><text x="98.8992%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="98.6339%" y="197" width="0.0738%" height="15" fill="rgb(241,42,0)" fg:x="21372" fg:w="16"/><text x="98.9269%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.45%)</title><rect x="98.5416%" y="213" width="0.4523%" height="15" fill="rgb(208,215,26)" fg:x="21352" fg:w="98"/><text x="98.8346%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.46%)</title><rect x="98.5416%" y="229" width="0.4615%" height="15" fill="rgb(243,149,46)" fg:x="21352" fg:w="100"/><text x="98.8346%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="99.0262%" y="197" width="0.0138%" height="15" fill="rgb(218,202,2)" fg:x="21457" fg:w="3"/><text x="99.3192%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="99.0401%" y="197" width="0.0185%" height="15" fill="rgb(237,88,26)" fg:x="21460" fg:w="4"/><text x="99.3330%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="99.0585%" y="197" width="0.0138%" height="15" fill="rgb(244,136,30)" fg:x="21464" fg:w="3"/><text x="99.3515%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.0724%" y="197" width="0.0185%" height="15" fill="rgb(254,187,0)" fg:x="21467" fg:w="4"/><text x="99.3653%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.0908%" y="197" width="0.0231%" height="15" fill="rgb(224,189,46)" fg:x="21471" fg:w="5"/><text x="99.3838%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.1139%" y="197" width="0.0138%" height="15" fill="rgb(245,31,53)" fg:x="21476" fg:w="3"/><text x="99.4069%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.1277%" y="197" width="0.0277%" height="15" fill="rgb(240,61,9)" fg:x="21479" fg:w="6"/><text x="99.4207%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="99.1554%" y="197" width="0.0462%" height="15" fill="rgb(239,170,54)" fg:x="21485" fg:w="10"/><text x="99.4484%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.56%)</title><rect x="99.0262%" y="213" width="0.5630%" height="15" fill="rgb(227,201,17)" fg:x="21457" fg:w="122"/><text x="99.3192%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.57%)</title><rect x="99.0262%" y="229" width="0.5723%" height="15" fill="rgb(229,183,29)" fg:x="21457" fg:w="124"/><text x="99.3192%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.08%)</title><rect x="98.5416%" y="245" width="1.0799%" height="15" fill="rgb(235,35,28)" fg:x="21352" fg:w="234"/><text x="98.8346%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (21,657 instructions, 99.95%)</title><rect x="0.0369%" y="261" width="99.9492%" height="15" fill="rgb(230,43,45)" fg:x="8" fg:w="21657"/><text x="0.3299%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (21,668 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(247,192,3)" fg:x="0" fg:w="21668"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_remove (21,668 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(213,105,54)" fg:x="0" fg:w="21668"/><text x="0.2930%" y="287.50">canister_update batch_remove</text></g></svg></svg>