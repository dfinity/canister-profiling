<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap_rs.batch_remove</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="21374"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0374%" height="15" fill="rgb(218,227,39)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0374%" y="181" width="0.0421%" height="15" fill="rgb(224,83,13)" fg:x="8" fg:w="9"/><text x="0.3304%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0795%" y="181" width="0.0421%" height="15" fill="rgb(207,145,4)" fg:x="17" fg:w="9"/><text x="0.3725%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1216%" y="181" width="0.0421%" height="15" fill="rgb(237,103,53)" fg:x="26" fg:w="9"/><text x="0.4146%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1638%" y="181" width="0.0140%" height="15" fill="rgb(207,16,52)" fg:x="35" fg:w="3"/><text x="0.4567%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.1778%" y="181" width="0.0468%" height="15" fill="rgb(236,220,54)" fg:x="38" fg:w="10"/><text x="0.4708%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2246%" y="181" width="0.0234%" height="15" fill="rgb(240,0,16)" fg:x="48" fg:w="5"/><text x="0.5175%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2480%" y="181" width="0.0140%" height="15" fill="rgb(208,100,49)" fg:x="53" fg:w="3"/><text x="0.5409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="0.0374%" y="197" width="0.6176%" height="15" fill="rgb(250,161,46)" fg:x="8" fg:w="132"/><text x="0.3304%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="0.0374%" y="213" width="0.6644%" height="15" fill="rgb(227,88,49)" fg:x="8" fg:w="142"/><text x="0.3304%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="0.0374%" y="229" width="0.6784%" height="15" fill="rgb(228,102,3)" fg:x="8" fg:w="145"/><text x="0.3304%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7439%" y="181" width="0.0421%" height="15" fill="rgb(210,81,15)" fg:x="159" fg:w="9"/><text x="1.0369%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7860%" y="181" width="0.0421%" height="15" fill="rgb(226,19,48)" fg:x="168" fg:w="9"/><text x="1.0790%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8281%" y="181" width="0.0421%" height="15" fill="rgb(210,226,9)" fg:x="177" fg:w="9"/><text x="1.1211%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.8702%" y="181" width="0.0140%" height="15" fill="rgb(241,229,52)" fg:x="186" fg:w="3"/><text x="1.1632%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.8843%" y="181" width="0.0468%" height="15" fill="rgb(230,150,22)" fg:x="189" fg:w="10"/><text x="1.1772%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.9310%" y="181" width="0.0234%" height="15" fill="rgb(222,46,8)" fg:x="199" fg:w="5"/><text x="1.2240%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.9544%" y="181" width="0.0140%" height="15" fill="rgb(210,206,5)" fg:x="204" fg:w="3"/><text x="1.2474%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="0.7439%" y="197" width="0.6176%" height="15" fill="rgb(229,30,6)" fg:x="159" fg:w="132"/><text x="1.0369%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="0.7439%" y="213" width="0.6644%" height="15" fill="rgb(206,40,12)" fg:x="159" fg:w="142"/><text x="1.0369%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="0.7439%" y="229" width="0.6784%" height="15" fill="rgb(215,177,13)" fg:x="159" fg:w="145"/><text x="1.0369%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.41%)</title><rect x="0.0374%" y="245" width="1.4129%" height="15" fill="rgb(218,21,39)" fg:x="8" fg:w="302"/><text x="0.3304%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.4504%" y="245" width="0.0281%" height="15" fill="rgb(233,173,1)" fg:x="310" fg:w="6"/><text x="1.7433%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4784%" y="149" width="0.0421%" height="15" fill="rgb(251,73,29)" fg:x="316" fg:w="9"/><text x="1.7714%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5205%" y="149" width="0.0421%" height="15" fill="rgb(254,97,39)" fg:x="325" fg:w="9"/><text x="1.8135%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5626%" y="149" width="0.0421%" height="15" fill="rgb(251,72,26)" fg:x="334" fg:w="9"/><text x="1.8556%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.6048%" y="149" width="0.0140%" height="15" fill="rgb(248,24,49)" fg:x="343" fg:w="3"/><text x="1.8977%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="1.6188%" y="149" width="0.0468%" height="15" fill="rgb(233,180,3)" fg:x="346" fg:w="10"/><text x="1.9118%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.6656%" y="149" width="0.0234%" height="15" fill="rgb(244,56,6)" fg:x="356" fg:w="5"/><text x="1.9585%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.6890%" y="149" width="0.0140%" height="15" fill="rgb(212,59,53)" fg:x="361" fg:w="3"/><text x="1.9819%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="1.4784%" y="165" width="0.6176%" height="15" fill="rgb(252,22,41)" fg:x="316" fg:w="132"/><text x="1.7714%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="1.4784%" y="181" width="0.6644%" height="15" fill="rgb(219,182,28)" fg:x="316" fg:w="142"/><text x="1.7714%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="1.4784%" y="197" width="0.6784%" height="15" fill="rgb(217,19,19)" fg:x="316" fg:w="145"/><text x="1.7714%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="1.4784%" y="213" width="0.7065%" height="15" fill="rgb(238,219,14)" fg:x="316" fg:w="151"/><text x="1.7714%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (209 instructions, 0.98%)</title><rect x="1.4784%" y="229" width="0.9778%" height="15" fill="rgb(208,151,18)" fg:x="316" fg:w="209"/><text x="1.7714%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="2.4609%" y="181" width="0.2948%" height="15" fill="rgb(212,68,0)" fg:x="526" fg:w="63"/><text x="2.7539%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.7557%" y="117" width="0.0281%" height="15" fill="rgb(226,200,6)" fg:x="589" fg:w="6"/><text x="3.0487%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="2.7557%" y="133" width="0.0468%" height="15" fill="rgb(210,80,17)" fg:x="589" fg:w="10"/><text x="3.0487%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.03%)</title><rect x="2.7557%" y="149" width="2.0258%" height="15" fill="rgb(223,157,19)" fg:x="589" fg:w="433"/><text x="3.0487%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.36%)</title><rect x="4.7815%" y="149" width="0.3556%" height="15" fill="rgb(236,153,51)" fg:x="1022" fg:w="76"/><text x="5.0745%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.1371%" y="149" width="0.2433%" height="15" fill="rgb(221,45,42)" fg:x="1098" fg:w="52"/><text x="5.4301%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.3804%" y="149" width="0.2433%" height="15" fill="rgb(211,50,45)" fg:x="1150" fg:w="52"/><text x="5.6733%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.6237%" y="149" width="0.2433%" height="15" fill="rgb(243,227,8)" fg:x="1202" fg:w="52"/><text x="5.9166%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.8669%" y="149" width="0.2433%" height="15" fill="rgb(249,166,0)" fg:x="1254" fg:w="52"/><text x="6.1599%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (859 instructions, 4.02%)</title><rect x="2.7557%" y="181" width="4.0189%" height="15" fill="rgb(235,214,31)" fg:x="589" fg:w="859"/><text x="3.0487%" y="191.50">bin..</text></g><g><title> 4]&gt;::read_options (859 instructions, 4.02%)</title><rect x="2.7557%" y="165" width="4.0189%" height="15" fill="rgb(242,43,41)" fg:x="589" fg:w="859"/><text x="3.0487%" y="175.50"> 4]..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="6.7746%" y="181" width="0.2948%" height="15" fill="rgb(237,19,0)" fg:x="1448" fg:w="63"/><text x="7.0676%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.36%)</title><rect x="7.0693%" y="165" width="0.3603%" height="15" fill="rgb(244,169,3)" fg:x="1511" fg:w="77"/><text x="7.3623%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.49%)</title><rect x="7.0693%" y="181" width="0.4866%" height="15" fill="rgb(217,156,37)" fg:x="1511" fg:w="104"/><text x="7.3623%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="7.5559%" y="133" width="0.0281%" height="15" fill="rgb(249,106,9)" fg:x="1615" fg:w="6"/><text x="7.8489%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="7.5559%" y="149" width="0.0468%" height="15" fill="rgb(254,128,2)" fg:x="1615" fg:w="10"/><text x="7.8489%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.03%)</title><rect x="7.5559%" y="165" width="2.0258%" height="15" fill="rgb(250,123,5)" fg:x="1615" fg:w="433"/><text x="7.8489%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="9.5817%" y="149" width="0.0842%" height="15" fill="rgb(244,136,40)" fg:x="2048" fg:w="18"/><text x="9.8747%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="9.5817%" y="165" width="0.1029%" height="15" fill="rgb(241,201,5)" fg:x="2048" fg:w="22"/><text x="9.8747%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.6847%" y="69" width="0.0421%" height="15" fill="rgb(205,57,42)" fg:x="2070" fg:w="9"/><text x="9.9776%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.7268%" y="69" width="0.0421%" height="15" fill="rgb(216,116,37)" fg:x="2079" fg:w="9"/><text x="10.0197%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.7689%" y="69" width="0.0421%" height="15" fill="rgb(250,113,23)" fg:x="2088" fg:w="9"/><text x="10.0618%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="9.8110%" y="69" width="0.0140%" height="15" fill="rgb(223,70,51)" fg:x="2097" fg:w="3"/><text x="10.1040%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="9.8250%" y="69" width="0.0468%" height="15" fill="rgb(221,113,39)" fg:x="2100" fg:w="10"/><text x="10.1180%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="9.8718%" y="69" width="0.0234%" height="15" fill="rgb(254,72,26)" fg:x="2110" fg:w="5"/><text x="10.1648%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="9.8952%" y="69" width="0.0140%" height="15" fill="rgb(216,15,5)" fg:x="2115" fg:w="3"/><text x="10.1882%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="9.6847%" y="85" width="0.6176%" height="15" fill="rgb(234,157,23)" fg:x="2070" fg:w="132"/><text x="9.9776%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="9.6847%" y="101" width="0.6644%" height="15" fill="rgb(220,77,19)" fg:x="2070" fg:w="142"/><text x="9.9776%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="9.6847%" y="117" width="0.6784%" height="15" fill="rgb(224,152,1)" fg:x="2070" fg:w="145"/><text x="9.9776%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="9.6847%" y="133" width="0.7065%" height="15" fill="rgb(234,66,37)" fg:x="2070" fg:w="151"/><text x="9.9776%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.28%)</title><rect x="10.3911%" y="85" width="0.2807%" height="15" fill="rgb(223,194,50)" fg:x="2221" fg:w="60"/><text x="10.6841%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.30%)</title><rect x="10.3911%" y="101" width="0.2994%" height="15" fill="rgb(218,111,20)" fg:x="2221" fg:w="64"/><text x="10.6841%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.42%)</title><rect x="10.3911%" y="117" width="0.4164%" height="15" fill="rgb(230,162,2)" fg:x="2221" fg:w="89"/><text x="10.6841%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="10.8075%" y="69" width="0.0468%" height="15" fill="rgb(248,90,50)" fg:x="2310" fg:w="10"/><text x="11.1005%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="10.8543%" y="37" width="0.1404%" height="15" fill="rgb(211,119,7)" fg:x="2320" fg:w="30"/><text x="11.1473%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="10.8543%" y="53" width="0.1591%" height="15" fill="rgb(232,35,44)" fg:x="2320" fg:w="34"/><text x="11.1473%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.28%)</title><rect x="10.8543%" y="69" width="0.2760%" height="15" fill="rgb(207,201,13)" fg:x="2320" fg:w="59"/><text x="11.1473%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.56%)</title><rect x="10.8075%" y="85" width="0.5568%" height="15" fill="rgb(209,227,42)" fg:x="2310" fg:w="119"/><text x="11.1005%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.81%)</title><rect x="10.8075%" y="101" width="0.8141%" height="15" fill="rgb(224,58,41)" fg:x="2310" fg:w="174"/><text x="11.1005%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.84%)</title><rect x="10.8075%" y="117" width="0.8375%" height="15" fill="rgb(237,151,7)" fg:x="2310" fg:w="179"/><text x="11.1005%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.77%)</title><rect x="10.3911%" y="133" width="1.7732%" height="15" fill="rgb(253,60,14)" fg:x="2221" fg:w="379"/><text x="10.6841%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.15%)</title><rect x="9.6847%" y="149" width="3.1487%" height="15" fill="rgb(223,74,50)" fg:x="2070" fg:w="673"/><text x="9.9776%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.36%)</title><rect x="12.8333%" y="149" width="0.3556%" height="15" fill="rgb(205,73,38)" fg:x="2743" fg:w="76"/><text x="13.1263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="13.1889%" y="101" width="0.0140%" height="15" fill="rgb(218,131,11)" fg:x="2819" fg:w="3"/><text x="13.4819%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="13.2030%" y="101" width="0.0187%" height="15" fill="rgb(225,15,42)" fg:x="2822" fg:w="4"/><text x="13.4959%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="13.2217%" y="101" width="0.0140%" height="15" fill="rgb(224,133,7)" fg:x="2826" fg:w="3"/><text x="13.5146%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="13.2357%" y="101" width="0.0187%" height="15" fill="rgb(232,141,40)" fg:x="2829" fg:w="4"/><text x="13.5287%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="13.2544%" y="101" width="0.0281%" height="15" fill="rgb(240,177,18)" fg:x="2833" fg:w="6"/><text x="13.5474%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="13.2825%" y="101" width="0.0468%" height="15" fill="rgb(253,2,22)" fg:x="2839" fg:w="10"/><text x="13.5755%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.33%)</title><rect x="13.1889%" y="117" width="0.3275%" height="15" fill="rgb(250,114,19)" fg:x="2819" fg:w="70"/><text x="13.4819%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.34%)</title><rect x="13.1889%" y="133" width="0.3369%" height="15" fill="rgb(209,85,28)" fg:x="2819" fg:w="72"/><text x="13.4819%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="13.1889%" y="149" width="0.3603%" height="15" fill="rgb(205,113,16)" fg:x="2819" fg:w="77"/><text x="13.4819%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.20%)</title><rect x="9.6847%" y="165" width="4.1967%" height="15" fill="rgb(216,88,22)" fg:x="2070" fg:w="897"/><text x="9.9776%" y="175.50">binr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="13.8814%" y="165" width="0.1170%" height="15" fill="rgb(212,77,48)" fg:x="2967" fg:w="25"/><text x="14.1743%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,525 instructions, 7.13%)</title><rect x="7.5559%" y="181" width="7.1348%" height="15" fill="rgb(210,165,7)" fg:x="1615" fg:w="1525"/><text x="7.8489%" y="191.50">binread:..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.27%)</title><rect x="14.6907%" y="181" width="0.2714%" height="15" fill="rgb(232,129,33)" fg:x="3140" fg:w="58"/><text x="14.9837%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.36%)</title><rect x="14.9621%" y="165" width="0.3603%" height="15" fill="rgb(225,109,16)" fg:x="3198" fg:w="77"/><text x="15.2551%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.49%)</title><rect x="14.9621%" y="181" width="0.4866%" height="15" fill="rgb(230,70,26)" fg:x="3198" fg:w="104"/><text x="15.2551%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="15.4487%" y="133" width="0.0281%" height="15" fill="rgb(245,73,5)" fg:x="3302" fg:w="6"/><text x="15.7416%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="15.4487%" y="149" width="0.0468%" height="15" fill="rgb(216,116,14)" fg:x="3302" fg:w="10"/><text x="15.7416%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.03%)</title><rect x="15.4487%" y="165" width="2.0258%" height="15" fill="rgb(233,10,25)" fg:x="3302" fg:w="433"/><text x="15.7416%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="17.4745%" y="149" width="0.0842%" height="15" fill="rgb(244,63,47)" fg:x="3735" fg:w="18"/><text x="17.7675%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="17.4745%" y="165" width="0.1029%" height="15" fill="rgb(207,114,41)" fg:x="3735" fg:w="22"/><text x="17.7675%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.5774%" y="69" width="0.0421%" height="15" fill="rgb(240,87,22)" fg:x="3757" fg:w="9"/><text x="17.8704%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.6195%" y="69" width="0.0421%" height="15" fill="rgb(251,84,20)" fg:x="3766" fg:w="9"/><text x="17.9125%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.6616%" y="69" width="0.0421%" height="15" fill="rgb(221,67,2)" fg:x="3775" fg:w="9"/><text x="17.9546%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="17.7038%" y="69" width="0.0140%" height="15" fill="rgb(207,9,30)" fg:x="3784" fg:w="3"/><text x="17.9967%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="17.7178%" y="69" width="0.0468%" height="15" fill="rgb(221,61,36)" fg:x="3787" fg:w="10"/><text x="18.0108%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="17.7646%" y="69" width="0.0234%" height="15" fill="rgb(211,50,0)" fg:x="3797" fg:w="5"/><text x="18.0575%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="17.7880%" y="69" width="0.0140%" height="15" fill="rgb(217,192,4)" fg:x="3802" fg:w="3"/><text x="18.0809%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="17.5774%" y="85" width="0.6176%" height="15" fill="rgb(215,110,46)" fg:x="3757" fg:w="132"/><text x="17.8704%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="17.5774%" y="101" width="0.6644%" height="15" fill="rgb(211,214,36)" fg:x="3757" fg:w="142"/><text x="17.8704%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="17.5774%" y="117" width="0.6784%" height="15" fill="rgb(216,29,6)" fg:x="3757" fg:w="145"/><text x="17.8704%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="17.5774%" y="133" width="0.7065%" height="15" fill="rgb(205,148,49)" fg:x="3757" fg:w="151"/><text x="17.8704%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.28%)</title><rect x="18.2839%" y="85" width="0.2807%" height="15" fill="rgb(239,202,13)" fg:x="3908" fg:w="60"/><text x="18.5769%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.30%)</title><rect x="18.2839%" y="101" width="0.2994%" height="15" fill="rgb(235,117,5)" fg:x="3908" fg:w="64"/><text x="18.5769%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.42%)</title><rect x="18.2839%" y="117" width="0.4164%" height="15" fill="rgb(244,132,37)" fg:x="3908" fg:w="89"/><text x="18.5769%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="18.7003%" y="69" width="0.0468%" height="15" fill="rgb(214,16,1)" fg:x="3997" fg:w="10"/><text x="18.9933%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="18.7471%" y="37" width="0.1404%" height="15" fill="rgb(232,144,19)" fg:x="4007" fg:w="30"/><text x="19.0400%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="18.7471%" y="53" width="0.1591%" height="15" fill="rgb(208,198,44)" fg:x="4007" fg:w="34"/><text x="19.0400%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.28%)</title><rect x="18.7471%" y="69" width="0.2760%" height="15" fill="rgb(235,33,31)" fg:x="4007" fg:w="59"/><text x="19.0400%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.56%)</title><rect x="18.7003%" y="85" width="0.5568%" height="15" fill="rgb(253,138,48)" fg:x="3997" fg:w="119"/><text x="18.9933%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.81%)</title><rect x="18.7003%" y="101" width="0.8141%" height="15" fill="rgb(234,205,43)" fg:x="3997" fg:w="174"/><text x="18.9933%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.84%)</title><rect x="18.7003%" y="117" width="0.8375%" height="15" fill="rgb(251,76,21)" fg:x="3997" fg:w="179"/><text x="18.9933%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.77%)</title><rect x="18.2839%" y="133" width="1.7732%" height="15" fill="rgb(206,66,38)" fg:x="3908" fg:w="379"/><text x="18.5769%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.15%)</title><rect x="17.5774%" y="149" width="3.1487%" height="15" fill="rgb(230,186,53)" fg:x="3757" fg:w="673"/><text x="17.8704%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.36%)</title><rect x="20.7261%" y="149" width="0.3556%" height="15" fill="rgb(253,90,6)" fg:x="4430" fg:w="76"/><text x="21.0191%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="21.0817%" y="101" width="0.0140%" height="15" fill="rgb(237,39,30)" fg:x="4506" fg:w="3"/><text x="21.3747%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="21.0957%" y="101" width="0.0187%" height="15" fill="rgb(247,170,24)" fg:x="4509" fg:w="4"/><text x="21.3887%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="21.1144%" y="101" width="0.0140%" height="15" fill="rgb(228,166,54)" fg:x="4513" fg:w="3"/><text x="21.4074%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="21.1285%" y="101" width="0.0187%" height="15" fill="rgb(210,32,27)" fg:x="4516" fg:w="4"/><text x="21.4214%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="21.1472%" y="101" width="0.0281%" height="15" fill="rgb(211,201,14)" fg:x="4520" fg:w="6"/><text x="21.4402%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="21.1753%" y="101" width="0.0468%" height="15" fill="rgb(218,114,26)" fg:x="4526" fg:w="10"/><text x="21.4682%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.33%)</title><rect x="21.0817%" y="117" width="0.3275%" height="15" fill="rgb(240,1,3)" fg:x="4506" fg:w="70"/><text x="21.3747%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.34%)</title><rect x="21.0817%" y="133" width="0.3369%" height="15" fill="rgb(213,158,31)" fg:x="4506" fg:w="72"/><text x="21.3747%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="21.0817%" y="149" width="0.3603%" height="15" fill="rgb(238,37,37)" fg:x="4506" fg:w="77"/><text x="21.3747%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.20%)</title><rect x="17.5774%" y="165" width="4.1967%" height="15" fill="rgb(234,144,49)" fg:x="3757" fg:w="897"/><text x="17.8704%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="21.7741%" y="133" width="0.2948%" height="15" fill="rgb(210,113,45)" fg:x="4654" fg:w="63"/><text x="22.0671%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.51%)</title><rect x="22.0689%" y="117" width="0.5146%" height="15" fill="rgb(232,95,7)" fg:x="4717" fg:w="110"/><text x="22.3618%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.64%)</title><rect x="22.0689%" y="133" width="0.6410%" height="15" fill="rgb(220,88,14)" fg:x="4717" fg:w="137"/><text x="22.3618%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.27%)</title><rect x="22.7098%" y="133" width="0.2714%" height="15" fill="rgb(240,94,6)" fg:x="4854" fg:w="58"/><text x="23.0028%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (314 instructions, 1.47%)</title><rect x="21.7741%" y="149" width="1.4691%" height="15" fill="rgb(207,32,9)" fg:x="4654" fg:w="314"/><text x="22.0671%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.2432%" y="85" width="0.0421%" height="15" fill="rgb(209,188,34)" fg:x="4968" fg:w="9"/><text x="23.5362%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.2853%" y="85" width="0.0421%" height="15" fill="rgb(216,210,54)" fg:x="4977" fg:w="9"/><text x="23.5783%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="23.3274%" y="85" width="0.0421%" height="15" fill="rgb(205,27,34)" fg:x="4986" fg:w="9"/><text x="23.6204%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="23.3695%" y="85" width="0.0140%" height="15" fill="rgb(218,94,5)" fg:x="4995" fg:w="3"/><text x="23.6625%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="23.3836%" y="85" width="0.0468%" height="15" fill="rgb(211,146,30)" fg:x="4998" fg:w="10"/><text x="23.6765%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="23.4303%" y="85" width="0.0234%" height="15" fill="rgb(242,40,9)" fg:x="5008" fg:w="5"/><text x="23.7233%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="23.4537%" y="85" width="0.0140%" height="15" fill="rgb(225,123,30)" fg:x="5013" fg:w="3"/><text x="23.7467%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="23.2432%" y="101" width="0.6176%" height="15" fill="rgb(240,133,22)" fg:x="4968" fg:w="132"/><text x="23.5362%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="23.2432%" y="117" width="0.6644%" height="15" fill="rgb(231,200,14)" fg:x="4968" fg:w="142"/><text x="23.5362%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="23.2432%" y="133" width="0.6784%" height="15" fill="rgb(233,147,54)" fg:x="4968" fg:w="145"/><text x="23.5362%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="23.2432%" y="149" width="0.7065%" height="15" fill="rgb(218,23,13)" fg:x="4968" fg:w="151"/><text x="23.5362%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (550 instructions, 2.57%)</title><rect x="21.7741%" y="165" width="2.5732%" height="15" fill="rgb(230,44,30)" fg:x="4654" fg:w="550"/><text x="22.0671%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,050 instructions, 9.59%)</title><rect x="15.4487%" y="181" width="9.5911%" height="15" fill="rgb(240,57,31)" fg:x="3302" fg:w="2050"/><text x="15.7416%" y="191.50">binread::bi..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.27%)</title><rect x="25.0398%" y="181" width="0.2714%" height="15" fill="rgb(229,92,43)" fg:x="5352" fg:w="58"/><text x="25.3327%" y="191.50"></text></g><g><title>binread::BinRead::read (5,102 instructions, 23.87%)</title><rect x="2.4563%" y="197" width="23.8701%" height="15" fill="rgb(249,41,47)" fg:x="525" fg:w="5102"/><text x="2.7492%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="26.3264%" y="181" width="0.0655%" height="15" fill="rgb(225,137,44)" fg:x="5627" fg:w="14"/><text x="26.6193%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="26.3919%" y="165" width="0.0655%" height="15" fill="rgb(241,141,8)" fg:x="5641" fg:w="14"/><text x="26.6848%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="26.4574%" y="165" width="0.1170%" height="15" fill="rgb(240,96,17)" fg:x="5655" fg:w="25"/><text x="26.7503%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="26.5743%" y="165" width="0.0889%" height="15" fill="rgb(224,161,6)" fg:x="5680" fg:w="19"/><text x="26.8673%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (210 instructions, 0.98%)</title><rect x="26.3919%" y="181" width="0.9825%" height="15" fill="rgb(210,150,1)" fg:x="5641" fg:w="210"/><text x="26.6848%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.3744%" y="101" width="0.0421%" height="15" fill="rgb(232,124,20)" fg:x="5851" fg:w="9"/><text x="27.6673%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.4165%" y="101" width="0.0421%" height="15" fill="rgb(249,186,40)" fg:x="5860" fg:w="9"/><text x="27.7095%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.4586%" y="101" width="0.0421%" height="15" fill="rgb(247,138,33)" fg:x="5869" fg:w="9"/><text x="27.7516%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="27.5007%" y="101" width="0.0140%" height="15" fill="rgb(235,40,47)" fg:x="5878" fg:w="3"/><text x="27.7937%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="27.5147%" y="101" width="0.0468%" height="15" fill="rgb(231,128,16)" fg:x="5881" fg:w="10"/><text x="27.8077%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="27.5615%" y="101" width="0.0234%" height="15" fill="rgb(251,36,26)" fg:x="5891" fg:w="5"/><text x="27.8545%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="27.5849%" y="101" width="0.0140%" height="15" fill="rgb(236,125,44)" fg:x="5896" fg:w="3"/><text x="27.8779%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="27.3744%" y="117" width="0.6176%" height="15" fill="rgb(233,151,21)" fg:x="5851" fg:w="132"/><text x="27.6673%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="27.3744%" y="133" width="0.6644%" height="15" fill="rgb(239,73,50)" fg:x="5851" fg:w="142"/><text x="27.6673%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="27.3744%" y="149" width="0.6784%" height="15" fill="rgb(219,99,2)" fg:x="5851" fg:w="145"/><text x="27.6673%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="27.3744%" y="165" width="0.7065%" height="15" fill="rgb(206,8,1)" fg:x="5851" fg:w="151"/><text x="27.6673%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.09%)</title><rect x="27.3744%" y="181" width="1.0854%" height="15" fill="rgb(254,122,27)" fg:x="5851" fg:w="232"/><text x="27.6673%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.4598%" y="85" width="0.0421%" height="15" fill="rgb(254,36,32)" fg:x="6083" fg:w="9"/><text x="28.7528%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.5019%" y="85" width="0.0421%" height="15" fill="rgb(212,121,53)" fg:x="6092" fg:w="9"/><text x="28.7949%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.07%)</title><rect x="28.5440%" y="85" width="0.0655%" height="15" fill="rgb(223,19,16)" fg:x="6101" fg:w="14"/><text x="28.8370%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="28.6095%" y="85" width="0.0140%" height="15" fill="rgb(241,116,32)" fg:x="6115" fg:w="3"/><text x="28.9025%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.55%)</title><rect x="28.4598%" y="101" width="0.5474%" height="15" fill="rgb(244,22,24)" fg:x="6083" fg:w="117"/><text x="28.7528%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.59%)</title><rect x="28.4598%" y="117" width="0.5942%" height="15" fill="rgb(252,209,18)" fg:x="6083" fg:w="127"/><text x="28.7528%" y="127.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.61%)</title><rect x="28.4598%" y="133" width="0.6082%" height="15" fill="rgb(239,80,17)" fg:x="6083" fg:w="130"/><text x="28.7528%" y="143.50"></text></g><g><title>__rust_alloc (136 instructions, 0.64%)</title><rect x="28.4598%" y="149" width="0.6363%" height="15" fill="rgb(207,204,22)" fg:x="6083" fg:w="136"/><text x="28.7528%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.79%)</title><rect x="28.4598%" y="165" width="0.7860%" height="15" fill="rgb(247,200,8)" fg:x="6083" fg:w="168"/><text x="28.7528%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (238 instructions, 1.11%)</title><rect x="28.4598%" y="181" width="1.1135%" height="15" fill="rgb(218,44,53)" fg:x="6083" fg:w="238"/><text x="28.7528%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (921 instructions, 4.31%)</title><rect x="26.3264%" y="197" width="4.3090%" height="15" fill="rgb(225,167,44)" fg:x="5627" fg:w="921"/><text x="26.6193%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.6354%" y="117" width="0.0421%" height="15" fill="rgb(245,105,9)" fg:x="6548" fg:w="9"/><text x="30.9283%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.6775%" y="117" width="0.0421%" height="15" fill="rgb(211,170,36)" fg:x="6557" fg:w="9"/><text x="30.9704%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.7196%" y="117" width="0.0421%" height="15" fill="rgb(225,140,45)" fg:x="6566" fg:w="9"/><text x="31.0125%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="30.7617%" y="117" width="0.0140%" height="15" fill="rgb(253,87,4)" fg:x="6575" fg:w="3"/><text x="31.0546%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="30.7757%" y="117" width="0.0468%" height="15" fill="rgb(237,176,29)" fg:x="6578" fg:w="10"/><text x="31.0687%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="30.8225%" y="117" width="0.0234%" height="15" fill="rgb(249,198,37)" fg:x="6588" fg:w="5"/><text x="31.1155%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="30.8459%" y="117" width="0.0140%" height="15" fill="rgb(231,135,37)" fg:x="6593" fg:w="3"/><text x="31.1389%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="30.6354%" y="133" width="0.6176%" height="15" fill="rgb(245,85,43)" fg:x="6548" fg:w="132"/><text x="30.9283%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="30.6354%" y="149" width="0.6644%" height="15" fill="rgb(220,4,35)" fg:x="6548" fg:w="142"/><text x="30.9283%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="30.6354%" y="165" width="0.6784%" height="15" fill="rgb(253,84,10)" fg:x="6548" fg:w="145"/><text x="30.9283%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="30.6354%" y="181" width="0.7065%" height="15" fill="rgb(209,15,51)" fg:x="6548" fg:w="151"/><text x="30.9283%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="31.3418%" y="133" width="0.0140%" height="15" fill="rgb(213,113,23)" fg:x="6699" fg:w="3"/><text x="31.6348%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="31.3559%" y="133" width="0.0187%" height="15" fill="rgb(230,64,32)" fg:x="6702" fg:w="4"/><text x="31.6488%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="31.3746%" y="133" width="0.0140%" height="15" fill="rgb(207,37,54)" fg:x="6706" fg:w="3"/><text x="31.6675%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="31.3886%" y="133" width="0.0187%" height="15" fill="rgb(214,204,4)" fg:x="6709" fg:w="4"/><text x="31.6816%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="31.4073%" y="133" width="0.0281%" height="15" fill="rgb(232,160,13)" fg:x="6713" fg:w="6"/><text x="31.7003%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="31.4354%" y="133" width="0.0749%" height="15" fill="rgb(206,10,2)" fg:x="6719" fg:w="16"/><text x="31.7284%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.46%)</title><rect x="31.3418%" y="149" width="0.4585%" height="15" fill="rgb(211,216,17)" fg:x="6699" fg:w="98"/><text x="31.6348%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.47%)</title><rect x="31.3418%" y="165" width="0.4679%" height="15" fill="rgb(220,208,19)" fg:x="6699" fg:w="100"/><text x="31.6348%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.49%)</title><rect x="31.3418%" y="181" width="0.4913%" height="15" fill="rgb(229,37,33)" fg:x="6699" fg:w="105"/><text x="31.6348%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.73%)</title><rect x="30.6354%" y="197" width="1.7311%" height="15" fill="rgb(210,90,6)" fg:x="6548" fg:w="370"/><text x="30.9283%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.3664%" y="133" width="0.0421%" height="15" fill="rgb(233,44,36)" fg:x="6918" fg:w="9"/><text x="32.6594%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.4085%" y="133" width="0.0421%" height="15" fill="rgb(241,115,5)" fg:x="6927" fg:w="9"/><text x="32.7015%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.4506%" y="133" width="0.0421%" height="15" fill="rgb(212,190,49)" fg:x="6936" fg:w="9"/><text x="32.7436%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.4927%" y="133" width="0.0140%" height="15" fill="rgb(228,64,46)" fg:x="6945" fg:w="3"/><text x="32.7857%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="32.5068%" y="133" width="0.0468%" height="15" fill="rgb(225,186,27)" fg:x="6948" fg:w="10"/><text x="32.7998%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.5536%" y="133" width="0.0234%" height="15" fill="rgb(213,224,52)" fg:x="6958" fg:w="5"/><text x="32.8465%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.5770%" y="133" width="0.0140%" height="15" fill="rgb(221,179,19)" fg:x="6963" fg:w="3"/><text x="32.8699%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="32.3664%" y="149" width="0.6176%" height="15" fill="rgb(234,41,24)" fg:x="6918" fg:w="132"/><text x="32.6594%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="32.3664%" y="165" width="0.6644%" height="15" fill="rgb(233,202,36)" fg:x="6918" fg:w="142"/><text x="32.6594%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="32.3664%" y="181" width="0.6784%" height="15" fill="rgb(222,91,12)" fg:x="6918" fg:w="145"/><text x="32.6594%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.0729%" y="133" width="0.0421%" height="15" fill="rgb(216,44,39)" fg:x="7069" fg:w="9"/><text x="33.3659%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.1150%" y="133" width="0.0421%" height="15" fill="rgb(220,118,37)" fg:x="7078" fg:w="9"/><text x="33.4080%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.1571%" y="133" width="0.0421%" height="15" fill="rgb(228,51,17)" fg:x="7087" fg:w="9"/><text x="33.4501%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="33.1992%" y="133" width="0.0140%" height="15" fill="rgb(249,63,28)" fg:x="7096" fg:w="3"/><text x="33.4922%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="33.2132%" y="133" width="0.0468%" height="15" fill="rgb(235,38,19)" fg:x="7099" fg:w="10"/><text x="33.5062%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="33.2600%" y="133" width="0.0234%" height="15" fill="rgb(219,90,49)" fg:x="7109" fg:w="5"/><text x="33.5530%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="33.2834%" y="133" width="0.0140%" height="15" fill="rgb(237,5,2)" fg:x="7114" fg:w="3"/><text x="33.5764%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="33.0729%" y="149" width="0.6176%" height="15" fill="rgb(229,89,14)" fg:x="7069" fg:w="132"/><text x="33.3659%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="33.0729%" y="165" width="0.6644%" height="15" fill="rgb(221,128,17)" fg:x="7069" fg:w="142"/><text x="33.3659%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="33.0729%" y="181" width="0.6784%" height="15" fill="rgb(226,210,53)" fg:x="7069" fg:w="145"/><text x="33.3659%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.41%)</title><rect x="32.3664%" y="197" width="1.4129%" height="15" fill="rgb(209,115,4)" fg:x="6918" fg:w="302"/><text x="32.6594%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (15 instructions, 0.07%)</title><rect x="33.7794%" y="197" width="0.0702%" height="15" fill="rgb(235,192,26)" fg:x="7220" fg:w="15"/><text x="34.0723%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="33.8495%" y="149" width="0.0140%" height="15" fill="rgb(247,113,31)" fg:x="7235" fg:w="3"/><text x="34.1425%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="33.8636%" y="149" width="0.0187%" height="15" fill="rgb(216,5,50)" fg:x="7238" fg:w="4"/><text x="34.1565%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="33.8823%" y="149" width="0.0140%" height="15" fill="rgb(251,222,27)" fg:x="7242" fg:w="3"/><text x="34.1753%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="33.8963%" y="149" width="0.0187%" height="15" fill="rgb(228,18,13)" fg:x="7245" fg:w="4"/><text x="34.1893%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="33.9150%" y="149" width="0.0281%" height="15" fill="rgb(233,31,13)" fg:x="7249" fg:w="6"/><text x="34.2080%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="33.9431%" y="149" width="0.0749%" height="15" fill="rgb(211,186,50)" fg:x="7255" fg:w="16"/><text x="34.2361%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.46%)</title><rect x="33.8495%" y="165" width="0.4585%" height="15" fill="rgb(211,16,41)" fg:x="7235" fg:w="98"/><text x="34.1425%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.47%)</title><rect x="33.8495%" y="181" width="0.4679%" height="15" fill="rgb(241,89,18)" fg:x="7235" fg:w="100"/><text x="34.1425%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.49%)</title><rect x="33.8495%" y="197" width="0.4913%" height="15" fill="rgb(220,163,17)" fg:x="7235" fg:w="105"/><text x="34.1425%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.93%)</title><rect x="34.3408%" y="165" width="1.9323%" height="15" fill="rgb(224,69,5)" fg:x="7340" fg:w="413"/><text x="34.6338%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.95%)</title><rect x="34.3408%" y="181" width="1.9510%" height="15" fill="rgb(244,83,41)" fg:x="7340" fg:w="417"/><text x="34.6338%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 2.04%)</title><rect x="34.3408%" y="197" width="2.0445%" height="15" fill="rgb(250,115,43)" fg:x="7340" fg:w="437"/><text x="34.6338%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.72%)</title><rect x="36.3853%" y="181" width="1.7217%" height="15" fill="rgb(237,193,23)" fg:x="7777" fg:w="368"/><text x="36.6783%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.74%)</title><rect x="36.3853%" y="197" width="1.7404%" height="15" fill="rgb(245,208,54)" fg:x="7777" fg:w="372"/><text x="36.6783%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,969 instructions, 37.28%)</title><rect x="2.4563%" y="213" width="37.2836%" height="15" fill="rgb(229,90,20)" fg:x="525" fg:w="7969"/><text x="2.7492%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.79%)</title><rect x="39.7399%" y="197" width="1.7919%" height="15" fill="rgb(249,152,30)" fg:x="8494" fg:w="383"/><text x="40.0328%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.79%)</title><rect x="41.5505%" y="197" width="1.7919%" height="15" fill="rgb(234,217,46)" fg:x="8881" fg:w="383"/><text x="41.8435%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.62%)</title><rect x="39.7399%" y="213" width="3.6212%" height="15" fill="rgb(246,218,20)" fg:x="8494" fg:w="774"/><text x="40.0328%" y="223.50">mem..</text></g><g><title>candid::types::internal::find_type (38 instructions, 0.18%)</title><rect x="43.3611%" y="181" width="0.1778%" height="15" fill="rgb(246,207,50)" fg:x="9268" fg:w="38"/><text x="43.6541%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.5389%" y="101" width="0.0421%" height="15" fill="rgb(223,214,37)" fg:x="9306" fg:w="9"/><text x="43.8318%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.5810%" y="101" width="0.0421%" height="15" fill="rgb(219,108,36)" fg:x="9315" fg:w="9"/><text x="43.8740%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="43.6231%" y="101" width="0.0421%" height="15" fill="rgb(226,4,23)" fg:x="9324" fg:w="9"/><text x="43.9161%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="43.6652%" y="101" width="0.0140%" height="15" fill="rgb(238,1,31)" fg:x="9333" fg:w="3"/><text x="43.9582%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="43.6792%" y="101" width="0.0468%" height="15" fill="rgb(209,111,5)" fg:x="9336" fg:w="10"/><text x="43.9722%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="43.7260%" y="101" width="0.0234%" height="15" fill="rgb(246,74,14)" fg:x="9346" fg:w="5"/><text x="44.0190%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="43.7494%" y="101" width="0.0140%" height="15" fill="rgb(251,181,28)" fg:x="9351" fg:w="3"/><text x="44.0424%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="43.5389%" y="117" width="0.6176%" height="15" fill="rgb(219,103,46)" fg:x="9306" fg:w="132"/><text x="43.8318%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="43.5389%" y="133" width="0.6644%" height="15" fill="rgb(222,142,27)" fg:x="9306" fg:w="142"/><text x="43.8318%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="43.5389%" y="149" width="0.6784%" height="15" fill="rgb(251,142,48)" fg:x="9306" fg:w="145"/><text x="43.8318%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="43.5389%" y="165" width="0.7065%" height="15" fill="rgb(250,46,48)" fg:x="9306" fg:w="151"/><text x="43.8318%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.92%)</title><rect x="43.5389%" y="181" width="0.9170%" height="15" fill="rgb(247,92,6)" fg:x="9306" fg:w="196"/><text x="43.8318%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="44.4559%" y="133" width="0.2526%" height="15" fill="rgb(210,139,42)" fg:x="9502" fg:w="54"/><text x="44.7488%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.42%)</title><rect x="44.7085%" y="133" width="0.4211%" height="15" fill="rgb(236,63,2)" fg:x="9556" fg:w="90"/><text x="45.0015%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.76%)</title><rect x="45.1296%" y="133" width="0.7626%" height="15" fill="rgb(250,32,16)" fg:x="9646" fg:w="163"/><text x="45.4226%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.60%)</title><rect x="44.4559%" y="149" width="2.6013%" height="15" fill="rgb(237,201,23)" fg:x="9502" fg:w="556"/><text x="44.7488%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.46%)</title><rect x="47.0572%" y="149" width="0.4632%" height="15" fill="rgb(243,167,7)" fg:x="10058" fg:w="99"/><text x="47.3501%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (760 instructions, 3.56%)</title><rect x="44.4559%" y="165" width="3.5557%" height="15" fill="rgb(220,19,1)" fg:x="9502" fg:w="760"/><text x="44.7488%" y="175.50">has..</text></g><g><title>candid::types::internal::env_add (813 instructions, 3.80%)</title><rect x="44.4559%" y="181" width="3.8037%" height="15" fill="rgb(212,183,42)" fg:x="9502" fg:w="813"/><text x="44.7488%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.2596%" y="101" width="0.0421%" height="15" fill="rgb(244,123,37)" fg:x="10315" fg:w="9"/><text x="48.5525%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.3017%" y="101" width="0.0421%" height="15" fill="rgb(208,168,52)" fg:x="10324" fg:w="9"/><text x="48.5946%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="48.3438%" y="101" width="0.0421%" height="15" fill="rgb(252,39,36)" fg:x="10333" fg:w="9"/><text x="48.6368%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="48.3859%" y="101" width="0.0140%" height="15" fill="rgb(212,56,15)" fg:x="10342" fg:w="3"/><text x="48.6789%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="48.3999%" y="101" width="0.0468%" height="15" fill="rgb(235,125,18)" fg:x="10345" fg:w="10"/><text x="48.6929%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="48.4467%" y="101" width="0.0234%" height="15" fill="rgb(220,184,13)" fg:x="10355" fg:w="5"/><text x="48.7397%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="48.4701%" y="101" width="0.0140%" height="15" fill="rgb(240,220,17)" fg:x="10360" fg:w="3"/><text x="48.7631%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="48.2596%" y="117" width="0.6176%" height="15" fill="rgb(207,13,54)" fg:x="10315" fg:w="132"/><text x="48.5525%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="48.2596%" y="133" width="0.6644%" height="15" fill="rgb(251,74,0)" fg:x="10315" fg:w="142"/><text x="48.5525%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="48.2596%" y="149" width="0.6784%" height="15" fill="rgb(207,162,47)" fg:x="10315" fg:w="145"/><text x="48.5525%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="48.2596%" y="165" width="0.7065%" height="15" fill="rgb(243,194,50)" fg:x="10315" fg:w="151"/><text x="48.5525%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.76%)</title><rect x="48.2596%" y="181" width="0.7626%" height="15" fill="rgb(249,193,30)" fg:x="10315" fg:w="163"/><text x="48.5525%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="49.0222%" y="133" width="0.2526%" height="15" fill="rgb(252,84,40)" fg:x="10478" fg:w="54"/><text x="49.3151%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.42%)</title><rect x="49.2748%" y="133" width="0.4211%" height="15" fill="rgb(207,197,17)" fg:x="10532" fg:w="90"/><text x="49.5678%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.76%)</title><rect x="49.6959%" y="133" width="0.7626%" height="15" fill="rgb(225,150,52)" fg:x="10622" fg:w="163"/><text x="49.9889%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.60%)</title><rect x="49.0222%" y="149" width="2.6013%" height="15" fill="rgb(248,207,2)" fg:x="10478" fg:w="556"/><text x="49.3151%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.35%)</title><rect x="51.6235%" y="133" width="0.3462%" height="15" fill="rgb(240,101,29)" fg:x="11034" fg:w="74"/><text x="51.9164%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.36%)</title><rect x="51.6235%" y="149" width="0.3649%" height="15" fill="rgb(211,174,54)" fg:x="11034" fg:w="78"/><text x="51.9164%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (743 instructions, 3.48%)</title><rect x="49.0222%" y="165" width="3.4762%" height="15" fill="rgb(214,208,18)" fg:x="10478" fg:w="743"/><text x="49.3151%" y="175.50">has..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="52.4984%" y="101" width="0.0140%" height="15" fill="rgb(217,146,29)" fg:x="11221" fg:w="3"/><text x="52.7913%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="52.5124%" y="101" width="0.0187%" height="15" fill="rgb(254,227,11)" fg:x="11224" fg:w="4"/><text x="52.8054%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="52.5311%" y="101" width="0.0140%" height="15" fill="rgb(240,219,12)" fg:x="11228" fg:w="3"/><text x="52.8241%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="52.5451%" y="101" width="0.0187%" height="15" fill="rgb(245,145,46)" fg:x="11231" fg:w="4"/><text x="52.8381%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="52.5639%" y="101" width="0.0281%" height="15" fill="rgb(250,93,33)" fg:x="11235" fg:w="6"/><text x="52.8568%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="52.5919%" y="101" width="0.0749%" height="15" fill="rgb(237,48,44)" fg:x="11241" fg:w="16"/><text x="52.8849%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.46%)</title><rect x="52.4984%" y="117" width="0.4585%" height="15" fill="rgb(242,22,39)" fg:x="11221" fg:w="98"/><text x="52.7913%" y="127.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.47%)</title><rect x="52.4984%" y="133" width="0.4679%" height="15" fill="rgb(234,30,51)" fg:x="11221" fg:w="100"/><text x="52.7913%" y="143.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.49%)</title><rect x="52.4984%" y="149" width="0.4913%" height="15" fill="rgb(246,173,11)" fg:x="11221" fg:w="105"/><text x="52.7913%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.64%)</title><rect x="52.4984%" y="165" width="0.6410%" height="15" fill="rgb(229,141,22)" fg:x="11221" fg:w="137"/><text x="52.7913%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 4.38%)</title><rect x="49.0222%" y="181" width="4.3838%" height="15" fill="rgb(227,205,33)" fg:x="10478" fg:w="937"/><text x="49.3151%" y="191.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.25%)</title><rect x="53.4060%" y="133" width="0.2526%" height="15" fill="rgb(229,66,44)" fg:x="11415" fg:w="54"/><text x="53.6990%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.37%)</title><rect x="53.4060%" y="149" width="0.3696%" height="15" fill="rgb(218,220,26)" fg:x="11415" fg:w="79"/><text x="53.6990%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.42%)</title><rect x="53.4060%" y="165" width="1.4176%" height="15" fill="rgb(243,82,10)" fg:x="11415" fg:w="303"/><text x="53.6990%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (35 instructions, 0.16%)</title><rect x="54.8236%" y="165" width="0.1638%" height="15" fill="rgb(252,217,53)" fg:x="11718" fg:w="35"/><text x="55.1166%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="54.9874%" y="165" width="0.0515%" height="15" fill="rgb(228,200,26)" fg:x="11753" fg:w="11"/><text x="55.2803%" y="175.50"></text></g><g><title>candid::types::internal::env_id (506 instructions, 2.37%)</title><rect x="53.4060%" y="181" width="2.3674%" height="15" fill="rgb(228,181,48)" fg:x="11415" fg:w="506"/><text x="53.6990%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,761 instructions, 12.92%)</title><rect x="43.3611%" y="197" width="12.9176%" height="15" fill="rgb(231,223,29)" fg:x="9268" fg:w="2761"/><text x="43.6541%" y="207.50">candid::types::C..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.18%)</title><rect x="56.2787%" y="197" width="0.1778%" height="15" fill="rgb(239,204,10)" fg:x="12029" fg:w="38"/><text x="56.5716%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="56.4564%" y="133" width="0.0140%" height="15" fill="rgb(242,193,2)" fg:x="12067" fg:w="3"/><text x="56.7494%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="56.4705%" y="133" width="0.0187%" height="15" fill="rgb(230,102,4)" fg:x="12070" fg:w="4"/><text x="56.7634%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="56.4892%" y="133" width="0.0140%" height="15" fill="rgb(217,169,39)" fg:x="12074" fg:w="3"/><text x="56.7822%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="56.5032%" y="133" width="0.0187%" height="15" fill="rgb(238,200,3)" fg:x="12077" fg:w="4"/><text x="56.7962%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="56.5219%" y="133" width="0.0281%" height="15" fill="rgb(211,225,40)" fg:x="12081" fg:w="6"/><text x="56.8149%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="56.5500%" y="133" width="0.0187%" height="15" fill="rgb(247,195,27)" fg:x="12087" fg:w="4"/><text x="56.8430%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="56.5687%" y="133" width="0.0468%" height="15" fill="rgb(240,105,31)" fg:x="12091" fg:w="10"/><text x="56.8617%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.66%)</title><rect x="56.4564%" y="149" width="0.6597%" height="15" fill="rgb(253,70,32)" fg:x="12067" fg:w="141"/><text x="56.7494%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.67%)</title><rect x="56.4564%" y="165" width="0.6690%" height="15" fill="rgb(251,106,46)" fg:x="12067" fg:w="143"/><text x="56.7494%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.69%)</title><rect x="56.4564%" y="181" width="0.6924%" height="15" fill="rgb(226,67,20)" fg:x="12067" fg:w="148"/><text x="56.7494%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="57.2986%" y="133" width="0.0140%" height="15" fill="rgb(227,62,52)" fg:x="12247" fg:w="3"/><text x="57.5916%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.3126%" y="133" width="0.0187%" height="15" fill="rgb(236,37,8)" fg:x="12250" fg:w="4"/><text x="57.6056%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="57.3313%" y="133" width="0.0140%" height="15" fill="rgb(242,25,8)" fg:x="12254" fg:w="3"/><text x="57.6243%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="57.3454%" y="133" width="0.0187%" height="15" fill="rgb(234,194,2)" fg:x="12257" fg:w="4"/><text x="57.6383%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="57.3641%" y="133" width="0.0281%" height="15" fill="rgb(253,50,6)" fg:x="12261" fg:w="6"/><text x="57.6571%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="57.3922%" y="133" width="0.0187%" height="15" fill="rgb(218,117,32)" fg:x="12267" fg:w="4"/><text x="57.6851%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="57.4109%" y="133" width="0.0468%" height="15" fill="rgb(213,141,45)" fg:x="12271" fg:w="10"/><text x="57.7038%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.66%)</title><rect x="57.2986%" y="149" width="0.6597%" height="15" fill="rgb(231,229,51)" fg:x="12247" fg:w="141"/><text x="57.5916%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.67%)</title><rect x="57.2986%" y="165" width="0.6690%" height="15" fill="rgb(233,198,7)" fg:x="12247" fg:w="143"/><text x="57.5916%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.69%)</title><rect x="57.2986%" y="181" width="0.6924%" height="15" fill="rgb(229,91,22)" fg:x="12247" fg:w="148"/><text x="57.5916%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.68%)</title><rect x="56.4564%" y="197" width="1.6843%" height="15" fill="rgb(210,204,8)" fg:x="12067" fg:w="360"/><text x="56.7494%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.13%)</title><rect x="58.1407%" y="181" width="0.1310%" height="15" fill="rgb(216,64,28)" fg:x="12427" fg:w="28"/><text x="58.4337%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.12%)</title><rect x="58.2717%" y="181" width="0.1170%" height="15" fill="rgb(248,63,8)" fg:x="12455" fg:w="25"/><text x="58.5647%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.12%)</title><rect x="58.3887%" y="181" width="0.1170%" height="15" fill="rgb(254,217,5)" fg:x="12480" fg:w="25"/><text x="58.6817%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (159 instructions, 0.74%)</title><rect x="58.1407%" y="197" width="0.7439%" height="15" fill="rgb(218,176,42)" fg:x="12427" fg:w="159"/><text x="58.4337%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="58.8846%" y="197" width="0.0515%" height="15" fill="rgb(231,69,19)" fg:x="12586" fg:w="11"/><text x="59.1776%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="58.9361%" y="197" width="0.0515%" height="15" fill="rgb(211,104,31)" fg:x="12597" fg:w="11"/><text x="59.2291%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="58.9876%" y="197" width="0.0515%" height="15" fill="rgb(234,134,2)" fg:x="12608" fg:w="11"/><text x="59.2805%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,519 instructions, 16.46%)</title><rect x="43.3611%" y="213" width="16.4639%" height="15" fill="rgb(225,148,30)" fg:x="9268" fg:w="3519"/><text x="43.6541%" y="223.50">candid::de::IDLDeseri..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.93%)</title><rect x="59.8250%" y="197" width="1.9323%" height="15" fill="rgb(232,102,45)" fg:x="12787" fg:w="413"/><text x="60.1180%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.95%)</title><rect x="59.8250%" y="213" width="1.9510%" height="15" fill="rgb(246,9,11)" fg:x="12787" fg:w="417"/><text x="60.1180%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="61.7760%" y="197" width="0.0889%" height="15" fill="rgb(243,107,23)" fg:x="13204" fg:w="19"/><text x="62.0690%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="61.8649%" y="149" width="0.0140%" height="15" fill="rgb(237,214,42)" fg:x="13223" fg:w="3"/><text x="62.1579%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="61.8789%" y="149" width="0.0187%" height="15" fill="rgb(211,68,13)" fg:x="13226" fg:w="4"/><text x="62.1719%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="61.8976%" y="149" width="0.0140%" height="15" fill="rgb(214,50,6)" fg:x="13230" fg:w="3"/><text x="62.1906%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="61.9117%" y="149" width="0.0187%" height="15" fill="rgb(249,154,18)" fg:x="13233" fg:w="4"/><text x="62.2046%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="61.9304%" y="149" width="0.0281%" height="15" fill="rgb(224,37,30)" fg:x="13237" fg:w="6"/><text x="62.2234%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="61.9585%" y="149" width="0.0187%" height="15" fill="rgb(251,122,46)" fg:x="13243" fg:w="4"/><text x="62.2514%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="61.9772%" y="149" width="0.0468%" height="15" fill="rgb(247,130,53)" fg:x="13247" fg:w="10"/><text x="62.2701%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.66%)</title><rect x="61.8649%" y="165" width="0.6597%" height="15" fill="rgb(234,119,18)" fg:x="13223" fg:w="141"/><text x="62.1579%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.67%)</title><rect x="61.8649%" y="181" width="0.6690%" height="15" fill="rgb(236,225,9)" fg:x="13223" fg:w="143"/><text x="62.1579%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.69%)</title><rect x="61.8649%" y="197" width="0.6924%" height="15" fill="rgb(223,174,16)" fg:x="13223" fg:w="148"/><text x="62.1579%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="62.5573%" y="133" width="0.0140%" height="15" fill="rgb(219,182,13)" fg:x="13371" fg:w="3"/><text x="62.8503%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="62.5713%" y="133" width="0.0187%" height="15" fill="rgb(230,46,6)" fg:x="13374" fg:w="4"/><text x="62.8643%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="62.5901%" y="133" width="0.0140%" height="15" fill="rgb(252,112,23)" fg:x="13378" fg:w="3"/><text x="62.8830%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="62.6041%" y="133" width="0.0187%" height="15" fill="rgb(251,112,52)" fg:x="13381" fg:w="4"/><text x="62.8971%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="62.6228%" y="133" width="0.0234%" height="15" fill="rgb(223,215,37)" fg:x="13385" fg:w="5"/><text x="62.9158%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="62.6462%" y="133" width="0.0140%" height="15" fill="rgb(229,226,54)" fg:x="13390" fg:w="3"/><text x="62.9392%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="62.6602%" y="133" width="0.0281%" height="15" fill="rgb(222,27,47)" fg:x="13393" fg:w="6"/><text x="62.9532%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="62.6883%" y="133" width="0.0187%" height="15" fill="rgb(236,133,42)" fg:x="13399" fg:w="4"/><text x="62.9813%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="62.7070%" y="133" width="0.0468%" height="15" fill="rgb(240,198,8)" fg:x="13403" fg:w="10"/><text x="63.0000%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.35%)</title><rect x="62.7538%" y="133" width="0.3462%" height="15" fill="rgb(220,169,38)" fg:x="13413" fg:w="74"/><text x="63.0468%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 1.14%)</title><rect x="62.5573%" y="149" width="1.1369%" height="15" fill="rgb(227,41,9)" fg:x="13371" fg:w="243"/><text x="62.8503%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 1.15%)</title><rect x="62.5573%" y="165" width="1.1463%" height="15" fill="rgb(205,91,39)" fg:x="13371" fg:w="245"/><text x="62.8503%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 1.17%)</title><rect x="62.5573%" y="181" width="1.1696%" height="15" fill="rgb(210,57,40)" fg:x="13371" fg:w="250"/><text x="62.8503%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 1.32%)</title><rect x="62.5573%" y="197" width="1.3194%" height="15" fill="rgb(212,141,25)" fg:x="13371" fg:w="282"/><text x="62.8503%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="63.8767%" y="197" width="0.0515%" height="15" fill="rgb(241,17,27)" fg:x="13653" fg:w="11"/><text x="64.1696%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="63.9281%" y="197" width="0.0234%" height="15" fill="rgb(252,218,24)" fg:x="13664" fg:w="5"/><text x="64.2211%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 2.63%)</title><rect x="61.7760%" y="213" width="2.6294%" height="15" fill="rgb(206,138,34)" fg:x="13204" fg:w="562"/><text x="62.0690%" y="223.50">c..</text></g><g><title>candid::utils::decode_args (13,344 instructions, 62.43%)</title><rect x="2.4563%" y="229" width="62.4310%" height="15" fill="rgb(249,124,48)" fg:x="525" fg:w="13344"/><text x="2.7492%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="64.8872%" y="181" width="0.0140%" height="15" fill="rgb(213,142,39)" fg:x="13869" fg:w="3"/><text x="65.1802%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="64.9013%" y="181" width="0.0187%" height="15" fill="rgb(249,9,24)" fg:x="13872" fg:w="4"/><text x="65.1943%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="64.9200%" y="181" width="0.0140%" height="15" fill="rgb(232,146,14)" fg:x="13876" fg:w="3"/><text x="65.2130%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="64.9340%" y="181" width="0.0187%" height="15" fill="rgb(237,0,53)" fg:x="13879" fg:w="4"/><text x="65.2270%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="64.9527%" y="181" width="0.0281%" height="15" fill="rgb(225,225,10)" fg:x="13883" fg:w="6"/><text x="65.2457%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="64.9808%" y="181" width="0.0187%" height="15" fill="rgb(219,135,43)" fg:x="13889" fg:w="4"/><text x="65.2738%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.26%)</title><rect x="64.9995%" y="181" width="0.2620%" height="15" fill="rgb(220,113,12)" fg:x="13893" fg:w="56"/><text x="65.2925%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="65.2615%" y="181" width="0.0468%" height="15" fill="rgb(236,119,3)" fg:x="13949" fg:w="10"/><text x="65.5545%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.35%)</title><rect x="65.3083%" y="181" width="0.3462%" height="15" fill="rgb(252,60,8)" fg:x="13959" fg:w="74"/><text x="65.6013%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 1.07%)</title><rect x="64.8872%" y="197" width="1.0667%" height="15" fill="rgb(205,39,22)" fg:x="13869" fg:w="228"/><text x="65.1802%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 1.08%)</title><rect x="64.8872%" y="213" width="1.0761%" height="15" fill="rgb(211,14,32)" fg:x="13869" fg:w="230"/><text x="65.1802%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 1.10%)</title><rect x="64.8872%" y="229" width="1.0995%" height="15" fill="rgb(227,148,20)" fg:x="13869" fg:w="235"/><text x="65.1802%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,829 instructions, 64.70%)</title><rect x="1.4784%" y="245" width="64.7001%" height="15" fill="rgb(209,84,22)" fg:x="316" fg:w="13829"/><text x="1.7714%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>hashmap::MAP::__getit (13 instructions, 0.06%)</title><rect x="66.1785%" y="229" width="0.0608%" height="15" fill="rgb(240,183,28)" fg:x="14145" fg:w="13"/><text x="66.4715%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="66.2394%" y="229" width="0.3041%" height="15" fill="rgb(234,55,42)" fg:x="14158" fg:w="65"/><text x="66.5323%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.50%)</title><rect x="66.5435%" y="229" width="0.5006%" height="15" fill="rgb(218,16,5)" fg:x="14223" fg:w="107"/><text x="66.8364%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.0441%" y="229" width="0.3041%" height="15" fill="rgb(225,82,34)" fg:x="14330" fg:w="65"/><text x="67.3370%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.3482%" y="229" width="0.3041%" height="15" fill="rgb(222,89,10)" fg:x="14395" fg:w="65"/><text x="67.6411%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.6523%" y="229" width="0.3041%" height="15" fill="rgb(220,137,23)" fg:x="14460" fg:w="65"/><text x="67.9453%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="67.9564%" y="229" width="0.3041%" height="15" fill="rgb(210,101,29)" fg:x="14525" fg:w="65"/><text x="68.2494%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.2605%" y="229" width="0.3041%" height="15" fill="rgb(227,50,12)" fg:x="14590" fg:w="65"/><text x="68.5535%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.5646%" y="229" width="0.3041%" height="15" fill="rgb(228,105,21)" fg:x="14655" fg:w="65"/><text x="68.8576%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="68.8687%" y="229" width="0.3041%" height="15" fill="rgb(231,103,10)" fg:x="14720" fg:w="65"/><text x="69.1617%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="69.1728%" y="229" width="0.3041%" height="15" fill="rgb(211,121,48)" fg:x="14785" fg:w="65"/><text x="69.4658%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="69.4769%" y="229" width="0.3041%" height="15" fill="rgb(216,187,14)" fg:x="14850" fg:w="65"/><text x="69.7699%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.50%)</title><rect x="69.7810%" y="229" width="0.5006%" height="15" fill="rgb(224,74,53)" fg:x="14915" fg:w="107"/><text x="70.0740%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="70.2817%" y="229" width="0.3041%" height="15" fill="rgb(254,113,48)" fg:x="15022" fg:w="65"/><text x="70.5746%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="70.5858%" y="229" width="0.3041%" height="15" fill="rgb(209,214,41)" fg:x="15087" fg:w="65"/><text x="70.8787%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="70.8899%" y="229" width="0.3041%" height="15" fill="rgb(215,187,16)" fg:x="15152" fg:w="65"/><text x="71.1828%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.1940%" y="229" width="0.3041%" height="15" fill="rgb(205,76,20)" fg:x="15217" fg:w="65"/><text x="71.4869%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.4981%" y="229" width="0.3041%" height="15" fill="rgb(206,144,19)" fg:x="15282" fg:w="65"/><text x="71.7911%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="71.8022%" y="229" width="0.3041%" height="15" fill="rgb(226,77,6)" fg:x="15347" fg:w="65"/><text x="72.0952%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.1063%" y="229" width="0.3041%" height="15" fill="rgb(240,60,11)" fg:x="15412" fg:w="65"/><text x="72.3993%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.4104%" y="229" width="0.3041%" height="15" fill="rgb(217,28,31)" fg:x="15477" fg:w="65"/><text x="72.7034%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="72.7145%" y="229" width="0.3041%" height="15" fill="rgb(234,66,12)" fg:x="15542" fg:w="65"/><text x="73.0075%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.0186%" y="229" width="0.3041%" height="15" fill="rgb(205,48,27)" fg:x="15607" fg:w="65"/><text x="73.3116%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.3227%" y="229" width="0.3041%" height="15" fill="rgb(229,111,52)" fg:x="15672" fg:w="65"/><text x="73.6157%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.6268%" y="229" width="0.3041%" height="15" fill="rgb(212,0,16)" fg:x="15737" fg:w="65"/><text x="73.9198%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="73.9309%" y="229" width="0.3041%" height="15" fill="rgb(229,202,44)" fg:x="15802" fg:w="65"/><text x="74.2239%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.2351%" y="229" width="0.3041%" height="15" fill="rgb(211,170,37)" fg:x="15867" fg:w="65"/><text x="74.5280%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.5392%" y="229" width="0.3041%" height="15" fill="rgb(213,64,20)" fg:x="15932" fg:w="65"/><text x="74.8321%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="74.8433%" y="229" width="0.3041%" height="15" fill="rgb(238,28,8)" fg:x="15997" fg:w="65"/><text x="75.1362%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.1474%" y="229" width="0.3041%" height="15" fill="rgb(253,71,12)" fg:x="16062" fg:w="65"/><text x="75.4403%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.4515%" y="229" width="0.3041%" height="15" fill="rgb(246,91,8)" fg:x="16127" fg:w="65"/><text x="75.7445%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="75.7556%" y="229" width="0.3041%" height="15" fill="rgb(238,45,51)" fg:x="16192" fg:w="65"/><text x="76.0486%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.0597%" y="229" width="0.3041%" height="15" fill="rgb(228,218,1)" fg:x="16257" fg:w="65"/><text x="76.3527%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.3638%" y="229" width="0.3041%" height="15" fill="rgb(222,118,34)" fg:x="16322" fg:w="65"/><text x="76.6568%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="76.6679%" y="229" width="0.3041%" height="15" fill="rgb(214,174,32)" fg:x="16387" fg:w="65"/><text x="76.9609%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.50%)</title><rect x="76.9720%" y="229" width="0.5006%" height="15" fill="rgb(233,138,35)" fg:x="16452" fg:w="107"/><text x="77.2650%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="77.4726%" y="229" width="0.3041%" height="15" fill="rgb(244,222,4)" fg:x="16559" fg:w="65"/><text x="77.7656%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="77.7767%" y="229" width="0.3041%" height="15" fill="rgb(236,97,31)" fg:x="16624" fg:w="65"/><text x="78.0697%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="78.0808%" y="229" width="0.3041%" height="15" fill="rgb(210,50,48)" fg:x="16689" fg:w="65"/><text x="78.3738%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="78.3850%" y="229" width="0.3041%" height="15" fill="rgb(231,192,18)" fg:x="16754" fg:w="65"/><text x="78.6779%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.50%)</title><rect x="78.6891%" y="229" width="0.5006%" height="15" fill="rgb(230,93,45)" fg:x="16819" fg:w="107"/><text x="78.9820%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (107 instructions, 0.50%)</title><rect x="79.1897%" y="229" width="0.5006%" height="15" fill="rgb(247,67,44)" fg:x="16926" fg:w="107"/><text x="79.4826%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="79.6903%" y="229" width="0.3041%" height="15" fill="rgb(233,27,29)" fg:x="17033" fg:w="65"/><text x="79.9832%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="79.9944%" y="229" width="0.3041%" height="15" fill="rgb(254,39,14)" fg:x="17098" fg:w="65"/><text x="80.2874%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.2985%" y="229" width="0.3041%" height="15" fill="rgb(219,1,17)" fg:x="17163" fg:w="65"/><text x="80.5915%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.6026%" y="229" width="0.3041%" height="15" fill="rgb(241,27,25)" fg:x="17228" fg:w="65"/><text x="80.8956%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="80.9067%" y="229" width="0.3041%" height="15" fill="rgb(208,74,31)" fg:x="17293" fg:w="65"/><text x="81.1997%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.2108%" y="229" width="0.3041%" height="15" fill="rgb(218,220,9)" fg:x="17358" fg:w="65"/><text x="81.5038%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.5149%" y="229" width="0.3041%" height="15" fill="rgb(211,83,13)" fg:x="17423" fg:w="65"/><text x="81.8079%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="81.8190%" y="229" width="0.3041%" height="15" fill="rgb(245,215,38)" fg:x="17488" fg:w="65"/><text x="82.1120%" y="239.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (65 instructions, 0.30%)</title><rect x="82.1231%" y="229" width="0.3041%" height="15" fill="rgb(243,225,43)" fg:x="17553" fg:w="65"/><text x="82.4161%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,477 instructions, 25.62%)</title><rect x="66.1785%" y="245" width="25.6246%" height="15" fill="rgb(212,88,15)" fg:x="14145" fg:w="5477"/><text x="66.4715%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::wi..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="91.8031%" y="133" width="0.0140%" height="15" fill="rgb(205,138,45)" fg:x="19622" fg:w="3"/><text x="92.0961%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="91.8172%" y="133" width="0.0187%" height="15" fill="rgb(250,97,33)" fg:x="19625" fg:w="4"/><text x="92.1101%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="91.8359%" y="133" width="0.0140%" height="15" fill="rgb(251,24,13)" fg:x="19629" fg:w="3"/><text x="92.1288%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="91.8499%" y="133" width="0.0187%" height="15" fill="rgb(229,204,5)" fg:x="19632" fg:w="4"/><text x="92.1429%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="91.8686%" y="133" width="0.0234%" height="15" fill="rgb(216,196,27)" fg:x="19636" fg:w="5"/><text x="92.1616%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="91.8920%" y="133" width="0.0140%" height="15" fill="rgb(206,61,17)" fg:x="19641" fg:w="3"/><text x="92.1850%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.26%)</title><rect x="91.9061%" y="133" width="0.2620%" height="15" fill="rgb(239,195,33)" fg:x="19644" fg:w="56"/><text x="92.1990%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="92.1681%" y="133" width="0.0281%" height="15" fill="rgb(235,197,13)" fg:x="19700" fg:w="6"/><text x="92.4610%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="92.1961%" y="133" width="0.0468%" height="15" fill="rgb(249,151,21)" fg:x="19706" fg:w="10"/><text x="92.4891%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (159 instructions, 0.74%)</title><rect x="91.8031%" y="149" width="0.7439%" height="15" fill="rgb(243,23,4)" fg:x="19622" fg:w="159"/><text x="92.0961%" y="159.50"></text></g><g><title>__rdl_dealloc (161 instructions, 0.75%)</title><rect x="91.8031%" y="165" width="0.7533%" height="15" fill="rgb(210,159,39)" fg:x="19622" fg:w="161"/><text x="92.0961%" y="175.50"></text></g><g><title>__rust_dealloc (166 instructions, 0.78%)</title><rect x="91.8031%" y="181" width="0.7766%" height="15" fill="rgb(250,30,5)" fg:x="19622" fg:w="166"/><text x="92.0961%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (198 instructions, 0.93%)</title><rect x="91.8031%" y="197" width="0.9264%" height="15" fill="rgb(227,47,41)" fg:x="19622" fg:w="198"/><text x="92.0961%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.63%)</title><rect x="92.7295%" y="181" width="0.6316%" height="15" fill="rgb(219,174,20)" fg:x="19820" fg:w="135"/><text x="93.0225%" y="191.50"></text></g><g><title>memset (139 instructions, 0.65%)</title><rect x="92.7295%" y="197" width="0.6503%" height="15" fill="rgb(239,15,52)" fg:x="19820" fg:w="139"/><text x="93.0225%" y="207.50"></text></g><g><title>candid::types::internal::env_clear (439 instructions, 2.05%)</title><rect x="91.8031%" y="213" width="2.0539%" height="15" fill="rgb(214,78,37)" fg:x="19622" fg:w="439"/><text x="92.0961%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (503 instructions, 2.35%)</title><rect x="91.8031%" y="229" width="2.3533%" height="15" fill="rgb(228,14,33)" fg:x="19622" fg:w="503"/><text x="92.0961%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="94.1565%" y="229" width="0.0140%" height="15" fill="rgb(216,131,20)" fg:x="20125" fg:w="3"/><text x="94.4494%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.15%)</title><rect x="94.1705%" y="197" width="0.1544%" height="15" fill="rgb(208,174,40)" fg:x="20128" fg:w="33"/><text x="94.4635%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.41%)</title><rect x="94.1705%" y="213" width="0.4117%" height="15" fill="rgb(223,21,8)" fg:x="20128" fg:w="88"/><text x="94.4635%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.5822%" y="101" width="0.0421%" height="15" fill="rgb(252,41,36)" fg:x="20216" fg:w="9"/><text x="94.8752%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.6243%" y="101" width="0.0421%" height="15" fill="rgb(238,163,39)" fg:x="20225" fg:w="9"/><text x="94.9173%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.6664%" y="101" width="0.0421%" height="15" fill="rgb(254,138,3)" fg:x="20234" fg:w="9"/><text x="94.9594%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.7085%" y="101" width="0.0140%" height="15" fill="rgb(237,166,10)" fg:x="20243" fg:w="3"/><text x="95.0015%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="94.7226%" y="101" width="0.0468%" height="15" fill="rgb(216,90,16)" fg:x="20246" fg:w="10"/><text x="95.0155%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.7693%" y="101" width="0.0234%" height="15" fill="rgb(219,63,53)" fg:x="20256" fg:w="5"/><text x="95.0623%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="94.7927%" y="101" width="0.0140%" height="15" fill="rgb(241,42,0)" fg:x="20261" fg:w="3"/><text x="95.0857%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.62%)</title><rect x="94.5822%" y="117" width="0.6176%" height="15" fill="rgb(208,215,26)" fg:x="20216" fg:w="132"/><text x="94.8752%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.66%)</title><rect x="94.5822%" y="133" width="0.6644%" height="15" fill="rgb(243,149,46)" fg:x="20216" fg:w="142"/><text x="94.8752%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.68%)</title><rect x="94.5822%" y="149" width="0.6784%" height="15" fill="rgb(218,202,2)" fg:x="20216" fg:w="145"/><text x="94.8752%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.71%)</title><rect x="94.5822%" y="165" width="0.7065%" height="15" fill="rgb(237,88,26)" fg:x="20216" fg:w="151"/><text x="94.8752%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.86%)</title><rect x="94.5822%" y="181" width="0.8562%" height="15" fill="rgb(244,136,30)" fg:x="20216" fg:w="183"/><text x="94.8752%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.17%)</title><rect x="94.5822%" y="197" width="1.1696%" height="15" fill="rgb(254,187,0)" fg:x="20216" fg:w="250"/><text x="94.8752%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.05%)</title><rect x="95.7518%" y="197" width="0.0468%" height="15" fill="rgb(224,189,46)" fg:x="20466" fg:w="10"/><text x="96.0448%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.7986%" y="181" width="0.0515%" height="15" fill="rgb(245,31,53)" fg:x="20476" fg:w="11"/><text x="96.0916%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.8688%" y="181" width="0.0515%" height="15" fill="rgb(240,61,9)" fg:x="20491" fg:w="11"/><text x="96.1618%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.14%)</title><rect x="95.7986%" y="197" width="0.1404%" height="15" fill="rgb(239,170,54)" fg:x="20476" fg:w="30"/><text x="96.0916%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.30%)</title><rect x="94.5822%" y="213" width="2.3019%" height="15" fill="rgb(227,201,17)" fg:x="20216" fg:w="492"/><text x="94.8752%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="96.8841%" y="213" width="0.0281%" height="15" fill="rgb(229,183,29)" fg:x="20708" fg:w="6"/><text x="97.1770%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.15%)</title><rect x="96.9121%" y="197" width="0.1450%" height="15" fill="rgb(235,35,28)" fg:x="20714" fg:w="31"/><text x="97.2051%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.40%)</title><rect x="96.9121%" y="213" width="0.4024%" height="15" fill="rgb(230,43,45)" fg:x="20714" fg:w="86"/><text x="97.2051%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.3145%" y="213" width="0.0281%" height="15" fill="rgb(247,192,3)" fg:x="20800" fg:w="6"/><text x="97.6075%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.3426%" y="213" width="0.0702%" height="15" fill="rgb(213,105,54)" fg:x="20806" fg:w="15"/><text x="97.6355%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.61%)</title><rect x="94.1705%" y="229" width="3.6119%" height="15" fill="rgb(228,140,8)" fg:x="20128" fg:w="772"/><text x="94.4635%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.7824%" y="229" width="0.0234%" height="15" fill="rgb(217,208,8)" fg:x="20900" fg:w="5"/><text x="98.0753%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.8057%" y="181" width="0.0140%" height="15" fill="rgb(230,198,49)" fg:x="20905" fg:w="3"/><text x="98.0987%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.8198%" y="181" width="0.0187%" height="15" fill="rgb(230,182,40)" fg:x="20908" fg:w="4"/><text x="98.1127%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.8385%" y="181" width="0.0140%" height="15" fill="rgb(240,123,47)" fg:x="20912" fg:w="3"/><text x="98.1315%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.8525%" y="181" width="0.0187%" height="15" fill="rgb(251,216,6)" fg:x="20915" fg:w="4"/><text x="98.1455%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.8712%" y="181" width="0.0281%" height="15" fill="rgb(251,61,10)" fg:x="20919" fg:w="6"/><text x="98.1642%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="97.8993%" y="181" width="0.0468%" height="15" fill="rgb(243,193,45)" fg:x="20925" fg:w="10"/><text x="98.1923%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.33%)</title><rect x="97.8057%" y="197" width="0.3275%" height="15" fill="rgb(224,7,43)" fg:x="20905" fg:w="70"/><text x="98.0987%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.34%)</title><rect x="97.8057%" y="213" width="0.3369%" height="15" fill="rgb(215,174,33)" fg:x="20905" fg:w="72"/><text x="98.0987%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.36%)</title><rect x="97.8057%" y="229" width="0.3603%" height="15" fill="rgb(249,188,6)" fg:x="20905" fg:w="77"/><text x="98.0987%" y="239.50"></text></g><g><title>candid::utils::write_args (1,436 instructions, 6.72%)</title><rect x="91.8031%" y="245" width="6.7184%" height="15" fill="rgb(252,220,20)" fg:x="19622" fg:w="1436"/><text x="92.0961%" y="255.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.5216%" y="197" width="0.0140%" height="15" fill="rgb(226,49,51)" fg:x="21058" fg:w="3"/><text x="98.8145%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.5356%" y="197" width="0.0187%" height="15" fill="rgb(230,124,50)" fg:x="21061" fg:w="4"/><text x="98.8286%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.5543%" y="197" width="0.0140%" height="15" fill="rgb(228,72,17)" fg:x="21065" fg:w="3"/><text x="98.8473%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.5684%" y="197" width="0.0187%" height="15" fill="rgb(232,37,29)" fg:x="21068" fg:w="4"/><text x="98.8613%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.5871%" y="197" width="0.0281%" height="15" fill="rgb(250,2,10)" fg:x="21072" fg:w="6"/><text x="98.8800%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="98.6151%" y="197" width="0.0749%" height="15" fill="rgb(245,159,46)" fg:x="21078" fg:w="16"/><text x="98.9081%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.46%)</title><rect x="98.5216%" y="213" width="0.4585%" height="15" fill="rgb(247,50,29)" fg:x="21058" fg:w="98"/><text x="98.8145%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.47%)</title><rect x="98.5216%" y="229" width="0.4679%" height="15" fill="rgb(206,136,24)" fg:x="21058" fg:w="100"/><text x="98.8145%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="99.0128%" y="197" width="0.0140%" height="15" fill="rgb(247,46,41)" fg:x="21163" fg:w="3"/><text x="99.3058%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="99.0269%" y="197" width="0.0187%" height="15" fill="rgb(220,185,15)" fg:x="21166" fg:w="4"/><text x="99.3198%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="99.0456%" y="197" width="0.0140%" height="15" fill="rgb(222,212,18)" fg:x="21170" fg:w="3"/><text x="99.3385%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.0596%" y="197" width="0.0187%" height="15" fill="rgb(234,107,14)" fg:x="21173" fg:w="4"/><text x="99.3526%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.0783%" y="197" width="0.0234%" height="15" fill="rgb(247,22,45)" fg:x="21177" fg:w="5"/><text x="99.3713%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.1017%" y="197" width="0.0140%" height="15" fill="rgb(223,156,32)" fg:x="21182" fg:w="3"/><text x="99.3947%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.1157%" y="197" width="0.0281%" height="15" fill="rgb(223,112,48)" fg:x="21185" fg:w="6"/><text x="99.4087%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="99.1438%" y="197" width="0.0468%" height="15" fill="rgb(208,58,30)" fg:x="21191" fg:w="10"/><text x="99.4368%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.57%)</title><rect x="99.0128%" y="213" width="0.5708%" height="15" fill="rgb(236,106,32)" fg:x="21163" fg:w="122"/><text x="99.3058%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.58%)</title><rect x="99.0128%" y="229" width="0.5801%" height="15" fill="rgb(227,108,12)" fg:x="21163" fg:w="124"/><text x="99.3058%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.09%)</title><rect x="98.5216%" y="245" width="1.0948%" height="15" fill="rgb(248,213,47)" fg:x="21058" fg:w="234"/><text x="98.8145%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (21,363 instructions, 99.95%)</title><rect x="0.0374%" y="261" width="99.9485%" height="15" fill="rgb(224,13,49)" fg:x="8" fg:w="21363"/><text x="0.3304%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (21,374 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(233,161,17)" fg:x="0" fg:w="21374"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_remove (21,374 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(218,113,13)" fg:x="0" fg:w="21374"/><text x="0.2930%" y="287.50">canister_update batch_remove</text></g></svg></svg>