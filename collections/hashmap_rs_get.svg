<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap_rs.batch_get</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="20676"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0387%" height="15" fill="rgb(212,106,14)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0387%" y="181" width="0.0435%" height="15" fill="rgb(208,20,40)" fg:x="8" fg:w="9"/><text x="0.3317%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0822%" y="181" width="0.0435%" height="15" fill="rgb(221,132,1)" fg:x="17" fg:w="9"/><text x="0.3752%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1257%" y="181" width="0.0435%" height="15" fill="rgb(236,87,6)" fg:x="26" fg:w="9"/><text x="0.4187%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1693%" y="181" width="0.0145%" height="15" fill="rgb(229,142,16)" fg:x="35" fg:w="3"/><text x="0.4622%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.1838%" y="181" width="0.0484%" height="15" fill="rgb(228,45,0)" fg:x="38" fg:w="10"/><text x="0.4768%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2322%" y="181" width="0.0242%" height="15" fill="rgb(244,108,16)" fg:x="48" fg:w="5"/><text x="0.5251%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2563%" y="181" width="0.0145%" height="15" fill="rgb(211,202,5)" fg:x="53" fg:w="3"/><text x="0.5493%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="0.0387%" y="197" width="0.6384%" height="15" fill="rgb(207,204,4)" fg:x="8" fg:w="132"/><text x="0.3317%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="0.0387%" y="213" width="0.6868%" height="15" fill="rgb(227,32,40)" fg:x="8" fg:w="142"/><text x="0.3317%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="0.0387%" y="229" width="0.7013%" height="15" fill="rgb(220,86,36)" fg:x="8" fg:w="145"/><text x="0.3317%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7690%" y="181" width="0.0435%" height="15" fill="rgb(207,100,35)" fg:x="159" fg:w="9"/><text x="1.0620%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8125%" y="181" width="0.0435%" height="15" fill="rgb(237,20,11)" fg:x="168" fg:w="9"/><text x="1.1055%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8561%" y="181" width="0.0435%" height="15" fill="rgb(214,203,1)" fg:x="177" fg:w="9"/><text x="1.1490%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.8996%" y="181" width="0.0145%" height="15" fill="rgb(213,27,21)" fg:x="186" fg:w="3"/><text x="1.1926%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.9141%" y="181" width="0.0484%" height="15" fill="rgb(205,112,25)" fg:x="189" fg:w="10"/><text x="1.2071%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.9625%" y="181" width="0.0242%" height="15" fill="rgb(217,16,19)" fg:x="199" fg:w="5"/><text x="1.2554%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.9867%" y="181" width="0.0145%" height="15" fill="rgb(217,221,19)" fg:x="204" fg:w="3"/><text x="1.2796%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="0.7690%" y="197" width="0.6384%" height="15" fill="rgb(219,48,16)" fg:x="159" fg:w="132"/><text x="1.0620%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="0.7690%" y="213" width="0.6868%" height="15" fill="rgb(225,12,41)" fg:x="159" fg:w="142"/><text x="1.0620%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="0.7690%" y="229" width="0.7013%" height="15" fill="rgb(234,66,34)" fg:x="159" fg:w="145"/><text x="1.0620%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.46%)</title><rect x="0.0387%" y="245" width="1.4606%" height="15" fill="rgb(249,8,40)" fg:x="8" fg:w="302"/><text x="0.3317%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.4993%" y="245" width="0.0290%" height="15" fill="rgb(214,117,12)" fg:x="310" fg:w="6"/><text x="1.7923%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5283%" y="149" width="0.0435%" height="15" fill="rgb(244,27,23)" fg:x="316" fg:w="9"/><text x="1.8213%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5719%" y="149" width="0.0435%" height="15" fill="rgb(227,123,34)" fg:x="325" fg:w="9"/><text x="1.8648%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.6154%" y="149" width="0.0435%" height="15" fill="rgb(216,120,52)" fg:x="334" fg:w="9"/><text x="1.9084%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.6589%" y="149" width="0.0145%" height="15" fill="rgb(232,176,27)" fg:x="343" fg:w="3"/><text x="1.9519%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="1.6734%" y="149" width="0.0484%" height="15" fill="rgb(236,43,4)" fg:x="346" fg:w="10"/><text x="1.9664%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.7218%" y="149" width="0.0242%" height="15" fill="rgb(250,77,26)" fg:x="356" fg:w="5"/><text x="2.0148%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.7460%" y="149" width="0.0145%" height="15" fill="rgb(205,41,51)" fg:x="361" fg:w="3"/><text x="2.0390%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="1.5283%" y="165" width="0.6384%" height="15" fill="rgb(249,202,41)" fg:x="316" fg:w="132"/><text x="1.8213%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="1.5283%" y="181" width="0.6868%" height="15" fill="rgb(225,61,21)" fg:x="316" fg:w="142"/><text x="1.8213%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="1.5283%" y="197" width="0.7013%" height="15" fill="rgb(240,103,5)" fg:x="316" fg:w="145"/><text x="1.8213%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="1.5283%" y="213" width="0.7303%" height="15" fill="rgb(230,89,9)" fg:x="316" fg:w="151"/><text x="1.8213%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (211 instructions, 1.02%)</title><rect x="1.5283%" y="229" width="1.0205%" height="15" fill="rgb(219,50,26)" fg:x="316" fg:w="211"/><text x="1.8213%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.35%)</title><rect x="2.5537%" y="181" width="0.3531%" height="15" fill="rgb(216,206,50)" fg:x="528" fg:w="73"/><text x="2.8467%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.9068%" y="117" width="0.0290%" height="15" fill="rgb(233,189,38)" fg:x="601" fg:w="6"/><text x="3.1997%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="2.9068%" y="133" width="0.0484%" height="15" fill="rgb(227,162,42)" fg:x="601" fg:w="10"/><text x="3.1997%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.09%)</title><rect x="2.9068%" y="149" width="2.0942%" height="15" fill="rgb(250,130,51)" fg:x="601" fg:w="433"/><text x="3.1997%" y="159.50">c..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.42%)</title><rect x="5.0010%" y="149" width="0.4208%" height="15" fill="rgb(213,127,23)" fg:x="1034" fg:w="87"/><text x="5.2939%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.25%)</title><rect x="5.4217%" y="149" width="0.2515%" height="15" fill="rgb(238,18,33)" fg:x="1121" fg:w="52"/><text x="5.7147%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.25%)</title><rect x="5.6732%" y="149" width="0.2515%" height="15" fill="rgb(212,65,13)" fg:x="1173" fg:w="52"/><text x="5.9662%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.25%)</title><rect x="5.9247%" y="149" width="0.2515%" height="15" fill="rgb(236,52,20)" fg:x="1225" fg:w="52"/><text x="6.2177%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.25%)</title><rect x="6.1762%" y="149" width="0.2515%" height="15" fill="rgb(217,179,44)" fg:x="1277" fg:w="52"/><text x="6.4692%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (880 instructions, 4.26%)</title><rect x="2.9068%" y="181" width="4.2561%" height="15" fill="rgb(248,64,24)" fg:x="601" fg:w="880"/><text x="3.1997%" y="191.50">binr..</text></g><g><title> 4]&gt;::read_options (880 instructions, 4.26%)</title><rect x="2.9068%" y="165" width="4.2561%" height="15" fill="rgb(244,94,49)" fg:x="601" fg:w="880"/><text x="3.1997%" y="175.50"> 4]&gt;..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.35%)</title><rect x="7.1629%" y="181" width="0.3531%" height="15" fill="rgb(228,138,17)" fg:x="1481" fg:w="73"/><text x="7.4559%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.37%)</title><rect x="7.5160%" y="165" width="0.3724%" height="15" fill="rgb(220,195,39)" fg:x="1554" fg:w="77"/><text x="7.8089%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.50%)</title><rect x="7.5160%" y="181" width="0.5030%" height="15" fill="rgb(242,93,10)" fg:x="1554" fg:w="104"/><text x="7.8089%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="8.0190%" y="133" width="0.0290%" height="15" fill="rgb(211,41,34)" fg:x="1658" fg:w="6"/><text x="8.3119%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="8.0190%" y="149" width="0.0484%" height="15" fill="rgb(212,73,38)" fg:x="1658" fg:w="10"/><text x="8.3119%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.09%)</title><rect x="8.0190%" y="165" width="2.0942%" height="15" fill="rgb(224,112,4)" fg:x="1658" fg:w="433"/><text x="8.3119%" y="175.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.09%)</title><rect x="10.1132%" y="149" width="0.0871%" height="15" fill="rgb(209,105,46)" fg:x="2091" fg:w="18"/><text x="10.4061%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.11%)</title><rect x="10.1132%" y="165" width="0.1064%" height="15" fill="rgb(241,46,36)" fg:x="2091" fg:w="22"/><text x="10.4061%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.2196%" y="69" width="0.0435%" height="15" fill="rgb(252,215,23)" fg:x="2113" fg:w="9"/><text x="10.5125%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.2631%" y="69" width="0.0435%" height="15" fill="rgb(214,101,43)" fg:x="2122" fg:w="9"/><text x="10.5561%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.3066%" y="69" width="0.0435%" height="15" fill="rgb(217,148,32)" fg:x="2131" fg:w="9"/><text x="10.5996%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="10.3502%" y="69" width="0.0145%" height="15" fill="rgb(227,63,54)" fg:x="2140" fg:w="3"/><text x="10.6431%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="10.3647%" y="69" width="0.0484%" height="15" fill="rgb(253,224,10)" fg:x="2143" fg:w="10"/><text x="10.6576%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="10.4130%" y="69" width="0.0242%" height="15" fill="rgb(236,127,18)" fg:x="2153" fg:w="5"/><text x="10.7060%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="10.4372%" y="69" width="0.0145%" height="15" fill="rgb(225,66,50)" fg:x="2158" fg:w="3"/><text x="10.7302%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="10.2196%" y="85" width="0.6384%" height="15" fill="rgb(206,208,21)" fg:x="2113" fg:w="132"/><text x="10.5125%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="10.2196%" y="101" width="0.6868%" height="15" fill="rgb(220,229,1)" fg:x="2113" fg:w="142"/><text x="10.5125%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="10.2196%" y="117" width="0.7013%" height="15" fill="rgb(242,25,18)" fg:x="2113" fg:w="145"/><text x="10.5125%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="10.2196%" y="133" width="0.7303%" height="15" fill="rgb(247,36,20)" fg:x="2113" fg:w="151"/><text x="10.5125%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.29%)</title><rect x="10.9499%" y="85" width="0.2902%" height="15" fill="rgb(211,173,32)" fg:x="2264" fg:w="60"/><text x="11.2429%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.31%)</title><rect x="10.9499%" y="101" width="0.3095%" height="15" fill="rgb(213,120,39)" fg:x="2264" fg:w="64"/><text x="11.2429%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.43%)</title><rect x="10.9499%" y="117" width="0.4305%" height="15" fill="rgb(221,79,0)" fg:x="2264" fg:w="89"/><text x="11.2429%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="11.3803%" y="69" width="0.0484%" height="15" fill="rgb(235,86,3)" fg:x="2353" fg:w="10"/><text x="11.6733%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.15%)</title><rect x="11.4287%" y="37" width="0.1451%" height="15" fill="rgb(226,74,11)" fg:x="2363" fg:w="30"/><text x="11.7217%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="11.4287%" y="53" width="0.1644%" height="15" fill="rgb(209,79,25)" fg:x="2363" fg:w="34"/><text x="11.7217%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.29%)</title><rect x="11.4287%" y="69" width="0.2854%" height="15" fill="rgb(231,49,19)" fg:x="2363" fg:w="59"/><text x="11.7217%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.58%)</title><rect x="11.3803%" y="85" width="0.5755%" height="15" fill="rgb(242,90,14)" fg:x="2353" fg:w="119"/><text x="11.6733%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.84%)</title><rect x="11.3803%" y="101" width="0.8416%" height="15" fill="rgb(214,37,27)" fg:x="2353" fg:w="174"/><text x="11.6733%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.87%)</title><rect x="11.3803%" y="117" width="0.8657%" height="15" fill="rgb(235,120,38)" fg:x="2353" fg:w="179"/><text x="11.6733%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.83%)</title><rect x="10.9499%" y="133" width="1.8330%" height="15" fill="rgb(241,178,7)" fg:x="2264" fg:w="379"/><text x="11.2429%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.25%)</title><rect x="10.2196%" y="149" width="3.2550%" height="15" fill="rgb(218,96,53)" fg:x="2113" fg:w="673"/><text x="10.5125%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.42%)</title><rect x="13.4746%" y="149" width="0.4208%" height="15" fill="rgb(245,171,21)" fg:x="2786" fg:w="87"/><text x="13.7675%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="13.8953%" y="101" width="0.0145%" height="15" fill="rgb(244,75,42)" fg:x="2873" fg:w="3"/><text x="14.1883%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="13.9098%" y="101" width="0.0193%" height="15" fill="rgb(215,189,9)" fg:x="2876" fg:w="4"/><text x="14.2028%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="13.9292%" y="101" width="0.0145%" height="15" fill="rgb(237,196,45)" fg:x="2880" fg:w="3"/><text x="14.2222%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="13.9437%" y="101" width="0.0193%" height="15" fill="rgb(235,156,23)" fg:x="2883" fg:w="4"/><text x="14.2367%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="13.9630%" y="101" width="0.0290%" height="15" fill="rgb(210,74,48)" fg:x="2887" fg:w="6"/><text x="14.2560%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="13.9921%" y="101" width="0.0484%" height="15" fill="rgb(231,186,28)" fg:x="2893" fg:w="10"/><text x="14.2850%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="13.8953%" y="117" width="0.3386%" height="15" fill="rgb(231,33,5)" fg:x="2873" fg:w="70"/><text x="14.1883%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="13.8953%" y="133" width="0.3482%" height="15" fill="rgb(225,8,43)" fg:x="2873" fg:w="72"/><text x="14.1883%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.37%)</title><rect x="13.8953%" y="149" width="0.3724%" height="15" fill="rgb(211,63,34)" fg:x="2873" fg:w="77"/><text x="14.1883%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.39%)</title><rect x="10.2196%" y="165" width="4.3916%" height="15" fill="rgb(245,140,2)" fg:x="2113" fg:w="908"/><text x="10.5125%" y="175.50">binr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="14.6111%" y="165" width="0.1209%" height="15" fill="rgb(210,85,44)" fg:x="3021" fg:w="25"/><text x="14.9041%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,536 instructions, 7.43%)</title><rect x="8.0190%" y="181" width="7.4289%" height="15" fill="rgb(224,162,31)" fg:x="1658" fg:w="1536"/><text x="8.3119%" y="191.50">binread:..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.33%)</title><rect x="15.4479%" y="181" width="0.3289%" height="15" fill="rgb(226,46,45)" fg:x="3194" fg:w="68"/><text x="15.7408%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.37%)</title><rect x="15.7767%" y="165" width="0.3724%" height="15" fill="rgb(222,128,12)" fg:x="3262" fg:w="77"/><text x="16.0697%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.50%)</title><rect x="15.7767%" y="181" width="0.5030%" height="15" fill="rgb(228,159,37)" fg:x="3262" fg:w="104"/><text x="16.0697%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="16.2797%" y="133" width="0.0290%" height="15" fill="rgb(221,87,35)" fg:x="3366" fg:w="6"/><text x="16.5727%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="16.2797%" y="149" width="0.0484%" height="15" fill="rgb(215,146,13)" fg:x="3366" fg:w="10"/><text x="16.5727%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.09%)</title><rect x="16.2797%" y="165" width="2.0942%" height="15" fill="rgb(231,131,54)" fg:x="3366" fg:w="433"/><text x="16.5727%" y="175.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.09%)</title><rect x="18.3740%" y="149" width="0.0871%" height="15" fill="rgb(245,201,14)" fg:x="3799" fg:w="18"/><text x="18.6669%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.11%)</title><rect x="18.3740%" y="165" width="0.1064%" height="15" fill="rgb(238,215,19)" fg:x="3799" fg:w="22"/><text x="18.6669%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.4804%" y="69" width="0.0435%" height="15" fill="rgb(246,7,43)" fg:x="3821" fg:w="9"/><text x="18.7733%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.5239%" y="69" width="0.0435%" height="15" fill="rgb(206,217,3)" fg:x="3830" fg:w="9"/><text x="18.8169%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.5674%" y="69" width="0.0435%" height="15" fill="rgb(229,35,53)" fg:x="3839" fg:w="9"/><text x="18.8604%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="18.6109%" y="69" width="0.0145%" height="15" fill="rgb(245,125,28)" fg:x="3848" fg:w="3"/><text x="18.9039%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="18.6255%" y="69" width="0.0484%" height="15" fill="rgb(241,211,45)" fg:x="3851" fg:w="10"/><text x="18.9184%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="18.6738%" y="69" width="0.0242%" height="15" fill="rgb(242,102,13)" fg:x="3861" fg:w="5"/><text x="18.9668%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="18.6980%" y="69" width="0.0145%" height="15" fill="rgb(242,72,21)" fg:x="3866" fg:w="3"/><text x="18.9910%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="18.4804%" y="85" width="0.6384%" height="15" fill="rgb(230,219,47)" fg:x="3821" fg:w="132"/><text x="18.7733%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="18.4804%" y="101" width="0.6868%" height="15" fill="rgb(246,95,39)" fg:x="3821" fg:w="142"/><text x="18.7733%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="18.4804%" y="117" width="0.7013%" height="15" fill="rgb(254,117,45)" fg:x="3821" fg:w="145"/><text x="18.7733%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="18.4804%" y="133" width="0.7303%" height="15" fill="rgb(226,219,44)" fg:x="3821" fg:w="151"/><text x="18.7733%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.29%)</title><rect x="19.2107%" y="85" width="0.2902%" height="15" fill="rgb(250,10,12)" fg:x="3972" fg:w="60"/><text x="19.5036%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.31%)</title><rect x="19.2107%" y="101" width="0.3095%" height="15" fill="rgb(233,87,3)" fg:x="3972" fg:w="64"/><text x="19.5036%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.43%)</title><rect x="19.2107%" y="117" width="0.4305%" height="15" fill="rgb(233,227,39)" fg:x="3972" fg:w="89"/><text x="19.5036%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="19.6411%" y="69" width="0.0484%" height="15" fill="rgb(231,84,48)" fg:x="4061" fg:w="10"/><text x="19.9341%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.15%)</title><rect x="19.6895%" y="37" width="0.1451%" height="15" fill="rgb(229,204,45)" fg:x="4071" fg:w="30"/><text x="19.9825%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.16%)</title><rect x="19.6895%" y="53" width="0.1644%" height="15" fill="rgb(246,112,51)" fg:x="4071" fg:w="34"/><text x="19.9825%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.29%)</title><rect x="19.6895%" y="69" width="0.2854%" height="15" fill="rgb(229,138,40)" fg:x="4071" fg:w="59"/><text x="19.9825%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.58%)</title><rect x="19.6411%" y="85" width="0.5755%" height="15" fill="rgb(222,63,51)" fg:x="4061" fg:w="119"/><text x="19.9341%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.84%)</title><rect x="19.6411%" y="101" width="0.8416%" height="15" fill="rgb(247,25,36)" fg:x="4061" fg:w="174"/><text x="19.9341%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.87%)</title><rect x="19.6411%" y="117" width="0.8657%" height="15" fill="rgb(252,131,54)" fg:x="4061" fg:w="179"/><text x="19.9341%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.83%)</title><rect x="19.2107%" y="133" width="1.8330%" height="15" fill="rgb(215,15,38)" fg:x="3972" fg:w="379"/><text x="19.5036%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.25%)</title><rect x="18.4804%" y="149" width="3.2550%" height="15" fill="rgb(209,147,26)" fg:x="3821" fg:w="673"/><text x="18.7733%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.42%)</title><rect x="21.7353%" y="149" width="0.4208%" height="15" fill="rgb(236,23,52)" fg:x="4494" fg:w="87"/><text x="22.0283%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="22.1561%" y="101" width="0.0145%" height="15" fill="rgb(245,67,34)" fg:x="4581" fg:w="3"/><text x="22.4491%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="22.1706%" y="101" width="0.0193%" height="15" fill="rgb(206,190,24)" fg:x="4584" fg:w="4"/><text x="22.4636%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="22.1900%" y="101" width="0.0145%" height="15" fill="rgb(233,120,22)" fg:x="4588" fg:w="3"/><text x="22.4829%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="22.2045%" y="101" width="0.0193%" height="15" fill="rgb(229,212,12)" fg:x="4591" fg:w="4"/><text x="22.4975%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="22.2238%" y="101" width="0.0290%" height="15" fill="rgb(216,226,3)" fg:x="4595" fg:w="6"/><text x="22.5168%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="22.2529%" y="101" width="0.0484%" height="15" fill="rgb(223,13,10)" fg:x="4601" fg:w="10"/><text x="22.5458%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="22.1561%" y="117" width="0.3386%" height="15" fill="rgb(226,91,34)" fg:x="4581" fg:w="70"/><text x="22.4491%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="22.1561%" y="133" width="0.3482%" height="15" fill="rgb(218,55,54)" fg:x="4581" fg:w="72"/><text x="22.4491%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.37%)</title><rect x="22.1561%" y="149" width="0.3724%" height="15" fill="rgb(246,20,4)" fg:x="4581" fg:w="77"/><text x="22.4491%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.39%)</title><rect x="18.4804%" y="165" width="4.3916%" height="15" fill="rgb(242,104,9)" fg:x="3821" fg:w="908"/><text x="18.7733%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.35%)</title><rect x="22.8719%" y="133" width="0.3531%" height="15" fill="rgb(226,169,29)" fg:x="4729" fg:w="73"/><text x="23.1649%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.53%)</title><rect x="23.2250%" y="117" width="0.5320%" height="15" fill="rgb(247,187,3)" fg:x="4802" fg:w="110"/><text x="23.5180%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.66%)</title><rect x="23.2250%" y="133" width="0.6626%" height="15" fill="rgb(243,67,52)" fg:x="4802" fg:w="137"/><text x="23.5180%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.33%)</title><rect x="23.8876%" y="133" width="0.3289%" height="15" fill="rgb(227,203,37)" fg:x="4939" fg:w="68"/><text x="24.1806%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (337 instructions, 1.63%)</title><rect x="22.8719%" y="149" width="1.6299%" height="15" fill="rgb(240,78,45)" fg:x="4729" fg:w="337"/><text x="23.1649%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.5018%" y="85" width="0.0435%" height="15" fill="rgb(232,137,19)" fg:x="5066" fg:w="9"/><text x="24.7948%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.5454%" y="85" width="0.0435%" height="15" fill="rgb(232,66,38)" fg:x="5075" fg:w="9"/><text x="24.8383%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.5889%" y="85" width="0.0435%" height="15" fill="rgb(227,182,10)" fg:x="5084" fg:w="9"/><text x="24.8819%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="24.6324%" y="85" width="0.0145%" height="15" fill="rgb(253,214,38)" fg:x="5093" fg:w="3"/><text x="24.9254%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="24.6469%" y="85" width="0.0484%" height="15" fill="rgb(211,123,5)" fg:x="5096" fg:w="10"/><text x="24.9399%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="24.6953%" y="85" width="0.0242%" height="15" fill="rgb(218,100,24)" fg:x="5106" fg:w="5"/><text x="24.9883%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="24.7195%" y="85" width="0.0145%" height="15" fill="rgb(231,200,26)" fg:x="5111" fg:w="3"/><text x="25.0125%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="24.5018%" y="101" width="0.6384%" height="15" fill="rgb(234,204,16)" fg:x="5066" fg:w="132"/><text x="24.7948%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="24.5018%" y="117" width="0.6868%" height="15" fill="rgb(235,38,6)" fg:x="5066" fg:w="142"/><text x="24.7948%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="24.5018%" y="133" width="0.7013%" height="15" fill="rgb(217,131,53)" fg:x="5066" fg:w="145"/><text x="24.7948%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="24.5018%" y="149" width="0.7303%" height="15" fill="rgb(241,164,36)" fg:x="5066" fg:w="151"/><text x="24.7948%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (567 instructions, 2.74%)</title><rect x="22.8719%" y="165" width="2.7423%" height="15" fill="rgb(234,18,4)" fg:x="4729" fg:w="567"/><text x="23.1649%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,078 instructions, 10.05%)</title><rect x="16.2797%" y="181" width="10.0503%" height="15" fill="rgb(240,129,31)" fg:x="3366" fg:w="2078"/><text x="16.5727%" y="191.50">binread::bin..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.33%)</title><rect x="26.3300%" y="181" width="0.3289%" height="15" fill="rgb(234,15,13)" fg:x="5444" fg:w="68"/><text x="26.6230%" y="191.50"></text></g><g><title>binread::BinRead::read (5,202 instructions, 25.16%)</title><rect x="2.5488%" y="197" width="25.1596%" height="15" fill="rgb(243,74,20)" fg:x="527" fg:w="5202"/><text x="2.8418%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="27.7085%" y="181" width="0.0677%" height="15" fill="rgb(224,58,29)" fg:x="5729" fg:w="14"/><text x="28.0014%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="27.7762%" y="165" width="0.0677%" height="15" fill="rgb(210,136,6)" fg:x="5743" fg:w="14"/><text x="28.0691%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 instructions, 0.31%)</title><rect x="27.8439%" y="165" width="0.3144%" height="15" fill="rgb(245,128,33)" fg:x="5757" fg:w="65"/><text x="28.1368%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="28.1583%" y="165" width="0.0919%" height="15" fill="rgb(245,82,45)" fg:x="5822" fg:w="19"/><text x="28.4512%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (250 instructions, 1.21%)</title><rect x="27.7762%" y="181" width="1.2091%" height="15" fill="rgb(215,182,1)" fg:x="5743" fg:w="250"/><text x="28.0691%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.9853%" y="101" width="0.0435%" height="15" fill="rgb(209,185,23)" fg:x="5993" fg:w="9"/><text x="29.2783%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.0288%" y="101" width="0.0435%" height="15" fill="rgb(224,184,0)" fg:x="6002" fg:w="9"/><text x="29.3218%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.0724%" y="101" width="0.0435%" height="15" fill="rgb(224,95,46)" fg:x="6011" fg:w="9"/><text x="29.3653%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="29.1159%" y="101" width="0.0145%" height="15" fill="rgb(221,49,27)" fg:x="6020" fg:w="3"/><text x="29.4089%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="29.1304%" y="101" width="0.0484%" height="15" fill="rgb(236,85,1)" fg:x="6023" fg:w="10"/><text x="29.4234%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="29.1788%" y="101" width="0.0242%" height="15" fill="rgb(241,143,53)" fg:x="6033" fg:w="5"/><text x="29.4717%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="29.2029%" y="101" width="0.0145%" height="15" fill="rgb(236,186,37)" fg:x="6038" fg:w="3"/><text x="29.4959%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="28.9853%" y="117" width="0.6384%" height="15" fill="rgb(241,19,51)" fg:x="5993" fg:w="132"/><text x="29.2783%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="28.9853%" y="133" width="0.6868%" height="15" fill="rgb(226,57,17)" fg:x="5993" fg:w="142"/><text x="29.2783%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="28.9853%" y="149" width="0.7013%" height="15" fill="rgb(222,106,23)" fg:x="5993" fg:w="145"/><text x="29.2783%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="28.9853%" y="165" width="0.7303%" height="15" fill="rgb(235,103,12)" fg:x="5993" fg:w="151"/><text x="29.2783%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.12%)</title><rect x="28.9853%" y="181" width="1.1221%" height="15" fill="rgb(237,174,14)" fg:x="5993" fg:w="232"/><text x="29.2783%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.1074%" y="85" width="0.0435%" height="15" fill="rgb(234,229,9)" fg:x="6225" fg:w="9"/><text x="30.4003%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.1509%" y="85" width="0.0435%" height="15" fill="rgb(212,178,34)" fg:x="6234" fg:w="9"/><text x="30.4439%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.07%)</title><rect x="30.1944%" y="85" width="0.0677%" height="15" fill="rgb(239,155,5)" fg:x="6243" fg:w="14"/><text x="30.4874%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="30.2621%" y="85" width="0.0145%" height="15" fill="rgb(210,205,3)" fg:x="6257" fg:w="3"/><text x="30.5551%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.57%)</title><rect x="30.1074%" y="101" width="0.5659%" height="15" fill="rgb(215,64,52)" fg:x="6225" fg:w="117"/><text x="30.4003%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.61%)</title><rect x="30.1074%" y="117" width="0.6142%" height="15" fill="rgb(220,206,31)" fg:x="6225" fg:w="127"/><text x="30.4003%" y="127.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.63%)</title><rect x="30.1074%" y="133" width="0.6287%" height="15" fill="rgb(232,61,4)" fg:x="6225" fg:w="130"/><text x="30.4003%" y="143.50"></text></g><g><title>__rust_alloc (136 instructions, 0.66%)</title><rect x="30.1074%" y="149" width="0.6578%" height="15" fill="rgb(207,45,6)" fg:x="6225" fg:w="136"/><text x="30.4003%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.81%)</title><rect x="30.1074%" y="165" width="0.8125%" height="15" fill="rgb(232,25,5)" fg:x="6225" fg:w="168"/><text x="30.4003%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (238 instructions, 1.15%)</title><rect x="30.1074%" y="181" width="1.1511%" height="15" fill="rgb(240,24,49)" fg:x="6225" fg:w="238"/><text x="30.4003%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (961 instructions, 4.65%)</title><rect x="27.7085%" y="197" width="4.6479%" height="15" fill="rgb(234,213,15)" fg:x="5729" fg:w="961"/><text x="28.0014%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.3564%" y="117" width="0.0435%" height="15" fill="rgb(214,145,12)" fg:x="6690" fg:w="9"/><text x="32.6493%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.3999%" y="117" width="0.0435%" height="15" fill="rgb(253,127,18)" fg:x="6699" fg:w="9"/><text x="32.6929%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.4434%" y="117" width="0.0435%" height="15" fill="rgb(243,123,26)" fg:x="6708" fg:w="9"/><text x="32.7364%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.4869%" y="117" width="0.0145%" height="15" fill="rgb(217,172,36)" fg:x="6717" fg:w="3"/><text x="32.7799%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="32.5015%" y="117" width="0.0484%" height="15" fill="rgb(247,212,1)" fg:x="6720" fg:w="10"/><text x="32.7944%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.5498%" y="117" width="0.0242%" height="15" fill="rgb(231,156,28)" fg:x="6730" fg:w="5"/><text x="32.8428%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.5740%" y="117" width="0.0145%" height="15" fill="rgb(208,43,5)" fg:x="6735" fg:w="3"/><text x="32.8670%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="32.3564%" y="133" width="0.6384%" height="15" fill="rgb(247,195,47)" fg:x="6690" fg:w="132"/><text x="32.6493%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="32.3564%" y="149" width="0.6868%" height="15" fill="rgb(252,60,41)" fg:x="6690" fg:w="142"/><text x="32.6493%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="32.3564%" y="165" width="0.7013%" height="15" fill="rgb(212,128,34)" fg:x="6690" fg:w="145"/><text x="32.6493%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="32.3564%" y="181" width="0.7303%" height="15" fill="rgb(231,203,53)" fg:x="6690" fg:w="151"/><text x="32.6493%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="33.0867%" y="133" width="0.0145%" height="15" fill="rgb(219,114,25)" fg:x="6841" fg:w="3"/><text x="33.3796%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="33.1012%" y="133" width="0.0193%" height="15" fill="rgb(244,44,5)" fg:x="6844" fg:w="4"/><text x="33.3941%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="33.1205%" y="133" width="0.0145%" height="15" fill="rgb(215,76,33)" fg:x="6848" fg:w="3"/><text x="33.4135%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="33.1350%" y="133" width="0.0193%" height="15" fill="rgb(236,224,11)" fg:x="6851" fg:w="4"/><text x="33.4280%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="33.1544%" y="133" width="0.0290%" height="15" fill="rgb(209,97,15)" fg:x="6855" fg:w="6"/><text x="33.4474%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="33.1834%" y="133" width="0.0774%" height="15" fill="rgb(244,205,37)" fg:x="6861" fg:w="16"/><text x="33.4764%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.47%)</title><rect x="33.0867%" y="149" width="0.4740%" height="15" fill="rgb(239,193,31)" fg:x="6841" fg:w="98"/><text x="33.3796%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.48%)</title><rect x="33.0867%" y="165" width="0.4837%" height="15" fill="rgb(243,158,33)" fg:x="6841" fg:w="100"/><text x="33.3796%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.51%)</title><rect x="33.0867%" y="181" width="0.5078%" height="15" fill="rgb(233,226,8)" fg:x="6841" fg:w="105"/><text x="33.3796%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.79%)</title><rect x="32.3564%" y="197" width="1.7895%" height="15" fill="rgb(205,155,46)" fg:x="6690" fg:w="370"/><text x="32.6493%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.1459%" y="133" width="0.0435%" height="15" fill="rgb(234,44,54)" fg:x="7060" fg:w="9"/><text x="34.4388%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.1894%" y="133" width="0.0435%" height="15" fill="rgb(209,31,16)" fg:x="7069" fg:w="9"/><text x="34.4824%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.2329%" y="133" width="0.0435%" height="15" fill="rgb(209,89,53)" fg:x="7078" fg:w="9"/><text x="34.5259%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="34.2765%" y="133" width="0.0145%" height="15" fill="rgb(208,95,27)" fg:x="7087" fg:w="3"/><text x="34.5694%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="34.2910%" y="133" width="0.0484%" height="15" fill="rgb(221,219,21)" fg:x="7090" fg:w="10"/><text x="34.5839%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="34.3393%" y="133" width="0.0242%" height="15" fill="rgb(238,191,19)" fg:x="7100" fg:w="5"/><text x="34.6323%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="34.3635%" y="133" width="0.0145%" height="15" fill="rgb(209,58,31)" fg:x="7105" fg:w="3"/><text x="34.6565%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="34.1459%" y="149" width="0.6384%" height="15" fill="rgb(238,153,9)" fg:x="7060" fg:w="132"/><text x="34.4388%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="34.1459%" y="165" width="0.6868%" height="15" fill="rgb(215,49,6)" fg:x="7060" fg:w="142"/><text x="34.4388%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="34.1459%" y="181" width="0.7013%" height="15" fill="rgb(241,52,19)" fg:x="7060" fg:w="145"/><text x="34.4388%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.8762%" y="133" width="0.0435%" height="15" fill="rgb(250,213,48)" fg:x="7211" fg:w="9"/><text x="35.1692%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.9197%" y="133" width="0.0435%" height="15" fill="rgb(216,31,41)" fg:x="7220" fg:w="9"/><text x="35.2127%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.9632%" y="133" width="0.0435%" height="15" fill="rgb(244,71,49)" fg:x="7229" fg:w="9"/><text x="35.2562%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="35.0068%" y="133" width="0.0145%" height="15" fill="rgb(234,75,53)" fg:x="7238" fg:w="3"/><text x="35.2997%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="35.0213%" y="133" width="0.0484%" height="15" fill="rgb(235,155,39)" fg:x="7241" fg:w="10"/><text x="35.3142%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="35.0696%" y="133" width="0.0242%" height="15" fill="rgb(216,36,4)" fg:x="7251" fg:w="5"/><text x="35.3626%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="35.0938%" y="133" width="0.0145%" height="15" fill="rgb(209,174,36)" fg:x="7256" fg:w="3"/><text x="35.3868%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="34.8762%" y="149" width="0.6384%" height="15" fill="rgb(248,80,47)" fg:x="7211" fg:w="132"/><text x="35.1692%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="34.8762%" y="165" width="0.6868%" height="15" fill="rgb(217,199,54)" fg:x="7211" fg:w="142"/><text x="35.1692%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="34.8762%" y="181" width="0.7013%" height="15" fill="rgb(223,35,31)" fg:x="7211" fg:w="145"/><text x="35.1692%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.46%)</title><rect x="34.1459%" y="197" width="1.4606%" height="15" fill="rgb(232,2,21)" fg:x="7060" fg:w="302"/><text x="34.4388%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="35.6065%" y="149" width="0.0145%" height="15" fill="rgb(217,165,8)" fg:x="7362" fg:w="3"/><text x="35.8995%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="35.6210%" y="149" width="0.0193%" height="15" fill="rgb(242,176,28)" fg:x="7365" fg:w="4"/><text x="35.9140%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="35.6404%" y="149" width="0.0145%" height="15" fill="rgb(242,114,8)" fg:x="7369" fg:w="3"/><text x="35.9333%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="35.6549%" y="149" width="0.0193%" height="15" fill="rgb(249,2,49)" fg:x="7372" fg:w="4"/><text x="35.9478%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="35.6742%" y="149" width="0.0290%" height="15" fill="rgb(253,37,23)" fg:x="7376" fg:w="6"/><text x="35.9672%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="35.7032%" y="149" width="0.0774%" height="15" fill="rgb(206,112,49)" fg:x="7382" fg:w="16"/><text x="35.9962%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.47%)</title><rect x="35.6065%" y="165" width="0.4740%" height="15" fill="rgb(230,161,17)" fg:x="7362" fg:w="98"/><text x="35.8995%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.48%)</title><rect x="35.6065%" y="181" width="0.4837%" height="15" fill="rgb(245,46,26)" fg:x="7362" fg:w="100"/><text x="35.8995%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.51%)</title><rect x="35.6065%" y="197" width="0.5078%" height="15" fill="rgb(254,15,7)" fg:x="7362" fg:w="105"/><text x="35.8995%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 2.00%)</title><rect x="36.1143%" y="165" width="1.9975%" height="15" fill="rgb(212,186,42)" fg:x="7467" fg:w="413"/><text x="36.4073%" y="175.50"></text></g><g><title>memcpy (417 instructions, 2.02%)</title><rect x="36.1143%" y="181" width="2.0168%" height="15" fill="rgb(223,198,0)" fg:x="7467" fg:w="417"/><text x="36.4073%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 2.11%)</title><rect x="36.1143%" y="197" width="2.1136%" height="15" fill="rgb(224,52,7)" fg:x="7467" fg:w="437"/><text x="36.4073%" y="207.50">a..</text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.78%)</title><rect x="38.2279%" y="181" width="1.7798%" height="15" fill="rgb(219,54,22)" fg:x="7904" fg:w="368"/><text x="38.5209%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.80%)</title><rect x="38.2279%" y="197" width="1.7992%" height="15" fill="rgb(252,55,54)" fg:x="7904" fg:w="372"/><text x="38.5209%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,097 instructions, 39.16%)</title><rect x="2.5488%" y="213" width="39.1613%" height="15" fill="rgb(223,182,21)" fg:x="527" fg:w="8097"/><text x="2.8418%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.85%)</title><rect x="41.7102%" y="197" width="1.8524%" height="15" fill="rgb(211,85,51)" fg:x="8624" fg:w="383"/><text x="42.0032%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.85%)</title><rect x="43.5819%" y="197" width="1.8524%" height="15" fill="rgb(225,81,19)" fg:x="9011" fg:w="383"/><text x="43.8749%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.74%)</title><rect x="41.7102%" y="213" width="3.7435%" height="15" fill="rgb(227,64,34)" fg:x="8624" fg:w="774"/><text x="42.0032%" y="223.50">mem..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="45.4537%" y="149" width="0.0387%" height="15" fill="rgb(251,32,31)" fg:x="9398" fg:w="8"/><text x="45.7466%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 instructions, 0.26%)</title><rect x="45.4537%" y="165" width="0.2612%" height="15" fill="rgb(241,129,27)" fg:x="9398" fg:w="54"/><text x="45.7466%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.35%)</title><rect x="45.4537%" y="181" width="0.3531%" height="15" fill="rgb(246,114,26)" fg:x="9398" fg:w="73"/><text x="45.7466%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.8067%" y="101" width="0.0435%" height="15" fill="rgb(212,193,31)" fg:x="9471" fg:w="9"/><text x="46.0997%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.8503%" y="101" width="0.0435%" height="15" fill="rgb(238,47,51)" fg:x="9480" fg:w="9"/><text x="46.1432%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.8938%" y="101" width="0.0435%" height="15" fill="rgb(249,132,8)" fg:x="9489" fg:w="9"/><text x="46.1868%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="45.9373%" y="101" width="0.0145%" height="15" fill="rgb(229,96,10)" fg:x="9498" fg:w="3"/><text x="46.2303%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="45.9518%" y="101" width="0.0484%" height="15" fill="rgb(217,128,33)" fg:x="9501" fg:w="10"/><text x="46.2448%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="46.0002%" y="101" width="0.0242%" height="15" fill="rgb(248,52,52)" fg:x="9511" fg:w="5"/><text x="46.2932%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="46.0244%" y="101" width="0.0145%" height="15" fill="rgb(210,53,32)" fg:x="9516" fg:w="3"/><text x="46.3173%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="45.8067%" y="117" width="0.6384%" height="15" fill="rgb(251,135,25)" fg:x="9471" fg:w="132"/><text x="46.0997%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="45.8067%" y="133" width="0.6868%" height="15" fill="rgb(230,69,7)" fg:x="9471" fg:w="142"/><text x="46.0997%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="45.8067%" y="149" width="0.7013%" height="15" fill="rgb(213,166,46)" fg:x="9471" fg:w="145"/><text x="46.0997%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="45.8067%" y="165" width="0.7303%" height="15" fill="rgb(244,19,30)" fg:x="9471" fg:w="151"/><text x="46.0997%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.95%)</title><rect x="45.8067%" y="181" width="0.9480%" height="15" fill="rgb(247,110,32)" fg:x="9471" fg:w="196"/><text x="46.0997%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="46.7547%" y="149" width="0.0387%" height="15" fill="rgb(246,109,18)" fg:x="9667" fg:w="8"/><text x="47.0477%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="46.7934%" y="133" width="0.2612%" height="15" fill="rgb(243,14,29)" fg:x="9675" fg:w="54"/><text x="47.0864%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.44%)</title><rect x="47.0546%" y="133" width="0.4353%" height="15" fill="rgb(216,133,53)" fg:x="9729" fg:w="90"/><text x="47.3475%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.79%)</title><rect x="47.4898%" y="133" width="0.7884%" height="15" fill="rgb(234,64,10)" fg:x="9819" fg:w="163"/><text x="47.7828%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.69%)</title><rect x="46.7934%" y="149" width="2.6891%" height="15" fill="rgb(236,195,20)" fg:x="9675" fg:w="556"/><text x="47.0864%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.48%)</title><rect x="49.4825%" y="149" width="0.4788%" height="15" fill="rgb(216,152,27)" fg:x="10231" fg:w="99"/><text x="49.7755%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (826 instructions, 3.99%)</title><rect x="46.7547%" y="165" width="3.9950%" height="15" fill="rgb(208,27,38)" fg:x="9667" fg:w="826"/><text x="47.0477%" y="175.50">std..</text></g><g><title>candid::types::internal::env_add (853 instructions, 4.13%)</title><rect x="46.7547%" y="181" width="4.1256%" height="15" fill="rgb(206,142,46)" fg:x="9667" fg:w="853"/><text x="47.0477%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.8802%" y="101" width="0.0435%" height="15" fill="rgb(230,187,19)" fg:x="10520" fg:w="9"/><text x="51.1732%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.9238%" y="101" width="0.0435%" height="15" fill="rgb(207,22,43)" fg:x="10529" fg:w="9"/><text x="51.2167%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.9673%" y="101" width="0.0435%" height="15" fill="rgb(222,146,52)" fg:x="10538" fg:w="9"/><text x="51.2603%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="51.0108%" y="101" width="0.0145%" height="15" fill="rgb(244,18,29)" fg:x="10547" fg:w="3"/><text x="51.3038%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="51.0253%" y="101" width="0.0484%" height="15" fill="rgb(247,180,1)" fg:x="10550" fg:w="10"/><text x="51.3183%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="51.0737%" y="101" width="0.0242%" height="15" fill="rgb(234,34,37)" fg:x="10560" fg:w="5"/><text x="51.3667%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="51.0979%" y="101" width="0.0145%" height="15" fill="rgb(211,41,9)" fg:x="10565" fg:w="3"/><text x="51.3909%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="50.8802%" y="117" width="0.6384%" height="15" fill="rgb(223,173,35)" fg:x="10520" fg:w="132"/><text x="51.1732%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="50.8802%" y="133" width="0.6868%" height="15" fill="rgb(242,93,41)" fg:x="10520" fg:w="142"/><text x="51.1732%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="50.8802%" y="149" width="0.7013%" height="15" fill="rgb(236,83,33)" fg:x="10520" fg:w="145"/><text x="51.1732%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="50.8802%" y="165" width="0.7303%" height="15" fill="rgb(212,34,15)" fg:x="10520" fg:w="151"/><text x="51.1732%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.79%)</title><rect x="50.8802%" y="181" width="0.7884%" height="15" fill="rgb(247,37,49)" fg:x="10520" fg:w="163"/><text x="51.1732%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="51.6686%" y="149" width="0.0387%" height="15" fill="rgb(217,189,21)" fg:x="10683" fg:w="8"/><text x="51.9616%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="51.7073%" y="133" width="0.2612%" height="15" fill="rgb(218,4,52)" fg:x="10691" fg:w="54"/><text x="52.0003%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.44%)</title><rect x="51.9685%" y="133" width="0.4353%" height="15" fill="rgb(238,87,14)" fg:x="10745" fg:w="90"/><text x="52.2614%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.79%)</title><rect x="52.4038%" y="133" width="0.7884%" height="15" fill="rgb(237,198,17)" fg:x="10835" fg:w="163"/><text x="52.6967%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.69%)</title><rect x="51.7073%" y="149" width="2.6891%" height="15" fill="rgb(229,106,48)" fg:x="10691" fg:w="556"/><text x="52.0003%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.36%)</title><rect x="54.3964%" y="133" width="0.3579%" height="15" fill="rgb(252,214,17)" fg:x="11247" fg:w="74"/><text x="54.6894%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.38%)</title><rect x="54.3964%" y="149" width="0.3772%" height="15" fill="rgb(222,52,13)" fg:x="11247" fg:w="78"/><text x="54.6894%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="54.7737%" y="85" width="0.0145%" height="15" fill="rgb(207,174,29)" fg:x="11325" fg:w="3"/><text x="55.0666%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="54.7882%" y="85" width="0.0193%" height="15" fill="rgb(210,47,21)" fg:x="11328" fg:w="4"/><text x="55.0811%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="54.8075%" y="85" width="0.0145%" height="15" fill="rgb(247,161,54)" fg:x="11332" fg:w="3"/><text x="55.1005%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="54.8220%" y="85" width="0.0193%" height="15" fill="rgb(215,209,13)" fg:x="11335" fg:w="4"/><text x="55.1150%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="54.8414%" y="85" width="0.0290%" height="15" fill="rgb(229,78,24)" fg:x="11339" fg:w="6"/><text x="55.1343%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="54.8704%" y="85" width="0.0774%" height="15" fill="rgb(237,159,39)" fg:x="11345" fg:w="16"/><text x="55.1633%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.47%)</title><rect x="54.7737%" y="101" width="0.4740%" height="15" fill="rgb(214,6,23)" fg:x="11325" fg:w="98"/><text x="55.0666%" y="111.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.48%)</title><rect x="54.7737%" y="117" width="0.4837%" height="15" fill="rgb(254,89,24)" fg:x="11325" fg:w="100"/><text x="55.0666%" y="127.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.51%)</title><rect x="54.7737%" y="133" width="0.5078%" height="15" fill="rgb(215,22,48)" fg:x="11325" fg:w="105"/><text x="55.0666%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.66%)</title><rect x="54.7737%" y="149" width="0.6626%" height="15" fill="rgb(212,48,20)" fg:x="11325" fg:w="137"/><text x="55.0666%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 4.60%)</title><rect x="51.6686%" y="165" width="4.6044%" height="15" fill="rgb(248,54,37)" fg:x="10683" fg:w="952"/><text x="51.9616%" y="175.50">std:..</text></g><g><title>candid::types::internal::env_add (979 instructions, 4.73%)</title><rect x="51.6686%" y="181" width="4.7350%" height="15" fill="rgb(241,95,38)" fg:x="10683" fg:w="979"/><text x="51.9616%" y="191.50">cand..</text></g><g><title>candid::types::internal::ID::__getit (8 instructions, 0.04%)</title><rect x="56.4036%" y="149" width="0.0387%" height="15" fill="rgb(208,19,16)" fg:x="11662" fg:w="8"/><text x="56.6965%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="56.4423%" y="117" width="0.2612%" height="15" fill="rgb(232,229,17)" fg:x="11670" fg:w="54"/><text x="56.7352%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.38%)</title><rect x="56.4423%" y="133" width="0.3821%" height="15" fill="rgb(206,72,4)" fg:x="11670" fg:w="79"/><text x="56.7352%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.47%)</title><rect x="56.4423%" y="149" width="1.4655%" height="15" fill="rgb(251,86,44)" fg:x="11670" fg:w="303"/><text x="56.7352%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (18 instructions, 0.09%)</title><rect x="57.9077%" y="149" width="0.0871%" height="15" fill="rgb(217,159,6)" fg:x="11973" fg:w="18"/><text x="58.2007%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="57.9948%" y="149" width="0.0532%" height="15" fill="rgb(216,136,2)" fg:x="11991" fg:w="11"/><text x="58.2877%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (521 instructions, 2.52%)</title><rect x="56.4036%" y="165" width="2.5198%" height="15" fill="rgb(217,131,9)" fg:x="11662" fg:w="521"/><text x="56.6965%" y="175.50">s..</text></g><g><title>candid::types::internal::env_id (559 instructions, 2.70%)</title><rect x="56.4036%" y="181" width="2.7036%" height="15" fill="rgb(246,221,20)" fg:x="11662" fg:w="559"/><text x="56.6965%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,931 instructions, 14.18%)</title><rect x="45.4537%" y="197" width="14.1759%" height="15" fill="rgb(219,175,17)" fg:x="9398" fg:w="2931"/><text x="45.7466%" y="207.50">candid::types::Can..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.18%)</title><rect x="59.6295%" y="197" width="0.1838%" height="15" fill="rgb(235,84,34)" fg:x="12329" fg:w="38"/><text x="59.9225%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="59.8133%" y="133" width="0.0145%" height="15" fill="rgb(210,216,12)" fg:x="12367" fg:w="3"/><text x="60.1063%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.8278%" y="133" width="0.0193%" height="15" fill="rgb(207,1,28)" fg:x="12370" fg:w="4"/><text x="60.1208%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="59.8472%" y="133" width="0.0145%" height="15" fill="rgb(253,168,31)" fg:x="12374" fg:w="3"/><text x="60.1401%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="59.8617%" y="133" width="0.0193%" height="15" fill="rgb(240,173,36)" fg:x="12377" fg:w="4"/><text x="60.1546%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="59.8810%" y="133" width="0.0290%" height="15" fill="rgb(207,224,49)" fg:x="12381" fg:w="6"/><text x="60.1740%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.9100%" y="133" width="0.0193%" height="15" fill="rgb(205,46,23)" fg:x="12387" fg:w="4"/><text x="60.2030%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="59.9294%" y="133" width="0.0484%" height="15" fill="rgb(211,212,26)" fg:x="12391" fg:w="10"/><text x="60.2224%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.68%)</title><rect x="59.8133%" y="149" width="0.6820%" height="15" fill="rgb(222,133,27)" fg:x="12367" fg:w="141"/><text x="60.1063%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.69%)</title><rect x="59.8133%" y="165" width="0.6916%" height="15" fill="rgb(246,25,19)" fg:x="12367" fg:w="143"/><text x="60.1063%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.72%)</title><rect x="59.8133%" y="181" width="0.7158%" height="15" fill="rgb(236,165,29)" fg:x="12367" fg:w="148"/><text x="60.1063%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="60.6839%" y="133" width="0.0145%" height="15" fill="rgb(211,216,2)" fg:x="12547" fg:w="3"/><text x="60.9769%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.6984%" y="133" width="0.0193%" height="15" fill="rgb(252,33,6)" fg:x="12550" fg:w="4"/><text x="60.9914%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="60.7177%" y="133" width="0.0145%" height="15" fill="rgb(241,104,43)" fg:x="12554" fg:w="3"/><text x="61.0107%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="60.7322%" y="133" width="0.0193%" height="15" fill="rgb(221,40,2)" fg:x="12557" fg:w="4"/><text x="61.0252%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="60.7516%" y="133" width="0.0290%" height="15" fill="rgb(238,95,49)" fg:x="12561" fg:w="6"/><text x="61.0446%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.7806%" y="133" width="0.0193%" height="15" fill="rgb(219,136,33)" fg:x="12567" fg:w="4"/><text x="61.0736%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="60.8000%" y="133" width="0.0484%" height="15" fill="rgb(249,90,38)" fg:x="12571" fg:w="10"/><text x="61.0929%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.68%)</title><rect x="60.6839%" y="149" width="0.6820%" height="15" fill="rgb(222,214,39)" fg:x="12547" fg:w="141"/><text x="60.9769%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.69%)</title><rect x="60.6839%" y="165" width="0.6916%" height="15" fill="rgb(233,148,3)" fg:x="12547" fg:w="143"/><text x="60.9769%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.72%)</title><rect x="60.6839%" y="181" width="0.7158%" height="15" fill="rgb(249,49,27)" fg:x="12547" fg:w="148"/><text x="60.9769%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.74%)</title><rect x="59.8133%" y="197" width="1.7411%" height="15" fill="rgb(252,209,13)" fg:x="12367" fg:w="360"/><text x="60.1063%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.14%)</title><rect x="61.5545%" y="181" width="0.1354%" height="15" fill="rgb(219,38,53)" fg:x="12727" fg:w="28"/><text x="61.8474%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.08%)</title><rect x="61.6899%" y="181" width="0.0774%" height="15" fill="rgb(254,114,46)" fg:x="12755" fg:w="16"/><text x="61.9829%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.08%)</title><rect x="61.7673%" y="181" width="0.0774%" height="15" fill="rgb(251,48,45)" fg:x="12771" fg:w="16"/><text x="62.0602%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (141 instructions, 0.68%)</title><rect x="61.5545%" y="197" width="0.6820%" height="15" fill="rgb(211,24,18)" fg:x="12727" fg:w="141"/><text x="61.8474%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="62.2364%" y="197" width="0.0532%" height="15" fill="rgb(250,102,22)" fg:x="12868" fg:w="11"/><text x="62.5294%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="62.2896%" y="197" width="0.0532%" height="15" fill="rgb(228,6,21)" fg:x="12879" fg:w="11"/><text x="62.5826%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="62.3428%" y="197" width="0.0532%" height="15" fill="rgb(215,142,33)" fg:x="12890" fg:w="11"/><text x="62.6358%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,675 instructions, 17.77%)</title><rect x="45.4537%" y="213" width="17.7742%" height="15" fill="rgb(215,79,52)" fg:x="9398" fg:w="3675"/><text x="45.7466%" y="223.50">candid::de::IDLDeserial..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 2.00%)</title><rect x="63.2279%" y="197" width="1.9975%" height="15" fill="rgb(221,43,23)" fg:x="13073" fg:w="413"/><text x="63.5209%" y="207.50"></text></g><g><title>memcpy (417 instructions, 2.02%)</title><rect x="63.2279%" y="213" width="2.0168%" height="15" fill="rgb(215,6,39)" fg:x="13073" fg:w="417"/><text x="63.5209%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="65.2447%" y="197" width="0.0919%" height="15" fill="rgb(249,218,17)" fg:x="13490" fg:w="19"/><text x="65.5377%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="65.3366%" y="149" width="0.0145%" height="15" fill="rgb(219,206,47)" fg:x="13509" fg:w="3"/><text x="65.6296%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.3511%" y="149" width="0.0193%" height="15" fill="rgb(208,116,29)" fg:x="13512" fg:w="4"/><text x="65.6441%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="65.3705%" y="149" width="0.0145%" height="15" fill="rgb(211,201,10)" fg:x="13516" fg:w="3"/><text x="65.6634%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="65.3850%" y="149" width="0.0193%" height="15" fill="rgb(225,229,25)" fg:x="13519" fg:w="4"/><text x="65.6780%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="65.4043%" y="149" width="0.0290%" height="15" fill="rgb(226,99,43)" fg:x="13523" fg:w="6"/><text x="65.6973%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.4334%" y="149" width="0.0193%" height="15" fill="rgb(251,30,20)" fg:x="13529" fg:w="4"/><text x="65.7263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="65.4527%" y="149" width="0.0484%" height="15" fill="rgb(221,166,32)" fg:x="13533" fg:w="10"/><text x="65.7457%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.68%)</title><rect x="65.3366%" y="165" width="0.6820%" height="15" fill="rgb(212,2,30)" fg:x="13509" fg:w="141"/><text x="65.6296%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.69%)</title><rect x="65.3366%" y="181" width="0.6916%" height="15" fill="rgb(240,107,34)" fg:x="13509" fg:w="143"/><text x="65.6296%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.72%)</title><rect x="65.3366%" y="197" width="0.7158%" height="15" fill="rgb(250,152,43)" fg:x="13509" fg:w="148"/><text x="65.6296%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="66.0524%" y="133" width="0.0145%" height="15" fill="rgb(220,123,35)" fg:x="13657" fg:w="3"/><text x="66.3454%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="66.0669%" y="133" width="0.0193%" height="15" fill="rgb(210,105,29)" fg:x="13660" fg:w="4"/><text x="66.3599%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="66.0863%" y="133" width="0.0145%" height="15" fill="rgb(224,171,50)" fg:x="13664" fg:w="3"/><text x="66.3793%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="66.1008%" y="133" width="0.0193%" height="15" fill="rgb(227,172,48)" fg:x="13667" fg:w="4"/><text x="66.3938%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="66.1201%" y="133" width="0.0242%" height="15" fill="rgb(252,124,45)" fg:x="13671" fg:w="5"/><text x="66.4131%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="66.1443%" y="133" width="0.0145%" height="15" fill="rgb(242,64,7)" fg:x="13676" fg:w="3"/><text x="66.4373%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="66.1588%" y="133" width="0.0290%" height="15" fill="rgb(250,99,33)" fg:x="13679" fg:w="6"/><text x="66.4518%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="66.1879%" y="133" width="0.0193%" height="15" fill="rgb(242,110,52)" fg:x="13685" fg:w="4"/><text x="66.4808%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="66.2072%" y="133" width="0.0484%" height="15" fill="rgb(235,60,34)" fg:x="13689" fg:w="10"/><text x="66.5002%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.36%)</title><rect x="66.2556%" y="133" width="0.3579%" height="15" fill="rgb(248,186,51)" fg:x="13699" fg:w="74"/><text x="66.5485%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 1.18%)</title><rect x="66.0524%" y="149" width="1.1753%" height="15" fill="rgb(253,195,11)" fg:x="13657" fg:w="243"/><text x="66.3454%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 1.18%)</title><rect x="66.0524%" y="165" width="1.1849%" height="15" fill="rgb(224,174,6)" fg:x="13657" fg:w="245"/><text x="66.3454%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 1.21%)</title><rect x="66.0524%" y="181" width="1.2091%" height="15" fill="rgb(245,141,21)" fg:x="13657" fg:w="250"/><text x="66.3454%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 1.36%)</title><rect x="66.0524%" y="197" width="1.3639%" height="15" fill="rgb(214,77,44)" fg:x="13657" fg:w="282"/><text x="66.3454%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="67.4163%" y="197" width="0.0532%" height="15" fill="rgb(223,224,6)" fg:x="13939" fg:w="11"/><text x="67.7093%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="67.4695%" y="197" width="0.0242%" height="15" fill="rgb(235,110,44)" fg:x="13950" fg:w="5"/><text x="67.7625%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 2.72%)</title><rect x="65.2447%" y="213" width="2.7181%" height="15" fill="rgb(241,226,2)" fg:x="13490" fg:w="562"/><text x="65.5377%" y="223.50">c..</text></g><g><title>candid::utils::decode_args (13,628 instructions, 65.91%)</title><rect x="2.5488%" y="229" width="65.9122%" height="15" fill="rgb(230,70,20)" fg:x="527" fg:w="13628"/><text x="2.8418%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="68.4610%" y="181" width="0.0145%" height="15" fill="rgb(241,174,27)" fg:x="14155" fg:w="3"/><text x="68.7540%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="68.4755%" y="181" width="0.0193%" height="15" fill="rgb(249,33,50)" fg:x="14158" fg:w="4"/><text x="68.7685%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="68.4949%" y="181" width="0.0145%" height="15" fill="rgb(211,213,48)" fg:x="14162" fg:w="3"/><text x="68.7878%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="68.5094%" y="181" width="0.0193%" height="15" fill="rgb(244,56,29)" fg:x="14165" fg:w="4"/><text x="68.8024%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="68.5287%" y="181" width="0.0290%" height="15" fill="rgb(247,48,17)" fg:x="14169" fg:w="6"/><text x="68.8217%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="68.5577%" y="181" width="0.0193%" height="15" fill="rgb(218,10,31)" fg:x="14175" fg:w="4"/><text x="68.8507%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.27%)</title><rect x="68.5771%" y="181" width="0.2708%" height="15" fill="rgb(224,223,37)" fg:x="14179" fg:w="56"/><text x="68.8701%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="68.8479%" y="181" width="0.0484%" height="15" fill="rgb(246,32,26)" fg:x="14235" fg:w="10"/><text x="69.1409%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.36%)</title><rect x="68.8963%" y="181" width="0.3579%" height="15" fill="rgb(222,96,23)" fg:x="14245" fg:w="74"/><text x="69.1893%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 1.10%)</title><rect x="68.4610%" y="197" width="1.1027%" height="15" fill="rgb(233,43,0)" fg:x="14155" fg:w="228"/><text x="68.7540%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 1.11%)</title><rect x="68.4610%" y="213" width="1.1124%" height="15" fill="rgb(205,122,41)" fg:x="14155" fg:w="230"/><text x="68.7540%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 1.14%)</title><rect x="68.4610%" y="229" width="1.1366%" height="15" fill="rgb(243,170,42)" fg:x="14155" fg:w="235"/><text x="68.7540%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (14,115 instructions, 68.27%)</title><rect x="1.5283%" y="245" width="68.2676%" height="15" fill="rgb(244,185,43)" fg:x="316" fg:w="14115"/><text x="1.8213%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>hashmap::MAP::__getit (15 instructions, 0.07%)</title><rect x="69.7959%" y="229" width="0.0725%" height="15" fill="rgb(219,115,19)" fg:x="14431" fg:w="15"/><text x="70.0889%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,491 instructions, 21.72%)</title><rect x="69.7959%" y="245" width="21.7208%" height="15" fill="rgb(209,189,41)" fg:x="14431" fg:w="4491"/><text x="70.0889%" y="255.50">std::thread::local::LocalKey&lt;..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="91.5167%" y="213" width="0.0387%" height="15" fill="rgb(228,182,47)" fg:x="18922" fg:w="8"/><text x="91.8097%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="91.5554%" y="133" width="0.0145%" height="15" fill="rgb(249,142,45)" fg:x="18930" fg:w="3"/><text x="91.8484%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="91.5699%" y="133" width="0.0193%" height="15" fill="rgb(246,19,30)" fg:x="18933" fg:w="4"/><text x="91.8629%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="91.5893%" y="133" width="0.0145%" height="15" fill="rgb(250,47,47)" fg:x="18937" fg:w="3"/><text x="91.8823%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="91.6038%" y="133" width="0.0193%" height="15" fill="rgb(208,213,37)" fg:x="18940" fg:w="4"/><text x="91.8968%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="91.6231%" y="133" width="0.0242%" height="15" fill="rgb(212,92,30)" fg:x="18944" fg:w="5"/><text x="91.9161%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="91.6473%" y="133" width="0.0145%" height="15" fill="rgb(237,172,0)" fg:x="18949" fg:w="3"/><text x="91.9403%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.27%)</title><rect x="91.6618%" y="133" width="0.2708%" height="15" fill="rgb(215,20,2)" fg:x="18952" fg:w="56"/><text x="91.9548%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="91.9327%" y="133" width="0.0290%" height="15" fill="rgb(213,116,29)" fg:x="19008" fg:w="6"/><text x="92.2256%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="91.9617%" y="133" width="0.0484%" height="15" fill="rgb(238,174,2)" fg:x="19014" fg:w="10"/><text x="92.2547%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (159 instructions, 0.77%)</title><rect x="91.5554%" y="149" width="0.7690%" height="15" fill="rgb(246,186,16)" fg:x="18930" fg:w="159"/><text x="91.8484%" y="159.50"></text></g><g><title>__rdl_dealloc (161 instructions, 0.78%)</title><rect x="91.5554%" y="165" width="0.7787%" height="15" fill="rgb(231,78,53)" fg:x="18930" fg:w="161"/><text x="91.8484%" y="175.50"></text></g><g><title>__rust_dealloc (166 instructions, 0.80%)</title><rect x="91.5554%" y="181" width="0.8029%" height="15" fill="rgb(240,0,45)" fg:x="18930" fg:w="166"/><text x="91.8484%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (198 instructions, 0.96%)</title><rect x="91.5554%" y="197" width="0.9576%" height="15" fill="rgb(243,47,27)" fg:x="18930" fg:w="198"/><text x="91.8484%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.65%)</title><rect x="92.5131%" y="181" width="0.6529%" height="15" fill="rgb(234,147,53)" fg:x="19128" fg:w="135"/><text x="92.8060%" y="191.50"></text></g><g><title>memset (139 instructions, 0.67%)</title><rect x="92.5131%" y="197" width="0.6723%" height="15" fill="rgb(227,143,1)" fg:x="19128" fg:w="139"/><text x="92.8060%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (412 instructions, 1.99%)</title><rect x="91.5554%" y="213" width="1.9926%" height="15" fill="rgb(229,221,34)" fg:x="18930" fg:w="412"/><text x="91.8484%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (505 instructions, 2.44%)</title><rect x="91.5167%" y="229" width="2.4424%" height="15" fill="rgb(233,118,17)" fg:x="18922" fg:w="505"/><text x="91.8097%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="93.9592%" y="229" width="0.0145%" height="15" fill="rgb(213,93,11)" fg:x="19427" fg:w="3"/><text x="94.2521%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.16%)</title><rect x="93.9737%" y="197" width="0.1596%" height="15" fill="rgb(218,164,50)" fg:x="19430" fg:w="33"/><text x="94.2667%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.43%)</title><rect x="93.9737%" y="213" width="0.4256%" height="15" fill="rgb(232,120,11)" fg:x="19430" fg:w="88"/><text x="94.2667%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.3993%" y="101" width="0.0435%" height="15" fill="rgb(234,129,0)" fg:x="19518" fg:w="9"/><text x="94.6923%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.4428%" y="101" width="0.0435%" height="15" fill="rgb(224,128,52)" fg:x="19527" fg:w="9"/><text x="94.7358%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.4864%" y="101" width="0.0435%" height="15" fill="rgb(213,202,40)" fg:x="19536" fg:w="9"/><text x="94.7793%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.5299%" y="101" width="0.0145%" height="15" fill="rgb(216,44,22)" fg:x="19545" fg:w="3"/><text x="94.8229%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="94.5444%" y="101" width="0.0484%" height="15" fill="rgb(236,124,23)" fg:x="19548" fg:w="10"/><text x="94.8374%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.5928%" y="101" width="0.0242%" height="15" fill="rgb(243,28,42)" fg:x="19558" fg:w="5"/><text x="94.8857%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="94.6169%" y="101" width="0.0145%" height="15" fill="rgb(225,118,18)" fg:x="19563" fg:w="3"/><text x="94.9099%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.64%)</title><rect x="94.3993%" y="117" width="0.6384%" height="15" fill="rgb(252,114,14)" fg:x="19518" fg:w="132"/><text x="94.6923%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.69%)</title><rect x="94.3993%" y="133" width="0.6868%" height="15" fill="rgb(228,156,38)" fg:x="19518" fg:w="142"/><text x="94.6923%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.70%)</title><rect x="94.3993%" y="149" width="0.7013%" height="15" fill="rgb(247,32,54)" fg:x="19518" fg:w="145"/><text x="94.6923%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.73%)</title><rect x="94.3993%" y="165" width="0.7303%" height="15" fill="rgb(249,128,3)" fg:x="19518" fg:w="151"/><text x="94.6923%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.89%)</title><rect x="94.3993%" y="181" width="0.8851%" height="15" fill="rgb(218,33,18)" fg:x="19518" fg:w="183"/><text x="94.6923%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.21%)</title><rect x="94.3993%" y="197" width="1.2091%" height="15" fill="rgb(236,60,17)" fg:x="19518" fg:w="250"/><text x="94.6923%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.05%)</title><rect x="95.6084%" y="197" width="0.0484%" height="15" fill="rgb(237,63,22)" fg:x="19768" fg:w="10"/><text x="95.9014%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.6568%" y="181" width="0.0532%" height="15" fill="rgb(210,27,14)" fg:x="19778" fg:w="11"/><text x="95.9498%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.7293%" y="181" width="0.0532%" height="15" fill="rgb(237,39,29)" fg:x="19793" fg:w="11"/><text x="96.0223%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.15%)</title><rect x="95.6568%" y="197" width="0.1451%" height="15" fill="rgb(215,128,47)" fg:x="19778" fg:w="30"/><text x="95.9498%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.38%)</title><rect x="94.3993%" y="213" width="2.3796%" height="15" fill="rgb(246,159,28)" fg:x="19518" fg:w="492"/><text x="94.6923%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="96.7789%" y="213" width="0.0290%" height="15" fill="rgb(217,102,37)" fg:x="20010" fg:w="6"/><text x="97.0718%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.15%)</title><rect x="96.8079%" y="197" width="0.1499%" height="15" fill="rgb(245,205,50)" fg:x="20016" fg:w="31"/><text x="97.1009%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.42%)</title><rect x="96.8079%" y="213" width="0.4159%" height="15" fill="rgb(229,55,35)" fg:x="20016" fg:w="86"/><text x="97.1009%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.2238%" y="213" width="0.0290%" height="15" fill="rgb(206,6,27)" fg:x="20102" fg:w="6"/><text x="97.5168%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.2529%" y="213" width="0.0725%" height="15" fill="rgb(217,46,46)" fg:x="20108" fg:w="15"/><text x="97.5458%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.73%)</title><rect x="93.9737%" y="229" width="3.7338%" height="15" fill="rgb(249,224,28)" fg:x="19430" fg:w="772"/><text x="94.2667%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.7075%" y="229" width="0.0242%" height="15" fill="rgb(251,194,44)" fg:x="20202" fg:w="5"/><text x="98.0005%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.7317%" y="181" width="0.0145%" height="15" fill="rgb(218,47,36)" fg:x="20207" fg:w="3"/><text x="98.0246%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.7462%" y="181" width="0.0193%" height="15" fill="rgb(226,174,11)" fg:x="20210" fg:w="4"/><text x="98.0391%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.7655%" y="181" width="0.0145%" height="15" fill="rgb(253,29,34)" fg:x="20214" fg:w="3"/><text x="98.0585%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.7800%" y="181" width="0.0193%" height="15" fill="rgb(244,73,35)" fg:x="20217" fg:w="4"/><text x="98.0730%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.7994%" y="181" width="0.0290%" height="15" fill="rgb(249,216,48)" fg:x="20221" fg:w="6"/><text x="98.0923%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="97.8284%" y="181" width="0.0484%" height="15" fill="rgb(223,100,14)" fg:x="20227" fg:w="10"/><text x="98.1214%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="97.7317%" y="197" width="0.3386%" height="15" fill="rgb(224,21,31)" fg:x="20207" fg:w="70"/><text x="98.0246%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="97.7317%" y="213" width="0.3482%" height="15" fill="rgb(226,39,42)" fg:x="20207" fg:w="72"/><text x="98.0246%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.37%)</title><rect x="97.7317%" y="229" width="0.3724%" height="15" fill="rgb(238,222,36)" fg:x="20207" fg:w="77"/><text x="98.0246%" y="239.50"></text></g><g><title>candid::utils::write_args (1,438 instructions, 6.95%)</title><rect x="91.5167%" y="245" width="6.9549%" height="15" fill="rgb(246,146,1)" fg:x="18922" fg:w="1438"/><text x="91.8097%" y="255.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.4717%" y="197" width="0.0145%" height="15" fill="rgb(242,70,28)" fg:x="20360" fg:w="3"/><text x="98.7646%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.4862%" y="197" width="0.0193%" height="15" fill="rgb(253,46,5)" fg:x="20363" fg:w="4"/><text x="98.7791%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.5055%" y="197" width="0.0145%" height="15" fill="rgb(251,140,46)" fg:x="20367" fg:w="3"/><text x="98.7985%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.5200%" y="197" width="0.0193%" height="15" fill="rgb(210,118,16)" fg:x="20370" fg:w="4"/><text x="98.8130%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.5394%" y="197" width="0.0290%" height="15" fill="rgb(254,155,18)" fg:x="20374" fg:w="6"/><text x="98.8323%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="98.5684%" y="197" width="0.0774%" height="15" fill="rgb(242,64,30)" fg:x="20380" fg:w="16"/><text x="98.8614%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.47%)</title><rect x="98.4717%" y="213" width="0.4740%" height="15" fill="rgb(248,15,32)" fg:x="20360" fg:w="98"/><text x="98.7646%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.48%)</title><rect x="98.4717%" y="229" width="0.4837%" height="15" fill="rgb(241,128,15)" fg:x="20360" fg:w="100"/><text x="98.7646%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.9795%" y="197" width="0.0145%" height="15" fill="rgb(247,198,19)" fg:x="20465" fg:w="3"/><text x="99.2725%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.9940%" y="197" width="0.0193%" height="15" fill="rgb(230,158,14)" fg:x="20468" fg:w="4"/><text x="99.2870%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="99.0133%" y="197" width="0.0145%" height="15" fill="rgb(240,154,30)" fg:x="20472" fg:w="3"/><text x="99.3063%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.0279%" y="197" width="0.0193%" height="15" fill="rgb(226,140,35)" fg:x="20475" fg:w="4"/><text x="99.3208%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.0472%" y="197" width="0.0242%" height="15" fill="rgb(241,12,48)" fg:x="20479" fg:w="5"/><text x="99.3402%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.0714%" y="197" width="0.0145%" height="15" fill="rgb(247,131,52)" fg:x="20484" fg:w="3"/><text x="99.3644%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.0859%" y="197" width="0.0290%" height="15" fill="rgb(248,24,21)" fg:x="20487" fg:w="6"/><text x="99.3789%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="99.1149%" y="197" width="0.0484%" height="15" fill="rgb(236,110,23)" fg:x="20493" fg:w="10"/><text x="99.4079%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.59%)</title><rect x="98.9795%" y="213" width="0.5901%" height="15" fill="rgb(243,187,6)" fg:x="20465" fg:w="122"/><text x="99.2725%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.60%)</title><rect x="98.9795%" y="229" width="0.5997%" height="15" fill="rgb(232,145,2)" fg:x="20465" fg:w="124"/><text x="99.2725%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.13%)</title><rect x="98.4717%" y="245" width="1.1317%" height="15" fill="rgb(228,92,25)" fg:x="20360" fg:w="234"/><text x="98.7646%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (20,665 instructions, 99.95%)</title><rect x="0.0387%" y="261" width="99.9468%" height="15" fill="rgb(214,158,41)" fg:x="8" fg:w="20665"/><text x="0.3317%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (20,676 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(238,94,29)" fg:x="0" fg:w="20676"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_get (20,676 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(238,8,25)" fg:x="0" fg:w="20676"/><text x="0.2930%" y="287.50">canister_update batch_get</text></g></svg></svg>