<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap_rs.batch_get</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="20385"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0392%" height="15" fill="rgb(209,105,46)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0392%" y="181" width="0.0442%" height="15" fill="rgb(241,46,36)" fg:x="8" fg:w="9"/><text x="0.3322%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0834%" y="181" width="0.0442%" height="15" fill="rgb(252,215,23)" fg:x="17" fg:w="9"/><text x="0.3764%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1275%" y="181" width="0.0442%" height="15" fill="rgb(214,101,43)" fg:x="26" fg:w="9"/><text x="0.4205%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1717%" y="181" width="0.0147%" height="15" fill="rgb(217,148,32)" fg:x="35" fg:w="3"/><text x="0.4647%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.1864%" y="181" width="0.0491%" height="15" fill="rgb(227,63,54)" fg:x="38" fg:w="10"/><text x="0.4794%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2355%" y="181" width="0.0245%" height="15" fill="rgb(253,224,10)" fg:x="48" fg:w="5"/><text x="0.5284%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2600%" y="181" width="0.0147%" height="15" fill="rgb(236,127,18)" fg:x="53" fg:w="3"/><text x="0.5530%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="0.0392%" y="197" width="0.6475%" height="15" fill="rgb(225,66,50)" fg:x="8" fg:w="132"/><text x="0.3322%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="0.0392%" y="213" width="0.6966%" height="15" fill="rgb(206,208,21)" fg:x="8" fg:w="142"/><text x="0.3322%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="0.0392%" y="229" width="0.7113%" height="15" fill="rgb(220,229,1)" fg:x="8" fg:w="145"/><text x="0.3322%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7800%" y="181" width="0.0442%" height="15" fill="rgb(242,25,18)" fg:x="159" fg:w="9"/><text x="1.0730%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8241%" y="181" width="0.0442%" height="15" fill="rgb(247,36,20)" fg:x="168" fg:w="9"/><text x="1.1171%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8683%" y="181" width="0.0442%" height="15" fill="rgb(211,173,32)" fg:x="177" fg:w="9"/><text x="1.1613%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.9124%" y="181" width="0.0147%" height="15" fill="rgb(213,120,39)" fg:x="186" fg:w="3"/><text x="1.2054%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.9272%" y="181" width="0.0491%" height="15" fill="rgb(221,79,0)" fg:x="189" fg:w="10"/><text x="1.2201%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.9762%" y="181" width="0.0245%" height="15" fill="rgb(235,86,3)" fg:x="199" fg:w="5"/><text x="1.2692%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.0007%" y="181" width="0.0147%" height="15" fill="rgb(226,74,11)" fg:x="204" fg:w="3"/><text x="1.2937%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="0.7800%" y="197" width="0.6475%" height="15" fill="rgb(209,79,25)" fg:x="159" fg:w="132"/><text x="1.0730%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="0.7800%" y="213" width="0.6966%" height="15" fill="rgb(231,49,19)" fg:x="159" fg:w="142"/><text x="1.0730%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="0.7800%" y="229" width="0.7113%" height="15" fill="rgb(242,90,14)" fg:x="159" fg:w="145"/><text x="1.0730%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.48%)</title><rect x="0.0392%" y="245" width="1.4815%" height="15" fill="rgb(214,37,27)" fg:x="8" fg:w="302"/><text x="0.3322%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.5207%" y="245" width="0.0294%" height="15" fill="rgb(235,120,38)" fg:x="310" fg:w="6"/><text x="1.8137%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5502%" y="149" width="0.0442%" height="15" fill="rgb(241,178,7)" fg:x="316" fg:w="9"/><text x="1.8431%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5943%" y="149" width="0.0442%" height="15" fill="rgb(218,96,53)" fg:x="325" fg:w="9"/><text x="1.8873%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.6385%" y="149" width="0.0442%" height="15" fill="rgb(245,171,21)" fg:x="334" fg:w="9"/><text x="1.9314%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.6826%" y="149" width="0.0147%" height="15" fill="rgb(244,75,42)" fg:x="343" fg:w="3"/><text x="1.9756%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="1.6973%" y="149" width="0.0491%" height="15" fill="rgb(215,189,9)" fg:x="346" fg:w="10"/><text x="1.9903%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.7464%" y="149" width="0.0245%" height="15" fill="rgb(237,196,45)" fg:x="356" fg:w="5"/><text x="2.0394%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.7709%" y="149" width="0.0147%" height="15" fill="rgb(235,156,23)" fg:x="361" fg:w="3"/><text x="2.0639%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="1.5502%" y="165" width="0.6475%" height="15" fill="rgb(210,74,48)" fg:x="316" fg:w="132"/><text x="1.8431%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="1.5502%" y="181" width="0.6966%" height="15" fill="rgb(231,186,28)" fg:x="316" fg:w="142"/><text x="1.8431%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="1.5502%" y="197" width="0.7113%" height="15" fill="rgb(231,33,5)" fg:x="316" fg:w="145"/><text x="1.8431%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="1.5502%" y="213" width="0.7407%" height="15" fill="rgb(225,8,43)" fg:x="316" fg:w="151"/><text x="1.8431%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (209 instructions, 1.03%)</title><rect x="1.5502%" y="229" width="1.0253%" height="15" fill="rgb(211,63,34)" fg:x="316" fg:w="209"/><text x="1.8431%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.31%)</title><rect x="2.5803%" y="181" width="0.3091%" height="15" fill="rgb(245,140,2)" fg:x="526" fg:w="63"/><text x="2.8733%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.8894%" y="117" width="0.0294%" height="15" fill="rgb(210,85,44)" fg:x="589" fg:w="6"/><text x="3.1823%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="2.8894%" y="133" width="0.0491%" height="15" fill="rgb(224,162,31)" fg:x="589" fg:w="10"/><text x="3.1823%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.12%)</title><rect x="2.8894%" y="149" width="2.1241%" height="15" fill="rgb(226,46,45)" fg:x="589" fg:w="433"/><text x="3.1823%" y="159.50">c..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.37%)</title><rect x="5.0135%" y="149" width="0.3728%" height="15" fill="rgb(222,128,12)" fg:x="1022" fg:w="76"/><text x="5.3065%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.26%)</title><rect x="5.3863%" y="149" width="0.2551%" height="15" fill="rgb(228,159,37)" fg:x="1098" fg:w="52"/><text x="5.6793%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.26%)</title><rect x="5.6414%" y="149" width="0.2551%" height="15" fill="rgb(221,87,35)" fg:x="1150" fg:w="52"/><text x="5.9344%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.26%)</title><rect x="5.8965%" y="149" width="0.2551%" height="15" fill="rgb(215,146,13)" fg:x="1202" fg:w="52"/><text x="6.1895%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.26%)</title><rect x="6.1516%" y="149" width="0.2551%" height="15" fill="rgb(231,131,54)" fg:x="1254" fg:w="52"/><text x="6.4446%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (859 instructions, 4.21%)</title><rect x="2.8894%" y="181" width="4.2139%" height="15" fill="rgb(245,201,14)" fg:x="589" fg:w="859"/><text x="3.1823%" y="191.50">binr..</text></g><g><title> 4]&gt;::read_options (859 instructions, 4.21%)</title><rect x="2.8894%" y="165" width="4.2139%" height="15" fill="rgb(238,215,19)" fg:x="589" fg:w="859"/><text x="3.1823%" y="175.50"> 4]&gt;..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.31%)</title><rect x="7.1033%" y="181" width="0.3091%" height="15" fill="rgb(246,7,43)" fg:x="1448" fg:w="63"/><text x="7.3962%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.38%)</title><rect x="7.4123%" y="165" width="0.3777%" height="15" fill="rgb(206,217,3)" fg:x="1511" fg:w="77"/><text x="7.7053%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.51%)</title><rect x="7.4123%" y="181" width="0.5102%" height="15" fill="rgb(229,35,53)" fg:x="1511" fg:w="104"/><text x="7.7053%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="7.9225%" y="133" width="0.0294%" height="15" fill="rgb(245,125,28)" fg:x="1615" fg:w="6"/><text x="8.2155%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="7.9225%" y="149" width="0.0491%" height="15" fill="rgb(241,211,45)" fg:x="1615" fg:w="10"/><text x="8.2155%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.12%)</title><rect x="7.9225%" y="165" width="2.1241%" height="15" fill="rgb(242,102,13)" fg:x="1615" fg:w="433"/><text x="8.2155%" y="175.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.09%)</title><rect x="10.0466%" y="149" width="0.0883%" height="15" fill="rgb(242,72,21)" fg:x="2048" fg:w="18"/><text x="10.3396%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.11%)</title><rect x="10.0466%" y="165" width="0.1079%" height="15" fill="rgb(230,219,47)" fg:x="2048" fg:w="22"/><text x="10.3396%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.1545%" y="69" width="0.0442%" height="15" fill="rgb(246,95,39)" fg:x="2070" fg:w="9"/><text x="10.4475%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.1987%" y="69" width="0.0442%" height="15" fill="rgb(254,117,45)" fg:x="2079" fg:w="9"/><text x="10.4916%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="10.2428%" y="69" width="0.0442%" height="15" fill="rgb(226,219,44)" fg:x="2088" fg:w="9"/><text x="10.5358%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="10.2870%" y="69" width="0.0147%" height="15" fill="rgb(250,10,12)" fg:x="2097" fg:w="3"/><text x="10.5799%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="10.3017%" y="69" width="0.0491%" height="15" fill="rgb(233,87,3)" fg:x="2100" fg:w="10"/><text x="10.5947%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="10.3507%" y="69" width="0.0245%" height="15" fill="rgb(233,227,39)" fg:x="2110" fg:w="5"/><text x="10.6437%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="10.3753%" y="69" width="0.0147%" height="15" fill="rgb(231,84,48)" fg:x="2115" fg:w="3"/><text x="10.6682%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="10.1545%" y="85" width="0.6475%" height="15" fill="rgb(229,204,45)" fg:x="2070" fg:w="132"/><text x="10.4475%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="10.1545%" y="101" width="0.6966%" height="15" fill="rgb(246,112,51)" fg:x="2070" fg:w="142"/><text x="10.4475%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="10.1545%" y="117" width="0.7113%" height="15" fill="rgb(229,138,40)" fg:x="2070" fg:w="145"/><text x="10.4475%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="10.1545%" y="133" width="0.7407%" height="15" fill="rgb(222,63,51)" fg:x="2070" fg:w="151"/><text x="10.4475%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.29%)</title><rect x="10.8953%" y="85" width="0.2943%" height="15" fill="rgb(247,25,36)" fg:x="2221" fg:w="60"/><text x="11.1882%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.31%)</title><rect x="10.8953%" y="101" width="0.3140%" height="15" fill="rgb(252,131,54)" fg:x="2221" fg:w="64"/><text x="11.1882%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.44%)</title><rect x="10.8953%" y="117" width="0.4366%" height="15" fill="rgb(215,15,38)" fg:x="2221" fg:w="89"/><text x="11.1882%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="11.3319%" y="69" width="0.0491%" height="15" fill="rgb(209,147,26)" fg:x="2310" fg:w="10"/><text x="11.6248%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.15%)</title><rect x="11.3809%" y="37" width="0.1472%" height="15" fill="rgb(236,23,52)" fg:x="2320" fg:w="30"/><text x="11.6739%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.17%)</title><rect x="11.3809%" y="53" width="0.1668%" height="15" fill="rgb(245,67,34)" fg:x="2320" fg:w="34"/><text x="11.6739%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.29%)</title><rect x="11.3809%" y="69" width="0.2894%" height="15" fill="rgb(206,190,24)" fg:x="2320" fg:w="59"/><text x="11.6739%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.58%)</title><rect x="11.3319%" y="85" width="0.5838%" height="15" fill="rgb(233,120,22)" fg:x="2310" fg:w="119"/><text x="11.6248%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.85%)</title><rect x="11.3319%" y="101" width="0.8536%" height="15" fill="rgb(229,212,12)" fg:x="2310" fg:w="174"/><text x="11.6248%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.88%)</title><rect x="11.3319%" y="117" width="0.8781%" height="15" fill="rgb(216,226,3)" fg:x="2310" fg:w="179"/><text x="11.6248%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.86%)</title><rect x="10.8953%" y="133" width="1.8592%" height="15" fill="rgb(223,13,10)" fg:x="2221" fg:w="379"/><text x="11.1882%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.30%)</title><rect x="10.1545%" y="149" width="3.3014%" height="15" fill="rgb(226,91,34)" fg:x="2070" fg:w="673"/><text x="10.4475%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.37%)</title><rect x="13.4560%" y="149" width="0.3728%" height="15" fill="rgb(218,55,54)" fg:x="2743" fg:w="76"/><text x="13.7489%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="13.8288%" y="101" width="0.0147%" height="15" fill="rgb(246,20,4)" fg:x="2819" fg:w="3"/><text x="14.1218%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="13.8435%" y="101" width="0.0196%" height="15" fill="rgb(242,104,9)" fg:x="2822" fg:w="4"/><text x="14.1365%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="13.8631%" y="101" width="0.0147%" height="15" fill="rgb(226,169,29)" fg:x="2826" fg:w="3"/><text x="14.1561%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="13.8779%" y="101" width="0.0196%" height="15" fill="rgb(247,187,3)" fg:x="2829" fg:w="4"/><text x="14.1708%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="13.8975%" y="101" width="0.0294%" height="15" fill="rgb(243,67,52)" fg:x="2833" fg:w="6"/><text x="14.1904%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="13.9269%" y="101" width="0.0491%" height="15" fill="rgb(227,203,37)" fg:x="2839" fg:w="10"/><text x="14.2199%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="13.8288%" y="117" width="0.3434%" height="15" fill="rgb(240,78,45)" fg:x="2819" fg:w="70"/><text x="14.1218%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="13.8288%" y="133" width="0.3532%" height="15" fill="rgb(232,137,19)" fg:x="2819" fg:w="72"/><text x="14.1218%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.38%)</title><rect x="13.8288%" y="149" width="0.3777%" height="15" fill="rgb(232,66,38)" fg:x="2819" fg:w="77"/><text x="14.1218%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.40%)</title><rect x="10.1545%" y="165" width="4.4003%" height="15" fill="rgb(227,182,10)" fg:x="2070" fg:w="897"/><text x="10.4475%" y="175.50">binr..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="14.5548%" y="165" width="0.1226%" height="15" fill="rgb(253,214,38)" fg:x="2967" fg:w="25"/><text x="14.8478%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,525 instructions, 7.48%)</title><rect x="7.9225%" y="181" width="7.4810%" height="15" fill="rgb(211,123,5)" fg:x="1615" fg:w="1525"/><text x="8.2155%" y="191.50">binread:..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.28%)</title><rect x="15.4035%" y="181" width="0.2845%" height="15" fill="rgb(218,100,24)" fg:x="3140" fg:w="58"/><text x="15.6965%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.38%)</title><rect x="15.6880%" y="165" width="0.3777%" height="15" fill="rgb(231,200,26)" fg:x="3198" fg:w="77"/><text x="15.9810%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.51%)</title><rect x="15.6880%" y="181" width="0.5102%" height="15" fill="rgb(234,204,16)" fg:x="3198" fg:w="104"/><text x="15.9810%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="16.1982%" y="133" width="0.0294%" height="15" fill="rgb(235,38,6)" fg:x="3302" fg:w="6"/><text x="16.4912%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="16.1982%" y="149" width="0.0491%" height="15" fill="rgb(217,131,53)" fg:x="3302" fg:w="10"/><text x="16.4912%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 2.12%)</title><rect x="16.1982%" y="165" width="2.1241%" height="15" fill="rgb(241,164,36)" fg:x="3302" fg:w="433"/><text x="16.4912%" y="175.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.09%)</title><rect x="18.3223%" y="149" width="0.0883%" height="15" fill="rgb(234,18,4)" fg:x="3735" fg:w="18"/><text x="18.6153%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.11%)</title><rect x="18.3223%" y="165" width="0.1079%" height="15" fill="rgb(240,129,31)" fg:x="3735" fg:w="22"/><text x="18.6153%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.4302%" y="69" width="0.0442%" height="15" fill="rgb(234,15,13)" fg:x="3757" fg:w="9"/><text x="18.7232%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.4744%" y="69" width="0.0442%" height="15" fill="rgb(243,74,20)" fg:x="3766" fg:w="9"/><text x="18.7673%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="18.5185%" y="69" width="0.0442%" height="15" fill="rgb(224,58,29)" fg:x="3775" fg:w="9"/><text x="18.8115%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="18.5627%" y="69" width="0.0147%" height="15" fill="rgb(210,136,6)" fg:x="3784" fg:w="3"/><text x="18.8556%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="18.5774%" y="69" width="0.0491%" height="15" fill="rgb(245,128,33)" fg:x="3787" fg:w="10"/><text x="18.8704%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="18.6264%" y="69" width="0.0245%" height="15" fill="rgb(245,82,45)" fg:x="3797" fg:w="5"/><text x="18.9194%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="18.6510%" y="69" width="0.0147%" height="15" fill="rgb(215,182,1)" fg:x="3802" fg:w="3"/><text x="18.9439%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="18.4302%" y="85" width="0.6475%" height="15" fill="rgb(209,185,23)" fg:x="3757" fg:w="132"/><text x="18.7232%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="18.4302%" y="101" width="0.6966%" height="15" fill="rgb(224,184,0)" fg:x="3757" fg:w="142"/><text x="18.7232%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="18.4302%" y="117" width="0.7113%" height="15" fill="rgb(224,95,46)" fg:x="3757" fg:w="145"/><text x="18.7232%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="18.4302%" y="133" width="0.7407%" height="15" fill="rgb(221,49,27)" fg:x="3757" fg:w="151"/><text x="18.7232%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.29%)</title><rect x="19.1710%" y="85" width="0.2943%" height="15" fill="rgb(236,85,1)" fg:x="3908" fg:w="60"/><text x="19.4639%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.31%)</title><rect x="19.1710%" y="101" width="0.3140%" height="15" fill="rgb(241,143,53)" fg:x="3908" fg:w="64"/><text x="19.4639%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.44%)</title><rect x="19.1710%" y="117" width="0.4366%" height="15" fill="rgb(236,186,37)" fg:x="3908" fg:w="89"/><text x="19.4639%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="19.6076%" y="69" width="0.0491%" height="15" fill="rgb(241,19,51)" fg:x="3997" fg:w="10"/><text x="19.9005%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.15%)</title><rect x="19.6566%" y="37" width="0.1472%" height="15" fill="rgb(226,57,17)" fg:x="4007" fg:w="30"/><text x="19.9496%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.17%)</title><rect x="19.6566%" y="53" width="0.1668%" height="15" fill="rgb(222,106,23)" fg:x="4007" fg:w="34"/><text x="19.9496%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.29%)</title><rect x="19.6566%" y="69" width="0.2894%" height="15" fill="rgb(235,103,12)" fg:x="4007" fg:w="59"/><text x="19.9496%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.58%)</title><rect x="19.6076%" y="85" width="0.5838%" height="15" fill="rgb(237,174,14)" fg:x="3997" fg:w="119"/><text x="19.9005%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.85%)</title><rect x="19.6076%" y="101" width="0.8536%" height="15" fill="rgb(234,229,9)" fg:x="3997" fg:w="174"/><text x="19.9005%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.88%)</title><rect x="19.6076%" y="117" width="0.8781%" height="15" fill="rgb(212,178,34)" fg:x="3997" fg:w="179"/><text x="19.9005%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.86%)</title><rect x="19.1710%" y="133" width="1.8592%" height="15" fill="rgb(239,155,5)" fg:x="3908" fg:w="379"/><text x="19.4639%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.30%)</title><rect x="18.4302%" y="149" width="3.3014%" height="15" fill="rgb(210,205,3)" fg:x="3757" fg:w="673"/><text x="18.7232%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.37%)</title><rect x="21.7317%" y="149" width="0.3728%" height="15" fill="rgb(215,64,52)" fg:x="4430" fg:w="76"/><text x="22.0246%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="22.1045%" y="101" width="0.0147%" height="15" fill="rgb(220,206,31)" fg:x="4506" fg:w="3"/><text x="22.3975%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="22.1192%" y="101" width="0.0196%" height="15" fill="rgb(232,61,4)" fg:x="4509" fg:w="4"/><text x="22.4122%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="22.1388%" y="101" width="0.0147%" height="15" fill="rgb(207,45,6)" fg:x="4513" fg:w="3"/><text x="22.4318%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="22.1535%" y="101" width="0.0196%" height="15" fill="rgb(232,25,5)" fg:x="4516" fg:w="4"/><text x="22.4465%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="22.1732%" y="101" width="0.0294%" height="15" fill="rgb(240,24,49)" fg:x="4520" fg:w="6"/><text x="22.4661%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="22.2026%" y="101" width="0.0491%" height="15" fill="rgb(234,213,15)" fg:x="4526" fg:w="10"/><text x="22.4956%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="22.1045%" y="117" width="0.3434%" height="15" fill="rgb(214,145,12)" fg:x="4506" fg:w="70"/><text x="22.3975%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="22.1045%" y="133" width="0.3532%" height="15" fill="rgb(253,127,18)" fg:x="4506" fg:w="72"/><text x="22.3975%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.38%)</title><rect x="22.1045%" y="149" width="0.3777%" height="15" fill="rgb(243,123,26)" fg:x="4506" fg:w="77"/><text x="22.3975%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.40%)</title><rect x="18.4302%" y="165" width="4.4003%" height="15" fill="rgb(217,172,36)" fg:x="3757" fg:w="897"/><text x="18.7232%" y="175.50">binr..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.31%)</title><rect x="22.8305%" y="133" width="0.3091%" height="15" fill="rgb(247,212,1)" fg:x="4654" fg:w="63"/><text x="23.1235%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.54%)</title><rect x="23.1396%" y="117" width="0.5396%" height="15" fill="rgb(231,156,28)" fg:x="4717" fg:w="110"/><text x="23.4325%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.67%)</title><rect x="23.1396%" y="133" width="0.6721%" height="15" fill="rgb(208,43,5)" fg:x="4717" fg:w="137"/><text x="23.4325%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.28%)</title><rect x="23.8116%" y="133" width="0.2845%" height="15" fill="rgb(247,195,47)" fg:x="4854" fg:w="58"/><text x="24.1046%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (314 instructions, 1.54%)</title><rect x="22.8305%" y="149" width="1.5403%" height="15" fill="rgb(252,60,41)" fg:x="4654" fg:w="314"/><text x="23.1235%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.3709%" y="85" width="0.0442%" height="15" fill="rgb(212,128,34)" fg:x="4968" fg:w="9"/><text x="24.6638%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.4150%" y="85" width="0.0442%" height="15" fill="rgb(231,203,53)" fg:x="4977" fg:w="9"/><text x="24.7080%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="24.4592%" y="85" width="0.0442%" height="15" fill="rgb(219,114,25)" fg:x="4986" fg:w="9"/><text x="24.7521%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="24.5033%" y="85" width="0.0147%" height="15" fill="rgb(244,44,5)" fg:x="4995" fg:w="3"/><text x="24.7963%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="24.5180%" y="85" width="0.0491%" height="15" fill="rgb(215,76,33)" fg:x="4998" fg:w="10"/><text x="24.8110%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="24.5671%" y="85" width="0.0245%" height="15" fill="rgb(236,224,11)" fg:x="5008" fg:w="5"/><text x="24.8601%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="24.5916%" y="85" width="0.0147%" height="15" fill="rgb(209,97,15)" fg:x="5013" fg:w="3"/><text x="24.8846%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="24.3709%" y="101" width="0.6475%" height="15" fill="rgb(244,205,37)" fg:x="4968" fg:w="132"/><text x="24.6638%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="24.3709%" y="117" width="0.6966%" height="15" fill="rgb(239,193,31)" fg:x="4968" fg:w="142"/><text x="24.6638%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="24.3709%" y="133" width="0.7113%" height="15" fill="rgb(243,158,33)" fg:x="4968" fg:w="145"/><text x="24.6638%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="24.3709%" y="149" width="0.7407%" height="15" fill="rgb(233,226,8)" fg:x="4968" fg:w="151"/><text x="24.6638%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (550 instructions, 2.70%)</title><rect x="22.8305%" y="165" width="2.6981%" height="15" fill="rgb(205,155,46)" fg:x="4654" fg:w="550"/><text x="23.1235%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,050 instructions, 10.06%)</title><rect x="16.1982%" y="181" width="10.0564%" height="15" fill="rgb(234,44,54)" fg:x="3302" fg:w="2050"/><text x="16.4912%" y="191.50">binread::bin..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.28%)</title><rect x="26.2546%" y="181" width="0.2845%" height="15" fill="rgb(209,31,16)" fg:x="5352" fg:w="58"/><text x="26.5476%" y="191.50"></text></g><g><title>binread::BinRead::read (5,102 instructions, 25.03%)</title><rect x="2.5754%" y="197" width="25.0282%" height="15" fill="rgb(209,89,53)" fg:x="525" fg:w="5102"/><text x="2.8684%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="27.6036%" y="181" width="0.0687%" height="15" fill="rgb(208,95,27)" fg:x="5627" fg:w="14"/><text x="27.8966%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.07%)</title><rect x="27.6723%" y="165" width="0.0687%" height="15" fill="rgb(221,219,21)" fg:x="5641" fg:w="14"/><text x="27.9653%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.12%)</title><rect x="27.7410%" y="165" width="0.1226%" height="15" fill="rgb(238,191,19)" fg:x="5655" fg:w="25"/><text x="28.0340%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="27.8636%" y="165" width="0.0932%" height="15" fill="rgb(209,58,31)" fg:x="5680" fg:w="19"/><text x="28.1566%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (210 instructions, 1.03%)</title><rect x="27.6723%" y="181" width="1.0302%" height="15" fill="rgb(238,153,9)" fg:x="5641" fg:w="210"/><text x="27.9653%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.7025%" y="101" width="0.0442%" height="15" fill="rgb(215,49,6)" fg:x="5851" fg:w="9"/><text x="28.9954%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.7466%" y="101" width="0.0442%" height="15" fill="rgb(241,52,19)" fg:x="5860" fg:w="9"/><text x="29.0396%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.7908%" y="101" width="0.0442%" height="15" fill="rgb(250,213,48)" fg:x="5869" fg:w="9"/><text x="29.0837%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="28.8349%" y="101" width="0.0147%" height="15" fill="rgb(216,31,41)" fg:x="5878" fg:w="3"/><text x="29.1279%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="28.8496%" y="101" width="0.0491%" height="15" fill="rgb(244,71,49)" fg:x="5881" fg:w="10"/><text x="29.1426%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="28.8987%" y="101" width="0.0245%" height="15" fill="rgb(234,75,53)" fg:x="5891" fg:w="5"/><text x="29.1917%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="28.9232%" y="101" width="0.0147%" height="15" fill="rgb(235,155,39)" fg:x="5896" fg:w="3"/><text x="29.2162%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="28.7025%" y="117" width="0.6475%" height="15" fill="rgb(216,36,4)" fg:x="5851" fg:w="132"/><text x="28.9954%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="28.7025%" y="133" width="0.6966%" height="15" fill="rgb(209,174,36)" fg:x="5851" fg:w="142"/><text x="28.9954%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="28.7025%" y="149" width="0.7113%" height="15" fill="rgb(248,80,47)" fg:x="5851" fg:w="145"/><text x="28.9954%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="28.7025%" y="165" width="0.7407%" height="15" fill="rgb(217,199,54)" fg:x="5851" fg:w="151"/><text x="28.9954%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.14%)</title><rect x="28.7025%" y="181" width="1.1381%" height="15" fill="rgb(223,35,31)" fg:x="5851" fg:w="232"/><text x="28.9954%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.8406%" y="85" width="0.0442%" height="15" fill="rgb(232,2,21)" fg:x="6083" fg:w="9"/><text x="30.1335%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.8847%" y="85" width="0.0442%" height="15" fill="rgb(217,165,8)" fg:x="6092" fg:w="9"/><text x="30.1777%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.07%)</title><rect x="29.9289%" y="85" width="0.0687%" height="15" fill="rgb(242,176,28)" fg:x="6101" fg:w="14"/><text x="30.2218%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="29.9975%" y="85" width="0.0147%" height="15" fill="rgb(242,114,8)" fg:x="6115" fg:w="3"/><text x="30.2905%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.57%)</title><rect x="29.8406%" y="101" width="0.5740%" height="15" fill="rgb(249,2,49)" fg:x="6083" fg:w="117"/><text x="30.1335%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.62%)</title><rect x="29.8406%" y="117" width="0.6230%" height="15" fill="rgb(253,37,23)" fg:x="6083" fg:w="127"/><text x="30.1335%" y="127.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.64%)</title><rect x="29.8406%" y="133" width="0.6377%" height="15" fill="rgb(206,112,49)" fg:x="6083" fg:w="130"/><text x="30.1335%" y="143.50"></text></g><g><title>__rust_alloc (136 instructions, 0.67%)</title><rect x="29.8406%" y="149" width="0.6672%" height="15" fill="rgb(230,161,17)" fg:x="6083" fg:w="136"/><text x="30.1335%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.82%)</title><rect x="29.8406%" y="165" width="0.8241%" height="15" fill="rgb(245,46,26)" fg:x="6083" fg:w="168"/><text x="30.1335%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (238 instructions, 1.17%)</title><rect x="29.8406%" y="181" width="1.1675%" height="15" fill="rgb(254,15,7)" fg:x="6083" fg:w="238"/><text x="30.1335%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (921 instructions, 4.52%)</title><rect x="27.6036%" y="197" width="4.5180%" height="15" fill="rgb(212,186,42)" fg:x="5627" fg:w="921"/><text x="27.8966%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.1217%" y="117" width="0.0442%" height="15" fill="rgb(223,198,0)" fg:x="6548" fg:w="9"/><text x="32.4146%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.1658%" y="117" width="0.0442%" height="15" fill="rgb(224,52,7)" fg:x="6557" fg:w="9"/><text x="32.4588%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.2100%" y="117" width="0.0442%" height="15" fill="rgb(219,54,22)" fg:x="6566" fg:w="9"/><text x="32.5029%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.2541%" y="117" width="0.0147%" height="15" fill="rgb(252,55,54)" fg:x="6575" fg:w="3"/><text x="32.5471%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="32.2688%" y="117" width="0.0491%" height="15" fill="rgb(223,182,21)" fg:x="6578" fg:w="10"/><text x="32.5618%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.3179%" y="117" width="0.0245%" height="15" fill="rgb(211,85,51)" fg:x="6588" fg:w="5"/><text x="32.6108%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.3424%" y="117" width="0.0147%" height="15" fill="rgb(225,81,19)" fg:x="6593" fg:w="3"/><text x="32.6354%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="32.1217%" y="133" width="0.6475%" height="15" fill="rgb(227,64,34)" fg:x="6548" fg:w="132"/><text x="32.4146%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="32.1217%" y="149" width="0.6966%" height="15" fill="rgb(251,32,31)" fg:x="6548" fg:w="142"/><text x="32.4146%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="32.1217%" y="165" width="0.7113%" height="15" fill="rgb(241,129,27)" fg:x="6548" fg:w="145"/><text x="32.4146%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="32.1217%" y="181" width="0.7407%" height="15" fill="rgb(246,114,26)" fg:x="6548" fg:w="151"/><text x="32.4146%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="32.8624%" y="133" width="0.0147%" height="15" fill="rgb(212,193,31)" fg:x="6699" fg:w="3"/><text x="33.1554%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="32.8771%" y="133" width="0.0196%" height="15" fill="rgb(238,47,51)" fg:x="6702" fg:w="4"/><text x="33.1701%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.8967%" y="133" width="0.0147%" height="15" fill="rgb(249,132,8)" fg:x="6706" fg:w="3"/><text x="33.1897%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="32.9115%" y="133" width="0.0196%" height="15" fill="rgb(229,96,10)" fg:x="6709" fg:w="4"/><text x="33.2044%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="32.9311%" y="133" width="0.0294%" height="15" fill="rgb(217,128,33)" fg:x="6713" fg:w="6"/><text x="33.2240%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="32.9605%" y="133" width="0.0785%" height="15" fill="rgb(248,52,52)" fg:x="6719" fg:w="16"/><text x="33.2535%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.48%)</title><rect x="32.8624%" y="149" width="0.4807%" height="15" fill="rgb(210,53,32)" fg:x="6699" fg:w="98"/><text x="33.1554%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.49%)</title><rect x="32.8624%" y="165" width="0.4906%" height="15" fill="rgb(251,135,25)" fg:x="6699" fg:w="100"/><text x="33.1554%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.52%)</title><rect x="32.8624%" y="181" width="0.5151%" height="15" fill="rgb(230,69,7)" fg:x="6699" fg:w="105"/><text x="33.1554%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.82%)</title><rect x="32.1217%" y="197" width="1.8151%" height="15" fill="rgb(213,166,46)" fg:x="6548" fg:w="370"/><text x="32.4146%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.9367%" y="133" width="0.0442%" height="15" fill="rgb(244,19,30)" fg:x="6918" fg:w="9"/><text x="34.2297%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="33.9809%" y="133" width="0.0442%" height="15" fill="rgb(247,110,32)" fg:x="6927" fg:w="9"/><text x="34.2738%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.0250%" y="133" width="0.0442%" height="15" fill="rgb(246,109,18)" fg:x="6936" fg:w="9"/><text x="34.3180%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="34.0692%" y="133" width="0.0147%" height="15" fill="rgb(243,14,29)" fg:x="6945" fg:w="3"/><text x="34.3621%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="34.0839%" y="133" width="0.0491%" height="15" fill="rgb(216,133,53)" fg:x="6948" fg:w="10"/><text x="34.3769%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="34.1329%" y="133" width="0.0245%" height="15" fill="rgb(234,64,10)" fg:x="6958" fg:w="5"/><text x="34.4259%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="34.1575%" y="133" width="0.0147%" height="15" fill="rgb(236,195,20)" fg:x="6963" fg:w="3"/><text x="34.4504%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="33.9367%" y="149" width="0.6475%" height="15" fill="rgb(216,152,27)" fg:x="6918" fg:w="132"/><text x="34.2297%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="33.9367%" y="165" width="0.6966%" height="15" fill="rgb(208,27,38)" fg:x="6918" fg:w="142"/><text x="34.2297%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="33.9367%" y="181" width="0.7113%" height="15" fill="rgb(206,142,46)" fg:x="6918" fg:w="145"/><text x="34.2297%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.6775%" y="133" width="0.0442%" height="15" fill="rgb(230,187,19)" fg:x="7069" fg:w="9"/><text x="34.9704%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.7216%" y="133" width="0.0442%" height="15" fill="rgb(207,22,43)" fg:x="7078" fg:w="9"/><text x="35.0146%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="34.7658%" y="133" width="0.0442%" height="15" fill="rgb(222,146,52)" fg:x="7087" fg:w="9"/><text x="35.0587%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="34.8099%" y="133" width="0.0147%" height="15" fill="rgb(244,18,29)" fg:x="7096" fg:w="3"/><text x="35.1029%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="34.8246%" y="133" width="0.0491%" height="15" fill="rgb(247,180,1)" fg:x="7099" fg:w="10"/><text x="35.1176%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="34.8737%" y="133" width="0.0245%" height="15" fill="rgb(234,34,37)" fg:x="7109" fg:w="5"/><text x="35.1667%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="34.8982%" y="133" width="0.0147%" height="15" fill="rgb(211,41,9)" fg:x="7114" fg:w="3"/><text x="35.1912%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="34.6775%" y="149" width="0.6475%" height="15" fill="rgb(223,173,35)" fg:x="7069" fg:w="132"/><text x="34.9704%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="34.6775%" y="165" width="0.6966%" height="15" fill="rgb(242,93,41)" fg:x="7069" fg:w="142"/><text x="34.9704%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="34.6775%" y="181" width="0.7113%" height="15" fill="rgb(236,83,33)" fg:x="7069" fg:w="145"/><text x="34.9704%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.48%)</title><rect x="33.9367%" y="197" width="1.4815%" height="15" fill="rgb(212,34,15)" fg:x="6918" fg:w="302"/><text x="34.2297%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (15 instructions, 0.07%)</title><rect x="35.4182%" y="197" width="0.0736%" height="15" fill="rgb(247,37,49)" fg:x="7220" fg:w="15"/><text x="35.7112%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="35.4918%" y="149" width="0.0147%" height="15" fill="rgb(217,189,21)" fg:x="7235" fg:w="3"/><text x="35.7848%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="35.5065%" y="149" width="0.0196%" height="15" fill="rgb(218,4,52)" fg:x="7238" fg:w="4"/><text x="35.7995%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="35.5261%" y="149" width="0.0147%" height="15" fill="rgb(238,87,14)" fg:x="7242" fg:w="3"/><text x="35.8191%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="35.5408%" y="149" width="0.0196%" height="15" fill="rgb(237,198,17)" fg:x="7245" fg:w="4"/><text x="35.8338%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="35.5605%" y="149" width="0.0294%" height="15" fill="rgb(229,106,48)" fg:x="7249" fg:w="6"/><text x="35.8534%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="35.5899%" y="149" width="0.0785%" height="15" fill="rgb(252,214,17)" fg:x="7255" fg:w="16"/><text x="35.8829%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.48%)</title><rect x="35.4918%" y="165" width="0.4807%" height="15" fill="rgb(222,52,13)" fg:x="7235" fg:w="98"/><text x="35.7848%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.49%)</title><rect x="35.4918%" y="181" width="0.4906%" height="15" fill="rgb(207,174,29)" fg:x="7235" fg:w="100"/><text x="35.7848%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.52%)</title><rect x="35.4918%" y="197" width="0.5151%" height="15" fill="rgb(210,47,21)" fg:x="7235" fg:w="105"/><text x="35.7848%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 2.03%)</title><rect x="36.0069%" y="165" width="2.0260%" height="15" fill="rgb(247,161,54)" fg:x="7340" fg:w="413"/><text x="36.2998%" y="175.50"></text></g><g><title>memcpy (417 instructions, 2.05%)</title><rect x="36.0069%" y="181" width="2.0456%" height="15" fill="rgb(215,209,13)" fg:x="7340" fg:w="417"/><text x="36.2998%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 2.14%)</title><rect x="36.0069%" y="197" width="2.1437%" height="15" fill="rgb(229,78,24)" fg:x="7340" fg:w="437"/><text x="36.2998%" y="207.50">a..</text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.81%)</title><rect x="38.1506%" y="181" width="1.8052%" height="15" fill="rgb(237,159,39)" fg:x="7777" fg:w="368"/><text x="38.4436%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.82%)</title><rect x="38.1506%" y="197" width="1.8249%" height="15" fill="rgb(214,6,23)" fg:x="7777" fg:w="372"/><text x="38.4436%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,969 instructions, 39.09%)</title><rect x="2.5754%" y="213" width="39.0925%" height="15" fill="rgb(254,89,24)" fg:x="525" fg:w="7969"/><text x="2.8684%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.88%)</title><rect x="41.6679%" y="197" width="1.8788%" height="15" fill="rgb(215,22,48)" fg:x="8494" fg:w="383"/><text x="41.9609%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.88%)</title><rect x="43.5663%" y="197" width="1.8788%" height="15" fill="rgb(212,48,20)" fg:x="8881" fg:w="383"/><text x="43.8593%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.80%)</title><rect x="41.6679%" y="213" width="3.7969%" height="15" fill="rgb(248,54,37)" fg:x="8494" fg:w="774"/><text x="41.9609%" y="223.50">mem..</text></g><g><title>candid::types::internal::find_type (38 instructions, 0.19%)</title><rect x="45.4648%" y="181" width="0.1864%" height="15" fill="rgb(241,95,38)" fg:x="9268" fg:w="38"/><text x="45.7578%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.6512%" y="101" width="0.0442%" height="15" fill="rgb(208,19,16)" fg:x="9306" fg:w="9"/><text x="45.9442%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.6954%" y="101" width="0.0442%" height="15" fill="rgb(232,229,17)" fg:x="9315" fg:w="9"/><text x="45.9883%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="45.7395%" y="101" width="0.0442%" height="15" fill="rgb(206,72,4)" fg:x="9324" fg:w="9"/><text x="46.0325%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="45.7837%" y="101" width="0.0147%" height="15" fill="rgb(251,86,44)" fg:x="9333" fg:w="3"/><text x="46.0766%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="45.7984%" y="101" width="0.0491%" height="15" fill="rgb(217,159,6)" fg:x="9336" fg:w="10"/><text x="46.0913%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="45.8474%" y="101" width="0.0245%" height="15" fill="rgb(216,136,2)" fg:x="9346" fg:w="5"/><text x="46.1404%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="45.8720%" y="101" width="0.0147%" height="15" fill="rgb(217,131,9)" fg:x="9351" fg:w="3"/><text x="46.1649%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="45.6512%" y="117" width="0.6475%" height="15" fill="rgb(246,221,20)" fg:x="9306" fg:w="132"/><text x="45.9442%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="45.6512%" y="133" width="0.6966%" height="15" fill="rgb(219,175,17)" fg:x="9306" fg:w="142"/><text x="45.9442%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="45.6512%" y="149" width="0.7113%" height="15" fill="rgb(235,84,34)" fg:x="9306" fg:w="145"/><text x="45.9442%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="45.6512%" y="165" width="0.7407%" height="15" fill="rgb(210,216,12)" fg:x="9306" fg:w="151"/><text x="45.9442%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.96%)</title><rect x="45.6512%" y="181" width="0.9615%" height="15" fill="rgb(207,1,28)" fg:x="9306" fg:w="196"/><text x="45.9442%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="46.6127%" y="133" width="0.2649%" height="15" fill="rgb(253,168,31)" fg:x="9502" fg:w="54"/><text x="46.9057%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.44%)</title><rect x="46.8776%" y="133" width="0.4415%" height="15" fill="rgb(240,173,36)" fg:x="9556" fg:w="90"/><text x="47.1706%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.80%)</title><rect x="47.3191%" y="133" width="0.7996%" height="15" fill="rgb(207,224,49)" fg:x="9646" fg:w="163"/><text x="47.6121%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.73%)</title><rect x="46.6127%" y="149" width="2.7275%" height="15" fill="rgb(205,46,23)" fg:x="9502" fg:w="556"/><text x="46.9057%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.49%)</title><rect x="49.3402%" y="149" width="0.4857%" height="15" fill="rgb(211,212,26)" fg:x="10058" fg:w="99"/><text x="49.6332%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (760 instructions, 3.73%)</title><rect x="46.6127%" y="165" width="3.7282%" height="15" fill="rgb(222,133,27)" fg:x="9502" fg:w="760"/><text x="46.9057%" y="175.50">has..</text></g><g><title>candid::types::internal::env_add (813 instructions, 3.99%)</title><rect x="46.6127%" y="181" width="3.9882%" height="15" fill="rgb(246,25,19)" fg:x="9502" fg:w="813"/><text x="46.9057%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.6009%" y="101" width="0.0442%" height="15" fill="rgb(236,165,29)" fg:x="10315" fg:w="9"/><text x="50.8939%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.6451%" y="101" width="0.0442%" height="15" fill="rgb(211,216,2)" fg:x="10324" fg:w="9"/><text x="50.9381%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="50.6892%" y="101" width="0.0442%" height="15" fill="rgb(252,33,6)" fg:x="10333" fg:w="9"/><text x="50.9822%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="50.7334%" y="101" width="0.0147%" height="15" fill="rgb(241,104,43)" fg:x="10342" fg:w="3"/><text x="51.0264%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="50.7481%" y="101" width="0.0491%" height="15" fill="rgb(221,40,2)" fg:x="10345" fg:w="10"/><text x="51.0411%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="50.7972%" y="101" width="0.0245%" height="15" fill="rgb(238,95,49)" fg:x="10355" fg:w="5"/><text x="51.0901%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="50.8217%" y="101" width="0.0147%" height="15" fill="rgb(219,136,33)" fg:x="10360" fg:w="3"/><text x="51.1147%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="50.6009%" y="117" width="0.6475%" height="15" fill="rgb(249,90,38)" fg:x="10315" fg:w="132"/><text x="50.8939%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="50.6009%" y="133" width="0.6966%" height="15" fill="rgb(222,214,39)" fg:x="10315" fg:w="142"/><text x="50.8939%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="50.6009%" y="149" width="0.7113%" height="15" fill="rgb(233,148,3)" fg:x="10315" fg:w="145"/><text x="50.8939%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="50.6009%" y="165" width="0.7407%" height="15" fill="rgb(249,49,27)" fg:x="10315" fg:w="151"/><text x="50.8939%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.80%)</title><rect x="50.6009%" y="181" width="0.7996%" height="15" fill="rgb(252,209,13)" fg:x="10315" fg:w="163"/><text x="50.8939%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="51.4005%" y="133" width="0.2649%" height="15" fill="rgb(219,38,53)" fg:x="10478" fg:w="54"/><text x="51.6935%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.44%)</title><rect x="51.6654%" y="133" width="0.4415%" height="15" fill="rgb(254,114,46)" fg:x="10532" fg:w="90"/><text x="51.9584%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.80%)</title><rect x="52.1069%" y="133" width="0.7996%" height="15" fill="rgb(251,48,45)" fg:x="10622" fg:w="163"/><text x="52.3999%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.73%)</title><rect x="51.4005%" y="149" width="2.7275%" height="15" fill="rgb(211,24,18)" fg:x="10478" fg:w="556"/><text x="51.6935%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.36%)</title><rect x="54.1280%" y="133" width="0.3630%" height="15" fill="rgb(250,102,22)" fg:x="11034" fg:w="74"/><text x="54.4210%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.38%)</title><rect x="54.1280%" y="149" width="0.3826%" height="15" fill="rgb(228,6,21)" fg:x="11034" fg:w="78"/><text x="54.4210%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (743 instructions, 3.64%)</title><rect x="51.4005%" y="165" width="3.6448%" height="15" fill="rgb(215,142,33)" fg:x="10478" fg:w="743"/><text x="51.6935%" y="175.50">has..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="55.0454%" y="101" width="0.0147%" height="15" fill="rgb(215,79,52)" fg:x="11221" fg:w="3"/><text x="55.3383%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="55.0601%" y="101" width="0.0196%" height="15" fill="rgb(221,43,23)" fg:x="11224" fg:w="4"/><text x="55.3531%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="55.0797%" y="101" width="0.0147%" height="15" fill="rgb(215,6,39)" fg:x="11228" fg:w="3"/><text x="55.3727%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="55.0944%" y="101" width="0.0196%" height="15" fill="rgb(249,218,17)" fg:x="11231" fg:w="4"/><text x="55.3874%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="55.1141%" y="101" width="0.0294%" height="15" fill="rgb(219,206,47)" fg:x="11235" fg:w="6"/><text x="55.4070%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="55.1435%" y="101" width="0.0785%" height="15" fill="rgb(208,116,29)" fg:x="11241" fg:w="16"/><text x="55.4365%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.48%)</title><rect x="55.0454%" y="117" width="0.4807%" height="15" fill="rgb(211,201,10)" fg:x="11221" fg:w="98"/><text x="55.3383%" y="127.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.49%)</title><rect x="55.0454%" y="133" width="0.4906%" height="15" fill="rgb(225,229,25)" fg:x="11221" fg:w="100"/><text x="55.3383%" y="143.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.52%)</title><rect x="55.0454%" y="149" width="0.5151%" height="15" fill="rgb(226,99,43)" fg:x="11221" fg:w="105"/><text x="55.3383%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.67%)</title><rect x="55.0454%" y="165" width="0.6721%" height="15" fill="rgb(251,30,20)" fg:x="11221" fg:w="137"/><text x="55.3383%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 4.60%)</title><rect x="51.4005%" y="181" width="4.5965%" height="15" fill="rgb(221,166,32)" fg:x="10478" fg:w="937"/><text x="51.6935%" y="191.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.26%)</title><rect x="55.9971%" y="133" width="0.2649%" height="15" fill="rgb(212,2,30)" fg:x="11415" fg:w="54"/><text x="56.2900%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.39%)</title><rect x="55.9971%" y="149" width="0.3875%" height="15" fill="rgb(240,107,34)" fg:x="11415" fg:w="79"/><text x="56.2900%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.49%)</title><rect x="55.9971%" y="165" width="1.4864%" height="15" fill="rgb(250,152,43)" fg:x="11415" fg:w="303"/><text x="56.2900%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (35 instructions, 0.17%)</title><rect x="57.4834%" y="165" width="0.1717%" height="15" fill="rgb(220,123,35)" fg:x="11718" fg:w="35"/><text x="57.7764%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="57.6551%" y="165" width="0.0540%" height="15" fill="rgb(210,105,29)" fg:x="11753" fg:w="11"/><text x="57.9481%" y="175.50"></text></g><g><title>candid::types::internal::env_id (506 instructions, 2.48%)</title><rect x="55.9971%" y="181" width="2.4822%" height="15" fill="rgb(224,171,50)" fg:x="11415" fg:w="506"/><text x="56.2900%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,761 instructions, 13.54%)</title><rect x="45.4648%" y="197" width="13.5443%" height="15" fill="rgb(227,172,48)" fg:x="9268" fg:w="2761"/><text x="45.7578%" y="207.50">candid::types::Ca..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.19%)</title><rect x="59.0091%" y="197" width="0.1864%" height="15" fill="rgb(252,124,45)" fg:x="12029" fg:w="38"/><text x="59.3020%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="59.1955%" y="133" width="0.0147%" height="15" fill="rgb(242,64,7)" fg:x="12067" fg:w="3"/><text x="59.4885%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.2102%" y="133" width="0.0196%" height="15" fill="rgb(250,99,33)" fg:x="12070" fg:w="4"/><text x="59.5032%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="59.2298%" y="133" width="0.0147%" height="15" fill="rgb(242,110,52)" fg:x="12074" fg:w="3"/><text x="59.5228%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="59.2445%" y="133" width="0.0196%" height="15" fill="rgb(235,60,34)" fg:x="12077" fg:w="4"/><text x="59.5375%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="59.2642%" y="133" width="0.0294%" height="15" fill="rgb(248,186,51)" fg:x="12081" fg:w="6"/><text x="59.5571%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.2936%" y="133" width="0.0196%" height="15" fill="rgb(253,195,11)" fg:x="12087" fg:w="4"/><text x="59.5866%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="59.3132%" y="133" width="0.0491%" height="15" fill="rgb(224,174,6)" fg:x="12091" fg:w="10"/><text x="59.6062%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.69%)</title><rect x="59.1955%" y="149" width="0.6917%" height="15" fill="rgb(245,141,21)" fg:x="12067" fg:w="141"/><text x="59.4885%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.70%)</title><rect x="59.1955%" y="165" width="0.7015%" height="15" fill="rgb(214,77,44)" fg:x="12067" fg:w="143"/><text x="59.4885%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.73%)</title><rect x="59.1955%" y="181" width="0.7260%" height="15" fill="rgb(223,224,6)" fg:x="12067" fg:w="148"/><text x="59.4885%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="60.0785%" y="133" width="0.0147%" height="15" fill="rgb(235,110,44)" fg:x="12247" fg:w="3"/><text x="60.3715%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.0932%" y="133" width="0.0196%" height="15" fill="rgb(241,226,2)" fg:x="12250" fg:w="4"/><text x="60.3862%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="60.1128%" y="133" width="0.0147%" height="15" fill="rgb(230,70,20)" fg:x="12254" fg:w="3"/><text x="60.4058%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="60.1275%" y="133" width="0.0196%" height="15" fill="rgb(241,174,27)" fg:x="12257" fg:w="4"/><text x="60.4205%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="60.1472%" y="133" width="0.0294%" height="15" fill="rgb(249,33,50)" fg:x="12261" fg:w="6"/><text x="60.4401%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.1766%" y="133" width="0.0196%" height="15" fill="rgb(211,213,48)" fg:x="12267" fg:w="4"/><text x="60.4696%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="60.1962%" y="133" width="0.0491%" height="15" fill="rgb(244,56,29)" fg:x="12271" fg:w="10"/><text x="60.4892%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.69%)</title><rect x="60.0785%" y="149" width="0.6917%" height="15" fill="rgb(247,48,17)" fg:x="12247" fg:w="141"/><text x="60.3715%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.70%)</title><rect x="60.0785%" y="165" width="0.7015%" height="15" fill="rgb(218,10,31)" fg:x="12247" fg:w="143"/><text x="60.3715%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.73%)</title><rect x="60.0785%" y="181" width="0.7260%" height="15" fill="rgb(224,223,37)" fg:x="12247" fg:w="148"/><text x="60.3715%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.77%)</title><rect x="59.1955%" y="197" width="1.7660%" height="15" fill="rgb(246,32,26)" fg:x="12067" fg:w="360"/><text x="59.4885%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.14%)</title><rect x="60.9615%" y="181" width="0.1374%" height="15" fill="rgb(222,96,23)" fg:x="12427" fg:w="28"/><text x="61.2545%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.12%)</title><rect x="61.0988%" y="181" width="0.1226%" height="15" fill="rgb(233,43,0)" fg:x="12455" fg:w="25"/><text x="61.3918%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.12%)</title><rect x="61.2215%" y="181" width="0.1226%" height="15" fill="rgb(205,122,41)" fg:x="12480" fg:w="25"/><text x="61.5145%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (159 instructions, 0.78%)</title><rect x="60.9615%" y="197" width="0.7800%" height="15" fill="rgb(243,170,42)" fg:x="12427" fg:w="159"/><text x="61.2545%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="61.7415%" y="197" width="0.0540%" height="15" fill="rgb(244,185,43)" fg:x="12586" fg:w="11"/><text x="62.0344%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="61.7954%" y="197" width="0.0540%" height="15" fill="rgb(219,115,19)" fg:x="12597" fg:w="11"/><text x="62.0884%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="61.8494%" y="197" width="0.0540%" height="15" fill="rgb(209,189,41)" fg:x="12608" fg:w="11"/><text x="62.1424%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,519 instructions, 17.26%)</title><rect x="45.4648%" y="213" width="17.2627%" height="15" fill="rgb(228,182,47)" fg:x="9268" fg:w="3519"/><text x="45.7578%" y="223.50">candid::de::IDLDeseria..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 2.03%)</title><rect x="62.7275%" y="197" width="2.0260%" height="15" fill="rgb(249,142,45)" fg:x="12787" fg:w="413"/><text x="63.0205%" y="207.50"></text></g><g><title>memcpy (417 instructions, 2.05%)</title><rect x="62.7275%" y="213" width="2.0456%" height="15" fill="rgb(246,19,30)" fg:x="12787" fg:w="417"/><text x="63.0205%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="64.7731%" y="197" width="0.0932%" height="15" fill="rgb(250,47,47)" fg:x="13204" fg:w="19"/><text x="65.0661%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="64.8663%" y="149" width="0.0147%" height="15" fill="rgb(208,213,37)" fg:x="13223" fg:w="3"/><text x="65.1593%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="64.8810%" y="149" width="0.0196%" height="15" fill="rgb(212,92,30)" fg:x="13226" fg:w="4"/><text x="65.1740%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="64.9007%" y="149" width="0.0147%" height="15" fill="rgb(237,172,0)" fg:x="13230" fg:w="3"/><text x="65.1936%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="64.9154%" y="149" width="0.0196%" height="15" fill="rgb(215,20,2)" fg:x="13233" fg:w="4"/><text x="65.2083%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="64.9350%" y="149" width="0.0294%" height="15" fill="rgb(213,116,29)" fg:x="13237" fg:w="6"/><text x="65.2280%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="64.9644%" y="149" width="0.0196%" height="15" fill="rgb(238,174,2)" fg:x="13243" fg:w="4"/><text x="65.2574%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="64.9841%" y="149" width="0.0491%" height="15" fill="rgb(246,186,16)" fg:x="13247" fg:w="10"/><text x="65.2770%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.69%)</title><rect x="64.8663%" y="165" width="0.6917%" height="15" fill="rgb(231,78,53)" fg:x="13223" fg:w="141"/><text x="65.1593%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.70%)</title><rect x="64.8663%" y="181" width="0.7015%" height="15" fill="rgb(240,0,45)" fg:x="13223" fg:w="143"/><text x="65.1593%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.73%)</title><rect x="64.8663%" y="197" width="0.7260%" height="15" fill="rgb(243,47,27)" fg:x="13223" fg:w="148"/><text x="65.1593%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="65.5923%" y="133" width="0.0147%" height="15" fill="rgb(234,147,53)" fg:x="13371" fg:w="3"/><text x="65.8853%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.6071%" y="133" width="0.0196%" height="15" fill="rgb(227,143,1)" fg:x="13374" fg:w="4"/><text x="65.9000%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="65.6267%" y="133" width="0.0147%" height="15" fill="rgb(229,221,34)" fg:x="13378" fg:w="3"/><text x="65.9197%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="65.6414%" y="133" width="0.0196%" height="15" fill="rgb(233,118,17)" fg:x="13381" fg:w="4"/><text x="65.9344%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="65.6610%" y="133" width="0.0245%" height="15" fill="rgb(213,93,11)" fg:x="13385" fg:w="5"/><text x="65.9540%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="65.6856%" y="133" width="0.0147%" height="15" fill="rgb(218,164,50)" fg:x="13390" fg:w="3"/><text x="65.9785%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="65.7003%" y="133" width="0.0294%" height="15" fill="rgb(232,120,11)" fg:x="13393" fg:w="6"/><text x="65.9932%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="65.7297%" y="133" width="0.0196%" height="15" fill="rgb(234,129,0)" fg:x="13399" fg:w="4"/><text x="66.0227%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="65.7493%" y="133" width="0.0491%" height="15" fill="rgb(224,128,52)" fg:x="13403" fg:w="10"/><text x="66.0423%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.36%)</title><rect x="65.7984%" y="133" width="0.3630%" height="15" fill="rgb(213,202,40)" fg:x="13413" fg:w="74"/><text x="66.0913%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 1.19%)</title><rect x="65.5923%" y="149" width="1.1921%" height="15" fill="rgb(216,44,22)" fg:x="13371" fg:w="243"/><text x="65.8853%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 1.20%)</title><rect x="65.5923%" y="165" width="1.2019%" height="15" fill="rgb(236,124,23)" fg:x="13371" fg:w="245"/><text x="65.8853%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 1.23%)</title><rect x="65.5923%" y="181" width="1.2264%" height="15" fill="rgb(243,28,42)" fg:x="13371" fg:w="250"/><text x="65.8853%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 1.38%)</title><rect x="65.5923%" y="197" width="1.3834%" height="15" fill="rgb(225,118,18)" fg:x="13371" fg:w="282"/><text x="65.8853%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="66.9757%" y="197" width="0.0540%" height="15" fill="rgb(252,114,14)" fg:x="13653" fg:w="11"/><text x="67.2687%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="67.0297%" y="197" width="0.0245%" height="15" fill="rgb(228,156,38)" fg:x="13664" fg:w="5"/><text x="67.3226%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 2.76%)</title><rect x="64.7731%" y="213" width="2.7569%" height="15" fill="rgb(247,32,54)" fg:x="13204" fg:w="562"/><text x="65.0661%" y="223.50">c..</text></g><g><title>candid::utils::decode_args (13,344 instructions, 65.46%)</title><rect x="2.5754%" y="229" width="65.4599%" height="15" fill="rgb(249,128,3)" fg:x="525" fg:w="13344"/><text x="2.8684%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="68.0353%" y="181" width="0.0147%" height="15" fill="rgb(218,33,18)" fg:x="13869" fg:w="3"/><text x="68.3283%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="68.0500%" y="181" width="0.0196%" height="15" fill="rgb(236,60,17)" fg:x="13872" fg:w="4"/><text x="68.3430%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="68.0697%" y="181" width="0.0147%" height="15" fill="rgb(237,63,22)" fg:x="13876" fg:w="3"/><text x="68.3626%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="68.0844%" y="181" width="0.0196%" height="15" fill="rgb(210,27,14)" fg:x="13879" fg:w="4"/><text x="68.3773%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="68.1040%" y="181" width="0.0294%" height="15" fill="rgb(237,39,29)" fg:x="13883" fg:w="6"/><text x="68.3970%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="68.1334%" y="181" width="0.0196%" height="15" fill="rgb(215,128,47)" fg:x="13889" fg:w="4"/><text x="68.4264%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.27%)</title><rect x="68.1531%" y="181" width="0.2747%" height="15" fill="rgb(246,159,28)" fg:x="13893" fg:w="56"/><text x="68.4460%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="68.4278%" y="181" width="0.0491%" height="15" fill="rgb(217,102,37)" fg:x="13949" fg:w="10"/><text x="68.7207%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.36%)</title><rect x="68.4768%" y="181" width="0.3630%" height="15" fill="rgb(245,205,50)" fg:x="13959" fg:w="74"/><text x="68.7698%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 1.12%)</title><rect x="68.0353%" y="197" width="1.1185%" height="15" fill="rgb(229,55,35)" fg:x="13869" fg:w="228"/><text x="68.3283%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 1.13%)</title><rect x="68.0353%" y="213" width="1.1283%" height="15" fill="rgb(206,6,27)" fg:x="13869" fg:w="230"/><text x="68.3283%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 1.15%)</title><rect x="68.0353%" y="229" width="1.1528%" height="15" fill="rgb(217,46,46)" fg:x="13869" fg:w="235"/><text x="68.3283%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,829 instructions, 67.84%)</title><rect x="1.5502%" y="245" width="67.8391%" height="15" fill="rgb(249,224,28)" fg:x="316" fg:w="13829"/><text x="1.8431%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>hashmap::MAP::__getit (13 instructions, 0.06%)</title><rect x="69.3893%" y="229" width="0.0638%" height="15" fill="rgb(251,194,44)" fg:x="14145" fg:w="13"/><text x="69.6822%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4,488 instructions, 22.02%)</title><rect x="69.3893%" y="245" width="22.0162%" height="15" fill="rgb(218,47,36)" fg:x="14145" fg:w="4488"/><text x="69.6822%" y="255.50">std::thread::local::LocalKey&lt;..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="91.4054%" y="133" width="0.0147%" height="15" fill="rgb(226,174,11)" fg:x="18633" fg:w="3"/><text x="91.6984%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="91.4202%" y="133" width="0.0196%" height="15" fill="rgb(253,29,34)" fg:x="18636" fg:w="4"/><text x="91.7131%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="91.4398%" y="133" width="0.0147%" height="15" fill="rgb(244,73,35)" fg:x="18640" fg:w="3"/><text x="91.7328%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="91.4545%" y="133" width="0.0196%" height="15" fill="rgb(249,216,48)" fg:x="18643" fg:w="4"/><text x="91.7475%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="91.4741%" y="133" width="0.0245%" height="15" fill="rgb(223,100,14)" fg:x="18647" fg:w="5"/><text x="91.7671%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="91.4987%" y="133" width="0.0147%" height="15" fill="rgb(224,21,31)" fg:x="18652" fg:w="3"/><text x="91.7916%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.27%)</title><rect x="91.5134%" y="133" width="0.2747%" height="15" fill="rgb(226,39,42)" fg:x="18655" fg:w="56"/><text x="91.8063%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="91.7881%" y="133" width="0.0294%" height="15" fill="rgb(238,222,36)" fg:x="18711" fg:w="6"/><text x="92.0810%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="91.8175%" y="133" width="0.0491%" height="15" fill="rgb(246,146,1)" fg:x="18717" fg:w="10"/><text x="92.1105%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (159 instructions, 0.78%)</title><rect x="91.4054%" y="149" width="0.7800%" height="15" fill="rgb(242,70,28)" fg:x="18633" fg:w="159"/><text x="91.6984%" y="159.50"></text></g><g><title>__rdl_dealloc (161 instructions, 0.79%)</title><rect x="91.4054%" y="165" width="0.7898%" height="15" fill="rgb(253,46,5)" fg:x="18633" fg:w="161"/><text x="91.6984%" y="175.50"></text></g><g><title>__rust_dealloc (166 instructions, 0.81%)</title><rect x="91.4054%" y="181" width="0.8143%" height="15" fill="rgb(251,140,46)" fg:x="18633" fg:w="166"/><text x="91.6984%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (198 instructions, 0.97%)</title><rect x="91.4054%" y="197" width="0.9713%" height="15" fill="rgb(210,118,16)" fg:x="18633" fg:w="198"/><text x="91.6984%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.66%)</title><rect x="92.3767%" y="181" width="0.6623%" height="15" fill="rgb(254,155,18)" fg:x="18831" fg:w="135"/><text x="92.6697%" y="191.50"></text></g><g><title>memset (139 instructions, 0.68%)</title><rect x="92.3767%" y="197" width="0.6819%" height="15" fill="rgb(242,64,30)" fg:x="18831" fg:w="139"/><text x="92.6697%" y="207.50"></text></g><g><title>candid::types::internal::env_clear (439 instructions, 2.15%)</title><rect x="91.4054%" y="213" width="2.1535%" height="15" fill="rgb(248,15,32)" fg:x="18633" fg:w="439"/><text x="91.6984%" y="223.50">c..</text></g><g><title>candid::ser::IDLBuilder::new (503 instructions, 2.47%)</title><rect x="91.4054%" y="229" width="2.4675%" height="15" fill="rgb(241,128,15)" fg:x="18633" fg:w="503"/><text x="91.6984%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="93.8729%" y="229" width="0.0147%" height="15" fill="rgb(247,198,19)" fg:x="19136" fg:w="3"/><text x="94.1659%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.16%)</title><rect x="93.8877%" y="197" width="0.1619%" height="15" fill="rgb(230,158,14)" fg:x="19139" fg:w="33"/><text x="94.1806%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.43%)</title><rect x="93.8877%" y="213" width="0.4317%" height="15" fill="rgb(240,154,30)" fg:x="19139" fg:w="88"/><text x="94.1806%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.3194%" y="101" width="0.0442%" height="15" fill="rgb(226,140,35)" fg:x="19227" fg:w="9"/><text x="94.6123%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.3635%" y="101" width="0.0442%" height="15" fill="rgb(241,12,48)" fg:x="19236" fg:w="9"/><text x="94.6565%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.4077%" y="101" width="0.0442%" height="15" fill="rgb(247,131,52)" fg:x="19245" fg:w="9"/><text x="94.7006%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.4518%" y="101" width="0.0147%" height="15" fill="rgb(248,24,21)" fg:x="19254" fg:w="3"/><text x="94.7448%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="94.4665%" y="101" width="0.0491%" height="15" fill="rgb(236,110,23)" fg:x="19257" fg:w="10"/><text x="94.7595%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.5156%" y="101" width="0.0245%" height="15" fill="rgb(243,187,6)" fg:x="19267" fg:w="5"/><text x="94.8085%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="94.5401%" y="101" width="0.0147%" height="15" fill="rgb(232,145,2)" fg:x="19272" fg:w="3"/><text x="94.8331%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.65%)</title><rect x="94.3194%" y="117" width="0.6475%" height="15" fill="rgb(228,92,25)" fg:x="19227" fg:w="132"/><text x="94.6123%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.70%)</title><rect x="94.3194%" y="133" width="0.6966%" height="15" fill="rgb(214,158,41)" fg:x="19227" fg:w="142"/><text x="94.6123%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.71%)</title><rect x="94.3194%" y="149" width="0.7113%" height="15" fill="rgb(238,94,29)" fg:x="19227" fg:w="145"/><text x="94.6123%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.74%)</title><rect x="94.3194%" y="165" width="0.7407%" height="15" fill="rgb(238,8,25)" fg:x="19227" fg:w="151"/><text x="94.6123%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.90%)</title><rect x="94.3194%" y="181" width="0.8977%" height="15" fill="rgb(240,181,26)" fg:x="19227" fg:w="183"/><text x="94.6123%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.23%)</title><rect x="94.3194%" y="197" width="1.2264%" height="15" fill="rgb(218,22,10)" fg:x="19227" fg:w="250"/><text x="94.6123%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.05%)</title><rect x="95.5457%" y="197" width="0.0491%" height="15" fill="rgb(234,79,5)" fg:x="19477" fg:w="10"/><text x="95.8387%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.5948%" y="181" width="0.0540%" height="15" fill="rgb(216,152,44)" fg:x="19487" fg:w="11"/><text x="95.8878%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.6684%" y="181" width="0.0540%" height="15" fill="rgb(210,41,12)" fg:x="19502" fg:w="11"/><text x="95.9614%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.15%)</title><rect x="95.5948%" y="197" width="0.1472%" height="15" fill="rgb(214,128,4)" fg:x="19487" fg:w="30"/><text x="95.8878%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.41%)</title><rect x="94.3194%" y="213" width="2.4135%" height="15" fill="rgb(239,178,3)" fg:x="19227" fg:w="492"/><text x="94.6123%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="96.7329%" y="213" width="0.0294%" height="15" fill="rgb(230,150,21)" fg:x="19719" fg:w="6"/><text x="97.0259%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.15%)</title><rect x="96.7623%" y="197" width="0.1521%" height="15" fill="rgb(246,165,35)" fg:x="19725" fg:w="31"/><text x="97.0553%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.42%)</title><rect x="96.7623%" y="213" width="0.4219%" height="15" fill="rgb(217,143,38)" fg:x="19725" fg:w="86"/><text x="97.0553%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.1842%" y="213" width="0.0294%" height="15" fill="rgb(239,109,54)" fg:x="19811" fg:w="6"/><text x="97.4772%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.2136%" y="213" width="0.0736%" height="15" fill="rgb(223,72,23)" fg:x="19817" fg:w="15"/><text x="97.5066%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.79%)</title><rect x="93.8877%" y="229" width="3.7871%" height="15" fill="rgb(240,98,7)" fg:x="19139" fg:w="772"/><text x="94.1806%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.6748%" y="229" width="0.0245%" height="15" fill="rgb(230,17,41)" fg:x="19911" fg:w="5"/><text x="97.9677%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.6993%" y="181" width="0.0147%" height="15" fill="rgb(215,64,5)" fg:x="19916" fg:w="3"/><text x="97.9923%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.7140%" y="181" width="0.0196%" height="15" fill="rgb(211,126,22)" fg:x="19919" fg:w="4"/><text x="98.0070%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.7336%" y="181" width="0.0147%" height="15" fill="rgb(208,190,22)" fg:x="19923" fg:w="3"/><text x="98.0266%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.7483%" y="181" width="0.0196%" height="15" fill="rgb(222,46,17)" fg:x="19926" fg:w="4"/><text x="98.0413%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.7680%" y="181" width="0.0294%" height="15" fill="rgb(231,33,0)" fg:x="19930" fg:w="6"/><text x="98.0609%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="97.7974%" y="181" width="0.0491%" height="15" fill="rgb(207,16,20)" fg:x="19936" fg:w="10"/><text x="98.0904%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.34%)</title><rect x="97.6993%" y="197" width="0.3434%" height="15" fill="rgb(208,122,12)" fg:x="19916" fg:w="70"/><text x="97.9923%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.35%)</title><rect x="97.6993%" y="213" width="0.3532%" height="15" fill="rgb(253,202,7)" fg:x="19916" fg:w="72"/><text x="97.9923%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.38%)</title><rect x="97.6993%" y="229" width="0.3777%" height="15" fill="rgb(241,142,32)" fg:x="19916" fg:w="77"/><text x="97.9923%" y="239.50"></text></g><g><title>candid::utils::write_args (1,436 instructions, 7.04%)</title><rect x="91.4054%" y="245" width="7.0444%" height="15" fill="rgb(239,145,31)" fg:x="18633" fg:w="1436"/><text x="91.6984%" y="255.50">candid::..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.4498%" y="197" width="0.0147%" height="15" fill="rgb(245,219,10)" fg:x="20069" fg:w="3"/><text x="98.7428%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.4646%" y="197" width="0.0196%" height="15" fill="rgb(223,137,33)" fg:x="20072" fg:w="4"/><text x="98.7575%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.4842%" y="197" width="0.0147%" height="15" fill="rgb(209,224,41)" fg:x="20076" fg:w="3"/><text x="98.7771%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.4989%" y="197" width="0.0196%" height="15" fill="rgb(230,3,36)" fg:x="20079" fg:w="4"/><text x="98.7919%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.5185%" y="197" width="0.0294%" height="15" fill="rgb(233,176,5)" fg:x="20083" fg:w="6"/><text x="98.8115%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.08%)</title><rect x="98.5480%" y="197" width="0.0785%" height="15" fill="rgb(249,214,38)" fg:x="20089" fg:w="16"/><text x="98.8409%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.48%)</title><rect x="98.4498%" y="213" width="0.4807%" height="15" fill="rgb(233,118,27)" fg:x="20069" fg:w="98"/><text x="98.7428%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.49%)</title><rect x="98.4498%" y="229" width="0.4906%" height="15" fill="rgb(244,109,51)" fg:x="20069" fg:w="100"/><text x="98.7428%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.9649%" y="197" width="0.0147%" height="15" fill="rgb(220,12,54)" fg:x="20174" fg:w="3"/><text x="99.2579%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.9796%" y="197" width="0.0196%" height="15" fill="rgb(252,46,5)" fg:x="20177" fg:w="4"/><text x="99.2726%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.9993%" y="197" width="0.0147%" height="15" fill="rgb(237,213,8)" fg:x="20181" fg:w="3"/><text x="99.2922%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.0140%" y="197" width="0.0196%" height="15" fill="rgb(229,86,43)" fg:x="20184" fg:w="4"/><text x="99.3069%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.0336%" y="197" width="0.0245%" height="15" fill="rgb(244,126,24)" fg:x="20188" fg:w="5"/><text x="99.3266%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.0581%" y="197" width="0.0147%" height="15" fill="rgb(226,91,41)" fg:x="20193" fg:w="3"/><text x="99.3511%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.0728%" y="197" width="0.0294%" height="15" fill="rgb(211,26,18)" fg:x="20196" fg:w="6"/><text x="99.3658%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="99.1023%" y="197" width="0.0491%" height="15" fill="rgb(231,137,4)" fg:x="20202" fg:w="10"/><text x="99.3952%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.60%)</title><rect x="98.9649%" y="213" width="0.5985%" height="15" fill="rgb(247,127,41)" fg:x="20174" fg:w="122"/><text x="99.2579%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.61%)</title><rect x="98.9649%" y="229" width="0.6083%" height="15" fill="rgb(232,87,45)" fg:x="20174" fg:w="124"/><text x="99.2579%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.15%)</title><rect x="98.4498%" y="245" width="1.1479%" height="15" fill="rgb(245,199,23)" fg:x="20069" fg:w="234"/><text x="98.7428%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (20,374 instructions, 99.95%)</title><rect x="0.0392%" y="261" width="99.9460%" height="15" fill="rgb(224,7,6)" fg:x="8" fg:w="20374"/><text x="0.3322%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (20,385 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(241,189,49)" fg:x="0" fg:w="20385"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_get (20,385 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(226,185,29)" fg:x="0" fg:w="20385"/><text x="0.2930%" y="287.50">canister_update batch_get</text></g></svg></svg>