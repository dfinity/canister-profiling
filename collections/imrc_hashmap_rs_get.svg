<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">imrc_hashmap_rs.batch_get</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="31820"><g><title>ic_cdk::setup (8 instructions, 0.03%)</title><rect x="0.0000%" y="261" width="0.0251%" height="15" fill="rgb(228,140,8)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.0251%" y="181" width="0.0283%" height="15" fill="rgb(217,208,8)" fg:x="8" fg:w="9"/><text x="0.3181%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.0534%" y="181" width="0.0283%" height="15" fill="rgb(230,198,49)" fg:x="17" fg:w="9"/><text x="0.3464%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::left_bits (8 instructions, 0.03%)</title><rect x="0.0817%" y="181" width="0.0251%" height="15" fill="rgb(230,182,40)" fg:x="26" fg:w="8"/><text x="0.3747%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::least_bit (5 instructions, 0.02%)</title><rect x="0.1069%" y="181" width="0.0157%" height="15" fill="rgb(240,123,47)" fg:x="34" fg:w="5"/><text x="0.3998%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.1226%" y="181" width="0.0157%" height="15" fill="rgb(251,216,6)" fg:x="39" fg:w="5"/><text x="0.4155%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.1477%" y="181" width="0.0314%" height="15" fill="rgb(251,61,10)" fg:x="47" fg:w="10"/><text x="0.4407%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (168 instructions, 0.53%)</title><rect x="0.0251%" y="197" width="0.5280%" height="15" fill="rgb(243,193,45)" fg:x="8" fg:w="168"/><text x="0.3181%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.56%)</title><rect x="0.0251%" y="213" width="0.5594%" height="15" fill="rgb(224,7,43)" fg:x="8" fg:w="178"/><text x="0.3181%" y="223.50"></text></g><g><title>__rdl_alloc (181 instructions, 0.57%)</title><rect x="0.0251%" y="229" width="0.5688%" height="15" fill="rgb(215,174,33)" fg:x="8" fg:w="181"/><text x="0.3181%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6128%" y="181" width="0.0283%" height="15" fill="rgb(249,188,6)" fg:x="195" fg:w="9"/><text x="0.9058%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6411%" y="181" width="0.0283%" height="15" fill="rgb(252,220,20)" fg:x="204" fg:w="9"/><text x="0.9341%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6694%" y="181" width="0.0283%" height="15" fill="rgb(226,49,51)" fg:x="213" fg:w="9"/><text x="0.9624%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="0.6977%" y="181" width="0.0440%" height="15" fill="rgb(230,124,50)" fg:x="222" fg:w="14"/><text x="0.9906%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.39%)</title><rect x="0.6128%" y="197" width="0.3897%" height="15" fill="rgb(228,72,17)" fg:x="195" fg:w="124"/><text x="0.9058%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.42%)</title><rect x="0.6128%" y="213" width="0.4211%" height="15" fill="rgb(232,37,29)" fg:x="195" fg:w="134"/><text x="0.9058%" y="223.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.43%)</title><rect x="0.6128%" y="229" width="0.4305%" height="15" fill="rgb(250,2,10)" fg:x="195" fg:w="137"/><text x="0.9058%" y="239.50"></text></g><g><title>__rust_alloc (330 instructions, 1.04%)</title><rect x="0.0251%" y="245" width="1.0371%" height="15" fill="rgb(245,159,46)" fg:x="8" fg:w="330"/><text x="0.3181%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.02%)</title><rect x="1.0622%" y="245" width="0.0189%" height="15" fill="rgb(247,50,29)" fg:x="338" fg:w="6"/><text x="1.3552%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="1.0811%" y="149" width="0.0283%" height="15" fill="rgb(206,136,24)" fg:x="344" fg:w="9"/><text x="1.3740%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="1.1094%" y="149" width="0.0283%" height="15" fill="rgb(247,46,41)" fg:x="353" fg:w="9"/><text x="1.4023%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.1471%" y="149" width="0.0157%" height="15" fill="rgb(220,185,15)" fg:x="365" fg:w="5"/><text x="1.4400%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="1.0811%" y="165" width="0.3771%" height="15" fill="rgb(222,212,18)" fg:x="344" fg:w="120"/><text x="1.3740%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="1.0811%" y="181" width="0.4085%" height="15" fill="rgb(234,107,14)" fg:x="344" fg:w="130"/><text x="1.3740%" y="191.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="1.0811%" y="197" width="0.4180%" height="15" fill="rgb(247,22,45)" fg:x="344" fg:w="133"/><text x="1.3740%" y="207.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="1.0811%" y="213" width="0.4368%" height="15" fill="rgb(223,156,32)" fg:x="344" fg:w="139"/><text x="1.3740%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (199 instructions, 0.63%)</title><rect x="1.0811%" y="229" width="0.6254%" height="15" fill="rgb(223,112,48)" fg:x="344" fg:w="199"/><text x="1.3740%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.23%)</title><rect x="1.7096%" y="181" width="0.2294%" height="15" fill="rgb(208,58,30)" fg:x="544" fg:w="73"/><text x="2.0026%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="1.9390%" y="117" width="0.0189%" height="15" fill="rgb(236,106,32)" fg:x="617" fg:w="6"/><text x="2.2320%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="1.9390%" y="133" width="0.0314%" height="15" fill="rgb(227,108,12)" fg:x="617" fg:w="10"/><text x="2.2320%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.36%)</title><rect x="1.9390%" y="149" width="1.3608%" height="15" fill="rgb(248,213,47)" fg:x="617" fg:w="433"/><text x="2.2320%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.27%)</title><rect x="3.2998%" y="149" width="0.2734%" height="15" fill="rgb(224,13,49)" fg:x="1050" fg:w="87"/><text x="3.5928%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.5732%" y="149" width="0.1634%" height="15" fill="rgb(233,161,17)" fg:x="1137" fg:w="52"/><text x="3.8662%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.7366%" y="149" width="0.1634%" height="15" fill="rgb(218,113,13)" fg:x="1189" fg:w="52"/><text x="4.0296%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.9001%" y="149" width="0.1634%" height="15" fill="rgb(247,105,40)" fg:x="1241" fg:w="52"/><text x="4.1930%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="4.0635%" y="149" width="0.1634%" height="15" fill="rgb(242,195,44)" fg:x="1293" fg:w="52"/><text x="4.3565%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (880 instructions, 2.77%)</title><rect x="1.9390%" y="181" width="2.7656%" height="15" fill="rgb(239,125,15)" fg:x="617" fg:w="880"/><text x="2.2320%" y="191.50">b..</text></g><g><title> 4]&gt;::read_options (880 instructions, 2.77%)</title><rect x="1.9390%" y="165" width="2.7656%" height="15" fill="rgb(216,89,45)" fg:x="617" fg:w="880"/><text x="2.2320%" y="175.50"> ..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.23%)</title><rect x="4.7046%" y="181" width="0.2294%" height="15" fill="rgb(228,205,4)" fg:x="1497" fg:w="73"/><text x="4.9976%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.24%)</title><rect x="4.9340%" y="165" width="0.2420%" height="15" fill="rgb(209,203,5)" fg:x="1570" fg:w="77"/><text x="5.2270%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.33%)</title><rect x="4.9340%" y="181" width="0.3268%" height="15" fill="rgb(206,205,49)" fg:x="1570" fg:w="104"/><text x="5.2270%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="5.2608%" y="133" width="0.0189%" height="15" fill="rgb(211,150,29)" fg:x="1674" fg:w="6"/><text x="5.5538%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="5.2608%" y="149" width="0.0314%" height="15" fill="rgb(251,16,54)" fg:x="1674" fg:w="10"/><text x="5.5538%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.36%)</title><rect x="5.2608%" y="165" width="1.3608%" height="15" fill="rgb(206,44,1)" fg:x="1674" fg:w="433"/><text x="5.5538%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.06%)</title><rect x="6.6216%" y="149" width="0.0566%" height="15" fill="rgb(239,18,5)" fg:x="2107" fg:w="18"/><text x="6.9146%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.07%)</title><rect x="6.6216%" y="165" width="0.0691%" height="15" fill="rgb(218,38,47)" fg:x="2107" fg:w="22"/><text x="6.9146%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="6.6908%" y="69" width="0.0283%" height="15" fill="rgb(221,98,26)" fg:x="2129" fg:w="9"/><text x="6.9837%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="6.7190%" y="69" width="0.0283%" height="15" fill="rgb(237,37,21)" fg:x="2138" fg:w="9"/><text x="7.0120%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="6.7568%" y="69" width="0.0157%" height="15" fill="rgb(229,213,27)" fg:x="2150" fg:w="5"/><text x="7.0497%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="6.6908%" y="85" width="0.3771%" height="15" fill="rgb(239,167,49)" fg:x="2129" fg:w="120"/><text x="6.9837%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="6.6908%" y="101" width="0.4085%" height="15" fill="rgb(241,183,38)" fg:x="2129" fg:w="130"/><text x="6.9837%" y="111.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="6.6908%" y="117" width="0.4180%" height="15" fill="rgb(229,122,51)" fg:x="2129" fg:w="133"/><text x="6.9837%" y="127.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="6.6908%" y="133" width="0.4368%" height="15" fill="rgb(232,70,11)" fg:x="2129" fg:w="139"/><text x="6.9837%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.19%)</title><rect x="7.1276%" y="85" width="0.1886%" height="15" fill="rgb(234,191,26)" fg:x="2268" fg:w="60"/><text x="7.4206%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.20%)</title><rect x="7.1276%" y="101" width="0.2011%" height="15" fill="rgb(208,216,20)" fg:x="2268" fg:w="64"/><text x="7.4206%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.28%)</title><rect x="7.1276%" y="117" width="0.2797%" height="15" fill="rgb(251,211,22)" fg:x="2268" fg:w="89"/><text x="7.4206%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="7.4073%" y="69" width="0.0314%" height="15" fill="rgb(249,147,32)" fg:x="2357" fg:w="10"/><text x="7.7003%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.09%)</title><rect x="7.4387%" y="37" width="0.0943%" height="15" fill="rgb(214,19,17)" fg:x="2367" fg:w="30"/><text x="7.7317%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.11%)</title><rect x="7.4387%" y="53" width="0.1069%" height="15" fill="rgb(206,110,19)" fg:x="2367" fg:w="34"/><text x="7.7317%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.19%)</title><rect x="7.4387%" y="69" width="0.1854%" height="15" fill="rgb(217,20,52)" fg:x="2367" fg:w="59"/><text x="7.7317%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.37%)</title><rect x="7.4073%" y="85" width="0.3740%" height="15" fill="rgb(253,214,18)" fg:x="2357" fg:w="119"/><text x="7.7003%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.55%)</title><rect x="7.4073%" y="101" width="0.5468%" height="15" fill="rgb(237,221,41)" fg:x="2357" fg:w="174"/><text x="7.7003%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.56%)</title><rect x="7.4073%" y="117" width="0.5625%" height="15" fill="rgb(231,10,38)" fg:x="2357" fg:w="179"/><text x="7.7003%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.19%)</title><rect x="7.1276%" y="133" width="1.1911%" height="15" fill="rgb(238,148,3)" fg:x="2268" fg:w="379"/><text x="7.4206%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (661 instructions, 2.08%)</title><rect x="6.6908%" y="149" width="2.0773%" height="15" fill="rgb(211,21,8)" fg:x="2129" fg:w="661"/><text x="6.9837%" y="159.50">a..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.27%)</title><rect x="8.7681%" y="149" width="0.2734%" height="15" fill="rgb(246,108,37)" fg:x="2790" fg:w="87"/><text x="9.0610%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="9.0509%" y="101" width="0.0126%" height="15" fill="rgb(232,103,29)" fg:x="2880" fg:w="4"/><text x="9.3439%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="9.0729%" y="101" width="0.0126%" height="15" fill="rgb(235,88,35)" fg:x="2887" fg:w="4"/><text x="9.3659%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="9.0855%" y="101" width="0.0189%" height="15" fill="rgb(254,59,19)" fg:x="2891" fg:w="6"/><text x="9.3784%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.21%)</title><rect x="9.0415%" y="117" width="0.2137%" height="15" fill="rgb(231,169,35)" fg:x="2877" fg:w="68"/><text x="9.3345%" y="127.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="9.0415%" y="133" width="0.2200%" height="15" fill="rgb(220,97,41)" fg:x="2877" fg:w="70"/><text x="9.3345%" y="143.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="9.0415%" y="149" width="0.2357%" height="15" fill="rgb(251,175,49)" fg:x="2877" fg:w="75"/><text x="9.3345%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (894 instructions, 2.81%)</title><rect x="6.6908%" y="165" width="2.8096%" height="15" fill="rgb(223,155,18)" fg:x="2129" fg:w="894"/><text x="6.9837%" y="175.50">bi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.08%)</title><rect x="9.5003%" y="165" width="0.0786%" height="15" fill="rgb(249,211,2)" fg:x="3023" fg:w="25"/><text x="9.7933%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,522 instructions, 4.78%)</title><rect x="5.2608%" y="181" width="4.7832%" height="15" fill="rgb(209,215,45)" fg:x="1674" fg:w="1522"/><text x="5.5538%" y="191.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.21%)</title><rect x="10.0440%" y="181" width="0.2137%" height="15" fill="rgb(215,212,40)" fg:x="3196" fg:w="68"/><text x="10.3370%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.24%)</title><rect x="10.2577%" y="165" width="0.2420%" height="15" fill="rgb(207,24,38)" fg:x="3264" fg:w="77"/><text x="10.5507%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.33%)</title><rect x="10.2577%" y="181" width="0.3268%" height="15" fill="rgb(251,205,16)" fg:x="3264" fg:w="104"/><text x="10.5507%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="10.5845%" y="133" width="0.0189%" height="15" fill="rgb(253,16,31)" fg:x="3368" fg:w="6"/><text x="10.8775%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="10.5845%" y="149" width="0.0314%" height="15" fill="rgb(250,50,49)" fg:x="3368" fg:w="10"/><text x="10.8775%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.36%)</title><rect x="10.5845%" y="165" width="1.3608%" height="15" fill="rgb(248,65,48)" fg:x="3368" fg:w="433"/><text x="10.8775%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.06%)</title><rect x="11.9453%" y="149" width="0.0566%" height="15" fill="rgb(210,85,53)" fg:x="3801" fg:w="18"/><text x="12.2383%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.07%)</title><rect x="11.9453%" y="165" width="0.0691%" height="15" fill="rgb(234,6,11)" fg:x="3801" fg:w="22"/><text x="12.2383%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="12.0145%" y="69" width="0.0283%" height="15" fill="rgb(216,57,19)" fg:x="3823" fg:w="9"/><text x="12.3074%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="12.0427%" y="69" width="0.0283%" height="15" fill="rgb(208,90,0)" fg:x="3832" fg:w="9"/><text x="12.3357%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="12.0805%" y="69" width="0.0157%" height="15" fill="rgb(245,199,2)" fg:x="3844" fg:w="5"/><text x="12.3734%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="12.0145%" y="85" width="0.3771%" height="15" fill="rgb(244,201,3)" fg:x="3823" fg:w="120"/><text x="12.3074%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="12.0145%" y="101" width="0.4085%" height="15" fill="rgb(212,211,32)" fg:x="3823" fg:w="130"/><text x="12.3074%" y="111.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="12.0145%" y="117" width="0.4180%" height="15" fill="rgb(224,229,35)" fg:x="3823" fg:w="133"/><text x="12.3074%" y="127.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="12.0145%" y="133" width="0.4368%" height="15" fill="rgb(228,92,33)" fg:x="3823" fg:w="139"/><text x="12.3074%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.19%)</title><rect x="12.4513%" y="85" width="0.1886%" height="15" fill="rgb(247,214,15)" fg:x="3962" fg:w="60"/><text x="12.7443%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.20%)</title><rect x="12.4513%" y="101" width="0.2011%" height="15" fill="rgb(252,59,46)" fg:x="3962" fg:w="64"/><text x="12.7443%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.28%)</title><rect x="12.4513%" y="117" width="0.2797%" height="15" fill="rgb(214,2,1)" fg:x="3962" fg:w="89"/><text x="12.7443%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="12.7310%" y="69" width="0.0314%" height="15" fill="rgb(228,41,3)" fg:x="4051" fg:w="10"/><text x="13.0240%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.09%)</title><rect x="12.7624%" y="37" width="0.0943%" height="15" fill="rgb(235,141,17)" fg:x="4061" fg:w="30"/><text x="13.0554%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.11%)</title><rect x="12.7624%" y="53" width="0.1069%" height="15" fill="rgb(226,61,19)" fg:x="4061" fg:w="34"/><text x="13.0554%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.19%)</title><rect x="12.7624%" y="69" width="0.1854%" height="15" fill="rgb(219,189,21)" fg:x="4061" fg:w="59"/><text x="13.0554%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.37%)</title><rect x="12.7310%" y="85" width="0.3740%" height="15" fill="rgb(224,211,43)" fg:x="4051" fg:w="119"/><text x="13.0240%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.55%)</title><rect x="12.7310%" y="101" width="0.5468%" height="15" fill="rgb(206,146,24)" fg:x="4051" fg:w="174"/><text x="13.0240%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.56%)</title><rect x="12.7310%" y="117" width="0.5625%" height="15" fill="rgb(216,107,45)" fg:x="4051" fg:w="179"/><text x="13.0240%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.19%)</title><rect x="12.4513%" y="133" width="1.1911%" height="15" fill="rgb(211,64,22)" fg:x="3962" fg:w="379"/><text x="12.7443%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (661 instructions, 2.08%)</title><rect x="12.0145%" y="149" width="2.0773%" height="15" fill="rgb(212,49,25)" fg:x="3823" fg:w="661"/><text x="12.3074%" y="159.50">a..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.27%)</title><rect x="14.0918%" y="149" width="0.2734%" height="15" fill="rgb(238,227,21)" fg:x="4484" fg:w="87"/><text x="14.3847%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="14.3746%" y="101" width="0.0126%" height="15" fill="rgb(216,136,41)" fg:x="4574" fg:w="4"/><text x="14.6676%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="14.3966%" y="101" width="0.0126%" height="15" fill="rgb(215,68,35)" fg:x="4581" fg:w="4"/><text x="14.6896%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="14.4092%" y="101" width="0.0189%" height="15" fill="rgb(234,111,19)" fg:x="4585" fg:w="6"/><text x="14.7021%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.21%)</title><rect x="14.3652%" y="117" width="0.2137%" height="15" fill="rgb(245,12,18)" fg:x="4571" fg:w="68"/><text x="14.6581%" y="127.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="14.3652%" y="133" width="0.2200%" height="15" fill="rgb(233,118,24)" fg:x="4571" fg:w="70"/><text x="14.6581%" y="143.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="14.3652%" y="149" width="0.2357%" height="15" fill="rgb(222,87,5)" fg:x="4571" fg:w="75"/><text x="14.6581%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (894 instructions, 2.81%)</title><rect x="12.0145%" y="165" width="2.8096%" height="15" fill="rgb(206,60,38)" fg:x="3823" fg:w="894"/><text x="12.3074%" y="175.50">bi..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.23%)</title><rect x="14.8240%" y="133" width="0.2294%" height="15" fill="rgb(240,12,34)" fg:x="4717" fg:w="73"/><text x="15.1170%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.35%)</title><rect x="15.0534%" y="117" width="0.3457%" height="15" fill="rgb(242,198,24)" fg:x="4790" fg:w="110"/><text x="15.3464%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.43%)</title><rect x="15.0534%" y="133" width="0.4305%" height="15" fill="rgb(250,49,9)" fg:x="4790" fg:w="137"/><text x="15.3464%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.21%)</title><rect x="15.4840%" y="133" width="0.2137%" height="15" fill="rgb(226,98,21)" fg:x="4927" fg:w="68"/><text x="15.7769%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (337 instructions, 1.06%)</title><rect x="14.8240%" y="149" width="1.0591%" height="15" fill="rgb(218,85,28)" fg:x="4717" fg:w="337"/><text x="15.1170%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="15.8831%" y="85" width="0.0283%" height="15" fill="rgb(206,3,46)" fg:x="5054" fg:w="9"/><text x="16.1761%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="15.9114%" y="85" width="0.0283%" height="15" fill="rgb(222,46,51)" fg:x="5063" fg:w="9"/><text x="16.2043%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="15.9491%" y="85" width="0.0157%" height="15" fill="rgb(250,167,40)" fg:x="5075" fg:w="5"/><text x="16.2421%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="15.8831%" y="101" width="0.3771%" height="15" fill="rgb(226,152,15)" fg:x="5054" fg:w="120"/><text x="16.1761%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="15.8831%" y="117" width="0.4085%" height="15" fill="rgb(215,133,11)" fg:x="5054" fg:w="130"/><text x="16.1761%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="15.8831%" y="133" width="0.4180%" height="15" fill="rgb(232,160,13)" fg:x="5054" fg:w="133"/><text x="16.1761%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="15.8831%" y="149" width="0.4368%" height="15" fill="rgb(227,158,6)" fg:x="5054" fg:w="139"/><text x="16.1761%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (555 instructions, 1.74%)</title><rect x="14.8240%" y="165" width="1.7442%" height="15" fill="rgb(208,84,4)" fg:x="4717" fg:w="555"/><text x="15.1170%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,052 instructions, 6.45%)</title><rect x="10.5845%" y="181" width="6.4488%" height="15" fill="rgb(233,46,21)" fg:x="3368" fg:w="2052"/><text x="10.8775%" y="191.50">binread..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.21%)</title><rect x="17.0333%" y="181" width="0.2137%" height="15" fill="rgb(222,41,22)" fg:x="5420" fg:w="68"/><text x="17.3263%" y="191.50"></text></g><g><title>binread::BinRead::read (5,162 instructions, 16.22%)</title><rect x="1.7065%" y="197" width="16.2225%" height="15" fill="rgb(238,61,31)" fg:x="543" fg:w="5162"/><text x="1.9994%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="17.9290%" y="181" width="0.0440%" height="15" fill="rgb(250,28,4)" fg:x="5705" fg:w="14"/><text x="18.2219%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="17.9730%" y="165" width="0.0440%" height="15" fill="rgb(223,160,10)" fg:x="5719" fg:w="14"/><text x="18.2659%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 instructions, 0.20%)</title><rect x="18.0170%" y="165" width="0.2043%" height="15" fill="rgb(233,31,6)" fg:x="5733" fg:w="65"/><text x="18.3099%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.06%)</title><rect x="18.2212%" y="165" width="0.0597%" height="15" fill="rgb(253,0,15)" fg:x="5798" fg:w="19"/><text x="18.5142%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (250 instructions, 0.79%)</title><rect x="17.9730%" y="181" width="0.7857%" height="15" fill="rgb(211,174,10)" fg:x="5719" fg:w="250"/><text x="18.2659%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="18.7586%" y="101" width="0.0283%" height="15" fill="rgb(229,183,9)" fg:x="5969" fg:w="9"/><text x="19.0516%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="18.7869%" y="101" width="0.0283%" height="15" fill="rgb(230,186,17)" fg:x="5978" fg:w="9"/><text x="19.0799%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="18.8246%" y="101" width="0.0157%" height="15" fill="rgb(230,146,21)" fg:x="5990" fg:w="5"/><text x="19.1176%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="18.7586%" y="117" width="0.3771%" height="15" fill="rgb(236,12,33)" fg:x="5969" fg:w="120"/><text x="19.0516%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="18.7586%" y="133" width="0.4085%" height="15" fill="rgb(233,187,13)" fg:x="5969" fg:w="130"/><text x="19.0516%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="18.7586%" y="149" width="0.4180%" height="15" fill="rgb(216,137,45)" fg:x="5969" fg:w="133"/><text x="19.0516%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="18.7586%" y="165" width="0.4368%" height="15" fill="rgb(215,169,40)" fg:x="5969" fg:w="139"/><text x="19.0516%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (220 instructions, 0.69%)</title><rect x="18.7586%" y="181" width="0.6914%" height="15" fill="rgb(233,164,7)" fg:x="5969" fg:w="220"/><text x="19.0516%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="19.4500%" y="85" width="0.0283%" height="15" fill="rgb(212,47,47)" fg:x="6189" fg:w="9"/><text x="19.7430%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="19.4783%" y="85" width="0.0283%" height="15" fill="rgb(253,129,35)" fg:x="6198" fg:w="9"/><text x="19.7713%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="19.5160%" y="85" width="0.0157%" height="15" fill="rgb(209,76,2)" fg:x="6210" fg:w="5"/><text x="19.8090%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="19.4500%" y="101" width="0.3771%" height="15" fill="rgb(238,219,27)" fg:x="6189" fg:w="120"/><text x="19.7430%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="19.4500%" y="117" width="0.4085%" height="15" fill="rgb(248,135,32)" fg:x="6189" fg:w="130"/><text x="19.7430%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="19.4500%" y="133" width="0.4180%" height="15" fill="rgb(209,191,25)" fg:x="6189" fg:w="133"/><text x="19.7430%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="19.4500%" y="149" width="0.4368%" height="15" fill="rgb(223,37,12)" fg:x="6189" fg:w="139"/><text x="19.7430%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 instructions, 0.54%)</title><rect x="19.4500%" y="165" width="0.5374%" height="15" fill="rgb(233,18,2)" fg:x="6189" fg:w="171"/><text x="19.7430%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (241 instructions, 0.76%)</title><rect x="19.4500%" y="181" width="0.7574%" height="15" fill="rgb(205,74,22)" fg:x="6189" fg:w="241"/><text x="19.7430%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (952 instructions, 2.99%)</title><rect x="17.9290%" y="197" width="2.9918%" height="15" fill="rgb(246,98,52)" fg:x="5705" fg:w="952"/><text x="18.2219%" y="207.50">ca..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="20.9208%" y="117" width="0.0283%" height="15" fill="rgb(223,61,23)" fg:x="6657" fg:w="9"/><text x="21.2138%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="20.9491%" y="117" width="0.0283%" height="15" fill="rgb(244,36,1)" fg:x="6666" fg:w="9"/><text x="21.2421%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="20.9868%" y="117" width="0.0157%" height="15" fill="rgb(220,52,11)" fg:x="6678" fg:w="5"/><text x="21.2798%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="20.9208%" y="133" width="0.3771%" height="15" fill="rgb(209,26,9)" fg:x="6657" fg:w="120"/><text x="21.2138%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="20.9208%" y="149" width="0.4085%" height="15" fill="rgb(254,48,45)" fg:x="6657" fg:w="130"/><text x="21.2138%" y="159.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="20.9208%" y="165" width="0.4180%" height="15" fill="rgb(252,21,12)" fg:x="6657" fg:w="133"/><text x="21.2138%" y="175.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="20.9208%" y="181" width="0.4368%" height="15" fill="rgb(231,171,34)" fg:x="6657" fg:w="139"/><text x="21.2138%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="21.3671%" y="133" width="0.0126%" height="15" fill="rgb(212,181,2)" fg:x="6799" fg:w="4"/><text x="21.6600%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="21.3891%" y="133" width="0.0126%" height="15" fill="rgb(216,178,45)" fg:x="6806" fg:w="4"/><text x="21.6820%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="21.4016%" y="133" width="0.0189%" height="15" fill="rgb(206,75,31)" fg:x="6810" fg:w="6"/><text x="21.6946%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="21.4205%" y="133" width="0.0503%" height="15" fill="rgb(254,132,7)" fg:x="6816" fg:w="16"/><text x="21.7135%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="21.3576%" y="149" width="0.3080%" height="15" fill="rgb(247,189,1)" fg:x="6796" fg:w="98"/><text x="21.6506%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.31%)</title><rect x="21.3576%" y="165" width="0.3143%" height="15" fill="rgb(253,110,1)" fg:x="6796" fg:w="100"/><text x="21.6506%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="21.3576%" y="181" width="0.3300%" height="15" fill="rgb(237,198,3)" fg:x="6796" fg:w="105"/><text x="21.6506%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (358 instructions, 1.13%)</title><rect x="20.9208%" y="197" width="1.1251%" height="15" fill="rgb(215,20,35)" fg:x="6657" fg:w="358"/><text x="21.2138%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.0459%" y="133" width="0.0283%" height="15" fill="rgb(216,198,4)" fg:x="7015" fg:w="9"/><text x="22.3389%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.0742%" y="133" width="0.0283%" height="15" fill="rgb(207,193,49)" fg:x="7024" fg:w="9"/><text x="22.3671%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="22.1119%" y="133" width="0.0157%" height="15" fill="rgb(209,77,23)" fg:x="7036" fg:w="5"/><text x="22.4048%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="22.0459%" y="149" width="0.3771%" height="15" fill="rgb(231,227,17)" fg:x="7015" fg:w="120"/><text x="22.3389%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="22.0459%" y="165" width="0.4085%" height="15" fill="rgb(221,154,34)" fg:x="7015" fg:w="130"/><text x="22.3389%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="22.0459%" y="181" width="0.4180%" height="15" fill="rgb(213,153,29)" fg:x="7015" fg:w="133"/><text x="22.3389%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.4827%" y="133" width="0.0283%" height="15" fill="rgb(252,116,42)" fg:x="7154" fg:w="9"/><text x="22.7757%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.5110%" y="133" width="0.0283%" height="15" fill="rgb(207,53,25)" fg:x="7163" fg:w="9"/><text x="22.8040%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="22.5487%" y="133" width="0.0157%" height="15" fill="rgb(221,155,54)" fg:x="7175" fg:w="5"/><text x="22.8417%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="22.4827%" y="149" width="0.3771%" height="15" fill="rgb(216,199,12)" fg:x="7154" fg:w="120"/><text x="22.7757%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="22.4827%" y="165" width="0.4085%" height="15" fill="rgb(214,124,26)" fg:x="7154" fg:w="130"/><text x="22.7757%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="22.4827%" y="181" width="0.4180%" height="15" fill="rgb(230,228,26)" fg:x="7154" fg:w="133"/><text x="22.7757%" y="191.50"></text></g><g><title>__rust_alloc (278 instructions, 0.87%)</title><rect x="22.0459%" y="197" width="0.8737%" height="15" fill="rgb(241,90,16)" fg:x="7015" fg:w="278"/><text x="22.3389%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="22.9290%" y="149" width="0.0126%" height="15" fill="rgb(234,55,52)" fg:x="7296" fg:w="4"/><text x="23.2219%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="22.9510%" y="149" width="0.0126%" height="15" fill="rgb(222,128,19)" fg:x="7303" fg:w="4"/><text x="23.2439%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="22.9635%" y="149" width="0.0189%" height="15" fill="rgb(233,223,22)" fg:x="7307" fg:w="6"/><text x="23.2565%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="22.9824%" y="149" width="0.0503%" height="15" fill="rgb(206,164,19)" fg:x="7313" fg:w="16"/><text x="23.2754%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="22.9195%" y="165" width="0.3080%" height="15" fill="rgb(225,117,31)" fg:x="7293" fg:w="98"/><text x="23.2125%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.31%)</title><rect x="22.9195%" y="181" width="0.3143%" height="15" fill="rgb(228,181,38)" fg:x="7293" fg:w="100"/><text x="23.2125%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="22.9195%" y="197" width="0.3300%" height="15" fill="rgb(209,218,16)" fg:x="7293" fg:w="105"/><text x="23.2125%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.30%)</title><rect x="23.2495%" y="165" width="1.2979%" height="15" fill="rgb(239,180,19)" fg:x="7398" fg:w="413"/><text x="23.5425%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.31%)</title><rect x="23.2495%" y="181" width="1.3105%" height="15" fill="rgb(218,45,45)" fg:x="7398" fg:w="417"/><text x="23.5425%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.37%)</title><rect x="23.2495%" y="197" width="1.3734%" height="15" fill="rgb(234,25,28)" fg:x="7398" fg:w="437"/><text x="23.5425%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.16%)</title><rect x="24.6229%" y="181" width="1.1565%" height="15" fill="rgb(235,61,52)" fg:x="7835" fg:w="368"/><text x="24.9158%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.17%)</title><rect x="24.6229%" y="197" width="1.1691%" height="15" fill="rgb(208,64,4)" fg:x="7835" fg:w="372"/><text x="24.9158%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,012 instructions, 25.18%)</title><rect x="1.7065%" y="213" width="25.1791%" height="15" fill="rgb(205,127,17)" fg:x="543" fg:w="8012"/><text x="1.9994%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.20%)</title><rect x="26.8856%" y="197" width="1.2036%" height="15" fill="rgb(210,82,52)" fg:x="8555" fg:w="383"/><text x="27.1786%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.20%)</title><rect x="28.1018%" y="197" width="1.2036%" height="15" fill="rgb(221,81,48)" fg:x="8942" fg:w="383"/><text x="28.3948%" y="207.50"></text></g><g><title>memcpy (774 instructions, 2.43%)</title><rect x="26.8856%" y="213" width="2.4324%" height="15" fill="rgb(247,55,39)" fg:x="8555" fg:w="774"/><text x="27.1786%" y="223.50">m..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.03%)</title><rect x="29.3180%" y="149" width="0.0251%" height="15" fill="rgb(250,129,17)" fg:x="9329" fg:w="8"/><text x="29.6110%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 instructions, 0.17%)</title><rect x="29.3180%" y="165" width="0.1697%" height="15" fill="rgb(220,126,16)" fg:x="9329" fg:w="54"/><text x="29.6110%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.23%)</title><rect x="29.3180%" y="181" width="0.2294%" height="15" fill="rgb(226,115,40)" fg:x="9329" fg:w="73"/><text x="29.6110%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="29.5475%" y="101" width="0.0283%" height="15" fill="rgb(232,62,38)" fg:x="9402" fg:w="9"/><text x="29.8404%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="29.5757%" y="101" width="0.0283%" height="15" fill="rgb(249,160,54)" fg:x="9411" fg:w="9"/><text x="29.8687%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="29.6135%" y="101" width="0.0157%" height="15" fill="rgb(235,78,35)" fg:x="9423" fg:w="5"/><text x="29.9064%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="29.5475%" y="117" width="0.3771%" height="15" fill="rgb(254,99,31)" fg:x="9402" fg:w="120"/><text x="29.8404%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="29.5475%" y="133" width="0.4085%" height="15" fill="rgb(231,149,18)" fg:x="9402" fg:w="130"/><text x="29.8404%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="29.5475%" y="149" width="0.4180%" height="15" fill="rgb(251,207,53)" fg:x="9402" fg:w="133"/><text x="29.8404%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="29.5475%" y="165" width="0.4368%" height="15" fill="rgb(234,18,40)" fg:x="9402" fg:w="139"/><text x="29.8404%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (184 instructions, 0.58%)</title><rect x="29.5475%" y="181" width="0.5783%" height="15" fill="rgb(221,113,43)" fg:x="9402" fg:w="184"/><text x="29.8404%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.03%)</title><rect x="30.1257%" y="149" width="0.0251%" height="15" fill="rgb(242,93,20)" fg:x="9586" fg:w="8"/><text x="30.4187%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="30.1508%" y="133" width="0.1697%" height="15" fill="rgb(254,228,19)" fg:x="9594" fg:w="54"/><text x="30.4438%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.28%)</title><rect x="30.3206%" y="133" width="0.2828%" height="15" fill="rgb(241,74,8)" fg:x="9648" fg:w="90"/><text x="30.6135%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.51%)</title><rect x="30.6034%" y="133" width="0.5123%" height="15" fill="rgb(251,135,6)" fg:x="9738" fg:w="163"/><text x="30.8964%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.75%)</title><rect x="30.1508%" y="149" width="1.7473%" height="15" fill="rgb(242,122,34)" fg:x="9594" fg:w="556"/><text x="30.4438%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.31%)</title><rect x="31.8982%" y="149" width="0.3111%" height="15" fill="rgb(225,168,38)" fg:x="10150" fg:w="99"/><text x="32.1911%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (826 instructions, 2.60%)</title><rect x="30.1257%" y="165" width="2.5959%" height="15" fill="rgb(214,115,35)" fg:x="9586" fg:w="826"/><text x="30.4187%" y="175.50">s..</text></g><g><title>candid::types::internal::env_add (853 instructions, 2.68%)</title><rect x="30.1257%" y="181" width="2.6807%" height="15" fill="rgb(237,74,2)" fg:x="9586" fg:w="853"/><text x="30.4187%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="32.8064%" y="101" width="0.0283%" height="15" fill="rgb(213,125,43)" fg:x="10439" fg:w="9"/><text x="33.0994%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="32.8347%" y="101" width="0.0283%" height="15" fill="rgb(216,122,53)" fg:x="10448" fg:w="9"/><text x="33.1277%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.8724%" y="101" width="0.0157%" height="15" fill="rgb(210,22,29)" fg:x="10460" fg:w="5"/><text x="33.1654%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="32.8064%" y="117" width="0.3771%" height="15" fill="rgb(218,71,38)" fg:x="10439" fg:w="120"/><text x="33.0994%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="32.8064%" y="133" width="0.4085%" height="15" fill="rgb(213,133,14)" fg:x="10439" fg:w="130"/><text x="33.0994%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="32.8064%" y="149" width="0.4180%" height="15" fill="rgb(252,41,40)" fg:x="10439" fg:w="133"/><text x="33.0994%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="32.8064%" y="165" width="0.4368%" height="15" fill="rgb(242,159,52)" fg:x="10439" fg:w="139"/><text x="33.0994%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (151 instructions, 0.47%)</title><rect x="32.8064%" y="181" width="0.4745%" height="15" fill="rgb(239,120,6)" fg:x="10439" fg:w="151"/><text x="33.0994%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.03%)</title><rect x="33.2810%" y="149" width="0.0251%" height="15" fill="rgb(235,220,43)" fg:x="10590" fg:w="8"/><text x="33.5739%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="33.3061%" y="133" width="0.1697%" height="15" fill="rgb(208,0,2)" fg:x="10598" fg:w="54"/><text x="33.5991%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.28%)</title><rect x="33.4758%" y="133" width="0.2828%" height="15" fill="rgb(240,173,32)" fg:x="10652" fg:w="90"/><text x="33.7688%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.51%)</title><rect x="33.7586%" y="133" width="0.5123%" height="15" fill="rgb(223,84,52)" fg:x="10742" fg:w="163"/><text x="34.0516%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.75%)</title><rect x="33.3061%" y="149" width="1.7473%" height="15" fill="rgb(209,178,7)" fg:x="10598" fg:w="556"/><text x="33.5991%" y="159.50"></text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.23%)</title><rect x="35.0534%" y="133" width="0.2326%" height="15" fill="rgb(243,122,45)" fg:x="11154" fg:w="74"/><text x="35.3464%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.25%)</title><rect x="35.0534%" y="149" width="0.2451%" height="15" fill="rgb(242,36,30)" fg:x="11154" fg:w="78"/><text x="35.3464%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.3080%" y="85" width="0.0126%" height="15" fill="rgb(236,167,22)" fg:x="11235" fg:w="4"/><text x="35.6010%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.3300%" y="85" width="0.0126%" height="15" fill="rgb(241,179,18)" fg:x="11242" fg:w="4"/><text x="35.6229%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.3426%" y="85" width="0.0189%" height="15" fill="rgb(229,130,17)" fg:x="11246" fg:w="6"/><text x="35.6355%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="35.3614%" y="85" width="0.0503%" height="15" fill="rgb(232,204,0)" fg:x="11252" fg:w="16"/><text x="35.6544%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="35.2986%" y="101" width="0.3080%" height="15" fill="rgb(235,144,30)" fg:x="11232" fg:w="98"/><text x="35.5915%" y="111.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.31%)</title><rect x="35.2986%" y="117" width="0.3143%" height="15" fill="rgb(225,120,50)" fg:x="11232" fg:w="100"/><text x="35.5915%" y="127.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="35.2986%" y="133" width="0.3300%" height="15" fill="rgb(223,155,43)" fg:x="11232" fg:w="105"/><text x="35.5915%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.43%)</title><rect x="35.2986%" y="149" width="0.4305%" height="15" fill="rgb(227,88,5)" fg:x="11232" fg:w="137"/><text x="35.5915%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 2.99%)</title><rect x="33.2810%" y="165" width="2.9918%" height="15" fill="rgb(214,203,7)" fg:x="10590" fg:w="952"/><text x="33.5739%" y="175.50">st..</text></g><g><title>candid::types::internal::env_add (979 instructions, 3.08%)</title><rect x="33.2810%" y="181" width="3.0767%" height="15" fill="rgb(234,32,10)" fg:x="10590" fg:w="979"/><text x="33.5739%" y="191.50">ca..</text></g><g><title>candid::types::internal::ID::__getit (8 instructions, 0.03%)</title><rect x="36.3576%" y="149" width="0.0251%" height="15" fill="rgb(227,133,29)" fg:x="11569" fg:w="8"/><text x="36.6506%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="36.3828%" y="117" width="0.1697%" height="15" fill="rgb(216,41,49)" fg:x="11577" fg:w="54"/><text x="36.6757%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.25%)</title><rect x="36.3828%" y="133" width="0.2483%" height="15" fill="rgb(206,172,5)" fg:x="11577" fg:w="79"/><text x="36.6757%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 0.95%)</title><rect x="36.3828%" y="149" width="0.9522%" height="15" fill="rgb(239,159,2)" fg:x="11577" fg:w="303"/><text x="36.6757%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (18 instructions, 0.06%)</title><rect x="37.3350%" y="149" width="0.0566%" height="15" fill="rgb(233,24,17)" fg:x="11880" fg:w="18"/><text x="37.6280%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="37.3916%" y="149" width="0.0346%" height="15" fill="rgb(214,99,32)" fg:x="11898" fg:w="11"/><text x="37.6845%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (521 instructions, 1.64%)</title><rect x="36.3576%" y="165" width="1.6373%" height="15" fill="rgb(245,41,14)" fg:x="11569" fg:w="521"/><text x="36.6506%" y="175.50"></text></g><g><title>candid::types::internal::env_id (559 instructions, 1.76%)</title><rect x="36.3576%" y="181" width="1.7568%" height="15" fill="rgb(212,2,24)" fg:x="11569" fg:w="559"/><text x="36.6506%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,907 instructions, 9.14%)</title><rect x="29.3180%" y="197" width="9.1358%" height="15" fill="rgb(220,90,41)" fg:x="9329" fg:w="2907"/><text x="29.6110%" y="207.50">candid::typ..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.12%)</title><rect x="38.4538%" y="197" width="0.1194%" height="15" fill="rgb(241,97,29)" fg:x="12236" fg:w="38"/><text x="38.7468%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="38.5827%" y="133" width="0.0126%" height="15" fill="rgb(210,210,33)" fg:x="12277" fg:w="4"/><text x="38.8756%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="38.6047%" y="133" width="0.0126%" height="15" fill="rgb(244,7,14)" fg:x="12284" fg:w="4"/><text x="38.8976%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="38.6172%" y="133" width="0.0189%" height="15" fill="rgb(232,16,50)" fg:x="12288" fg:w="6"/><text x="38.9102%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="38.6361%" y="133" width="0.0126%" height="15" fill="rgb(221,227,20)" fg:x="12294" fg:w="4"/><text x="38.9290%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="38.6486%" y="133" width="0.0314%" height="15" fill="rgb(251,65,45)" fg:x="12298" fg:w="10"/><text x="38.9416%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.44%)</title><rect x="38.5732%" y="149" width="0.4431%" height="15" fill="rgb(237,180,50)" fg:x="12274" fg:w="141"/><text x="38.8662%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.45%)</title><rect x="38.5732%" y="165" width="0.4494%" height="15" fill="rgb(237,155,5)" fg:x="12274" fg:w="143"/><text x="38.8662%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.47%)</title><rect x="38.5732%" y="181" width="0.4651%" height="15" fill="rgb(227,92,21)" fg:x="12274" fg:w="148"/><text x="38.8662%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="39.1483%" y="133" width="0.0126%" height="15" fill="rgb(215,41,8)" fg:x="12457" fg:w="4"/><text x="39.4413%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="39.1703%" y="133" width="0.0126%" height="15" fill="rgb(238,148,54)" fg:x="12464" fg:w="4"/><text x="39.4633%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="39.1829%" y="133" width="0.0189%" height="15" fill="rgb(239,139,52)" fg:x="12468" fg:w="6"/><text x="39.4759%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="39.2018%" y="133" width="0.0126%" height="15" fill="rgb(226,105,0)" fg:x="12474" fg:w="4"/><text x="39.4947%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="39.2143%" y="133" width="0.0314%" height="15" fill="rgb(234,222,0)" fg:x="12478" fg:w="10"/><text x="39.5073%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.44%)</title><rect x="39.1389%" y="149" width="0.4431%" height="15" fill="rgb(225,174,17)" fg:x="12454" fg:w="141"/><text x="39.4319%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.45%)</title><rect x="39.1389%" y="165" width="0.4494%" height="15" fill="rgb(235,203,8)" fg:x="12454" fg:w="143"/><text x="39.4319%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.47%)</title><rect x="39.1389%" y="181" width="0.4651%" height="15" fill="rgb(207,29,44)" fg:x="12454" fg:w="148"/><text x="39.4319%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.13%)</title><rect x="38.5732%" y="197" width="1.1314%" height="15" fill="rgb(213,87,2)" fg:x="12274" fg:w="360"/><text x="38.8662%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.09%)</title><rect x="39.7046%" y="181" width="0.0880%" height="15" fill="rgb(209,61,47)" fg:x="12634" fg:w="28"/><text x="39.9976%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.05%)</title><rect x="39.7926%" y="181" width="0.0503%" height="15" fill="rgb(212,209,54)" fg:x="12662" fg:w="16"/><text x="40.0856%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.05%)</title><rect x="39.8429%" y="181" width="0.0503%" height="15" fill="rgb(207,225,28)" fg:x="12678" fg:w="16"/><text x="40.1358%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (141 instructions, 0.44%)</title><rect x="39.7046%" y="197" width="0.4431%" height="15" fill="rgb(217,32,54)" fg:x="12634" fg:w="141"/><text x="39.9976%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="40.1477%" y="197" width="0.0346%" height="15" fill="rgb(246,18,20)" fg:x="12775" fg:w="11"/><text x="40.4407%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="40.1823%" y="197" width="0.0346%" height="15" fill="rgb(213,220,51)" fg:x="12786" fg:w="11"/><text x="40.4752%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="40.2168%" y="197" width="0.0346%" height="15" fill="rgb(234,225,10)" fg:x="12797" fg:w="11"/><text x="40.5098%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,651 instructions, 11.47%)</title><rect x="29.3180%" y="213" width="11.4739%" height="15" fill="rgb(208,182,7)" fg:x="9329" fg:w="3651"/><text x="29.6110%" y="223.50">candid::de::ID..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.30%)</title><rect x="40.7920%" y="197" width="1.2979%" height="15" fill="rgb(226,117,44)" fg:x="12980" fg:w="413"/><text x="41.0849%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.31%)</title><rect x="40.7920%" y="213" width="1.3105%" height="15" fill="rgb(243,182,24)" fg:x="12980" fg:w="417"/><text x="41.0849%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.06%)</title><rect x="42.1025%" y="197" width="0.0597%" height="15" fill="rgb(250,166,1)" fg:x="13397" fg:w="19"/><text x="42.3954%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.1716%" y="149" width="0.0126%" height="15" fill="rgb(249,65,13)" fg:x="13419" fg:w="4"/><text x="42.4646%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="42.1936%" y="149" width="0.0126%" height="15" fill="rgb(248,131,31)" fg:x="13426" fg:w="4"/><text x="42.4866%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="42.2062%" y="149" width="0.0157%" height="15" fill="rgb(218,190,41)" fg:x="13430" fg:w="5"/><text x="42.4991%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="42.2313%" y="149" width="0.0189%" height="15" fill="rgb(243,220,0)" fg:x="13438" fg:w="6"/><text x="42.5243%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.2502%" y="149" width="0.0126%" height="15" fill="rgb(246,109,37)" fg:x="13444" fg:w="4"/><text x="42.5431%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="42.2627%" y="149" width="0.0314%" height="15" fill="rgb(216,189,6)" fg:x="13448" fg:w="10"/><text x="42.5557%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.61%)</title><rect x="42.1622%" y="165" width="0.6065%" height="15" fill="rgb(241,70,25)" fg:x="13416" fg:w="193"/><text x="42.4551%" y="175.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.61%)</title><rect x="42.1622%" y="181" width="0.6128%" height="15" fill="rgb(236,64,20)" fg:x="13416" fg:w="195"/><text x="42.4551%" y="191.50"></text></g><g><title>__rust_dealloc (200 instructions, 0.63%)</title><rect x="42.1622%" y="197" width="0.6285%" height="15" fill="rgb(246,186,1)" fg:x="13416" fg:w="200"/><text x="42.4551%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.8001%" y="133" width="0.0126%" height="15" fill="rgb(221,64,35)" fg:x="13619" fg:w="4"/><text x="43.0931%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="42.8221%" y="133" width="0.0126%" height="15" fill="rgb(222,68,42)" fg:x="13626" fg:w="4"/><text x="43.1151%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="42.8347%" y="133" width="0.0157%" height="15" fill="rgb(231,116,11)" fg:x="13630" fg:w="5"/><text x="43.1277%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="42.8598%" y="133" width="0.0189%" height="15" fill="rgb(240,69,23)" fg:x="13638" fg:w="6"/><text x="43.1528%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.8787%" y="133" width="0.0126%" height="15" fill="rgb(206,78,41)" fg:x="13644" fg:w="4"/><text x="43.1717%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="42.8913%" y="133" width="0.0314%" height="15" fill="rgb(238,176,17)" fg:x="13648" fg:w="10"/><text x="43.1842%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.23%)</title><rect x="42.9227%" y="133" width="0.2326%" height="15" fill="rgb(219,175,40)" fg:x="13658" fg:w="74"/><text x="43.2157%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.76%)</title><rect x="42.7907%" y="149" width="0.7637%" height="15" fill="rgb(206,139,20)" fg:x="13616" fg:w="243"/><text x="43.0837%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 0.77%)</title><rect x="42.7907%" y="165" width="0.7700%" height="15" fill="rgb(216,36,18)" fg:x="13616" fg:w="245"/><text x="43.0837%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 0.79%)</title><rect x="42.7907%" y="181" width="0.7857%" height="15" fill="rgb(217,1,31)" fg:x="13616" fg:w="250"/><text x="43.0837%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 0.89%)</title><rect x="42.7907%" y="197" width="0.8862%" height="15" fill="rgb(236,25,24)" fg:x="13616" fg:w="282"/><text x="43.0837%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.6769%" y="197" width="0.0346%" height="15" fill="rgb(205,132,49)" fg:x="13898" fg:w="11"/><text x="43.9699%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="43.7115%" y="197" width="0.0157%" height="15" fill="rgb(205,99,48)" fg:x="13909" fg:w="5"/><text x="44.0045%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (614 instructions, 1.93%)</title><rect x="42.1025%" y="213" width="1.9296%" height="15" fill="rgb(241,195,3)" fg:x="13397" fg:w="614"/><text x="42.3954%" y="223.50"></text></g><g><title>candid::utils::decode_args (13,571 instructions, 42.65%)</title><rect x="1.7065%" y="229" width="42.6493%" height="15" fill="rgb(249,59,34)" fg:x="543" fg:w="13571"/><text x="1.9994%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="44.3652%" y="181" width="0.0126%" height="15" fill="rgb(218,167,21)" fg:x="14117" fg:w="4"/><text x="44.6581%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="44.3872%" y="181" width="0.0126%" height="15" fill="rgb(239,41,40)" fg:x="14124" fg:w="4"/><text x="44.6801%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="44.3997%" y="181" width="0.0189%" height="15" fill="rgb(237,205,45)" fg:x="14128" fg:w="6"/><text x="44.6927%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="44.4186%" y="181" width="0.0126%" height="15" fill="rgb(242,208,48)" fg:x="14134" fg:w="4"/><text x="44.7116%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.18%)</title><rect x="44.4312%" y="181" width="0.1760%" height="15" fill="rgb(214,116,49)" fg:x="14138" fg:w="56"/><text x="44.7241%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="44.6072%" y="181" width="0.0314%" height="15" fill="rgb(234,210,20)" fg:x="14194" fg:w="10"/><text x="44.9001%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.23%)</title><rect x="44.6386%" y="181" width="0.2326%" height="15" fill="rgb(249,88,54)" fg:x="14204" fg:w="74"/><text x="44.9316%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.72%)</title><rect x="44.3558%" y="197" width="0.7165%" height="15" fill="rgb(207,220,34)" fg:x="14114" fg:w="228"/><text x="44.6487%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 0.72%)</title><rect x="44.3558%" y="213" width="0.7228%" height="15" fill="rgb(250,42,44)" fg:x="14114" fg:w="230"/><text x="44.6487%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 0.74%)</title><rect x="44.3558%" y="229" width="0.7385%" height="15" fill="rgb(211,69,23)" fg:x="14114" fg:w="235"/><text x="44.6487%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (14,046 instructions, 44.14%)</title><rect x="1.0811%" y="245" width="44.1420%" height="15" fill="rgb(227,229,25)" fg:x="344" fg:w="14046"/><text x="1.3740%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>imrc_hashmap::MAP::__getit (6 instructions, 0.02%)</title><rect x="45.2231%" y="229" width="0.0189%" height="15" fill="rgb(207,42,49)" fg:x="14390" fg:w="6"/><text x="45.5161%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="45.2420%" y="229" width="0.9177%" height="15" fill="rgb(217,168,47)" fg:x="14396" fg:w="292"/><text x="45.5350%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="46.1596%" y="229" width="0.8642%" height="15" fill="rgb(237,143,12)" fg:x="14688" fg:w="275"/><text x="46.4526%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="47.0239%" y="229" width="0.8642%" height="15" fill="rgb(241,159,16)" fg:x="14963" fg:w="275"/><text x="47.3169%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="47.8881%" y="229" width="0.9177%" height="15" fill="rgb(206,149,35)" fg:x="15238" fg:w="292"/><text x="48.1811%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="48.8058%" y="229" width="0.9177%" height="15" fill="rgb(218,123,34)" fg:x="15530" fg:w="292"/><text x="49.0988%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="49.7234%" y="229" width="0.8642%" height="15" fill="rgb(246,132,49)" fg:x="15822" fg:w="275"/><text x="50.0164%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="50.5877%" y="229" width="0.8642%" height="15" fill="rgb(217,25,47)" fg:x="16097" fg:w="275"/><text x="50.8806%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="51.4519%" y="229" width="0.8642%" height="15" fill="rgb(241,84,45)" fg:x="16372" fg:w="275"/><text x="51.7449%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="52.3162%" y="229" width="0.9177%" height="15" fill="rgb(234,163,42)" fg:x="16647" fg:w="292"/><text x="52.6091%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="53.2338%" y="229" width="0.9177%" height="15" fill="rgb(221,204,35)" fg:x="16939" fg:w="292"/><text x="53.5268%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="54.1515%" y="229" width="0.8642%" height="15" fill="rgb(229,148,32)" fg:x="17231" fg:w="275"/><text x="54.4444%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="55.0157%" y="229" width="0.8642%" height="15" fill="rgb(215,119,1)" fg:x="17506" fg:w="275"/><text x="55.3087%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="55.8799%" y="229" width="0.9177%" height="15" fill="rgb(253,75,52)" fg:x="17781" fg:w="292"/><text x="56.1729%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.97%)</title><rect x="56.7976%" y="229" width="0.9742%" height="15" fill="rgb(231,36,44)" fg:x="18073" fg:w="310"/><text x="57.0906%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="57.7718%" y="229" width="0.8642%" height="15" fill="rgb(210,156,42)" fg:x="18383" fg:w="275"/><text x="58.0648%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="58.6361%" y="229" width="0.8642%" height="15" fill="rgb(218,171,1)" fg:x="18658" fg:w="275"/><text x="58.9290%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="59.5003%" y="229" width="0.8642%" height="15" fill="rgb(242,131,36)" fg:x="18933" fg:w="275"/><text x="59.7933%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="60.3646%" y="229" width="0.8642%" height="15" fill="rgb(235,59,17)" fg:x="19208" fg:w="275"/><text x="60.6575%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="61.2288%" y="229" width="0.8642%" height="15" fill="rgb(222,107,1)" fg:x="19483" fg:w="275"/><text x="61.5218%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="62.0930%" y="229" width="0.8642%" height="15" fill="rgb(225,122,54)" fg:x="19758" fg:w="275"/><text x="62.3860%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="62.9573%" y="229" width="0.9177%" height="15" fill="rgb(219,92,40)" fg:x="20033" fg:w="292"/><text x="63.2502%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="63.8749%" y="229" width="0.9177%" height="15" fill="rgb(226,190,46)" fg:x="20325" fg:w="292"/><text x="64.1679%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.97%)</title><rect x="64.7926%" y="229" width="0.9742%" height="15" fill="rgb(232,153,11)" fg:x="20617" fg:w="310"/><text x="65.0856%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="65.7668%" y="229" width="0.9177%" height="15" fill="rgb(228,113,3)" fg:x="20927" fg:w="292"/><text x="66.0598%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="66.6845%" y="229" width="0.9177%" height="15" fill="rgb(234,84,1)" fg:x="21219" fg:w="292"/><text x="66.9774%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="67.6021%" y="229" width="0.8642%" height="15" fill="rgb(227,192,50)" fg:x="21511" fg:w="275"/><text x="67.8951%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="68.4664%" y="229" width="0.8642%" height="15" fill="rgb(252,205,45)" fg:x="21786" fg:w="275"/><text x="68.7593%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="69.3306%" y="229" width="0.8642%" height="15" fill="rgb(245,10,13)" fg:x="22061" fg:w="275"/><text x="69.6236%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="70.1948%" y="229" width="0.8642%" height="15" fill="rgb(207,83,41)" fg:x="22336" fg:w="275"/><text x="70.4878%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="71.0591%" y="229" width="0.8642%" height="15" fill="rgb(209,53,40)" fg:x="22611" fg:w="275"/><text x="71.3521%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="71.9233%" y="229" width="0.8642%" height="15" fill="rgb(210,89,33)" fg:x="22886" fg:w="275"/><text x="72.2163%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="72.7876%" y="229" width="0.9177%" height="15" fill="rgb(226,190,53)" fg:x="23161" fg:w="292"/><text x="73.0805%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="73.7052%" y="229" width="0.9177%" height="15" fill="rgb(230,218,30)" fg:x="23453" fg:w="292"/><text x="73.9982%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="74.6229%" y="229" width="0.8642%" height="15" fill="rgb(209,189,32)" fg:x="23745" fg:w="275"/><text x="74.9158%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="75.4871%" y="229" width="0.9177%" height="15" fill="rgb(235,64,21)" fg:x="24020" fg:w="292"/><text x="75.7801%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="76.4048%" y="229" width="0.9177%" height="15" fill="rgb(241,121,18)" fg:x="24312" fg:w="292"/><text x="76.6977%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="77.3224%" y="229" width="0.8642%" height="15" fill="rgb(223,200,15)" fg:x="24604" fg:w="275"/><text x="77.6154%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="78.1867%" y="229" width="0.9177%" height="15" fill="rgb(251,191,6)" fg:x="24879" fg:w="292"/><text x="78.4796%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.97%)</title><rect x="79.1043%" y="229" width="0.9742%" height="15" fill="rgb(254,117,37)" fg:x="25171" fg:w="310"/><text x="79.3973%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="80.0786%" y="229" width="0.8642%" height="15" fill="rgb(231,116,49)" fg:x="25481" fg:w="275"/><text x="80.3715%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="80.9428%" y="229" width="0.8642%" height="15" fill="rgb(221,220,49)" fg:x="25756" fg:w="275"/><text x="81.2358%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="81.8070%" y="229" width="0.8642%" height="15" fill="rgb(249,47,6)" fg:x="26031" fg:w="275"/><text x="82.1000%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="82.6713%" y="229" width="0.8642%" height="15" fill="rgb(254,222,19)" fg:x="26306" fg:w="275"/><text x="82.9642%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="83.5355%" y="229" width="0.8642%" height="15" fill="rgb(247,25,30)" fg:x="26581" fg:w="275"/><text x="83.8285%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="84.3997%" y="229" width="0.9177%" height="15" fill="rgb(213,69,35)" fg:x="26856" fg:w="292"/><text x="84.6927%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="85.3174%" y="229" width="0.8642%" height="15" fill="rgb(232,104,4)" fg:x="27148" fg:w="275"/><text x="85.6104%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="86.1816%" y="229" width="0.8642%" height="15" fill="rgb(217,119,49)" fg:x="27423" fg:w="275"/><text x="86.4746%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.97%)</title><rect x="87.0459%" y="229" width="0.9742%" height="15" fill="rgb(212,35,23)" fg:x="27698" fg:w="310"/><text x="87.3389%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.86%)</title><rect x="88.0201%" y="229" width="0.8642%" height="15" fill="rgb(244,167,3)" fg:x="28008" fg:w="275"/><text x="88.3131%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.92%)</title><rect x="88.8843%" y="229" width="0.9177%" height="15" fill="rgb(239,69,46)" fg:x="28283" fg:w="292"/><text x="89.1773%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,655 instructions, 49.20%)</title><rect x="45.2231%" y="245" width="49.1986%" height="15" fill="rgb(232,55,52)" fg:x="14390" fg:w="15655"/><text x="45.5161%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.03%)</title><rect x="94.4217%" y="213" width="0.0251%" height="15" fill="rgb(243,53,13)" fg:x="30045" fg:w="8"/><text x="94.7147%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="94.4563%" y="133" width="0.0126%" height="15" fill="rgb(234,50,13)" fg:x="30056" fg:w="4"/><text x="94.7493%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="94.4783%" y="133" width="0.0126%" height="15" fill="rgb(251,107,27)" fg:x="30063" fg:w="4"/><text x="94.7713%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="94.4909%" y="133" width="0.0157%" height="15" fill="rgb(207,57,12)" fg:x="30067" fg:w="5"/><text x="94.7839%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.18%)</title><rect x="94.5160%" y="133" width="0.1760%" height="15" fill="rgb(206,227,31)" fg:x="30075" fg:w="56"/><text x="94.8090%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="94.6920%" y="133" width="0.0189%" height="15" fill="rgb(242,13,47)" fg:x="30131" fg:w="6"/><text x="94.9850%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.49%)</title><rect x="94.4469%" y="149" width="0.4934%" height="15" fill="rgb(249,198,15)" fg:x="30053" fg:w="157"/><text x="94.7399%" y="159.50"></text></g><g><title>__rdl_dealloc (159 instructions, 0.50%)</title><rect x="94.4469%" y="165" width="0.4997%" height="15" fill="rgb(208,148,38)" fg:x="30053" fg:w="159"/><text x="94.7399%" y="175.50"></text></g><g><title>__rust_dealloc (164 instructions, 0.52%)</title><rect x="94.4469%" y="181" width="0.5154%" height="15" fill="rgb(225,135,40)" fg:x="30053" fg:w="164"/><text x="94.7399%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.62%)</title><rect x="94.4469%" y="197" width="0.6160%" height="15" fill="rgb(206,106,18)" fg:x="30053" fg:w="196"/><text x="94.7399%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.42%)</title><rect x="95.0629%" y="181" width="0.4243%" height="15" fill="rgb(220,0,30)" fg:x="30249" fg:w="135"/><text x="95.3558%" y="191.50"></text></g><g><title>memset (139 instructions, 0.44%)</title><rect x="95.0629%" y="197" width="0.4368%" height="15" fill="rgb(249,190,53)" fg:x="30249" fg:w="139"/><text x="95.3558%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (410 instructions, 1.29%)</title><rect x="94.4469%" y="213" width="1.2885%" height="15" fill="rgb(228,226,0)" fg:x="30053" fg:w="410"/><text x="94.7399%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (503 instructions, 1.58%)</title><rect x="94.4217%" y="229" width="1.5808%" height="15" fill="rgb(250,92,52)" fg:x="30045" fg:w="503"/><text x="94.7147%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.10%)</title><rect x="96.0119%" y="197" width="0.1037%" height="15" fill="rgb(239,44,23)" fg:x="30551" fg:w="33"/><text x="96.3049%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.28%)</title><rect x="96.0119%" y="213" width="0.2766%" height="15" fill="rgb(221,148,8)" fg:x="30551" fg:w="88"/><text x="96.3049%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="96.2885%" y="101" width="0.0283%" height="15" fill="rgb(220,9,36)" fg:x="30639" fg:w="9"/><text x="96.5815%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="96.3168%" y="101" width="0.0283%" height="15" fill="rgb(249,210,39)" fg:x="30648" fg:w="9"/><text x="96.6098%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="96.3545%" y="101" width="0.0157%" height="15" fill="rgb(234,122,4)" fg:x="30660" fg:w="5"/><text x="96.6475%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="96.2885%" y="117" width="0.3771%" height="15" fill="rgb(254,206,3)" fg:x="30639" fg:w="120"/><text x="96.5815%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="96.2885%" y="133" width="0.4085%" height="15" fill="rgb(247,5,53)" fg:x="30639" fg:w="130"/><text x="96.5815%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="96.2885%" y="149" width="0.4180%" height="15" fill="rgb(229,123,38)" fg:x="30639" fg:w="133"/><text x="96.5815%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="96.2885%" y="165" width="0.4368%" height="15" fill="rgb(206,186,1)" fg:x="30639" fg:w="139"/><text x="96.5815%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 instructions, 0.54%)</title><rect x="96.2885%" y="181" width="0.5374%" height="15" fill="rgb(238,140,22)" fg:x="30639" fg:w="171"/><text x="96.5815%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.75%)</title><rect x="96.2885%" y="197" width="0.7480%" height="15" fill="rgb(235,227,16)" fg:x="30639" fg:w="238"/><text x="96.5815%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.03%)</title><rect x="97.0365%" y="197" width="0.0314%" height="15" fill="rgb(206,14,49)" fg:x="30877" fg:w="10"/><text x="97.3294%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.0679%" y="181" width="0.0346%" height="15" fill="rgb(247,90,36)" fg:x="30887" fg:w="11"/><text x="97.3609%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.1150%" y="181" width="0.0346%" height="15" fill="rgb(206,6,18)" fg:x="30902" fg:w="11"/><text x="97.4080%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.09%)</title><rect x="97.0679%" y="197" width="0.0943%" height="15" fill="rgb(206,211,48)" fg:x="30887" fg:w="30"/><text x="97.3609%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (480 instructions, 1.51%)</title><rect x="96.2885%" y="213" width="1.5085%" height="15" fill="rgb(224,129,31)" fg:x="30639" fg:w="480"/><text x="96.5815%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.02%)</title><rect x="97.7970%" y="213" width="0.0189%" height="15" fill="rgb(253,103,34)" fg:x="31119" fg:w="6"/><text x="98.0900%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.10%)</title><rect x="97.8158%" y="197" width="0.0974%" height="15" fill="rgb(210,177,10)" fg:x="31125" fg:w="31"/><text x="98.1088%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.27%)</title><rect x="97.8158%" y="213" width="0.2703%" height="15" fill="rgb(244,167,38)" fg:x="31125" fg:w="86"/><text x="98.1088%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.02%)</title><rect x="98.0861%" y="213" width="0.0189%" height="15" fill="rgb(208,182,31)" fg:x="31211" fg:w="6"/><text x="98.3791%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.05%)</title><rect x="98.1050%" y="213" width="0.0471%" height="15" fill="rgb(221,162,32)" fg:x="31217" fg:w="15"/><text x="98.3979%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (760 instructions, 2.39%)</title><rect x="96.0119%" y="229" width="2.3884%" height="15" fill="rgb(205,117,28)" fg:x="30551" fg:w="760"/><text x="96.3049%" y="239.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="98.4004%" y="229" width="0.0440%" height="15" fill="rgb(215,146,19)" fg:x="31311" fg:w="14"/><text x="98.6933%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.4538%" y="181" width="0.0126%" height="15" fill="rgb(219,178,48)" fg:x="31328" fg:w="4"/><text x="98.7468%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.4758%" y="181" width="0.0126%" height="15" fill="rgb(227,49,25)" fg:x="31335" fg:w="4"/><text x="98.7688%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.4884%" y="181" width="0.0189%" height="15" fill="rgb(252,188,18)" fg:x="31339" fg:w="6"/><text x="98.7813%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.21%)</title><rect x="98.4444%" y="197" width="0.2137%" height="15" fill="rgb(246,93,15)" fg:x="31325" fg:w="68"/><text x="98.7373%" y="207.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="98.4444%" y="213" width="0.2200%" height="15" fill="rgb(224,148,7)" fg:x="31325" fg:w="70"/><text x="98.7373%" y="223.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="98.4444%" y="229" width="0.2357%" height="15" fill="rgb(226,96,3)" fg:x="31325" fg:w="75"/><text x="98.7373%" y="239.50"></text></g><g><title>candid::utils::write_args (1,431 instructions, 4.50%)</title><rect x="94.4217%" y="245" width="4.4972%" height="15" fill="rgb(223,174,49)" fg:x="30045" fg:w="1431"/><text x="94.7147%" y="255.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.9283%" y="197" width="0.0126%" height="15" fill="rgb(207,164,8)" fg:x="31479" fg:w="4"/><text x="99.2213%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.9503%" y="197" width="0.0126%" height="15" fill="rgb(230,55,47)" fg:x="31486" fg:w="4"/><text x="99.2433%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.9629%" y="197" width="0.0189%" height="15" fill="rgb(238,100,46)" fg:x="31490" fg:w="6"/><text x="99.2559%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="98.9818%" y="197" width="0.0503%" height="15" fill="rgb(234,48,54)" fg:x="31496" fg:w="16"/><text x="99.2747%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="98.9189%" y="213" width="0.3080%" height="15" fill="rgb(207,127,1)" fg:x="31476" fg:w="98"/><text x="99.2119%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.31%)</title><rect x="98.9189%" y="229" width="0.3143%" height="15" fill="rgb(215,100,49)" fg:x="31476" fg:w="100"/><text x="99.2119%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.2583%" y="197" width="0.0126%" height="15" fill="rgb(247,44,53)" fg:x="31584" fg:w="4"/><text x="99.5513%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="99.2803%" y="197" width="0.0126%" height="15" fill="rgb(213,145,52)" fg:x="31591" fg:w="4"/><text x="99.5733%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.2929%" y="197" width="0.0157%" height="15" fill="rgb(211,189,46)" fg:x="31595" fg:w="5"/><text x="99.5859%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.3180%" y="197" width="0.0189%" height="15" fill="rgb(244,152,9)" fg:x="31603" fg:w="6"/><text x="99.6110%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="99.3369%" y="197" width="0.0503%" height="15" fill="rgb(248,42,39)" fg:x="31609" fg:w="16"/><text x="99.6299%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (150 instructions, 0.47%)</title><rect x="99.2489%" y="213" width="0.4714%" height="15" fill="rgb(247,93,39)" fg:x="31581" fg:w="150"/><text x="99.5419%" y="223.50"></text></g><g><title>__rdl_dealloc (152 instructions, 0.48%)</title><rect x="99.2489%" y="229" width="0.4777%" height="15" fill="rgb(243,131,4)" fg:x="31581" fg:w="152"/><text x="99.5419%" y="239.50"></text></g><g><title>__rust_dealloc (262 instructions, 0.82%)</title><rect x="98.9189%" y="245" width="0.8234%" height="15" fill="rgb(236,97,25)" fg:x="31476" fg:w="262"/><text x="99.2119%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (31,809 instructions, 99.97%)</title><rect x="0.0251%" y="261" width="99.9654%" height="15" fill="rgb(210,53,9)" fg:x="8" fg:w="31809"/><text x="0.3181%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (31,820 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(222,160,17)" fg:x="0" fg:w="31820"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_get (31,820 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(207,42,46)" fg:x="0" fg:w="31820"/><text x="0.2930%" y="287.50">canister_update batch_get</text></g></svg></svg>