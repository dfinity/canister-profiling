<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">imrc_hashmap_rs.batch_get</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="31519"><g><title>ic_cdk::setup (8 instructions, 0.03%)</title><rect x="0.0000%" y="261" width="0.0254%" height="15" fill="rgb(247,105,40)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.0254%" y="181" width="0.0286%" height="15" fill="rgb(242,195,44)" fg:x="8" fg:w="9"/><text x="0.3184%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.0539%" y="181" width="0.0286%" height="15" fill="rgb(239,125,15)" fg:x="17" fg:w="9"/><text x="0.3469%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::left_bits (8 instructions, 0.03%)</title><rect x="0.0825%" y="181" width="0.0254%" height="15" fill="rgb(216,89,45)" fg:x="26" fg:w="8"/><text x="0.3755%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::least_bit (5 instructions, 0.02%)</title><rect x="0.1079%" y="181" width="0.0159%" height="15" fill="rgb(228,205,4)" fg:x="34" fg:w="5"/><text x="0.4008%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.1237%" y="181" width="0.0159%" height="15" fill="rgb(209,203,5)" fg:x="39" fg:w="5"/><text x="0.4167%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.1491%" y="181" width="0.0317%" height="15" fill="rgb(206,205,49)" fg:x="47" fg:w="10"/><text x="0.4421%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (168 instructions, 0.53%)</title><rect x="0.0254%" y="197" width="0.5330%" height="15" fill="rgb(211,150,29)" fg:x="8" fg:w="168"/><text x="0.3184%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.56%)</title><rect x="0.0254%" y="213" width="0.5647%" height="15" fill="rgb(251,16,54)" fg:x="8" fg:w="178"/><text x="0.3184%" y="223.50"></text></g><g><title>__rdl_alloc (181 instructions, 0.57%)</title><rect x="0.0254%" y="229" width="0.5743%" height="15" fill="rgb(206,44,1)" fg:x="8" fg:w="181"/><text x="0.3184%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6187%" y="181" width="0.0286%" height="15" fill="rgb(239,18,5)" fg:x="195" fg:w="9"/><text x="0.9116%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6472%" y="181" width="0.0286%" height="15" fill="rgb(218,38,47)" fg:x="204" fg:w="9"/><text x="0.9402%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="0.6758%" y="181" width="0.0286%" height="15" fill="rgb(221,98,26)" fg:x="213" fg:w="9"/><text x="0.9688%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="0.7043%" y="181" width="0.0444%" height="15" fill="rgb(237,37,21)" fg:x="222" fg:w="14"/><text x="0.9973%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.39%)</title><rect x="0.6187%" y="197" width="0.3934%" height="15" fill="rgb(229,213,27)" fg:x="195" fg:w="124"/><text x="0.9116%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.43%)</title><rect x="0.6187%" y="213" width="0.4251%" height="15" fill="rgb(239,167,49)" fg:x="195" fg:w="134"/><text x="0.9116%" y="223.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.43%)</title><rect x="0.6187%" y="229" width="0.4347%" height="15" fill="rgb(241,183,38)" fg:x="195" fg:w="137"/><text x="0.9116%" y="239.50"></text></g><g><title>__rust_alloc (330 instructions, 1.05%)</title><rect x="0.0254%" y="245" width="1.0470%" height="15" fill="rgb(229,122,51)" fg:x="8" fg:w="330"/><text x="0.3184%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.02%)</title><rect x="1.0724%" y="245" width="0.0190%" height="15" fill="rgb(232,70,11)" fg:x="338" fg:w="6"/><text x="1.3653%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="1.0914%" y="149" width="0.0286%" height="15" fill="rgb(234,191,26)" fg:x="344" fg:w="9"/><text x="1.3844%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="1.1200%" y="149" width="0.0286%" height="15" fill="rgb(208,216,20)" fg:x="353" fg:w="9"/><text x="1.4129%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.1580%" y="149" width="0.0159%" height="15" fill="rgb(251,211,22)" fg:x="365" fg:w="5"/><text x="1.4510%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="1.0914%" y="165" width="0.3807%" height="15" fill="rgb(249,147,32)" fg:x="344" fg:w="120"/><text x="1.3844%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="1.0914%" y="181" width="0.4124%" height="15" fill="rgb(214,19,17)" fg:x="344" fg:w="130"/><text x="1.3844%" y="191.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="1.0914%" y="197" width="0.4220%" height="15" fill="rgb(206,110,19)" fg:x="344" fg:w="133"/><text x="1.3844%" y="207.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="1.0914%" y="213" width="0.4410%" height="15" fill="rgb(217,20,52)" fg:x="344" fg:w="139"/><text x="1.3844%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (197 instructions, 0.63%)</title><rect x="1.0914%" y="229" width="0.6250%" height="15" fill="rgb(253,214,18)" fg:x="344" fg:w="197"/><text x="1.3844%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.20%)</title><rect x="1.7196%" y="181" width="0.1999%" height="15" fill="rgb(237,221,41)" fg:x="542" fg:w="63"/><text x="2.0126%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="1.9195%" y="117" width="0.0190%" height="15" fill="rgb(231,10,38)" fg:x="605" fg:w="6"/><text x="2.2124%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="1.9195%" y="133" width="0.0317%" height="15" fill="rgb(238,148,3)" fg:x="605" fg:w="10"/><text x="2.2124%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.37%)</title><rect x="1.9195%" y="149" width="1.3738%" height="15" fill="rgb(211,21,8)" fg:x="605" fg:w="433"/><text x="2.2124%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.24%)</title><rect x="3.2933%" y="149" width="0.2411%" height="15" fill="rgb(246,108,37)" fg:x="1038" fg:w="76"/><text x="3.5862%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.5344%" y="149" width="0.1650%" height="15" fill="rgb(232,103,29)" fg:x="1114" fg:w="52"/><text x="3.8273%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.6994%" y="149" width="0.1650%" height="15" fill="rgb(235,88,35)" fg:x="1166" fg:w="52"/><text x="3.9923%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="3.8643%" y="149" width="0.1650%" height="15" fill="rgb(254,59,19)" fg:x="1218" fg:w="52"/><text x="4.1573%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.16%)</title><rect x="4.0293%" y="149" width="0.1650%" height="15" fill="rgb(231,169,35)" fg:x="1270" fg:w="52"/><text x="4.3223%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (859 instructions, 2.73%)</title><rect x="1.9195%" y="181" width="2.7253%" height="15" fill="rgb(220,97,41)" fg:x="605" fg:w="859"/><text x="2.2124%" y="191.50">b..</text></g><g><title> 4]&gt;::read_options (859 instructions, 2.73%)</title><rect x="1.9195%" y="165" width="2.7253%" height="15" fill="rgb(251,175,49)" fg:x="605" fg:w="859"/><text x="2.2124%" y="175.50"> ..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.20%)</title><rect x="4.6448%" y="181" width="0.1999%" height="15" fill="rgb(223,155,18)" fg:x="1464" fg:w="63"/><text x="4.9378%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.24%)</title><rect x="4.8447%" y="165" width="0.2443%" height="15" fill="rgb(249,211,2)" fg:x="1527" fg:w="77"/><text x="5.1377%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.33%)</title><rect x="4.8447%" y="181" width="0.3300%" height="15" fill="rgb(209,215,45)" fg:x="1527" fg:w="104"/><text x="5.1377%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="5.1747%" y="133" width="0.0190%" height="15" fill="rgb(215,212,40)" fg:x="1631" fg:w="6"/><text x="5.4676%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="5.1747%" y="149" width="0.0317%" height="15" fill="rgb(207,24,38)" fg:x="1631" fg:w="10"/><text x="5.4676%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.37%)</title><rect x="5.1747%" y="165" width="1.3738%" height="15" fill="rgb(251,205,16)" fg:x="1631" fg:w="433"/><text x="5.4676%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.06%)</title><rect x="6.5484%" y="149" width="0.0571%" height="15" fill="rgb(253,16,31)" fg:x="2064" fg:w="18"/><text x="6.8414%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.07%)</title><rect x="6.5484%" y="165" width="0.0698%" height="15" fill="rgb(250,50,49)" fg:x="2064" fg:w="22"/><text x="6.8414%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="6.6182%" y="69" width="0.0286%" height="15" fill="rgb(248,65,48)" fg:x="2086" fg:w="9"/><text x="6.9112%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="6.6468%" y="69" width="0.0286%" height="15" fill="rgb(210,85,53)" fg:x="2095" fg:w="9"/><text x="6.9398%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="6.6849%" y="69" width="0.0159%" height="15" fill="rgb(234,6,11)" fg:x="2107" fg:w="5"/><text x="6.9778%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="6.6182%" y="85" width="0.3807%" height="15" fill="rgb(216,57,19)" fg:x="2086" fg:w="120"/><text x="6.9112%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="6.6182%" y="101" width="0.4124%" height="15" fill="rgb(208,90,0)" fg:x="2086" fg:w="130"/><text x="6.9112%" y="111.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="6.6182%" y="117" width="0.4220%" height="15" fill="rgb(245,199,2)" fg:x="2086" fg:w="133"/><text x="6.9112%" y="127.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="6.6182%" y="133" width="0.4410%" height="15" fill="rgb(244,201,3)" fg:x="2086" fg:w="139"/><text x="6.9112%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.19%)</title><rect x="7.0592%" y="85" width="0.1904%" height="15" fill="rgb(212,211,32)" fg:x="2225" fg:w="60"/><text x="7.3522%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.20%)</title><rect x="7.0592%" y="101" width="0.2031%" height="15" fill="rgb(224,229,35)" fg:x="2225" fg:w="64"/><text x="7.3522%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.28%)</title><rect x="7.0592%" y="117" width="0.2824%" height="15" fill="rgb(228,92,33)" fg:x="2225" fg:w="89"/><text x="7.3522%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="7.3416%" y="69" width="0.0317%" height="15" fill="rgb(247,214,15)" fg:x="2314" fg:w="10"/><text x="7.6346%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.10%)</title><rect x="7.3733%" y="37" width="0.0952%" height="15" fill="rgb(252,59,46)" fg:x="2324" fg:w="30"/><text x="7.6663%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.11%)</title><rect x="7.3733%" y="53" width="0.1079%" height="15" fill="rgb(214,2,1)" fg:x="2324" fg:w="34"/><text x="7.6663%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.19%)</title><rect x="7.3733%" y="69" width="0.1872%" height="15" fill="rgb(228,41,3)" fg:x="2324" fg:w="59"/><text x="7.6663%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.38%)</title><rect x="7.3416%" y="85" width="0.3776%" height="15" fill="rgb(235,141,17)" fg:x="2314" fg:w="119"/><text x="7.6346%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.55%)</title><rect x="7.3416%" y="101" width="0.5520%" height="15" fill="rgb(226,61,19)" fg:x="2314" fg:w="174"/><text x="7.6346%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.57%)</title><rect x="7.3416%" y="117" width="0.5679%" height="15" fill="rgb(219,189,21)" fg:x="2314" fg:w="179"/><text x="7.6346%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.20%)</title><rect x="7.0592%" y="133" width="1.2024%" height="15" fill="rgb(224,211,43)" fg:x="2225" fg:w="379"/><text x="7.3522%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (661 instructions, 2.10%)</title><rect x="6.6182%" y="149" width="2.0971%" height="15" fill="rgb(206,146,24)" fg:x="2086" fg:w="661"/><text x="6.9112%" y="159.50">a..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.24%)</title><rect x="8.7154%" y="149" width="0.2411%" height="15" fill="rgb(216,107,45)" fg:x="2747" fg:w="76"/><text x="9.0083%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="8.9660%" y="101" width="0.0127%" height="15" fill="rgb(211,64,22)" fg:x="2826" fg:w="4"/><text x="9.2590%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="8.9882%" y="101" width="0.0127%" height="15" fill="rgb(212,49,25)" fg:x="2833" fg:w="4"/><text x="9.2812%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="9.0009%" y="101" width="0.0190%" height="15" fill="rgb(238,227,21)" fg:x="2837" fg:w="6"/><text x="9.2939%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.22%)</title><rect x="8.9565%" y="117" width="0.2157%" height="15" fill="rgb(216,136,41)" fg:x="2823" fg:w="68"/><text x="9.2495%" y="127.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="8.9565%" y="133" width="0.2221%" height="15" fill="rgb(215,68,35)" fg:x="2823" fg:w="70"/><text x="9.2495%" y="143.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="8.9565%" y="149" width="0.2380%" height="15" fill="rgb(234,111,19)" fg:x="2823" fg:w="75"/><text x="9.2495%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (883 instructions, 2.80%)</title><rect x="6.6182%" y="165" width="2.8015%" height="15" fill="rgb(245,12,18)" fg:x="2086" fg:w="883"/><text x="6.9112%" y="175.50">bi..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.08%)</title><rect x="9.4197%" y="165" width="0.0793%" height="15" fill="rgb(233,118,24)" fg:x="2969" fg:w="25"/><text x="9.7127%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,511 instructions, 4.79%)</title><rect x="5.1747%" y="181" width="4.7939%" height="15" fill="rgb(222,87,5)" fg:x="1631" fg:w="1511"/><text x="5.4676%" y="191.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.18%)</title><rect x="9.9686%" y="181" width="0.1840%" height="15" fill="rgb(206,60,38)" fg:x="3142" fg:w="58"/><text x="10.2616%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.24%)</title><rect x="10.1526%" y="165" width="0.2443%" height="15" fill="rgb(240,12,34)" fg:x="3200" fg:w="77"/><text x="10.4456%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.33%)</title><rect x="10.1526%" y="181" width="0.3300%" height="15" fill="rgb(242,198,24)" fg:x="3200" fg:w="104"/><text x="10.4456%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="10.4826%" y="133" width="0.0190%" height="15" fill="rgb(250,49,9)" fg:x="3304" fg:w="6"/><text x="10.7755%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="10.4826%" y="149" width="0.0317%" height="15" fill="rgb(226,98,21)" fg:x="3304" fg:w="10"/><text x="10.7755%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.37%)</title><rect x="10.4826%" y="165" width="1.3738%" height="15" fill="rgb(218,85,28)" fg:x="3304" fg:w="433"/><text x="10.7755%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.06%)</title><rect x="11.8563%" y="149" width="0.0571%" height="15" fill="rgb(206,3,46)" fg:x="3737" fg:w="18"/><text x="12.1493%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.07%)</title><rect x="11.8563%" y="165" width="0.0698%" height="15" fill="rgb(222,46,51)" fg:x="3737" fg:w="22"/><text x="12.1493%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="11.9261%" y="69" width="0.0286%" height="15" fill="rgb(250,167,40)" fg:x="3759" fg:w="9"/><text x="12.2191%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="11.9547%" y="69" width="0.0286%" height="15" fill="rgb(226,152,15)" fg:x="3768" fg:w="9"/><text x="12.2477%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="11.9928%" y="69" width="0.0159%" height="15" fill="rgb(215,133,11)" fg:x="3780" fg:w="5"/><text x="12.2857%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="11.9261%" y="85" width="0.3807%" height="15" fill="rgb(232,160,13)" fg:x="3759" fg:w="120"/><text x="12.2191%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="11.9261%" y="101" width="0.4124%" height="15" fill="rgb(227,158,6)" fg:x="3759" fg:w="130"/><text x="12.2191%" y="111.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="11.9261%" y="117" width="0.4220%" height="15" fill="rgb(208,84,4)" fg:x="3759" fg:w="133"/><text x="12.2191%" y="127.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="11.9261%" y="133" width="0.4410%" height="15" fill="rgb(233,46,21)" fg:x="3759" fg:w="139"/><text x="12.2191%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.19%)</title><rect x="12.3671%" y="85" width="0.1904%" height="15" fill="rgb(222,41,22)" fg:x="3898" fg:w="60"/><text x="12.6601%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.20%)</title><rect x="12.3671%" y="101" width="0.2031%" height="15" fill="rgb(238,61,31)" fg:x="3898" fg:w="64"/><text x="12.6601%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.28%)</title><rect x="12.3671%" y="117" width="0.2824%" height="15" fill="rgb(250,28,4)" fg:x="3898" fg:w="89"/><text x="12.6601%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="12.6495%" y="69" width="0.0317%" height="15" fill="rgb(223,160,10)" fg:x="3987" fg:w="10"/><text x="12.9425%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.10%)</title><rect x="12.6812%" y="37" width="0.0952%" height="15" fill="rgb(233,31,6)" fg:x="3997" fg:w="30"/><text x="12.9742%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.11%)</title><rect x="12.6812%" y="53" width="0.1079%" height="15" fill="rgb(253,0,15)" fg:x="3997" fg:w="34"/><text x="12.9742%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.19%)</title><rect x="12.6812%" y="69" width="0.1872%" height="15" fill="rgb(211,174,10)" fg:x="3997" fg:w="59"/><text x="12.9742%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.38%)</title><rect x="12.6495%" y="85" width="0.3776%" height="15" fill="rgb(229,183,9)" fg:x="3987" fg:w="119"/><text x="12.9425%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.55%)</title><rect x="12.6495%" y="101" width="0.5520%" height="15" fill="rgb(230,186,17)" fg:x="3987" fg:w="174"/><text x="12.9425%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.57%)</title><rect x="12.6495%" y="117" width="0.5679%" height="15" fill="rgb(230,146,21)" fg:x="3987" fg:w="179"/><text x="12.9425%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.20%)</title><rect x="12.3671%" y="133" width="1.2024%" height="15" fill="rgb(236,12,33)" fg:x="3898" fg:w="379"/><text x="12.6601%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (661 instructions, 2.10%)</title><rect x="11.9261%" y="149" width="2.0971%" height="15" fill="rgb(233,187,13)" fg:x="3759" fg:w="661"/><text x="12.2191%" y="159.50">a..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.24%)</title><rect x="14.0233%" y="149" width="0.2411%" height="15" fill="rgb(216,137,45)" fg:x="4420" fg:w="76"/><text x="14.3163%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="14.2739%" y="101" width="0.0127%" height="15" fill="rgb(215,169,40)" fg:x="4499" fg:w="4"/><text x="14.5669%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="14.2961%" y="101" width="0.0127%" height="15" fill="rgb(233,164,7)" fg:x="4506" fg:w="4"/><text x="14.5891%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="14.3088%" y="101" width="0.0190%" height="15" fill="rgb(212,47,47)" fg:x="4510" fg:w="6"/><text x="14.6018%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.22%)</title><rect x="14.2644%" y="117" width="0.2157%" height="15" fill="rgb(253,129,35)" fg:x="4496" fg:w="68"/><text x="14.5574%" y="127.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="14.2644%" y="133" width="0.2221%" height="15" fill="rgb(209,76,2)" fg:x="4496" fg:w="70"/><text x="14.5574%" y="143.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="14.2644%" y="149" width="0.2380%" height="15" fill="rgb(238,219,27)" fg:x="4496" fg:w="75"/><text x="14.5574%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (883 instructions, 2.80%)</title><rect x="11.9261%" y="165" width="2.8015%" height="15" fill="rgb(248,135,32)" fg:x="3759" fg:w="883"/><text x="12.2191%" y="175.50">bi..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.20%)</title><rect x="14.7276%" y="133" width="0.1999%" height="15" fill="rgb(209,191,25)" fg:x="4642" fg:w="63"/><text x="15.0206%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.35%)</title><rect x="14.9275%" y="117" width="0.3490%" height="15" fill="rgb(223,37,12)" fg:x="4705" fg:w="110"/><text x="15.2205%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.43%)</title><rect x="14.9275%" y="133" width="0.4347%" height="15" fill="rgb(233,18,2)" fg:x="4705" fg:w="137"/><text x="15.2205%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.18%)</title><rect x="15.3622%" y="133" width="0.1840%" height="15" fill="rgb(205,74,22)" fg:x="4842" fg:w="58"/><text x="15.6551%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (314 instructions, 1.00%)</title><rect x="14.7276%" y="149" width="0.9962%" height="15" fill="rgb(246,98,52)" fg:x="4642" fg:w="314"/><text x="15.0206%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="15.7238%" y="85" width="0.0286%" height="15" fill="rgb(223,61,23)" fg:x="4956" fg:w="9"/><text x="16.0168%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="15.7524%" y="85" width="0.0286%" height="15" fill="rgb(244,36,1)" fg:x="4965" fg:w="9"/><text x="16.0454%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="15.7905%" y="85" width="0.0159%" height="15" fill="rgb(220,52,11)" fg:x="4977" fg:w="5"/><text x="16.0834%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="15.7238%" y="101" width="0.3807%" height="15" fill="rgb(209,26,9)" fg:x="4956" fg:w="120"/><text x="16.0168%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="15.7238%" y="117" width="0.4124%" height="15" fill="rgb(254,48,45)" fg:x="4956" fg:w="130"/><text x="16.0168%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="15.7238%" y="133" width="0.4220%" height="15" fill="rgb(252,21,12)" fg:x="4956" fg:w="133"/><text x="16.0168%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="15.7238%" y="149" width="0.4410%" height="15" fill="rgb(231,171,34)" fg:x="4956" fg:w="139"/><text x="16.0168%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (538 instructions, 1.71%)</title><rect x="14.7276%" y="165" width="1.7069%" height="15" fill="rgb(212,181,2)" fg:x="4642" fg:w="538"/><text x="15.0206%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,024 instructions, 6.42%)</title><rect x="10.4826%" y="181" width="6.4215%" height="15" fill="rgb(216,178,45)" fg:x="3304" fg:w="2024"/><text x="10.7755%" y="191.50">binread..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.18%)</title><rect x="16.9041%" y="181" width="0.1840%" height="15" fill="rgb(206,75,31)" fg:x="5328" fg:w="58"/><text x="17.1971%" y="191.50"></text></g><g><title>binread::BinRead::read (5,062 instructions, 16.06%)</title><rect x="1.7164%" y="197" width="16.0602%" height="15" fill="rgb(254,132,7)" fg:x="541" fg:w="5062"/><text x="2.0094%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="17.7766%" y="181" width="0.0444%" height="15" fill="rgb(247,189,1)" fg:x="5603" fg:w="14"/><text x="18.0695%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="17.8210%" y="165" width="0.0444%" height="15" fill="rgb(253,110,1)" fg:x="5617" fg:w="14"/><text x="18.1140%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.08%)</title><rect x="17.8654%" y="165" width="0.0793%" height="15" fill="rgb(237,198,3)" fg:x="5631" fg:w="25"/><text x="18.1584%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.06%)</title><rect x="17.9447%" y="165" width="0.0603%" height="15" fill="rgb(215,20,35)" fg:x="5656" fg:w="19"/><text x="18.2377%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (210 instructions, 0.67%)</title><rect x="17.8210%" y="181" width="0.6663%" height="15" fill="rgb(216,198,4)" fg:x="5617" fg:w="210"/><text x="18.1140%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="18.4873%" y="101" width="0.0286%" height="15" fill="rgb(207,193,49)" fg:x="5827" fg:w="9"/><text x="18.7802%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="18.5158%" y="101" width="0.0286%" height="15" fill="rgb(209,77,23)" fg:x="5836" fg:w="9"/><text x="18.8088%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="18.5539%" y="101" width="0.0159%" height="15" fill="rgb(231,227,17)" fg:x="5848" fg:w="5"/><text x="18.8469%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="18.4873%" y="117" width="0.3807%" height="15" fill="rgb(221,154,34)" fg:x="5827" fg:w="120"/><text x="18.7802%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="18.4873%" y="133" width="0.4124%" height="15" fill="rgb(213,153,29)" fg:x="5827" fg:w="130"/><text x="18.7802%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="18.4873%" y="149" width="0.4220%" height="15" fill="rgb(252,116,42)" fg:x="5827" fg:w="133"/><text x="18.7802%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="18.4873%" y="165" width="0.4410%" height="15" fill="rgb(207,53,25)" fg:x="5827" fg:w="139"/><text x="18.7802%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (220 instructions, 0.70%)</title><rect x="18.4873%" y="181" width="0.6980%" height="15" fill="rgb(221,155,54)" fg:x="5827" fg:w="220"/><text x="18.7802%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="19.1853%" y="85" width="0.0286%" height="15" fill="rgb(216,199,12)" fg:x="6047" fg:w="9"/><text x="19.4782%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="19.2138%" y="85" width="0.0286%" height="15" fill="rgb(214,124,26)" fg:x="6056" fg:w="9"/><text x="19.5068%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="19.2519%" y="85" width="0.0159%" height="15" fill="rgb(230,228,26)" fg:x="6068" fg:w="5"/><text x="19.5448%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="19.1853%" y="101" width="0.3807%" height="15" fill="rgb(241,90,16)" fg:x="6047" fg:w="120"/><text x="19.4782%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="19.1853%" y="117" width="0.4124%" height="15" fill="rgb(234,55,52)" fg:x="6047" fg:w="130"/><text x="19.4782%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="19.1853%" y="133" width="0.4220%" height="15" fill="rgb(222,128,19)" fg:x="6047" fg:w="133"/><text x="19.4782%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="19.1853%" y="149" width="0.4410%" height="15" fill="rgb(233,223,22)" fg:x="6047" fg:w="139"/><text x="19.4782%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 instructions, 0.54%)</title><rect x="19.1853%" y="165" width="0.5425%" height="15" fill="rgb(206,164,19)" fg:x="6047" fg:w="171"/><text x="19.4782%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (241 instructions, 0.76%)</title><rect x="19.1853%" y="181" width="0.7646%" height="15" fill="rgb(225,117,31)" fg:x="6047" fg:w="241"/><text x="19.4782%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (912 instructions, 2.89%)</title><rect x="17.7766%" y="197" width="2.8935%" height="15" fill="rgb(228,181,38)" fg:x="5603" fg:w="912"/><text x="18.0695%" y="207.50">ca..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="20.6701%" y="117" width="0.0286%" height="15" fill="rgb(209,218,16)" fg:x="6515" fg:w="9"/><text x="20.9630%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="20.6986%" y="117" width="0.0286%" height="15" fill="rgb(239,180,19)" fg:x="6524" fg:w="9"/><text x="20.9916%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="20.7367%" y="117" width="0.0159%" height="15" fill="rgb(218,45,45)" fg:x="6536" fg:w="5"/><text x="21.0297%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="20.6701%" y="133" width="0.3807%" height="15" fill="rgb(234,25,28)" fg:x="6515" fg:w="120"/><text x="20.9630%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="20.6701%" y="149" width="0.4124%" height="15" fill="rgb(235,61,52)" fg:x="6515" fg:w="130"/><text x="20.9630%" y="159.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="20.6701%" y="165" width="0.4220%" height="15" fill="rgb(208,64,4)" fg:x="6515" fg:w="133"/><text x="20.9630%" y="175.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="20.6701%" y="181" width="0.4410%" height="15" fill="rgb(205,127,17)" fg:x="6515" fg:w="139"/><text x="20.9630%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="21.1206%" y="133" width="0.0127%" height="15" fill="rgb(210,82,52)" fg:x="6657" fg:w="4"/><text x="21.4136%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="21.1428%" y="133" width="0.0127%" height="15" fill="rgb(221,81,48)" fg:x="6664" fg:w="4"/><text x="21.4358%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="21.1555%" y="133" width="0.0190%" height="15" fill="rgb(247,55,39)" fg:x="6668" fg:w="6"/><text x="21.4485%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="21.1745%" y="133" width="0.0508%" height="15" fill="rgb(250,129,17)" fg:x="6674" fg:w="16"/><text x="21.4675%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="21.1111%" y="149" width="0.3109%" height="15" fill="rgb(220,126,16)" fg:x="6654" fg:w="98"/><text x="21.4040%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.32%)</title><rect x="21.1111%" y="165" width="0.3173%" height="15" fill="rgb(226,115,40)" fg:x="6654" fg:w="100"/><text x="21.4040%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="21.1111%" y="181" width="0.3331%" height="15" fill="rgb(232,62,38)" fg:x="6654" fg:w="105"/><text x="21.4040%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (358 instructions, 1.14%)</title><rect x="20.6701%" y="197" width="1.1358%" height="15" fill="rgb(249,160,54)" fg:x="6515" fg:w="358"/><text x="20.9630%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="21.8059%" y="133" width="0.0286%" height="15" fill="rgb(235,78,35)" fg:x="6873" fg:w="9"/><text x="22.0989%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="21.8344%" y="133" width="0.0286%" height="15" fill="rgb(254,99,31)" fg:x="6882" fg:w="9"/><text x="22.1274%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="21.8725%" y="133" width="0.0159%" height="15" fill="rgb(231,149,18)" fg:x="6894" fg:w="5"/><text x="22.1655%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="21.8059%" y="149" width="0.3807%" height="15" fill="rgb(251,207,53)" fg:x="6873" fg:w="120"/><text x="22.0989%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="21.8059%" y="165" width="0.4124%" height="15" fill="rgb(234,18,40)" fg:x="6873" fg:w="130"/><text x="22.0989%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="21.8059%" y="181" width="0.4220%" height="15" fill="rgb(221,113,43)" fg:x="6873" fg:w="133"/><text x="22.0989%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.2469%" y="133" width="0.0286%" height="15" fill="rgb(242,93,20)" fg:x="7012" fg:w="9"/><text x="22.5399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="22.2755%" y="133" width="0.0286%" height="15" fill="rgb(254,228,19)" fg:x="7021" fg:w="9"/><text x="22.5684%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="22.3135%" y="133" width="0.0159%" height="15" fill="rgb(241,74,8)" fg:x="7033" fg:w="5"/><text x="22.6065%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="22.2469%" y="149" width="0.3807%" height="15" fill="rgb(251,135,6)" fg:x="7012" fg:w="120"/><text x="22.5399%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="22.2469%" y="165" width="0.4124%" height="15" fill="rgb(242,122,34)" fg:x="7012" fg:w="130"/><text x="22.5399%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="22.2469%" y="181" width="0.4220%" height="15" fill="rgb(225,168,38)" fg:x="7012" fg:w="133"/><text x="22.5399%" y="191.50"></text></g><g><title>__rust_alloc (278 instructions, 0.88%)</title><rect x="21.8059%" y="197" width="0.8820%" height="15" fill="rgb(214,115,35)" fg:x="6873" fg:w="278"/><text x="22.0989%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (15 instructions, 0.05%)</title><rect x="22.6879%" y="197" width="0.0476%" height="15" fill="rgb(237,74,2)" fg:x="7151" fg:w="15"/><text x="22.9809%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="22.7450%" y="149" width="0.0127%" height="15" fill="rgb(213,125,43)" fg:x="7169" fg:w="4"/><text x="23.0380%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="22.7672%" y="149" width="0.0127%" height="15" fill="rgb(216,122,53)" fg:x="7176" fg:w="4"/><text x="23.0602%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="22.7799%" y="149" width="0.0190%" height="15" fill="rgb(210,22,29)" fg:x="7180" fg:w="6"/><text x="23.0729%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="22.7989%" y="149" width="0.0508%" height="15" fill="rgb(218,71,38)" fg:x="7186" fg:w="16"/><text x="23.0919%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="22.7355%" y="165" width="0.3109%" height="15" fill="rgb(213,133,14)" fg:x="7166" fg:w="98"/><text x="23.0285%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.32%)</title><rect x="22.7355%" y="181" width="0.3173%" height="15" fill="rgb(252,41,40)" fg:x="7166" fg:w="100"/><text x="23.0285%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="22.7355%" y="197" width="0.3331%" height="15" fill="rgb(242,159,52)" fg:x="7166" fg:w="105"/><text x="23.0285%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.31%)</title><rect x="23.0686%" y="165" width="1.3103%" height="15" fill="rgb(239,120,6)" fg:x="7271" fg:w="413"/><text x="23.3616%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.32%)</title><rect x="23.0686%" y="181" width="1.3230%" height="15" fill="rgb(235,220,43)" fg:x="7271" fg:w="417"/><text x="23.3616%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.39%)</title><rect x="23.0686%" y="197" width="1.3865%" height="15" fill="rgb(208,0,2)" fg:x="7271" fg:w="437"/><text x="23.3616%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.17%)</title><rect x="24.4551%" y="181" width="1.1675%" height="15" fill="rgb(240,173,32)" fg:x="7708" fg:w="368"/><text x="24.7481%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.18%)</title><rect x="24.4551%" y="197" width="1.1802%" height="15" fill="rgb(223,84,52)" fg:x="7708" fg:w="372"/><text x="24.7481%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,884 instructions, 25.01%)</title><rect x="1.7164%" y="213" width="25.0135%" height="15" fill="rgb(209,178,7)" fg:x="541" fg:w="7884"/><text x="2.0094%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.22%)</title><rect x="26.7299%" y="197" width="1.2151%" height="15" fill="rgb(243,122,45)" fg:x="8425" fg:w="383"/><text x="27.0229%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.22%)</title><rect x="27.9577%" y="197" width="1.2151%" height="15" fill="rgb(242,36,30)" fg:x="8812" fg:w="383"/><text x="28.2507%" y="207.50"></text></g><g><title>memcpy (774 instructions, 2.46%)</title><rect x="26.7299%" y="213" width="2.4557%" height="15" fill="rgb(236,167,22)" fg:x="8425" fg:w="774"/><text x="27.0229%" y="223.50">m..</text></g><g><title>candid::types::internal::find_type (38 instructions, 0.12%)</title><rect x="29.1856%" y="181" width="0.1206%" height="15" fill="rgb(241,179,18)" fg:x="9199" fg:w="38"/><text x="29.4785%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="29.3061%" y="101" width="0.0286%" height="15" fill="rgb(229,130,17)" fg:x="9237" fg:w="9"/><text x="29.5991%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="29.3347%" y="101" width="0.0286%" height="15" fill="rgb(232,204,0)" fg:x="9246" fg:w="9"/><text x="29.6277%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="29.3728%" y="101" width="0.0159%" height="15" fill="rgb(235,144,30)" fg:x="9258" fg:w="5"/><text x="29.6657%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="29.3061%" y="117" width="0.3807%" height="15" fill="rgb(225,120,50)" fg:x="9237" fg:w="120"/><text x="29.5991%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="29.3061%" y="133" width="0.4124%" height="15" fill="rgb(223,155,43)" fg:x="9237" fg:w="130"/><text x="29.5991%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="29.3061%" y="149" width="0.4220%" height="15" fill="rgb(227,88,5)" fg:x="9237" fg:w="133"/><text x="29.5991%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="29.3061%" y="165" width="0.4410%" height="15" fill="rgb(214,203,7)" fg:x="9237" fg:w="139"/><text x="29.5991%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (184 instructions, 0.58%)</title><rect x="29.3061%" y="181" width="0.5838%" height="15" fill="rgb(234,32,10)" fg:x="9237" fg:w="184"/><text x="29.5991%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="29.8899%" y="133" width="0.1713%" height="15" fill="rgb(227,133,29)" fg:x="9421" fg:w="54"/><text x="30.1829%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.29%)</title><rect x="30.0612%" y="133" width="0.2855%" height="15" fill="rgb(216,41,49)" fg:x="9475" fg:w="90"/><text x="30.3542%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.52%)</title><rect x="30.3468%" y="133" width="0.5171%" height="15" fill="rgb(206,172,5)" fg:x="9565" fg:w="163"/><text x="30.6397%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.76%)</title><rect x="29.8899%" y="149" width="1.7640%" height="15" fill="rgb(239,159,2)" fg:x="9421" fg:w="556"/><text x="30.1829%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.31%)</title><rect x="31.6539%" y="149" width="0.3141%" height="15" fill="rgb(233,24,17)" fg:x="9977" fg:w="99"/><text x="31.9469%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (760 instructions, 2.41%)</title><rect x="29.8899%" y="165" width="2.4112%" height="15" fill="rgb(214,99,32)" fg:x="9421" fg:w="760"/><text x="30.1829%" y="175.50">h..</text></g><g><title>candid::types::internal::env_add (813 instructions, 2.58%)</title><rect x="29.8899%" y="181" width="2.5794%" height="15" fill="rgb(245,41,14)" fg:x="9421" fg:w="813"/><text x="30.1829%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="32.4693%" y="101" width="0.0286%" height="15" fill="rgb(212,2,24)" fg:x="10234" fg:w="9"/><text x="32.7623%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="32.4979%" y="101" width="0.0286%" height="15" fill="rgb(220,90,41)" fg:x="10243" fg:w="9"/><text x="32.7908%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.5359%" y="101" width="0.0159%" height="15" fill="rgb(241,97,29)" fg:x="10255" fg:w="5"/><text x="32.8289%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="32.4693%" y="117" width="0.3807%" height="15" fill="rgb(210,210,33)" fg:x="10234" fg:w="120"/><text x="32.7623%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="32.4693%" y="133" width="0.4124%" height="15" fill="rgb(244,7,14)" fg:x="10234" fg:w="130"/><text x="32.7623%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="32.4693%" y="149" width="0.4220%" height="15" fill="rgb(232,16,50)" fg:x="10234" fg:w="133"/><text x="32.7623%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="32.4693%" y="165" width="0.4410%" height="15" fill="rgb(221,227,20)" fg:x="10234" fg:w="139"/><text x="32.7623%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (151 instructions, 0.48%)</title><rect x="32.4693%" y="181" width="0.4791%" height="15" fill="rgb(251,65,45)" fg:x="10234" fg:w="151"/><text x="32.7623%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="32.9484%" y="133" width="0.1713%" height="15" fill="rgb(237,180,50)" fg:x="10385" fg:w="54"/><text x="33.2413%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.29%)</title><rect x="33.1197%" y="133" width="0.2855%" height="15" fill="rgb(237,155,5)" fg:x="10439" fg:w="90"/><text x="33.4127%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.52%)</title><rect x="33.4052%" y="133" width="0.5171%" height="15" fill="rgb(227,92,21)" fg:x="10529" fg:w="163"/><text x="33.6982%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.76%)</title><rect x="32.9484%" y="149" width="1.7640%" height="15" fill="rgb(215,41,8)" fg:x="10385" fg:w="556"/><text x="33.2413%" y="159.50"></text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.23%)</title><rect x="34.7124%" y="133" width="0.2348%" height="15" fill="rgb(238,148,54)" fg:x="10941" fg:w="74"/><text x="35.0054%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.25%)</title><rect x="34.7124%" y="149" width="0.2475%" height="15" fill="rgb(239,139,52)" fg:x="10941" fg:w="78"/><text x="35.0054%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (743 instructions, 2.36%)</title><rect x="32.9484%" y="165" width="2.3573%" height="15" fill="rgb(226,105,0)" fg:x="10385" fg:w="743"/><text x="33.2413%" y="175.50">h..</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.3152%" y="101" width="0.0127%" height="15" fill="rgb(234,222,0)" fg:x="11131" fg:w="4"/><text x="35.6082%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.3374%" y="101" width="0.0127%" height="15" fill="rgb(225,174,17)" fg:x="11138" fg:w="4"/><text x="35.6304%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.3501%" y="101" width="0.0190%" height="15" fill="rgb(235,203,8)" fg:x="11142" fg:w="6"/><text x="35.6431%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="35.3691%" y="101" width="0.0508%" height="15" fill="rgb(207,29,44)" fg:x="11148" fg:w="16"/><text x="35.6621%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="35.3057%" y="117" width="0.3109%" height="15" fill="rgb(213,87,2)" fg:x="11128" fg:w="98"/><text x="35.5987%" y="127.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.32%)</title><rect x="35.3057%" y="133" width="0.3173%" height="15" fill="rgb(209,61,47)" fg:x="11128" fg:w="100"/><text x="35.5987%" y="143.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.33%)</title><rect x="35.3057%" y="149" width="0.3331%" height="15" fill="rgb(212,209,54)" fg:x="11128" fg:w="105"/><text x="35.5987%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.43%)</title><rect x="35.3057%" y="165" width="0.4347%" height="15" fill="rgb(207,225,28)" fg:x="11128" fg:w="137"/><text x="35.5987%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 2.97%)</title><rect x="32.9484%" y="181" width="2.9728%" height="15" fill="rgb(217,32,54)" fg:x="10385" fg:w="937"/><text x="33.2413%" y="191.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.17%)</title><rect x="35.9212%" y="133" width="0.1713%" height="15" fill="rgb(246,18,20)" fg:x="11322" fg:w="54"/><text x="36.2142%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.25%)</title><rect x="35.9212%" y="149" width="0.2506%" height="15" fill="rgb(213,220,51)" fg:x="11322" fg:w="79"/><text x="36.2142%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 0.96%)</title><rect x="35.9212%" y="165" width="0.9613%" height="15" fill="rgb(234,225,10)" fg:x="11322" fg:w="303"/><text x="36.2142%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (35 instructions, 0.11%)</title><rect x="36.8825%" y="165" width="0.1110%" height="15" fill="rgb(208,182,7)" fg:x="11625" fg:w="35"/><text x="37.1755%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="36.9936%" y="165" width="0.0349%" height="15" fill="rgb(226,117,44)" fg:x="11660" fg:w="11"/><text x="37.2865%" y="175.50"></text></g><g><title>candid::types::internal::env_id (506 instructions, 1.61%)</title><rect x="35.9212%" y="181" width="1.6054%" height="15" fill="rgb(243,182,24)" fg:x="11322" fg:w="506"/><text x="36.2142%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,737 instructions, 8.68%)</title><rect x="29.1856%" y="197" width="8.6837%" height="15" fill="rgb(250,166,1)" fg:x="9199" fg:w="2737"/><text x="29.4785%" y="207.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.12%)</title><rect x="37.8692%" y="197" width="0.1206%" height="15" fill="rgb(249,65,13)" fg:x="11936" fg:w="38"/><text x="38.1622%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="37.9993%" y="133" width="0.0127%" height="15" fill="rgb(248,131,31)" fg:x="11977" fg:w="4"/><text x="38.2923%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="38.0215%" y="133" width="0.0127%" height="15" fill="rgb(218,190,41)" fg:x="11984" fg:w="4"/><text x="38.3145%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="38.0342%" y="133" width="0.0190%" height="15" fill="rgb(243,220,0)" fg:x="11988" fg:w="6"/><text x="38.3272%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="38.0532%" y="133" width="0.0127%" height="15" fill="rgb(246,109,37)" fg:x="11994" fg:w="4"/><text x="38.3462%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="38.0659%" y="133" width="0.0317%" height="15" fill="rgb(216,189,6)" fg:x="11998" fg:w="10"/><text x="38.3589%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.45%)</title><rect x="37.9898%" y="149" width="0.4473%" height="15" fill="rgb(241,70,25)" fg:x="11974" fg:w="141"/><text x="38.2828%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.45%)</title><rect x="37.9898%" y="165" width="0.4537%" height="15" fill="rgb(236,64,20)" fg:x="11974" fg:w="143"/><text x="38.2828%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.47%)</title><rect x="37.9898%" y="181" width="0.4696%" height="15" fill="rgb(246,186,1)" fg:x="11974" fg:w="148"/><text x="38.2828%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="38.5704%" y="133" width="0.0127%" height="15" fill="rgb(221,64,35)" fg:x="12157" fg:w="4"/><text x="38.8634%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="38.5926%" y="133" width="0.0127%" height="15" fill="rgb(222,68,42)" fg:x="12164" fg:w="4"/><text x="38.8856%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="38.6053%" y="133" width="0.0190%" height="15" fill="rgb(231,116,11)" fg:x="12168" fg:w="6"/><text x="38.8983%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="38.6243%" y="133" width="0.0127%" height="15" fill="rgb(240,69,23)" fg:x="12174" fg:w="4"/><text x="38.9173%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="38.6370%" y="133" width="0.0317%" height="15" fill="rgb(206,78,41)" fg:x="12178" fg:w="10"/><text x="38.9300%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.45%)</title><rect x="38.5609%" y="149" width="0.4473%" height="15" fill="rgb(238,176,17)" fg:x="12154" fg:w="141"/><text x="38.8538%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.45%)</title><rect x="38.5609%" y="165" width="0.4537%" height="15" fill="rgb(219,175,40)" fg:x="12154" fg:w="143"/><text x="38.8538%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.47%)</title><rect x="38.5609%" y="181" width="0.4696%" height="15" fill="rgb(206,139,20)" fg:x="12154" fg:w="148"/><text x="38.8538%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.14%)</title><rect x="37.9898%" y="197" width="1.1422%" height="15" fill="rgb(216,36,18)" fg:x="11974" fg:w="360"/><text x="38.2828%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.09%)</title><rect x="39.1320%" y="181" width="0.0888%" height="15" fill="rgb(217,1,31)" fg:x="12334" fg:w="28"/><text x="39.4249%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.08%)</title><rect x="39.2208%" y="181" width="0.0793%" height="15" fill="rgb(236,25,24)" fg:x="12362" fg:w="25"/><text x="39.5138%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.08%)</title><rect x="39.3001%" y="181" width="0.0793%" height="15" fill="rgb(205,132,49)" fg:x="12387" fg:w="25"/><text x="39.5931%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (159 instructions, 0.50%)</title><rect x="39.1320%" y="197" width="0.5045%" height="15" fill="rgb(205,99,48)" fg:x="12334" fg:w="159"/><text x="39.4249%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="39.6364%" y="197" width="0.0349%" height="15" fill="rgb(241,195,3)" fg:x="12493" fg:w="11"/><text x="39.9294%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="39.6713%" y="197" width="0.0349%" height="15" fill="rgb(249,59,34)" fg:x="12504" fg:w="11"/><text x="39.9643%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="39.7062%" y="197" width="0.0349%" height="15" fill="rgb(218,167,21)" fg:x="12515" fg:w="11"/><text x="39.9992%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,495 instructions, 11.09%)</title><rect x="29.1856%" y="213" width="11.0885%" height="15" fill="rgb(239,41,40)" fg:x="9199" fg:w="3495"/><text x="29.4785%" y="223.50">candid::de::ID..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.31%)</title><rect x="40.2741%" y="197" width="1.3103%" height="15" fill="rgb(237,205,45)" fg:x="12694" fg:w="413"/><text x="40.5671%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.32%)</title><rect x="40.2741%" y="213" width="1.3230%" height="15" fill="rgb(242,208,48)" fg:x="12694" fg:w="417"/><text x="40.5671%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.06%)</title><rect x="41.5971%" y="197" width="0.0603%" height="15" fill="rgb(214,116,49)" fg:x="13111" fg:w="19"/><text x="41.8901%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="41.6669%" y="149" width="0.0127%" height="15" fill="rgb(234,210,20)" fg:x="13133" fg:w="4"/><text x="41.9599%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="41.6891%" y="149" width="0.0127%" height="15" fill="rgb(249,88,54)" fg:x="13140" fg:w="4"/><text x="41.9821%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="41.7018%" y="149" width="0.0159%" height="15" fill="rgb(207,220,34)" fg:x="13144" fg:w="5"/><text x="41.9948%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="41.7272%" y="149" width="0.0190%" height="15" fill="rgb(250,42,44)" fg:x="13152" fg:w="6"/><text x="42.0202%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="41.7462%" y="149" width="0.0127%" height="15" fill="rgb(211,69,23)" fg:x="13158" fg:w="4"/><text x="42.0392%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="41.7589%" y="149" width="0.0317%" height="15" fill="rgb(227,229,25)" fg:x="13162" fg:w="10"/><text x="42.0519%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.61%)</title><rect x="41.6574%" y="165" width="0.6123%" height="15" fill="rgb(207,42,49)" fg:x="13130" fg:w="193"/><text x="41.9504%" y="175.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.62%)</title><rect x="41.6574%" y="181" width="0.6187%" height="15" fill="rgb(217,168,47)" fg:x="13130" fg:w="195"/><text x="41.9504%" y="191.50"></text></g><g><title>__rust_dealloc (200 instructions, 0.63%)</title><rect x="41.6574%" y="197" width="0.6345%" height="15" fill="rgb(237,143,12)" fg:x="13130" fg:w="200"/><text x="41.9504%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.3015%" y="133" width="0.0127%" height="15" fill="rgb(241,159,16)" fg:x="13333" fg:w="4"/><text x="42.5944%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="42.3237%" y="133" width="0.0127%" height="15" fill="rgb(206,149,35)" fg:x="13340" fg:w="4"/><text x="42.6166%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="42.3364%" y="133" width="0.0159%" height="15" fill="rgb(218,123,34)" fg:x="13344" fg:w="5"/><text x="42.6293%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="42.3618%" y="133" width="0.0190%" height="15" fill="rgb(246,132,49)" fg:x="13352" fg:w="6"/><text x="42.6547%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="42.3808%" y="133" width="0.0127%" height="15" fill="rgb(217,25,47)" fg:x="13358" fg:w="4"/><text x="42.6738%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="42.3935%" y="133" width="0.0317%" height="15" fill="rgb(241,84,45)" fg:x="13362" fg:w="10"/><text x="42.6864%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.23%)</title><rect x="42.4252%" y="133" width="0.2348%" height="15" fill="rgb(234,163,42)" fg:x="13372" fg:w="74"/><text x="42.7182%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.77%)</title><rect x="42.2920%" y="149" width="0.7710%" height="15" fill="rgb(221,204,35)" fg:x="13330" fg:w="243"/><text x="42.5849%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 0.78%)</title><rect x="42.2920%" y="165" width="0.7773%" height="15" fill="rgb(229,148,32)" fg:x="13330" fg:w="245"/><text x="42.5849%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 0.79%)</title><rect x="42.2920%" y="181" width="0.7932%" height="15" fill="rgb(215,119,1)" fg:x="13330" fg:w="250"/><text x="42.5849%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 0.89%)</title><rect x="42.2920%" y="197" width="0.8947%" height="15" fill="rgb(253,75,52)" fg:x="13330" fg:w="282"/><text x="42.5849%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.1866%" y="197" width="0.0349%" height="15" fill="rgb(231,36,44)" fg:x="13612" fg:w="11"/><text x="43.4796%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="43.2215%" y="197" width="0.0159%" height="15" fill="rgb(210,156,42)" fg:x="13623" fg:w="5"/><text x="43.5145%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (614 instructions, 1.95%)</title><rect x="41.5971%" y="213" width="1.9480%" height="15" fill="rgb(218,171,1)" fg:x="13111" fg:w="614"/><text x="41.8901%" y="223.50"></text></g><g><title>candid::utils::decode_args (13,287 instructions, 42.16%)</title><rect x="1.7164%" y="229" width="42.1555%" height="15" fill="rgb(242,131,36)" fg:x="541" fg:w="13287"/><text x="2.0094%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="43.8815%" y="181" width="0.0127%" height="15" fill="rgb(235,59,17)" fg:x="13831" fg:w="4"/><text x="44.1744%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="43.9037%" y="181" width="0.0127%" height="15" fill="rgb(222,107,1)" fg:x="13838" fg:w="4"/><text x="44.1966%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="43.9164%" y="181" width="0.0190%" height="15" fill="rgb(225,122,54)" fg:x="13842" fg:w="6"/><text x="44.2093%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="43.9354%" y="181" width="0.0127%" height="15" fill="rgb(219,92,40)" fg:x="13848" fg:w="4"/><text x="44.2284%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.18%)</title><rect x="43.9481%" y="181" width="0.1777%" height="15" fill="rgb(226,190,46)" fg:x="13852" fg:w="56"/><text x="44.2411%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="44.1258%" y="181" width="0.0317%" height="15" fill="rgb(232,153,11)" fg:x="13908" fg:w="10"/><text x="44.4187%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.23%)</title><rect x="44.1575%" y="181" width="0.2348%" height="15" fill="rgb(228,113,3)" fg:x="13918" fg:w="74"/><text x="44.4505%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.72%)</title><rect x="43.8720%" y="197" width="0.7234%" height="15" fill="rgb(234,84,1)" fg:x="13828" fg:w="228"/><text x="44.1649%" y="207.50"></text></g><g><title>__rdl_dealloc (230 instructions, 0.73%)</title><rect x="43.8720%" y="213" width="0.7297%" height="15" fill="rgb(227,192,50)" fg:x="13828" fg:w="230"/><text x="44.1649%" y="223.50"></text></g><g><title>__rust_dealloc (235 instructions, 0.75%)</title><rect x="43.8720%" y="229" width="0.7456%" height="15" fill="rgb(252,205,45)" fg:x="13828" fg:w="235"/><text x="44.1649%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,760 instructions, 43.66%)</title><rect x="1.0914%" y="245" width="43.6562%" height="15" fill="rgb(245,10,13)" fg:x="344" fg:w="13760"/><text x="1.3844%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>imrc_hashmap::MAP::__getit (6 instructions, 0.02%)</title><rect x="44.7476%" y="229" width="0.0190%" height="15" fill="rgb(207,83,41)" fg:x="14104" fg:w="6"/><text x="45.0406%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="44.7666%" y="229" width="0.9264%" height="15" fill="rgb(209,53,40)" fg:x="14110" fg:w="292"/><text x="45.0596%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="45.6931%" y="229" width="0.8725%" height="15" fill="rgb(210,89,33)" fg:x="14402" fg:w="275"/><text x="45.9860%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="46.5656%" y="229" width="0.8725%" height="15" fill="rgb(226,190,53)" fg:x="14677" fg:w="275"/><text x="46.8585%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="47.4381%" y="229" width="0.9264%" height="15" fill="rgb(230,218,30)" fg:x="14952" fg:w="292"/><text x="47.7310%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="48.3645%" y="229" width="0.9264%" height="15" fill="rgb(209,189,32)" fg:x="15244" fg:w="292"/><text x="48.6574%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="49.2909%" y="229" width="0.8725%" height="15" fill="rgb(235,64,21)" fg:x="15536" fg:w="275"/><text x="49.5839%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="50.1634%" y="229" width="0.8725%" height="15" fill="rgb(241,121,18)" fg:x="15811" fg:w="275"/><text x="50.4564%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="51.0359%" y="229" width="0.8725%" height="15" fill="rgb(223,200,15)" fg:x="16086" fg:w="275"/><text x="51.3289%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="51.9084%" y="229" width="0.9264%" height="15" fill="rgb(251,191,6)" fg:x="16361" fg:w="292"/><text x="52.2013%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="52.8348%" y="229" width="0.9264%" height="15" fill="rgb(254,117,37)" fg:x="16653" fg:w="292"/><text x="53.1278%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="53.7612%" y="229" width="0.8725%" height="15" fill="rgb(231,116,49)" fg:x="16945" fg:w="275"/><text x="54.0542%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="54.6337%" y="229" width="0.8725%" height="15" fill="rgb(221,220,49)" fg:x="17220" fg:w="275"/><text x="54.9267%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="55.5062%" y="229" width="0.9264%" height="15" fill="rgb(249,47,6)" fg:x="17495" fg:w="292"/><text x="55.7992%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.98%)</title><rect x="56.4326%" y="229" width="0.9835%" height="15" fill="rgb(254,222,19)" fg:x="17787" fg:w="310"/><text x="56.7256%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="57.4162%" y="229" width="0.8725%" height="15" fill="rgb(247,25,30)" fg:x="18097" fg:w="275"/><text x="57.7091%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="58.2887%" y="229" width="0.8725%" height="15" fill="rgb(213,69,35)" fg:x="18372" fg:w="275"/><text x="58.5816%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="59.1611%" y="229" width="0.8725%" height="15" fill="rgb(232,104,4)" fg:x="18647" fg:w="275"/><text x="59.4541%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="60.0336%" y="229" width="0.8725%" height="15" fill="rgb(217,119,49)" fg:x="18922" fg:w="275"/><text x="60.3266%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="60.9061%" y="229" width="0.8725%" height="15" fill="rgb(212,35,23)" fg:x="19197" fg:w="275"/><text x="61.1991%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="61.7786%" y="229" width="0.8725%" height="15" fill="rgb(244,167,3)" fg:x="19472" fg:w="275"/><text x="62.0716%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="62.6511%" y="229" width="0.9264%" height="15" fill="rgb(239,69,46)" fg:x="19747" fg:w="292"/><text x="62.9441%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="63.5775%" y="229" width="0.9264%" height="15" fill="rgb(232,55,52)" fg:x="20039" fg:w="292"/><text x="63.8705%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.98%)</title><rect x="64.5039%" y="229" width="0.9835%" height="15" fill="rgb(243,53,13)" fg:x="20331" fg:w="310"/><text x="64.7969%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="65.4875%" y="229" width="0.9264%" height="15" fill="rgb(234,50,13)" fg:x="20641" fg:w="292"/><text x="65.7805%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="66.4139%" y="229" width="0.9264%" height="15" fill="rgb(251,107,27)" fg:x="20933" fg:w="292"/><text x="66.7069%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="67.3403%" y="229" width="0.8725%" height="15" fill="rgb(207,57,12)" fg:x="21225" fg:w="275"/><text x="67.6333%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="68.2128%" y="229" width="0.8725%" height="15" fill="rgb(206,227,31)" fg:x="21500" fg:w="275"/><text x="68.5058%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="69.0853%" y="229" width="0.8725%" height="15" fill="rgb(242,13,47)" fg:x="21775" fg:w="275"/><text x="69.3783%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="69.9578%" y="229" width="0.8725%" height="15" fill="rgb(249,198,15)" fg:x="22050" fg:w="275"/><text x="70.2508%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="70.8303%" y="229" width="0.8725%" height="15" fill="rgb(208,148,38)" fg:x="22325" fg:w="275"/><text x="71.1233%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="71.7028%" y="229" width="0.8725%" height="15" fill="rgb(225,135,40)" fg:x="22600" fg:w="275"/><text x="71.9958%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="72.5753%" y="229" width="0.9264%" height="15" fill="rgb(206,106,18)" fg:x="22875" fg:w="292"/><text x="72.8682%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="73.5017%" y="229" width="0.9264%" height="15" fill="rgb(220,0,30)" fg:x="23167" fg:w="292"/><text x="73.7947%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="74.4281%" y="229" width="0.8725%" height="15" fill="rgb(249,190,53)" fg:x="23459" fg:w="275"/><text x="74.7211%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="75.3006%" y="229" width="0.9264%" height="15" fill="rgb(228,226,0)" fg:x="23734" fg:w="292"/><text x="75.5936%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="76.2270%" y="229" width="0.9264%" height="15" fill="rgb(250,92,52)" fg:x="24026" fg:w="292"/><text x="76.5200%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="77.1535%" y="229" width="0.8725%" height="15" fill="rgb(239,44,23)" fg:x="24318" fg:w="275"/><text x="77.4464%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="78.0260%" y="229" width="0.9264%" height="15" fill="rgb(221,148,8)" fg:x="24593" fg:w="292"/><text x="78.3189%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.98%)</title><rect x="78.9524%" y="229" width="0.9835%" height="15" fill="rgb(220,9,36)" fg:x="24885" fg:w="310"/><text x="79.2453%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="79.9359%" y="229" width="0.8725%" height="15" fill="rgb(249,210,39)" fg:x="25195" fg:w="275"/><text x="80.2289%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="80.8084%" y="229" width="0.8725%" height="15" fill="rgb(234,122,4)" fg:x="25470" fg:w="275"/><text x="81.1014%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="81.6809%" y="229" width="0.8725%" height="15" fill="rgb(254,206,3)" fg:x="25745" fg:w="275"/><text x="81.9739%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="82.5534%" y="229" width="0.8725%" height="15" fill="rgb(247,5,53)" fg:x="26020" fg:w="275"/><text x="82.8463%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="83.4259%" y="229" width="0.8725%" height="15" fill="rgb(229,123,38)" fg:x="26295" fg:w="275"/><text x="83.7188%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="84.2984%" y="229" width="0.9264%" height="15" fill="rgb(206,186,1)" fg:x="26570" fg:w="292"/><text x="84.5913%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="85.2248%" y="229" width="0.8725%" height="15" fill="rgb(238,140,22)" fg:x="26862" fg:w="275"/><text x="85.5178%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="86.0973%" y="229" width="0.8725%" height="15" fill="rgb(235,227,16)" fg:x="27137" fg:w="275"/><text x="86.3902%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (310 instructions, 0.98%)</title><rect x="86.9698%" y="229" width="0.9835%" height="15" fill="rgb(206,14,49)" fg:x="27412" fg:w="310"/><text x="87.2627%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (275 instructions, 0.87%)</title><rect x="87.9533%" y="229" width="0.8725%" height="15" fill="rgb(247,90,36)" fg:x="27722" fg:w="275"/><text x="88.2463%" y="239.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::get (292 instructions, 0.93%)</title><rect x="88.8258%" y="229" width="0.9264%" height="15" fill="rgb(206,6,18)" fg:x="27997" fg:w="292"/><text x="89.1188%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15,651 instructions, 49.66%)</title><rect x="44.7476%" y="245" width="49.6558%" height="15" fill="rgb(206,211,48)" fg:x="14104" fg:w="15651"/><text x="45.0406%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="94.4129%" y="133" width="0.0127%" height="15" fill="rgb(224,129,31)" fg:x="29758" fg:w="4"/><text x="94.7059%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="94.4351%" y="133" width="0.0127%" height="15" fill="rgb(253,103,34)" fg:x="29765" fg:w="4"/><text x="94.7281%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="94.4478%" y="133" width="0.0159%" height="15" fill="rgb(210,177,10)" fg:x="29769" fg:w="5"/><text x="94.7408%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.18%)</title><rect x="94.4732%" y="133" width="0.1777%" height="15" fill="rgb(244,167,38)" fg:x="29777" fg:w="56"/><text x="94.7661%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="94.6508%" y="133" width="0.0190%" height="15" fill="rgb(208,182,31)" fg:x="29833" fg:w="6"/><text x="94.9438%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.50%)</title><rect x="94.4034%" y="149" width="0.4981%" height="15" fill="rgb(221,162,32)" fg:x="29755" fg:w="157"/><text x="94.6963%" y="159.50"></text></g><g><title>__rdl_dealloc (159 instructions, 0.50%)</title><rect x="94.4034%" y="165" width="0.5045%" height="15" fill="rgb(205,117,28)" fg:x="29755" fg:w="159"/><text x="94.6963%" y="175.50"></text></g><g><title>__rust_dealloc (164 instructions, 0.52%)</title><rect x="94.4034%" y="181" width="0.5203%" height="15" fill="rgb(215,146,19)" fg:x="29755" fg:w="164"/><text x="94.6963%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.62%)</title><rect x="94.4034%" y="197" width="0.6218%" height="15" fill="rgb(219,178,48)" fg:x="29755" fg:w="196"/><text x="94.6963%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.43%)</title><rect x="95.0252%" y="181" width="0.4283%" height="15" fill="rgb(227,49,25)" fg:x="29951" fg:w="135"/><text x="95.3182%" y="191.50"></text></g><g><title>memset (139 instructions, 0.44%)</title><rect x="95.0252%" y="197" width="0.4410%" height="15" fill="rgb(252,188,18)" fg:x="29951" fg:w="139"/><text x="95.3182%" y="207.50"></text></g><g><title>candid::types::internal::env_clear (437 instructions, 1.39%)</title><rect x="94.4034%" y="213" width="1.3865%" height="15" fill="rgb(246,93,15)" fg:x="29755" fg:w="437"/><text x="94.6963%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (501 instructions, 1.59%)</title><rect x="94.4034%" y="229" width="1.5895%" height="15" fill="rgb(224,148,7)" fg:x="29755" fg:w="501"/><text x="94.6963%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.10%)</title><rect x="96.0024%" y="197" width="0.1047%" height="15" fill="rgb(226,96,3)" fg:x="30259" fg:w="33"/><text x="96.2954%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (88 instructions, 0.28%)</title><rect x="96.0024%" y="213" width="0.2792%" height="15" fill="rgb(223,174,49)" fg:x="30259" fg:w="88"/><text x="96.2954%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="96.2816%" y="101" width="0.0286%" height="15" fill="rgb(207,164,8)" fg:x="30347" fg:w="9"/><text x="96.5746%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.03%)</title><rect x="96.3102%" y="101" width="0.0286%" height="15" fill="rgb(230,55,47)" fg:x="30356" fg:w="9"/><text x="96.6031%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="96.3482%" y="101" width="0.0159%" height="15" fill="rgb(238,100,46)" fg:x="30368" fg:w="5"/><text x="96.6412%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.38%)</title><rect x="96.2816%" y="117" width="0.3807%" height="15" fill="rgb(234,48,54)" fg:x="30347" fg:w="120"/><text x="96.5746%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.41%)</title><rect x="96.2816%" y="133" width="0.4124%" height="15" fill="rgb(207,127,1)" fg:x="30347" fg:w="130"/><text x="96.5746%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.42%)</title><rect x="96.2816%" y="149" width="0.4220%" height="15" fill="rgb(215,100,49)" fg:x="30347" fg:w="133"/><text x="96.5746%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.44%)</title><rect x="96.2816%" y="165" width="0.4410%" height="15" fill="rgb(247,44,53)" fg:x="30347" fg:w="139"/><text x="96.5746%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (171 instructions, 0.54%)</title><rect x="96.2816%" y="181" width="0.5425%" height="15" fill="rgb(213,145,52)" fg:x="30347" fg:w="171"/><text x="96.5746%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.76%)</title><rect x="96.2816%" y="197" width="0.7551%" height="15" fill="rgb(211,189,46)" fg:x="30347" fg:w="238"/><text x="96.5746%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.03%)</title><rect x="97.0367%" y="197" width="0.0317%" height="15" fill="rgb(244,152,9)" fg:x="30585" fg:w="10"/><text x="97.3297%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.0684%" y="181" width="0.0349%" height="15" fill="rgb(248,42,39)" fg:x="30595" fg:w="11"/><text x="97.3614%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.1160%" y="181" width="0.0349%" height="15" fill="rgb(247,93,39)" fg:x="30610" fg:w="11"/><text x="97.4090%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.10%)</title><rect x="97.0684%" y="197" width="0.0952%" height="15" fill="rgb(243,131,4)" fg:x="30595" fg:w="30"/><text x="97.3614%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (480 instructions, 1.52%)</title><rect x="96.2816%" y="213" width="1.5229%" height="15" fill="rgb(236,97,25)" fg:x="30347" fg:w="480"/><text x="96.5746%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.02%)</title><rect x="97.8045%" y="213" width="0.0190%" height="15" fill="rgb(210,53,9)" fg:x="30827" fg:w="6"/><text x="98.0975%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.10%)</title><rect x="97.8235%" y="197" width="0.0984%" height="15" fill="rgb(222,160,17)" fg:x="30833" fg:w="31"/><text x="98.1165%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (86 instructions, 0.27%)</title><rect x="97.8235%" y="213" width="0.2729%" height="15" fill="rgb(207,42,46)" fg:x="30833" fg:w="86"/><text x="98.1165%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.02%)</title><rect x="98.0964%" y="213" width="0.0190%" height="15" fill="rgb(238,57,27)" fg:x="30919" fg:w="6"/><text x="98.3894%" y="223.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 instructions, 0.05%)</title><rect x="98.1154%" y="213" width="0.0476%" height="15" fill="rgb(206,69,42)" fg:x="30925" fg:w="15"/><text x="98.4084%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (760 instructions, 2.41%)</title><rect x="96.0024%" y="229" width="2.4112%" height="15" fill="rgb(246,220,50)" fg:x="30259" fg:w="760"/><text x="96.2954%" y="239.50">c..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="98.4137%" y="229" width="0.0159%" height="15" fill="rgb(229,14,19)" fg:x="31019" fg:w="5"/><text x="98.7066%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.4390%" y="181" width="0.0127%" height="15" fill="rgb(250,21,33)" fg:x="31027" fg:w="4"/><text x="98.7320%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.4612%" y="181" width="0.0127%" height="15" fill="rgb(248,168,26)" fg:x="31034" fg:w="4"/><text x="98.7542%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.4739%" y="181" width="0.0190%" height="15" fill="rgb(217,171,42)" fg:x="31038" fg:w="6"/><text x="98.7669%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (68 instructions, 0.22%)</title><rect x="98.4295%" y="197" width="0.2157%" height="15" fill="rgb(251,14,11)" fg:x="31024" fg:w="68"/><text x="98.7225%" y="207.50"></text></g><g><title>__rdl_dealloc (70 instructions, 0.22%)</title><rect x="98.4295%" y="213" width="0.2221%" height="15" fill="rgb(221,149,38)" fg:x="31024" fg:w="70"/><text x="98.7225%" y="223.50"></text></g><g><title>__rust_dealloc (75 instructions, 0.24%)</title><rect x="98.4295%" y="229" width="0.2380%" height="15" fill="rgb(249,210,31)" fg:x="31024" fg:w="75"/><text x="98.7225%" y="239.50"></text></g><g><title>candid::utils::write_args (1,420 instructions, 4.51%)</title><rect x="94.4034%" y="245" width="4.5052%" height="15" fill="rgb(243,224,18)" fg:x="29755" fg:w="1420"/><text x="94.6963%" y="255.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.9181%" y="197" width="0.0127%" height="15" fill="rgb(231,132,15)" fg:x="31178" fg:w="4"/><text x="99.2111%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.9403%" y="197" width="0.0127%" height="15" fill="rgb(240,38,49)" fg:x="31185" fg:w="4"/><text x="99.2333%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.9530%" y="197" width="0.0190%" height="15" fill="rgb(217,151,15)" fg:x="31189" fg:w="6"/><text x="99.2460%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="98.9720%" y="197" width="0.0508%" height="15" fill="rgb(207,49,32)" fg:x="31195" fg:w="16"/><text x="99.2650%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.31%)</title><rect x="98.9086%" y="213" width="0.3109%" height="15" fill="rgb(228,206,52)" fg:x="31175" fg:w="98"/><text x="99.2016%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.32%)</title><rect x="98.9086%" y="229" width="0.3173%" height="15" fill="rgb(242,224,22)" fg:x="31175" fg:w="100"/><text x="99.2016%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.2512%" y="197" width="0.0127%" height="15" fill="rgb(252,218,32)" fg:x="31283" fg:w="4"/><text x="99.5442%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="99.2735%" y="197" width="0.0127%" height="15" fill="rgb(253,110,19)" fg:x="31290" fg:w="4"/><text x="99.5664%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.2861%" y="197" width="0.0159%" height="15" fill="rgb(225,131,48)" fg:x="31294" fg:w="5"/><text x="99.5791%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.3115%" y="197" width="0.0190%" height="15" fill="rgb(237,97,21)" fg:x="31302" fg:w="6"/><text x="99.6045%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.05%)</title><rect x="99.3306%" y="197" width="0.0508%" height="15" fill="rgb(243,7,53)" fg:x="31308" fg:w="16"/><text x="99.6235%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (150 instructions, 0.48%)</title><rect x="99.2417%" y="213" width="0.4759%" height="15" fill="rgb(250,6,32)" fg:x="31280" fg:w="150"/><text x="99.5347%" y="223.50"></text></g><g><title>__rdl_dealloc (152 instructions, 0.48%)</title><rect x="99.2417%" y="229" width="0.4822%" height="15" fill="rgb(218,118,5)" fg:x="31280" fg:w="152"/><text x="99.5347%" y="239.50"></text></g><g><title>__rust_dealloc (262 instructions, 0.83%)</title><rect x="98.9086%" y="245" width="0.8312%" height="15" fill="rgb(236,21,8)" fg:x="31175" fg:w="262"/><text x="99.2016%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (31,508 instructions, 99.97%)</title><rect x="0.0254%" y="261" width="99.9651%" height="15" fill="rgb(209,86,25)" fg:x="8" fg:w="31508"/><text x="0.3184%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (31,519 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(238,172,5)" fg:x="0" fg:w="31519"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_get (31,519 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(237,90,34)" fg:x="0" fg:w="31519"/><text x="0.2930%" y="287.50">canister_update batch_get</text></g></svg></svg>