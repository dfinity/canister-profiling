<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="182" onload="init(evt)" viewBox="0 0 1024 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">triemap.upgrade (incomplete)</text><text id="details" fill="rgb(0,0,0)" x="10" y="165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="165.00"> </text><svg id="frames" x="10" width="1004" total_samples="18302485"><g><title>next (4,828 instructions, 0.03%)</title><rect x="0.0064%" y="85" width="0.0264%" height="15" fill="rgb(206,223,32)" fg:x="1175" fg:w="4828"/><text x="0.2994%" y="95.50"></text></g><g><title>add (1,971 instructions, 0.01%)</title><rect x="0.0849%" y="69" width="0.0108%" height="15" fill="rgb(206,57,9)" fg:x="15530" fg:w="1971"/><text x="0.3778%" y="79.50"></text></g><g><title>anon-func-199.17 (2,012 instructions, 0.01%)</title><rect x="0.0848%" y="85" width="0.0110%" height="15" fill="rgb(245,39,53)" fg:x="15513" fg:w="2012"/><text x="0.3777%" y="95.50"></text></g><g><title>reserve (2,405 instructions, 0.01%)</title><rect x="0.1170%" y="53" width="0.0131%" height="15" fill="rgb(253,197,10)" fg:x="21415" fg:w="2405"/><text x="0.4100%" y="63.50"></text></g><g><title>add (2,721 instructions, 0.01%)</title><rect x="0.1160%" y="69" width="0.0149%" height="15" fill="rgb(211,120,50)" fg:x="21232" fg:w="2721"/><text x="0.4090%" y="79.50"></text></g><g><title>anon-func-199.17 (2,762 instructions, 0.02%)</title><rect x="0.1159%" y="85" width="0.0151%" height="15" fill="rgb(213,185,26)" fg:x="21215" fg:w="2762"/><text x="0.4089%" y="95.50"></text></g><g><title>reserve (3,537 instructions, 0.02%)</title><rect x="0.1653%" y="53" width="0.0193%" height="15" fill="rgb(219,136,49)" fg:x="30249" fg:w="3537"/><text x="0.4582%" y="63.50"></text></g><g><title>add (3,853 instructions, 0.02%)</title><rect x="0.1643%" y="69" width="0.0211%" height="15" fill="rgb(251,26,8)" fg:x="30066" fg:w="3853"/><text x="0.4572%" y="79.50"></text></g><g><title>anon-func-199.17 (3,894 instructions, 0.02%)</title><rect x="0.1642%" y="85" width="0.0213%" height="15" fill="rgb(231,173,45)" fg:x="30049" fg:w="3894"/><text x="0.4571%" y="95.50"></text></g><g><title>reserve (5,287 instructions, 0.03%)</title><rect x="0.2354%" y="53" width="0.0289%" height="15" fill="rgb(234,201,25)" fg:x="43075" fg:w="5287"/><text x="0.5283%" y="63.50"></text></g><g><title>add (5,603 instructions, 0.03%)</title><rect x="0.2344%" y="69" width="0.0306%" height="15" fill="rgb(242,55,18)" fg:x="42892" fg:w="5603"/><text x="0.5273%" y="79.50"></text></g><g><title>anon-func-199.17 (5,644 instructions, 0.03%)</title><rect x="0.2343%" y="85" width="0.0308%" height="15" fill="rgb(218,151,37)" fg:x="42875" fg:w="5644"/><text x="0.5272%" y="95.50"></text></g><g><title>reserve (7,905 instructions, 0.04%)</title><rect x="0.3466%" y="53" width="0.0432%" height="15" fill="rgb(225,70,29)" fg:x="63439" fg:w="7905"/><text x="0.6396%" y="63.50"></text></g><g><title>add (8,221 instructions, 0.04%)</title><rect x="0.3456%" y="69" width="0.0449%" height="15" fill="rgb(237,1,42)" fg:x="63256" fg:w="8221"/><text x="0.6386%" y="79.50"></text></g><g><title>anon-func-199.17 (8,262 instructions, 0.05%)</title><rect x="0.3455%" y="85" width="0.0451%" height="15" fill="rgb(217,126,41)" fg:x="63239" fg:w="8262"/><text x="0.6385%" y="95.50"></text></g><g><title>Array_init (2,049 instructions, 0.01%)</title><rect x="0.5092%" y="37" width="0.0112%" height="15" fill="rgb(239,143,35)" fg:x="93203" fg:w="2049"/><text x="0.8022%" y="47.50"></text></g><g><title>reserve (11,787 instructions, 0.06%)</title><rect x="0.5092%" y="53" width="0.0644%" height="15" fill="rgb(246,148,29)" fg:x="93191" fg:w="11787"/><text x="0.8021%" y="63.50"></text></g><g><title>add (12,103 instructions, 0.07%)</title><rect x="0.5082%" y="69" width="0.0661%" height="15" fill="rgb(254,31,8)" fg:x="93008" fg:w="12103"/><text x="0.8011%" y="79.50"></text></g><g><title>anon-func-199.17 (12,144 instructions, 0.07%)</title><rect x="0.5081%" y="85" width="0.0664%" height="15" fill="rgb(216,52,30)" fg:x="92991" fg:w="12144"/><text x="0.8010%" y="95.50"></text></g><g><title>Array_init (3,029 instructions, 0.02%)</title><rect x="0.7581%" y="37" width="0.0165%" height="15" fill="rgb(232,115,39)" fg:x="138753" fg:w="3029"/><text x="1.0511%" y="47.50"></text></g><g><title>reserve (17,655 instructions, 0.10%)</title><rect x="0.7580%" y="53" width="0.0965%" height="15" fill="rgb(248,182,41)" fg:x="138741" fg:w="17655"/><text x="1.0510%" y="63.50"></text></g><g><title>add (17,971 instructions, 0.10%)</title><rect x="0.7570%" y="69" width="0.0982%" height="15" fill="rgb(222,97,33)" fg:x="138558" fg:w="17971"/><text x="1.0500%" y="79.50"></text></g><g><title>anon-func-199.17 (18,012 instructions, 0.10%)</title><rect x="0.7570%" y="85" width="0.0984%" height="15" fill="rgb(245,95,47)" fg:x="138541" fg:w="18012"/><text x="1.0499%" y="95.50"></text></g><g><title>Array_init (4,499 instructions, 0.02%)</title><rect x="1.1234%" y="37" width="0.0246%" height="15" fill="rgb(226,86,31)" fg:x="205605" fg:w="4499"/><text x="1.4163%" y="47.50"></text></g><g><title>reserve (26,405 instructions, 0.14%)</title><rect x="1.1233%" y="53" width="0.1443%" height="15" fill="rgb(235,4,30)" fg:x="205593" fg:w="26405"/><text x="1.4163%" y="63.50"></text></g><g><title>add (26,721 instructions, 0.15%)</title><rect x="1.1223%" y="69" width="0.1460%" height="15" fill="rgb(230,66,8)" fg:x="205410" fg:w="26721"/><text x="1.4153%" y="79.50"></text></g><g><title>anon-func-199.17 (26,762 instructions, 0.15%)</title><rect x="1.1222%" y="85" width="0.1462%" height="15" fill="rgb(209,100,45)" fg:x="205393" fg:w="26762"/><text x="1.4152%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="1.3703%" y="85" width="0.0110%" height="15" fill="rgb(216,1,54)" fg:x="250795" fg:w="2006"/><text x="1.6632%" y="95.50"></text></g><g><title>Array_init (6,711 instructions, 0.04%)</title><rect x="1.6714%" y="37" width="0.0367%" height="15" fill="rgb(227,94,45)" fg:x="305915" fg:w="6711"/><text x="1.9644%" y="47.50"></text></g><g><title>reserve (39,537 instructions, 0.22%)</title><rect x="1.6714%" y="53" width="0.2160%" height="15" fill="rgb(248,100,20)" fg:x="305903" fg:w="39537"/><text x="1.9643%" y="63.50"></text></g><g><title>add (39,853 instructions, 0.22%)</title><rect x="1.6704%" y="69" width="0.2177%" height="15" fill="rgb(239,139,22)" fg:x="305720" fg:w="39853"/><text x="1.9633%" y="79.50"></text></g><g><title>anon-func-199.17 (39,894 instructions, 0.22%)</title><rect x="1.6703%" y="85" width="0.2180%" height="15" fill="rgb(225,65,27)" fg:x="305703" fg:w="39894"/><text x="1.9633%" y="95.50"></text></g><g><title>Array_init (10,029 instructions, 0.05%)</title><rect x="2.4950%" y="37" width="0.0548%" height="15" fill="rgb(241,173,17)" fg:x="456639" fg:w="10029"/><text x="2.7879%" y="47.50"></text></g><g><title>reserve (59,287 instructions, 0.32%)</title><rect x="2.4949%" y="53" width="0.3239%" height="15" fill="rgb(228,32,54)" fg:x="456627" fg:w="59287"/><text x="2.7879%" y="63.50"></text></g><g><title>add (59,603 instructions, 0.33%)</title><rect x="2.4939%" y="69" width="0.3257%" height="15" fill="rgb(248,144,37)" fg:x="456444" fg:w="59603"/><text x="2.7869%" y="79.50"></text></g><g><title>anon-func-199.17 (59,644 instructions, 0.33%)</title><rect x="2.4938%" y="85" width="0.3259%" height="15" fill="rgb(247,12,23)" fg:x="456427" fg:w="59644"/><text x="2.7868%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="2.8772%" y="85" width="0.0110%" height="15" fill="rgb(222,81,20)" fg:x="526599" fg:w="2006"/><text x="3.1702%" y="95.50"></text></g><g><title>Array_init (14,999 instructions, 0.08%)</title><rect x="3.7322%" y="37" width="0.0820%" height="15" fill="rgb(232,156,3)" fg:x="683081" fg:w="14999"/><text x="4.0251%" y="47.50"></text></g><g><title>reserve (88,905 instructions, 0.49%)</title><rect x="3.7321%" y="53" width="0.4858%" height="15" fill="rgb(222,156,26)" fg:x="683069" fg:w="88905"/><text x="4.0251%" y="63.50"></text></g><g><title>add (89,221 instructions, 0.49%)</title><rect x="3.7311%" y="69" width="0.4875%" height="15" fill="rgb(236,67,40)" fg:x="682886" fg:w="89221"/><text x="4.0241%" y="79.50"></text></g><g><title>anon-func-199.17 (89,262 instructions, 0.49%)</title><rect x="3.7310%" y="85" width="0.4877%" height="15" fill="rgb(227,110,25)" fg:x="682869" fg:w="89262"/><text x="4.0240%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="4.3340%" y="85" width="0.0110%" height="15" fill="rgb(239,19,30)" fg:x="793233" fg:w="2006"/><text x="4.6270%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="5.3100%" y="85" width="0.0123%" height="15" fill="rgb(236,74,41)" fg:x="971865" fg:w="2250"/><text x="5.6030%" y="95.50"></text></g><g><title>Array_init (22,461 instructions, 0.12%)</title><rect x="5.5912%" y="37" width="0.1227%" height="15" fill="rgb(226,149,33)" fg:x="1023329" fg:w="22461"/><text x="5.8842%" y="47.50"></text></g><g><title>reserve (133,287 instructions, 0.73%)</title><rect x="5.5911%" y="53" width="0.7282%" height="15" fill="rgb(235,40,46)" fg:x="1023317" fg:w="133287"/><text x="5.8841%" y="63.50"></text></g><g><title>add (133,603 instructions, 0.73%)</title><rect x="5.5901%" y="69" width="0.7300%" height="15" fill="rgb(247,121,10)" fg:x="1023134" fg:w="133603"/><text x="5.8831%" y="79.50"></text></g><g><title>anon-func-199.17 (133,644 instructions, 0.73%)</title><rect x="5.5900%" y="85" width="0.7302%" height="15" fill="rgb(211,53,19)" fg:x="1023117" fg:w="133644"/><text x="5.8830%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="7.8877%" y="85" width="0.0110%" height="15" fill="rgb(250,75,20)" fg:x="1443647" fg:w="2006"/><text x="8.1807%" y="95.50"></text></g><g><title>Array_init (33,647 instructions, 0.18%)</title><rect x="8.3695%" y="37" width="0.1838%" height="15" fill="rgb(250,138,48)" fg:x="1531831" fg:w="33647"/><text x="8.6625%" y="47.50"></text></g><g><title>reserve (199,905 instructions, 1.09%)</title><rect x="8.3695%" y="53" width="1.0922%" height="15" fill="rgb(222,40,12)" fg:x="1531819" fg:w="199905"/><text x="8.6624%" y="63.50"></text></g><g><title>add (200,221 instructions, 1.09%)</title><rect x="8.3685%" y="69" width="1.0940%" height="15" fill="rgb(252,86,6)" fg:x="1531636" fg:w="200221"/><text x="8.6614%" y="79.50"></text></g><g><title>anon-func-199.17 (200,262 instructions, 1.09%)</title><rect x="8.3684%" y="85" width="1.0942%" height="15" fill="rgb(215,19,46)" fg:x="1531619" fg:w="200262"/><text x="8.6613%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="10.9337%" y="85" width="0.0136%" height="15" fill="rgb(229,22,0)" fg:x="2001139" fg:w="2494"/><text x="11.2267%" y="95.50"></text></g><g><title>Array_init (50,433 instructions, 0.28%)</title><rect x="12.5308%" y="37" width="0.2756%" height="15" fill="rgb(205,37,35)" fg:x="2293441" fg:w="50433"/><text x="12.8237%" y="47.50"></text></g><g><title>reserve (299,787 instructions, 1.64%)</title><rect x="12.5307%" y="53" width="1.6380%" height="15" fill="rgb(209,193,13)" fg:x="2293429" fg:w="299787"/><text x="12.8237%" y="63.50"></text></g><g><title>add (300,103 instructions, 1.64%)</title><rect x="12.5297%" y="69" width="1.6397%" height="15" fill="rgb(226,213,44)" fg:x="2293246" fg:w="300103"/><text x="12.8227%" y="79.50"></text></g><g><title>anon-func-199.17 (300,144 instructions, 1.64%)</title><rect x="12.5296%" y="85" width="1.6399%" height="15" fill="rgb(240,80,21)" fg:x="2293229" fg:w="300144"/><text x="12.8226%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="14.5934%" y="85" width="0.0123%" height="15" fill="rgb(220,220,43)" fg:x="2670947" fg:w="2250"/><text x="14.8863%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="16.5188%" y="85" width="0.0123%" height="15" fill="rgb(232,21,16)" fg:x="3023359" fg:w="2250"/><text x="16.8118%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="17.4408%" y="85" width="0.0110%" height="15" fill="rgb(221,114,41)" fg:x="3192091" fg:w="2006"/><text x="17.7337%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="18.4694%" y="85" width="0.0110%" height="15" fill="rgb(245,206,51)" fg:x="3380353" fg:w="2006"/><text x="18.7623%" y="95.50"></text></g><g><title>Array_init (75,605 instructions, 0.41%)</title><rect x="18.7965%" y="37" width="0.4131%" height="15" fill="rgb(233,46,4)" fg:x="3440221" fg:w="75605"/><text x="19.0894%" y="47.50"></text></g><g><title>reserve (449,655 instructions, 2.46%)</title><rect x="18.7964%" y="53" width="2.4568%" height="15" fill="rgb(250,160,29)" fg:x="3440209" fg:w="449655"/><text x="19.0894%" y="63.50">r..</text></g><g><title>add (449,971 instructions, 2.46%)</title><rect x="18.7954%" y="69" width="2.4585%" height="15" fill="rgb(236,136,29)" fg:x="3440026" fg:w="449971"/><text x="19.0884%" y="79.50">a..</text></g><g><title>anon-func-199.17 (450,012 instructions, 2.46%)</title><rect x="18.7953%" y="85" width="2.4587%" height="15" fill="rgb(244,9,2)" fg:x="3440009" fg:w="450012"/><text x="19.0883%" y="95.50">a..</text></g><g><title>next (2,738 instructions, 0.01%)</title><rect x="22.8684%" y="85" width="0.0150%" height="15" fill="rgb(243,116,35)" fg:x="4185493" fg:w="2738"/><text x="23.1614%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="24.0497%" y="85" width="0.0110%" height="15" fill="rgb(237,165,17)" fg:x="4401693" fg:w="2006"/><text x="24.3427%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="25.0119%" y="85" width="0.0110%" height="15" fill="rgb(242,16,15)" fg:x="4577797" fg:w="2006"/><text x="25.3049%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="26.0259%" y="85" width="0.0110%" height="15" fill="rgb(231,179,30)" fg:x="4763385" fg:w="2006"/><text x="26.3189%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="26.9735%" y="85" width="0.0123%" height="15" fill="rgb(226,168,35)" fg:x="4936823" fg:w="2250"/><text x="27.2665%" y="95.50"></text></g><g><title>Array_init (113,363 instructions, 0.62%)</title><rect x="28.1864%" y="37" width="0.6194%" height="15" fill="rgb(242,50,27)" fg:x="5158819" fg:w="113363"/><text x="28.4794%" y="47.50"></text></g><g><title>reserve (674,405 instructions, 3.68%)</title><rect x="28.1864%" y="53" width="3.6848%" height="15" fill="rgb(231,94,19)" fg:x="5158807" fg:w="674405"/><text x="28.4793%" y="63.50">res..</text></g><g><title>add (674,721 instructions, 3.69%)</title><rect x="28.1854%" y="69" width="3.6865%" height="15" fill="rgb(206,211,17)" fg:x="5158624" fg:w="674721"/><text x="28.4783%" y="79.50">add</text></g><g><title>anon-func-199.17 (674,762 instructions, 3.69%)</title><rect x="28.1853%" y="85" width="3.6867%" height="15" fill="rgb(222,183,51)" fg:x="5158607" fg:w="674762"/><text x="28.4783%" y="95.50">ano..</text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="32.3995%" y="85" width="0.0110%" height="15" fill="rgb(245,19,49)" fg:x="5929921" fg:w="2006"/><text x="32.6925%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="34.1162%" y="85" width="0.0136%" height="15" fill="rgb(219,162,0)" fg:x="6244107" fg:w="2494"/><text x="34.4091%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="34.9865%" y="85" width="0.0110%" height="15" fill="rgb(233,121,31)" fg:x="6403395" fg:w="2006"/><text x="35.2794%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="35.9236%" y="85" width="0.0110%" height="15" fill="rgb(227,10,42)" fg:x="6574907" fg:w="2006"/><text x="36.2165%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="37.8334%" y="85" width="0.0136%" height="15" fill="rgb(209,104,41)" fg:x="6924461" fg:w="2494"/><text x="38.1264%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="38.7515%" y="85" width="0.0110%" height="15" fill="rgb(216,118,10)" fg:x="7092493" fg:w="2006"/><text x="39.0445%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="39.7381%" y="85" width="0.0123%" height="15" fill="rgb(207,8,34)" fg:x="7273051" fg:w="2250"/><text x="40.0310%" y="95.50"></text></g><g><title>next (2,982 instructions, 0.02%)</title><rect x="41.4544%" y="85" width="0.0163%" height="15" fill="rgb(232,106,50)" fg:x="7587179" fg:w="2982"/><text x="41.7473%" y="95.50"></text></g><g><title>Array_init (170,007 instructions, 0.93%)</title><rect x="42.2512%" y="37" width="0.9289%" height="15" fill="rgb(228,16,20)" fg:x="7733013" fg:w="170007"/><text x="42.5441%" y="47.50"></text></g><g><title>reserve (1,011,537 instructions, 5.53%)</title><rect x="42.2511%" y="53" width="5.5268%" height="15" fill="rgb(230,98,43)" fg:x="7733001" fg:w="1011537"/><text x="42.5441%" y="63.50">reser..</text></g><g><title>add (1,011,853 instructions, 5.53%)</title><rect x="42.2501%" y="69" width="5.5285%" height="15" fill="rgb(244,121,5)" fg:x="7732818" fg:w="1011853"/><text x="42.5431%" y="79.50">add</text></g><g><title>anon-func-199.17 (1,011,894 instructions, 5.53%)</title><rect x="42.2500%" y="85" width="5.5287%" height="15" fill="rgb(207,87,37)" fg:x="7732801" fg:w="1011894"/><text x="42.5430%" y="95.50">anon-..</text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="48.7406%" y="85" width="0.0110%" height="15" fill="rgb(247,131,22)" fg:x="8920745" fg:w="2006"/><text x="49.0336%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="50.7881%" y="85" width="0.0136%" height="15" fill="rgb(238,35,11)" fg:x="9295491" fg:w="2494"/><text x="51.0811%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="52.6876%" y="85" width="0.0110%" height="15" fill="rgb(226,46,3)" fg:x="9643147" fg:w="2006"/><text x="52.9806%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="53.6969%" y="85" width="0.0110%" height="15" fill="rgb(226,147,24)" fg:x="9827859" fg:w="2006"/><text x="53.9898%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="54.5860%" y="85" width="0.0136%" height="15" fill="rgb(228,140,40)" fg:x="9990599" fg:w="2494"/><text x="54.8790%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="56.4815%" y="85" width="0.0110%" height="15" fill="rgb(210,187,41)" fg:x="10337521" fg:w="2006"/><text x="56.7745%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="58.2892%" y="85" width="0.0123%" height="15" fill="rgb(212,197,15)" fg:x="10668381" fg:w="2250"/><text x="58.5822%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="59.2354%" y="85" width="0.0110%" height="15" fill="rgb(216,132,10)" fg:x="10841549" fg:w="2006"/><text x="59.5284%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="60.1138%" y="85" width="0.0110%" height="15" fill="rgb(229,14,53)" fg:x="11002323" fg:w="2006"/><text x="60.4068%" y="95.50"></text></g><g><title>next (2,738 instructions, 0.01%)</title><rect x="61.9197%" y="85" width="0.0150%" height="15" fill="rgb(247,3,2)" fg:x="11332847" fg:w="2738"/><text x="62.2127%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="62.8283%" y="85" width="0.0110%" height="15" fill="rgb(251,169,22)" fg:x="11499149" fg:w="2006"/><text x="63.1213%" y="95.50"></text></g><g><title>Array_init (254,973 instructions, 1.39%)</title><rect x="63.3492%" y="37" width="1.3931%" height="15" fill="rgb(238,154,21)" fg:x="11594469" fg:w="254973"/><text x="63.6421%" y="47.50"></text></g><g><title>reserve (1,517,287 instructions, 8.29%)</title><rect x="63.3491%" y="53" width="8.2901%" height="15" fill="rgb(213,43,49)" fg:x="11594457" fg:w="1517287"/><text x="63.6421%" y="63.50">reserve</text></g><g><title>add (1,517,603 instructions, 8.29%)</title><rect x="63.3481%" y="69" width="8.2918%" height="15" fill="rgb(234,205,37)" fg:x="11594274" fg:w="1517603"/><text x="63.6411%" y="79.50">add</text></g><g><title>anon-func-199.17 (1,517,644 instructions, 8.29%)</title><rect x="63.3480%" y="85" width="8.2920%" height="15" fill="rgb(214,107,29)" fg:x="11594257" fg:w="1517644"/><text x="63.6410%" y="95.50">anon-func..</text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="71.9555%" y="85" width="0.0123%" height="15" fill="rgb(237,40,26)" fg:x="13169643" fg:w="2250"/><text x="72.2485%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="73.9228%" y="85" width="0.0123%" height="15" fill="rgb(207,170,23)" fg:x="13529715" fg:w="2250"/><text x="74.2158%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="74.8533%" y="85" width="0.0123%" height="15" fill="rgb(216,90,54)" fg:x="13700023" fg:w="2250"/><text x="75.1463%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="75.7901%" y="85" width="0.0123%" height="15" fill="rgb(220,75,54)" fg:x="13871477" fg:w="2250"/><text x="76.0831%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="76.7711%" y="85" width="0.0110%" height="15" fill="rgb(238,175,50)" fg:x="14051017" fg:w="2006"/><text x="77.0641%" y="95.50"></text></g><g><title>next (2,738 instructions, 0.01%)</title><rect x="77.7895%" y="85" width="0.0150%" height="15" fill="rgb(209,221,9)" fg:x="14237411" fg:w="2738"/><text x="78.0825%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="78.7590%" y="85" width="0.0110%" height="15" fill="rgb(212,204,19)" fg:x="14414849" fg:w="2006"/><text x="79.0519%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="79.7098%" y="85" width="0.0110%" height="15" fill="rgb(229,58,27)" fg:x="14588871" fg:w="2006"/><text x="80.0028%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="81.4669%" y="85" width="0.0123%" height="15" fill="rgb(245,151,7)" fg:x="14910469" fg:w="2250"/><text x="81.7599%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="83.3039%" y="85" width="0.0123%" height="15" fill="rgb(249,224,17)" fg:x="15246687" fg:w="2250"/><text x="83.5969%" y="95.50"></text></g><g><title>next (3,226 instructions, 0.02%)</title><rect x="85.2428%" y="85" width="0.0176%" height="15" fill="rgb(223,40,3)" fg:x="15601551" fg:w="3226"/><text x="85.5358%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="87.0466%" y="85" width="0.0123%" height="15" fill="rgb(223,59,6)" fg:x="15931683" fg:w="2250"/><text x="87.3395%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="87.9393%" y="85" width="0.0110%" height="15" fill="rgb(214,88,40)" fg:x="16095075" fg:w="2006"/><text x="88.2323%" y="95.50"></text></g><g><title>next (2,250 instructions, 0.01%)</title><rect x="88.8923%" y="85" width="0.0123%" height="15" fill="rgb(225,91,34)" fg:x="16269505" fg:w="2250"/><text x="89.1853%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="89.8209%" y="85" width="0.0110%" height="15" fill="rgb(238,3,32)" fg:x="16439463" fg:w="2006"/><text x="90.1139%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="90.6678%" y="85" width="0.0110%" height="15" fill="rgb(220,147,41)" fg:x="16594459" fg:w="2006"/><text x="90.9608%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="91.5567%" y="85" width="0.0110%" height="15" fill="rgb(243,62,24)" fg:x="16757151" fg:w="2006"/><text x="91.8497%" y="95.50"></text></g><g><title>next (2,494 instructions, 0.01%)</title><rect x="92.4265%" y="85" width="0.0136%" height="15" fill="rgb(248,125,35)" fg:x="16916349" fg:w="2494"/><text x="92.7195%" y="95.50"></text></g><g><title>next (2,006 instructions, 0.01%)</title><rect x="94.2476%" y="85" width="0.0110%" height="15" fill="rgb(249,161,35)" fg:x="17249659" fg:w="2006"/><text x="94.5406%" y="95.50"></text></g><g><title>Array_init (382,415 instructions, 2.09%)</title><rect x="95.0017%" y="37" width="2.0894%" height="15" fill="rgb(234,212,46)" fg:x="17387681" fg:w="382415"/><text x="95.2947%" y="47.50">A..</text></g><g><title>all (18,302,485 instructions, 100%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(235,84,10)" fg:x="0" fg:w="18302485"/><text x="0.2930%" y="143.50"></text></g><g><title>pre_upgrade (18,302,485 instructions, 100.00%)</title><rect x="0.0000%" y="117" width="100.0000%" height="15" fill="rgb(208,125,48)" fg:x="0" fg:w="18302485"/><text x="0.2930%" y="127.50">pre_upgrade</text></g><g><title>preupgrade (18,302,377 instructions, 100.00%)</title><rect x="0.0006%" y="101" width="99.9994%" height="15" fill="rgb(249,59,52)" fg:x="108" fg:w="18302377"/><text x="0.2936%" y="111.50">preupgrade</text></g><g><title>anon-func-199.17 (915,016 instructions, 5.00%)</title><rect x="95.0006%" y="85" width="4.9994%" height="15" fill="rgb(222,212,15)" fg:x="17387469" fg:w="915016"/><text x="95.2936%" y="95.50">anon-..</text></g><g><title>add (914,999 instructions, 5.00%)</title><rect x="95.0007%" y="69" width="4.9993%" height="15" fill="rgb(248,198,4)" fg:x="17387486" fg:w="914999"/><text x="95.2937%" y="79.50">add</text></g><g><title>reserve (914,816 instructions, 5.00%)</title><rect x="95.0017%" y="53" width="4.9983%" height="15" fill="rgb(247,214,18)" fg:x="17387669" fg:w="914816"/><text x="95.2947%" y="63.50">reser..</text></g></svg></svg>