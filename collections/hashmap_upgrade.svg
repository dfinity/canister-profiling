<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="182" onload="init(evt)" viewBox="0 0 1024 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap.upgrade (incomplete)</text><text id="details" fill="rgb(0,0,0)" x="10" y="165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="165.00"> </text><svg id="frames" x="10" width="1004" total_samples="17523216"><g><title>add (1,971 instructions, 0.01%)</title><rect x="0.0510%" y="69" width="0.0112%" height="15" fill="rgb(233,67,14)" fg:x="8932" fg:w="1971"/><text x="0.3439%" y="79.50"></text></g><g><title>anon-func-199.17 (2,012 instructions, 0.01%)</title><rect x="0.0509%" y="85" width="0.0115%" height="15" fill="rgb(245,125,36)" fg:x="8915" fg:w="2012"/><text x="0.3438%" y="95.50"></text></g><g><title>reserve (2,405 instructions, 0.01%)</title><rect x="0.0837%" y="53" width="0.0137%" height="15" fill="rgb(225,199,6)" fg:x="14667" fg:w="2405"/><text x="0.3767%" y="63.50"></text></g><g><title>add (2,721 instructions, 0.02%)</title><rect x="0.0827%" y="69" width="0.0155%" height="15" fill="rgb(244,71,6)" fg:x="14484" fg:w="2721"/><text x="0.3756%" y="79.50"></text></g><g><title>anon-func-199.17 (2,762 instructions, 0.02%)</title><rect x="0.0826%" y="85" width="0.0158%" height="15" fill="rgb(225,62,9)" fg:x="14467" fg:w="2762"/><text x="0.3755%" y="95.50"></text></g><g><title>reserve (3,537 instructions, 0.02%)</title><rect x="0.1244%" y="53" width="0.0202%" height="15" fill="rgb(246,139,53)" fg:x="21794" fg:w="3537"/><text x="0.4173%" y="63.50"></text></g><g><title>add (3,853 instructions, 0.02%)</title><rect x="0.1233%" y="69" width="0.0220%" height="15" fill="rgb(243,161,46)" fg:x="21611" fg:w="3853"/><text x="0.4163%" y="79.50"></text></g><g><title>anon-func-199.17 (3,894 instructions, 0.02%)</title><rect x="0.1232%" y="85" width="0.0222%" height="15" fill="rgb(236,153,7)" fg:x="21594" fg:w="3894"/><text x="0.4162%" y="95.50"></text></g><g><title>reserve (5,287 instructions, 0.03%)</title><rect x="0.1967%" y="53" width="0.0302%" height="15" fill="rgb(248,42,35)" fg:x="34468" fg:w="5287"/><text x="0.4897%" y="63.50"></text></g><g><title>add (5,603 instructions, 0.03%)</title><rect x="0.1957%" y="69" width="0.0320%" height="15" fill="rgb(250,17,31)" fg:x="34285" fg:w="5603"/><text x="0.4886%" y="79.50"></text></g><g><title>anon-func-199.17 (5,644 instructions, 0.03%)</title><rect x="0.1956%" y="85" width="0.0322%" height="15" fill="rgb(248,138,14)" fg:x="34268" fg:w="5644"/><text x="0.4885%" y="95.50"></text></g><g><title>reserve (7,905 instructions, 0.05%)</title><rect x="0.3013%" y="53" width="0.0451%" height="15" fill="rgb(228,161,3)" fg:x="52793" fg:w="7905"/><text x="0.5942%" y="63.50"></text></g><g><title>add (8,221 instructions, 0.05%)</title><rect x="0.3002%" y="69" width="0.0469%" height="15" fill="rgb(248,116,17)" fg:x="52610" fg:w="8221"/><text x="0.5932%" y="79.50"></text></g><g><title>anon-func-199.17 (8,262 instructions, 0.05%)</title><rect x="0.3001%" y="85" width="0.0471%" height="15" fill="rgb(207,78,24)" fg:x="52593" fg:w="8262"/><text x="0.5931%" y="95.50"></text></g><g><title>Array_init (2,049 instructions, 0.01%)</title><rect x="0.4550%" y="37" width="0.0117%" height="15" fill="rgb(234,99,48)" fg:x="79728" fg:w="2049"/><text x="0.7480%" y="47.50"></text></g><g><title>reserve (11,787 instructions, 0.07%)</title><rect x="0.4549%" y="53" width="0.0673%" height="15" fill="rgb(242,22,26)" fg:x="79716" fg:w="11787"/><text x="0.7479%" y="63.50"></text></g><g><title>add (12,103 instructions, 0.07%)</title><rect x="0.4539%" y="69" width="0.0691%" height="15" fill="rgb(227,78,32)" fg:x="79533" fg:w="12103"/><text x="0.7468%" y="79.50"></text></g><g><title>anon-func-199.17 (12,144 instructions, 0.07%)</title><rect x="0.4538%" y="85" width="0.0693%" height="15" fill="rgb(226,189,43)" fg:x="79516" fg:w="12144"/><text x="0.7467%" y="95.50"></text></g><g><title>Array_init (3,029 instructions, 0.02%)</title><rect x="0.6815%" y="37" width="0.0173%" height="15" fill="rgb(227,218,35)" fg:x="119417" fg:w="3029"/><text x="0.9744%" y="47.50"></text></g><g><title>reserve (17,655 instructions, 0.10%)</title><rect x="0.6814%" y="53" width="0.1008%" height="15" fill="rgb(206,111,40)" fg:x="119405" fg:w="17655"/><text x="0.9744%" y="63.50"></text></g><g><title>add (17,971 instructions, 0.10%)</title><rect x="0.6804%" y="69" width="0.1026%" height="15" fill="rgb(208,217,22)" fg:x="119222" fg:w="17971"/><text x="0.9733%" y="79.50"></text></g><g><title>anon-func-199.17 (18,012 instructions, 0.10%)</title><rect x="0.6803%" y="85" width="0.1028%" height="15" fill="rgb(248,20,20)" fg:x="119205" fg:w="18012"/><text x="0.9732%" y="95.50"></text></g><g><title>Array_init (4,499 instructions, 0.03%)</title><rect x="0.9936%" y="37" width="0.0257%" height="15" fill="rgb(239,155,16)" fg:x="174111" fg:w="4499"/><text x="1.2866%" y="47.50"></text></g><g><title>reserve (26,405 instructions, 0.15%)</title><rect x="0.9935%" y="53" width="0.1507%" height="15" fill="rgb(238,171,46)" fg:x="174099" fg:w="26405"/><text x="1.2865%" y="63.50"></text></g><g><title>add (26,721 instructions, 0.15%)</title><rect x="0.9925%" y="69" width="0.1525%" height="15" fill="rgb(248,11,36)" fg:x="173916" fg:w="26721"/><text x="1.2855%" y="79.50"></text></g><g><title>anon-func-199.17 (26,762 instructions, 0.15%)</title><rect x="0.9924%" y="85" width="0.1527%" height="15" fill="rgb(220,148,37)" fg:x="173899" fg:w="26762"/><text x="1.2854%" y="95.50"></text></g><g><title>Array_init (6,711 instructions, 0.04%)</title><rect x="1.4416%" y="37" width="0.0383%" height="15" fill="rgb(218,144,42)" fg:x="252614" fg:w="6711"/><text x="1.7346%" y="47.50"></text></g><g><title>reserve (39,537 instructions, 0.23%)</title><rect x="1.4415%" y="53" width="0.2256%" height="15" fill="rgb(245,20,20)" fg:x="252602" fg:w="39537"/><text x="1.7345%" y="63.50"></text></g><g><title>add (39,853 instructions, 0.23%)</title><rect x="1.4405%" y="69" width="0.2274%" height="15" fill="rgb(240,111,48)" fg:x="252419" fg:w="39853"/><text x="1.7335%" y="79.50"></text></g><g><title>anon-func-199.17 (39,894 instructions, 0.23%)</title><rect x="1.4404%" y="85" width="0.2277%" height="15" fill="rgb(237,225,32)" fg:x="252402" fg:w="39894"/><text x="1.7334%" y="95.50"></text></g><g><title>Array_init (10,029 instructions, 0.06%)</title><rect x="2.1607%" y="37" width="0.0572%" height="15" fill="rgb(228,161,46)" fg:x="378622" fg:w="10029"/><text x="2.4537%" y="47.50"></text></g><g><title>reserve (59,287 instructions, 0.34%)</title><rect x="2.1606%" y="53" width="0.3383%" height="15" fill="rgb(235,196,21)" fg:x="378610" fg:w="59287"/><text x="2.4536%" y="63.50"></text></g><g><title>add (59,603 instructions, 0.34%)</title><rect x="2.1596%" y="69" width="0.3401%" height="15" fill="rgb(250,133,21)" fg:x="378427" fg:w="59603"/><text x="2.4525%" y="79.50"></text></g><g><title>anon-func-199.17 (59,644 instructions, 0.34%)</title><rect x="2.1595%" y="85" width="0.3404%" height="15" fill="rgb(236,94,32)" fg:x="378410" fg:w="59644"/><text x="2.4524%" y="95.50"></text></g><g><title>Array_init (14,999 instructions, 0.09%)</title><rect x="3.2403%" y="37" width="0.0856%" height="15" fill="rgb(219,176,25)" fg:x="567803" fg:w="14999"/><text x="3.5333%" y="47.50"></text></g><g><title>reserve (88,905 instructions, 0.51%)</title><rect x="3.2402%" y="53" width="0.5074%" height="15" fill="rgb(211,17,43)" fg:x="567791" fg:w="88905"/><text x="3.5332%" y="63.50"></text></g><g><title>add (89,221 instructions, 0.51%)</title><rect x="3.2392%" y="69" width="0.5092%" height="15" fill="rgb(220,75,23)" fg:x="567608" fg:w="89221"/><text x="3.5321%" y="79.50"></text></g><g><title>anon-func-199.17 (89,262 instructions, 0.51%)</title><rect x="3.2391%" y="85" width="0.5094%" height="15" fill="rgb(215,122,32)" fg:x="567591" fg:w="89262"/><text x="3.5320%" y="95.50"></text></g><g><title>Array_init (22,461 instructions, 0.13%)</title><rect x="4.8383%" y="37" width="0.1282%" height="15" fill="rgb(218,57,38)" fg:x="847818" fg:w="22461"/><text x="5.1312%" y="47.50"></text></g><g><title>reserve (133,287 instructions, 0.76%)</title><rect x="4.8382%" y="53" width="0.7606%" height="15" fill="rgb(233,208,46)" fg:x="847806" fg:w="133287"/><text x="5.1312%" y="63.50"></text></g><g><title>add (133,603 instructions, 0.76%)</title><rect x="4.8371%" y="69" width="0.7624%" height="15" fill="rgb(221,35,50)" fg:x="847623" fg:w="133603"/><text x="5.1301%" y="79.50"></text></g><g><title>anon-func-199.17 (133,644 instructions, 0.76%)</title><rect x="4.8370%" y="85" width="0.7627%" height="15" fill="rgb(229,213,29)" fg:x="847606" fg:w="133644"/><text x="5.1300%" y="95.50"></text></g><g><title>Array_init (33,647 instructions, 0.19%)</title><rect x="7.1772%" y="37" width="0.1920%" height="15" fill="rgb(229,110,40)" fg:x="1257683" fg:w="33647"/><text x="7.4702%" y="47.50"></text></g><g><title>reserve (199,905 instructions, 1.14%)</title><rect x="7.1772%" y="53" width="1.1408%" height="15" fill="rgb(247,206,19)" fg:x="1257671" fg:w="199905"/><text x="7.4701%" y="63.50"></text></g><g><title>add (200,221 instructions, 1.14%)</title><rect x="7.1761%" y="69" width="1.1426%" height="15" fill="rgb(216,229,45)" fg:x="1257488" fg:w="200221"/><text x="7.4691%" y="79.50"></text></g><g><title>anon-func-199.17 (200,262 instructions, 1.14%)</title><rect x="7.1760%" y="85" width="1.1428%" height="15" fill="rgb(205,184,31)" fg:x="1257471" fg:w="200262"/><text x="7.4690%" y="95.50"></text></g><g><title>Array_init (50,433 instructions, 0.29%)</title><rect x="10.7933%" y="37" width="0.2878%" height="15" fill="rgb(213,91,10)" fg:x="1891336" fg:w="50433"/><text x="11.0863%" y="47.50"></text></g><g><title>reserve (299,787 instructions, 1.71%)</title><rect x="10.7932%" y="53" width="1.7108%" height="15" fill="rgb(250,49,8)" fg:x="1891324" fg:w="299787"/><text x="11.0862%" y="63.50"></text></g><g><title>add (300,103 instructions, 1.71%)</title><rect x="10.7922%" y="69" width="1.7126%" height="15" fill="rgb(207,26,8)" fg:x="1891141" fg:w="300103"/><text x="11.0852%" y="79.50"></text></g><g><title>anon-func-199.17 (300,144 instructions, 1.71%)</title><rect x="10.7921%" y="85" width="1.7128%" height="15" fill="rgb(224,2,13)" fg:x="1891124" fg:w="300144"/><text x="11.0851%" y="95.50"></text></g><g><title>Array_init (75,605 instructions, 0.43%)</title><rect x="16.1868%" y="37" width="0.4315%" height="15" fill="rgb(219,108,27)" fg:x="2836443" fg:w="75605"/><text x="16.4797%" y="47.50"></text></g><g><title>reserve (449,655 instructions, 2.57%)</title><rect x="16.1867%" y="53" width="2.5661%" height="15" fill="rgb(240,89,32)" fg:x="2836431" fg:w="449655"/><text x="16.4797%" y="63.50">r..</text></g><g><title>add (449,971 instructions, 2.57%)</title><rect x="16.1857%" y="69" width="2.5679%" height="15" fill="rgb(248,205,3)" fg:x="2836248" fg:w="449971"/><text x="16.4786%" y="79.50">a..</text></g><g><title>anon-func-199.17 (450,012 instructions, 2.57%)</title><rect x="16.1856%" y="85" width="2.5681%" height="15" fill="rgb(236,197,47)" fg:x="2836231" fg:w="450012"/><text x="16.4785%" y="95.50">a..</text></g><g><title>next.1 (1,931 instructions, 0.01%)</title><rect x="20.1191%" y="85" width="0.0110%" height="15" fill="rgb(244,185,52)" fg:x="3525521" fg:w="1931"/><text x="20.4121%" y="95.50"></text></g><g><title>Array_init (113,363 instructions, 0.65%)</title><rect x="24.2666%" y="37" width="0.6469%" height="15" fill="rgb(210,206,23)" fg:x="4252285" fg:w="113363"/><text x="24.5595%" y="47.50"></text></g><g><title>reserve (674,405 instructions, 3.85%)</title><rect x="24.2665%" y="53" width="3.8486%" height="15" fill="rgb(251,177,30)" fg:x="4252273" fg:w="674405"/><text x="24.5595%" y="63.50">res..</text></g><g><title>add (674,721 instructions, 3.85%)</title><rect x="24.2655%" y="69" width="3.8504%" height="15" fill="rgb(243,27,45)" fg:x="4252090" fg:w="674721"/><text x="24.5584%" y="79.50">add</text></g><g><title>anon-func-199.17 (674,762 instructions, 3.85%)</title><rect x="24.2654%" y="85" width="3.8507%" height="15" fill="rgb(248,141,51)" fg:x="4252073" fg:w="674762"/><text x="24.5583%" y="95.50">ano..</text></g><g><title>next.1 (1,931 instructions, 0.01%)</title><rect x="34.6004%" y="85" width="0.0110%" height="15" fill="rgb(235,102,15)" fg:x="6063098" fg:w="1931"/><text x="34.8933%" y="95.50"></text></g><g><title>Array_init (170,007 instructions, 0.97%)</title><rect x="36.3937%" y="37" width="0.9702%" height="15" fill="rgb(214,164,53)" fg:x="6377338" fg:w="170007"/><text x="36.6866%" y="47.50"></text></g><g><title>reserve (1,011,537 instructions, 5.77%)</title><rect x="36.3936%" y="53" width="5.7726%" height="15" fill="rgb(228,18,51)" fg:x="6377326" fg:w="1011537"/><text x="36.6866%" y="63.50">reserve</text></g><g><title>add (1,011,853 instructions, 5.77%)</title><rect x="36.3925%" y="69" width="5.7744%" height="15" fill="rgb(205,211,11)" fg:x="6377143" fg:w="1011853"/><text x="36.6855%" y="79.50">add</text></g><g><title>anon-func-199.17 (1,011,894 instructions, 5.77%)</title><rect x="36.3924%" y="85" width="5.7746%" height="15" fill="rgb(208,63,6)" fg:x="6377126" fg:w="1011894"/><text x="36.6854%" y="95.50">anon-f..</text></g><g><title>next.1 (1,817 instructions, 0.01%)</title><rect x="43.8806%" y="85" width="0.0104%" height="15" fill="rgb(245,76,14)" fg:x="7689290" fg:w="1817"/><text x="44.1736%" y="95.50"></text></g><g><title>next.1 (1,817 instructions, 0.01%)</title><rect x="45.3388%" y="85" width="0.0104%" height="15" fill="rgb(234,176,34)" fg:x="7944818" fg:w="1817"/><text x="45.6318%" y="95.50"></text></g><g><title>next.1 (1,817 instructions, 0.01%)</title><rect x="45.7717%" y="85" width="0.0104%" height="15" fill="rgb(243,156,42)" fg:x="8020672" fg:w="1817"/><text x="46.0647%" y="95.50"></text></g><g><title>next.1 (2,045 instructions, 0.01%)</title><rect x="50.4335%" y="85" width="0.0117%" height="15" fill="rgb(237,182,10)" fg:x="8837564" fg:w="2045"/><text x="50.7264%" y="95.50"></text></g><g><title>next.1 (2,501 instructions, 0.01%)</title><rect x="52.8703%" y="85" width="0.0143%" height="15" fill="rgb(244,117,0)" fg:x="9264583" fg:w="2501"/><text x="53.1633%" y="95.50"></text></g><g><title>Array_init (254,973 instructions, 1.46%)</title><rect x="54.6706%" y="37" width="1.4551%" height="15" fill="rgb(239,91,50)" fg:x="9580048" fg:w="254973"/><text x="54.9636%" y="47.50"></text></g><g><title>reserve (1,517,287 instructions, 8.66%)</title><rect x="54.6705%" y="53" width="8.6587%" height="15" fill="rgb(206,38,9)" fg:x="9580036" fg:w="1517287"/><text x="54.9635%" y="63.50">reserve</text></g><g><title>add (1,517,603 instructions, 8.66%)</title><rect x="54.6695%" y="69" width="8.6605%" height="15" fill="rgb(205,25,10)" fg:x="9579853" fg:w="1517603"/><text x="54.9625%" y="79.50">add</text></g><g><title>anon-func-199.17 (1,517,644 instructions, 8.66%)</title><rect x="54.6694%" y="85" width="8.6608%" height="15" fill="rgb(206,224,7)" fg:x="9579836" fg:w="1517644"/><text x="54.9624%" y="95.50">anon-func-..</text></g><g><title>next.1 (1,817 instructions, 0.01%)</title><rect x="67.6461%" y="85" width="0.0104%" height="15" fill="rgb(227,157,10)" fg:x="11853778" fg:w="1817"/><text x="67.9391%" y="95.50"></text></g><g><title>next.1 (2,615 instructions, 0.01%)</title><rect x="77.0103%" y="85" width="0.0149%" height="15" fill="rgb(214,157,37)" fg:x="13494688" fg:w="2615"/><text x="77.3033%" y="95.50"></text></g><g><title>next.1 (2,387 instructions, 0.01%)</title><rect x="78.3389%" y="85" width="0.0136%" height="15" fill="rgb(209,180,35)" fg:x="13727488" fg:w="2387"/><text x="78.6318%" y="95.50"></text></g><g><title>Array_init (382,415 instructions, 2.18%)</title><rect x="81.9324%" y="37" width="2.1823%" height="15" fill="rgb(216,174,49)" fg:x="14357187" fg:w="382415"/><text x="82.2253%" y="47.50">A..</text></g><g><title>reserve (2,275,905 instructions, 12.99%)</title><rect x="81.9323%" y="53" width="12.9879%" height="15" fill="rgb(205,96,20)" fg:x="14357175" fg:w="2275905"/><text x="82.2253%" y="63.50">reserve</text></g><g><title>add (2,276,221 instructions, 12.99%)</title><rect x="81.9313%" y="69" width="12.9897%" height="15" fill="rgb(214,220,39)" fg:x="14356992" fg:w="2276221"/><text x="82.2242%" y="79.50">add</text></g><g><title>anon-func-199.17 (2,276,262 instructions, 12.99%)</title><rect x="81.9312%" y="85" width="12.9900%" height="15" fill="rgb(245,126,30)" fg:x="14356975" fg:w="2276262"/><text x="82.2241%" y="95.50">anon-func-199.17</text></g><g><title>all (17,523,216 instructions, 100%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(215,88,33)" fg:x="0" fg:w="17523216"/><text x="0.2930%" y="143.50"></text></g><g><title>pre_upgrade (17,523,216 instructions, 100.00%)</title><rect x="0.0000%" y="117" width="100.0000%" height="15" fill="rgb(210,1,49)" fg:x="0" fg:w="17523216"/><text x="0.2930%" y="127.50">pre_upgrade</text></g><g><title>preupgrade (17,523,108 instructions, 100.00%)</title><rect x="0.0006%" y="101" width="99.9994%" height="15" fill="rgb(207,133,3)" fg:x="108" fg:w="17523108"/><text x="0.2936%" y="111.50">preupgrade</text></g></svg></svg>