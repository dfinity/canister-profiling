<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="182" onload="init(evt)" viewBox="0 0 1024 182" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="182" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">hashmap.upgrade (incomplete)</text><text id="details" fill="rgb(0,0,0)" x="10" y="165.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="165.00"> </text><svg id="frames" x="10" width="1004" total_samples="17877322"><g><title>add (1,993 instructions, 0.01%)</title><rect x="0.0507%" y="69" width="0.0111%" height="15" fill="rgb(235,80,0)" fg:x="9060" fg:w="1993"/><text x="0.3436%" y="79.50"></text></g><g><title>@anon-func-230.17 (2,034 instructions, 0.01%)</title><rect x="0.0506%" y="85" width="0.0114%" height="15" fill="rgb(221,117,53)" fg:x="9043" fg:w="2034"/><text x="0.3436%" y="95.50"></text></g><g><title>reserve (2,415 instructions, 0.01%)</title><rect x="0.0836%" y="53" width="0.0135%" height="15" fill="rgb(239,48,47)" fg:x="14943" fg:w="2415"/><text x="0.3766%" y="63.50"></text></g><g><title>add (2,743 instructions, 0.02%)</title><rect x="0.0826%" y="69" width="0.0153%" height="15" fill="rgb(227,191,52)" fg:x="14760" fg:w="2743"/><text x="0.3755%" y="79.50"></text></g><g><title>@anon-func-230.17 (2,784 instructions, 0.02%)</title><rect x="0.0825%" y="85" width="0.0156%" height="15" fill="rgb(241,118,1)" fg:x="14743" fg:w="2784"/><text x="0.3754%" y="95.50"></text></g><g><title>reserve (3,547 instructions, 0.02%)</title><rect x="0.1243%" y="53" width="0.0198%" height="15" fill="rgb(240,85,3)" fg:x="22230" fg:w="3547"/><text x="0.4173%" y="63.50"></text></g><g><title>add (3,875 instructions, 0.02%)</title><rect x="0.1233%" y="69" width="0.0217%" height="15" fill="rgb(237,68,37)" fg:x="22047" fg:w="3875"/><text x="0.4163%" y="79.50"></text></g><g><title>@anon-func-230.17 (3,916 instructions, 0.02%)</title><rect x="0.1232%" y="85" width="0.0219%" height="15" fill="rgb(212,9,20)" fg:x="22030" fg:w="3916"/><text x="0.4162%" y="95.50"></text></g><g><title>reserve (5,297 instructions, 0.03%)</title><rect x="0.1971%" y="53" width="0.0296%" height="15" fill="rgb(218,84,17)" fg:x="35244" fg:w="5297"/><text x="0.4901%" y="63.50"></text></g><g><title>add (5,625 instructions, 0.03%)</title><rect x="0.1961%" y="69" width="0.0315%" height="15" fill="rgb(235,147,20)" fg:x="35061" fg:w="5625"/><text x="0.4891%" y="79.50"></text></g><g><title>@anon-func-230.17 (5,666 instructions, 0.03%)</title><rect x="0.1960%" y="85" width="0.0317%" height="15" fill="rgb(208,224,1)" fg:x="35044" fg:w="5666"/><text x="0.4890%" y="95.50"></text></g><g><title>reserve (7,915 instructions, 0.04%)</title><rect x="0.3023%" y="53" width="0.0443%" height="15" fill="rgb(232,97,50)" fg:x="54041" fg:w="7915"/><text x="0.5953%" y="63.50"></text></g><g><title>add (8,243 instructions, 0.05%)</title><rect x="0.3013%" y="69" width="0.0461%" height="15" fill="rgb(238,15,45)" fg:x="53858" fg:w="8243"/><text x="0.5942%" y="79.50"></text></g><g><title>@anon-func-230.17 (8,284 instructions, 0.05%)</title><rect x="0.3012%" y="85" width="0.0463%" height="15" fill="rgb(231,46,18)" fg:x="53841" fg:w="8284"/><text x="0.5941%" y="95.50"></text></g><g><title>Array_init (2,059 instructions, 0.01%)</title><rect x="0.4568%" y="37" width="0.0115%" height="15" fill="rgb(254,169,10)" fg:x="81658" fg:w="2059"/><text x="0.7497%" y="47.50"></text></g><g><title>reserve (11,797 instructions, 0.07%)</title><rect x="0.4567%" y="53" width="0.0660%" height="15" fill="rgb(243,169,30)" fg:x="81646" fg:w="11797"/><text x="0.7497%" y="63.50"></text></g><g><title>add (12,125 instructions, 0.07%)</title><rect x="0.4557%" y="69" width="0.0678%" height="15" fill="rgb(236,90,49)" fg:x="81463" fg:w="12125"/><text x="0.7486%" y="79.50"></text></g><g><title>@anon-func-230.17 (12,166 instructions, 0.07%)</title><rect x="0.4556%" y="85" width="0.0681%" height="15" fill="rgb(218,80,15)" fg:x="81446" fg:w="12166"/><text x="0.7486%" y="95.50"></text></g><g><title>Array_init (3,039 instructions, 0.02%)</title><rect x="0.6843%" y="37" width="0.0170%" height="15" fill="rgb(222,115,37)" fg:x="122329" fg:w="3039"/><text x="0.9772%" y="47.50"></text></g><g><title>reserve (17,665 instructions, 0.10%)</title><rect x="0.6842%" y="53" width="0.0988%" height="15" fill="rgb(227,0,6)" fg:x="122317" fg:w="17665"/><text x="0.9772%" y="63.50"></text></g><g><title>add (17,993 instructions, 0.10%)</title><rect x="0.6832%" y="69" width="0.1006%" height="15" fill="rgb(217,189,13)" fg:x="122134" fg:w="17993"/><text x="0.9761%" y="79.50"></text></g><g><title>@anon-func-230.17 (18,034 instructions, 0.10%)</title><rect x="0.6831%" y="85" width="0.1009%" height="15" fill="rgb(220,74,19)" fg:x="122117" fg:w="18034"/><text x="0.9761%" y="95.50"></text></g><g><title>Array_init (4,509 instructions, 0.03%)</title><rect x="0.9970%" y="37" width="0.0252%" height="15" fill="rgb(224,81,18)" fg:x="178245" fg:w="4509"/><text x="1.2900%" y="47.50"></text></g><g><title>reserve (26,415 instructions, 0.15%)</title><rect x="0.9970%" y="53" width="0.1478%" height="15" fill="rgb(245,178,48)" fg:x="178233" fg:w="26415"/><text x="1.2899%" y="63.50"></text></g><g><title>add (26,743 instructions, 0.15%)</title><rect x="0.9960%" y="69" width="0.1496%" height="15" fill="rgb(207,78,24)" fg:x="178050" fg:w="26743"/><text x="1.2889%" y="79.50"></text></g><g><title>@anon-func-230.17 (26,784 instructions, 0.15%)</title><rect x="0.9959%" y="85" width="0.1498%" height="15" fill="rgb(223,222,30)" fg:x="178033" fg:w="26784"/><text x="1.2888%" y="95.50"></text></g><g><title>Array_init (6,721 instructions, 0.04%)</title><rect x="1.4454%" y="37" width="0.0376%" height="15" fill="rgb(234,101,12)" fg:x="258396" fg:w="6721"/><text x="1.7384%" y="47.50"></text></g><g><title>reserve (39,547 instructions, 0.22%)</title><rect x="1.4453%" y="53" width="0.2212%" height="15" fill="rgb(209,80,46)" fg:x="258384" fg:w="39547"/><text x="1.7383%" y="63.50"></text></g><g><title>add (39,875 instructions, 0.22%)</title><rect x="1.4443%" y="69" width="0.2230%" height="15" fill="rgb(228,79,14)" fg:x="258201" fg:w="39875"/><text x="1.7373%" y="79.50"></text></g><g><title>@anon-func-230.17 (39,916 instructions, 0.22%)</title><rect x="1.4442%" y="85" width="0.2233%" height="15" fill="rgb(220,219,34)" fg:x="258184" fg:w="39916"/><text x="1.7372%" y="95.50"></text></g><g><title>Array_init (10,039 instructions, 0.06%)</title><rect x="2.1665%" y="37" width="0.0562%" height="15" fill="rgb(207,80,21)" fg:x="387306" fg:w="10039"/><text x="2.4594%" y="47.50"></text></g><g><title>reserve (59,297 instructions, 0.33%)</title><rect x="2.1664%" y="53" width="0.3317%" height="15" fill="rgb(210,154,44)" fg:x="387294" fg:w="59297"/><text x="2.4594%" y="63.50"></text></g><g><title>add (59,625 instructions, 0.33%)</title><rect x="2.1654%" y="69" width="0.3335%" height="15" fill="rgb(246,44,39)" fg:x="387111" fg:w="59625"/><text x="2.4583%" y="79.50"></text></g><g><title>@anon-func-230.17 (59,666 instructions, 0.33%)</title><rect x="2.1653%" y="85" width="0.3338%" height="15" fill="rgb(252,175,13)" fg:x="387094" fg:w="59666"/><text x="2.4582%" y="95.50"></text></g><g><title>Array_init (15,009 instructions, 0.08%)</title><rect x="3.2491%" y="37" width="0.0840%" height="15" fill="rgb(211,50,39)" fg:x="580847" fg:w="15009"/><text x="3.5420%" y="47.50"></text></g><g><title>reserve (88,915 instructions, 0.50%)</title><rect x="3.2490%" y="53" width="0.4974%" height="15" fill="rgb(231,204,27)" fg:x="580835" fg:w="88915"/><text x="3.5420%" y="63.50"></text></g><g><title>add (89,243 instructions, 0.50%)</title><rect x="3.2480%" y="69" width="0.4992%" height="15" fill="rgb(253,26,34)" fg:x="580652" fg:w="89243"/><text x="3.5409%" y="79.50"></text></g><g><title>@anon-func-230.17 (89,284 instructions, 0.50%)</title><rect x="3.2479%" y="85" width="0.4994%" height="15" fill="rgb(207,139,38)" fg:x="580635" fg:w="89284"/><text x="3.5409%" y="95.50"></text></g><g><title>Array_init (22,471 instructions, 0.13%)</title><rect x="4.8509%" y="37" width="0.1257%" height="15" fill="rgb(248,54,27)" fg:x="867208" fg:w="22471"/><text x="5.1439%" y="47.50"></text></g><g><title>reserve (133,297 instructions, 0.75%)</title><rect x="4.8508%" y="53" width="0.7456%" height="15" fill="rgb(234,25,33)" fg:x="867196" fg:w="133297"/><text x="5.1438%" y="63.50"></text></g><g><title>add (133,625 instructions, 0.75%)</title><rect x="4.8498%" y="69" width="0.7475%" height="15" fill="rgb(249,107,47)" fg:x="867013" fg:w="133625"/><text x="5.1428%" y="79.50"></text></g><g><title>@anon-func-230.17 (133,666 instructions, 0.75%)</title><rect x="4.8497%" y="85" width="0.7477%" height="15" fill="rgb(230,190,31)" fg:x="866996" fg:w="133666"/><text x="5.1427%" y="95.50"></text></g><g><title>Array_init (33,657 instructions, 0.19%)</title><rect x="7.1938%" y="37" width="0.1883%" height="15" fill="rgb(238,173,45)" fg:x="1286053" fg:w="33657"/><text x="7.4867%" y="47.50"></text></g><g><title>reserve (199,915 instructions, 1.12%)</title><rect x="7.1937%" y="53" width="1.1183%" height="15" fill="rgb(222,16,50)" fg:x="1286041" fg:w="199915"/><text x="7.4867%" y="63.50"></text></g><g><title>add (200,243 instructions, 1.12%)</title><rect x="7.1927%" y="69" width="1.1201%" height="15" fill="rgb(251,204,47)" fg:x="1285858" fg:w="200243"/><text x="7.4856%" y="79.50"></text></g><g><title>@anon-func-230.17 (200,284 instructions, 1.12%)</title><rect x="7.1926%" y="85" width="1.1203%" height="15" fill="rgb(225,12,3)" fg:x="1285841" fg:w="200284"/><text x="7.4856%" y="95.50"></text></g><g><title>Array_init (50,443 instructions, 0.28%)</title><rect x="10.8189%" y="37" width="0.2822%" height="15" fill="rgb(214,208,22)" fg:x="1934130" fg:w="50443"/><text x="11.1119%" y="47.50"></text></g><g><title>reserve (299,797 instructions, 1.68%)</title><rect x="10.8188%" y="53" width="1.6770%" height="15" fill="rgb(240,57,32)" fg:x="1934118" fg:w="299797"/><text x="11.1118%" y="63.50"></text></g><g><title>add (300,125 instructions, 1.68%)</title><rect x="10.8178%" y="69" width="1.6788%" height="15" fill="rgb(243,113,48)" fg:x="1933935" fg:w="300125"/><text x="11.1108%" y="79.50"></text></g><g><title>@anon-func-230.17 (300,166 instructions, 1.68%)</title><rect x="10.8177%" y="85" width="1.6790%" height="15" fill="rgb(225,135,30)" fg:x="1933918" fg:w="300166"/><text x="11.1107%" y="95.50"></text></g><g><title>Array_init (75,615 instructions, 0.42%)</title><rect x="16.2253%" y="37" width="0.4230%" height="15" fill="rgb(222,3,53)" fg:x="2900649" fg:w="75615"/><text x="16.5183%" y="47.50"></text></g><g><title>reserve (449,665 instructions, 2.52%)</title><rect x="16.2252%" y="53" width="2.5153%" height="15" fill="rgb(243,142,2)" fg:x="2900637" fg:w="449665"/><text x="16.5182%" y="63.50">r..</text></g><g><title>add (449,993 instructions, 2.52%)</title><rect x="16.2242%" y="69" width="2.5171%" height="15" fill="rgb(233,67,14)" fg:x="2900454" fg:w="449993"/><text x="16.5172%" y="79.50">a..</text></g><g><title>@anon-func-230.17 (450,034 instructions, 2.52%)</title><rect x="16.2241%" y="85" width="2.5173%" height="15" fill="rgb(245,125,36)" fg:x="2900437" fg:w="450034"/><text x="16.5171%" y="95.50">@..</text></g><g><title>next.1 (2,027 instructions, 0.01%)</title><rect x="20.1242%" y="85" width="0.0113%" height="15" fill="rgb(225,199,6)" fg:x="3597669" fg:w="2027"/><text x="20.4172%" y="95.50"></text></g><g><title>Array_init (113,373 instructions, 0.63%)</title><rect x="24.3244%" y="37" width="0.6342%" height="15" fill="rgb(244,71,6)" fg:x="4348558" fg:w="113373"/><text x="24.6174%" y="47.50"></text></g><g><title>reserve (674,415 instructions, 3.77%)</title><rect x="24.3244%" y="53" width="3.7725%" height="15" fill="rgb(225,62,9)" fg:x="4348546" fg:w="674415"/><text x="24.6173%" y="63.50">res..</text></g><g><title>add (674,743 instructions, 3.77%)</title><rect x="24.3233%" y="69" width="3.7743%" height="15" fill="rgb(246,139,53)" fg:x="4348363" fg:w="674743"/><text x="24.6163%" y="79.50">add</text></g><g><title>@anon-func-230.17 (674,784 instructions, 3.77%)</title><rect x="24.3233%" y="85" width="3.7745%" height="15" fill="rgb(243,161,46)" fg:x="4348346" fg:w="674784"/><text x="24.6162%" y="95.50">@an..</text></g><g><title>next.1 (2,027 instructions, 0.01%)</title><rect x="34.6644%" y="85" width="0.0113%" height="15" fill="rgb(236,153,7)" fg:x="6197062" fg:w="2027"/><text x="34.9573%" y="95.50"></text></g><g><title>Array_init (170,017 instructions, 0.95%)</title><rect x="36.4804%" y="37" width="0.9510%" height="15" fill="rgb(248,42,35)" fg:x="6521718" fg:w="170017"/><text x="36.7734%" y="47.50"></text></g><g><title>reserve (1,011,547 instructions, 5.66%)</title><rect x="36.4803%" y="53" width="5.6583%" height="15" fill="rgb(250,17,31)" fg:x="6521706" fg:w="1011547"/><text x="36.7733%" y="63.50">reserve</text></g><g><title>add (1,011,875 instructions, 5.66%)</title><rect x="36.4793%" y="69" width="5.6601%" height="15" fill="rgb(248,138,14)" fg:x="6521523" fg:w="1011875"/><text x="36.7723%" y="79.50">add</text></g><g><title>@anon-func-230.17 (1,011,916 instructions, 5.66%)</title><rect x="36.4792%" y="85" width="5.6603%" height="15" fill="rgb(228,161,3)" fg:x="6521506" fg:w="1011916"/><text x="36.7722%" y="95.50">@anon-..</text></g><g><title>next.1 (1,907 instructions, 0.01%)</title><rect x="43.8752%" y="85" width="0.0107%" height="15" fill="rgb(248,116,17)" fg:x="7843711" fg:w="1907"/><text x="44.1682%" y="95.50"></text></g><g><title>next.1 (1,907 instructions, 0.01%)</title><rect x="45.3527%" y="85" width="0.0107%" height="15" fill="rgb(207,78,24)" fg:x="8107849" fg:w="1907"/><text x="45.6457%" y="95.50"></text></g><g><title>next.1 (1,907 instructions, 0.01%)</title><rect x="45.7911%" y="85" width="0.0107%" height="15" fill="rgb(234,99,48)" fg:x="8186229" fg:w="1907"/><text x="46.0841%" y="95.50"></text></g><g><title>next.1 (2,147 instructions, 0.01%)</title><rect x="50.5122%" y="85" width="0.0120%" height="15" fill="rgb(242,22,26)" fg:x="9030237" fg:w="2147"/><text x="50.8052%" y="95.50"></text></g><g><title>next.1 (2,627 instructions, 0.01%)</title><rect x="52.9802%" y="85" width="0.0147%" height="15" fill="rgb(227,78,32)" fg:x="9471446" fg:w="2627"/><text x="53.2732%" y="95.50"></text></g><g><title>Array_init (254,983 instructions, 1.43%)</title><rect x="54.8034%" y="37" width="1.4263%" height="15" fill="rgb(226,189,43)" fg:x="9797381" fg:w="254983"/><text x="55.0964%" y="47.50"></text></g><g><title>reserve (1,517,297 instructions, 8.49%)</title><rect x="54.8033%" y="53" width="8.4873%" height="15" fill="rgb(227,218,35)" fg:x="9797369" fg:w="1517297"/><text x="55.0963%" y="63.50">reserve</text></g><g><title>add (1,517,625 instructions, 8.49%)</title><rect x="54.8023%" y="69" width="8.4891%" height="15" fill="rgb(206,111,40)" fg:x="9797186" fg:w="1517625"/><text x="55.0953%" y="79.50">add</text></g><g><title>@anon-func-230.17 (1,517,666 instructions, 8.49%)</title><rect x="54.8022%" y="85" width="8.4893%" height="15" fill="rgb(208,217,22)" fg:x="9797169" fg:w="1517666"/><text x="55.0952%" y="95.50">@anon-func..</text></g><g><title>next.1 (1,907 instructions, 0.01%)</title><rect x="67.6620%" y="85" width="0.0107%" height="15" fill="rgb(248,20,20)" fg:x="12096147" fg:w="1907"/><text x="67.9549%" y="95.50"></text></g><g><title>next.1 (2,747 instructions, 0.02%)</title><rect x="77.1447%" y="85" width="0.0154%" height="15" fill="rgb(239,155,16)" fg:x="13791412" fg:w="2747"/><text x="77.4377%" y="95.50"></text></g><g><title>next.1 (2,507 instructions, 0.01%)</title><rect x="78.4902%" y="85" width="0.0140%" height="15" fill="rgb(238,171,46)" fg:x="14031940" fg:w="2507"/><text x="78.7831%" y="95.50"></text></g><g><title>Array_init (382,425 instructions, 2.14%)</title><rect x="82.1294%" y="37" width="2.1392%" height="15" fill="rgb(248,11,36)" fg:x="14682531" fg:w="382425"/><text x="82.4223%" y="47.50">A..</text></g><g><title>reserve (2,275,915 instructions, 12.73%)</title><rect x="82.1293%" y="53" width="12.7307%" height="15" fill="rgb(220,148,37)" fg:x="14682519" fg:w="2275915"/><text x="82.4223%" y="63.50">reserve</text></g><g><title>add (2,276,243 instructions, 12.73%)</title><rect x="82.1283%" y="69" width="12.7326%" height="15" fill="rgb(218,144,42)" fg:x="14682336" fg:w="2276243"/><text x="82.4212%" y="79.50">add</text></g><g><title>@anon-func-230.17 (2,276,284 instructions, 12.73%)</title><rect x="82.1282%" y="85" width="12.7328%" height="15" fill="rgb(245,20,20)" fg:x="14682319" fg:w="2276284"/><text x="82.4211%" y="95.50">@anon-func-230.17</text></g><g><title>all (17,877,322 instructions, 100%)</title><rect x="0.0000%" y="133" width="100.0000%" height="15" fill="rgb(240,111,48)" fg:x="0" fg:w="17877322"/><text x="0.2930%" y="143.50"></text></g><g><title>pre_upgrade (17,877,322 instructions, 100.00%)</title><rect x="0.0000%" y="117" width="100.0000%" height="15" fill="rgb(237,225,32)" fg:x="0" fg:w="17877322"/><text x="0.2930%" y="127.50">pre_upgrade</text></g><g><title>preupgrade (17,877,322 instructions, 100.00%)</title><rect x="0.0000%" y="101" width="100.0000%" height="15" fill="rgb(228,161,46)" fg:x="0" fg:w="17877322"/><text x="0.2930%" y="111.50">preupgrade</text></g></svg></svg>