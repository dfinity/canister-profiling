<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">heap_rs.batch_put</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="22281"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0359%" height="15" fill="rgb(224,221,34)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0359%" y="181" width="0.0404%" height="15" fill="rgb(244,74,54)" fg:x="8" fg:w="9"/><text x="0.3289%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0763%" y="181" width="0.0404%" height="15" fill="rgb(226,57,44)" fg:x="17" fg:w="9"/><text x="0.3693%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1167%" y="181" width="0.0404%" height="15" fill="rgb(213,0,26)" fg:x="26" fg:w="9"/><text x="0.4097%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1571%" y="181" width="0.0135%" height="15" fill="rgb(242,112,11)" fg:x="35" fg:w="3"/><text x="0.4501%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="0.1705%" y="181" width="0.0449%" height="15" fill="rgb(221,30,4)" fg:x="38" fg:w="10"/><text x="0.4635%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2154%" y="181" width="0.0224%" height="15" fill="rgb(246,218,50)" fg:x="48" fg:w="5"/><text x="0.5084%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2379%" y="181" width="0.0135%" height="15" fill="rgb(232,216,8)" fg:x="53" fg:w="3"/><text x="0.5308%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="0.0359%" y="197" width="0.5924%" height="15" fill="rgb(237,140,50)" fg:x="8" fg:w="132"/><text x="0.3289%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="0.0359%" y="213" width="0.6373%" height="15" fill="rgb(220,35,32)" fg:x="8" fg:w="142"/><text x="0.3289%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="0.0359%" y="229" width="0.6508%" height="15" fill="rgb(227,179,41)" fg:x="8" fg:w="145"/><text x="0.3289%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7136%" y="181" width="0.0404%" height="15" fill="rgb(236,81,52)" fg:x="159" fg:w="9"/><text x="1.0066%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7540%" y="181" width="0.0404%" height="15" fill="rgb(213,225,9)" fg:x="168" fg:w="9"/><text x="1.0470%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7944%" y="181" width="0.0404%" height="15" fill="rgb(243,91,46)" fg:x="177" fg:w="9"/><text x="1.0874%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.8348%" y="181" width="0.0135%" height="15" fill="rgb(205,47,39)" fg:x="186" fg:w="3"/><text x="1.1278%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="0.8483%" y="181" width="0.0449%" height="15" fill="rgb(221,15,35)" fg:x="189" fg:w="10"/><text x="1.1412%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.8931%" y="181" width="0.0224%" height="15" fill="rgb(235,221,26)" fg:x="199" fg:w="5"/><text x="1.1861%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.9156%" y="181" width="0.0135%" height="15" fill="rgb(209,44,28)" fg:x="204" fg:w="3"/><text x="1.2085%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="0.7136%" y="197" width="0.5924%" height="15" fill="rgb(249,67,31)" fg:x="159" fg:w="132"/><text x="1.0066%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="0.7136%" y="213" width="0.6373%" height="15" fill="rgb(232,44,34)" fg:x="159" fg:w="142"/><text x="1.0066%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="0.7136%" y="229" width="0.6508%" height="15" fill="rgb(254,219,45)" fg:x="159" fg:w="145"/><text x="1.0066%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.36%)</title><rect x="0.0359%" y="245" width="1.3554%" height="15" fill="rgb(208,125,30)" fg:x="8" fg:w="302"/><text x="0.3289%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.3913%" y="245" width="0.0269%" height="15" fill="rgb(210,97,39)" fg:x="310" fg:w="6"/><text x="1.6843%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4182%" y="149" width="0.0404%" height="15" fill="rgb(229,103,21)" fg:x="316" fg:w="9"/><text x="1.7112%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4586%" y="149" width="0.0404%" height="15" fill="rgb(248,118,20)" fg:x="325" fg:w="9"/><text x="1.7516%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4990%" y="149" width="0.0404%" height="15" fill="rgb(233,193,42)" fg:x="334" fg:w="9"/><text x="1.7920%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.5394%" y="149" width="0.0135%" height="15" fill="rgb(248,51,1)" fg:x="343" fg:w="3"/><text x="1.8324%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="1.5529%" y="149" width="0.0449%" height="15" fill="rgb(219,2,2)" fg:x="346" fg:w="10"/><text x="1.8459%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.5978%" y="149" width="0.0224%" height="15" fill="rgb(217,211,24)" fg:x="356" fg:w="5"/><text x="1.8907%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.6202%" y="149" width="0.0135%" height="15" fill="rgb(231,166,19)" fg:x="361" fg:w="3"/><text x="1.9132%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="1.4182%" y="165" width="0.5924%" height="15" fill="rgb(220,159,4)" fg:x="316" fg:w="132"/><text x="1.7112%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="1.4182%" y="181" width="0.6373%" height="15" fill="rgb(250,200,2)" fg:x="316" fg:w="142"/><text x="1.7112%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="1.4182%" y="197" width="0.6508%" height="15" fill="rgb(241,225,48)" fg:x="316" fg:w="145"/><text x="1.7112%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="1.4182%" y="213" width="0.6777%" height="15" fill="rgb(229,34,40)" fg:x="316" fg:w="151"/><text x="1.7112%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (211 instructions, 0.95%)</title><rect x="1.4182%" y="229" width="0.9470%" height="15" fill="rgb(227,74,41)" fg:x="316" fg:w="211"/><text x="1.7112%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.33%)</title><rect x="2.3697%" y="181" width="0.3276%" height="15" fill="rgb(253,19,36)" fg:x="528" fg:w="73"/><text x="2.6627%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.6974%" y="117" width="0.0269%" height="15" fill="rgb(252,15,3)" fg:x="601" fg:w="6"/><text x="2.9903%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.04%)</title><rect x="2.6974%" y="133" width="0.0449%" height="15" fill="rgb(234,174,49)" fg:x="601" fg:w="10"/><text x="2.9903%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.94%)</title><rect x="2.6974%" y="149" width="1.9434%" height="15" fill="rgb(237,169,4)" fg:x="601" fg:w="433"/><text x="2.9903%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.39%)</title><rect x="4.6407%" y="149" width="0.3905%" height="15" fill="rgb(240,210,23)" fg:x="1034" fg:w="87"/><text x="4.9337%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.23%)</title><rect x="5.0312%" y="149" width="0.2334%" height="15" fill="rgb(243,219,25)" fg:x="1121" fg:w="52"/><text x="5.3242%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.23%)</title><rect x="5.2646%" y="149" width="0.2334%" height="15" fill="rgb(228,3,33)" fg:x="1173" fg:w="52"/><text x="5.5575%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.23%)</title><rect x="5.4980%" y="149" width="0.2334%" height="15" fill="rgb(253,161,15)" fg:x="1225" fg:w="52"/><text x="5.7909%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.23%)</title><rect x="5.7313%" y="149" width="0.2334%" height="15" fill="rgb(212,92,54)" fg:x="1277" fg:w="52"/><text x="6.0243%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (880 instructions, 3.95%)</title><rect x="2.6974%" y="181" width="3.9496%" height="15" fill="rgb(247,201,17)" fg:x="601" fg:w="880"/><text x="2.9903%" y="191.50">bin..</text></g><g><title> 4]&gt;::read_options (880 instructions, 3.95%)</title><rect x="2.6974%" y="165" width="3.9496%" height="15" fill="rgb(213,124,48)" fg:x="601" fg:w="880"/><text x="2.9903%" y="175.50"> 4]..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.33%)</title><rect x="6.6469%" y="181" width="0.3276%" height="15" fill="rgb(248,173,29)" fg:x="1481" fg:w="73"/><text x="6.9399%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.35%)</title><rect x="6.9746%" y="165" width="0.3456%" height="15" fill="rgb(241,123,29)" fg:x="1554" fg:w="77"/><text x="7.2675%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.47%)</title><rect x="6.9746%" y="181" width="0.4668%" height="15" fill="rgb(245,50,40)" fg:x="1554" fg:w="104"/><text x="7.2675%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="7.4413%" y="133" width="0.0269%" height="15" fill="rgb(247,75,11)" fg:x="1658" fg:w="6"/><text x="7.7343%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.04%)</title><rect x="7.4413%" y="149" width="0.0449%" height="15" fill="rgb(252,195,6)" fg:x="1658" fg:w="10"/><text x="7.7343%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.94%)</title><rect x="7.4413%" y="165" width="1.9434%" height="15" fill="rgb(233,195,28)" fg:x="1658" fg:w="433"/><text x="7.7343%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="9.3847%" y="149" width="0.0808%" height="15" fill="rgb(233,211,2)" fg:x="2091" fg:w="18"/><text x="9.6776%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="9.3847%" y="165" width="0.0987%" height="15" fill="rgb(245,100,26)" fg:x="2091" fg:w="22"/><text x="9.6776%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.4834%" y="69" width="0.0404%" height="15" fill="rgb(214,170,1)" fg:x="2113" fg:w="9"/><text x="9.7764%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.5238%" y="69" width="0.0404%" height="15" fill="rgb(227,122,23)" fg:x="2122" fg:w="9"/><text x="9.8168%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.5642%" y="69" width="0.0404%" height="15" fill="rgb(237,0,25)" fg:x="2131" fg:w="9"/><text x="9.8572%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="9.6046%" y="69" width="0.0135%" height="15" fill="rgb(222,120,21)" fg:x="2140" fg:w="3"/><text x="9.8976%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="9.6181%" y="69" width="0.0449%" height="15" fill="rgb(214,124,7)" fg:x="2143" fg:w="10"/><text x="9.9110%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="9.6629%" y="69" width="0.0224%" height="15" fill="rgb(254,86,48)" fg:x="2153" fg:w="5"/><text x="9.9559%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="9.6854%" y="69" width="0.0135%" height="15" fill="rgb(238,219,46)" fg:x="2158" fg:w="3"/><text x="9.9784%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="9.4834%" y="85" width="0.5924%" height="15" fill="rgb(245,214,28)" fg:x="2113" fg:w="132"/><text x="9.7764%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="9.4834%" y="101" width="0.6373%" height="15" fill="rgb(253,196,39)" fg:x="2113" fg:w="142"/><text x="9.7764%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="9.4834%" y="117" width="0.6508%" height="15" fill="rgb(254,189,20)" fg:x="2113" fg:w="145"/><text x="9.7764%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="9.4834%" y="133" width="0.6777%" height="15" fill="rgb(215,116,13)" fg:x="2113" fg:w="151"/><text x="9.7764%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.27%)</title><rect x="10.1611%" y="85" width="0.2693%" height="15" fill="rgb(231,164,47)" fg:x="2264" fg:w="60"/><text x="10.4541%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.29%)</title><rect x="10.1611%" y="101" width="0.2872%" height="15" fill="rgb(246,113,40)" fg:x="2264" fg:w="64"/><text x="10.4541%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.40%)</title><rect x="10.1611%" y="117" width="0.3994%" height="15" fill="rgb(249,153,10)" fg:x="2264" fg:w="89"/><text x="10.4541%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.04%)</title><rect x="10.5606%" y="69" width="0.0449%" height="15" fill="rgb(247,144,6)" fg:x="2353" fg:w="10"/><text x="10.8535%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.13%)</title><rect x="10.6054%" y="37" width="0.1346%" height="15" fill="rgb(218,130,37)" fg:x="2363" fg:w="30"/><text x="10.8984%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.15%)</title><rect x="10.6054%" y="53" width="0.1526%" height="15" fill="rgb(224,204,23)" fg:x="2363" fg:w="34"/><text x="10.8984%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.26%)</title><rect x="10.6054%" y="69" width="0.2648%" height="15" fill="rgb(254,65,50)" fg:x="2363" fg:w="59"/><text x="10.8984%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.53%)</title><rect x="10.5606%" y="85" width="0.5341%" height="15" fill="rgb(233,87,11)" fg:x="2353" fg:w="119"/><text x="10.8535%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.78%)</title><rect x="10.5606%" y="101" width="0.7809%" height="15" fill="rgb(235,84,9)" fg:x="2353" fg:w="174"/><text x="10.8535%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.80%)</title><rect x="10.5606%" y="117" width="0.8034%" height="15" fill="rgb(252,75,45)" fg:x="2353" fg:w="179"/><text x="10.8535%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.70%)</title><rect x="10.1611%" y="133" width="1.7010%" height="15" fill="rgb(235,110,53)" fg:x="2264" fg:w="379"/><text x="10.4541%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.02%)</title><rect x="9.4834%" y="149" width="3.0205%" height="15" fill="rgb(226,95,29)" fg:x="2113" fg:w="673"/><text x="9.7764%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.39%)</title><rect x="12.5039%" y="149" width="0.3905%" height="15" fill="rgb(232,139,12)" fg:x="2786" fg:w="87"/><text x="12.7969%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="12.8944%" y="101" width="0.0135%" height="15" fill="rgb(226,221,13)" fg:x="2873" fg:w="3"/><text x="13.1874%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="12.9079%" y="101" width="0.0180%" height="15" fill="rgb(212,211,29)" fg:x="2876" fg:w="4"/><text x="13.2008%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="12.9258%" y="101" width="0.0135%" height="15" fill="rgb(238,12,42)" fg:x="2880" fg:w="3"/><text x="13.2188%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="12.9393%" y="101" width="0.0180%" height="15" fill="rgb(240,12,33)" fg:x="2883" fg:w="4"/><text x="13.2322%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="12.9572%" y="101" width="0.0269%" height="15" fill="rgb(215,72,53)" fg:x="2887" fg:w="6"/><text x="13.2502%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="12.9842%" y="101" width="0.0449%" height="15" fill="rgb(230,32,43)" fg:x="2893" fg:w="10"/><text x="13.2771%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.31%)</title><rect x="12.8944%" y="117" width="0.3142%" height="15" fill="rgb(216,187,7)" fg:x="2873" fg:w="70"/><text x="13.1874%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.32%)</title><rect x="12.8944%" y="133" width="0.3231%" height="15" fill="rgb(220,168,22)" fg:x="2873" fg:w="72"/><text x="13.1874%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="12.8944%" y="149" width="0.3456%" height="15" fill="rgb(219,128,26)" fg:x="2873" fg:w="77"/><text x="13.1874%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.08%)</title><rect x="9.4834%" y="165" width="4.0752%" height="15" fill="rgb(223,229,10)" fg:x="2113" fg:w="908"/><text x="9.7764%" y="175.50">bin..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.11%)</title><rect x="13.5586%" y="165" width="0.1122%" height="15" fill="rgb(242,171,27)" fg:x="3021" fg:w="25"/><text x="13.8516%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,536 instructions, 6.89%)</title><rect x="7.4413%" y="181" width="6.8938%" height="15" fill="rgb(211,63,1)" fg:x="1658" fg:w="1536"/><text x="7.7343%" y="191.50">binread..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="14.3351%" y="181" width="0.3052%" height="15" fill="rgb(211,136,26)" fg:x="3194" fg:w="68"/><text x="14.6281%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.35%)</title><rect x="14.6403%" y="165" width="0.3456%" height="15" fill="rgb(251,229,28)" fg:x="3262" fg:w="77"/><text x="14.9332%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.47%)</title><rect x="14.6403%" y="181" width="0.4668%" height="15" fill="rgb(250,93,28)" fg:x="3262" fg:w="104"/><text x="14.9332%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="15.1070%" y="133" width="0.0269%" height="15" fill="rgb(238,156,20)" fg:x="3366" fg:w="6"/><text x="15.4000%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.04%)</title><rect x="15.1070%" y="149" width="0.0449%" height="15" fill="rgb(253,64,40)" fg:x="3366" fg:w="10"/><text x="15.4000%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.94%)</title><rect x="15.1070%" y="165" width="1.9434%" height="15" fill="rgb(219,173,32)" fg:x="3366" fg:w="433"/><text x="15.4000%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="17.0504%" y="149" width="0.0808%" height="15" fill="rgb(245,103,21)" fg:x="3799" fg:w="18"/><text x="17.3434%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="17.0504%" y="165" width="0.0987%" height="15" fill="rgb(217,55,17)" fg:x="3799" fg:w="22"/><text x="17.3434%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.1491%" y="69" width="0.0404%" height="15" fill="rgb(225,121,54)" fg:x="3821" fg:w="9"/><text x="17.4421%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.1895%" y="69" width="0.0404%" height="15" fill="rgb(243,21,23)" fg:x="3830" fg:w="9"/><text x="17.4825%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.2299%" y="69" width="0.0404%" height="15" fill="rgb(239,53,25)" fg:x="3839" fg:w="9"/><text x="17.5229%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="17.2703%" y="69" width="0.0135%" height="15" fill="rgb(236,215,4)" fg:x="3848" fg:w="3"/><text x="17.5633%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="17.2838%" y="69" width="0.0449%" height="15" fill="rgb(229,19,32)" fg:x="3851" fg:w="10"/><text x="17.5768%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="17.3287%" y="69" width="0.0224%" height="15" fill="rgb(244,120,49)" fg:x="3861" fg:w="5"/><text x="17.6216%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="17.3511%" y="69" width="0.0135%" height="15" fill="rgb(249,5,36)" fg:x="3866" fg:w="3"/><text x="17.6441%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="17.1491%" y="85" width="0.5924%" height="15" fill="rgb(205,194,28)" fg:x="3821" fg:w="132"/><text x="17.4421%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="17.1491%" y="101" width="0.6373%" height="15" fill="rgb(233,125,17)" fg:x="3821" fg:w="142"/><text x="17.4421%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="17.1491%" y="117" width="0.6508%" height="15" fill="rgb(250,103,24)" fg:x="3821" fg:w="145"/><text x="17.4421%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="17.1491%" y="133" width="0.6777%" height="15" fill="rgb(219,131,28)" fg:x="3821" fg:w="151"/><text x="17.4421%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.27%)</title><rect x="17.8268%" y="85" width="0.2693%" height="15" fill="rgb(245,217,30)" fg:x="3972" fg:w="60"/><text x="18.1198%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.29%)</title><rect x="17.8268%" y="101" width="0.2872%" height="15" fill="rgb(206,90,16)" fg:x="3972" fg:w="64"/><text x="18.1198%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.40%)</title><rect x="17.8268%" y="117" width="0.3994%" height="15" fill="rgb(242,28,45)" fg:x="3972" fg:w="89"/><text x="18.1198%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.04%)</title><rect x="18.2263%" y="69" width="0.0449%" height="15" fill="rgb(219,46,27)" fg:x="4061" fg:w="10"/><text x="18.5193%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.13%)</title><rect x="18.2712%" y="37" width="0.1346%" height="15" fill="rgb(208,86,44)" fg:x="4071" fg:w="30"/><text x="18.5641%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.15%)</title><rect x="18.2712%" y="53" width="0.1526%" height="15" fill="rgb(252,88,4)" fg:x="4071" fg:w="34"/><text x="18.5641%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.26%)</title><rect x="18.2712%" y="69" width="0.2648%" height="15" fill="rgb(251,36,40)" fg:x="4071" fg:w="59"/><text x="18.5641%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.53%)</title><rect x="18.2263%" y="85" width="0.5341%" height="15" fill="rgb(241,49,45)" fg:x="4061" fg:w="119"/><text x="18.5193%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.78%)</title><rect x="18.2263%" y="101" width="0.7809%" height="15" fill="rgb(245,127,44)" fg:x="4061" fg:w="174"/><text x="18.5193%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.80%)</title><rect x="18.2263%" y="117" width="0.8034%" height="15" fill="rgb(228,85,10)" fg:x="4061" fg:w="179"/><text x="18.5193%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.70%)</title><rect x="17.8268%" y="133" width="1.7010%" height="15" fill="rgb(229,148,1)" fg:x="3972" fg:w="379"/><text x="18.1198%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.02%)</title><rect x="17.1491%" y="149" width="3.0205%" height="15" fill="rgb(205,198,35)" fg:x="3821" fg:w="673"/><text x="17.4421%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.39%)</title><rect x="20.1697%" y="149" width="0.3905%" height="15" fill="rgb(223,98,38)" fg:x="4494" fg:w="87"/><text x="20.4626%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="20.5601%" y="101" width="0.0135%" height="15" fill="rgb(210,166,50)" fg:x="4581" fg:w="3"/><text x="20.8531%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="20.5736%" y="101" width="0.0180%" height="15" fill="rgb(251,117,4)" fg:x="4584" fg:w="4"/><text x="20.8666%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="20.5915%" y="101" width="0.0135%" height="15" fill="rgb(215,112,47)" fg:x="4588" fg:w="3"/><text x="20.8845%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="20.6050%" y="101" width="0.0180%" height="15" fill="rgb(221,15,6)" fg:x="4591" fg:w="4"/><text x="20.8980%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="20.6230%" y="101" width="0.0269%" height="15" fill="rgb(207,38,43)" fg:x="4595" fg:w="6"/><text x="20.9159%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="20.6499%" y="101" width="0.0449%" height="15" fill="rgb(246,49,16)" fg:x="4601" fg:w="10"/><text x="20.9428%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.31%)</title><rect x="20.5601%" y="117" width="0.3142%" height="15" fill="rgb(250,50,27)" fg:x="4581" fg:w="70"/><text x="20.8531%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.32%)</title><rect x="20.5601%" y="133" width="0.3231%" height="15" fill="rgb(247,181,54)" fg:x="4581" fg:w="72"/><text x="20.8531%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="20.5601%" y="149" width="0.3456%" height="15" fill="rgb(208,72,39)" fg:x="4581" fg:w="77"/><text x="20.8531%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 4.08%)</title><rect x="17.1491%" y="165" width="4.0752%" height="15" fill="rgb(241,72,15)" fg:x="3821" fg:w="908"/><text x="17.4421%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.33%)</title><rect x="21.2244%" y="133" width="0.3276%" height="15" fill="rgb(237,16,29)" fg:x="4729" fg:w="73"/><text x="21.5173%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.49%)</title><rect x="21.5520%" y="117" width="0.4937%" height="15" fill="rgb(241,218,9)" fg:x="4802" fg:w="110"/><text x="21.8450%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.61%)</title><rect x="21.5520%" y="133" width="0.6149%" height="15" fill="rgb(214,115,42)" fg:x="4802" fg:w="137"/><text x="21.8450%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="22.1669%" y="133" width="0.3052%" height="15" fill="rgb(245,36,38)" fg:x="4939" fg:w="68"/><text x="22.4598%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (337 instructions, 1.51%)</title><rect x="21.2244%" y="149" width="1.5125%" height="15" fill="rgb(233,124,15)" fg:x="4729" fg:w="337"/><text x="21.5173%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.7369%" y="85" width="0.0404%" height="15" fill="rgb(209,115,7)" fg:x="5066" fg:w="9"/><text x="23.0298%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.7773%" y="85" width="0.0404%" height="15" fill="rgb(248,112,45)" fg:x="5075" fg:w="9"/><text x="23.0702%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.8176%" y="85" width="0.0404%" height="15" fill="rgb(250,220,32)" fg:x="5084" fg:w="9"/><text x="23.1106%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="22.8580%" y="85" width="0.0135%" height="15" fill="rgb(239,149,13)" fg:x="5093" fg:w="3"/><text x="23.1510%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="22.8715%" y="85" width="0.0449%" height="15" fill="rgb(206,70,3)" fg:x="5096" fg:w="10"/><text x="23.1645%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="22.9164%" y="85" width="0.0224%" height="15" fill="rgb(243,191,44)" fg:x="5106" fg:w="5"/><text x="23.2094%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="22.9388%" y="85" width="0.0135%" height="15" fill="rgb(220,40,34)" fg:x="5111" fg:w="3"/><text x="23.2318%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="22.7369%" y="101" width="0.5924%" height="15" fill="rgb(219,100,12)" fg:x="5066" fg:w="132"/><text x="23.0298%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="22.7369%" y="117" width="0.6373%" height="15" fill="rgb(227,34,49)" fg:x="5066" fg:w="142"/><text x="23.0298%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="22.7369%" y="133" width="0.6508%" height="15" fill="rgb(221,164,48)" fg:x="5066" fg:w="145"/><text x="23.0298%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="22.7369%" y="149" width="0.6777%" height="15" fill="rgb(221,170,41)" fg:x="5066" fg:w="151"/><text x="23.0298%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (567 instructions, 2.54%)</title><rect x="21.2244%" y="165" width="2.5448%" height="15" fill="rgb(229,112,28)" fg:x="4729" fg:w="567"/><text x="21.5173%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,078 instructions, 9.33%)</title><rect x="15.1070%" y="181" width="9.3263%" height="15" fill="rgb(252,139,53)" fg:x="3366" fg:w="2078"/><text x="15.4000%" y="191.50">binread::bi..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.31%)</title><rect x="24.4334%" y="181" width="0.3052%" height="15" fill="rgb(205,224,35)" fg:x="5444" fg:w="68"/><text x="24.7263%" y="191.50"></text></g><g><title>binread::BinRead::read (5,202 instructions, 23.35%)</title><rect x="2.3652%" y="197" width="23.3472%" height="15" fill="rgb(222,53,24)" fg:x="527" fg:w="5202"/><text x="2.6582%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="25.7125%" y="181" width="0.0628%" height="15" fill="rgb(210,172,6)" fg:x="5729" fg:w="14"/><text x="26.0055%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="25.7753%" y="165" width="0.0628%" height="15" fill="rgb(209,69,34)" fg:x="5743" fg:w="14"/><text x="26.0683%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 instructions, 0.29%)</title><rect x="25.8382%" y="165" width="0.2917%" height="15" fill="rgb(225,221,1)" fg:x="5757" fg:w="65"/><text x="26.1311%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="26.1299%" y="165" width="0.0853%" height="15" fill="rgb(245,15,49)" fg:x="5822" fg:w="19"/><text x="26.4229%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (250 instructions, 1.12%)</title><rect x="25.7753%" y="181" width="1.1220%" height="15" fill="rgb(209,131,33)" fg:x="5743" fg:w="250"/><text x="26.0683%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.8974%" y="101" width="0.0404%" height="15" fill="rgb(253,153,29)" fg:x="5993" fg:w="9"/><text x="27.1903%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.9377%" y="101" width="0.0404%" height="15" fill="rgb(254,140,52)" fg:x="6002" fg:w="9"/><text x="27.2307%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.9781%" y="101" width="0.0404%" height="15" fill="rgb(243,82,33)" fg:x="6011" fg:w="9"/><text x="27.2711%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="27.0185%" y="101" width="0.0135%" height="15" fill="rgb(214,124,45)" fg:x="6020" fg:w="3"/><text x="27.3115%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="27.0320%" y="101" width="0.0449%" height="15" fill="rgb(220,14,44)" fg:x="6023" fg:w="10"/><text x="27.3250%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="27.0769%" y="101" width="0.0224%" height="15" fill="rgb(205,149,31)" fg:x="6033" fg:w="5"/><text x="27.3699%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="27.0993%" y="101" width="0.0135%" height="15" fill="rgb(246,64,35)" fg:x="6038" fg:w="3"/><text x="27.3923%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="26.8974%" y="117" width="0.5924%" height="15" fill="rgb(251,166,42)" fg:x="5993" fg:w="132"/><text x="27.1903%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="26.8974%" y="133" width="0.6373%" height="15" fill="rgb(212,55,37)" fg:x="5993" fg:w="142"/><text x="27.1903%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="26.8974%" y="149" width="0.6508%" height="15" fill="rgb(241,164,20)" fg:x="5993" fg:w="145"/><text x="27.1903%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="26.8974%" y="165" width="0.6777%" height="15" fill="rgb(210,36,3)" fg:x="5993" fg:w="151"/><text x="27.1903%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.04%)</title><rect x="26.8974%" y="181" width="1.0412%" height="15" fill="rgb(212,48,36)" fg:x="5993" fg:w="232"/><text x="27.1903%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.9386%" y="85" width="0.0404%" height="15" fill="rgb(237,158,50)" fg:x="6225" fg:w="9"/><text x="28.2316%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.9790%" y="85" width="0.0404%" height="15" fill="rgb(242,181,25)" fg:x="6234" fg:w="9"/><text x="28.2720%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="28.0194%" y="85" width="0.0404%" height="15" fill="rgb(211,66,52)" fg:x="6243" fg:w="9"/><text x="28.3124%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="28.0598%" y="85" width="0.0135%" height="15" fill="rgb(246,53,42)" fg:x="6252" fg:w="3"/><text x="28.3528%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="28.0732%" y="85" width="0.0449%" height="15" fill="rgb(248,214,5)" fg:x="6255" fg:w="10"/><text x="28.3662%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="28.1181%" y="85" width="0.0224%" height="15" fill="rgb(228,147,7)" fg:x="6265" fg:w="5"/><text x="28.4111%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="28.1406%" y="85" width="0.0135%" height="15" fill="rgb(254,0,43)" fg:x="6270" fg:w="3"/><text x="28.4335%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="27.9386%" y="101" width="0.5924%" height="15" fill="rgb(251,196,43)" fg:x="6225" fg:w="132"/><text x="28.2316%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="27.9386%" y="117" width="0.6373%" height="15" fill="rgb(213,203,42)" fg:x="6225" fg:w="142"/><text x="28.2316%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="27.9386%" y="133" width="0.6508%" height="15" fill="rgb(243,190,1)" fg:x="6225" fg:w="145"/><text x="28.2316%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="27.9386%" y="149" width="0.6777%" height="15" fill="rgb(228,143,47)" fg:x="6225" fg:w="151"/><text x="28.2316%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.82%)</title><rect x="27.9386%" y="165" width="0.8213%" height="15" fill="rgb(244,11,16)" fg:x="6225" fg:w="183"/><text x="28.2316%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (253 instructions, 1.14%)</title><rect x="27.9386%" y="181" width="1.1355%" height="15" fill="rgb(231,2,52)" fg:x="6225" fg:w="253"/><text x="28.2316%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (976 instructions, 4.38%)</title><rect x="25.7125%" y="197" width="4.3804%" height="15" fill="rgb(214,170,24)" fg:x="5729" fg:w="976"/><text x="26.0055%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.0929%" y="117" width="0.0404%" height="15" fill="rgb(253,62,40)" fg:x="6705" fg:w="9"/><text x="30.3859%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.1333%" y="117" width="0.0404%" height="15" fill="rgb(244,142,40)" fg:x="6714" fg:w="9"/><text x="30.4263%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="30.1737%" y="117" width="0.0404%" height="15" fill="rgb(214,132,1)" fg:x="6723" fg:w="9"/><text x="30.4667%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="30.2141%" y="117" width="0.0135%" height="15" fill="rgb(215,53,24)" fg:x="6732" fg:w="3"/><text x="30.5071%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="30.2275%" y="117" width="0.0449%" height="15" fill="rgb(237,51,51)" fg:x="6735" fg:w="10"/><text x="30.5205%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="30.2724%" y="117" width="0.0224%" height="15" fill="rgb(222,226,41)" fg:x="6745" fg:w="5"/><text x="30.5654%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="30.2949%" y="117" width="0.0135%" height="15" fill="rgb(249,138,47)" fg:x="6750" fg:w="3"/><text x="30.5878%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="30.0929%" y="133" width="0.5924%" height="15" fill="rgb(254,52,4)" fg:x="6705" fg:w="132"/><text x="30.3859%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="30.0929%" y="149" width="0.6373%" height="15" fill="rgb(227,221,2)" fg:x="6705" fg:w="142"/><text x="30.3859%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="30.0929%" y="165" width="0.6508%" height="15" fill="rgb(234,11,5)" fg:x="6705" fg:w="145"/><text x="30.3859%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="30.0929%" y="181" width="0.6777%" height="15" fill="rgb(232,192,35)" fg:x="6705" fg:w="151"/><text x="30.3859%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="30.7706%" y="133" width="0.0135%" height="15" fill="rgb(225,121,33)" fg:x="6856" fg:w="3"/><text x="31.0636%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="30.7841%" y="133" width="0.0180%" height="15" fill="rgb(209,103,5)" fg:x="6859" fg:w="4"/><text x="31.0770%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="30.8020%" y="133" width="0.0135%" height="15" fill="rgb(216,27,10)" fg:x="6863" fg:w="3"/><text x="31.0950%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="30.8155%" y="133" width="0.0180%" height="15" fill="rgb(244,94,5)" fg:x="6866" fg:w="4"/><text x="31.1085%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="30.8334%" y="133" width="0.0269%" height="15" fill="rgb(209,215,45)" fg:x="6870" fg:w="6"/><text x="31.1264%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="30.8604%" y="133" width="0.0718%" height="15" fill="rgb(208,132,16)" fg:x="6876" fg:w="16"/><text x="31.1533%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="30.7706%" y="149" width="0.4398%" height="15" fill="rgb(249,10,6)" fg:x="6856" fg:w="98"/><text x="31.0636%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="30.7706%" y="165" width="0.4488%" height="15" fill="rgb(231,149,2)" fg:x="6856" fg:w="100"/><text x="31.0636%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.47%)</title><rect x="30.7706%" y="181" width="0.4713%" height="15" fill="rgb(251,126,30)" fg:x="6856" fg:w="105"/><text x="31.0636%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.66%)</title><rect x="30.0929%" y="197" width="1.6606%" height="15" fill="rgb(220,168,21)" fg:x="6705" fg:w="370"/><text x="30.3859%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.7535%" y="133" width="0.0404%" height="15" fill="rgb(239,77,32)" fg:x="7075" fg:w="9"/><text x="32.0465%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.7939%" y="133" width="0.0404%" height="15" fill="rgb(249,23,33)" fg:x="7084" fg:w="9"/><text x="32.0869%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.8343%" y="133" width="0.0404%" height="15" fill="rgb(252,67,3)" fg:x="7093" fg:w="9"/><text x="32.1273%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="31.8747%" y="133" width="0.0135%" height="15" fill="rgb(251,13,45)" fg:x="7102" fg:w="3"/><text x="32.1677%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="31.8882%" y="133" width="0.0449%" height="15" fill="rgb(223,164,45)" fg:x="7105" fg:w="10"/><text x="32.1811%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="31.9330%" y="133" width="0.0224%" height="15" fill="rgb(221,217,31)" fg:x="7115" fg:w="5"/><text x="32.2260%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="31.9555%" y="133" width="0.0135%" height="15" fill="rgb(206,48,31)" fg:x="7120" fg:w="3"/><text x="32.2484%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="31.7535%" y="149" width="0.5924%" height="15" fill="rgb(208,200,31)" fg:x="7075" fg:w="132"/><text x="32.0465%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="31.7535%" y="165" width="0.6373%" height="15" fill="rgb(251,139,3)" fg:x="7075" fg:w="142"/><text x="32.0465%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="31.7535%" y="181" width="0.6508%" height="15" fill="rgb(222,105,38)" fg:x="7075" fg:w="145"/><text x="32.0465%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.4312%" y="133" width="0.0404%" height="15" fill="rgb(233,11,47)" fg:x="7226" fg:w="9"/><text x="32.7242%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.4716%" y="133" width="0.0404%" height="15" fill="rgb(231,56,51)" fg:x="7235" fg:w="9"/><text x="32.7646%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.5120%" y="133" width="0.0404%" height="15" fill="rgb(249,146,37)" fg:x="7244" fg:w="9"/><text x="32.8050%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.5524%" y="133" width="0.0135%" height="15" fill="rgb(216,188,24)" fg:x="7253" fg:w="3"/><text x="32.8454%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="32.5659%" y="133" width="0.0449%" height="15" fill="rgb(241,109,6)" fg:x="7256" fg:w="10"/><text x="32.8588%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.6107%" y="133" width="0.0224%" height="15" fill="rgb(217,201,34)" fg:x="7266" fg:w="5"/><text x="32.9037%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.6332%" y="133" width="0.0135%" height="15" fill="rgb(217,116,25)" fg:x="7271" fg:w="3"/><text x="32.9262%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="32.4312%" y="149" width="0.5924%" height="15" fill="rgb(227,11,33)" fg:x="7226" fg:w="132"/><text x="32.7242%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="32.4312%" y="165" width="0.6373%" height="15" fill="rgb(239,171,51)" fg:x="7226" fg:w="142"/><text x="32.7242%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="32.4312%" y="181" width="0.6508%" height="15" fill="rgb(231,13,2)" fg:x="7226" fg:w="145"/><text x="32.7242%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.36%)</title><rect x="31.7535%" y="197" width="1.3554%" height="15" fill="rgb(206,140,15)" fg:x="7075" fg:w="302"/><text x="32.0465%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="33.1089%" y="149" width="0.0135%" height="15" fill="rgb(248,98,31)" fg:x="7377" fg:w="3"/><text x="33.4019%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="33.1224%" y="149" width="0.0180%" height="15" fill="rgb(233,92,1)" fg:x="7380" fg:w="4"/><text x="33.4154%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="33.1403%" y="149" width="0.0135%" height="15" fill="rgb(228,59,21)" fg:x="7384" fg:w="3"/><text x="33.4333%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="33.1538%" y="149" width="0.0180%" height="15" fill="rgb(243,135,40)" fg:x="7387" fg:w="4"/><text x="33.4468%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="33.1718%" y="149" width="0.0269%" height="15" fill="rgb(217,214,41)" fg:x="7391" fg:w="6"/><text x="33.4647%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="33.1987%" y="149" width="0.0718%" height="15" fill="rgb(249,204,2)" fg:x="7397" fg:w="16"/><text x="33.4917%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="33.1089%" y="165" width="0.4398%" height="15" fill="rgb(238,4,0)" fg:x="7377" fg:w="98"/><text x="33.4019%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="33.1089%" y="181" width="0.4488%" height="15" fill="rgb(244,207,0)" fg:x="7377" fg:w="100"/><text x="33.4019%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.47%)</title><rect x="33.1089%" y="197" width="0.4713%" height="15" fill="rgb(232,7,54)" fg:x="7377" fg:w="105"/><text x="33.4019%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.85%)</title><rect x="33.5802%" y="165" width="1.8536%" height="15" fill="rgb(218,204,43)" fg:x="7482" fg:w="413"/><text x="33.8731%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.87%)</title><rect x="33.5802%" y="181" width="1.8715%" height="15" fill="rgb(209,136,42)" fg:x="7482" fg:w="417"/><text x="33.8731%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.96%)</title><rect x="33.5802%" y="197" width="1.9613%" height="15" fill="rgb(222,43,3)" fg:x="7482" fg:w="437"/><text x="33.8731%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.65%)</title><rect x="35.5415%" y="181" width="1.6516%" height="15" fill="rgb(216,66,19)" fg:x="7919" fg:w="368"/><text x="35.8345%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.67%)</title><rect x="35.5415%" y="197" width="1.6696%" height="15" fill="rgb(220,96,9)" fg:x="7919" fg:w="372"/><text x="35.8345%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,112 instructions, 36.41%)</title><rect x="2.3652%" y="213" width="36.4077%" height="15" fill="rgb(212,191,36)" fg:x="527" fg:w="8112"/><text x="2.6582%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.72%)</title><rect x="38.7729%" y="197" width="1.7190%" height="15" fill="rgb(230,70,18)" fg:x="8639" fg:w="383"/><text x="39.0659%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.72%)</title><rect x="40.5099%" y="197" width="1.7190%" height="15" fill="rgb(214,106,19)" fg:x="9026" fg:w="383"/><text x="40.8028%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.47%)</title><rect x="38.7729%" y="213" width="3.4738%" height="15" fill="rgb(225,13,48)" fg:x="8639" fg:w="774"/><text x="39.0659%" y="223.50">mem..</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="42.2468%" y="149" width="0.0359%" height="15" fill="rgb(224,203,29)" fg:x="9413" fg:w="8"/><text x="42.5397%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 instructions, 0.24%)</title><rect x="42.2468%" y="165" width="0.2424%" height="15" fill="rgb(219,175,2)" fg:x="9413" fg:w="54"/><text x="42.5397%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.33%)</title><rect x="42.2468%" y="181" width="0.3276%" height="15" fill="rgb(254,118,51)" fg:x="9413" fg:w="73"/><text x="42.5397%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.5744%" y="101" width="0.0404%" height="15" fill="rgb(217,154,38)" fg:x="9486" fg:w="9"/><text x="42.8674%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.6148%" y="101" width="0.0404%" height="15" fill="rgb(223,81,41)" fg:x="9495" fg:w="9"/><text x="42.9078%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.6552%" y="101" width="0.0404%" height="15" fill="rgb(220,24,52)" fg:x="9504" fg:w="9"/><text x="42.9481%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="42.6956%" y="101" width="0.0135%" height="15" fill="rgb(217,149,4)" fg:x="9513" fg:w="3"/><text x="42.9885%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="42.7090%" y="101" width="0.0449%" height="15" fill="rgb(252,38,10)" fg:x="9516" fg:w="10"/><text x="43.0020%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="42.7539%" y="101" width="0.0224%" height="15" fill="rgb(232,6,21)" fg:x="9526" fg:w="5"/><text x="43.0469%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="42.7764%" y="101" width="0.0135%" height="15" fill="rgb(252,63,21)" fg:x="9531" fg:w="3"/><text x="43.0693%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="42.5744%" y="117" width="0.5924%" height="15" fill="rgb(209,30,45)" fg:x="9486" fg:w="132"/><text x="42.8674%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="42.5744%" y="133" width="0.6373%" height="15" fill="rgb(243,10,32)" fg:x="9486" fg:w="142"/><text x="42.8674%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="42.5744%" y="149" width="0.6508%" height="15" fill="rgb(230,188,42)" fg:x="9486" fg:w="145"/><text x="42.8674%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="42.5744%" y="165" width="0.6777%" height="15" fill="rgb(234,122,13)" fg:x="9486" fg:w="151"/><text x="42.8674%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.88%)</title><rect x="42.5744%" y="181" width="0.8797%" height="15" fill="rgb(213,93,34)" fg:x="9486" fg:w="196"/><text x="42.8674%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="43.4541%" y="149" width="0.0359%" height="15" fill="rgb(227,41,51)" fg:x="9682" fg:w="8"/><text x="43.7470%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="43.4900%" y="133" width="0.2424%" height="15" fill="rgb(211,207,35)" fg:x="9690" fg:w="54"/><text x="43.7829%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.40%)</title><rect x="43.7323%" y="133" width="0.4039%" height="15" fill="rgb(228,186,20)" fg:x="9744" fg:w="90"/><text x="44.0253%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.73%)</title><rect x="44.1363%" y="133" width="0.7316%" height="15" fill="rgb(232,44,12)" fg:x="9834" fg:w="163"/><text x="44.4292%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.50%)</title><rect x="43.4900%" y="149" width="2.4954%" height="15" fill="rgb(241,158,38)" fg:x="9690" fg:w="556"/><text x="43.7829%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.44%)</title><rect x="45.9854%" y="149" width="0.4443%" height="15" fill="rgb(247,87,32)" fg:x="10246" fg:w="99"/><text x="46.2783%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (826 instructions, 3.71%)</title><rect x="43.4541%" y="165" width="3.7072%" height="15" fill="rgb(247,35,30)" fg:x="9682" fg:w="826"/><text x="43.7470%" y="175.50">std..</text></g><g><title>candid::types::internal::env_add (853 instructions, 3.83%)</title><rect x="43.4541%" y="181" width="3.8284%" height="15" fill="rgb(237,224,23)" fg:x="9682" fg:w="853"/><text x="43.7470%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="47.2824%" y="101" width="0.0404%" height="15" fill="rgb(210,107,30)" fg:x="10535" fg:w="9"/><text x="47.5754%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="47.3228%" y="101" width="0.0404%" height="15" fill="rgb(239,197,2)" fg:x="10544" fg:w="9"/><text x="47.6158%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="47.3632%" y="101" width="0.0404%" height="15" fill="rgb(252,223,11)" fg:x="10553" fg:w="9"/><text x="47.6562%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="47.4036%" y="101" width="0.0135%" height="15" fill="rgb(218,94,28)" fg:x="10562" fg:w="3"/><text x="47.6966%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="47.4171%" y="101" width="0.0449%" height="15" fill="rgb(249,209,38)" fg:x="10565" fg:w="10"/><text x="47.7101%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="47.4620%" y="101" width="0.0224%" height="15" fill="rgb(243,194,47)" fg:x="10575" fg:w="5"/><text x="47.7549%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="47.4844%" y="101" width="0.0135%" height="15" fill="rgb(229,191,14)" fg:x="10580" fg:w="3"/><text x="47.7774%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="47.2824%" y="117" width="0.5924%" height="15" fill="rgb(211,198,32)" fg:x="10535" fg:w="132"/><text x="47.5754%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="47.2824%" y="133" width="0.6373%" height="15" fill="rgb(228,47,15)" fg:x="10535" fg:w="142"/><text x="47.5754%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="47.2824%" y="149" width="0.6508%" height="15" fill="rgb(236,154,20)" fg:x="10535" fg:w="145"/><text x="47.5754%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="47.2824%" y="165" width="0.6777%" height="15" fill="rgb(244,83,2)" fg:x="10535" fg:w="151"/><text x="47.5754%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.73%)</title><rect x="47.2824%" y="181" width="0.7316%" height="15" fill="rgb(227,23,48)" fg:x="10535" fg:w="163"/><text x="47.5754%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="48.0140%" y="149" width="0.0359%" height="15" fill="rgb(249,194,1)" fg:x="10698" fg:w="8"/><text x="48.3070%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="48.0499%" y="133" width="0.2424%" height="15" fill="rgb(217,84,34)" fg:x="10706" fg:w="54"/><text x="48.3429%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.40%)</title><rect x="48.2923%" y="133" width="0.4039%" height="15" fill="rgb(205,206,14)" fg:x="10760" fg:w="90"/><text x="48.5852%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.73%)</title><rect x="48.6962%" y="133" width="0.7316%" height="15" fill="rgb(226,205,25)" fg:x="10850" fg:w="163"/><text x="48.9892%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.50%)</title><rect x="48.0499%" y="149" width="2.4954%" height="15" fill="rgb(236,212,2)" fg:x="10706" fg:w="556"/><text x="48.3429%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.33%)</title><rect x="50.5453%" y="133" width="0.3321%" height="15" fill="rgb(245,171,33)" fg:x="11262" fg:w="74"/><text x="50.8383%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.35%)</title><rect x="50.5453%" y="149" width="0.3501%" height="15" fill="rgb(211,39,46)" fg:x="11262" fg:w="78"/><text x="50.8383%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="50.8954%" y="85" width="0.0135%" height="15" fill="rgb(214,41,31)" fg:x="11340" fg:w="3"/><text x="51.1884%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="50.9088%" y="85" width="0.0180%" height="15" fill="rgb(209,41,14)" fg:x="11343" fg:w="4"/><text x="51.2018%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="50.9268%" y="85" width="0.0135%" height="15" fill="rgb(220,32,27)" fg:x="11347" fg:w="3"/><text x="51.2198%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="50.9403%" y="85" width="0.0180%" height="15" fill="rgb(226,125,6)" fg:x="11350" fg:w="4"/><text x="51.2332%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="50.9582%" y="85" width="0.0269%" height="15" fill="rgb(247,104,38)" fg:x="11354" fg:w="6"/><text x="51.2512%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="50.9851%" y="85" width="0.0718%" height="15" fill="rgb(238,180,11)" fg:x="11360" fg:w="16"/><text x="51.2781%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="50.8954%" y="101" width="0.4398%" height="15" fill="rgb(212,63,22)" fg:x="11340" fg:w="98"/><text x="51.1884%" y="111.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="50.8954%" y="117" width="0.4488%" height="15" fill="rgb(225,228,33)" fg:x="11340" fg:w="100"/><text x="51.1884%" y="127.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.47%)</title><rect x="50.8954%" y="133" width="0.4713%" height="15" fill="rgb(254,179,25)" fg:x="11340" fg:w="105"/><text x="51.1884%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.61%)</title><rect x="50.8954%" y="149" width="0.6149%" height="15" fill="rgb(240,16,16)" fg:x="11340" fg:w="137"/><text x="51.1884%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 4.27%)</title><rect x="48.0140%" y="165" width="4.2727%" height="15" fill="rgb(244,106,3)" fg:x="10698" fg:w="952"/><text x="48.3070%" y="175.50">std:..</text></g><g><title>candid::types::internal::env_add (979 instructions, 4.39%)</title><rect x="48.0140%" y="181" width="4.3939%" height="15" fill="rgb(237,23,39)" fg:x="10698" fg:w="979"/><text x="48.3070%" y="191.50">cand..</text></g><g><title>candid::types::internal::ID::__getit (8 instructions, 0.04%)</title><rect x="52.4079%" y="149" width="0.0359%" height="15" fill="rgb(236,100,20)" fg:x="11677" fg:w="8"/><text x="52.7008%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="52.4438%" y="117" width="0.2424%" height="15" fill="rgb(214,117,14)" fg:x="11685" fg:w="54"/><text x="52.7368%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.35%)</title><rect x="52.4438%" y="133" width="0.3546%" height="15" fill="rgb(246,75,1)" fg:x="11685" fg:w="79"/><text x="52.7368%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.36%)</title><rect x="52.4438%" y="149" width="1.3599%" height="15" fill="rgb(250,197,38)" fg:x="11685" fg:w="303"/><text x="52.7368%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (18 instructions, 0.08%)</title><rect x="53.8037%" y="149" width="0.0808%" height="15" fill="rgb(251,4,8)" fg:x="11988" fg:w="18"/><text x="54.0967%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="53.8845%" y="149" width="0.0494%" height="15" fill="rgb(247,30,19)" fg:x="12006" fg:w="11"/><text x="54.1774%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (521 instructions, 2.34%)</title><rect x="52.4079%" y="165" width="2.3383%" height="15" fill="rgb(224,33,16)" fg:x="11677" fg:w="521"/><text x="52.7008%" y="175.50">s..</text></g><g><title>candid::types::internal::env_id (559 instructions, 2.51%)</title><rect x="52.4079%" y="181" width="2.5089%" height="15" fill="rgb(221,195,48)" fg:x="11677" fg:w="559"/><text x="52.7008%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,931 instructions, 13.15%)</title><rect x="42.2468%" y="197" width="13.1547%" height="15" fill="rgb(249,95,13)" fg:x="9413" fg:w="2931"/><text x="42.5397%" y="207.50">candid::types::Ca..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.17%)</title><rect x="55.4015%" y="197" width="0.1705%" height="15" fill="rgb(221,152,47)" fg:x="12344" fg:w="38"/><text x="55.6944%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="55.5720%" y="133" width="0.0135%" height="15" fill="rgb(246,39,47)" fg:x="12382" fg:w="3"/><text x="55.8650%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="55.5855%" y="133" width="0.0180%" height="15" fill="rgb(249,99,50)" fg:x="12385" fg:w="4"/><text x="55.8784%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="55.6034%" y="133" width="0.0135%" height="15" fill="rgb(238,169,27)" fg:x="12389" fg:w="3"/><text x="55.8964%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="55.6169%" y="133" width="0.0180%" height="15" fill="rgb(249,181,19)" fg:x="12392" fg:w="4"/><text x="55.9099%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="55.6348%" y="133" width="0.0269%" height="15" fill="rgb(213,0,15)" fg:x="12396" fg:w="6"/><text x="55.9278%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="55.6618%" y="133" width="0.0180%" height="15" fill="rgb(212,12,49)" fg:x="12402" fg:w="4"/><text x="55.9547%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="55.6797%" y="133" width="0.0449%" height="15" fill="rgb(213,83,34)" fg:x="12406" fg:w="10"/><text x="55.9727%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.63%)</title><rect x="55.5720%" y="149" width="0.6328%" height="15" fill="rgb(209,73,37)" fg:x="12382" fg:w="141"/><text x="55.8650%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.64%)</title><rect x="55.5720%" y="165" width="0.6418%" height="15" fill="rgb(223,70,23)" fg:x="12382" fg:w="143"/><text x="55.8650%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.66%)</title><rect x="55.5720%" y="181" width="0.6642%" height="15" fill="rgb(210,56,35)" fg:x="12382" fg:w="148"/><text x="55.8650%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="56.3799%" y="133" width="0.0135%" height="15" fill="rgb(206,28,10)" fg:x="12562" fg:w="3"/><text x="56.6728%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="56.3933%" y="133" width="0.0180%" height="15" fill="rgb(246,26,25)" fg:x="12565" fg:w="4"/><text x="56.6863%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="56.4113%" y="133" width="0.0135%" height="15" fill="rgb(220,153,50)" fg:x="12569" fg:w="3"/><text x="56.7043%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="56.4248%" y="133" width="0.0180%" height="15" fill="rgb(252,7,8)" fg:x="12572" fg:w="4"/><text x="56.7177%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="56.4427%" y="133" width="0.0269%" height="15" fill="rgb(241,199,0)" fg:x="12576" fg:w="6"/><text x="56.7357%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="56.4696%" y="133" width="0.0180%" height="15" fill="rgb(217,202,20)" fg:x="12582" fg:w="4"/><text x="56.7626%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="56.4876%" y="133" width="0.0449%" height="15" fill="rgb(249,14,9)" fg:x="12586" fg:w="10"/><text x="56.7806%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.63%)</title><rect x="56.3799%" y="149" width="0.6328%" height="15" fill="rgb(216,203,12)" fg:x="12562" fg:w="141"/><text x="56.6728%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.64%)</title><rect x="56.3799%" y="165" width="0.6418%" height="15" fill="rgb(223,125,3)" fg:x="12562" fg:w="143"/><text x="56.6728%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.66%)</title><rect x="56.3799%" y="181" width="0.6642%" height="15" fill="rgb(252,18,50)" fg:x="12562" fg:w="148"/><text x="56.6728%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.62%)</title><rect x="55.5720%" y="197" width="1.6157%" height="15" fill="rgb(254,24,39)" fg:x="12382" fg:w="360"/><text x="55.8650%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.13%)</title><rect x="57.1877%" y="181" width="0.1257%" height="15" fill="rgb(226,228,1)" fg:x="12742" fg:w="28"/><text x="57.4807%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (105 instructions, 0.47%)</title><rect x="57.1877%" y="197" width="0.4713%" height="15" fill="rgb(224,132,33)" fg:x="12742" fg:w="105"/><text x="57.4807%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="57.6590%" y="197" width="0.0494%" height="15" fill="rgb(226,27,29)" fg:x="12847" fg:w="11"/><text x="57.9520%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="57.7084%" y="197" width="0.0494%" height="15" fill="rgb(208,132,28)" fg:x="12858" fg:w="11"/><text x="58.0013%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="57.7577%" y="197" width="0.0494%" height="15" fill="rgb(245,210,6)" fg:x="12869" fg:w="11"/><text x="58.0507%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,639 instructions, 16.33%)</title><rect x="42.2468%" y="213" width="16.3323%" height="15" fill="rgb(208,119,26)" fg:x="9413" fg:w="3639"/><text x="42.5397%" y="223.50">candid::de::IDLDeseri..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.85%)</title><rect x="58.5791%" y="197" width="1.8536%" height="15" fill="rgb(211,100,36)" fg:x="13052" fg:w="413"/><text x="58.8720%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.87%)</title><rect x="58.5791%" y="213" width="1.8715%" height="15" fill="rgb(234,222,20)" fg:x="13052" fg:w="417"/><text x="58.8720%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="60.4506%" y="197" width="0.0853%" height="15" fill="rgb(208,60,11)" fg:x="13469" fg:w="19"/><text x="60.7436%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="60.5359%" y="149" width="0.0135%" height="15" fill="rgb(228,134,5)" fg:x="13488" fg:w="3"/><text x="60.8289%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.5493%" y="149" width="0.0180%" height="15" fill="rgb(218,211,22)" fg:x="13491" fg:w="4"/><text x="60.8423%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="60.5673%" y="149" width="0.0135%" height="15" fill="rgb(234,27,23)" fg:x="13495" fg:w="3"/><text x="60.8603%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="60.5808%" y="149" width="0.0180%" height="15" fill="rgb(223,21,18)" fg:x="13498" fg:w="4"/><text x="60.8737%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="60.5987%" y="149" width="0.0224%" height="15" fill="rgb(252,22,41)" fg:x="13502" fg:w="5"/><text x="60.8917%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="60.6212%" y="149" width="0.0135%" height="15" fill="rgb(250,5,14)" fg:x="13507" fg:w="3"/><text x="60.9141%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="60.6346%" y="149" width="0.0269%" height="15" fill="rgb(240,222,19)" fg:x="13510" fg:w="6"/><text x="60.9276%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.6616%" y="149" width="0.0180%" height="15" fill="rgb(238,159,18)" fg:x="13516" fg:w="4"/><text x="60.9545%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="60.6795%" y="149" width="0.0449%" height="15" fill="rgb(237,155,46)" fg:x="13520" fg:w="10"/><text x="60.9725%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.87%)</title><rect x="60.5359%" y="165" width="0.8662%" height="15" fill="rgb(219,208,47)" fg:x="13488" fg:w="193"/><text x="60.8289%" y="175.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.88%)</title><rect x="60.5359%" y="181" width="0.8752%" height="15" fill="rgb(225,57,24)" fg:x="13488" fg:w="195"/><text x="60.8289%" y="191.50"></text></g><g><title>__rust_dealloc (200 instructions, 0.90%)</title><rect x="60.5359%" y="197" width="0.8976%" height="15" fill="rgb(236,182,25)" fg:x="13488" fg:w="200"/><text x="60.8289%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="61.4335%" y="133" width="0.0135%" height="15" fill="rgb(215,65,16)" fg:x="13688" fg:w="3"/><text x="61.7265%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="61.4470%" y="133" width="0.0180%" height="15" fill="rgb(210,54,46)" fg:x="13691" fg:w="4"/><text x="61.7399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="61.4649%" y="133" width="0.0135%" height="15" fill="rgb(206,161,52)" fg:x="13695" fg:w="3"/><text x="61.7579%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="61.4784%" y="133" width="0.0180%" height="15" fill="rgb(213,134,29)" fg:x="13698" fg:w="4"/><text x="61.7714%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="61.4963%" y="133" width="0.0224%" height="15" fill="rgb(248,222,33)" fg:x="13702" fg:w="5"/><text x="61.7893%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="61.5188%" y="133" width="0.0135%" height="15" fill="rgb(232,84,5)" fg:x="13707" fg:w="3"/><text x="61.8118%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="61.5322%" y="133" width="0.0269%" height="15" fill="rgb(249,168,27)" fg:x="13710" fg:w="6"/><text x="61.8252%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="61.5592%" y="133" width="0.0180%" height="15" fill="rgb(209,209,13)" fg:x="13716" fg:w="4"/><text x="61.8521%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="61.5771%" y="133" width="0.0449%" height="15" fill="rgb(210,187,3)" fg:x="13720" fg:w="10"/><text x="61.8701%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::leftshift_for_tree_index (10 instructions, 0.04%)</title><rect x="61.6265%" y="117" width="0.0449%" height="15" fill="rgb(241,21,35)" fg:x="13731" fg:w="10"/><text x="61.9195%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="61.6759%" y="117" width="0.0180%" height="15" fill="rgb(234,22,0)" fg:x="13742" fg:w="4"/><text x="61.9688%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (113 instructions, 0.51%)</title><rect x="61.6220%" y="133" width="0.5072%" height="15" fill="rgb(209,10,33)" fg:x="13730" fg:w="113"/><text x="61.9150%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (282 instructions, 1.27%)</title><rect x="61.4335%" y="149" width="1.2657%" height="15" fill="rgb(250,166,51)" fg:x="13688" fg:w="282"/><text x="61.7265%" y="159.50"></text></g><g><title>__rdl_dealloc (284 instructions, 1.27%)</title><rect x="61.4335%" y="165" width="1.2746%" height="15" fill="rgb(209,69,5)" fg:x="13688" fg:w="284"/><text x="61.7265%" y="175.50"></text></g><g><title>__rust_dealloc (289 instructions, 1.30%)</title><rect x="61.4335%" y="181" width="1.2971%" height="15" fill="rgb(225,33,33)" fg:x="13688" fg:w="289"/><text x="61.7265%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (321 instructions, 1.44%)</title><rect x="61.4335%" y="197" width="1.4407%" height="15" fill="rgb(225,226,17)" fg:x="13688" fg:w="321"/><text x="61.7265%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="62.8742%" y="197" width="0.0494%" height="15" fill="rgb(221,56,51)" fg:x="14009" fg:w="11"/><text x="63.1672%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="62.9236%" y="197" width="0.0224%" height="15" fill="rgb(205,149,16)" fg:x="14020" fg:w="5"/><text x="63.2165%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (653 instructions, 2.93%)</title><rect x="60.4506%" y="213" width="2.9307%" height="15" fill="rgb(223,44,14)" fg:x="13469" fg:w="653"/><text x="60.7436%" y="223.50">ca..</text></g><g><title>candid::utils::decode_args (13,698 instructions, 61.48%)</title><rect x="2.3652%" y="229" width="61.4784%" height="15" fill="rgb(240,87,47)" fg:x="527" fg:w="13698"/><text x="2.6582%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="63.8436%" y="181" width="0.0135%" height="15" fill="rgb(214,60,47)" fg:x="14225" fg:w="3"/><text x="64.1366%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.8571%" y="181" width="0.0180%" height="15" fill="rgb(234,191,39)" fg:x="14228" fg:w="4"/><text x="64.1501%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="63.8751%" y="181" width="0.0135%" height="15" fill="rgb(241,61,24)" fg:x="14232" fg:w="3"/><text x="64.1680%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="63.8885%" y="181" width="0.0180%" height="15" fill="rgb(212,57,36)" fg:x="14235" fg:w="4"/><text x="64.1815%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="63.9065%" y="181" width="0.0269%" height="15" fill="rgb(243,86,20)" fg:x="14239" fg:w="6"/><text x="64.1994%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.9334%" y="181" width="0.0180%" height="15" fill="rgb(236,208,53)" fg:x="14245" fg:w="4"/><text x="64.2264%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.25%)</title><rect x="63.9513%" y="181" width="0.2468%" height="15" fill="rgb(206,14,5)" fg:x="14249" fg:w="55"/><text x="64.2443%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="64.1982%" y="181" width="0.0449%" height="15" fill="rgb(222,203,2)" fg:x="14304" fg:w="10"/><text x="64.4912%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::leftshift_for_tree_index (10 instructions, 0.04%)</title><rect x="64.2476%" y="165" width="0.0449%" height="15" fill="rgb(229,214,26)" fg:x="14315" fg:w="10"/><text x="64.5405%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="64.2969%" y="165" width="0.0180%" height="15" fill="rgb(238,220,8)" fg:x="14326" fg:w="4"/><text x="64.5899%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (113 instructions, 0.51%)</title><rect x="64.2431%" y="181" width="0.5072%" height="15" fill="rgb(229,212,39)" fg:x="14314" fg:w="113"/><text x="64.5360%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (266 instructions, 1.19%)</title><rect x="63.8436%" y="197" width="1.1938%" height="15" fill="rgb(228,90,47)" fg:x="14225" fg:w="266"/><text x="64.1366%" y="207.50"></text></g><g><title>__rdl_dealloc (268 instructions, 1.20%)</title><rect x="63.8436%" y="213" width="1.2028%" height="15" fill="rgb(242,136,4)" fg:x="14225" fg:w="268"/><text x="64.1366%" y="223.50"></text></g><g><title>__rust_dealloc (273 instructions, 1.23%)</title><rect x="63.8436%" y="229" width="1.2253%" height="15" fill="rgb(226,208,8)" fg:x="14225" fg:w="273"/><text x="64.1366%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (14,223 instructions, 63.83%)</title><rect x="1.4182%" y="245" width="63.8347%" height="15" fill="rgb(232,166,49)" fg:x="316" fg:w="14223"/><text x="1.7112%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>heap::MAP::__getit (6 instructions, 0.03%)</title><rect x="65.2529%" y="229" width="0.0269%" height="15" fill="rgb(208,87,27)" fg:x="14539" fg:w="6"/><text x="65.5459%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,989 instructions, 26.88%)</title><rect x="65.2529%" y="245" width="26.8794%" height="15" fill="rgb(253,207,22)" fg:x="14539" fg:w="5989"/><text x="65.5459%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.04%)</title><rect x="92.1323%" y="213" width="0.0359%" height="15" fill="rgb(223,69,11)" fg:x="20528" fg:w="8"/><text x="92.4253%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="92.1682%" y="133" width="0.0135%" height="15" fill="rgb(216,145,40)" fg:x="20536" fg:w="3"/><text x="92.4612%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="92.1817%" y="133" width="0.0180%" height="15" fill="rgb(239,18,29)" fg:x="20539" fg:w="4"/><text x="92.4746%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="92.1996%" y="133" width="0.0135%" height="15" fill="rgb(252,140,54)" fg:x="20543" fg:w="3"/><text x="92.4926%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="92.2131%" y="133" width="0.0180%" height="15" fill="rgb(218,74,36)" fg:x="20546" fg:w="4"/><text x="92.5061%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="92.2310%" y="133" width="0.0224%" height="15" fill="rgb(223,122,42)" fg:x="20550" fg:w="5"/><text x="92.5240%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="92.2535%" y="133" width="0.0135%" height="15" fill="rgb(223,195,37)" fg:x="20555" fg:w="3"/><text x="92.5465%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.25%)</title><rect x="92.2670%" y="133" width="0.2468%" height="15" fill="rgb(254,206,16)" fg:x="20558" fg:w="55"/><text x="92.5599%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="92.5138%" y="133" width="0.0269%" height="15" fill="rgb(248,142,53)" fg:x="20613" fg:w="6"/><text x="92.8068%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="92.5407%" y="133" width="0.0449%" height="15" fill="rgb(233,142,44)" fg:x="20619" fg:w="10"/><text x="92.8337%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (158 instructions, 0.71%)</title><rect x="92.1682%" y="149" width="0.7091%" height="15" fill="rgb(219,144,35)" fg:x="20536" fg:w="158"/><text x="92.4612%" y="159.50"></text></g><g><title>__rdl_dealloc (160 instructions, 0.72%)</title><rect x="92.1682%" y="165" width="0.7181%" height="15" fill="rgb(210,58,34)" fg:x="20536" fg:w="160"/><text x="92.4612%" y="175.50"></text></g><g><title>__rust_dealloc (165 instructions, 0.74%)</title><rect x="92.1682%" y="181" width="0.7405%" height="15" fill="rgb(212,171,23)" fg:x="20536" fg:w="165"/><text x="92.4612%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (197 instructions, 0.88%)</title><rect x="92.1682%" y="197" width="0.8842%" height="15" fill="rgb(224,55,10)" fg:x="20536" fg:w="197"/><text x="92.4612%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.61%)</title><rect x="93.0524%" y="181" width="0.6059%" height="15" fill="rgb(218,142,3)" fg:x="20733" fg:w="135"/><text x="93.3453%" y="191.50"></text></g><g><title>memset (139 instructions, 0.62%)</title><rect x="93.0524%" y="197" width="0.6238%" height="15" fill="rgb(231,170,18)" fg:x="20733" fg:w="139"/><text x="93.3453%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (411 instructions, 1.84%)</title><rect x="92.1682%" y="213" width="1.8446%" height="15" fill="rgb(221,36,5)" fg:x="20536" fg:w="411"/><text x="92.4612%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (504 instructions, 2.26%)</title><rect x="92.1323%" y="229" width="2.2620%" height="15" fill="rgb(220,215,52)" fg:x="20528" fg:w="504"/><text x="92.4253%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="94.3943%" y="229" width="0.0135%" height="15" fill="rgb(254,207,18)" fg:x="21032" fg:w="3"/><text x="94.6873%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.15%)</title><rect x="94.4078%" y="197" width="0.1481%" height="15" fill="rgb(252,188,34)" fg:x="21035" fg:w="33"/><text x="94.7008%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.39%)</title><rect x="94.4078%" y="213" width="0.3950%" height="15" fill="rgb(238,143,12)" fg:x="21035" fg:w="88"/><text x="94.7008%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.8027%" y="101" width="0.0404%" height="15" fill="rgb(207,135,6)" fg:x="21123" fg:w="9"/><text x="95.0957%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.8431%" y="101" width="0.0404%" height="15" fill="rgb(240,203,1)" fg:x="21132" fg:w="9"/><text x="95.1361%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.8835%" y="101" width="0.0404%" height="15" fill="rgb(242,9,20)" fg:x="21141" fg:w="9"/><text x="95.1765%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.9239%" y="101" width="0.0135%" height="15" fill="rgb(213,96,44)" fg:x="21150" fg:w="3"/><text x="95.2169%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="94.9374%" y="101" width="0.0449%" height="15" fill="rgb(237,180,10)" fg:x="21153" fg:w="10"/><text x="95.2304%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.9823%" y="101" width="0.0224%" height="15" fill="rgb(233,165,3)" fg:x="21163" fg:w="5"/><text x="95.2752%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="95.0047%" y="101" width="0.0135%" height="15" fill="rgb(209,32,9)" fg:x="21168" fg:w="3"/><text x="95.2977%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.59%)</title><rect x="94.8027%" y="117" width="0.5924%" height="15" fill="rgb(231,2,26)" fg:x="21123" fg:w="132"/><text x="95.0957%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="94.8027%" y="133" width="0.6373%" height="15" fill="rgb(249,22,1)" fg:x="21123" fg:w="142"/><text x="95.0957%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.65%)</title><rect x="94.8027%" y="149" width="0.6508%" height="15" fill="rgb(232,15,43)" fg:x="21123" fg:w="145"/><text x="95.0957%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="94.8027%" y="165" width="0.6777%" height="15" fill="rgb(246,193,23)" fg:x="21123" fg:w="151"/><text x="95.0957%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.82%)</title><rect x="94.8027%" y="181" width="0.8213%" height="15" fill="rgb(247,193,33)" fg:x="21123" fg:w="183"/><text x="95.0957%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.12%)</title><rect x="94.8027%" y="197" width="1.1220%" height="15" fill="rgb(230,166,33)" fg:x="21123" fg:w="250"/><text x="95.0957%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.04%)</title><rect x="95.9248%" y="197" width="0.0449%" height="15" fill="rgb(237,28,5)" fg:x="21373" fg:w="10"/><text x="96.2177%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.9697%" y="181" width="0.0494%" height="15" fill="rgb(237,172,38)" fg:x="21383" fg:w="11"/><text x="96.2626%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="96.0370%" y="181" width="0.0494%" height="15" fill="rgb(232,46,53)" fg:x="21398" fg:w="11"/><text x="96.3300%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.13%)</title><rect x="95.9697%" y="197" width="0.1346%" height="15" fill="rgb(242,123,31)" fg:x="21383" fg:w="30"/><text x="96.2626%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.21%)</title><rect x="94.8027%" y="213" width="2.2082%" height="15" fill="rgb(224,44,39)" fg:x="21123" fg:w="492"/><text x="95.0957%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="97.0109%" y="213" width="0.0269%" height="15" fill="rgb(241,48,14)" fg:x="21615" fg:w="6"/><text x="97.3039%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.14%)</title><rect x="97.0378%" y="197" width="0.1391%" height="15" fill="rgb(226,223,44)" fg:x="21621" fg:w="31"/><text x="97.3308%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.39%)</title><rect x="97.0378%" y="213" width="0.3860%" height="15" fill="rgb(248,47,50)" fg:x="21621" fg:w="86"/><text x="97.3308%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.4238%" y="213" width="0.0269%" height="15" fill="rgb(213,71,9)" fg:x="21707" fg:w="6"/><text x="97.7168%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.4507%" y="213" width="0.0673%" height="15" fill="rgb(213,44,33)" fg:x="21713" fg:w="15"/><text x="97.7437%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.46%)</title><rect x="94.4078%" y="229" width="3.4648%" height="15" fill="rgb(250,53,49)" fg:x="21035" fg:w="772"/><text x="94.7008%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.8726%" y="229" width="0.0224%" height="15" fill="rgb(214,170,7)" fg:x="21807" fg:w="5"/><text x="98.1656%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.8951%" y="181" width="0.0135%" height="15" fill="rgb(252,131,43)" fg:x="21812" fg:w="3"/><text x="98.1880%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.9085%" y="181" width="0.0180%" height="15" fill="rgb(231,31,12)" fg:x="21815" fg:w="4"/><text x="98.2015%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.9265%" y="181" width="0.0135%" height="15" fill="rgb(235,62,3)" fg:x="21819" fg:w="3"/><text x="98.2195%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.9399%" y="181" width="0.0180%" height="15" fill="rgb(243,59,5)" fg:x="21822" fg:w="4"/><text x="98.2329%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.9579%" y="181" width="0.0269%" height="15" fill="rgb(242,9,40)" fg:x="21826" fg:w="6"/><text x="98.2509%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="97.9848%" y="181" width="0.0449%" height="15" fill="rgb(214,120,10)" fg:x="21832" fg:w="10"/><text x="98.2778%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.31%)</title><rect x="97.8951%" y="197" width="0.3142%" height="15" fill="rgb(228,60,52)" fg:x="21812" fg:w="70"/><text x="98.1880%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.32%)</title><rect x="97.8951%" y="213" width="0.3231%" height="15" fill="rgb(252,11,9)" fg:x="21812" fg:w="72"/><text x="98.1880%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="97.8951%" y="229" width="0.3456%" height="15" fill="rgb(230,177,37)" fg:x="21812" fg:w="77"/><text x="98.1880%" y="239.50"></text></g><g><title>candid::utils::write_args (1,437 instructions, 6.45%)</title><rect x="92.1323%" y="245" width="6.4494%" height="15" fill="rgb(206,32,21)" fg:x="20528" fg:w="1437"/><text x="92.4253%" y="255.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.5818%" y="197" width="0.0135%" height="15" fill="rgb(228,4,34)" fg:x="21965" fg:w="3"/><text x="98.8747%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.5952%" y="197" width="0.0180%" height="15" fill="rgb(230,14,20)" fg:x="21968" fg:w="4"/><text x="98.8882%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.6132%" y="197" width="0.0135%" height="15" fill="rgb(245,144,51)" fg:x="21972" fg:w="3"/><text x="98.9061%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.6266%" y="197" width="0.0180%" height="15" fill="rgb(223,83,26)" fg:x="21975" fg:w="4"/><text x="98.9196%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.6446%" y="197" width="0.0269%" height="15" fill="rgb(220,185,40)" fg:x="21979" fg:w="6"/><text x="98.9376%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="98.6715%" y="197" width="0.0718%" height="15" fill="rgb(222,226,17)" fg:x="21985" fg:w="16"/><text x="98.9645%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="98.5818%" y="213" width="0.4398%" height="15" fill="rgb(243,227,3)" fg:x="21965" fg:w="98"/><text x="98.8747%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="98.5818%" y="229" width="0.4488%" height="15" fill="rgb(245,219,26)" fg:x="21965" fg:w="100"/><text x="98.8747%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="99.0530%" y="197" width="0.0135%" height="15" fill="rgb(234,202,38)" fg:x="22070" fg:w="3"/><text x="99.3460%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="99.0665%" y="197" width="0.0180%" height="15" fill="rgb(247,190,46)" fg:x="22073" fg:w="4"/><text x="99.3594%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="99.0844%" y="197" width="0.0135%" height="15" fill="rgb(230,128,53)" fg:x="22077" fg:w="3"/><text x="99.3774%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.0979%" y="197" width="0.0180%" height="15" fill="rgb(217,111,46)" fg:x="22080" fg:w="4"/><text x="99.3909%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.1158%" y="197" width="0.0224%" height="15" fill="rgb(251,30,54)" fg:x="22084" fg:w="5"/><text x="99.4088%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.1383%" y="197" width="0.0135%" height="15" fill="rgb(209,69,6)" fg:x="22089" fg:w="3"/><text x="99.4312%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.1517%" y="197" width="0.0269%" height="15" fill="rgb(225,30,0)" fg:x="22092" fg:w="6"/><text x="99.4447%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.04%)</title><rect x="99.1787%" y="197" width="0.0449%" height="15" fill="rgb(243,123,13)" fg:x="22098" fg:w="10"/><text x="99.4716%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.55%)</title><rect x="99.0530%" y="213" width="0.5476%" height="15" fill="rgb(233,155,50)" fg:x="22070" fg:w="122"/><text x="99.3460%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.56%)</title><rect x="99.0530%" y="229" width="0.5565%" height="15" fill="rgb(208,137,48)" fg:x="22070" fg:w="124"/><text x="99.3460%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.05%)</title><rect x="98.5818%" y="245" width="1.0502%" height="15" fill="rgb(220,112,2)" fg:x="21965" fg:w="234"/><text x="98.8747%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (22,270 instructions, 99.95%)</title><rect x="0.0359%" y="261" width="99.9506%" height="15" fill="rgb(228,58,3)" fg:x="8" fg:w="22270"/><text x="0.3289%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (22,281 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(231,198,34)" fg:x="0" fg:w="22281"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_put (22,281 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(246,196,25)" fg:x="0" fg:w="22281"/><text x="0.2930%" y="287.50">canister_update batch_put</text></g></svg></svg>