<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">heap_rs.batch_put</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="22092"><g><title>ic_cdk::setup (8 instructions, 0.04%)</title><rect x="0.0000%" y="261" width="0.0362%" height="15" fill="rgb(246,113,40)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0362%" y="181" width="0.0407%" height="15" fill="rgb(249,153,10)" fg:x="8" fg:w="9"/><text x="0.3292%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.0770%" y="181" width="0.0407%" height="15" fill="rgb(247,144,6)" fg:x="17" fg:w="9"/><text x="0.3699%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.1177%" y="181" width="0.0407%" height="15" fill="rgb(218,130,37)" fg:x="26" fg:w="9"/><text x="0.4107%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.1584%" y="181" width="0.0136%" height="15" fill="rgb(224,204,23)" fg:x="35" fg:w="3"/><text x="0.4514%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.1720%" y="181" width="0.0453%" height="15" fill="rgb(254,65,50)" fg:x="38" fg:w="10"/><text x="0.4650%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.2173%" y="181" width="0.0226%" height="15" fill="rgb(233,87,11)" fg:x="48" fg:w="5"/><text x="0.5102%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.2399%" y="181" width="0.0136%" height="15" fill="rgb(235,84,9)" fg:x="53" fg:w="3"/><text x="0.5329%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="0.0362%" y="197" width="0.5975%" height="15" fill="rgb(252,75,45)" fg:x="8" fg:w="132"/><text x="0.3292%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="0.0362%" y="213" width="0.6428%" height="15" fill="rgb(235,110,53)" fg:x="8" fg:w="142"/><text x="0.3292%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="0.0362%" y="229" width="0.6563%" height="15" fill="rgb(226,95,29)" fg:x="8" fg:w="145"/><text x="0.3292%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7197%" y="181" width="0.0407%" height="15" fill="rgb(232,139,12)" fg:x="159" fg:w="9"/><text x="1.0127%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.7605%" y="181" width="0.0407%" height="15" fill="rgb(226,221,13)" fg:x="168" fg:w="9"/><text x="1.0534%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="0.8012%" y="181" width="0.0407%" height="15" fill="rgb(212,211,29)" fg:x="177" fg:w="9"/><text x="1.0942%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="0.8419%" y="181" width="0.0136%" height="15" fill="rgb(238,12,42)" fg:x="186" fg:w="3"/><text x="1.1349%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="0.8555%" y="181" width="0.0453%" height="15" fill="rgb(240,12,33)" fg:x="189" fg:w="10"/><text x="1.1485%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="0.9008%" y="181" width="0.0226%" height="15" fill="rgb(215,72,53)" fg:x="199" fg:w="5"/><text x="1.1937%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="0.9234%" y="181" width="0.0136%" height="15" fill="rgb(230,32,43)" fg:x="204" fg:w="3"/><text x="1.2164%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="0.7197%" y="197" width="0.5975%" height="15" fill="rgb(216,187,7)" fg:x="159" fg:w="132"/><text x="1.0127%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="0.7197%" y="213" width="0.6428%" height="15" fill="rgb(220,168,22)" fg:x="159" fg:w="142"/><text x="1.0127%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="0.7197%" y="229" width="0.6563%" height="15" fill="rgb(219,128,26)" fg:x="159" fg:w="145"/><text x="1.0127%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 1.37%)</title><rect x="0.0362%" y="245" width="1.3670%" height="15" fill="rgb(223,229,10)" fg:x="8" fg:w="302"/><text x="0.3292%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.03%)</title><rect x="1.4032%" y="245" width="0.0272%" height="15" fill="rgb(242,171,27)" fg:x="310" fg:w="6"/><text x="1.6962%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4304%" y="149" width="0.0407%" height="15" fill="rgb(211,63,1)" fg:x="316" fg:w="9"/><text x="1.7234%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.4711%" y="149" width="0.0407%" height="15" fill="rgb(211,136,26)" fg:x="325" fg:w="9"/><text x="1.7641%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="1.5119%" y="149" width="0.0407%" height="15" fill="rgb(251,229,28)" fg:x="334" fg:w="9"/><text x="1.8048%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="1.5526%" y="149" width="0.0136%" height="15" fill="rgb(250,93,28)" fg:x="343" fg:w="3"/><text x="1.8456%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="1.5662%" y="149" width="0.0453%" height="15" fill="rgb(238,156,20)" fg:x="346" fg:w="10"/><text x="1.8591%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="1.6114%" y="149" width="0.0226%" height="15" fill="rgb(253,64,40)" fg:x="356" fg:w="5"/><text x="1.9044%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="1.6341%" y="149" width="0.0136%" height="15" fill="rgb(219,173,32)" fg:x="361" fg:w="3"/><text x="1.9270%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="1.4304%" y="165" width="0.5975%" height="15" fill="rgb(245,103,21)" fg:x="316" fg:w="132"/><text x="1.7234%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="1.4304%" y="181" width="0.6428%" height="15" fill="rgb(217,55,17)" fg:x="316" fg:w="142"/><text x="1.7234%" y="191.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="1.4304%" y="197" width="0.6563%" height="15" fill="rgb(225,121,54)" fg:x="316" fg:w="145"/><text x="1.7234%" y="207.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="1.4304%" y="213" width="0.6835%" height="15" fill="rgb(243,21,23)" fg:x="316" fg:w="151"/><text x="1.7234%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (209 instructions, 0.95%)</title><rect x="1.4304%" y="229" width="0.9460%" height="15" fill="rgb(239,53,25)" fg:x="316" fg:w="209"/><text x="1.7234%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="2.3810%" y="181" width="0.2852%" height="15" fill="rgb(236,215,4)" fg:x="526" fg:w="63"/><text x="2.6739%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="2.6661%" y="117" width="0.0272%" height="15" fill="rgb(229,19,32)" fg:x="589" fg:w="6"/><text x="2.9591%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="2.6661%" y="133" width="0.0453%" height="15" fill="rgb(244,120,49)" fg:x="589" fg:w="10"/><text x="2.9591%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.96%)</title><rect x="2.6661%" y="149" width="1.9600%" height="15" fill="rgb(249,5,36)" fg:x="589" fg:w="433"/><text x="2.9591%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.34%)</title><rect x="4.6261%" y="149" width="0.3440%" height="15" fill="rgb(205,194,28)" fg:x="1022" fg:w="76"/><text x="4.9191%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="4.9701%" y="149" width="0.2354%" height="15" fill="rgb(233,125,17)" fg:x="1098" fg:w="52"/><text x="5.2631%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.2055%" y="149" width="0.2354%" height="15" fill="rgb(250,103,24)" fg:x="1150" fg:w="52"/><text x="5.4985%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.4409%" y="149" width="0.2354%" height="15" fill="rgb(219,131,28)" fg:x="1202" fg:w="52"/><text x="5.7339%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.24%)</title><rect x="5.6763%" y="149" width="0.2354%" height="15" fill="rgb(245,217,30)" fg:x="1254" fg:w="52"/><text x="5.9692%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (859 instructions, 3.89%)</title><rect x="2.6661%" y="181" width="3.8883%" height="15" fill="rgb(206,90,16)" fg:x="589" fg:w="859"/><text x="2.9591%" y="191.50">bin..</text></g><g><title> 4]&gt;::read_options (859 instructions, 3.89%)</title><rect x="2.6661%" y="165" width="3.8883%" height="15" fill="rgb(242,28,45)" fg:x="589" fg:w="859"/><text x="2.9591%" y="175.50"> 4]..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="6.5544%" y="181" width="0.2852%" height="15" fill="rgb(219,46,27)" fg:x="1448" fg:w="63"/><text x="6.8474%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.35%)</title><rect x="6.8396%" y="165" width="0.3485%" height="15" fill="rgb(208,86,44)" fg:x="1511" fg:w="77"/><text x="7.1325%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.47%)</title><rect x="6.8396%" y="181" width="0.4708%" height="15" fill="rgb(252,88,4)" fg:x="1511" fg:w="104"/><text x="7.1325%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="7.3103%" y="133" width="0.0272%" height="15" fill="rgb(251,36,40)" fg:x="1615" fg:w="6"/><text x="7.6033%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="7.3103%" y="149" width="0.0453%" height="15" fill="rgb(241,49,45)" fg:x="1615" fg:w="10"/><text x="7.6033%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.96%)</title><rect x="7.3103%" y="165" width="1.9600%" height="15" fill="rgb(245,127,44)" fg:x="1615" fg:w="433"/><text x="7.6033%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="9.2703%" y="149" width="0.0815%" height="15" fill="rgb(228,85,10)" fg:x="2048" fg:w="18"/><text x="9.5633%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="9.2703%" y="165" width="0.0996%" height="15" fill="rgb(229,148,1)" fg:x="2048" fg:w="22"/><text x="9.5633%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.3699%" y="69" width="0.0407%" height="15" fill="rgb(205,198,35)" fg:x="2070" fg:w="9"/><text x="9.6629%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.4106%" y="69" width="0.0407%" height="15" fill="rgb(223,98,38)" fg:x="2079" fg:w="9"/><text x="9.7036%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="9.4514%" y="69" width="0.0407%" height="15" fill="rgb(210,166,50)" fg:x="2088" fg:w="9"/><text x="9.7444%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="9.4921%" y="69" width="0.0136%" height="15" fill="rgb(251,117,4)" fg:x="2097" fg:w="3"/><text x="9.7851%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="9.5057%" y="69" width="0.0453%" height="15" fill="rgb(215,112,47)" fg:x="2100" fg:w="10"/><text x="9.7987%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="9.5510%" y="69" width="0.0226%" height="15" fill="rgb(221,15,6)" fg:x="2110" fg:w="5"/><text x="9.8439%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="9.5736%" y="69" width="0.0136%" height="15" fill="rgb(207,38,43)" fg:x="2115" fg:w="3"/><text x="9.8666%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="9.3699%" y="85" width="0.5975%" height="15" fill="rgb(246,49,16)" fg:x="2070" fg:w="132"/><text x="9.6629%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="9.3699%" y="101" width="0.6428%" height="15" fill="rgb(250,50,27)" fg:x="2070" fg:w="142"/><text x="9.6629%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="9.3699%" y="117" width="0.6563%" height="15" fill="rgb(247,181,54)" fg:x="2070" fg:w="145"/><text x="9.6629%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="9.3699%" y="133" width="0.6835%" height="15" fill="rgb(208,72,39)" fg:x="2070" fg:w="151"/><text x="9.6629%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.27%)</title><rect x="10.0534%" y="85" width="0.2716%" height="15" fill="rgb(241,72,15)" fg:x="2221" fg:w="60"/><text x="10.3464%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.29%)</title><rect x="10.0534%" y="101" width="0.2897%" height="15" fill="rgb(237,16,29)" fg:x="2221" fg:w="64"/><text x="10.3464%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.40%)</title><rect x="10.0534%" y="117" width="0.4029%" height="15" fill="rgb(241,218,9)" fg:x="2221" fg:w="89"/><text x="10.3464%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="10.4563%" y="69" width="0.0453%" height="15" fill="rgb(214,115,42)" fg:x="2310" fg:w="10"/><text x="10.7492%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="10.5015%" y="37" width="0.1358%" height="15" fill="rgb(245,36,38)" fg:x="2320" fg:w="30"/><text x="10.7945%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.15%)</title><rect x="10.5015%" y="53" width="0.1539%" height="15" fill="rgb(233,124,15)" fg:x="2320" fg:w="34"/><text x="10.7945%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.27%)</title><rect x="10.5015%" y="69" width="0.2671%" height="15" fill="rgb(209,115,7)" fg:x="2320" fg:w="59"/><text x="10.7945%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.54%)</title><rect x="10.4563%" y="85" width="0.5387%" height="15" fill="rgb(248,112,45)" fg:x="2310" fg:w="119"/><text x="10.7492%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.79%)</title><rect x="10.4563%" y="101" width="0.7876%" height="15" fill="rgb(250,220,32)" fg:x="2310" fg:w="174"/><text x="10.7492%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.81%)</title><rect x="10.4563%" y="117" width="0.8102%" height="15" fill="rgb(239,149,13)" fg:x="2310" fg:w="179"/><text x="10.7492%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.72%)</title><rect x="10.0534%" y="133" width="1.7156%" height="15" fill="rgb(206,70,3)" fg:x="2221" fg:w="379"/><text x="10.3464%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.05%)</title><rect x="9.3699%" y="149" width="3.0464%" height="15" fill="rgb(243,191,44)" fg:x="2070" fg:w="673"/><text x="9.6629%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.34%)</title><rect x="12.4163%" y="149" width="0.3440%" height="15" fill="rgb(220,40,34)" fg:x="2743" fg:w="76"/><text x="12.7092%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="12.7603%" y="101" width="0.0136%" height="15" fill="rgb(219,100,12)" fg:x="2819" fg:w="3"/><text x="13.0532%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="12.7739%" y="101" width="0.0181%" height="15" fill="rgb(227,34,49)" fg:x="2822" fg:w="4"/><text x="13.0668%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="12.7920%" y="101" width="0.0136%" height="15" fill="rgb(221,164,48)" fg:x="2826" fg:w="3"/><text x="13.0849%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="12.8055%" y="101" width="0.0181%" height="15" fill="rgb(221,170,41)" fg:x="2829" fg:w="4"/><text x="13.0985%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="12.8236%" y="101" width="0.0272%" height="15" fill="rgb(229,112,28)" fg:x="2833" fg:w="6"/><text x="13.1166%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="12.8508%" y="101" width="0.0453%" height="15" fill="rgb(252,139,53)" fg:x="2839" fg:w="10"/><text x="13.1438%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="12.7603%" y="117" width="0.3169%" height="15" fill="rgb(205,224,35)" fg:x="2819" fg:w="70"/><text x="13.0532%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="12.7603%" y="133" width="0.3259%" height="15" fill="rgb(222,53,24)" fg:x="2819" fg:w="72"/><text x="13.0532%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="12.7603%" y="149" width="0.3485%" height="15" fill="rgb(210,172,6)" fg:x="2819" fg:w="77"/><text x="13.0532%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.06%)</title><rect x="9.3699%" y="165" width="4.0603%" height="15" fill="rgb(209,69,34)" fg:x="2070" fg:w="897"/><text x="9.6629%" y="175.50">bin..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.11%)</title><rect x="13.4302%" y="165" width="0.1132%" height="15" fill="rgb(225,221,1)" fg:x="2967" fg:w="25"/><text x="13.7232%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,525 instructions, 6.90%)</title><rect x="7.3103%" y="181" width="6.9030%" height="15" fill="rgb(245,15,49)" fg:x="1615" fg:w="1525"/><text x="7.6033%" y="191.50">binread..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.26%)</title><rect x="14.2133%" y="181" width="0.2625%" height="15" fill="rgb(209,131,33)" fg:x="3140" fg:w="58"/><text x="14.5063%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.35%)</title><rect x="14.4758%" y="165" width="0.3485%" height="15" fill="rgb(253,153,29)" fg:x="3198" fg:w="77"/><text x="14.7688%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.47%)</title><rect x="14.4758%" y="181" width="0.4708%" height="15" fill="rgb(254,140,52)" fg:x="3198" fg:w="104"/><text x="14.7688%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.03%)</title><rect x="14.9466%" y="133" width="0.0272%" height="15" fill="rgb(243,82,33)" fg:x="3302" fg:w="6"/><text x="15.2396%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.05%)</title><rect x="14.9466%" y="149" width="0.0453%" height="15" fill="rgb(214,124,45)" fg:x="3302" fg:w="10"/><text x="15.2396%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.96%)</title><rect x="14.9466%" y="165" width="1.9600%" height="15" fill="rgb(220,14,44)" fg:x="3302" fg:w="433"/><text x="15.2396%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.08%)</title><rect x="16.9066%" y="149" width="0.0815%" height="15" fill="rgb(205,149,31)" fg:x="3735" fg:w="18"/><text x="17.1995%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.10%)</title><rect x="16.9066%" y="165" width="0.0996%" height="15" fill="rgb(246,64,35)" fg:x="3735" fg:w="22"/><text x="17.1995%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.0062%" y="69" width="0.0407%" height="15" fill="rgb(251,166,42)" fg:x="3757" fg:w="9"/><text x="17.2991%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.0469%" y="69" width="0.0407%" height="15" fill="rgb(212,55,37)" fg:x="3766" fg:w="9"/><text x="17.3399%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="17.0876%" y="69" width="0.0407%" height="15" fill="rgb(241,164,20)" fg:x="3775" fg:w="9"/><text x="17.3806%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="17.1284%" y="69" width="0.0136%" height="15" fill="rgb(210,36,3)" fg:x="3784" fg:w="3"/><text x="17.4213%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="17.1420%" y="69" width="0.0453%" height="15" fill="rgb(212,48,36)" fg:x="3787" fg:w="10"/><text x="17.4349%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="17.1872%" y="69" width="0.0226%" height="15" fill="rgb(237,158,50)" fg:x="3797" fg:w="5"/><text x="17.4802%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="17.2098%" y="69" width="0.0136%" height="15" fill="rgb(242,181,25)" fg:x="3802" fg:w="3"/><text x="17.5028%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="17.0062%" y="85" width="0.5975%" height="15" fill="rgb(211,66,52)" fg:x="3757" fg:w="132"/><text x="17.2991%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="17.0062%" y="101" width="0.6428%" height="15" fill="rgb(246,53,42)" fg:x="3757" fg:w="142"/><text x="17.2991%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="17.0062%" y="117" width="0.6563%" height="15" fill="rgb(248,214,5)" fg:x="3757" fg:w="145"/><text x="17.2991%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="17.0062%" y="133" width="0.6835%" height="15" fill="rgb(228,147,7)" fg:x="3757" fg:w="151"/><text x="17.2991%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.27%)</title><rect x="17.6897%" y="85" width="0.2716%" height="15" fill="rgb(254,0,43)" fg:x="3908" fg:w="60"/><text x="17.9826%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.29%)</title><rect x="17.6897%" y="101" width="0.2897%" height="15" fill="rgb(251,196,43)" fg:x="3908" fg:w="64"/><text x="17.9826%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.40%)</title><rect x="17.6897%" y="117" width="0.4029%" height="15" fill="rgb(213,203,42)" fg:x="3908" fg:w="89"/><text x="17.9826%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.05%)</title><rect x="18.0925%" y="69" width="0.0453%" height="15" fill="rgb(243,190,1)" fg:x="3997" fg:w="10"/><text x="18.3855%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.14%)</title><rect x="18.1378%" y="37" width="0.1358%" height="15" fill="rgb(228,143,47)" fg:x="4007" fg:w="30"/><text x="18.4308%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.15%)</title><rect x="18.1378%" y="53" width="0.1539%" height="15" fill="rgb(244,11,16)" fg:x="4007" fg:w="34"/><text x="18.4308%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.27%)</title><rect x="18.1378%" y="69" width="0.2671%" height="15" fill="rgb(231,2,52)" fg:x="4007" fg:w="59"/><text x="18.4308%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.54%)</title><rect x="18.0925%" y="85" width="0.5387%" height="15" fill="rgb(214,170,24)" fg:x="3997" fg:w="119"/><text x="18.3855%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.79%)</title><rect x="18.0925%" y="101" width="0.7876%" height="15" fill="rgb(253,62,40)" fg:x="3997" fg:w="174"/><text x="18.3855%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.81%)</title><rect x="18.0925%" y="117" width="0.8102%" height="15" fill="rgb(244,142,40)" fg:x="3997" fg:w="179"/><text x="18.3855%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.72%)</title><rect x="17.6897%" y="133" width="1.7156%" height="15" fill="rgb(214,132,1)" fg:x="3908" fg:w="379"/><text x="17.9826%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 3.05%)</title><rect x="17.0062%" y="149" width="3.0464%" height="15" fill="rgb(215,53,24)" fg:x="3757" fg:w="673"/><text x="17.2991%" y="159.50">al..</text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.34%)</title><rect x="20.0525%" y="149" width="0.3440%" height="15" fill="rgb(237,51,51)" fg:x="4430" fg:w="76"/><text x="20.3455%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="20.3965%" y="101" width="0.0136%" height="15" fill="rgb(222,226,41)" fg:x="4506" fg:w="3"/><text x="20.6895%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="20.4101%" y="101" width="0.0181%" height="15" fill="rgb(249,138,47)" fg:x="4509" fg:w="4"/><text x="20.7031%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="20.4282%" y="101" width="0.0136%" height="15" fill="rgb(254,52,4)" fg:x="4513" fg:w="3"/><text x="20.7212%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="20.4418%" y="101" width="0.0181%" height="15" fill="rgb(227,221,2)" fg:x="4516" fg:w="4"/><text x="20.7348%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="20.4599%" y="101" width="0.0272%" height="15" fill="rgb(234,11,5)" fg:x="4520" fg:w="6"/><text x="20.7529%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="20.4871%" y="101" width="0.0453%" height="15" fill="rgb(232,192,35)" fg:x="4526" fg:w="10"/><text x="20.7800%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="20.3965%" y="117" width="0.3169%" height="15" fill="rgb(225,121,33)" fg:x="4506" fg:w="70"/><text x="20.6895%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="20.3965%" y="133" width="0.3259%" height="15" fill="rgb(209,103,5)" fg:x="4506" fg:w="72"/><text x="20.6895%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="20.3965%" y="149" width="0.3485%" height="15" fill="rgb(216,27,10)" fg:x="4506" fg:w="77"/><text x="20.6895%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 4.06%)</title><rect x="17.0062%" y="165" width="4.0603%" height="15" fill="rgb(244,94,5)" fg:x="3757" fg:w="897"/><text x="17.2991%" y="175.50">bin..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.29%)</title><rect x="21.0664%" y="133" width="0.2852%" height="15" fill="rgb(209,215,45)" fg:x="4654" fg:w="63"/><text x="21.3594%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.50%)</title><rect x="21.3516%" y="117" width="0.4979%" height="15" fill="rgb(208,132,16)" fg:x="4717" fg:w="110"/><text x="21.6446%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.62%)</title><rect x="21.3516%" y="133" width="0.6201%" height="15" fill="rgb(249,10,6)" fg:x="4717" fg:w="137"/><text x="21.6446%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.26%)</title><rect x="21.9718%" y="133" width="0.2625%" height="15" fill="rgb(231,149,2)" fg:x="4854" fg:w="58"/><text x="22.2647%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (314 instructions, 1.42%)</title><rect x="21.0664%" y="149" width="1.4213%" height="15" fill="rgb(251,126,30)" fg:x="4654" fg:w="314"/><text x="21.3594%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.4878%" y="85" width="0.0407%" height="15" fill="rgb(220,168,21)" fg:x="4968" fg:w="9"/><text x="22.7807%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.5285%" y="85" width="0.0407%" height="15" fill="rgb(239,77,32)" fg:x="4977" fg:w="9"/><text x="22.8215%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="22.5693%" y="85" width="0.0407%" height="15" fill="rgb(249,23,33)" fg:x="4986" fg:w="9"/><text x="22.8622%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="22.6100%" y="85" width="0.0136%" height="15" fill="rgb(252,67,3)" fg:x="4995" fg:w="3"/><text x="22.9030%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="22.6236%" y="85" width="0.0453%" height="15" fill="rgb(251,13,45)" fg:x="4998" fg:w="10"/><text x="22.9165%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="22.6688%" y="85" width="0.0226%" height="15" fill="rgb(223,164,45)" fg:x="5008" fg:w="5"/><text x="22.9618%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="22.6915%" y="85" width="0.0136%" height="15" fill="rgb(221,217,31)" fg:x="5013" fg:w="3"/><text x="22.9844%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="22.4878%" y="101" width="0.5975%" height="15" fill="rgb(206,48,31)" fg:x="4968" fg:w="132"/><text x="22.7807%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="22.4878%" y="117" width="0.6428%" height="15" fill="rgb(208,200,31)" fg:x="4968" fg:w="142"/><text x="22.7807%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="22.4878%" y="133" width="0.6563%" height="15" fill="rgb(251,139,3)" fg:x="4968" fg:w="145"/><text x="22.7807%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="22.4878%" y="149" width="0.6835%" height="15" fill="rgb(222,105,38)" fg:x="4968" fg:w="151"/><text x="22.7807%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (550 instructions, 2.49%)</title><rect x="21.0664%" y="165" width="2.4896%" height="15" fill="rgb(233,11,47)" fg:x="4654" fg:w="550"/><text x="21.3594%" y="175.50">&lt;..</text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,050 instructions, 9.28%)</title><rect x="14.9466%" y="181" width="9.2794%" height="15" fill="rgb(231,56,51)" fg:x="3302" fg:w="2050"/><text x="15.2396%" y="191.50">binread::bi..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.26%)</title><rect x="24.2260%" y="181" width="0.2625%" height="15" fill="rgb(249,146,37)" fg:x="5352" fg:w="58"/><text x="24.5189%" y="191.50"></text></g><g><title>binread::BinRead::read (5,102 instructions, 23.09%)</title><rect x="2.3764%" y="197" width="23.0943%" height="15" fill="rgb(216,188,24)" fg:x="525" fg:w="5102"/><text x="2.6694%" y="207.50">binread::BinRead::read</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="25.4708%" y="181" width="0.0634%" height="15" fill="rgb(241,109,6)" fg:x="5627" fg:w="14"/><text x="25.7637%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.06%)</title><rect x="25.5341%" y="165" width="0.0634%" height="15" fill="rgb(217,201,34)" fg:x="5641" fg:w="14"/><text x="25.8271%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.11%)</title><rect x="25.5975%" y="165" width="0.1132%" height="15" fill="rgb(217,116,25)" fg:x="5655" fg:w="25"/><text x="25.8905%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="25.7107%" y="165" width="0.0860%" height="15" fill="rgb(227,11,33)" fg:x="5680" fg:w="19"/><text x="26.0036%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (210 instructions, 0.95%)</title><rect x="25.5341%" y="181" width="0.9506%" height="15" fill="rgb(239,171,51)" fg:x="5641" fg:w="210"/><text x="25.8271%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.4847%" y="101" width="0.0407%" height="15" fill="rgb(231,13,2)" fg:x="5851" fg:w="9"/><text x="26.7777%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.5254%" y="101" width="0.0407%" height="15" fill="rgb(206,140,15)" fg:x="5860" fg:w="9"/><text x="26.8184%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="26.5662%" y="101" width="0.0407%" height="15" fill="rgb(248,98,31)" fg:x="5869" fg:w="9"/><text x="26.8591%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="26.6069%" y="101" width="0.0136%" height="15" fill="rgb(233,92,1)" fg:x="5878" fg:w="3"/><text x="26.8999%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="26.6205%" y="101" width="0.0453%" height="15" fill="rgb(228,59,21)" fg:x="5881" fg:w="10"/><text x="26.9135%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="26.6658%" y="101" width="0.0226%" height="15" fill="rgb(243,135,40)" fg:x="5891" fg:w="5"/><text x="26.9587%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="26.6884%" y="101" width="0.0136%" height="15" fill="rgb(217,214,41)" fg:x="5896" fg:w="3"/><text x="26.9814%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="26.4847%" y="117" width="0.5975%" height="15" fill="rgb(249,204,2)" fg:x="5851" fg:w="132"/><text x="26.7777%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="26.4847%" y="133" width="0.6428%" height="15" fill="rgb(238,4,0)" fg:x="5851" fg:w="142"/><text x="26.7777%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="26.4847%" y="149" width="0.6563%" height="15" fill="rgb(244,207,0)" fg:x="5851" fg:w="145"/><text x="26.7777%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="26.4847%" y="165" width="0.6835%" height="15" fill="rgb(232,7,54)" fg:x="5851" fg:w="151"/><text x="26.7777%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (232 instructions, 1.05%)</title><rect x="26.4847%" y="181" width="1.0502%" height="15" fill="rgb(218,204,43)" fg:x="5851" fg:w="232"/><text x="26.7777%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.5349%" y="85" width="0.0407%" height="15" fill="rgb(209,136,42)" fg:x="6083" fg:w="9"/><text x="27.8278%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.5756%" y="85" width="0.0407%" height="15" fill="rgb(222,43,3)" fg:x="6092" fg:w="9"/><text x="27.8686%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="27.6163%" y="85" width="0.0407%" height="15" fill="rgb(216,66,19)" fg:x="6101" fg:w="9"/><text x="27.9093%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="27.6571%" y="85" width="0.0136%" height="15" fill="rgb(220,96,9)" fg:x="6110" fg:w="3"/><text x="27.9500%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="27.6707%" y="85" width="0.0453%" height="15" fill="rgb(212,191,36)" fg:x="6113" fg:w="10"/><text x="27.9636%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="27.7159%" y="85" width="0.0226%" height="15" fill="rgb(230,70,18)" fg:x="6123" fg:w="5"/><text x="28.0089%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="27.7385%" y="85" width="0.0136%" height="15" fill="rgb(214,106,19)" fg:x="6128" fg:w="3"/><text x="28.0315%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="27.5349%" y="101" width="0.5975%" height="15" fill="rgb(225,13,48)" fg:x="6083" fg:w="132"/><text x="27.8278%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="27.5349%" y="117" width="0.6428%" height="15" fill="rgb(224,203,29)" fg:x="6083" fg:w="142"/><text x="27.8278%" y="127.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="27.5349%" y="133" width="0.6563%" height="15" fill="rgb(219,175,2)" fg:x="6083" fg:w="145"/><text x="27.8278%" y="143.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="27.5349%" y="149" width="0.6835%" height="15" fill="rgb(254,118,51)" fg:x="6083" fg:w="151"/><text x="27.8278%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.83%)</title><rect x="27.5349%" y="165" width="0.8284%" height="15" fill="rgb(217,154,38)" fg:x="6083" fg:w="183"/><text x="27.8278%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (253 instructions, 1.15%)</title><rect x="27.5349%" y="181" width="1.1452%" height="15" fill="rgb(223,81,41)" fg:x="6083" fg:w="253"/><text x="27.8278%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (936 instructions, 4.24%)</title><rect x="25.4708%" y="197" width="4.2368%" height="15" fill="rgb(220,24,52)" fg:x="5627" fg:w="936"/><text x="25.7637%" y="207.50">cand..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.7076%" y="117" width="0.0407%" height="15" fill="rgb(217,149,4)" fg:x="6563" fg:w="9"/><text x="30.0006%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.7483%" y="117" width="0.0407%" height="15" fill="rgb(252,38,10)" fg:x="6572" fg:w="9"/><text x="30.0413%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="29.7891%" y="117" width="0.0407%" height="15" fill="rgb(232,6,21)" fg:x="6581" fg:w="9"/><text x="30.0820%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="29.8298%" y="117" width="0.0136%" height="15" fill="rgb(252,63,21)" fg:x="6590" fg:w="3"/><text x="30.1228%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="29.8434%" y="117" width="0.0453%" height="15" fill="rgb(209,30,45)" fg:x="6593" fg:w="10"/><text x="30.1364%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="29.8886%" y="117" width="0.0226%" height="15" fill="rgb(243,10,32)" fg:x="6603" fg:w="5"/><text x="30.1816%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="29.9113%" y="117" width="0.0136%" height="15" fill="rgb(230,188,42)" fg:x="6608" fg:w="3"/><text x="30.2042%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="29.7076%" y="133" width="0.5975%" height="15" fill="rgb(234,122,13)" fg:x="6563" fg:w="132"/><text x="30.0006%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="29.7076%" y="149" width="0.6428%" height="15" fill="rgb(213,93,34)" fg:x="6563" fg:w="142"/><text x="30.0006%" y="159.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="29.7076%" y="165" width="0.6563%" height="15" fill="rgb(227,41,51)" fg:x="6563" fg:w="145"/><text x="30.0006%" y="175.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="29.7076%" y="181" width="0.6835%" height="15" fill="rgb(211,207,35)" fg:x="6563" fg:w="151"/><text x="30.0006%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="30.3911%" y="133" width="0.0136%" height="15" fill="rgb(228,186,20)" fg:x="6714" fg:w="3"/><text x="30.6841%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="30.4047%" y="133" width="0.0181%" height="15" fill="rgb(232,44,12)" fg:x="6717" fg:w="4"/><text x="30.6976%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="30.4228%" y="133" width="0.0136%" height="15" fill="rgb(241,158,38)" fg:x="6721" fg:w="3"/><text x="30.7157%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="30.4364%" y="133" width="0.0181%" height="15" fill="rgb(247,87,32)" fg:x="6724" fg:w="4"/><text x="30.7293%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="30.4545%" y="133" width="0.0272%" height="15" fill="rgb(247,35,30)" fg:x="6728" fg:w="6"/><text x="30.7474%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="30.4816%" y="133" width="0.0724%" height="15" fill="rgb(237,224,23)" fg:x="6734" fg:w="16"/><text x="30.7746%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="30.3911%" y="149" width="0.4436%" height="15" fill="rgb(210,107,30)" fg:x="6714" fg:w="98"/><text x="30.6841%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="30.3911%" y="165" width="0.4527%" height="15" fill="rgb(239,197,2)" fg:x="6714" fg:w="100"/><text x="30.6841%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="30.3911%" y="181" width="0.4753%" height="15" fill="rgb(252,223,11)" fg:x="6714" fg:w="105"/><text x="30.6841%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (370 instructions, 1.67%)</title><rect x="29.7076%" y="197" width="1.6748%" height="15" fill="rgb(218,94,28)" fg:x="6563" fg:w="370"/><text x="30.0006%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.3824%" y="133" width="0.0407%" height="15" fill="rgb(249,209,38)" fg:x="6933" fg:w="9"/><text x="31.6754%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.4231%" y="133" width="0.0407%" height="15" fill="rgb(243,194,47)" fg:x="6942" fg:w="9"/><text x="31.7161%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="31.4639%" y="133" width="0.0407%" height="15" fill="rgb(229,191,14)" fg:x="6951" fg:w="9"/><text x="31.7568%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="31.5046%" y="133" width="0.0136%" height="15" fill="rgb(211,198,32)" fg:x="6960" fg:w="3"/><text x="31.7976%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="31.5182%" y="133" width="0.0453%" height="15" fill="rgb(228,47,15)" fg:x="6963" fg:w="10"/><text x="31.8112%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="31.5635%" y="133" width="0.0226%" height="15" fill="rgb(236,154,20)" fg:x="6973" fg:w="5"/><text x="31.8564%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="31.5861%" y="133" width="0.0136%" height="15" fill="rgb(244,83,2)" fg:x="6978" fg:w="3"/><text x="31.8791%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="31.3824%" y="149" width="0.5975%" height="15" fill="rgb(227,23,48)" fg:x="6933" fg:w="132"/><text x="31.6754%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="31.3824%" y="165" width="0.6428%" height="15" fill="rgb(249,194,1)" fg:x="6933" fg:w="142"/><text x="31.6754%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="31.3824%" y="181" width="0.6563%" height="15" fill="rgb(217,84,34)" fg:x="6933" fg:w="145"/><text x="31.6754%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.0659%" y="133" width="0.0407%" height="15" fill="rgb(205,206,14)" fg:x="7084" fg:w="9"/><text x="32.3589%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.1066%" y="133" width="0.0407%" height="15" fill="rgb(226,205,25)" fg:x="7093" fg:w="9"/><text x="32.3996%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="32.1474%" y="133" width="0.0407%" height="15" fill="rgb(236,212,2)" fg:x="7102" fg:w="9"/><text x="32.4404%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.1881%" y="133" width="0.0136%" height="15" fill="rgb(245,171,33)" fg:x="7111" fg:w="3"/><text x="32.4811%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="32.2017%" y="133" width="0.0453%" height="15" fill="rgb(211,39,46)" fg:x="7114" fg:w="10"/><text x="32.4947%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="32.2470%" y="133" width="0.0226%" height="15" fill="rgb(214,41,31)" fg:x="7124" fg:w="5"/><text x="32.5399%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="32.2696%" y="133" width="0.0136%" height="15" fill="rgb(209,41,14)" fg:x="7129" fg:w="3"/><text x="32.5626%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="32.0659%" y="149" width="0.5975%" height="15" fill="rgb(220,32,27)" fg:x="7084" fg:w="132"/><text x="32.3589%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="32.0659%" y="165" width="0.6428%" height="15" fill="rgb(226,125,6)" fg:x="7084" fg:w="142"/><text x="32.3589%" y="175.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="32.0659%" y="181" width="0.6563%" height="15" fill="rgb(247,104,38)" fg:x="7084" fg:w="145"/><text x="32.3589%" y="191.50"></text></g><g><title>__rust_alloc (302 instructions, 1.37%)</title><rect x="31.3824%" y="197" width="1.3670%" height="15" fill="rgb(238,180,11)" fg:x="6933" fg:w="302"/><text x="31.6754%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (15 instructions, 0.07%)</title><rect x="32.7494%" y="197" width="0.0679%" height="15" fill="rgb(212,63,22)" fg:x="7235" fg:w="15"/><text x="33.0424%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="32.8173%" y="149" width="0.0136%" height="15" fill="rgb(225,228,33)" fg:x="7250" fg:w="3"/><text x="33.1103%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="32.8309%" y="149" width="0.0181%" height="15" fill="rgb(254,179,25)" fg:x="7253" fg:w="4"/><text x="33.1239%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="32.8490%" y="149" width="0.0136%" height="15" fill="rgb(240,16,16)" fg:x="7257" fg:w="3"/><text x="33.1420%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="32.8626%" y="149" width="0.0181%" height="15" fill="rgb(244,106,3)" fg:x="7260" fg:w="4"/><text x="33.1555%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="32.8807%" y="149" width="0.0272%" height="15" fill="rgb(237,23,39)" fg:x="7264" fg:w="6"/><text x="33.1736%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="32.9078%" y="149" width="0.0724%" height="15" fill="rgb(236,100,20)" fg:x="7270" fg:w="16"/><text x="33.2008%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="32.8173%" y="165" width="0.4436%" height="15" fill="rgb(214,117,14)" fg:x="7250" fg:w="98"/><text x="33.1103%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="32.8173%" y="181" width="0.4527%" height="15" fill="rgb(246,75,1)" fg:x="7250" fg:w="100"/><text x="33.1103%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="32.8173%" y="197" width="0.4753%" height="15" fill="rgb(250,197,38)" fg:x="7250" fg:w="105"/><text x="33.1103%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.87%)</title><rect x="33.2926%" y="165" width="1.8695%" height="15" fill="rgb(251,4,8)" fg:x="7355" fg:w="413"/><text x="33.5856%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.89%)</title><rect x="33.2926%" y="181" width="1.8876%" height="15" fill="rgb(247,30,19)" fg:x="7355" fg:w="417"/><text x="33.5856%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.98%)</title><rect x="33.2926%" y="197" width="1.9781%" height="15" fill="rgb(224,33,16)" fg:x="7355" fg:w="437"/><text x="33.5856%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 1.67%)</title><rect x="35.2707%" y="181" width="1.6658%" height="15" fill="rgb(221,195,48)" fg:x="7792" fg:w="368"/><text x="35.5637%" y="191.50"></text></g><g><title>memcpy (372 instructions, 1.68%)</title><rect x="35.2707%" y="197" width="1.6839%" height="15" fill="rgb(249,95,13)" fg:x="7792" fg:w="372"/><text x="35.5637%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,984 instructions, 36.14%)</title><rect x="2.3764%" y="213" width="36.1398%" height="15" fill="rgb(221,152,47)" fg:x="525" fg:w="7984"/><text x="2.6694%" y="223.50">candid::de::IDLDeserialize::new</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.73%)</title><rect x="38.5162%" y="197" width="1.7337%" height="15" fill="rgb(246,39,47)" fg:x="8509" fg:w="383"/><text x="38.8092%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.73%)</title><rect x="40.2680%" y="197" width="1.7337%" height="15" fill="rgb(249,99,50)" fg:x="8896" fg:w="383"/><text x="40.5609%" y="207.50"></text></g><g><title>memcpy (774 instructions, 3.50%)</title><rect x="38.5162%" y="213" width="3.5035%" height="15" fill="rgb(238,169,27)" fg:x="8509" fg:w="774"/><text x="38.8092%" y="223.50">mem..</text></g><g><title>candid::types::internal::find_type (38 instructions, 0.17%)</title><rect x="42.0197%" y="181" width="0.1720%" height="15" fill="rgb(249,181,19)" fg:x="9283" fg:w="38"/><text x="42.3127%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.1917%" y="101" width="0.0407%" height="15" fill="rgb(213,0,15)" fg:x="9321" fg:w="9"/><text x="42.4847%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.2325%" y="101" width="0.0407%" height="15" fill="rgb(212,12,49)" fg:x="9330" fg:w="9"/><text x="42.5255%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="42.2732%" y="101" width="0.0407%" height="15" fill="rgb(213,83,34)" fg:x="9339" fg:w="9"/><text x="42.5662%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="42.3140%" y="101" width="0.0136%" height="15" fill="rgb(209,73,37)" fg:x="9348" fg:w="3"/><text x="42.6069%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="42.3275%" y="101" width="0.0453%" height="15" fill="rgb(223,70,23)" fg:x="9351" fg:w="10"/><text x="42.6205%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="42.3728%" y="101" width="0.0226%" height="15" fill="rgb(210,56,35)" fg:x="9361" fg:w="5"/><text x="42.6658%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="42.3954%" y="101" width="0.0136%" height="15" fill="rgb(206,28,10)" fg:x="9366" fg:w="3"/><text x="42.6884%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="42.1917%" y="117" width="0.5975%" height="15" fill="rgb(246,26,25)" fg:x="9321" fg:w="132"/><text x="42.4847%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="42.1917%" y="133" width="0.6428%" height="15" fill="rgb(220,153,50)" fg:x="9321" fg:w="142"/><text x="42.4847%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="42.1917%" y="149" width="0.6563%" height="15" fill="rgb(252,7,8)" fg:x="9321" fg:w="145"/><text x="42.4847%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="42.1917%" y="165" width="0.6835%" height="15" fill="rgb(241,199,0)" fg:x="9321" fg:w="151"/><text x="42.4847%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (196 instructions, 0.89%)</title><rect x="42.1917%" y="181" width="0.8872%" height="15" fill="rgb(217,202,20)" fg:x="9321" fg:w="196"/><text x="42.4847%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="43.0789%" y="133" width="0.2444%" height="15" fill="rgb(249,14,9)" fg:x="9517" fg:w="54"/><text x="43.3719%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.41%)</title><rect x="43.3234%" y="133" width="0.4074%" height="15" fill="rgb(216,203,12)" fg:x="9571" fg:w="90"/><text x="43.6163%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.74%)</title><rect x="43.7308%" y="133" width="0.7378%" height="15" fill="rgb(223,125,3)" fg:x="9661" fg:w="163"/><text x="44.0237%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.52%)</title><rect x="43.0789%" y="149" width="2.5167%" height="15" fill="rgb(252,18,50)" fg:x="9517" fg:w="556"/><text x="43.3719%" y="159.50">c..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.45%)</title><rect x="45.5957%" y="149" width="0.4481%" height="15" fill="rgb(254,24,39)" fg:x="10073" fg:w="99"/><text x="45.8887%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (760 instructions, 3.44%)</title><rect x="43.0789%" y="165" width="3.4402%" height="15" fill="rgb(226,228,1)" fg:x="9517" fg:w="760"/><text x="43.3719%" y="175.50">ha..</text></g><g><title>candid::types::internal::env_add (813 instructions, 3.68%)</title><rect x="43.0789%" y="181" width="3.6801%" height="15" fill="rgb(224,132,33)" fg:x="9517" fg:w="813"/><text x="43.3719%" y="191.50">can..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="46.7590%" y="101" width="0.0407%" height="15" fill="rgb(226,27,29)" fg:x="10330" fg:w="9"/><text x="47.0520%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="46.7997%" y="101" width="0.0407%" height="15" fill="rgb(208,132,28)" fg:x="10339" fg:w="9"/><text x="47.0927%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="46.8405%" y="101" width="0.0407%" height="15" fill="rgb(245,210,6)" fg:x="10348" fg:w="9"/><text x="47.1335%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="46.8812%" y="101" width="0.0136%" height="15" fill="rgb(208,119,26)" fg:x="10357" fg:w="3"/><text x="47.1742%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="46.8948%" y="101" width="0.0453%" height="15" fill="rgb(211,100,36)" fg:x="10360" fg:w="10"/><text x="47.1878%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="46.9401%" y="101" width="0.0226%" height="15" fill="rgb(234,222,20)" fg:x="10370" fg:w="5"/><text x="47.2330%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="46.9627%" y="101" width="0.0136%" height="15" fill="rgb(208,60,11)" fg:x="10375" fg:w="3"/><text x="47.2557%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="46.7590%" y="117" width="0.5975%" height="15" fill="rgb(228,134,5)" fg:x="10330" fg:w="132"/><text x="47.0520%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="46.7590%" y="133" width="0.6428%" height="15" fill="rgb(218,211,22)" fg:x="10330" fg:w="142"/><text x="47.0520%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="46.7590%" y="149" width="0.6563%" height="15" fill="rgb(234,27,23)" fg:x="10330" fg:w="145"/><text x="47.0520%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="46.7590%" y="165" width="0.6835%" height="15" fill="rgb(223,21,18)" fg:x="10330" fg:w="151"/><text x="47.0520%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (163 instructions, 0.74%)</title><rect x="46.7590%" y="181" width="0.7378%" height="15" fill="rgb(252,22,41)" fg:x="10330" fg:w="163"/><text x="47.0520%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="47.4968%" y="133" width="0.2444%" height="15" fill="rgb(250,5,14)" fg:x="10493" fg:w="54"/><text x="47.7898%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.41%)</title><rect x="47.7413%" y="133" width="0.4074%" height="15" fill="rgb(240,222,19)" fg:x="10547" fg:w="90"/><text x="48.0342%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.74%)</title><rect x="48.1487%" y="133" width="0.7378%" height="15" fill="rgb(238,159,18)" fg:x="10637" fg:w="163"/><text x="48.4416%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 2.52%)</title><rect x="47.4968%" y="149" width="2.5167%" height="15" fill="rgb(237,155,46)" fg:x="10493" fg:w="556"/><text x="47.7898%" y="159.50">c..</text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.33%)</title><rect x="50.0136%" y="133" width="0.3350%" height="15" fill="rgb(219,208,47)" fg:x="11049" fg:w="74"/><text x="50.3065%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.35%)</title><rect x="50.0136%" y="149" width="0.3531%" height="15" fill="rgb(225,57,24)" fg:x="11049" fg:w="78"/><text x="50.3065%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (743 instructions, 3.36%)</title><rect x="47.4968%" y="165" width="3.3632%" height="15" fill="rgb(236,182,25)" fg:x="10493" fg:w="743"/><text x="47.7898%" y="175.50">ha..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="50.8600%" y="101" width="0.0136%" height="15" fill="rgb(215,65,16)" fg:x="11236" fg:w="3"/><text x="51.1530%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="50.8736%" y="101" width="0.0181%" height="15" fill="rgb(210,54,46)" fg:x="11239" fg:w="4"/><text x="51.1666%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="50.8917%" y="101" width="0.0136%" height="15" fill="rgb(206,161,52)" fg:x="11243" fg:w="3"/><text x="51.1847%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="50.9053%" y="101" width="0.0181%" height="15" fill="rgb(213,134,29)" fg:x="11246" fg:w="4"/><text x="51.1983%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="50.9234%" y="101" width="0.0272%" height="15" fill="rgb(248,222,33)" fg:x="11250" fg:w="6"/><text x="51.2164%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="50.9506%" y="101" width="0.0724%" height="15" fill="rgb(232,84,5)" fg:x="11256" fg:w="16"/><text x="51.2435%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="50.8600%" y="117" width="0.4436%" height="15" fill="rgb(249,168,27)" fg:x="11236" fg:w="98"/><text x="51.1530%" y="127.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="50.8600%" y="133" width="0.4527%" height="15" fill="rgb(209,209,13)" fg:x="11236" fg:w="100"/><text x="51.1530%" y="143.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.48%)</title><rect x="50.8600%" y="149" width="0.4753%" height="15" fill="rgb(210,187,3)" fg:x="11236" fg:w="105"/><text x="51.1530%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.62%)</title><rect x="50.8600%" y="165" width="0.6201%" height="15" fill="rgb(241,21,35)" fg:x="11236" fg:w="137"/><text x="51.1530%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 4.24%)</title><rect x="47.4968%" y="181" width="4.2414%" height="15" fill="rgb(234,22,0)" fg:x="10493" fg:w="937"/><text x="47.7898%" y="191.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.24%)</title><rect x="51.7382%" y="133" width="0.2444%" height="15" fill="rgb(209,10,33)" fg:x="11430" fg:w="54"/><text x="52.0312%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.36%)</title><rect x="51.7382%" y="149" width="0.3576%" height="15" fill="rgb(250,166,51)" fg:x="11430" fg:w="79"/><text x="52.0312%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 1.37%)</title><rect x="51.7382%" y="165" width="1.3715%" height="15" fill="rgb(209,69,5)" fg:x="11430" fg:w="303"/><text x="52.0312%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (35 instructions, 0.16%)</title><rect x="53.1097%" y="165" width="0.1584%" height="15" fill="rgb(225,33,33)" fg:x="11733" fg:w="35"/><text x="53.4027%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="53.2682%" y="165" width="0.0498%" height="15" fill="rgb(225,226,17)" fg:x="11768" fg:w="11"/><text x="53.5611%" y="175.50"></text></g><g><title>candid::types::internal::env_id (506 instructions, 2.29%)</title><rect x="51.7382%" y="181" width="2.2904%" height="15" fill="rgb(221,56,51)" fg:x="11430" fg:w="506"/><text x="52.0312%" y="191.50">c..</text></g><g><title>candid::types::CandidType::ty (2,761 instructions, 12.50%)</title><rect x="42.0197%" y="197" width="12.4977%" height="15" fill="rgb(205,149,16)" fg:x="9283" fg:w="2761"/><text x="42.3127%" y="207.50">candid::types::C..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.17%)</title><rect x="54.5175%" y="197" width="0.1720%" height="15" fill="rgb(223,44,14)" fg:x="12044" fg:w="38"/><text x="54.8104%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="54.6895%" y="133" width="0.0136%" height="15" fill="rgb(240,87,47)" fg:x="12082" fg:w="3"/><text x="54.9824%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="54.7031%" y="133" width="0.0181%" height="15" fill="rgb(214,60,47)" fg:x="12085" fg:w="4"/><text x="54.9960%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="54.7212%" y="133" width="0.0136%" height="15" fill="rgb(234,191,39)" fg:x="12089" fg:w="3"/><text x="55.0141%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="54.7347%" y="133" width="0.0181%" height="15" fill="rgb(241,61,24)" fg:x="12092" fg:w="4"/><text x="55.0277%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="54.7529%" y="133" width="0.0272%" height="15" fill="rgb(212,57,36)" fg:x="12096" fg:w="6"/><text x="55.0458%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="54.7800%" y="133" width="0.0181%" height="15" fill="rgb(243,86,20)" fg:x="12102" fg:w="4"/><text x="55.0730%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="54.7981%" y="133" width="0.0453%" height="15" fill="rgb(236,208,53)" fg:x="12106" fg:w="10"/><text x="55.0911%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.64%)</title><rect x="54.6895%" y="149" width="0.6382%" height="15" fill="rgb(206,14,5)" fg:x="12082" fg:w="141"/><text x="54.9824%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.65%)</title><rect x="54.6895%" y="165" width="0.6473%" height="15" fill="rgb(222,203,2)" fg:x="12082" fg:w="143"/><text x="54.9824%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.67%)</title><rect x="54.6895%" y="181" width="0.6699%" height="15" fill="rgb(229,214,26)" fg:x="12082" fg:w="148"/><text x="54.9824%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="55.5043%" y="133" width="0.0136%" height="15" fill="rgb(238,220,8)" fg:x="12262" fg:w="3"/><text x="55.7972%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="55.5178%" y="133" width="0.0181%" height="15" fill="rgb(229,212,39)" fg:x="12265" fg:w="4"/><text x="55.8108%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="55.5359%" y="133" width="0.0136%" height="15" fill="rgb(228,90,47)" fg:x="12269" fg:w="3"/><text x="55.8289%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="55.5495%" y="133" width="0.0181%" height="15" fill="rgb(242,136,4)" fg:x="12272" fg:w="4"/><text x="55.8425%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="55.5676%" y="133" width="0.0272%" height="15" fill="rgb(226,208,8)" fg:x="12276" fg:w="6"/><text x="55.8606%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="55.5948%" y="133" width="0.0181%" height="15" fill="rgb(232,166,49)" fg:x="12282" fg:w="4"/><text x="55.8878%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="55.6129%" y="133" width="0.0453%" height="15" fill="rgb(208,87,27)" fg:x="12286" fg:w="10"/><text x="55.9059%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.64%)</title><rect x="55.5043%" y="149" width="0.6382%" height="15" fill="rgb(253,207,22)" fg:x="12262" fg:w="141"/><text x="55.7972%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.65%)</title><rect x="55.5043%" y="165" width="0.6473%" height="15" fill="rgb(223,69,11)" fg:x="12262" fg:w="143"/><text x="55.7972%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.67%)</title><rect x="55.5043%" y="181" width="0.6699%" height="15" fill="rgb(216,145,40)" fg:x="12262" fg:w="148"/><text x="55.7972%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 1.63%)</title><rect x="54.6895%" y="197" width="1.6295%" height="15" fill="rgb(239,18,29)" fg:x="12082" fg:w="360"/><text x="54.9824%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.13%)</title><rect x="56.3190%" y="181" width="0.1267%" height="15" fill="rgb(252,140,54)" fg:x="12442" fg:w="28"/><text x="56.6120%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (105 instructions, 0.48%)</title><rect x="56.3190%" y="197" width="0.4753%" height="15" fill="rgb(218,74,36)" fg:x="12442" fg:w="105"/><text x="56.6120%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="56.7943%" y="197" width="0.0498%" height="15" fill="rgb(223,122,42)" fg:x="12547" fg:w="11"/><text x="57.0873%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="56.8441%" y="197" width="0.0498%" height="15" fill="rgb(223,195,37)" fg:x="12558" fg:w="11"/><text x="57.1371%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="56.8939%" y="197" width="0.0498%" height="15" fill="rgb(254,206,16)" fg:x="12569" fg:w="11"/><text x="57.1869%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,465 instructions, 15.68%)</title><rect x="42.0197%" y="213" width="15.6844%" height="15" fill="rgb(248,142,53)" fg:x="9283" fg:w="3465"/><text x="42.3127%" y="223.50">candid::de::IDLDeser..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.87%)</title><rect x="57.7041%" y="197" width="1.8695%" height="15" fill="rgb(233,142,44)" fg:x="12748" fg:w="413"/><text x="57.9971%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.89%)</title><rect x="57.7041%" y="213" width="1.8876%" height="15" fill="rgb(219,144,35)" fg:x="12748" fg:w="417"/><text x="57.9971%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.09%)</title><rect x="59.5917%" y="197" width="0.0860%" height="15" fill="rgb(210,58,34)" fg:x="13165" fg:w="19"/><text x="59.8847%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="59.6777%" y="149" width="0.0136%" height="15" fill="rgb(212,171,23)" fg:x="13184" fg:w="3"/><text x="59.9707%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.6913%" y="149" width="0.0181%" height="15" fill="rgb(224,55,10)" fg:x="13187" fg:w="4"/><text x="59.9843%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="59.7094%" y="149" width="0.0136%" height="15" fill="rgb(218,142,3)" fg:x="13191" fg:w="3"/><text x="60.0024%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="59.7230%" y="149" width="0.0181%" height="15" fill="rgb(231,170,18)" fg:x="13194" fg:w="4"/><text x="60.0159%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="59.7411%" y="149" width="0.0226%" height="15" fill="rgb(221,36,5)" fg:x="13198" fg:w="5"/><text x="60.0341%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="59.7637%" y="149" width="0.0136%" height="15" fill="rgb(220,215,52)" fg:x="13203" fg:w="3"/><text x="60.0567%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="59.7773%" y="149" width="0.0272%" height="15" fill="rgb(254,207,18)" fg:x="13206" fg:w="6"/><text x="60.0703%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="59.8045%" y="149" width="0.0181%" height="15" fill="rgb(252,188,34)" fg:x="13212" fg:w="4"/><text x="60.0974%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="59.8226%" y="149" width="0.0453%" height="15" fill="rgb(238,143,12)" fg:x="13216" fg:w="10"/><text x="60.1155%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.87%)</title><rect x="59.6777%" y="165" width="0.8736%" height="15" fill="rgb(207,135,6)" fg:x="13184" fg:w="193"/><text x="59.9707%" y="175.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.88%)</title><rect x="59.6777%" y="181" width="0.8827%" height="15" fill="rgb(240,203,1)" fg:x="13184" fg:w="195"/><text x="59.9707%" y="191.50"></text></g><g><title>__rust_dealloc (200 instructions, 0.91%)</title><rect x="59.6777%" y="197" width="0.9053%" height="15" fill="rgb(242,9,20)" fg:x="13184" fg:w="200"/><text x="59.9707%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="60.5830%" y="133" width="0.0136%" height="15" fill="rgb(213,96,44)" fg:x="13384" fg:w="3"/><text x="60.8760%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.5966%" y="133" width="0.0181%" height="15" fill="rgb(237,180,10)" fg:x="13387" fg:w="4"/><text x="60.8896%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="60.6147%" y="133" width="0.0136%" height="15" fill="rgb(233,165,3)" fg:x="13391" fg:w="3"/><text x="60.9077%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="60.6283%" y="133" width="0.0181%" height="15" fill="rgb(209,32,9)" fg:x="13394" fg:w="4"/><text x="60.9213%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="60.6464%" y="133" width="0.0226%" height="15" fill="rgb(231,2,26)" fg:x="13398" fg:w="5"/><text x="60.9394%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="60.6690%" y="133" width="0.0136%" height="15" fill="rgb(249,22,1)" fg:x="13403" fg:w="3"/><text x="60.9620%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="60.6826%" y="133" width="0.0272%" height="15" fill="rgb(232,15,43)" fg:x="13406" fg:w="6"/><text x="60.9756%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.7098%" y="133" width="0.0181%" height="15" fill="rgb(246,193,23)" fg:x="13412" fg:w="4"/><text x="61.0027%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="60.7279%" y="133" width="0.0453%" height="15" fill="rgb(247,193,33)" fg:x="13416" fg:w="10"/><text x="61.0208%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::leftshift_for_tree_index (10 instructions, 0.05%)</title><rect x="60.7777%" y="117" width="0.0453%" height="15" fill="rgb(230,166,33)" fg:x="13427" fg:w="10"/><text x="61.0706%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="60.8274%" y="117" width="0.0181%" height="15" fill="rgb(237,28,5)" fg:x="13438" fg:w="4"/><text x="61.1204%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (113 instructions, 0.51%)</title><rect x="60.7731%" y="133" width="0.5115%" height="15" fill="rgb(237,172,38)" fg:x="13426" fg:w="113"/><text x="61.0661%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (282 instructions, 1.28%)</title><rect x="60.5830%" y="149" width="1.2765%" height="15" fill="rgb(232,46,53)" fg:x="13384" fg:w="282"/><text x="60.8760%" y="159.50"></text></g><g><title>__rdl_dealloc (284 instructions, 1.29%)</title><rect x="60.5830%" y="165" width="1.2855%" height="15" fill="rgb(242,123,31)" fg:x="13384" fg:w="284"/><text x="60.8760%" y="175.50"></text></g><g><title>__rust_dealloc (289 instructions, 1.31%)</title><rect x="60.5830%" y="181" width="1.3082%" height="15" fill="rgb(224,44,39)" fg:x="13384" fg:w="289"/><text x="60.8760%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (321 instructions, 1.45%)</title><rect x="60.5830%" y="197" width="1.4530%" height="15" fill="rgb(241,48,14)" fg:x="13384" fg:w="321"/><text x="60.8760%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.05%)</title><rect x="62.0360%" y="197" width="0.0498%" height="15" fill="rgb(226,223,44)" fg:x="13705" fg:w="11"/><text x="62.3290%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="62.0858%" y="197" width="0.0226%" height="15" fill="rgb(248,47,50)" fg:x="13716" fg:w="5"/><text x="62.3788%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (653 instructions, 2.96%)</title><rect x="59.5917%" y="213" width="2.9558%" height="15" fill="rgb(213,71,9)" fg:x="13165" fg:w="653"/><text x="59.8847%" y="223.50">ca..</text></g><g><title>candid::utils::decode_args (13,396 instructions, 60.64%)</title><rect x="2.3764%" y="229" width="60.6373%" height="15" fill="rgb(213,44,33)" fg:x="525" fg:w="13396"/><text x="2.6694%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="63.0138%" y="181" width="0.0136%" height="15" fill="rgb(250,53,49)" fg:x="13921" fg:w="3"/><text x="63.3067%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.0273%" y="181" width="0.0181%" height="15" fill="rgb(214,170,7)" fg:x="13924" fg:w="4"/><text x="63.3203%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="63.0454%" y="181" width="0.0136%" height="15" fill="rgb(252,131,43)" fg:x="13928" fg:w="3"/><text x="63.3384%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="63.0590%" y="181" width="0.0181%" height="15" fill="rgb(231,31,12)" fg:x="13931" fg:w="4"/><text x="63.3520%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="63.0771%" y="181" width="0.0272%" height="15" fill="rgb(235,62,3)" fg:x="13935" fg:w="6"/><text x="63.3701%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.1043%" y="181" width="0.0181%" height="15" fill="rgb(243,59,5)" fg:x="13941" fg:w="4"/><text x="63.3973%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.25%)</title><rect x="63.1224%" y="181" width="0.2490%" height="15" fill="rgb(242,9,40)" fg:x="13945" fg:w="55"/><text x="63.4154%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="63.3714%" y="181" width="0.0453%" height="15" fill="rgb(214,120,10)" fg:x="14000" fg:w="10"/><text x="63.6643%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::leftshift_for_tree_index (10 instructions, 0.05%)</title><rect x="63.4211%" y="165" width="0.0453%" height="15" fill="rgb(228,60,52)" fg:x="14011" fg:w="10"/><text x="63.7141%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="63.4709%" y="165" width="0.0181%" height="15" fill="rgb(252,11,9)" fg:x="14022" fg:w="4"/><text x="63.7639%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (113 instructions, 0.51%)</title><rect x="63.4166%" y="181" width="0.5115%" height="15" fill="rgb(230,177,37)" fg:x="14010" fg:w="113"/><text x="63.7096%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (266 instructions, 1.20%)</title><rect x="63.0138%" y="197" width="1.2041%" height="15" fill="rgb(206,32,21)" fg:x="13921" fg:w="266"/><text x="63.3067%" y="207.50"></text></g><g><title>__rdl_dealloc (268 instructions, 1.21%)</title><rect x="63.0138%" y="213" width="1.2131%" height="15" fill="rgb(228,4,34)" fg:x="13921" fg:w="268"/><text x="63.3067%" y="223.50"></text></g><g><title>__rust_dealloc (273 instructions, 1.24%)</title><rect x="63.0138%" y="229" width="1.2357%" height="15" fill="rgb(230,14,20)" fg:x="13921" fg:w="273"/><text x="63.3067%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,919 instructions, 63.00%)</title><rect x="1.4304%" y="245" width="63.0047%" height="15" fill="rgb(245,144,51)" fg:x="316" fg:w="13919"/><text x="1.7234%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>heap::batch_put (6,112 instructions, 27.67%)</title><rect x="64.4351%" y="245" width="27.6661%" height="15" fill="rgb(223,83,26)" fg:x="14235" fg:w="6112"/><text x="64.7281%" y="255.50">heap::batch_put</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="92.1012%" y="133" width="0.0136%" height="15" fill="rgb(220,185,40)" fg:x="20347" fg:w="3"/><text x="92.3942%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="92.1148%" y="133" width="0.0181%" height="15" fill="rgb(222,226,17)" fg:x="20350" fg:w="4"/><text x="92.4078%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="92.1329%" y="133" width="0.0136%" height="15" fill="rgb(243,227,3)" fg:x="20354" fg:w="3"/><text x="92.4259%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="92.1465%" y="133" width="0.0181%" height="15" fill="rgb(245,219,26)" fg:x="20357" fg:w="4"/><text x="92.4394%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="92.1646%" y="133" width="0.0226%" height="15" fill="rgb(234,202,38)" fg:x="20361" fg:w="5"/><text x="92.4576%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="92.1872%" y="133" width="0.0136%" height="15" fill="rgb(247,190,46)" fg:x="20366" fg:w="3"/><text x="92.4802%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.25%)</title><rect x="92.2008%" y="133" width="0.2490%" height="15" fill="rgb(230,128,53)" fg:x="20369" fg:w="55"/><text x="92.4938%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="92.4498%" y="133" width="0.0272%" height="15" fill="rgb(217,111,46)" fg:x="20424" fg:w="6"/><text x="92.7427%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="92.4769%" y="133" width="0.0453%" height="15" fill="rgb(251,30,54)" fg:x="20430" fg:w="10"/><text x="92.7699%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (158 instructions, 0.72%)</title><rect x="92.1012%" y="149" width="0.7152%" height="15" fill="rgb(209,69,6)" fg:x="20347" fg:w="158"/><text x="92.3942%" y="159.50"></text></g><g><title>__rdl_dealloc (160 instructions, 0.72%)</title><rect x="92.1012%" y="165" width="0.7242%" height="15" fill="rgb(225,30,0)" fg:x="20347" fg:w="160"/><text x="92.3942%" y="175.50"></text></g><g><title>__rust_dealloc (165 instructions, 0.75%)</title><rect x="92.1012%" y="181" width="0.7469%" height="15" fill="rgb(243,123,13)" fg:x="20347" fg:w="165"/><text x="92.3942%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (197 instructions, 0.89%)</title><rect x="92.1012%" y="197" width="0.8917%" height="15" fill="rgb(233,155,50)" fg:x="20347" fg:w="197"/><text x="92.3942%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.61%)</title><rect x="92.9929%" y="181" width="0.6111%" height="15" fill="rgb(208,137,48)" fg:x="20544" fg:w="135"/><text x="93.2859%" y="191.50"></text></g><g><title>memset (139 instructions, 0.63%)</title><rect x="92.9929%" y="197" width="0.6292%" height="15" fill="rgb(220,112,2)" fg:x="20544" fg:w="139"/><text x="93.2859%" y="207.50"></text></g><g><title>candid::types::internal::env_clear (438 instructions, 1.98%)</title><rect x="92.1012%" y="213" width="1.9826%" height="15" fill="rgb(228,58,3)" fg:x="20347" fg:w="438"/><text x="92.3942%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (502 instructions, 2.27%)</title><rect x="92.1012%" y="229" width="2.2723%" height="15" fill="rgb(231,198,34)" fg:x="20347" fg:w="502"/><text x="92.3942%" y="239.50">c..</text></g><g><title>&lt;() as candid::utils::ArgumentDecoder&gt;::decode (3 instructions, 0.01%)</title><rect x="94.3735%" y="229" width="0.0136%" height="15" fill="rgb(246,196,25)" fg:x="20849" fg:w="3"/><text x="94.6665%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.15%)</title><rect x="94.3871%" y="197" width="0.1494%" height="15" fill="rgb(218,202,40)" fg:x="20852" fg:w="33"/><text x="94.6801%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.40%)</title><rect x="94.3871%" y="213" width="0.3983%" height="15" fill="rgb(231,190,9)" fg:x="20852" fg:w="88"/><text x="94.6801%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.7854%" y="101" width="0.0407%" height="15" fill="rgb(240,177,21)" fg:x="20940" fg:w="9"/><text x="95.0784%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.8262%" y="101" width="0.0407%" height="15" fill="rgb(239,8,38)" fg:x="20949" fg:w="9"/><text x="95.1192%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.04%)</title><rect x="94.8669%" y="101" width="0.0407%" height="15" fill="rgb(217,106,25)" fg:x="20958" fg:w="9"/><text x="95.1599%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="94.9077%" y="101" width="0.0136%" height="15" fill="rgb(218,126,50)" fg:x="20967" fg:w="3"/><text x="95.2006%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="94.9212%" y="101" width="0.0453%" height="15" fill="rgb(243,26,45)" fg:x="20970" fg:w="10"/><text x="95.2142%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.02%)</title><rect x="94.9665%" y="101" width="0.0226%" height="15" fill="rgb(218,110,12)" fg:x="20980" fg:w="5"/><text x="95.2595%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::to_mem (3 instructions, 0.01%)</title><rect x="94.9891%" y="101" width="0.0136%" height="15" fill="rgb(211,119,25)" fg:x="20985" fg:w="3"/><text x="95.2821%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.60%)</title><rect x="94.7854%" y="117" width="0.5975%" height="15" fill="rgb(205,219,16)" fg:x="20940" fg:w="132"/><text x="95.0784%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.64%)</title><rect x="94.7854%" y="133" width="0.6428%" height="15" fill="rgb(248,5,17)" fg:x="20940" fg:w="142"/><text x="95.0784%" y="143.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.66%)</title><rect x="94.7854%" y="149" width="0.6563%" height="15" fill="rgb(243,42,11)" fg:x="20940" fg:w="145"/><text x="95.0784%" y="159.50"></text></g><g><title>__rust_alloc (151 instructions, 0.68%)</title><rect x="94.7854%" y="165" width="0.6835%" height="15" fill="rgb(244,85,6)" fg:x="20940" fg:w="151"/><text x="95.0784%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (183 instructions, 0.83%)</title><rect x="94.7854%" y="181" width="0.8284%" height="15" fill="rgb(253,71,18)" fg:x="20940" fg:w="183"/><text x="95.0784%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (250 instructions, 1.13%)</title><rect x="94.7854%" y="197" width="1.1316%" height="15" fill="rgb(239,140,19)" fg:x="20940" fg:w="250"/><text x="95.0784%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.05%)</title><rect x="95.9171%" y="197" width="0.0453%" height="15" fill="rgb(227,133,43)" fg:x="21190" fg:w="10"/><text x="96.2100%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="95.9623%" y="181" width="0.0498%" height="15" fill="rgb(219,173,54)" fg:x="21200" fg:w="11"/><text x="96.2553%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.05%)</title><rect x="96.0302%" y="181" width="0.0498%" height="15" fill="rgb(242,48,8)" fg:x="21215" fg:w="11"/><text x="96.3232%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.14%)</title><rect x="95.9623%" y="197" width="0.1358%" height="15" fill="rgb(249,81,21)" fg:x="21200" fg:w="30"/><text x="96.2553%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (492 instructions, 2.23%)</title><rect x="94.7854%" y="213" width="2.2271%" height="15" fill="rgb(224,154,54)" fg:x="20940" fg:w="492"/><text x="95.0784%" y="223.50">c..</text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.03%)</title><rect x="97.0125%" y="213" width="0.0272%" height="15" fill="rgb(210,203,25)" fg:x="21432" fg:w="6"/><text x="97.3055%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.14%)</title><rect x="97.0397%" y="197" width="0.1403%" height="15" fill="rgb(206,182,32)" fg:x="21438" fg:w="31"/><text x="97.3326%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.39%)</title><rect x="97.0397%" y="213" width="0.3893%" height="15" fill="rgb(217,169,23)" fg:x="21438" fg:w="86"/><text x="97.3326%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.03%)</title><rect x="97.4289%" y="213" width="0.0272%" height="15" fill="rgb(208,108,25)" fg:x="21524" fg:w="6"/><text x="97.7219%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.07%)</title><rect x="97.4561%" y="213" width="0.0679%" height="15" fill="rgb(219,154,51)" fg:x="21530" fg:w="15"/><text x="97.7491%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (772 instructions, 3.49%)</title><rect x="94.3871%" y="229" width="3.4945%" height="15" fill="rgb(221,94,53)" fg:x="20852" fg:w="772"/><text x="94.6801%" y="239.50">can..</text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.02%)</title><rect x="97.8816%" y="229" width="0.0226%" height="15" fill="rgb(217,28,37)" fg:x="21624" fg:w="5"/><text x="98.1746%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="97.9042%" y="181" width="0.0136%" height="15" fill="rgb(241,31,51)" fg:x="21629" fg:w="3"/><text x="98.1972%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="97.9178%" y="181" width="0.0181%" height="15" fill="rgb(247,66,3)" fg:x="21632" fg:w="4"/><text x="98.2108%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="97.9359%" y="181" width="0.0136%" height="15" fill="rgb(217,64,0)" fg:x="21636" fg:w="3"/><text x="98.2289%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="97.9495%" y="181" width="0.0181%" height="15" fill="rgb(212,88,54)" fg:x="21639" fg:w="4"/><text x="98.2425%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="97.9676%" y="181" width="0.0272%" height="15" fill="rgb(248,85,37)" fg:x="21643" fg:w="6"/><text x="98.2606%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="97.9947%" y="181" width="0.0453%" height="15" fill="rgb(209,225,14)" fg:x="21649" fg:w="10"/><text x="98.2877%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.32%)</title><rect x="97.9042%" y="197" width="0.3169%" height="15" fill="rgb(211,10,37)" fg:x="21629" fg:w="70"/><text x="98.1972%" y="207.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.33%)</title><rect x="97.9042%" y="213" width="0.3259%" height="15" fill="rgb(228,28,7)" fg:x="21629" fg:w="72"/><text x="98.1972%" y="223.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.35%)</title><rect x="97.9042%" y="229" width="0.3485%" height="15" fill="rgb(245,17,17)" fg:x="21629" fg:w="77"/><text x="98.1972%" y="239.50"></text></g><g><title>candid::utils::write_args (1,435 instructions, 6.50%)</title><rect x="92.1012%" y="245" width="6.4956%" height="15" fill="rgb(254,115,3)" fg:x="20347" fg:w="1435"/><text x="92.3942%" y="255.50">candid:..</text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="98.5968%" y="197" width="0.0136%" height="15" fill="rgb(239,150,15)" fg:x="21782" fg:w="3"/><text x="98.8897%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="98.6104%" y="197" width="0.0181%" height="15" fill="rgb(223,89,19)" fg:x="21785" fg:w="4"/><text x="98.9033%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="98.6285%" y="197" width="0.0136%" height="15" fill="rgb(245,86,45)" fg:x="21789" fg:w="3"/><text x="98.9214%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="98.6420%" y="197" width="0.0181%" height="15" fill="rgb(246,93,35)" fg:x="21792" fg:w="4"/><text x="98.9350%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="98.6601%" y="197" width="0.0272%" height="15" fill="rgb(240,158,54)" fg:x="21796" fg:w="6"/><text x="98.9531%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.07%)</title><rect x="98.6873%" y="197" width="0.0724%" height="15" fill="rgb(213,149,10)" fg:x="21802" fg:w="16"/><text x="98.9803%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.44%)</title><rect x="98.5968%" y="213" width="0.4436%" height="15" fill="rgb(250,206,2)" fg:x="21782" fg:w="98"/><text x="98.8897%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.45%)</title><rect x="98.5968%" y="229" width="0.4527%" height="15" fill="rgb(231,1,8)" fg:x="21782" fg:w="100"/><text x="98.8897%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::from_mem (3 instructions, 0.01%)</title><rect x="99.0721%" y="197" width="0.0136%" height="15" fill="rgb(231,129,48)" fg:x="21887" fg:w="3"/><text x="99.3650%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.02%)</title><rect x="99.0856%" y="197" width="0.0181%" height="15" fill="rgb(217,44,41)" fg:x="21890" fg:w="4"/><text x="99.3786%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::plus_offset (3 instructions, 0.01%)</title><rect x="99.1037%" y="197" width="0.0136%" height="15" fill="rgb(243,0,41)" fg:x="21894" fg:w="3"/><text x="99.3967%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.02%)</title><rect x="99.1173%" y="197" width="0.0181%" height="15" fill="rgb(250,125,10)" fg:x="21897" fg:w="4"/><text x="99.4103%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.02%)</title><rect x="99.1354%" y="197" width="0.0226%" height="15" fill="rgb(209,187,11)" fg:x="21901" fg:w="5"/><text x="99.4284%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::minus_offset (3 instructions, 0.01%)</title><rect x="99.1581%" y="197" width="0.0136%" height="15" fill="rgb(251,70,27)" fg:x="21906" fg:w="3"/><text x="99.4510%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.03%)</title><rect x="99.1716%" y="197" width="0.0272%" height="15" fill="rgb(246,223,36)" fg:x="21909" fg:w="6"/><text x="99.4646%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.05%)</title><rect x="99.1988%" y="197" width="0.0453%" height="15" fill="rgb(246,160,26)" fg:x="21915" fg:w="10"/><text x="99.4918%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (122 instructions, 0.55%)</title><rect x="99.0721%" y="213" width="0.5522%" height="15" fill="rgb(235,166,36)" fg:x="21887" fg:w="122"/><text x="99.3650%" y="223.50"></text></g><g><title>__rdl_dealloc (124 instructions, 0.56%)</title><rect x="99.0721%" y="229" width="0.5613%" height="15" fill="rgb(211,17,17)" fg:x="21887" fg:w="124"/><text x="99.3650%" y="239.50"></text></g><g><title>__rust_dealloc (234 instructions, 1.06%)</title><rect x="98.5968%" y="245" width="1.0592%" height="15" fill="rgb(228,80,30)" fg:x="21782" fg:w="234"/><text x="98.8897%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (22,081 instructions, 99.95%)</title><rect x="0.0362%" y="261" width="99.9502%" height="15" fill="rgb(245,152,22)" fg:x="8" fg:w="22081"/><text x="0.3292%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (22,092 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(246,216,27)" fg:x="0" fg:w="22092"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_put (22,092 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(247,34,34)" fg:x="0" fg:w="22092"/><text x="0.2930%" y="287.50">canister_update batch_put</text></g></svg></svg>