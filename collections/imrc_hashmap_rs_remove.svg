<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">imrc_hashmap_rs.batch_remove</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="37618"><g><title>ic_cdk::setup (8 instructions, 0.02%)</title><rect x="0.0000%" y="261" width="0.0213%" height="15" fill="rgb(229,149,33)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0213%" y="181" width="0.0239%" height="15" fill="rgb(220,83,3)" fg:x="8" fg:w="9"/><text x="0.3142%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0452%" y="181" width="0.0239%" height="15" fill="rgb(226,177,31)" fg:x="17" fg:w="9"/><text x="0.3382%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0691%" y="181" width="0.0239%" height="15" fill="rgb(213,181,15)" fg:x="26" fg:w="9"/><text x="0.3621%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.1010%" y="181" width="0.0266%" height="15" fill="rgb(215,0,41)" fg:x="38" fg:w="10"/><text x="0.3940%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="0.1276%" y="181" width="0.0133%" height="15" fill="rgb(229,127,4)" fg:x="48" fg:w="5"/><text x="0.4206%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="0.0213%" y="197" width="0.3509%" height="15" fill="rgb(237,120,47)" fg:x="8" fg:w="132"/><text x="0.3142%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.38%)</title><rect x="0.0213%" y="213" width="0.3775%" height="15" fill="rgb(212,134,11)" fg:x="8" fg:w="142"/><text x="0.3142%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.39%)</title><rect x="0.0213%" y="229" width="0.3855%" height="15" fill="rgb(225,42,40)" fg:x="8" fg:w="145"/><text x="0.3142%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4227%" y="181" width="0.0239%" height="15" fill="rgb(254,126,15)" fg:x="159" fg:w="9"/><text x="0.7156%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4466%" y="181" width="0.0239%" height="15" fill="rgb(246,109,51)" fg:x="168" fg:w="9"/><text x="0.7396%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4705%" y="181" width="0.0239%" height="15" fill="rgb(217,179,37)" fg:x="177" fg:w="9"/><text x="0.7635%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.5024%" y="181" width="0.0266%" height="15" fill="rgb(205,141,36)" fg:x="189" fg:w="10"/><text x="0.7954%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="0.5290%" y="181" width="0.0133%" height="15" fill="rgb(224,121,38)" fg:x="199" fg:w="5"/><text x="0.8220%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="0.4227%" y="197" width="0.3509%" height="15" fill="rgb(208,140,16)" fg:x="159" fg:w="132"/><text x="0.7156%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.38%)</title><rect x="0.4227%" y="213" width="0.3775%" height="15" fill="rgb(244,159,51)" fg:x="159" fg:w="142"/><text x="0.7156%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.39%)</title><rect x="0.4227%" y="229" width="0.3855%" height="15" fill="rgb(244,36,7)" fg:x="159" fg:w="145"/><text x="0.7156%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 0.80%)</title><rect x="0.0213%" y="245" width="0.8028%" height="15" fill="rgb(254,104,43)" fg:x="8" fg:w="302"/><text x="0.3142%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.02%)</title><rect x="0.8241%" y="245" width="0.0159%" height="15" fill="rgb(241,180,41)" fg:x="310" fg:w="6"/><text x="1.1170%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8400%" y="149" width="0.0239%" height="15" fill="rgb(239,10,51)" fg:x="316" fg:w="9"/><text x="1.1330%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8639%" y="149" width="0.0239%" height="15" fill="rgb(227,26,12)" fg:x="325" fg:w="9"/><text x="1.1569%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8879%" y="149" width="0.0239%" height="15" fill="rgb(220,122,26)" fg:x="334" fg:w="9"/><text x="1.1808%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="0.9118%" y="149" width="0.0372%" height="15" fill="rgb(227,124,7)" fg:x="343" fg:w="14"/><text x="1.2048%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.33%)</title><rect x="0.8400%" y="165" width="0.3296%" height="15" fill="rgb(243,181,40)" fg:x="316" fg:w="124"/><text x="1.1330%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.36%)</title><rect x="0.8400%" y="181" width="0.3562%" height="15" fill="rgb(214,154,19)" fg:x="316" fg:w="134"/><text x="1.1330%" y="191.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.36%)</title><rect x="0.8400%" y="197" width="0.3642%" height="15" fill="rgb(248,70,14)" fg:x="316" fg:w="137"/><text x="1.1330%" y="207.50"></text></g><g><title>__rust_alloc (143 instructions, 0.38%)</title><rect x="0.8400%" y="213" width="0.3801%" height="15" fill="rgb(236,18,54)" fg:x="316" fg:w="143"/><text x="1.1330%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (201 instructions, 0.53%)</title><rect x="0.8400%" y="229" width="0.5343%" height="15" fill="rgb(212,32,46)" fg:x="316" fg:w="201"/><text x="1.1330%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.17%)</title><rect x="1.3770%" y="181" width="0.1675%" height="15" fill="rgb(246,56,5)" fg:x="518" fg:w="63"/><text x="1.6700%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="1.5445%" y="117" width="0.0159%" height="15" fill="rgb(208,20,17)" fg:x="581" fg:w="6"/><text x="1.8374%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="1.5445%" y="133" width="0.0266%" height="15" fill="rgb(220,75,40)" fg:x="581" fg:w="10"/><text x="1.8374%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.15%)</title><rect x="1.5445%" y="149" width="1.1510%" height="15" fill="rgb(242,179,17)" fg:x="581" fg:w="433"/><text x="1.8374%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.20%)</title><rect x="2.6955%" y="149" width="0.2020%" height="15" fill="rgb(232,206,47)" fg:x="1014" fg:w="76"/><text x="2.9885%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="2.8975%" y="149" width="0.1382%" height="15" fill="rgb(233,54,38)" fg:x="1090" fg:w="52"/><text x="3.1905%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.0358%" y="149" width="0.1382%" height="15" fill="rgb(206,119,42)" fg:x="1142" fg:w="52"/><text x="3.3287%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.1740%" y="149" width="0.1382%" height="15" fill="rgb(253,210,40)" fg:x="1194" fg:w="52"/><text x="3.4670%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.3122%" y="149" width="0.1382%" height="15" fill="rgb(232,27,11)" fg:x="1246" fg:w="52"/><text x="3.6052%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (859 instructions, 2.28%)</title><rect x="1.5445%" y="181" width="2.2835%" height="15" fill="rgb(223,12,50)" fg:x="581" fg:w="859"/><text x="1.8374%" y="191.50">b..</text></g><g><title> 4]&gt;::read_options (859 instructions, 2.28%)</title><rect x="1.5445%" y="165" width="2.2835%" height="15" fill="rgb(225,148,9)" fg:x="581" fg:w="859"/><text x="1.8374%" y="175.50"> ..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.17%)</title><rect x="3.8280%" y="181" width="0.1675%" height="15" fill="rgb(231,49,23)" fg:x="1440" fg:w="63"/><text x="4.1209%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.20%)</title><rect x="3.9954%" y="165" width="0.2047%" height="15" fill="rgb(236,157,53)" fg:x="1503" fg:w="77"/><text x="4.2884%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.28%)</title><rect x="3.9954%" y="181" width="0.2765%" height="15" fill="rgb(211,229,1)" fg:x="1503" fg:w="104"/><text x="4.2884%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="4.2719%" y="133" width="0.0159%" height="15" fill="rgb(242,156,7)" fg:x="1607" fg:w="6"/><text x="4.5649%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="4.2719%" y="149" width="0.0266%" height="15" fill="rgb(218,62,42)" fg:x="1607" fg:w="10"/><text x="4.5649%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.15%)</title><rect x="4.2719%" y="165" width="1.1510%" height="15" fill="rgb(233,105,54)" fg:x="1607" fg:w="433"/><text x="4.5649%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.05%)</title><rect x="5.4229%" y="149" width="0.0478%" height="15" fill="rgb(217,229,29)" fg:x="2040" fg:w="18"/><text x="5.7159%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.06%)</title><rect x="5.4229%" y="165" width="0.0585%" height="15" fill="rgb(223,223,16)" fg:x="2040" fg:w="22"/><text x="5.7159%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="5.4814%" y="69" width="0.0239%" height="15" fill="rgb(244,56,46)" fg:x="2062" fg:w="9"/><text x="5.7744%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="5.5053%" y="69" width="0.0239%" height="15" fill="rgb(240,29,4)" fg:x="2071" fg:w="9"/><text x="5.7983%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::left_bits (8 instructions, 0.02%)</title><rect x="5.5293%" y="69" width="0.0213%" height="15" fill="rgb(223,59,11)" fg:x="2080" fg:w="8"/><text x="5.8222%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::least_bit (5 instructions, 0.01%)</title><rect x="5.5505%" y="69" width="0.0133%" height="15" fill="rgb(250,212,13)" fg:x="2088" fg:w="5"/><text x="5.8435%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="5.5638%" y="69" width="0.0133%" height="15" fill="rgb(233,120,21)" fg:x="2093" fg:w="5"/><text x="5.8568%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="5.5851%" y="69" width="0.0266%" height="15" fill="rgb(222,226,32)" fg:x="2101" fg:w="10"/><text x="5.8781%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (168 instructions, 0.45%)</title><rect x="5.4814%" y="85" width="0.4466%" height="15" fill="rgb(245,1,4)" fg:x="2062" fg:w="168"/><text x="5.7744%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.47%)</title><rect x="5.4814%" y="101" width="0.4732%" height="15" fill="rgb(254,191,51)" fg:x="2062" fg:w="178"/><text x="5.7744%" y="111.50"></text></g><g><title>__rdl_alloc (181 instructions, 0.48%)</title><rect x="5.4814%" y="117" width="0.4812%" height="15" fill="rgb(231,181,12)" fg:x="2062" fg:w="181"/><text x="5.7744%" y="127.50"></text></g><g><title>__rust_alloc (187 instructions, 0.50%)</title><rect x="5.4814%" y="133" width="0.4971%" height="15" fill="rgb(218,0,31)" fg:x="2062" fg:w="187"/><text x="5.7744%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.16%)</title><rect x="5.9785%" y="85" width="0.1595%" height="15" fill="rgb(250,8,26)" fg:x="2249" fg:w="60"/><text x="6.2715%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.17%)</title><rect x="5.9785%" y="101" width="0.1701%" height="15" fill="rgb(242,102,15)" fg:x="2249" fg:w="64"/><text x="6.2715%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.24%)</title><rect x="5.9785%" y="117" width="0.2366%" height="15" fill="rgb(224,179,24)" fg:x="2249" fg:w="89"/><text x="6.2715%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="6.2151%" y="69" width="0.0266%" height="15" fill="rgb(205,172,35)" fg:x="2338" fg:w="10"/><text x="6.5081%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.08%)</title><rect x="6.2417%" y="37" width="0.0797%" height="15" fill="rgb(218,212,11)" fg:x="2348" fg:w="30"/><text x="6.5347%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.09%)</title><rect x="6.2417%" y="53" width="0.0904%" height="15" fill="rgb(240,112,37)" fg:x="2348" fg:w="34"/><text x="6.5347%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.16%)</title><rect x="6.2417%" y="69" width="0.1568%" height="15" fill="rgb(208,216,10)" fg:x="2348" fg:w="59"/><text x="6.5347%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.32%)</title><rect x="6.2151%" y="85" width="0.3163%" height="15" fill="rgb(221,175,29)" fg:x="2338" fg:w="119"/><text x="6.5081%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.46%)</title><rect x="6.2151%" y="101" width="0.4625%" height="15" fill="rgb(206,105,24)" fg:x="2338" fg:w="174"/><text x="6.5081%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.48%)</title><rect x="6.2151%" y="117" width="0.4758%" height="15" fill="rgb(244,185,9)" fg:x="2338" fg:w="179"/><text x="6.5081%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.01%)</title><rect x="5.9785%" y="133" width="1.0075%" height="15" fill="rgb(237,197,50)" fg:x="2249" fg:w="379"/><text x="6.2715%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.88%)</title><rect x="5.4814%" y="149" width="1.8847%" height="15" fill="rgb(241,148,41)" fg:x="2062" fg:w="709"/><text x="5.7744%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.20%)</title><rect x="7.3662%" y="149" width="0.2020%" height="15" fill="rgb(215,22,3)" fg:x="2771" fg:w="76"/><text x="7.6591%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="7.5762%" y="101" width="0.0106%" height="15" fill="rgb(208,39,9)" fg:x="2850" fg:w="4"/><text x="7.8691%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="7.5948%" y="101" width="0.0106%" height="15" fill="rgb(253,88,45)" fg:x="2857" fg:w="4"/><text x="7.8877%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="7.6054%" y="101" width="0.0159%" height="15" fill="rgb(252,72,6)" fg:x="2861" fg:w="6"/><text x="7.8984%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="7.6214%" y="101" width="0.0266%" height="15" fill="rgb(248,16,27)" fg:x="2867" fg:w="10"/><text x="7.9143%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.19%)</title><rect x="7.5682%" y="117" width="0.1861%" height="15" fill="rgb(217,66,44)" fg:x="2847" fg:w="70"/><text x="7.8612%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.19%)</title><rect x="7.5682%" y="133" width="0.1914%" height="15" fill="rgb(239,9,38)" fg:x="2847" fg:w="72"/><text x="7.8612%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.20%)</title><rect x="7.5682%" y="149" width="0.2047%" height="15" fill="rgb(235,92,30)" fg:x="2847" fg:w="77"/><text x="7.8612%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (933 instructions, 2.48%)</title><rect x="5.4814%" y="165" width="2.4802%" height="15" fill="rgb(212,134,0)" fg:x="2062" fg:w="933"/><text x="5.7744%" y="175.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.07%)</title><rect x="7.9616%" y="165" width="0.0665%" height="15" fill="rgb(233,71,24)" fg:x="2995" fg:w="25"/><text x="8.2546%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,561 instructions, 4.15%)</title><rect x="4.2719%" y="181" width="4.1496%" height="15" fill="rgb(250,54,6)" fg:x="1607" fg:w="1561"/><text x="4.5649%" y="191.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.15%)</title><rect x="8.4215%" y="181" width="0.1542%" height="15" fill="rgb(211,147,33)" fg:x="3168" fg:w="58"/><text x="8.7145%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.20%)</title><rect x="8.5757%" y="165" width="0.2047%" height="15" fill="rgb(221,150,2)" fg:x="3226" fg:w="77"/><text x="8.8687%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.28%)</title><rect x="8.5757%" y="181" width="0.2765%" height="15" fill="rgb(249,220,9)" fg:x="3226" fg:w="104"/><text x="8.8687%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="8.8521%" y="133" width="0.0159%" height="15" fill="rgb(221,114,30)" fg:x="3330" fg:w="6"/><text x="9.1451%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="8.8521%" y="149" width="0.0266%" height="15" fill="rgb(245,26,9)" fg:x="3330" fg:w="10"/><text x="9.1451%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.15%)</title><rect x="8.8521%" y="165" width="1.1510%" height="15" fill="rgb(212,185,2)" fg:x="3330" fg:w="433"/><text x="9.1451%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.05%)</title><rect x="10.0032%" y="149" width="0.0478%" height="15" fill="rgb(209,121,34)" fg:x="3763" fg:w="18"/><text x="10.2962%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.06%)</title><rect x="10.0032%" y="165" width="0.0585%" height="15" fill="rgb(215,199,50)" fg:x="3763" fg:w="22"/><text x="10.2962%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.0617%" y="69" width="0.0239%" height="15" fill="rgb(233,151,1)" fg:x="3785" fg:w="9"/><text x="10.3546%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.0856%" y="69" width="0.0239%" height="15" fill="rgb(220,41,54)" fg:x="3794" fg:w="9"/><text x="10.3786%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.1095%" y="69" width="0.0239%" height="15" fill="rgb(206,83,34)" fg:x="3803" fg:w="9"/><text x="10.4025%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="10.1414%" y="69" width="0.0266%" height="15" fill="rgb(236,162,13)" fg:x="3815" fg:w="10"/><text x="10.4344%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="10.1680%" y="69" width="0.0133%" height="15" fill="rgb(244,91,51)" fg:x="3825" fg:w="5"/><text x="10.4610%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="10.0617%" y="85" width="0.3509%" height="15" fill="rgb(219,219,40)" fg:x="3785" fg:w="132"/><text x="10.3546%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.38%)</title><rect x="10.0617%" y="101" width="0.3775%" height="15" fill="rgb(205,193,29)" fg:x="3785" fg:w="142"/><text x="10.3546%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.39%)</title><rect x="10.0617%" y="117" width="0.3855%" height="15" fill="rgb(246,82,50)" fg:x="3785" fg:w="145"/><text x="10.3546%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.40%)</title><rect x="10.0617%" y="133" width="0.4014%" height="15" fill="rgb(238,192,7)" fg:x="3785" fg:w="151"/><text x="10.3546%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.16%)</title><rect x="10.4631%" y="85" width="0.1595%" height="15" fill="rgb(225,19,30)" fg:x="3936" fg:w="60"/><text x="10.7560%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.17%)</title><rect x="10.4631%" y="101" width="0.1701%" height="15" fill="rgb(216,170,39)" fg:x="3936" fg:w="64"/><text x="10.7560%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.24%)</title><rect x="10.4631%" y="117" width="0.2366%" height="15" fill="rgb(242,0,20)" fg:x="3936" fg:w="89"/><text x="10.7560%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="10.6997%" y="69" width="0.0266%" height="15" fill="rgb(233,102,43)" fg:x="4025" fg:w="10"/><text x="10.9926%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.08%)</title><rect x="10.7262%" y="37" width="0.0797%" height="15" fill="rgb(222,10,18)" fg:x="4035" fg:w="30"/><text x="11.0192%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.09%)</title><rect x="10.7262%" y="53" width="0.0904%" height="15" fill="rgb(247,122,45)" fg:x="4035" fg:w="34"/><text x="11.0192%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.16%)</title><rect x="10.7262%" y="69" width="0.1568%" height="15" fill="rgb(218,53,17)" fg:x="4035" fg:w="59"/><text x="11.0192%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.32%)</title><rect x="10.6997%" y="85" width="0.3163%" height="15" fill="rgb(241,127,8)" fg:x="4025" fg:w="119"/><text x="10.9926%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.46%)</title><rect x="10.6997%" y="101" width="0.4625%" height="15" fill="rgb(229,224,8)" fg:x="4025" fg:w="174"/><text x="10.9926%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.48%)</title><rect x="10.6997%" y="117" width="0.4758%" height="15" fill="rgb(236,175,14)" fg:x="4025" fg:w="179"/><text x="10.9926%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.01%)</title><rect x="10.4631%" y="133" width="1.0075%" height="15" fill="rgb(214,32,47)" fg:x="3936" fg:w="379"/><text x="10.7560%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 1.79%)</title><rect x="10.0617%" y="149" width="1.7890%" height="15" fill="rgb(234,90,29)" fg:x="3785" fg:w="673"/><text x="10.3546%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (76 instructions, 0.20%)</title><rect x="11.8507%" y="149" width="0.2020%" height="15" fill="rgb(245,153,53)" fg:x="4458" fg:w="76"/><text x="12.1437%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="12.0607%" y="101" width="0.0106%" height="15" fill="rgb(223,127,13)" fg:x="4537" fg:w="4"/><text x="12.3537%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="12.0793%" y="101" width="0.0106%" height="15" fill="rgb(252,124,19)" fg:x="4544" fg:w="4"/><text x="12.3723%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="12.0900%" y="101" width="0.0159%" height="15" fill="rgb(238,10,7)" fg:x="4548" fg:w="6"/><text x="12.3829%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="12.1059%" y="101" width="0.0266%" height="15" fill="rgb(230,3,26)" fg:x="4554" fg:w="10"/><text x="12.3989%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.19%)</title><rect x="12.0527%" y="117" width="0.1861%" height="15" fill="rgb(242,128,13)" fg:x="4534" fg:w="70"/><text x="12.3457%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.19%)</title><rect x="12.0527%" y="133" width="0.1914%" height="15" fill="rgb(213,104,43)" fg:x="4534" fg:w="72"/><text x="12.3457%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.20%)</title><rect x="12.0527%" y="149" width="0.2047%" height="15" fill="rgb(218,61,20)" fg:x="4534" fg:w="77"/><text x="12.3457%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (897 instructions, 2.38%)</title><rect x="10.0617%" y="165" width="2.3845%" height="15" fill="rgb(247,23,34)" fg:x="3785" fg:w="897"/><text x="10.3546%" y="175.50">b..</text></g><g><title>binread::binary_template::write_start_struct (63 instructions, 0.17%)</title><rect x="12.4462%" y="133" width="0.1675%" height="15" fill="rgb(254,58,41)" fg:x="4682" fg:w="63"/><text x="12.7391%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.29%)</title><rect x="12.6136%" y="117" width="0.2924%" height="15" fill="rgb(254,28,0)" fg:x="4745" fg:w="110"/><text x="12.9066%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.36%)</title><rect x="12.6136%" y="133" width="0.3642%" height="15" fill="rgb(206,129,4)" fg:x="4745" fg:w="137"/><text x="12.9066%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.15%)</title><rect x="12.9778%" y="133" width="0.1542%" height="15" fill="rgb(209,216,4)" fg:x="4882" fg:w="58"/><text x="13.2708%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (314 instructions, 0.83%)</title><rect x="12.4462%" y="149" width="0.8347%" height="15" fill="rgb(207,210,1)" fg:x="4682" fg:w="314"/><text x="12.7391%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="13.2809%" y="85" width="0.0239%" height="15" fill="rgb(206,88,29)" fg:x="4996" fg:w="9"/><text x="13.5738%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="13.3048%" y="85" width="0.0239%" height="15" fill="rgb(208,102,19)" fg:x="5005" fg:w="9"/><text x="13.5978%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="13.3367%" y="85" width="0.0133%" height="15" fill="rgb(231,153,51)" fg:x="5017" fg:w="5"/><text x="13.6297%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="13.2809%" y="101" width="0.3190%" height="15" fill="rgb(218,38,30)" fg:x="4996" fg:w="120"/><text x="13.5738%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="13.2809%" y="117" width="0.3456%" height="15" fill="rgb(215,59,38)" fg:x="4996" fg:w="130"/><text x="13.5738%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="13.2809%" y="133" width="0.3536%" height="15" fill="rgb(244,138,29)" fg:x="4996" fg:w="133"/><text x="13.5738%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="13.2809%" y="149" width="0.3695%" height="15" fill="rgb(230,34,27)" fg:x="4996" fg:w="139"/><text x="13.5738%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (538 instructions, 1.43%)</title><rect x="12.4462%" y="165" width="1.4302%" height="15" fill="rgb(251,225,25)" fg:x="4682" fg:w="538"/><text x="12.7391%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,038 instructions, 5.42%)</title><rect x="8.8521%" y="181" width="5.4176%" height="15" fill="rgb(212,163,34)" fg:x="3330" fg:w="2038"/><text x="9.1451%" y="191.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (58 instructions, 0.15%)</title><rect x="14.2698%" y="181" width="0.1542%" height="15" fill="rgb(242,153,34)" fg:x="5368" fg:w="58"/><text x="14.5627%" y="191.50"></text></g><g><title>binread::BinRead::read (5,126 instructions, 13.63%)</title><rect x="1.3743%" y="197" width="13.6265%" height="15" fill="rgb(237,27,51)" fg:x="517" fg:w="5126"/><text x="1.6673%" y="207.50">binread::BinRead:..</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="15.0008%" y="181" width="0.0372%" height="15" fill="rgb(229,185,6)" fg:x="5643" fg:w="14"/><text x="15.2938%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="15.0380%" y="165" width="0.0372%" height="15" fill="rgb(252,40,15)" fg:x="5657" fg:w="14"/><text x="15.3310%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.07%)</title><rect x="15.0752%" y="165" width="0.0665%" height="15" fill="rgb(221,136,54)" fg:x="5671" fg:w="25"/><text x="15.3682%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.05%)</title><rect x="15.1417%" y="165" width="0.0505%" height="15" fill="rgb(250,165,44)" fg:x="5696" fg:w="19"/><text x="15.4347%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (210 instructions, 0.56%)</title><rect x="15.0380%" y="181" width="0.5582%" height="15" fill="rgb(236,32,14)" fg:x="5657" fg:w="210"/><text x="15.3310%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="15.5963%" y="101" width="0.0239%" height="15" fill="rgb(212,188,30)" fg:x="5867" fg:w="9"/><text x="15.8892%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="15.6202%" y="101" width="0.0239%" height="15" fill="rgb(249,81,26)" fg:x="5876" fg:w="9"/><text x="15.9132%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="15.6521%" y="101" width="0.0133%" height="15" fill="rgb(222,85,36)" fg:x="5888" fg:w="5"/><text x="15.9451%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="15.5963%" y="117" width="0.3190%" height="15" fill="rgb(251,43,35)" fg:x="5867" fg:w="120"/><text x="15.8892%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="15.5963%" y="133" width="0.3456%" height="15" fill="rgb(220,5,48)" fg:x="5867" fg:w="130"/><text x="15.8892%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="15.5963%" y="149" width="0.3536%" height="15" fill="rgb(225,198,14)" fg:x="5867" fg:w="133"/><text x="15.8892%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="15.5963%" y="165" width="0.3695%" height="15" fill="rgb(209,151,22)" fg:x="5867" fg:w="139"/><text x="15.8892%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (220 instructions, 0.58%)</title><rect x="15.5963%" y="181" width="0.5848%" height="15" fill="rgb(239,48,7)" fg:x="5867" fg:w="220"/><text x="15.8892%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.1811%" y="85" width="0.0239%" height="15" fill="rgb(243,17,3)" fg:x="6087" fg:w="9"/><text x="16.4741%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.2050%" y="85" width="0.0239%" height="15" fill="rgb(225,169,4)" fg:x="6096" fg:w="9"/><text x="16.4980%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.2289%" y="85" width="0.0239%" height="15" fill="rgb(230,113,16)" fg:x="6105" fg:w="9"/><text x="16.5219%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="16.2529%" y="85" width="0.0372%" height="15" fill="rgb(237,202,51)" fg:x="6114" fg:w="14"/><text x="16.5458%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.33%)</title><rect x="16.1811%" y="101" width="0.3296%" height="15" fill="rgb(248,96,9)" fg:x="6087" fg:w="124"/><text x="16.4741%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.36%)</title><rect x="16.1811%" y="117" width="0.3562%" height="15" fill="rgb(229,1,0)" fg:x="6087" fg:w="134"/><text x="16.4741%" y="127.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.36%)</title><rect x="16.1811%" y="133" width="0.3642%" height="15" fill="rgb(232,97,23)" fg:x="6087" fg:w="137"/><text x="16.4741%" y="143.50"></text></g><g><title>__rust_alloc (143 instructions, 0.38%)</title><rect x="16.1811%" y="149" width="0.3801%" height="15" fill="rgb(220,12,12)" fg:x="6087" fg:w="143"/><text x="16.4741%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (175 instructions, 0.47%)</title><rect x="16.1811%" y="165" width="0.4652%" height="15" fill="rgb(235,38,20)" fg:x="6087" fg:w="175"/><text x="16.4741%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (245 instructions, 0.65%)</title><rect x="16.1811%" y="181" width="0.6513%" height="15" fill="rgb(221,3,30)" fg:x="6087" fg:w="245"/><text x="16.4741%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (916 instructions, 2.44%)</title><rect x="15.0008%" y="197" width="2.4350%" height="15" fill="rgb(232,205,19)" fg:x="5643" fg:w="916"/><text x="15.2938%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="17.4358%" y="117" width="0.0239%" height="15" fill="rgb(224,126,31)" fg:x="6559" fg:w="9"/><text x="17.7288%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="17.4597%" y="117" width="0.0239%" height="15" fill="rgb(236,58,0)" fg:x="6568" fg:w="9"/><text x="17.7527%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="17.4916%" y="117" width="0.0133%" height="15" fill="rgb(208,173,27)" fg:x="6580" fg:w="5"/><text x="17.7846%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="17.4358%" y="133" width="0.3190%" height="15" fill="rgb(222,65,36)" fg:x="6559" fg:w="120"/><text x="17.7288%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="17.4358%" y="149" width="0.3456%" height="15" fill="rgb(242,45,27)" fg:x="6559" fg:w="130"/><text x="17.7288%" y="159.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="17.4358%" y="165" width="0.3536%" height="15" fill="rgb(232,127,37)" fg:x="6559" fg:w="133"/><text x="17.7288%" y="175.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="17.4358%" y="181" width="0.3695%" height="15" fill="rgb(222,67,23)" fg:x="6559" fg:w="139"/><text x="17.7288%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="17.8133%" y="133" width="0.0106%" height="15" fill="rgb(247,210,21)" fg:x="6701" fg:w="4"/><text x="18.1062%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="17.8319%" y="133" width="0.0106%" height="15" fill="rgb(213,123,10)" fg:x="6708" fg:w="4"/><text x="18.1249%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="17.8425%" y="133" width="0.0159%" height="15" fill="rgb(251,67,32)" fg:x="6712" fg:w="6"/><text x="18.1355%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="17.8585%" y="133" width="0.0425%" height="15" fill="rgb(214,72,31)" fg:x="6718" fg:w="16"/><text x="18.1514%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="17.8053%" y="149" width="0.2605%" height="15" fill="rgb(239,90,40)" fg:x="6698" fg:w="98"/><text x="18.0983%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="17.8053%" y="165" width="0.2658%" height="15" fill="rgb(227,208,46)" fg:x="6698" fg:w="100"/><text x="18.0983%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="17.8053%" y="181" width="0.2791%" height="15" fill="rgb(243,77,36)" fg:x="6698" fg:w="105"/><text x="18.0983%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (358 instructions, 0.95%)</title><rect x="17.4358%" y="197" width="0.9517%" height="15" fill="rgb(214,196,1)" fg:x="6559" fg:w="358"/><text x="17.7288%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.3875%" y="133" width="0.0239%" height="15" fill="rgb(212,114,6)" fg:x="6917" fg:w="9"/><text x="18.6804%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.4114%" y="133" width="0.0239%" height="15" fill="rgb(231,221,30)" fg:x="6926" fg:w="9"/><text x="18.7044%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="18.4433%" y="133" width="0.0133%" height="15" fill="rgb(224,111,43)" fg:x="6938" fg:w="5"/><text x="18.7363%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="18.3875%" y="149" width="0.3190%" height="15" fill="rgb(232,24,51)" fg:x="6917" fg:w="120"/><text x="18.6804%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="18.3875%" y="165" width="0.3456%" height="15" fill="rgb(254,144,42)" fg:x="6917" fg:w="130"/><text x="18.6804%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="18.3875%" y="181" width="0.3536%" height="15" fill="rgb(227,74,15)" fg:x="6917" fg:w="133"/><text x="18.6804%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.7570%" y="133" width="0.0239%" height="15" fill="rgb(241,226,16)" fg:x="7056" fg:w="9"/><text x="19.0499%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.7809%" y="133" width="0.0239%" height="15" fill="rgb(251,140,7)" fg:x="7065" fg:w="9"/><text x="19.0739%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="18.8128%" y="133" width="0.0133%" height="15" fill="rgb(215,87,53)" fg:x="7077" fg:w="5"/><text x="19.1058%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="18.7570%" y="149" width="0.3190%" height="15" fill="rgb(209,192,18)" fg:x="7056" fg:w="120"/><text x="19.0499%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="18.7570%" y="165" width="0.3456%" height="15" fill="rgb(228,126,30)" fg:x="7056" fg:w="130"/><text x="19.0499%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="18.7570%" y="181" width="0.3536%" height="15" fill="rgb(242,21,43)" fg:x="7056" fg:w="133"/><text x="19.0499%" y="191.50"></text></g><g><title>__rust_alloc (278 instructions, 0.74%)</title><rect x="18.3875%" y="197" width="0.7390%" height="15" fill="rgb(232,91,24)" fg:x="6917" fg:w="278"/><text x="18.6804%" y="207.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (15 instructions, 0.04%)</title><rect x="19.1265%" y="197" width="0.0399%" height="15" fill="rgb(248,39,1)" fg:x="7195" fg:w="15"/><text x="19.4195%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="19.1743%" y="149" width="0.0106%" height="15" fill="rgb(244,82,3)" fg:x="7213" fg:w="4"/><text x="19.4673%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="19.1929%" y="149" width="0.0106%" height="15" fill="rgb(213,19,35)" fg:x="7220" fg:w="4"/><text x="19.4859%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="19.2036%" y="149" width="0.0159%" height="15" fill="rgb(205,65,32)" fg:x="7224" fg:w="6"/><text x="19.4965%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="19.2195%" y="149" width="0.0425%" height="15" fill="rgb(212,223,20)" fg:x="7230" fg:w="16"/><text x="19.5125%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="19.1664%" y="165" width="0.2605%" height="15" fill="rgb(240,138,25)" fg:x="7210" fg:w="98"/><text x="19.4593%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="19.1664%" y="181" width="0.2658%" height="15" fill="rgb(235,224,36)" fg:x="7210" fg:w="100"/><text x="19.4593%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="19.1664%" y="197" width="0.2791%" height="15" fill="rgb(206,98,27)" fg:x="7210" fg:w="105"/><text x="19.4593%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.10%)</title><rect x="19.4455%" y="165" width="1.0979%" height="15" fill="rgb(225,189,33)" fg:x="7315" fg:w="413"/><text x="19.7384%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.11%)</title><rect x="19.4455%" y="181" width="1.1085%" height="15" fill="rgb(223,64,7)" fg:x="7315" fg:w="417"/><text x="19.7384%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.16%)</title><rect x="19.4455%" y="197" width="1.1617%" height="15" fill="rgb(251,92,40)" fg:x="7315" fg:w="437"/><text x="19.7384%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 0.98%)</title><rect x="20.6072%" y="181" width="0.9783%" height="15" fill="rgb(221,167,42)" fg:x="7752" fg:w="368"/><text x="20.9001%" y="191.50"></text></g><g><title>memcpy (372 instructions, 0.99%)</title><rect x="20.6072%" y="197" width="0.9889%" height="15" fill="rgb(210,166,36)" fg:x="7752" fg:w="372"/><text x="20.9001%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,952 instructions, 21.14%)</title><rect x="1.3743%" y="213" width="21.1388%" height="15" fill="rgb(233,42,30)" fg:x="517" fg:w="7952"/><text x="1.6673%" y="223.50">candid::de::IDLDeserialize::..</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.02%)</title><rect x="22.5132%" y="197" width="1.0181%" height="15" fill="rgb(211,66,27)" fg:x="8469" fg:w="383"/><text x="22.8061%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.02%)</title><rect x="23.5419%" y="197" width="1.0181%" height="15" fill="rgb(213,186,23)" fg:x="8856" fg:w="383"/><text x="23.8349%" y="207.50"></text></g><g><title>memcpy (774 instructions, 2.06%)</title><rect x="22.5132%" y="213" width="2.0575%" height="15" fill="rgb(237,217,9)" fg:x="8469" fg:w="774"/><text x="22.8061%" y="223.50"></text></g><g><title>candid::types::internal::find_type (38 instructions, 0.10%)</title><rect x="24.5707%" y="181" width="0.1010%" height="15" fill="rgb(249,46,9)" fg:x="9243" fg:w="38"/><text x="24.8637%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="24.6717%" y="101" width="0.0239%" height="15" fill="rgb(248,205,14)" fg:x="9281" fg:w="9"/><text x="24.9647%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="24.6956%" y="101" width="0.0239%" height="15" fill="rgb(240,170,12)" fg:x="9290" fg:w="9"/><text x="24.9886%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="24.7275%" y="101" width="0.0133%" height="15" fill="rgb(239,93,23)" fg:x="9302" fg:w="5"/><text x="25.0205%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="24.6717%" y="117" width="0.3190%" height="15" fill="rgb(227,34,27)" fg:x="9281" fg:w="120"/><text x="24.9647%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="24.6717%" y="133" width="0.3456%" height="15" fill="rgb(222,70,38)" fg:x="9281" fg:w="130"/><text x="24.9647%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="24.6717%" y="149" width="0.3536%" height="15" fill="rgb(237,34,30)" fg:x="9281" fg:w="133"/><text x="24.9647%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="24.6717%" y="165" width="0.3695%" height="15" fill="rgb(245,83,42)" fg:x="9281" fg:w="139"/><text x="24.9647%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (184 instructions, 0.49%)</title><rect x="24.6717%" y="181" width="0.4891%" height="15" fill="rgb(243,77,19)" fg:x="9281" fg:w="184"/><text x="24.9647%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="25.1608%" y="133" width="0.1435%" height="15" fill="rgb(206,197,3)" fg:x="9465" fg:w="54"/><text x="25.4538%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.24%)</title><rect x="25.3044%" y="133" width="0.2392%" height="15" fill="rgb(221,87,53)" fg:x="9519" fg:w="90"/><text x="25.5973%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.43%)</title><rect x="25.5436%" y="133" width="0.4333%" height="15" fill="rgb(217,80,46)" fg:x="9609" fg:w="163"/><text x="25.8366%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.48%)</title><rect x="25.1608%" y="149" width="1.4780%" height="15" fill="rgb(219,173,45)" fg:x="9465" fg:w="556"/><text x="25.4538%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.26%)</title><rect x="26.6388%" y="149" width="0.2632%" height="15" fill="rgb(229,157,13)" fg:x="10021" fg:w="99"/><text x="26.9318%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (760 instructions, 2.02%)</title><rect x="25.1608%" y="165" width="2.0203%" height="15" fill="rgb(247,135,40)" fg:x="9465" fg:w="760"/><text x="25.4538%" y="175.50"></text></g><g><title>candid::types::internal::env_add (813 instructions, 2.16%)</title><rect x="25.1608%" y="181" width="2.1612%" height="15" fill="rgb(236,29,19)" fg:x="9465" fg:w="813"/><text x="25.4538%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="27.3220%" y="101" width="0.0239%" height="15" fill="rgb(244,167,40)" fg:x="10278" fg:w="9"/><text x="27.6150%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="27.3460%" y="101" width="0.0239%" height="15" fill="rgb(232,176,19)" fg:x="10287" fg:w="9"/><text x="27.6389%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="27.3779%" y="101" width="0.0133%" height="15" fill="rgb(210,133,44)" fg:x="10299" fg:w="5"/><text x="27.6708%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="27.3220%" y="117" width="0.3190%" height="15" fill="rgb(235,196,12)" fg:x="10278" fg:w="120"/><text x="27.6150%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.35%)</title><rect x="27.3220%" y="133" width="0.3456%" height="15" fill="rgb(219,189,21)" fg:x="10278" fg:w="130"/><text x="27.6150%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="27.3220%" y="149" width="0.3536%" height="15" fill="rgb(207,137,46)" fg:x="10278" fg:w="133"/><text x="27.6150%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="27.3220%" y="165" width="0.3695%" height="15" fill="rgb(228,29,44)" fg:x="10278" fg:w="139"/><text x="27.6150%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (151 instructions, 0.40%)</title><rect x="27.3220%" y="181" width="0.4014%" height="15" fill="rgb(242,113,7)" fg:x="10278" fg:w="151"/><text x="27.6150%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="27.7234%" y="133" width="0.1435%" height="15" fill="rgb(221,28,37)" fg:x="10429" fg:w="54"/><text x="28.0164%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.24%)</title><rect x="27.8670%" y="133" width="0.2392%" height="15" fill="rgb(238,43,37)" fg:x="10483" fg:w="90"/><text x="28.1599%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.43%)</title><rect x="28.1062%" y="133" width="0.4333%" height="15" fill="rgb(228,58,6)" fg:x="10573" fg:w="163"/><text x="28.3992%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.48%)</title><rect x="27.7234%" y="149" width="1.4780%" height="15" fill="rgb(241,35,2)" fg:x="10429" fg:w="556"/><text x="28.0164%" y="159.50"></text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.20%)</title><rect x="29.2014%" y="133" width="0.1967%" height="15" fill="rgb(227,48,5)" fg:x="10985" fg:w="74"/><text x="29.4944%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.21%)</title><rect x="29.2014%" y="149" width="0.2073%" height="15" fill="rgb(235,3,6)" fg:x="10985" fg:w="78"/><text x="29.4944%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (743 instructions, 1.98%)</title><rect x="27.7234%" y="165" width="1.9751%" height="15" fill="rgb(227,199,42)" fg:x="10429" fg:w="743"/><text x="28.0164%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="29.7065%" y="101" width="0.0106%" height="15" fill="rgb(211,193,24)" fg:x="11175" fg:w="4"/><text x="29.9995%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="29.7251%" y="101" width="0.0106%" height="15" fill="rgb(232,209,8)" fg:x="11182" fg:w="4"/><text x="30.0181%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="29.7358%" y="101" width="0.0159%" height="15" fill="rgb(233,205,44)" fg:x="11186" fg:w="6"/><text x="30.0287%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="29.7517%" y="101" width="0.0425%" height="15" fill="rgb(206,181,23)" fg:x="11192" fg:w="16"/><text x="30.0447%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="29.6985%" y="117" width="0.2605%" height="15" fill="rgb(224,201,4)" fg:x="11172" fg:w="98"/><text x="29.9915%" y="127.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="29.6985%" y="133" width="0.2658%" height="15" fill="rgb(236,181,38)" fg:x="11172" fg:w="100"/><text x="29.9915%" y="143.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="29.6985%" y="149" width="0.2791%" height="15" fill="rgb(218,143,35)" fg:x="11172" fg:w="105"/><text x="29.9915%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.36%)</title><rect x="29.6985%" y="165" width="0.3642%" height="15" fill="rgb(220,64,28)" fg:x="11172" fg:w="137"/><text x="29.9915%" y="175.50"></text></g><g><title>candid::types::internal::env_add (937 instructions, 2.49%)</title><rect x="27.7234%" y="181" width="2.4908%" height="15" fill="rgb(234,96,7)" fg:x="10429" fg:w="937"/><text x="28.0164%" y="191.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="30.2143%" y="133" width="0.1435%" height="15" fill="rgb(240,125,45)" fg:x="11366" fg:w="54"/><text x="30.5072%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.21%)</title><rect x="30.2143%" y="149" width="0.2100%" height="15" fill="rgb(226,56,15)" fg:x="11366" fg:w="79"/><text x="30.5072%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 0.81%)</title><rect x="30.2143%" y="165" width="0.8055%" height="15" fill="rgb(207,33,40)" fg:x="11366" fg:w="303"/><text x="30.5072%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::PartialEq&gt;::eq (35 instructions, 0.09%)</title><rect x="31.0197%" y="165" width="0.0930%" height="15" fill="rgb(214,126,9)" fg:x="11669" fg:w="35"/><text x="31.3127%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="31.1128%" y="165" width="0.0292%" height="15" fill="rgb(222,208,23)" fg:x="11704" fg:w="11"/><text x="31.4057%" y="175.50"></text></g><g><title>candid::types::internal::env_id (506 instructions, 1.35%)</title><rect x="30.2143%" y="181" width="1.3451%" height="15" fill="rgb(219,152,37)" fg:x="11366" fg:w="506"/><text x="30.5072%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,737 instructions, 7.28%)</title><rect x="24.5707%" y="197" width="7.2758%" height="15" fill="rgb(216,102,24)" fg:x="9243" fg:w="2737"/><text x="24.8637%" y="207.50">candid::..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.10%)</title><rect x="31.8465%" y="197" width="0.1010%" height="15" fill="rgb(218,59,36)" fg:x="11980" fg:w="38"/><text x="32.1394%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="31.9554%" y="133" width="0.0106%" height="15" fill="rgb(244,186,46)" fg:x="12021" fg:w="4"/><text x="32.2484%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="31.9741%" y="133" width="0.0106%" height="15" fill="rgb(229,177,14)" fg:x="12028" fg:w="4"/><text x="32.2670%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="31.9847%" y="133" width="0.0159%" height="15" fill="rgb(232,164,36)" fg:x="12032" fg:w="6"/><text x="32.2777%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.0006%" y="133" width="0.0106%" height="15" fill="rgb(235,8,20)" fg:x="12038" fg:w="4"/><text x="32.2936%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="32.0113%" y="133" width="0.0266%" height="15" fill="rgb(222,174,18)" fg:x="12042" fg:w="10"/><text x="32.3042%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="31.9475%" y="149" width="0.3748%" height="15" fill="rgb(227,108,45)" fg:x="12018" fg:w="141"/><text x="32.2404%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="31.9475%" y="165" width="0.3801%" height="15" fill="rgb(210,174,31)" fg:x="12018" fg:w="143"/><text x="32.2404%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="31.9475%" y="181" width="0.3934%" height="15" fill="rgb(225,153,17)" fg:x="12018" fg:w="148"/><text x="32.2404%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.4339%" y="133" width="0.0106%" height="15" fill="rgb(239,60,52)" fg:x="12201" fg:w="4"/><text x="32.7269%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="32.4525%" y="133" width="0.0106%" height="15" fill="rgb(210,42,29)" fg:x="12208" fg:w="4"/><text x="32.7455%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="32.4632%" y="133" width="0.0159%" height="15" fill="rgb(224,43,29)" fg:x="12212" fg:w="6"/><text x="32.7562%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.4791%" y="133" width="0.0106%" height="15" fill="rgb(238,178,46)" fg:x="12218" fg:w="4"/><text x="32.7721%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="32.4898%" y="133" width="0.0266%" height="15" fill="rgb(237,6,54)" fg:x="12222" fg:w="10"/><text x="32.7827%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="32.4260%" y="149" width="0.3748%" height="15" fill="rgb(233,177,36)" fg:x="12198" fg:w="141"/><text x="32.7189%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="32.4260%" y="165" width="0.3801%" height="15" fill="rgb(219,209,6)" fg:x="12198" fg:w="143"/><text x="32.7189%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="32.4260%" y="181" width="0.3934%" height="15" fill="rgb(248,11,37)" fg:x="12198" fg:w="148"/><text x="32.7189%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 0.96%)</title><rect x="31.9475%" y="197" width="0.9570%" height="15" fill="rgb(205,18,4)" fg:x="12018" fg:w="360"/><text x="32.2404%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="32.9045%" y="181" width="0.0744%" height="15" fill="rgb(246,14,12)" fg:x="12378" fg:w="28"/><text x="33.1974%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.07%)</title><rect x="32.9789%" y="181" width="0.0665%" height="15" fill="rgb(207,196,33)" fg:x="12406" fg:w="25"/><text x="33.2719%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (25 instructions, 0.07%)</title><rect x="33.0454%" y="181" width="0.0665%" height="15" fill="rgb(231,49,9)" fg:x="12431" fg:w="25"/><text x="33.3383%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (159 instructions, 0.42%)</title><rect x="32.9045%" y="197" width="0.4227%" height="15" fill="rgb(250,115,24)" fg:x="12378" fg:w="159"/><text x="33.1974%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.3271%" y="197" width="0.0292%" height="15" fill="rgb(254,111,42)" fg:x="12537" fg:w="11"/><text x="33.6201%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.3564%" y="197" width="0.0292%" height="15" fill="rgb(208,6,31)" fg:x="12548" fg:w="11"/><text x="33.6493%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.3856%" y="197" width="0.0292%" height="15" fill="rgb(251,93,1)" fg:x="12559" fg:w="11"/><text x="33.6786%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,495 instructions, 9.29%)</title><rect x="24.5707%" y="213" width="9.2908%" height="15" fill="rgb(227,53,15)" fg:x="9243" fg:w="3495"/><text x="24.8637%" y="223.50">candid::de:..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.10%)</title><rect x="33.8614%" y="197" width="1.0979%" height="15" fill="rgb(222,7,54)" fg:x="12738" fg:w="413"/><text x="34.1544%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.11%)</title><rect x="33.8614%" y="213" width="1.1085%" height="15" fill="rgb(242,42,40)" fg:x="12738" fg:w="417"/><text x="34.1544%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.05%)</title><rect x="34.9700%" y="197" width="0.0505%" height="15" fill="rgb(222,177,31)" fg:x="13155" fg:w="19"/><text x="35.2629%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.0284%" y="149" width="0.0106%" height="15" fill="rgb(207,46,37)" fg:x="13177" fg:w="4"/><text x="35.3214%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.0471%" y="149" width="0.0106%" height="15" fill="rgb(237,171,15)" fg:x="13184" fg:w="4"/><text x="35.3400%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.0577%" y="149" width="0.0159%" height="15" fill="rgb(254,197,19)" fg:x="13188" fg:w="6"/><text x="35.3507%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.0736%" y="149" width="0.0106%" height="15" fill="rgb(207,82,25)" fg:x="13194" fg:w="4"/><text x="35.3666%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="35.0843%" y="149" width="0.0266%" height="15" fill="rgb(216,136,36)" fg:x="13198" fg:w="10"/><text x="35.3772%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="35.0205%" y="165" width="0.3748%" height="15" fill="rgb(236,160,23)" fg:x="13174" fg:w="141"/><text x="35.3134%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="35.0205%" y="181" width="0.3801%" height="15" fill="rgb(241,163,17)" fg:x="13174" fg:w="143"/><text x="35.3134%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="35.0205%" y="197" width="0.3934%" height="15" fill="rgb(236,200,34)" fg:x="13174" fg:w="148"/><text x="35.3134%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.4219%" y="133" width="0.0106%" height="15" fill="rgb(230,76,31)" fg:x="13325" fg:w="4"/><text x="35.7148%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.4405%" y="133" width="0.0106%" height="15" fill="rgb(240,86,18)" fg:x="13332" fg:w="4"/><text x="35.7334%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="35.4511%" y="133" width="0.0133%" height="15" fill="rgb(237,190,26)" fg:x="13336" fg:w="5"/><text x="35.7441%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.4724%" y="133" width="0.0159%" height="15" fill="rgb(222,88,1)" fg:x="13344" fg:w="6"/><text x="35.7653%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.4883%" y="133" width="0.0106%" height="15" fill="rgb(249,182,18)" fg:x="13350" fg:w="4"/><text x="35.7813%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="35.4990%" y="133" width="0.0266%" height="15" fill="rgb(252,204,8)" fg:x="13354" fg:w="10"/><text x="35.7919%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.20%)</title><rect x="35.5255%" y="133" width="0.1967%" height="15" fill="rgb(210,106,5)" fg:x="13364" fg:w="74"/><text x="35.8185%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.65%)</title><rect x="35.4139%" y="149" width="0.6460%" height="15" fill="rgb(226,193,13)" fg:x="13322" fg:w="243"/><text x="35.7069%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 0.65%)</title><rect x="35.4139%" y="165" width="0.6513%" height="15" fill="rgb(214,217,20)" fg:x="13322" fg:w="245"/><text x="35.7069%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 0.66%)</title><rect x="35.4139%" y="181" width="0.6646%" height="15" fill="rgb(243,146,32)" fg:x="13322" fg:w="250"/><text x="35.7069%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 0.75%)</title><rect x="35.4139%" y="197" width="0.7496%" height="15" fill="rgb(221,167,40)" fg:x="13322" fg:w="282"/><text x="35.7069%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="36.1635%" y="197" width="0.0292%" height="15" fill="rgb(236,20,23)" fg:x="13604" fg:w="11"/><text x="36.4565%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="36.1928%" y="197" width="0.0133%" height="15" fill="rgb(226,160,32)" fg:x="13615" fg:w="5"/><text x="36.4857%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 1.49%)</title><rect x="34.9700%" y="213" width="1.4940%" height="15" fill="rgb(225,193,15)" fg:x="13155" fg:w="562"/><text x="35.2629%" y="223.50"></text></g><g><title>candid::utils::decode_args (13,303 instructions, 35.36%)</title><rect x="1.3743%" y="229" width="35.3634%" height="15" fill="rgb(225,137,48)" fg:x="517" fg:w="13303"/><text x="1.6673%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="36.7457%" y="181" width="0.0106%" height="15" fill="rgb(222,88,39)" fg:x="13823" fg:w="4"/><text x="37.0387%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="36.7643%" y="181" width="0.0106%" height="15" fill="rgb(210,64,19)" fg:x="13830" fg:w="4"/><text x="37.0573%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="36.7749%" y="181" width="0.0159%" height="15" fill="rgb(218,63,51)" fg:x="13834" fg:w="6"/><text x="37.0679%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="36.7909%" y="181" width="0.0425%" height="15" fill="rgb(222,114,7)" fg:x="13840" fg:w="16"/><text x="37.0839%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="36.7377%" y="197" width="0.2605%" height="15" fill="rgb(222,69,40)" fg:x="13820" fg:w="98"/><text x="37.0307%" y="207.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="36.7377%" y="213" width="0.2658%" height="15" fill="rgb(242,83,48)" fg:x="13820" fg:w="100"/><text x="37.0307%" y="223.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="36.7377%" y="229" width="0.2791%" height="15" fill="rgb(209,210,30)" fg:x="13820" fg:w="105"/><text x="37.0307%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,650 instructions, 36.29%)</title><rect x="0.8400%" y="245" width="36.2858%" height="15" fill="rgb(220,57,21)" fg:x="316" fg:w="13650"/><text x="1.1330%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>imrc_hashmap::MAP::__getit (6 instructions, 0.02%)</title><rect x="37.1258%" y="229" width="0.0159%" height="15" fill="rgb(222,137,51)" fg:x="13966" fg:w="6"/><text x="37.4188%" y="239.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="37.1418%" y="181" width="0.1223%" height="15" fill="rgb(226,21,16)" fg:x="13972" fg:w="46"/><text x="37.4348%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="37.1418%" y="197" width="0.3163%" height="15" fill="rgb(250,33,21)" fg:x="13972" fg:w="119"/><text x="37.4348%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="37.1418%" y="213" width="0.5104%" height="15" fill="rgb(210,195,9)" fg:x="13972" fg:w="192"/><text x="37.4348%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="38.2104%" y="181" width="0.1223%" height="15" fill="rgb(228,190,2)" fg:x="14374" fg:w="46"/><text x="38.5034%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="38.2104%" y="197" width="0.3163%" height="15" fill="rgb(210,50,35)" fg:x="14374" fg:w="119"/><text x="38.5034%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="38.2104%" y="213" width="0.5104%" height="15" fill="rgb(240,98,20)" fg:x="14374" fg:w="192"/><text x="38.5034%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="39.2791%" y="165" width="0.0904%" height="15" fill="rgb(207,124,1)" fg:x="14776" fg:w="34"/><text x="39.5720%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="39.2791%" y="181" width="0.2844%" height="15" fill="rgb(228,83,27)" fg:x="14776" fg:w="107"/><text x="39.5720%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="39.2791%" y="197" width="0.4785%" height="15" fill="rgb(245,193,16)" fg:x="14776" fg:w="180"/><text x="39.5720%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="39.2791%" y="213" width="0.6726%" height="15" fill="rgb(222,169,9)" fg:x="14776" fg:w="253"/><text x="39.5720%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="40.5099%" y="181" width="0.0904%" height="15" fill="rgb(253,40,36)" fg:x="15239" fg:w="34"/><text x="40.8028%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="40.5099%" y="197" width="0.2844%" height="15" fill="rgb(210,225,51)" fg:x="15239" fg:w="107"/><text x="40.8028%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="40.5099%" y="213" width="0.4785%" height="15" fill="rgb(218,82,0)" fg:x="15239" fg:w="180"/><text x="40.8028%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="41.5466%" y="181" width="0.0904%" height="15" fill="rgb(216,179,24)" fg:x="15629" fg:w="34"/><text x="41.8396%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="41.5466%" y="197" width="0.2844%" height="15" fill="rgb(218,180,6)" fg:x="15629" fg:w="107"/><text x="41.8396%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="41.5466%" y="213" width="0.4785%" height="15" fill="rgb(239,70,22)" fg:x="15629" fg:w="180"/><text x="41.8396%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="42.5833%" y="181" width="0.0904%" height="15" fill="rgb(219,2,10)" fg:x="16019" fg:w="34"/><text x="42.8763%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="42.5833%" y="197" width="0.2844%" height="15" fill="rgb(240,220,10)" fg:x="16019" fg:w="107"/><text x="42.8763%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="42.5833%" y="213" width="0.4785%" height="15" fill="rgb(208,153,25)" fg:x="16019" fg:w="180"/><text x="42.8763%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="43.6201%" y="165" width="0.0904%" height="15" fill="rgb(235,6,53)" fg:x="16409" fg:w="34"/><text x="43.9130%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="43.6201%" y="181" width="0.2844%" height="15" fill="rgb(228,159,54)" fg:x="16409" fg:w="107"/><text x="43.9130%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="43.6201%" y="197" width="0.4785%" height="15" fill="rgb(224,105,14)" fg:x="16409" fg:w="180"/><text x="43.9130%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="43.6201%" y="213" width="0.6726%" height="15" fill="rgb(239,221,16)" fg:x="16409" fg:w="253"/><text x="43.9130%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="44.8509%" y="181" width="0.1223%" height="15" fill="rgb(230,150,7)" fg:x="16872" fg:w="46"/><text x="45.1438%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="44.8509%" y="197" width="0.3163%" height="15" fill="rgb(208,189,25)" fg:x="16872" fg:w="119"/><text x="45.1438%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="44.8509%" y="213" width="0.5104%" height="15" fill="rgb(217,201,12)" fg:x="16872" fg:w="192"/><text x="45.1438%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="45.9195%" y="181" width="0.0904%" height="15" fill="rgb(238,116,49)" fg:x="17274" fg:w="34"/><text x="46.2125%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="45.9195%" y="197" width="0.2844%" height="15" fill="rgb(207,84,45)" fg:x="17274" fg:w="107"/><text x="46.2125%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="45.9195%" y="213" width="0.4785%" height="15" fill="rgb(216,152,10)" fg:x="17274" fg:w="180"/><text x="46.2125%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="46.9562%" y="181" width="0.0904%" height="15" fill="rgb(224,226,30)" fg:x="17664" fg:w="34"/><text x="47.2492%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="46.9562%" y="197" width="0.2844%" height="15" fill="rgb(224,135,11)" fg:x="17664" fg:w="107"/><text x="47.2492%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="46.9562%" y="213" width="0.4785%" height="15" fill="rgb(229,142,25)" fg:x="17664" fg:w="180"/><text x="47.2492%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="47.9930%" y="181" width="0.0904%" height="15" fill="rgb(251,17,2)" fg:x="18054" fg:w="34"/><text x="48.2860%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="47.9930%" y="197" width="0.2844%" height="15" fill="rgb(250,16,24)" fg:x="18054" fg:w="107"/><text x="48.2860%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="47.9930%" y="213" width="0.4785%" height="15" fill="rgb(221,179,24)" fg:x="18054" fg:w="180"/><text x="48.2860%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="49.0297%" y="181" width="0.0904%" height="15" fill="rgb(253,114,23)" fg:x="18444" fg:w="34"/><text x="49.3227%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="49.0297%" y="197" width="0.2844%" height="15" fill="rgb(249,199,10)" fg:x="18444" fg:w="107"/><text x="49.3227%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="49.0297%" y="213" width="0.4785%" height="15" fill="rgb(254,125,35)" fg:x="18444" fg:w="180"/><text x="49.3227%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="50.0665%" y="181" width="0.0904%" height="15" fill="rgb(217,0,38)" fg:x="18834" fg:w="34"/><text x="50.3594%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="50.0665%" y="197" width="0.2844%" height="15" fill="rgb(221,106,1)" fg:x="18834" fg:w="107"/><text x="50.3594%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="50.0665%" y="213" width="0.4785%" height="15" fill="rgb(229,97,39)" fg:x="18834" fg:w="180"/><text x="50.3594%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="51.1032%" y="165" width="0.0904%" height="15" fill="rgb(248,132,6)" fg:x="19224" fg:w="34"/><text x="51.3962%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="51.1032%" y="181" width="0.2844%" height="15" fill="rgb(237,136,35)" fg:x="19224" fg:w="107"/><text x="51.3962%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="51.1032%" y="197" width="0.4785%" height="15" fill="rgb(238,1,23)" fg:x="19224" fg:w="180"/><text x="51.3962%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="51.1032%" y="213" width="0.6726%" height="15" fill="rgb(243,124,42)" fg:x="19224" fg:w="253"/><text x="51.3962%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="52.3340%" y="181" width="0.1223%" height="15" fill="rgb(237,136,54)" fg:x="19687" fg:w="46"/><text x="52.6270%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="52.3340%" y="197" width="0.3163%" height="15" fill="rgb(215,69,49)" fg:x="19687" fg:w="119"/><text x="52.6270%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="52.3340%" y="213" width="0.5104%" height="15" fill="rgb(215,9,0)" fg:x="19687" fg:w="192"/><text x="52.6270%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="53.4026%" y="181" width="0.0904%" height="15" fill="rgb(221,162,42)" fg:x="20089" fg:w="34"/><text x="53.6956%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="53.4026%" y="197" width="0.2844%" height="15" fill="rgb(248,22,39)" fg:x="20089" fg:w="107"/><text x="53.6956%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="53.4026%" y="213" width="0.4785%" height="15" fill="rgb(207,9,44)" fg:x="20089" fg:w="180"/><text x="53.6956%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="54.4394%" y="181" width="0.0904%" height="15" fill="rgb(237,209,38)" fg:x="20479" fg:w="34"/><text x="54.7323%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="54.4394%" y="197" width="0.2844%" height="15" fill="rgb(207,30,26)" fg:x="20479" fg:w="107"/><text x="54.7323%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="54.4394%" y="213" width="0.4785%" height="15" fill="rgb(243,62,1)" fg:x="20479" fg:w="180"/><text x="54.7323%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="55.4761%" y="181" width="0.1223%" height="15" fill="rgb(233,116,25)" fg:x="20869" fg:w="46"/><text x="55.7691%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="55.4761%" y="197" width="0.3163%" height="15" fill="rgb(245,213,38)" fg:x="20869" fg:w="119"/><text x="55.7691%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="55.4761%" y="213" width="0.5104%" height="15" fill="rgb(237,46,42)" fg:x="20869" fg:w="192"/><text x="55.7691%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="56.5447%" y="181" width="0.0904%" height="15" fill="rgb(239,65,45)" fg:x="21271" fg:w="34"/><text x="56.8377%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="56.5447%" y="197" width="0.2844%" height="15" fill="rgb(228,97,21)" fg:x="21271" fg:w="107"/><text x="56.8377%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="56.5447%" y="213" width="0.4785%" height="15" fill="rgb(217,10,15)" fg:x="21271" fg:w="180"/><text x="56.8377%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="57.5815%" y="181" width="0.1223%" height="15" fill="rgb(235,89,2)" fg:x="21661" fg:w="46"/><text x="57.8744%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="57.5815%" y="197" width="0.3163%" height="15" fill="rgb(241,131,52)" fg:x="21661" fg:w="119"/><text x="57.8744%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="57.5815%" y="213" width="0.5104%" height="15" fill="rgb(219,219,37)" fg:x="21661" fg:w="192"/><text x="57.8744%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="58.6501%" y="181" width="0.0904%" height="15" fill="rgb(207,3,30)" fg:x="22063" fg:w="34"/><text x="58.9431%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="58.6501%" y="197" width="0.2844%" height="15" fill="rgb(249,8,18)" fg:x="22063" fg:w="107"/><text x="58.9431%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="58.6501%" y="213" width="0.4785%" height="15" fill="rgb(222,50,39)" fg:x="22063" fg:w="180"/><text x="58.9431%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="59.6869%" y="181" width="0.0904%" height="15" fill="rgb(248,89,18)" fg:x="22453" fg:w="34"/><text x="59.9798%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="59.6869%" y="197" width="0.2844%" height="15" fill="rgb(243,228,10)" fg:x="22453" fg:w="107"/><text x="59.9798%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="59.6869%" y="213" width="0.4785%" height="15" fill="rgb(233,23,28)" fg:x="22453" fg:w="180"/><text x="59.9798%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="60.7236%" y="181" width="0.0904%" height="15" fill="rgb(213,97,41)" fg:x="22843" fg:w="34"/><text x="61.0166%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="60.7236%" y="197" width="0.2844%" height="15" fill="rgb(245,204,14)" fg:x="22843" fg:w="107"/><text x="61.0166%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="60.7236%" y="213" width="0.4785%" height="15" fill="rgb(253,98,28)" fg:x="22843" fg:w="180"/><text x="61.0166%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="61.7603%" y="181" width="0.0904%" height="15" fill="rgb(241,138,8)" fg:x="23233" fg:w="34"/><text x="62.0533%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="61.7603%" y="197" width="0.2844%" height="15" fill="rgb(242,44,0)" fg:x="23233" fg:w="107"/><text x="62.0533%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="61.7603%" y="213" width="0.4785%" height="15" fill="rgb(226,33,54)" fg:x="23233" fg:w="180"/><text x="62.0533%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="62.7971%" y="181" width="0.1223%" height="15" fill="rgb(206,83,0)" fg:x="23623" fg:w="46"/><text x="63.0900%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="62.7971%" y="197" width="0.3163%" height="15" fill="rgb(244,15,13)" fg:x="23623" fg:w="119"/><text x="63.0900%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="62.7971%" y="213" width="0.5104%" height="15" fill="rgb(235,118,52)" fg:x="23623" fg:w="192"/><text x="63.0900%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="63.8657%" y="181" width="0.1223%" height="15" fill="rgb(225,59,7)" fg:x="24025" fg:w="46"/><text x="64.1587%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="63.8657%" y="197" width="0.3163%" height="15" fill="rgb(231,1,2)" fg:x="24025" fg:w="119"/><text x="64.1587%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="63.8657%" y="213" width="0.5104%" height="15" fill="rgb(249,178,32)" fg:x="24025" fg:w="192"/><text x="64.1587%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="64.9343%" y="181" width="0.1223%" height="15" fill="rgb(236,126,12)" fg:x="24427" fg:w="46"/><text x="65.2273%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="64.9343%" y="197" width="0.3163%" height="15" fill="rgb(206,193,36)" fg:x="24427" fg:w="119"/><text x="65.2273%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="64.9343%" y="213" width="0.5104%" height="15" fill="rgb(229,206,36)" fg:x="24427" fg:w="192"/><text x="65.2273%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="66.0030%" y="181" width="0.0904%" height="15" fill="rgb(233,36,0)" fg:x="24829" fg:w="34"/><text x="66.2959%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="66.0030%" y="197" width="0.2844%" height="15" fill="rgb(215,183,34)" fg:x="24829" fg:w="107"/><text x="66.2959%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="66.0030%" y="213" width="0.4785%" height="15" fill="rgb(226,128,44)" fg:x="24829" fg:w="180"/><text x="66.2959%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="67.0397%" y="181" width="0.0904%" height="15" fill="rgb(205,60,38)" fg:x="25219" fg:w="34"/><text x="67.3327%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="67.0397%" y="197" width="0.2844%" height="15" fill="rgb(222,11,4)" fg:x="25219" fg:w="107"/><text x="67.3327%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="67.0397%" y="213" width="0.4785%" height="15" fill="rgb(251,73,15)" fg:x="25219" fg:w="180"/><text x="67.3327%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="68.0765%" y="181" width="0.1223%" height="15" fill="rgb(214,166,29)" fg:x="25609" fg:w="46"/><text x="68.3694%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="68.0765%" y="197" width="0.3163%" height="15" fill="rgb(236,102,32)" fg:x="25609" fg:w="119"/><text x="68.3694%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="68.0765%" y="213" width="0.5104%" height="15" fill="rgb(210,203,42)" fg:x="25609" fg:w="192"/><text x="68.3694%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="69.1451%" y="181" width="0.1223%" height="15" fill="rgb(220,39,3)" fg:x="26011" fg:w="46"/><text x="69.4381%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="69.1451%" y="197" width="0.3163%" height="15" fill="rgb(211,207,52)" fg:x="26011" fg:w="119"/><text x="69.4381%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="69.1451%" y="213" width="0.5104%" height="15" fill="rgb(223,181,8)" fg:x="26011" fg:w="192"/><text x="69.4381%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="70.2137%" y="181" width="0.1223%" height="15" fill="rgb(252,115,33)" fg:x="26413" fg:w="46"/><text x="70.5067%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="70.2137%" y="197" width="0.3163%" height="15" fill="rgb(208,69,31)" fg:x="26413" fg:w="119"/><text x="70.5067%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="70.2137%" y="213" width="0.5104%" height="15" fill="rgb(214,74,18)" fg:x="26413" fg:w="192"/><text x="70.5067%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="71.2824%" y="181" width="0.0904%" height="15" fill="rgb(239,116,36)" fg:x="26815" fg:w="34"/><text x="71.5753%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="71.2824%" y="197" width="0.2844%" height="15" fill="rgb(252,98,35)" fg:x="26815" fg:w="107"/><text x="71.5753%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="71.2824%" y="213" width="0.4785%" height="15" fill="rgb(207,213,47)" fg:x="26815" fg:w="180"/><text x="71.5753%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="72.3191%" y="181" width="0.0904%" height="15" fill="rgb(248,133,16)" fg:x="27205" fg:w="34"/><text x="72.6121%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="72.3191%" y="197" width="0.2844%" height="15" fill="rgb(210,202,39)" fg:x="27205" fg:w="107"/><text x="72.6121%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="72.3191%" y="213" width="0.4785%" height="15" fill="rgb(248,154,14)" fg:x="27205" fg:w="180"/><text x="72.6121%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="73.3558%" y="181" width="0.1223%" height="15" fill="rgb(208,136,28)" fg:x="27595" fg:w="46"/><text x="73.6488%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="73.3558%" y="197" width="0.3163%" height="15" fill="rgb(243,225,34)" fg:x="27595" fg:w="119"/><text x="73.6488%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="73.3558%" y="213" width="0.5104%" height="15" fill="rgb(237,19,14)" fg:x="27595" fg:w="192"/><text x="73.6488%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="74.4245%" y="181" width="0.0904%" height="15" fill="rgb(244,115,34)" fg:x="27997" fg:w="34"/><text x="74.7174%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="74.4245%" y="197" width="0.2844%" height="15" fill="rgb(237,57,51)" fg:x="27997" fg:w="107"/><text x="74.7174%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="74.4245%" y="213" width="0.4785%" height="15" fill="rgb(205,154,4)" fg:x="27997" fg:w="180"/><text x="74.7174%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="75.4612%" y="181" width="0.0904%" height="15" fill="rgb(215,167,3)" fg:x="28387" fg:w="34"/><text x="75.7542%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="75.4612%" y="197" width="0.2844%" height="15" fill="rgb(207,213,4)" fg:x="28387" fg:w="107"/><text x="75.7542%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="75.4612%" y="213" width="0.4785%" height="15" fill="rgb(242,130,47)" fg:x="28387" fg:w="180"/><text x="75.7542%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="76.4980%" y="181" width="0.1223%" height="15" fill="rgb(253,186,35)" fg:x="28777" fg:w="46"/><text x="76.7909%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="76.4980%" y="197" width="0.3163%" height="15" fill="rgb(231,42,26)" fg:x="28777" fg:w="119"/><text x="76.7909%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="76.4980%" y="213" width="0.5104%" height="15" fill="rgb(250,36,13)" fg:x="28777" fg:w="192"/><text x="76.7909%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="77.5666%" y="181" width="0.1223%" height="15" fill="rgb(207,192,32)" fg:x="29179" fg:w="46"/><text x="77.8596%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="77.5666%" y="197" width="0.3163%" height="15" fill="rgb(253,3,18)" fg:x="29179" fg:w="119"/><text x="77.8596%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="77.5666%" y="213" width="0.5104%" height="15" fill="rgb(240,82,0)" fg:x="29179" fg:w="192"/><text x="77.8596%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="78.6352%" y="181" width="0.1223%" height="15" fill="rgb(217,86,1)" fg:x="29581" fg:w="46"/><text x="78.9282%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="78.6352%" y="197" width="0.3163%" height="15" fill="rgb(252,224,5)" fg:x="29581" fg:w="119"/><text x="78.9282%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="78.6352%" y="213" width="0.5104%" height="15" fill="rgb(208,5,34)" fg:x="29581" fg:w="192"/><text x="78.9282%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="79.7039%" y="181" width="0.0904%" height="15" fill="rgb(228,229,0)" fg:x="29983" fg:w="34"/><text x="79.9968%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="79.7039%" y="197" width="0.2844%" height="15" fill="rgb(210,225,18)" fg:x="29983" fg:w="107"/><text x="79.9968%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="79.7039%" y="213" width="0.4785%" height="15" fill="rgb(220,27,39)" fg:x="29983" fg:w="180"/><text x="79.9968%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="80.7406%" y="181" width="0.0904%" height="15" fill="rgb(239,192,6)" fg:x="30373" fg:w="34"/><text x="81.0336%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="80.7406%" y="197" width="0.2844%" height="15" fill="rgb(217,129,25)" fg:x="30373" fg:w="107"/><text x="81.0336%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="80.7406%" y="213" width="0.4785%" height="15" fill="rgb(244,93,45)" fg:x="30373" fg:w="180"/><text x="81.0336%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="81.7773%" y="181" width="0.0904%" height="15" fill="rgb(252,80,3)" fg:x="30763" fg:w="34"/><text x="82.0703%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="81.7773%" y="197" width="0.2844%" height="15" fill="rgb(213,59,30)" fg:x="30763" fg:w="107"/><text x="82.0703%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="81.7773%" y="213" width="0.4785%" height="15" fill="rgb(210,165,47)" fg:x="30763" fg:w="180"/><text x="82.0703%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="82.8141%" y="181" width="0.1223%" height="15" fill="rgb(222,15,18)" fg:x="31153" fg:w="46"/><text x="83.1070%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="82.8141%" y="197" width="0.3163%" height="15" fill="rgb(243,124,54)" fg:x="31153" fg:w="119"/><text x="83.1070%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="82.8141%" y="213" width="0.5104%" height="15" fill="rgb(224,166,12)" fg:x="31153" fg:w="192"/><text x="83.1070%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="83.8827%" y="181" width="0.0904%" height="15" fill="rgb(229,184,42)" fg:x="31555" fg:w="34"/><text x="84.1757%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="83.8827%" y="197" width="0.2844%" height="15" fill="rgb(229,131,40)" fg:x="31555" fg:w="107"/><text x="84.1757%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="83.8827%" y="213" width="0.4785%" height="15" fill="rgb(230,202,45)" fg:x="31555" fg:w="180"/><text x="84.1757%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="84.9195%" y="181" width="0.0904%" height="15" fill="rgb(249,85,43)" fg:x="31945" fg:w="34"/><text x="85.2124%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="84.9195%" y="197" width="0.2844%" height="15" fill="rgb(239,181,2)" fg:x="31945" fg:w="107"/><text x="85.2124%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="84.9195%" y="213" width="0.4785%" height="15" fill="rgb(226,184,53)" fg:x="31945" fg:w="180"/><text x="85.2124%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="85.9562%" y="181" width="0.0904%" height="15" fill="rgb(210,118,37)" fg:x="32335" fg:w="34"/><text x="86.2492%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="85.9562%" y="197" width="0.2844%" height="15" fill="rgb(246,118,30)" fg:x="32335" fg:w="107"/><text x="86.2492%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="85.9562%" y="213" width="0.4785%" height="15" fill="rgb(231,173,14)" fg:x="32335" fg:w="180"/><text x="86.2492%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="86.9929%" y="181" width="0.1223%" height="15" fill="rgb(235,128,32)" fg:x="32725" fg:w="46"/><text x="87.2859%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.32%)</title><rect x="86.9929%" y="197" width="0.3163%" height="15" fill="rgb(237,70,38)" fg:x="32725" fg:w="119"/><text x="87.2859%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="86.9929%" y="213" width="0.5104%" height="15" fill="rgb(228,26,47)" fg:x="32725" fg:w="192"/><text x="87.2859%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="88.0616%" y="181" width="0.0904%" height="15" fill="rgb(237,53,41)" fg:x="33127" fg:w="34"/><text x="88.3545%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="88.0616%" y="197" width="0.2844%" height="15" fill="rgb(236,184,40)" fg:x="33127" fg:w="107"/><text x="88.3545%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="88.0616%" y="213" width="0.4785%" height="15" fill="rgb(239,74,52)" fg:x="33127" fg:w="180"/><text x="88.3545%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="89.0983%" y="165" width="0.0904%" height="15" fill="rgb(210,20,20)" fg:x="33517" fg:w="34"/><text x="89.3913%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="89.0983%" y="181" width="0.2844%" height="15" fill="rgb(246,45,33)" fg:x="33517" fg:w="107"/><text x="89.3913%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.48%)</title><rect x="89.0983%" y="197" width="0.4785%" height="15" fill="rgb(222,17,27)" fg:x="33517" fg:w="180"/><text x="89.3913%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="89.0983%" y="213" width="0.6726%" height="15" fill="rgb(222,168,6)" fg:x="33517" fg:w="253"/><text x="89.3913%" y="223.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::remove (20,008 instructions, 53.19%)</title><rect x="37.1418%" y="229" width="53.1873%" height="15" fill="rgb(254,101,6)" fg:x="13972" fg:w="20008"/><text x="37.4348%" y="239.50">im_rc::hash::map::HashMap&lt;K,V,S&gt;::remove</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21,818 instructions, 58.00%)</title><rect x="37.1258%" y="245" width="57.9988%" height="15" fill="rgb(252,49,46)" fg:x="13966" fg:w="21818"/><text x="37.4188%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="95.1326%" y="133" width="0.0106%" height="15" fill="rgb(210,35,1)" fg:x="35787" fg:w="4"/><text x="95.4256%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="95.1513%" y="133" width="0.0106%" height="15" fill="rgb(218,179,38)" fg:x="35794" fg:w="4"/><text x="95.4442%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="95.1619%" y="133" width="0.0133%" height="15" fill="rgb(243,136,1)" fg:x="35798" fg:w="5"/><text x="95.4549%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.15%)</title><rect x="95.1832%" y="133" width="0.1489%" height="15" fill="rgb(253,11,50)" fg:x="35806" fg:w="56"/><text x="95.4761%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="95.3320%" y="133" width="0.0159%" height="15" fill="rgb(243,174,47)" fg:x="35862" fg:w="6"/><text x="95.6250%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.42%)</title><rect x="95.1247%" y="149" width="0.4174%" height="15" fill="rgb(223,128,23)" fg:x="35784" fg:w="157"/><text x="95.4176%" y="159.50"></text></g><g><title>__rdl_dealloc (159 instructions, 0.42%)</title><rect x="95.1247%" y="165" width="0.4227%" height="15" fill="rgb(245,23,25)" fg:x="35784" fg:w="159"/><text x="95.4176%" y="175.50"></text></g><g><title>__rust_dealloc (164 instructions, 0.44%)</title><rect x="95.1247%" y="181" width="0.4360%" height="15" fill="rgb(218,224,26)" fg:x="35784" fg:w="164"/><text x="95.4176%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.52%)</title><rect x="95.1247%" y="197" width="0.5210%" height="15" fill="rgb(231,25,49)" fg:x="35784" fg:w="196"/><text x="95.4176%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.36%)</title><rect x="95.6457%" y="181" width="0.3589%" height="15" fill="rgb(226,117,0)" fg:x="35980" fg:w="135"/><text x="95.9387%" y="191.50"></text></g><g><title>memset (139 instructions, 0.37%)</title><rect x="95.6457%" y="197" width="0.3695%" height="15" fill="rgb(247,190,22)" fg:x="35980" fg:w="139"/><text x="95.9387%" y="207.50"></text></g><g><title>candid::types::internal::env_clear (437 instructions, 1.16%)</title><rect x="95.1247%" y="213" width="1.1617%" height="15" fill="rgb(230,121,14)" fg:x="35784" fg:w="437"/><text x="95.4176%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (501 instructions, 1.33%)</title><rect x="95.1247%" y="229" width="1.3318%" height="15" fill="rgb(252,172,1)" fg:x="35784" fg:w="501"/><text x="95.4176%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.09%)</title><rect x="96.4645%" y="197" width="0.0877%" height="15" fill="rgb(208,89,16)" fg:x="36288" fg:w="33"/><text x="96.7574%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (88 instructions, 0.23%)</title><rect x="96.4645%" y="213" width="0.2339%" height="15" fill="rgb(249,161,32)" fg:x="36288" fg:w="88"/><text x="96.7574%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="96.6984%" y="101" width="0.0239%" height="15" fill="rgb(227,51,18)" fg:x="36376" fg:w="9"/><text x="96.9914%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="96.7223%" y="101" width="0.0239%" height="15" fill="rgb(227,139,9)" fg:x="36385" fg:w="9"/><text x="97.0153%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="96.7462%" y="101" width="0.0372%" height="15" fill="rgb(233,151,43)" fg:x="36394" fg:w="14"/><text x="97.0392%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.31%)</title><rect x="96.6984%" y="117" width="0.3110%" height="15" fill="rgb(216,131,47)" fg:x="36376" fg:w="117"/><text x="96.9914%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.34%)</title><rect x="96.6984%" y="133" width="0.3376%" height="15" fill="rgb(242,22,17)" fg:x="36376" fg:w="127"/><text x="96.9914%" y="143.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.35%)</title><rect x="96.6984%" y="149" width="0.3456%" height="15" fill="rgb(210,210,11)" fg:x="36376" fg:w="130"/><text x="96.9914%" y="159.50"></text></g><g><title>__rust_alloc (136 instructions, 0.36%)</title><rect x="96.6984%" y="165" width="0.3615%" height="15" fill="rgb(227,227,18)" fg:x="36376" fg:w="136"/><text x="96.9914%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.45%)</title><rect x="96.6984%" y="181" width="0.4466%" height="15" fill="rgb(241,21,7)" fg:x="36376" fg:w="168"/><text x="96.9914%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (235 instructions, 0.62%)</title><rect x="96.6984%" y="197" width="0.6247%" height="15" fill="rgb(240,133,5)" fg:x="36376" fg:w="235"/><text x="96.9914%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.03%)</title><rect x="97.3231%" y="197" width="0.0266%" height="15" fill="rgb(212,118,54)" fg:x="36611" fg:w="10"/><text x="97.6161%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.3497%" y="181" width="0.0292%" height="15" fill="rgb(223,134,9)" fg:x="36621" fg:w="11"/><text x="97.6426%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.3895%" y="181" width="0.0292%" height="15" fill="rgb(254,13,14)" fg:x="36636" fg:w="11"/><text x="97.6825%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="97.3497%" y="197" width="0.0797%" height="15" fill="rgb(237,83,13)" fg:x="36621" fg:w="30"/><text x="97.6426%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (477 instructions, 1.27%)</title><rect x="96.6984%" y="213" width="1.2680%" height="15" fill="rgb(234,208,0)" fg:x="36376" fg:w="477"/><text x="96.9914%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.02%)</title><rect x="97.9664%" y="213" width="0.0159%" height="15" fill="rgb(228,71,20)" fg:x="36853" fg:w="6"/><text x="98.2594%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.08%)</title><rect x="97.9823%" y="197" width="0.0824%" height="15" fill="rgb(243,44,20)" fg:x="36859" fg:w="31"/><text x="98.2753%" y="207.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (86 instructions, 0.23%)</title><rect x="97.9823%" y="213" width="0.2286%" height="15" fill="rgb(205,148,48)" fg:x="36859" fg:w="86"/><text x="98.2753%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.02%)</title><rect x="98.2110%" y="213" width="0.0159%" height="15" fill="rgb(216,138,50)" fg:x="36945" fg:w="6"/><text x="98.5039%" y="223.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (15 instructions, 0.04%)</title><rect x="98.2269%" y="213" width="0.0399%" height="15" fill="rgb(245,74,42)" fg:x="36951" fg:w="15"/><text x="98.5199%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (757 instructions, 2.01%)</title><rect x="96.4645%" y="229" width="2.0123%" height="15" fill="rgb(205,186,41)" fg:x="36288" fg:w="757"/><text x="96.7574%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="98.4768%" y="229" width="0.0133%" height="15" fill="rgb(249,2,26)" fg:x="37045" fg:w="5"/><text x="98.7698%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.4981%" y="181" width="0.0106%" height="15" fill="rgb(219,3,37)" fg:x="37053" fg:w="4"/><text x="98.7910%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.5167%" y="181" width="0.0106%" height="15" fill="rgb(224,223,47)" fg:x="37060" fg:w="4"/><text x="98.8096%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.5273%" y="181" width="0.0159%" height="15" fill="rgb(249,181,54)" fg:x="37064" fg:w="6"/><text x="98.8203%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="98.5433%" y="181" width="0.0425%" height="15" fill="rgb(220,97,10)" fg:x="37070" fg:w="16"/><text x="98.8362%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="98.4901%" y="197" width="0.2605%" height="15" fill="rgb(248,177,6)" fg:x="37050" fg:w="98"/><text x="98.7831%" y="207.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="98.4901%" y="213" width="0.2658%" height="15" fill="rgb(222,89,28)" fg:x="37050" fg:w="100"/><text x="98.7831%" y="223.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="98.4901%" y="229" width="0.2791%" height="15" fill="rgb(219,58,46)" fg:x="37050" fg:w="105"/><text x="98.7831%" y="239.50"></text></g><g><title>candid::utils::write_args (1,447 instructions, 3.85%)</title><rect x="95.1247%" y="245" width="3.8466%" height="15" fill="rgb(211,121,19)" fg:x="35784" fg:w="1447"/><text x="95.4176%" y="255.50">can..</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.9792%" y="197" width="0.0106%" height="15" fill="rgb(229,15,37)" fg:x="37234" fg:w="4"/><text x="99.2722%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.9978%" y="197" width="0.0106%" height="15" fill="rgb(235,43,46)" fg:x="37241" fg:w="4"/><text x="99.2908%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.0085%" y="197" width="0.0159%" height="15" fill="rgb(248,5,10)" fg:x="37245" fg:w="6"/><text x="99.3014%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="99.0244%" y="197" width="0.0425%" height="15" fill="rgb(213,37,35)" fg:x="37251" fg:w="16"/><text x="99.3174%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="98.9712%" y="213" width="0.2605%" height="15" fill="rgb(251,12,28)" fg:x="37231" fg:w="98"/><text x="99.2642%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.27%)</title><rect x="98.9712%" y="229" width="0.2658%" height="15" fill="rgb(253,124,2)" fg:x="37231" fg:w="100"/><text x="99.2642%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.2583%" y="197" width="0.0106%" height="15" fill="rgb(225,169,43)" fg:x="37339" fg:w="4"/><text x="99.5513%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="99.2769%" y="197" width="0.0106%" height="15" fill="rgb(254,157,42)" fg:x="37346" fg:w="4"/><text x="99.5699%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="99.2876%" y="197" width="0.0133%" height="15" fill="rgb(222,156,28)" fg:x="37350" fg:w="5"/><text x="99.5805%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.3088%" y="197" width="0.0159%" height="15" fill="rgb(227,180,28)" fg:x="37358" fg:w="6"/><text x="99.6018%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.3248%" y="197" width="0.0106%" height="15" fill="rgb(226,48,28)" fg:x="37364" fg:w="4"/><text x="99.6178%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="99.3354%" y="197" width="0.0266%" height="15" fill="rgb(248,206,17)" fg:x="37368" fg:w="10"/><text x="99.6284%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.51%)</title><rect x="99.2504%" y="213" width="0.5131%" height="15" fill="rgb(226,198,44)" fg:x="37336" fg:w="193"/><text x="99.5433%" y="223.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.52%)</title><rect x="99.2504%" y="229" width="0.5184%" height="15" fill="rgb(207,61,9)" fg:x="37336" fg:w="195"/><text x="99.5433%" y="239.50"></text></g><g><title>__rust_dealloc (305 instructions, 0.81%)</title><rect x="98.9712%" y="245" width="0.8108%" height="15" fill="rgb(251,217,34)" fg:x="37231" fg:w="305"/><text x="99.2642%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (37,607 instructions, 99.97%)</title><rect x="0.0213%" y="261" width="99.9708%" height="15" fill="rgb(228,147,45)" fg:x="8" fg:w="37607"/><text x="0.3142%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (37,618 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(240,201,35)" fg:x="0" fg:w="37618"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_remove (37,618 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(237,122,34)" fg:x="0" fg:w="37618"/><text x="0.2930%" y="287.50">canister_update batch_remove</text></g></svg></svg>