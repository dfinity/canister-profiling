<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="342" onload="init(evt)" viewBox="0 0 1024 342" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="342" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">imrc_hashmap_rs.batch_remove</text><text id="details" fill="rgb(0,0,0)" x="10" y="325.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="325.00"> </text><svg id="frames" x="10" width="1004" total_samples="37919"><g><title>ic_cdk::setup (8 instructions, 0.02%)</title><rect x="0.0000%" y="261" width="0.0211%" height="15" fill="rgb(246,150,24)" fg:x="0" fg:w="8"/><text x="0.2930%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0211%" y="181" width="0.0237%" height="15" fill="rgb(238,173,18)" fg:x="8" fg:w="9"/><text x="0.3141%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0448%" y="181" width="0.0237%" height="15" fill="rgb(220,134,11)" fg:x="17" fg:w="9"/><text x="0.3378%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.0686%" y="181" width="0.0237%" height="15" fill="rgb(232,148,38)" fg:x="26" fg:w="9"/><text x="0.3615%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.1002%" y="181" width="0.0264%" height="15" fill="rgb(219,21,22)" fg:x="38" fg:w="10"/><text x="0.3932%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="0.1266%" y="181" width="0.0132%" height="15" fill="rgb(212,35,24)" fg:x="48" fg:w="5"/><text x="0.4196%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="0.0211%" y="197" width="0.3481%" height="15" fill="rgb(242,222,40)" fg:x="8" fg:w="132"/><text x="0.3141%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.37%)</title><rect x="0.0211%" y="213" width="0.3745%" height="15" fill="rgb(235,80,23)" fg:x="8" fg:w="142"/><text x="0.3141%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.38%)</title><rect x="0.0211%" y="229" width="0.3824%" height="15" fill="rgb(234,119,1)" fg:x="8" fg:w="145"/><text x="0.3141%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4193%" y="181" width="0.0237%" height="15" fill="rgb(225,181,47)" fg:x="159" fg:w="9"/><text x="0.7123%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4430%" y="181" width="0.0237%" height="15" fill="rgb(240,89,11)" fg:x="168" fg:w="9"/><text x="0.7360%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.4668%" y="181" width="0.0237%" height="15" fill="rgb(211,141,0)" fg:x="177" fg:w="9"/><text x="0.7598%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="0.4984%" y="181" width="0.0264%" height="15" fill="rgb(223,52,45)" fg:x="189" fg:w="10"/><text x="0.7914%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="0.5248%" y="181" width="0.0132%" height="15" fill="rgb(240,159,29)" fg:x="199" fg:w="5"/><text x="0.8178%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="0.4193%" y="197" width="0.3481%" height="15" fill="rgb(238,46,35)" fg:x="159" fg:w="132"/><text x="0.7123%" y="207.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.37%)</title><rect x="0.4193%" y="213" width="0.3745%" height="15" fill="rgb(237,103,27)" fg:x="159" fg:w="142"/><text x="0.7123%" y="223.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.38%)</title><rect x="0.4193%" y="229" width="0.3824%" height="15" fill="rgb(219,196,30)" fg:x="159" fg:w="145"/><text x="0.7123%" y="239.50"></text></g><g><title>__rust_alloc (302 instructions, 0.80%)</title><rect x="0.0211%" y="245" width="0.7964%" height="15" fill="rgb(211,40,40)" fg:x="8" fg:w="302"/><text x="0.3141%" y="255.50"></text></g><g><title>ic_cdk::futures::waker::waker (6 instructions, 0.02%)</title><rect x="0.8175%" y="245" width="0.0158%" height="15" fill="rgb(212,143,41)" fg:x="310" fg:w="6"/><text x="1.1105%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8334%" y="149" width="0.0237%" height="15" fill="rgb(243,110,3)" fg:x="316" fg:w="9"/><text x="1.1263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8571%" y="149" width="0.0237%" height="15" fill="rgb(227,98,52)" fg:x="325" fg:w="9"/><text x="1.1501%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="0.8808%" y="149" width="0.0237%" height="15" fill="rgb(226,31,25)" fg:x="334" fg:w="9"/><text x="1.1738%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="0.9046%" y="149" width="0.0369%" height="15" fill="rgb(209,88,17)" fg:x="343" fg:w="14"/><text x="1.1975%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.33%)</title><rect x="0.8334%" y="165" width="0.3270%" height="15" fill="rgb(251,195,47)" fg:x="316" fg:w="124"/><text x="1.1263%" y="175.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.35%)</title><rect x="0.8334%" y="181" width="0.3534%" height="15" fill="rgb(217,207,22)" fg:x="316" fg:w="134"/><text x="1.1263%" y="191.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.36%)</title><rect x="0.8334%" y="197" width="0.3613%" height="15" fill="rgb(248,14,3)" fg:x="316" fg:w="137"/><text x="1.1263%" y="207.50"></text></g><g><title>__rust_alloc (143 instructions, 0.38%)</title><rect x="0.8334%" y="213" width="0.3771%" height="15" fill="rgb(229,149,33)" fg:x="316" fg:w="143"/><text x="1.1263%" y="223.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (203 instructions, 0.54%)</title><rect x="0.8334%" y="229" width="0.5354%" height="15" fill="rgb(220,83,3)" fg:x="316" fg:w="203"/><text x="1.1263%" y="239.50"></text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.19%)</title><rect x="1.3713%" y="181" width="0.1925%" height="15" fill="rgb(226,177,31)" fg:x="520" fg:w="73"/><text x="1.6643%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="1.5639%" y="117" width="0.0158%" height="15" fill="rgb(213,181,15)" fg:x="593" fg:w="6"/><text x="1.8568%" y="127.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="1.5639%" y="133" width="0.0264%" height="15" fill="rgb(215,0,41)" fg:x="593" fg:w="10"/><text x="1.8568%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.14%)</title><rect x="1.5639%" y="149" width="1.1419%" height="15" fill="rgb(229,127,4)" fg:x="593" fg:w="433"/><text x="1.8568%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.23%)</title><rect x="2.7058%" y="149" width="0.2294%" height="15" fill="rgb(237,120,47)" fg:x="1026" fg:w="87"/><text x="2.9987%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="2.9352%" y="149" width="0.1371%" height="15" fill="rgb(212,134,11)" fg:x="1113" fg:w="52"/><text x="3.2282%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.0723%" y="149" width="0.1371%" height="15" fill="rgb(225,42,40)" fg:x="1165" fg:w="52"/><text x="3.3653%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.2095%" y="149" width="0.1371%" height="15" fill="rgb(254,126,15)" fg:x="1217" fg:w="52"/><text x="3.5024%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (52 instructions, 0.14%)</title><rect x="3.3466%" y="149" width="0.1371%" height="15" fill="rgb(246,109,51)" fg:x="1269" fg:w="52"/><text x="3.6396%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for [B (880 instructions, 2.32%)</title><rect x="1.5639%" y="181" width="2.3207%" height="15" fill="rgb(217,179,37)" fg:x="593" fg:w="880"/><text x="1.8568%" y="191.50">b..</text></g><g><title> 4]&gt;::read_options (880 instructions, 2.32%)</title><rect x="1.5639%" y="165" width="2.3207%" height="15" fill="rgb(205,141,36)" fg:x="593" fg:w="880"/><text x="1.8568%" y="175.50"> ..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.19%)</title><rect x="3.8846%" y="181" width="0.1925%" height="15" fill="rgb(224,121,38)" fg:x="1473" fg:w="73"/><text x="4.1776%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.20%)</title><rect x="4.0771%" y="165" width="0.2031%" height="15" fill="rgb(208,140,16)" fg:x="1546" fg:w="77"/><text x="4.3701%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.27%)</title><rect x="4.0771%" y="181" width="0.2743%" height="15" fill="rgb(244,159,51)" fg:x="1546" fg:w="104"/><text x="4.3701%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="4.3514%" y="133" width="0.0158%" height="15" fill="rgb(244,36,7)" fg:x="1650" fg:w="6"/><text x="4.6443%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="4.3514%" y="149" width="0.0264%" height="15" fill="rgb(254,104,43)" fg:x="1650" fg:w="10"/><text x="4.6443%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.14%)</title><rect x="4.3514%" y="165" width="1.1419%" height="15" fill="rgb(241,180,41)" fg:x="1650" fg:w="433"/><text x="4.6443%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.05%)</title><rect x="5.4933%" y="149" width="0.0475%" height="15" fill="rgb(239,10,51)" fg:x="2083" fg:w="18"/><text x="5.7863%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.06%)</title><rect x="5.4933%" y="165" width="0.0580%" height="15" fill="rgb(227,26,12)" fg:x="2083" fg:w="22"/><text x="5.7863%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="5.5513%" y="69" width="0.0237%" height="15" fill="rgb(220,122,26)" fg:x="2105" fg:w="9"/><text x="5.8443%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="5.5750%" y="69" width="0.0237%" height="15" fill="rgb(227,124,7)" fg:x="2114" fg:w="9"/><text x="5.8680%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::left_bits (8 instructions, 0.02%)</title><rect x="5.5988%" y="69" width="0.0211%" height="15" fill="rgb(243,181,40)" fg:x="2123" fg:w="8"/><text x="5.8917%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::least_bit (5 instructions, 0.01%)</title><rect x="5.6199%" y="69" width="0.0132%" height="15" fill="rgb(214,154,19)" fg:x="2131" fg:w="5"/><text x="5.9128%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="5.6331%" y="69" width="0.0132%" height="15" fill="rgb(248,70,14)" fg:x="2136" fg:w="5"/><text x="5.9260%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="5.6542%" y="69" width="0.0264%" height="15" fill="rgb(236,18,54)" fg:x="2144" fg:w="10"/><text x="5.9471%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (168 instructions, 0.44%)</title><rect x="5.5513%" y="85" width="0.4430%" height="15" fill="rgb(212,32,46)" fg:x="2105" fg:w="168"/><text x="5.8443%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (178 instructions, 0.47%)</title><rect x="5.5513%" y="101" width="0.4694%" height="15" fill="rgb(246,56,5)" fg:x="2105" fg:w="178"/><text x="5.8443%" y="111.50"></text></g><g><title>__rdl_alloc (181 instructions, 0.48%)</title><rect x="5.5513%" y="117" width="0.4773%" height="15" fill="rgb(208,20,17)" fg:x="2105" fg:w="181"/><text x="5.8443%" y="127.50"></text></g><g><title>__rust_alloc (187 instructions, 0.49%)</title><rect x="5.5513%" y="133" width="0.4932%" height="15" fill="rgb(220,75,40)" fg:x="2105" fg:w="187"/><text x="5.8443%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.16%)</title><rect x="6.0445%" y="85" width="0.1582%" height="15" fill="rgb(242,179,17)" fg:x="2292" fg:w="60"/><text x="6.3374%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.17%)</title><rect x="6.0445%" y="101" width="0.1688%" height="15" fill="rgb(232,206,47)" fg:x="2292" fg:w="64"/><text x="6.3374%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.23%)</title><rect x="6.0445%" y="117" width="0.2347%" height="15" fill="rgb(233,54,38)" fg:x="2292" fg:w="89"/><text x="6.3374%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="6.2792%" y="69" width="0.0264%" height="15" fill="rgb(206,119,42)" fg:x="2381" fg:w="10"/><text x="6.5721%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.08%)</title><rect x="6.3055%" y="37" width="0.0791%" height="15" fill="rgb(253,210,40)" fg:x="2391" fg:w="30"/><text x="6.5985%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.09%)</title><rect x="6.3055%" y="53" width="0.0897%" height="15" fill="rgb(232,27,11)" fg:x="2391" fg:w="34"/><text x="6.5985%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.16%)</title><rect x="6.3055%" y="69" width="0.1556%" height="15" fill="rgb(223,12,50)" fg:x="2391" fg:w="59"/><text x="6.5985%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.31%)</title><rect x="6.2792%" y="85" width="0.3138%" height="15" fill="rgb(225,148,9)" fg:x="2381" fg:w="119"/><text x="6.5721%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.46%)</title><rect x="6.2792%" y="101" width="0.4589%" height="15" fill="rgb(231,49,23)" fg:x="2381" fg:w="174"/><text x="6.5721%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.47%)</title><rect x="6.2792%" y="117" width="0.4721%" height="15" fill="rgb(236,157,53)" fg:x="2381" fg:w="179"/><text x="6.5721%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.00%)</title><rect x="6.0445%" y="133" width="0.9995%" height="15" fill="rgb(211,229,1)" fg:x="2292" fg:w="379"/><text x="6.3374%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (709 instructions, 1.87%)</title><rect x="5.5513%" y="149" width="1.8698%" height="15" fill="rgb(242,156,7)" fg:x="2105" fg:w="709"/><text x="5.8443%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.23%)</title><rect x="7.4211%" y="149" width="0.2294%" height="15" fill="rgb(218,62,42)" fg:x="2814" fg:w="87"/><text x="7.7141%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="7.6584%" y="101" width="0.0105%" height="15" fill="rgb(233,105,54)" fg:x="2904" fg:w="4"/><text x="7.9514%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="7.6769%" y="101" width="0.0105%" height="15" fill="rgb(217,229,29)" fg:x="2911" fg:w="4"/><text x="7.9699%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="7.6874%" y="101" width="0.0158%" height="15" fill="rgb(223,223,16)" fg:x="2915" fg:w="6"/><text x="7.9804%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="7.7033%" y="101" width="0.0264%" height="15" fill="rgb(244,56,46)" fg:x="2921" fg:w="10"/><text x="7.9962%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.18%)</title><rect x="7.6505%" y="117" width="0.1846%" height="15" fill="rgb(240,29,4)" fg:x="2901" fg:w="70"/><text x="7.9435%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.19%)</title><rect x="7.6505%" y="133" width="0.1899%" height="15" fill="rgb(223,59,11)" fg:x="2901" fg:w="72"/><text x="7.9435%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.20%)</title><rect x="7.6505%" y="149" width="0.2031%" height="15" fill="rgb(250,212,13)" fg:x="2901" fg:w="77"/><text x="7.9435%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (944 instructions, 2.49%)</title><rect x="5.5513%" y="165" width="2.4895%" height="15" fill="rgb(233,120,21)" fg:x="2105" fg:w="944"/><text x="5.8443%" y="175.50">b..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (25 instructions, 0.07%)</title><rect x="8.0408%" y="165" width="0.0659%" height="15" fill="rgb(222,226,32)" fg:x="3049" fg:w="25"/><text x="8.3338%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,572 instructions, 4.15%)</title><rect x="4.3514%" y="181" width="4.1457%" height="15" fill="rgb(245,1,4)" fg:x="1650" fg:w="1572"/><text x="4.6443%" y="191.50">bin..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.18%)</title><rect x="8.4971%" y="181" width="0.1793%" height="15" fill="rgb(254,191,51)" fg:x="3222" fg:w="68"/><text x="8.7900%" y="191.50"></text></g><g><title>leb128::read::unsigned (77 instructions, 0.20%)</title><rect x="8.6764%" y="165" width="0.2031%" height="15" fill="rgb(231,181,12)" fg:x="3290" fg:w="77"/><text x="8.9694%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (104 instructions, 0.27%)</title><rect x="8.6764%" y="181" width="0.2743%" height="15" fill="rgb(218,0,31)" fg:x="3290" fg:w="104"/><text x="8.9694%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcmp (6 instructions, 0.02%)</title><rect x="8.9507%" y="133" width="0.0158%" height="15" fill="rgb(250,8,26)" fg:x="3394" fg:w="6"/><text x="9.2436%" y="143.50"></text></g><g><title>memcmp (10 instructions, 0.03%)</title><rect x="8.9507%" y="149" width="0.0264%" height="15" fill="rgb(242,102,15)" fg:x="3394" fg:w="10"/><text x="9.2436%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (433 instructions, 1.14%)</title><rect x="8.9507%" y="165" width="1.1419%" height="15" fill="rgb(224,179,24)" fg:x="3394" fg:w="433"/><text x="9.2436%" y="175.50"></text></g><g><title>compiler_builtins::mem::memcmp (18 instructions, 0.05%)</title><rect x="10.0926%" y="149" width="0.0475%" height="15" fill="rgb(205,172,35)" fg:x="3827" fg:w="18"/><text x="10.3855%" y="159.50"></text></g><g><title>memcmp (22 instructions, 0.06%)</title><rect x="10.0926%" y="165" width="0.0580%" height="15" fill="rgb(218,212,11)" fg:x="3827" fg:w="22"/><text x="10.3855%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.1506%" y="69" width="0.0237%" height="15" fill="rgb(240,112,37)" fg:x="3849" fg:w="9"/><text x="10.4436%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.1743%" y="69" width="0.0237%" height="15" fill="rgb(208,216,10)" fg:x="3858" fg:w="9"/><text x="10.4673%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="10.1981%" y="69" width="0.0237%" height="15" fill="rgb(221,175,29)" fg:x="3867" fg:w="9"/><text x="10.4910%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="10.2297%" y="69" width="0.0264%" height="15" fill="rgb(206,105,24)" fg:x="3879" fg:w="10"/><text x="10.5227%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="10.2561%" y="69" width="0.0132%" height="15" fill="rgb(244,185,9)" fg:x="3889" fg:w="5"/><text x="10.5490%" y="79.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (132 instructions, 0.35%)</title><rect x="10.1506%" y="85" width="0.3481%" height="15" fill="rgb(237,197,50)" fg:x="3849" fg:w="132"/><text x="10.4436%" y="95.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (142 instructions, 0.37%)</title><rect x="10.1506%" y="101" width="0.3745%" height="15" fill="rgb(241,148,41)" fg:x="3849" fg:w="142"/><text x="10.4436%" y="111.50"></text></g><g><title>__rdl_alloc (145 instructions, 0.38%)</title><rect x="10.1506%" y="117" width="0.3824%" height="15" fill="rgb(215,22,3)" fg:x="3849" fg:w="145"/><text x="10.4436%" y="127.50"></text></g><g><title>__rust_alloc (151 instructions, 0.40%)</title><rect x="10.1506%" y="133" width="0.3982%" height="15" fill="rgb(208,39,9)" fg:x="3849" fg:w="151"/><text x="10.4436%" y="143.50"></text></g><g><title>compiler_builtins::mem::memcpy (60 instructions, 0.16%)</title><rect x="10.5488%" y="85" width="0.1582%" height="15" fill="rgb(253,88,45)" fg:x="4000" fg:w="60"/><text x="10.8418%" y="95.50"></text></g><g><title>memcpy (64 instructions, 0.17%)</title><rect x="10.5488%" y="101" width="0.1688%" height="15" fill="rgb(252,72,6)" fg:x="4000" fg:w="64"/><text x="10.8418%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (89 instructions, 0.23%)</title><rect x="10.5488%" y="117" width="0.2347%" height="15" fill="rgb(248,16,27)" fg:x="4000" fg:w="89"/><text x="10.8418%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (10 instructions, 0.03%)</title><rect x="10.7835%" y="69" width="0.0264%" height="15" fill="rgb(217,66,44)" fg:x="4089" fg:w="10"/><text x="11.0765%" y="79.50"></text></g><g><title>compiler_builtins::mem::memcpy (30 instructions, 0.08%)</title><rect x="10.8099%" y="37" width="0.0791%" height="15" fill="rgb(239,9,38)" fg:x="4099" fg:w="30"/><text x="11.1029%" y="47.50"></text></g><g><title>memcpy (34 instructions, 0.09%)</title><rect x="10.8099%" y="53" width="0.0897%" height="15" fill="rgb(235,92,30)" fg:x="4099" fg:w="34"/><text x="11.1029%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (59 instructions, 0.16%)</title><rect x="10.8099%" y="69" width="0.1556%" height="15" fill="rgb(212,134,0)" fg:x="4099" fg:w="59"/><text x="11.1029%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (119 instructions, 0.31%)</title><rect x="10.7835%" y="85" width="0.3138%" height="15" fill="rgb(233,71,24)" fg:x="4089" fg:w="119"/><text x="11.0765%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (174 instructions, 0.46%)</title><rect x="10.7835%" y="101" width="0.4589%" height="15" fill="rgb(250,54,6)" fg:x="4089" fg:w="174"/><text x="11.0765%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (179 instructions, 0.47%)</title><rect x="10.7835%" y="117" width="0.4721%" height="15" fill="rgb(211,147,33)" fg:x="4089" fg:w="179"/><text x="11.0765%" y="127.50"></text></g><g><title>core::fmt::write (379 instructions, 1.00%)</title><rect x="10.5488%" y="133" width="0.9995%" height="15" fill="rgb(221,150,2)" fg:x="4000" fg:w="379"/><text x="10.8418%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (673 instructions, 1.77%)</title><rect x="10.1506%" y="149" width="1.7748%" height="15" fill="rgb(249,220,9)" fg:x="3849" fg:w="673"/><text x="10.4436%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (87 instructions, 0.23%)</title><rect x="11.9254%" y="149" width="0.2294%" height="15" fill="rgb(221,114,30)" fg:x="4522" fg:w="87"/><text x="12.2184%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="12.1628%" y="101" width="0.0105%" height="15" fill="rgb(245,26,9)" fg:x="4612" fg:w="4"/><text x="12.4557%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="12.1812%" y="101" width="0.0105%" height="15" fill="rgb(212,185,2)" fg:x="4619" fg:w="4"/><text x="12.4742%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="12.1918%" y="101" width="0.0158%" height="15" fill="rgb(209,121,34)" fg:x="4623" fg:w="6"/><text x="12.4847%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="12.2076%" y="101" width="0.0264%" height="15" fill="rgb(215,199,50)" fg:x="4629" fg:w="10"/><text x="12.5006%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (70 instructions, 0.18%)</title><rect x="12.1549%" y="117" width="0.1846%" height="15" fill="rgb(233,151,1)" fg:x="4609" fg:w="70"/><text x="12.4478%" y="127.50"></text></g><g><title>__rdl_dealloc (72 instructions, 0.19%)</title><rect x="12.1549%" y="133" width="0.1899%" height="15" fill="rgb(220,41,54)" fg:x="4609" fg:w="72"/><text x="12.4478%" y="143.50"></text></g><g><title>__rust_dealloc (77 instructions, 0.20%)</title><rect x="12.1549%" y="149" width="0.2031%" height="15" fill="rgb(206,83,34)" fg:x="4609" fg:w="77"/><text x="12.4478%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (908 instructions, 2.39%)</title><rect x="10.1506%" y="165" width="2.3946%" height="15" fill="rgb(236,162,13)" fg:x="3849" fg:w="908"/><text x="10.4436%" y="175.50">b..</text></g><g><title>binread::binary_template::write_start_struct (73 instructions, 0.19%)</title><rect x="12.5452%" y="133" width="0.1925%" height="15" fill="rgb(244,91,51)" fg:x="4757" fg:w="73"/><text x="12.8381%" y="143.50"></text></g><g><title>leb128::read::signed (110 instructions, 0.29%)</title><rect x="12.7377%" y="117" width="0.2901%" height="15" fill="rgb(219,219,40)" fg:x="4830" fg:w="110"/><text x="13.0306%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (137 instructions, 0.36%)</title><rect x="12.7377%" y="133" width="0.3613%" height="15" fill="rgb(205,193,29)" fg:x="4830" fg:w="137"/><text x="13.0306%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.18%)</title><rect x="13.0990%" y="133" width="0.1793%" height="15" fill="rgb(246,82,50)" fg:x="4967" fg:w="68"/><text x="13.3919%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (337 instructions, 0.89%)</title><rect x="12.5452%" y="149" width="0.8887%" height="15" fill="rgb(238,192,7)" fg:x="4757" fg:w="337"/><text x="12.8381%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="13.4339%" y="85" width="0.0237%" height="15" fill="rgb(225,19,30)" fg:x="5094" fg:w="9"/><text x="13.7269%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="13.4576%" y="85" width="0.0237%" height="15" fill="rgb(216,170,39)" fg:x="5103" fg:w="9"/><text x="13.7506%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="13.4893%" y="85" width="0.0132%" height="15" fill="rgb(242,0,20)" fg:x="5115" fg:w="5"/><text x="13.7822%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="13.4339%" y="101" width="0.3165%" height="15" fill="rgb(233,102,43)" fg:x="5094" fg:w="120"/><text x="13.7269%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="13.4339%" y="117" width="0.3428%" height="15" fill="rgb(222,10,18)" fg:x="5094" fg:w="130"/><text x="13.7269%" y="127.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="13.4339%" y="133" width="0.3507%" height="15" fill="rgb(247,122,45)" fg:x="5094" fg:w="133"/><text x="13.7269%" y="143.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="13.4339%" y="149" width="0.3666%" height="15" fill="rgb(218,53,17)" fg:x="5094" fg:w="139"/><text x="13.7269%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (555 instructions, 1.46%)</title><rect x="12.5452%" y="165" width="1.4636%" height="15" fill="rgb(241,127,8)" fg:x="4757" fg:w="555"/><text x="12.8381%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,066 instructions, 5.45%)</title><rect x="8.9507%" y="181" width="5.4485%" height="15" fill="rgb(229,224,8)" fg:x="3394" fg:w="2066"/><text x="9.2436%" y="191.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (68 instructions, 0.18%)</title><rect x="14.3991%" y="181" width="0.1793%" height="15" fill="rgb(236,175,14)" fg:x="5460" fg:w="68"/><text x="14.6921%" y="191.50"></text></g><g><title>binread::BinRead::read (5,226 instructions, 13.78%)</title><rect x="1.3687%" y="197" width="13.7820%" height="15" fill="rgb(214,32,47)" fg:x="519" fg:w="5226"/><text x="1.6617%" y="207.50">binread::BinRead:..</text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="15.1507%" y="181" width="0.0369%" height="15" fill="rgb(234,90,29)" fg:x="5745" fg:w="14"/><text x="15.4437%" y="191.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 instructions, 0.04%)</title><rect x="15.1876%" y="165" width="0.0369%" height="15" fill="rgb(245,153,53)" fg:x="5759" fg:w="14"/><text x="15.4806%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 instructions, 0.17%)</title><rect x="15.2246%" y="165" width="0.1714%" height="15" fill="rgb(223,127,13)" fg:x="5773" fg:w="65"/><text x="15.5175%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.05%)</title><rect x="15.3960%" y="165" width="0.0501%" height="15" fill="rgb(252,124,19)" fg:x="5838" fg:w="19"/><text x="15.6889%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::replace_empty (250 instructions, 0.66%)</title><rect x="15.1876%" y="181" width="0.6593%" height="15" fill="rgb(238,10,7)" fg:x="5759" fg:w="250"/><text x="15.4806%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="15.8469%" y="101" width="0.0237%" height="15" fill="rgb(230,3,26)" fg:x="6009" fg:w="9"/><text x="16.1399%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="15.8707%" y="101" width="0.0237%" height="15" fill="rgb(242,128,13)" fg:x="6018" fg:w="9"/><text x="16.1636%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="15.9023%" y="101" width="0.0132%" height="15" fill="rgb(213,104,43)" fg:x="6030" fg:w="5"/><text x="16.1953%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="15.8469%" y="117" width="0.3165%" height="15" fill="rgb(218,61,20)" fg:x="6009" fg:w="120"/><text x="16.1399%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="15.8469%" y="133" width="0.3428%" height="15" fill="rgb(247,23,34)" fg:x="6009" fg:w="130"/><text x="16.1399%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="15.8469%" y="149" width="0.3507%" height="15" fill="rgb(254,58,41)" fg:x="6009" fg:w="133"/><text x="16.1399%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="15.8469%" y="165" width="0.3666%" height="15" fill="rgb(254,28,0)" fg:x="6009" fg:w="139"/><text x="16.1399%" y="175.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (220 instructions, 0.58%)</title><rect x="15.8469%" y="181" width="0.5802%" height="15" fill="rgb(206,129,4)" fg:x="6009" fg:w="220"/><text x="16.1399%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.4271%" y="85" width="0.0237%" height="15" fill="rgb(209,216,4)" fg:x="6229" fg:w="9"/><text x="16.7201%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.4509%" y="85" width="0.0237%" height="15" fill="rgb(207,210,1)" fg:x="6238" fg:w="9"/><text x="16.7438%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="16.4746%" y="85" width="0.0237%" height="15" fill="rgb(206,88,29)" fg:x="6247" fg:w="9"/><text x="16.7676%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="16.4983%" y="85" width="0.0369%" height="15" fill="rgb(208,102,19)" fg:x="6256" fg:w="14"/><text x="16.7913%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (124 instructions, 0.33%)</title><rect x="16.4271%" y="101" width="0.3270%" height="15" fill="rgb(231,153,51)" fg:x="6229" fg:w="124"/><text x="16.7201%" y="111.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (134 instructions, 0.35%)</title><rect x="16.4271%" y="117" width="0.3534%" height="15" fill="rgb(218,38,30)" fg:x="6229" fg:w="134"/><text x="16.7201%" y="127.50"></text></g><g><title>__rdl_alloc (137 instructions, 0.36%)</title><rect x="16.4271%" y="133" width="0.3613%" height="15" fill="rgb(215,59,38)" fg:x="6229" fg:w="137"/><text x="16.7201%" y="143.50"></text></g><g><title>__rust_alloc (143 instructions, 0.38%)</title><rect x="16.4271%" y="149" width="0.3771%" height="15" fill="rgb(244,138,29)" fg:x="6229" fg:w="143"/><text x="16.7201%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (175 instructions, 0.46%)</title><rect x="16.4271%" y="165" width="0.4615%" height="15" fill="rgb(230,34,27)" fg:x="6229" fg:w="175"/><text x="16.7201%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (245 instructions, 0.65%)</title><rect x="16.4271%" y="181" width="0.6461%" height="15" fill="rgb(251,225,25)" fg:x="6229" fg:w="245"/><text x="16.7201%" y="191.50"></text></g><g><title>candid::binary_parser::Header::to_types (956 instructions, 2.52%)</title><rect x="15.1507%" y="197" width="2.5212%" height="15" fill="rgb(212,163,34)" fg:x="5745" fg:w="956"/><text x="15.4437%" y="207.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="17.6719%" y="117" width="0.0237%" height="15" fill="rgb(242,153,34)" fg:x="6701" fg:w="9"/><text x="17.9648%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="17.6956%" y="117" width="0.0237%" height="15" fill="rgb(237,27,51)" fg:x="6710" fg:w="9"/><text x="17.9886%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="17.7273%" y="117" width="0.0132%" height="15" fill="rgb(229,185,6)" fg:x="6722" fg:w="5"/><text x="18.0202%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="17.6719%" y="133" width="0.3165%" height="15" fill="rgb(252,40,15)" fg:x="6701" fg:w="120"/><text x="17.9648%" y="143.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="17.6719%" y="149" width="0.3428%" height="15" fill="rgb(221,136,54)" fg:x="6701" fg:w="130"/><text x="17.9648%" y="159.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="17.6719%" y="165" width="0.3507%" height="15" fill="rgb(250,165,44)" fg:x="6701" fg:w="133"/><text x="17.9648%" y="175.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="17.6719%" y="181" width="0.3666%" height="15" fill="rgb(236,32,14)" fg:x="6701" fg:w="139"/><text x="17.9648%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="18.0464%" y="133" width="0.0105%" height="15" fill="rgb(212,188,30)" fg:x="6843" fg:w="4"/><text x="18.3393%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="18.0648%" y="133" width="0.0105%" height="15" fill="rgb(249,81,26)" fg:x="6850" fg:w="4"/><text x="18.3578%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="18.0754%" y="133" width="0.0158%" height="15" fill="rgb(222,85,36)" fg:x="6854" fg:w="6"/><text x="18.3683%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="18.0912%" y="133" width="0.0422%" height="15" fill="rgb(251,43,35)" fg:x="6860" fg:w="16"/><text x="18.3842%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="18.0385%" y="149" width="0.2584%" height="15" fill="rgb(220,5,48)" fg:x="6840" fg:w="98"/><text x="18.3314%" y="159.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="18.0385%" y="165" width="0.2637%" height="15" fill="rgb(225,198,14)" fg:x="6840" fg:w="100"/><text x="18.3314%" y="175.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="18.0385%" y="181" width="0.2769%" height="15" fill="rgb(209,151,22)" fg:x="6840" fg:w="105"/><text x="18.3314%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (358 instructions, 0.94%)</title><rect x="17.6719%" y="197" width="0.9441%" height="15" fill="rgb(239,48,7)" fg:x="6701" fg:w="358"/><text x="17.9648%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.6160%" y="133" width="0.0237%" height="15" fill="rgb(243,17,3)" fg:x="7059" fg:w="9"/><text x="18.9090%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.6397%" y="133" width="0.0237%" height="15" fill="rgb(225,169,4)" fg:x="7068" fg:w="9"/><text x="18.9327%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="18.6714%" y="133" width="0.0132%" height="15" fill="rgb(230,113,16)" fg:x="7080" fg:w="5"/><text x="18.9643%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="18.6160%" y="149" width="0.3165%" height="15" fill="rgb(237,202,51)" fg:x="7059" fg:w="120"/><text x="18.9090%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="18.6160%" y="165" width="0.3428%" height="15" fill="rgb(248,96,9)" fg:x="7059" fg:w="130"/><text x="18.9090%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="18.6160%" y="181" width="0.3507%" height="15" fill="rgb(229,1,0)" fg:x="7059" fg:w="133"/><text x="18.9090%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="18.9826%" y="133" width="0.0237%" height="15" fill="rgb(232,97,23)" fg:x="7198" fg:w="9"/><text x="19.2755%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="19.0063%" y="133" width="0.0237%" height="15" fill="rgb(220,12,12)" fg:x="7207" fg:w="9"/><text x="19.2993%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="19.0379%" y="133" width="0.0132%" height="15" fill="rgb(235,38,20)" fg:x="7219" fg:w="5"/><text x="19.3309%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="18.9826%" y="149" width="0.3165%" height="15" fill="rgb(221,3,30)" fg:x="7198" fg:w="120"/><text x="19.2755%" y="159.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="18.9826%" y="165" width="0.3428%" height="15" fill="rgb(232,205,19)" fg:x="7198" fg:w="130"/><text x="19.2755%" y="175.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="18.9826%" y="181" width="0.3507%" height="15" fill="rgb(224,126,31)" fg:x="7198" fg:w="133"/><text x="19.2755%" y="191.50"></text></g><g><title>__rust_alloc (278 instructions, 0.73%)</title><rect x="18.6160%" y="197" width="0.7331%" height="15" fill="rgb(236,58,0)" fg:x="7059" fg:w="278"/><text x="18.9090%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="19.3571%" y="149" width="0.0105%" height="15" fill="rgb(208,173,27)" fg:x="7340" fg:w="4"/><text x="19.6500%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="19.3755%" y="149" width="0.0105%" height="15" fill="rgb(222,65,36)" fg:x="7347" fg:w="4"/><text x="19.6685%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="19.3861%" y="149" width="0.0158%" height="15" fill="rgb(242,45,27)" fg:x="7351" fg:w="6"/><text x="19.6790%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="19.4019%" y="149" width="0.0422%" height="15" fill="rgb(232,127,37)" fg:x="7357" fg:w="16"/><text x="19.6949%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="19.3491%" y="165" width="0.2584%" height="15" fill="rgb(222,67,23)" fg:x="7337" fg:w="98"/><text x="19.6421%" y="175.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="19.3491%" y="181" width="0.2637%" height="15" fill="rgb(247,210,21)" fg:x="7337" fg:w="100"/><text x="19.6421%" y="191.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="19.3491%" y="197" width="0.2769%" height="15" fill="rgb(213,123,10)" fg:x="7337" fg:w="105"/><text x="19.6421%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.09%)</title><rect x="19.6260%" y="165" width="1.0892%" height="15" fill="rgb(251,67,32)" fg:x="7442" fg:w="413"/><text x="19.9190%" y="175.50"></text></g><g><title>memcpy (417 instructions, 1.10%)</title><rect x="19.6260%" y="181" width="1.0997%" height="15" fill="rgb(214,72,31)" fg:x="7442" fg:w="417"/><text x="19.9190%" y="191.50"></text></g><g><title>anyhow::context::&lt;impl anyhow::Context&lt;T,E&gt; for core::result::Result&lt;T,E&gt;&gt;::with_context (437 instructions, 1.15%)</title><rect x="19.6260%" y="197" width="1.1525%" height="15" fill="rgb(239,90,40)" fg:x="7442" fg:w="437"/><text x="19.9190%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (368 instructions, 0.97%)</title><rect x="20.7785%" y="181" width="0.9705%" height="15" fill="rgb(227,208,46)" fg:x="7879" fg:w="368"/><text x="21.0715%" y="191.50"></text></g><g><title>memcpy (372 instructions, 0.98%)</title><rect x="20.7785%" y="197" width="0.9810%" height="15" fill="rgb(243,77,36)" fg:x="7879" fg:w="372"/><text x="21.0715%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,080 instructions, 21.31%)</title><rect x="1.3687%" y="213" width="21.3086%" height="15" fill="rgb(214,196,1)" fg:x="519" fg:w="8080"/><text x="1.6617%" y="223.50">candid::de::IDLDeserialize::..</text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.01%)</title><rect x="22.6773%" y="197" width="1.0100%" height="15" fill="rgb(212,114,6)" fg:x="8599" fg:w="383"/><text x="22.9703%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (383 instructions, 1.01%)</title><rect x="23.6979%" y="197" width="1.0100%" height="15" fill="rgb(231,221,30)" fg:x="8986" fg:w="383"/><text x="23.9909%" y="207.50"></text></g><g><title>memcpy (774 instructions, 2.04%)</title><rect x="22.6773%" y="213" width="2.0412%" height="15" fill="rgb(224,111,43)" fg:x="8599" fg:w="774"/><text x="22.9703%" y="223.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.02%)</title><rect x="24.7185%" y="149" width="0.0211%" height="15" fill="rgb(232,24,51)" fg:x="9373" fg:w="8"/><text x="25.0114%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 instructions, 0.14%)</title><rect x="24.7185%" y="165" width="0.1424%" height="15" fill="rgb(254,144,42)" fg:x="9373" fg:w="54"/><text x="25.0114%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.19%)</title><rect x="24.7185%" y="181" width="0.1925%" height="15" fill="rgb(227,74,15)" fg:x="9373" fg:w="73"/><text x="25.0114%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="24.9110%" y="101" width="0.0237%" height="15" fill="rgb(241,226,16)" fg:x="9446" fg:w="9"/><text x="25.2040%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="24.9347%" y="101" width="0.0237%" height="15" fill="rgb(251,140,7)" fg:x="9455" fg:w="9"/><text x="25.2277%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="24.9664%" y="101" width="0.0132%" height="15" fill="rgb(215,87,53)" fg:x="9467" fg:w="5"/><text x="25.2593%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="24.9110%" y="117" width="0.3165%" height="15" fill="rgb(209,192,18)" fg:x="9446" fg:w="120"/><text x="25.2040%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="24.9110%" y="133" width="0.3428%" height="15" fill="rgb(228,126,30)" fg:x="9446" fg:w="130"/><text x="25.2040%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="24.9110%" y="149" width="0.3507%" height="15" fill="rgb(242,21,43)" fg:x="9446" fg:w="133"/><text x="25.2040%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="24.9110%" y="165" width="0.3666%" height="15" fill="rgb(232,91,24)" fg:x="9446" fg:w="139"/><text x="25.2040%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::convert::From&lt;candid::types::internal::TypeInner&gt;&gt;::from (184 instructions, 0.49%)</title><rect x="24.9110%" y="181" width="0.4852%" height="15" fill="rgb(248,39,1)" fg:x="9446" fg:w="184"/><text x="25.2040%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.02%)</title><rect x="25.3962%" y="149" width="0.0211%" height="15" fill="rgb(244,82,3)" fg:x="9630" fg:w="8"/><text x="25.6892%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="25.4173%" y="133" width="0.1424%" height="15" fill="rgb(213,19,35)" fg:x="9638" fg:w="54"/><text x="25.7103%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.24%)</title><rect x="25.5597%" y="133" width="0.2373%" height="15" fill="rgb(205,65,32)" fg:x="9692" fg:w="90"/><text x="25.8527%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.43%)</title><rect x="25.7971%" y="133" width="0.4299%" height="15" fill="rgb(212,223,20)" fg:x="9782" fg:w="163"/><text x="26.0901%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.47%)</title><rect x="25.4173%" y="149" width="1.4663%" height="15" fill="rgb(240,138,25)" fg:x="9638" fg:w="556"/><text x="25.7103%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (99 instructions, 0.26%)</title><rect x="26.8836%" y="149" width="0.2611%" height="15" fill="rgb(235,224,36)" fg:x="10194" fg:w="99"/><text x="27.1766%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (826 instructions, 2.18%)</title><rect x="25.3962%" y="165" width="2.1783%" height="15" fill="rgb(206,98,27)" fg:x="9630" fg:w="826"/><text x="25.6892%" y="175.50">s..</text></g><g><title>candid::types::internal::env_add (853 instructions, 2.25%)</title><rect x="25.3962%" y="181" width="2.2495%" height="15" fill="rgb(225,189,33)" fg:x="9630" fg:w="853"/><text x="25.6892%" y="191.50">c..</text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="27.6458%" y="101" width="0.0237%" height="15" fill="rgb(223,64,7)" fg:x="10483" fg:w="9"/><text x="27.9387%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="27.6695%" y="101" width="0.0237%" height="15" fill="rgb(251,92,40)" fg:x="10492" fg:w="9"/><text x="27.9625%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_inuse_chunk (5 instructions, 0.01%)</title><rect x="27.7012%" y="101" width="0.0132%" height="15" fill="rgb(221,167,42)" fg:x="10504" fg:w="5"/><text x="27.9941%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (120 instructions, 0.32%)</title><rect x="27.6458%" y="117" width="0.3165%" height="15" fill="rgb(210,166,36)" fg:x="10483" fg:w="120"/><text x="27.9387%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (130 instructions, 0.34%)</title><rect x="27.6458%" y="133" width="0.3428%" height="15" fill="rgb(233,42,30)" fg:x="10483" fg:w="130"/><text x="27.9387%" y="143.50"></text></g><g><title>__rdl_alloc (133 instructions, 0.35%)</title><rect x="27.6458%" y="149" width="0.3507%" height="15" fill="rgb(211,66,27)" fg:x="10483" fg:w="133"/><text x="27.9387%" y="159.50"></text></g><g><title>__rust_alloc (139 instructions, 0.37%)</title><rect x="27.6458%" y="165" width="0.3666%" height="15" fill="rgb(213,186,23)" fg:x="10483" fg:w="139"/><text x="27.9387%" y="175.50"></text></g><g><title>candid::types::impls::&lt;impl candid::types::CandidType for u32&gt;::_ty (151 instructions, 0.40%)</title><rect x="27.6458%" y="181" width="0.3982%" height="15" fill="rgb(237,217,9)" fg:x="10483" fg:w="151"/><text x="27.9387%" y="191.50"></text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.02%)</title><rect x="28.0440%" y="149" width="0.0211%" height="15" fill="rgb(249,46,9)" fg:x="10634" fg:w="8"/><text x="28.3370%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="28.0651%" y="133" width="0.1424%" height="15" fill="rgb(248,205,14)" fg:x="10642" fg:w="54"/><text x="28.3581%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (90 instructions, 0.24%)</title><rect x="28.2075%" y="133" width="0.2373%" height="15" fill="rgb(240,170,12)" fg:x="10696" fg:w="90"/><text x="28.5005%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (163 instructions, 0.43%)</title><rect x="28.4448%" y="133" width="0.4299%" height="15" fill="rgb(239,93,23)" fg:x="10786" fg:w="163"/><text x="28.7378%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (556 instructions, 1.47%)</title><rect x="28.0651%" y="149" width="1.4663%" height="15" fill="rgb(227,34,27)" fg:x="10642" fg:w="556"/><text x="28.3581%" y="159.50"></text></g><g><title>compiler_builtins::mem::memcmp (74 instructions, 0.20%)</title><rect x="29.5314%" y="133" width="0.1952%" height="15" fill="rgb(222,70,38)" fg:x="11198" fg:w="74"/><text x="29.8243%" y="143.50"></text></g><g><title>memcmp (78 instructions, 0.21%)</title><rect x="29.5314%" y="149" width="0.2057%" height="15" fill="rgb(237,34,30)" fg:x="11198" fg:w="78"/><text x="29.8243%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="29.7450%" y="85" width="0.0105%" height="15" fill="rgb(245,83,42)" fg:x="11279" fg:w="4"/><text x="30.0380%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="29.7634%" y="85" width="0.0105%" height="15" fill="rgb(243,77,19)" fg:x="11286" fg:w="4"/><text x="30.0564%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="29.7740%" y="85" width="0.0158%" height="15" fill="rgb(206,197,3)" fg:x="11290" fg:w="6"/><text x="30.0670%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="29.7898%" y="85" width="0.0422%" height="15" fill="rgb(221,87,53)" fg:x="11296" fg:w="16"/><text x="30.0828%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="29.7371%" y="101" width="0.2584%" height="15" fill="rgb(217,80,46)" fg:x="11276" fg:w="98"/><text x="30.0300%" y="111.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="29.7371%" y="117" width="0.2637%" height="15" fill="rgb(219,173,45)" fg:x="11276" fg:w="100"/><text x="30.0300%" y="127.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="29.7371%" y="133" width="0.2769%" height="15" fill="rgb(229,157,13)" fg:x="11276" fg:w="105"/><text x="30.0300%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (137 instructions, 0.36%)</title><rect x="29.7371%" y="149" width="0.3613%" height="15" fill="rgb(247,135,40)" fg:x="11276" fg:w="137"/><text x="30.0300%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 2.51%)</title><rect x="28.0440%" y="165" width="2.5106%" height="15" fill="rgb(236,29,19)" fg:x="10634" fg:w="952"/><text x="28.3370%" y="175.50">s..</text></g><g><title>candid::types::internal::env_add (979 instructions, 2.58%)</title><rect x="28.0440%" y="181" width="2.5818%" height="15" fill="rgb(244,167,40)" fg:x="10634" fg:w="979"/><text x="28.3370%" y="191.50">c..</text></g><g><title>candid::types::internal::ID::__getit (8 instructions, 0.02%)</title><rect x="30.6258%" y="149" width="0.0211%" height="15" fill="rgb(232,176,19)" fg:x="11613" fg:w="8"/><text x="30.9188%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (54 instructions, 0.14%)</title><rect x="30.6469%" y="117" width="0.1424%" height="15" fill="rgb(210,133,44)" fg:x="11621" fg:w="54"/><text x="30.9399%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.21%)</title><rect x="30.6469%" y="133" width="0.2083%" height="15" fill="rgb(235,196,12)" fg:x="11621" fg:w="79"/><text x="30.9399%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (303 instructions, 0.80%)</title><rect x="30.6469%" y="149" width="0.7991%" height="15" fill="rgb(219,189,21)" fg:x="11621" fg:w="303"/><text x="30.9399%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (18 instructions, 0.05%)</title><rect x="31.4460%" y="149" width="0.0475%" height="15" fill="rgb(207,137,46)" fg:x="11924" fg:w="18"/><text x="31.7389%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="31.4934%" y="149" width="0.0290%" height="15" fill="rgb(228,29,44)" fg:x="11942" fg:w="11"/><text x="31.7864%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (521 instructions, 1.37%)</title><rect x="30.6258%" y="165" width="1.3740%" height="15" fill="rgb(242,113,7)" fg:x="11613" fg:w="521"/><text x="30.9188%" y="175.50"></text></g><g><title>candid::types::internal::env_id (559 instructions, 1.47%)</title><rect x="30.6258%" y="181" width="1.4742%" height="15" fill="rgb(221,28,37)" fg:x="11613" fg:w="559"/><text x="30.9188%" y="191.50"></text></g><g><title>candid::types::CandidType::ty (2,907 instructions, 7.67%)</title><rect x="24.7185%" y="197" width="7.6663%" height="15" fill="rgb(238,43,37)" fg:x="9373" fg:w="2907"/><text x="25.0114%" y="207.50">candid::t..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (38 instructions, 0.10%)</title><rect x="32.3848%" y="197" width="0.1002%" height="15" fill="rgb(228,58,6)" fg:x="12280" fg:w="38"/><text x="32.6778%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.4929%" y="133" width="0.0105%" height="15" fill="rgb(241,35,2)" fg:x="12321" fg:w="4"/><text x="32.7859%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="32.5114%" y="133" width="0.0105%" height="15" fill="rgb(227,48,5)" fg:x="12328" fg:w="4"/><text x="32.8044%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="32.5220%" y="133" width="0.0158%" height="15" fill="rgb(235,3,6)" fg:x="12332" fg:w="6"/><text x="32.8149%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.5378%" y="133" width="0.0105%" height="15" fill="rgb(227,199,42)" fg:x="12338" fg:w="4"/><text x="32.8307%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="32.5483%" y="133" width="0.0264%" height="15" fill="rgb(211,193,24)" fg:x="12342" fg:w="10"/><text x="32.8413%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="32.4850%" y="149" width="0.3718%" height="15" fill="rgb(232,209,8)" fg:x="12318" fg:w="141"/><text x="32.7780%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="32.4850%" y="165" width="0.3771%" height="15" fill="rgb(233,205,44)" fg:x="12318" fg:w="143"/><text x="32.7780%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="32.4850%" y="181" width="0.3903%" height="15" fill="rgb(206,181,23)" fg:x="12318" fg:w="148"/><text x="32.7780%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="32.9676%" y="133" width="0.0105%" height="15" fill="rgb(224,201,4)" fg:x="12501" fg:w="4"/><text x="33.2606%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="32.9861%" y="133" width="0.0105%" height="15" fill="rgb(236,181,38)" fg:x="12508" fg:w="4"/><text x="33.2791%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="32.9967%" y="133" width="0.0158%" height="15" fill="rgb(218,143,35)" fg:x="12512" fg:w="6"/><text x="33.2896%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="33.0125%" y="133" width="0.0105%" height="15" fill="rgb(220,64,28)" fg:x="12518" fg:w="4"/><text x="33.3054%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="33.0230%" y="133" width="0.0264%" height="15" fill="rgb(234,96,7)" fg:x="12522" fg:w="10"/><text x="33.3160%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="32.9597%" y="149" width="0.3718%" height="15" fill="rgb(240,125,45)" fg:x="12498" fg:w="141"/><text x="33.2527%" y="159.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="32.9597%" y="165" width="0.3771%" height="15" fill="rgb(226,56,15)" fg:x="12498" fg:w="143"/><text x="33.2527%" y="175.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="32.9597%" y="181" width="0.3903%" height="15" fill="rgb(207,33,40)" fg:x="12498" fg:w="148"/><text x="33.2527%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (360 instructions, 0.95%)</title><rect x="32.4850%" y="197" width="0.9494%" height="15" fill="rgb(214,126,9)" fg:x="12318" fg:w="360"/><text x="32.7780%" y="207.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="33.4344%" y="181" width="0.0738%" height="15" fill="rgb(222,208,23)" fg:x="12678" fg:w="28"/><text x="33.7274%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="33.5083%" y="181" width="0.0422%" height="15" fill="rgb(219,152,37)" fg:x="12706" fg:w="16"/><text x="33.8012%" y="191.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq (16 instructions, 0.04%)</title><rect x="33.5505%" y="181" width="0.0422%" height="15" fill="rgb(216,102,24)" fg:x="12722" fg:w="16"/><text x="33.8434%" y="191.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (141 instructions, 0.37%)</title><rect x="33.4344%" y="197" width="0.3718%" height="15" fill="rgb(218,59,36)" fg:x="12678" fg:w="141"/><text x="33.7274%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.8063%" y="197" width="0.0290%" height="15" fill="rgb(244,186,46)" fg:x="12819" fg:w="11"/><text x="34.0992%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.8353%" y="197" width="0.0290%" height="15" fill="rgb(229,177,14)" fg:x="12830" fg:w="11"/><text x="34.1282%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="33.8643%" y="197" width="0.0290%" height="15" fill="rgb(232,164,36)" fg:x="12841" fg:w="11"/><text x="34.1573%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::get_value (3,651 instructions, 9.63%)</title><rect x="24.7185%" y="213" width="9.6284%" height="15" fill="rgb(235,8,20)" fg:x="9373" fg:w="3651"/><text x="25.0114%" y="223.50">candid::de:..</text></g><g><title>compiler_builtins::mem::memcpy (413 instructions, 1.09%)</title><rect x="34.3469%" y="197" width="1.0892%" height="15" fill="rgb(222,174,18)" fg:x="13024" fg:w="413"/><text x="34.6399%" y="207.50"></text></g><g><title>memcpy (417 instructions, 1.10%)</title><rect x="34.3469%" y="213" width="1.0997%" height="15" fill="rgb(227,108,45)" fg:x="13024" fg:w="417"/><text x="34.6399%" y="223.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.05%)</title><rect x="35.4466%" y="197" width="0.0501%" height="15" fill="rgb(210,174,31)" fg:x="13441" fg:w="19"/><text x="35.7396%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.5046%" y="149" width="0.0105%" height="15" fill="rgb(225,153,17)" fg:x="13463" fg:w="4"/><text x="35.7976%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.5231%" y="149" width="0.0105%" height="15" fill="rgb(239,60,52)" fg:x="13470" fg:w="4"/><text x="35.8161%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.5336%" y="149" width="0.0158%" height="15" fill="rgb(210,42,29)" fg:x="13474" fg:w="6"/><text x="35.8266%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.5495%" y="149" width="0.0105%" height="15" fill="rgb(224,43,29)" fg:x="13480" fg:w="4"/><text x="35.8424%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="35.5600%" y="149" width="0.0264%" height="15" fill="rgb(238,178,46)" fg:x="13484" fg:w="10"/><text x="35.8530%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (141 instructions, 0.37%)</title><rect x="35.4967%" y="165" width="0.3718%" height="15" fill="rgb(237,6,54)" fg:x="13460" fg:w="141"/><text x="35.7897%" y="175.50"></text></g><g><title>__rdl_dealloc (143 instructions, 0.38%)</title><rect x="35.4967%" y="181" width="0.3771%" height="15" fill="rgb(233,177,36)" fg:x="13460" fg:w="143"/><text x="35.7897%" y="191.50"></text></g><g><title>__rust_dealloc (148 instructions, 0.39%)</title><rect x="35.4967%" y="197" width="0.3903%" height="15" fill="rgb(219,209,6)" fg:x="13460" fg:w="148"/><text x="35.7897%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.8949%" y="133" width="0.0105%" height="15" fill="rgb(248,11,37)" fg:x="13611" fg:w="4"/><text x="36.1879%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="35.9134%" y="133" width="0.0105%" height="15" fill="rgb(205,18,4)" fg:x="13618" fg:w="4"/><text x="36.2064%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="35.9239%" y="133" width="0.0132%" height="15" fill="rgb(246,14,12)" fg:x="13622" fg:w="5"/><text x="36.2169%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="35.9450%" y="133" width="0.0158%" height="15" fill="rgb(207,196,33)" fg:x="13630" fg:w="6"/><text x="36.2380%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="35.9609%" y="133" width="0.0105%" height="15" fill="rgb(231,49,9)" fg:x="13636" fg:w="4"/><text x="36.2538%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="35.9714%" y="133" width="0.0264%" height="15" fill="rgb(250,115,24)" fg:x="13640" fg:w="10"/><text x="36.2644%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (74 instructions, 0.20%)</title><rect x="35.9978%" y="133" width="0.1952%" height="15" fill="rgb(254,111,42)" fg:x="13650" fg:w="74"/><text x="36.2908%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.64%)</title><rect x="35.8870%" y="149" width="0.6408%" height="15" fill="rgb(208,6,31)" fg:x="13608" fg:w="243"/><text x="36.1800%" y="159.50"></text></g><g><title>__rdl_dealloc (245 instructions, 0.65%)</title><rect x="35.8870%" y="165" width="0.6461%" height="15" fill="rgb(251,93,1)" fg:x="13608" fg:w="245"/><text x="36.1800%" y="175.50"></text></g><g><title>__rust_dealloc (250 instructions, 0.66%)</title><rect x="35.8870%" y="181" width="0.6593%" height="15" fill="rgb(227,53,15)" fg:x="13608" fg:w="250"/><text x="36.1800%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (282 instructions, 0.74%)</title><rect x="35.8870%" y="197" width="0.7437%" height="15" fill="rgb(222,7,54)" fg:x="13608" fg:w="282"/><text x="36.1800%" y="207.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="36.6307%" y="197" width="0.0290%" height="15" fill="rgb(242,42,40)" fg:x="13890" fg:w="11"/><text x="36.9237%" y="207.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="36.6597%" y="197" width="0.0132%" height="15" fill="rgb(222,177,31)" fg:x="13901" fg:w="5"/><text x="36.9527%" y="207.50"></text></g><g><title>candid::de::IDLDeserialize::done (562 instructions, 1.48%)</title><rect x="35.4466%" y="213" width="1.4821%" height="15" fill="rgb(207,46,37)" fg:x="13441" fg:w="562"/><text x="35.7396%" y="223.50"></text></g><g><title>candid::utils::decode_args (13,587 instructions, 35.83%)</title><rect x="1.3687%" y="229" width="35.8316%" height="15" fill="rgb(237,171,15)" fg:x="519" fg:w="13587"/><text x="1.6617%" y="239.50">candid::utils::decode_args</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="37.2083%" y="181" width="0.0105%" height="15" fill="rgb(254,197,19)" fg:x="14109" fg:w="4"/><text x="37.5012%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="37.2267%" y="181" width="0.0105%" height="15" fill="rgb(207,82,25)" fg:x="14116" fg:w="4"/><text x="37.5197%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="37.2373%" y="181" width="0.0158%" height="15" fill="rgb(216,136,36)" fg:x="14120" fg:w="6"/><text x="37.5302%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="37.2531%" y="181" width="0.0422%" height="15" fill="rgb(236,160,23)" fg:x="14126" fg:w="16"/><text x="37.5461%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="37.2003%" y="197" width="0.2584%" height="15" fill="rgb(241,163,17)" fg:x="14106" fg:w="98"/><text x="37.4933%" y="207.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="37.2003%" y="213" width="0.2637%" height="15" fill="rgb(236,200,34)" fg:x="14106" fg:w="100"/><text x="37.4933%" y="223.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="37.2003%" y="229" width="0.2769%" height="15" fill="rgb(230,76,31)" fg:x="14106" fg:w="105"/><text x="37.4933%" y="239.50"></text></g><g><title>ic_cdk::api::call::arg_data (13,936 instructions, 36.75%)</title><rect x="0.8334%" y="245" width="36.7520%" height="15" fill="rgb(240,86,18)" fg:x="316" fg:w="13936"/><text x="1.1263%" y="255.50">ic_cdk::api::call::arg_data</text></g><g><title>imrc_hashmap::MAP::__getit (6 instructions, 0.02%)</title><rect x="37.5854%" y="229" width="0.0158%" height="15" fill="rgb(237,190,26)" fg:x="14252" fg:w="6"/><text x="37.8783%" y="239.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="37.6012%" y="181" width="0.1213%" height="15" fill="rgb(222,88,1)" fg:x="14258" fg:w="46"/><text x="37.8942%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="37.6012%" y="197" width="0.3138%" height="15" fill="rgb(249,182,18)" fg:x="14258" fg:w="119"/><text x="37.8942%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="37.6012%" y="213" width="0.5063%" height="15" fill="rgb(252,204,8)" fg:x="14258" fg:w="192"/><text x="37.8942%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="38.6614%" y="181" width="0.1213%" height="15" fill="rgb(210,106,5)" fg:x="14660" fg:w="46"/><text x="38.9543%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="38.6614%" y="197" width="0.3138%" height="15" fill="rgb(226,193,13)" fg:x="14660" fg:w="119"/><text x="38.9543%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="38.6614%" y="213" width="0.5063%" height="15" fill="rgb(214,217,20)" fg:x="14660" fg:w="192"/><text x="38.9543%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="39.7215%" y="165" width="0.0897%" height="15" fill="rgb(243,146,32)" fg:x="15062" fg:w="34"/><text x="40.0145%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="39.7215%" y="181" width="0.2822%" height="15" fill="rgb(221,167,40)" fg:x="15062" fg:w="107"/><text x="40.0145%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="39.7215%" y="197" width="0.4747%" height="15" fill="rgb(236,20,23)" fg:x="15062" fg:w="180"/><text x="40.0145%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="39.7215%" y="213" width="0.6672%" height="15" fill="rgb(226,160,32)" fg:x="15062" fg:w="253"/><text x="40.0145%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="40.9425%" y="181" width="0.0897%" height="15" fill="rgb(225,193,15)" fg:x="15525" fg:w="34"/><text x="41.2355%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="40.9425%" y="197" width="0.2822%" height="15" fill="rgb(225,137,48)" fg:x="15525" fg:w="107"/><text x="41.2355%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="40.9425%" y="213" width="0.4747%" height="15" fill="rgb(222,88,39)" fg:x="15525" fg:w="180"/><text x="41.2355%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="41.9710%" y="181" width="0.0897%" height="15" fill="rgb(210,64,19)" fg:x="15915" fg:w="34"/><text x="42.2640%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="41.9710%" y="197" width="0.2822%" height="15" fill="rgb(218,63,51)" fg:x="15915" fg:w="107"/><text x="42.2640%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="41.9710%" y="213" width="0.4747%" height="15" fill="rgb(222,114,7)" fg:x="15915" fg:w="180"/><text x="42.2640%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="42.9996%" y="181" width="0.0897%" height="15" fill="rgb(222,69,40)" fg:x="16305" fg:w="34"/><text x="43.2925%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="42.9996%" y="197" width="0.2822%" height="15" fill="rgb(242,83,48)" fg:x="16305" fg:w="107"/><text x="43.2925%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="42.9996%" y="213" width="0.4747%" height="15" fill="rgb(209,210,30)" fg:x="16305" fg:w="180"/><text x="43.2925%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="44.0281%" y="165" width="0.0897%" height="15" fill="rgb(220,57,21)" fg:x="16695" fg:w="34"/><text x="44.3210%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="44.0281%" y="181" width="0.2822%" height="15" fill="rgb(222,137,51)" fg:x="16695" fg:w="107"/><text x="44.3210%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="44.0281%" y="197" width="0.4747%" height="15" fill="rgb(226,21,16)" fg:x="16695" fg:w="180"/><text x="44.3210%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="44.0281%" y="213" width="0.6672%" height="15" fill="rgb(250,33,21)" fg:x="16695" fg:w="253"/><text x="44.3210%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="45.2491%" y="181" width="0.1213%" height="15" fill="rgb(210,195,9)" fg:x="17158" fg:w="46"/><text x="45.5421%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="45.2491%" y="197" width="0.3138%" height="15" fill="rgb(228,190,2)" fg:x="17158" fg:w="119"/><text x="45.5421%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="45.2491%" y="213" width="0.5063%" height="15" fill="rgb(210,50,35)" fg:x="17158" fg:w="192"/><text x="45.5421%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="46.3092%" y="181" width="0.0897%" height="15" fill="rgb(240,98,20)" fg:x="17560" fg:w="34"/><text x="46.6022%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="46.3092%" y="197" width="0.2822%" height="15" fill="rgb(207,124,1)" fg:x="17560" fg:w="107"/><text x="46.6022%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="46.3092%" y="213" width="0.4747%" height="15" fill="rgb(228,83,27)" fg:x="17560" fg:w="180"/><text x="46.6022%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="47.3377%" y="181" width="0.0897%" height="15" fill="rgb(245,193,16)" fg:x="17950" fg:w="34"/><text x="47.6307%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="47.3377%" y="197" width="0.2822%" height="15" fill="rgb(222,169,9)" fg:x="17950" fg:w="107"/><text x="47.6307%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="47.3377%" y="213" width="0.4747%" height="15" fill="rgb(253,40,36)" fg:x="17950" fg:w="180"/><text x="47.6307%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="48.3663%" y="181" width="0.0897%" height="15" fill="rgb(210,225,51)" fg:x="18340" fg:w="34"/><text x="48.6592%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="48.3663%" y="197" width="0.2822%" height="15" fill="rgb(218,82,0)" fg:x="18340" fg:w="107"/><text x="48.6592%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="48.3663%" y="213" width="0.4747%" height="15" fill="rgb(216,179,24)" fg:x="18340" fg:w="180"/><text x="48.6592%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="49.3948%" y="181" width="0.0897%" height="15" fill="rgb(218,180,6)" fg:x="18730" fg:w="34"/><text x="49.6877%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="49.3948%" y="197" width="0.2822%" height="15" fill="rgb(239,70,22)" fg:x="18730" fg:w="107"/><text x="49.6877%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="49.3948%" y="213" width="0.4747%" height="15" fill="rgb(219,2,10)" fg:x="18730" fg:w="180"/><text x="49.6877%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="50.4233%" y="181" width="0.0897%" height="15" fill="rgb(240,220,10)" fg:x="19120" fg:w="34"/><text x="50.7162%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="50.4233%" y="197" width="0.2822%" height="15" fill="rgb(208,153,25)" fg:x="19120" fg:w="107"/><text x="50.7162%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="50.4233%" y="213" width="0.4747%" height="15" fill="rgb(235,6,53)" fg:x="19120" fg:w="180"/><text x="50.7162%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="51.4518%" y="165" width="0.0897%" height="15" fill="rgb(228,159,54)" fg:x="19510" fg:w="34"/><text x="51.7447%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="51.4518%" y="181" width="0.2822%" height="15" fill="rgb(224,105,14)" fg:x="19510" fg:w="107"/><text x="51.7447%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="51.4518%" y="197" width="0.4747%" height="15" fill="rgb(239,221,16)" fg:x="19510" fg:w="180"/><text x="51.7447%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="51.4518%" y="213" width="0.6672%" height="15" fill="rgb(230,150,7)" fg:x="19510" fg:w="253"/><text x="51.7447%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="52.6728%" y="181" width="0.1213%" height="15" fill="rgb(208,189,25)" fg:x="19973" fg:w="46"/><text x="52.9658%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="52.6728%" y="197" width="0.3138%" height="15" fill="rgb(217,201,12)" fg:x="19973" fg:w="119"/><text x="52.9658%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="52.6728%" y="213" width="0.5063%" height="15" fill="rgb(238,116,49)" fg:x="19973" fg:w="192"/><text x="52.9658%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="53.7330%" y="181" width="0.0897%" height="15" fill="rgb(207,84,45)" fg:x="20375" fg:w="34"/><text x="54.0259%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="53.7330%" y="197" width="0.2822%" height="15" fill="rgb(216,152,10)" fg:x="20375" fg:w="107"/><text x="54.0259%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="53.7330%" y="213" width="0.4747%" height="15" fill="rgb(224,226,30)" fg:x="20375" fg:w="180"/><text x="54.0259%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="54.7615%" y="181" width="0.0897%" height="15" fill="rgb(224,135,11)" fg:x="20765" fg:w="34"/><text x="55.0544%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="54.7615%" y="197" width="0.2822%" height="15" fill="rgb(229,142,25)" fg:x="20765" fg:w="107"/><text x="55.0544%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="54.7615%" y="213" width="0.4747%" height="15" fill="rgb(251,17,2)" fg:x="20765" fg:w="180"/><text x="55.0544%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="55.7900%" y="181" width="0.1213%" height="15" fill="rgb(250,16,24)" fg:x="21155" fg:w="46"/><text x="56.0829%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="55.7900%" y="197" width="0.3138%" height="15" fill="rgb(221,179,24)" fg:x="21155" fg:w="119"/><text x="56.0829%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="55.7900%" y="213" width="0.5063%" height="15" fill="rgb(253,114,23)" fg:x="21155" fg:w="192"/><text x="56.0829%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="56.8501%" y="181" width="0.0897%" height="15" fill="rgb(249,199,10)" fg:x="21557" fg:w="34"/><text x="57.1431%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="56.8501%" y="197" width="0.2822%" height="15" fill="rgb(254,125,35)" fg:x="21557" fg:w="107"/><text x="57.1431%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="56.8501%" y="213" width="0.4747%" height="15" fill="rgb(217,0,38)" fg:x="21557" fg:w="180"/><text x="57.1431%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="57.8786%" y="181" width="0.1213%" height="15" fill="rgb(221,106,1)" fg:x="21947" fg:w="46"/><text x="58.1716%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="57.8786%" y="197" width="0.3138%" height="15" fill="rgb(229,97,39)" fg:x="21947" fg:w="119"/><text x="58.1716%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="57.8786%" y="213" width="0.5063%" height="15" fill="rgb(248,132,6)" fg:x="21947" fg:w="192"/><text x="58.1716%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="58.9388%" y="181" width="0.0897%" height="15" fill="rgb(237,136,35)" fg:x="22349" fg:w="34"/><text x="59.2318%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="58.9388%" y="197" width="0.2822%" height="15" fill="rgb(238,1,23)" fg:x="22349" fg:w="107"/><text x="59.2318%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="58.9388%" y="213" width="0.4747%" height="15" fill="rgb(243,124,42)" fg:x="22349" fg:w="180"/><text x="59.2318%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="59.9673%" y="181" width="0.0897%" height="15" fill="rgb(237,136,54)" fg:x="22739" fg:w="34"/><text x="60.2603%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="59.9673%" y="197" width="0.2822%" height="15" fill="rgb(215,69,49)" fg:x="22739" fg:w="107"/><text x="60.2603%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="59.9673%" y="213" width="0.4747%" height="15" fill="rgb(215,9,0)" fg:x="22739" fg:w="180"/><text x="60.2603%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="60.9958%" y="181" width="0.0897%" height="15" fill="rgb(221,162,42)" fg:x="23129" fg:w="34"/><text x="61.2888%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="60.9958%" y="197" width="0.2822%" height="15" fill="rgb(248,22,39)" fg:x="23129" fg:w="107"/><text x="61.2888%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="60.9958%" y="213" width="0.4747%" height="15" fill="rgb(207,9,44)" fg:x="23129" fg:w="180"/><text x="61.2888%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="62.0243%" y="181" width="0.0897%" height="15" fill="rgb(237,209,38)" fg:x="23519" fg:w="34"/><text x="62.3173%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="62.0243%" y="197" width="0.2822%" height="15" fill="rgb(207,30,26)" fg:x="23519" fg:w="107"/><text x="62.3173%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="62.0243%" y="213" width="0.4747%" height="15" fill="rgb(243,62,1)" fg:x="23519" fg:w="180"/><text x="62.3173%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="63.0528%" y="181" width="0.1213%" height="15" fill="rgb(233,116,25)" fg:x="23909" fg:w="46"/><text x="63.3458%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="63.0528%" y="197" width="0.3138%" height="15" fill="rgb(245,213,38)" fg:x="23909" fg:w="119"/><text x="63.3458%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="63.0528%" y="213" width="0.5063%" height="15" fill="rgb(237,46,42)" fg:x="23909" fg:w="192"/><text x="63.3458%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="64.1130%" y="181" width="0.1213%" height="15" fill="rgb(239,65,45)" fg:x="24311" fg:w="46"/><text x="64.4059%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="64.1130%" y="197" width="0.3138%" height="15" fill="rgb(228,97,21)" fg:x="24311" fg:w="119"/><text x="64.4059%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="64.1130%" y="213" width="0.5063%" height="15" fill="rgb(217,10,15)" fg:x="24311" fg:w="192"/><text x="64.4059%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="65.1731%" y="181" width="0.1213%" height="15" fill="rgb(235,89,2)" fg:x="24713" fg:w="46"/><text x="65.4661%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="65.1731%" y="197" width="0.3138%" height="15" fill="rgb(241,131,52)" fg:x="24713" fg:w="119"/><text x="65.4661%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="65.1731%" y="213" width="0.5063%" height="15" fill="rgb(219,219,37)" fg:x="24713" fg:w="192"/><text x="65.4661%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="66.2333%" y="181" width="0.0897%" height="15" fill="rgb(207,3,30)" fg:x="25115" fg:w="34"/><text x="66.5263%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="66.2333%" y="197" width="0.2822%" height="15" fill="rgb(249,8,18)" fg:x="25115" fg:w="107"/><text x="66.5263%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="66.2333%" y="213" width="0.4747%" height="15" fill="rgb(222,50,39)" fg:x="25115" fg:w="180"/><text x="66.5263%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="67.2618%" y="181" width="0.0897%" height="15" fill="rgb(248,89,18)" fg:x="25505" fg:w="34"/><text x="67.5548%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="67.2618%" y="197" width="0.2822%" height="15" fill="rgb(243,228,10)" fg:x="25505" fg:w="107"/><text x="67.5548%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="67.2618%" y="213" width="0.4747%" height="15" fill="rgb(233,23,28)" fg:x="25505" fg:w="180"/><text x="67.5548%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="68.2903%" y="181" width="0.1213%" height="15" fill="rgb(213,97,41)" fg:x="25895" fg:w="46"/><text x="68.5833%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="68.2903%" y="197" width="0.3138%" height="15" fill="rgb(245,204,14)" fg:x="25895" fg:w="119"/><text x="68.5833%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="68.2903%" y="213" width="0.5063%" height="15" fill="rgb(253,98,28)" fg:x="25895" fg:w="192"/><text x="68.5833%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="69.3505%" y="181" width="0.1213%" height="15" fill="rgb(241,138,8)" fg:x="26297" fg:w="46"/><text x="69.6434%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="69.3505%" y="197" width="0.3138%" height="15" fill="rgb(242,44,0)" fg:x="26297" fg:w="119"/><text x="69.6434%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="69.3505%" y="213" width="0.5063%" height="15" fill="rgb(226,33,54)" fg:x="26297" fg:w="192"/><text x="69.6434%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="70.4106%" y="181" width="0.1213%" height="15" fill="rgb(206,83,0)" fg:x="26699" fg:w="46"/><text x="70.7036%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="70.4106%" y="197" width="0.3138%" height="15" fill="rgb(244,15,13)" fg:x="26699" fg:w="119"/><text x="70.7036%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="70.4106%" y="213" width="0.5063%" height="15" fill="rgb(235,118,52)" fg:x="26699" fg:w="192"/><text x="70.7036%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="71.4708%" y="181" width="0.0897%" height="15" fill="rgb(225,59,7)" fg:x="27101" fg:w="34"/><text x="71.7637%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="71.4708%" y="197" width="0.2822%" height="15" fill="rgb(231,1,2)" fg:x="27101" fg:w="107"/><text x="71.7637%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="71.4708%" y="213" width="0.4747%" height="15" fill="rgb(249,178,32)" fg:x="27101" fg:w="180"/><text x="71.7637%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="72.4993%" y="181" width="0.0897%" height="15" fill="rgb(236,126,12)" fg:x="27491" fg:w="34"/><text x="72.7922%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="72.4993%" y="197" width="0.2822%" height="15" fill="rgb(206,193,36)" fg:x="27491" fg:w="107"/><text x="72.7922%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="72.4993%" y="213" width="0.4747%" height="15" fill="rgb(229,206,36)" fg:x="27491" fg:w="180"/><text x="72.7922%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="73.5278%" y="181" width="0.1213%" height="15" fill="rgb(233,36,0)" fg:x="27881" fg:w="46"/><text x="73.8208%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="73.5278%" y="197" width="0.3138%" height="15" fill="rgb(215,183,34)" fg:x="27881" fg:w="119"/><text x="73.8208%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="73.5278%" y="213" width="0.5063%" height="15" fill="rgb(226,128,44)" fg:x="27881" fg:w="192"/><text x="73.8208%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="74.5879%" y="181" width="0.0897%" height="15" fill="rgb(205,60,38)" fg:x="28283" fg:w="34"/><text x="74.8809%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="74.5879%" y="197" width="0.2822%" height="15" fill="rgb(222,11,4)" fg:x="28283" fg:w="107"/><text x="74.8809%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="74.5879%" y="213" width="0.4747%" height="15" fill="rgb(251,73,15)" fg:x="28283" fg:w="180"/><text x="74.8809%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="75.6164%" y="181" width="0.0897%" height="15" fill="rgb(214,166,29)" fg:x="28673" fg:w="34"/><text x="75.9094%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="75.6164%" y="197" width="0.2822%" height="15" fill="rgb(236,102,32)" fg:x="28673" fg:w="107"/><text x="75.9094%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="75.6164%" y="213" width="0.4747%" height="15" fill="rgb(210,203,42)" fg:x="28673" fg:w="180"/><text x="75.9094%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="76.6450%" y="181" width="0.1213%" height="15" fill="rgb(220,39,3)" fg:x="29063" fg:w="46"/><text x="76.9379%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="76.6450%" y="197" width="0.3138%" height="15" fill="rgb(211,207,52)" fg:x="29063" fg:w="119"/><text x="76.9379%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="76.6450%" y="213" width="0.5063%" height="15" fill="rgb(223,181,8)" fg:x="29063" fg:w="192"/><text x="76.9379%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="77.7051%" y="181" width="0.1213%" height="15" fill="rgb(252,115,33)" fg:x="29465" fg:w="46"/><text x="77.9981%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="77.7051%" y="197" width="0.3138%" height="15" fill="rgb(208,69,31)" fg:x="29465" fg:w="119"/><text x="77.9981%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="77.7051%" y="213" width="0.5063%" height="15" fill="rgb(214,74,18)" fg:x="29465" fg:w="192"/><text x="77.9981%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="78.7653%" y="181" width="0.1213%" height="15" fill="rgb(239,116,36)" fg:x="29867" fg:w="46"/><text x="79.0582%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="78.7653%" y="197" width="0.3138%" height="15" fill="rgb(252,98,35)" fg:x="29867" fg:w="119"/><text x="79.0582%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="78.7653%" y="213" width="0.5063%" height="15" fill="rgb(207,213,47)" fg:x="29867" fg:w="192"/><text x="79.0582%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="79.8254%" y="181" width="0.0897%" height="15" fill="rgb(248,133,16)" fg:x="30269" fg:w="34"/><text x="80.1184%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="79.8254%" y="197" width="0.2822%" height="15" fill="rgb(210,202,39)" fg:x="30269" fg:w="107"/><text x="80.1184%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="79.8254%" y="213" width="0.4747%" height="15" fill="rgb(248,154,14)" fg:x="30269" fg:w="180"/><text x="80.1184%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="80.8539%" y="181" width="0.0897%" height="15" fill="rgb(208,136,28)" fg:x="30659" fg:w="34"/><text x="81.1469%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="80.8539%" y="197" width="0.2822%" height="15" fill="rgb(243,225,34)" fg:x="30659" fg:w="107"/><text x="81.1469%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="80.8539%" y="213" width="0.4747%" height="15" fill="rgb(237,19,14)" fg:x="30659" fg:w="180"/><text x="81.1469%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="81.8824%" y="181" width="0.0897%" height="15" fill="rgb(244,115,34)" fg:x="31049" fg:w="34"/><text x="82.1754%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="81.8824%" y="197" width="0.2822%" height="15" fill="rgb(237,57,51)" fg:x="31049" fg:w="107"/><text x="82.1754%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="81.8824%" y="213" width="0.4747%" height="15" fill="rgb(205,154,4)" fg:x="31049" fg:w="180"/><text x="82.1754%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="82.9109%" y="181" width="0.1213%" height="15" fill="rgb(215,167,3)" fg:x="31439" fg:w="46"/><text x="83.2039%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="82.9109%" y="197" width="0.3138%" height="15" fill="rgb(207,213,4)" fg:x="31439" fg:w="119"/><text x="83.2039%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="82.9109%" y="213" width="0.5063%" height="15" fill="rgb(242,130,47)" fg:x="31439" fg:w="192"/><text x="83.2039%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="83.9711%" y="181" width="0.0897%" height="15" fill="rgb(253,186,35)" fg:x="31841" fg:w="34"/><text x="84.2641%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="83.9711%" y="197" width="0.2822%" height="15" fill="rgb(231,42,26)" fg:x="31841" fg:w="107"/><text x="84.2641%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="83.9711%" y="213" width="0.4747%" height="15" fill="rgb(250,36,13)" fg:x="31841" fg:w="180"/><text x="84.2641%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="84.9996%" y="181" width="0.0897%" height="15" fill="rgb(207,192,32)" fg:x="32231" fg:w="34"/><text x="85.2926%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="84.9996%" y="197" width="0.2822%" height="15" fill="rgb(253,3,18)" fg:x="32231" fg:w="107"/><text x="85.2926%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="84.9996%" y="213" width="0.4747%" height="15" fill="rgb(240,82,0)" fg:x="32231" fg:w="180"/><text x="85.2926%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="86.0281%" y="181" width="0.0897%" height="15" fill="rgb(217,86,1)" fg:x="32621" fg:w="34"/><text x="86.3211%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="86.0281%" y="197" width="0.2822%" height="15" fill="rgb(252,224,5)" fg:x="32621" fg:w="107"/><text x="86.3211%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="86.0281%" y="213" width="0.4747%" height="15" fill="rgb(208,5,34)" fg:x="32621" fg:w="180"/><text x="86.3211%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (46 instructions, 0.12%)</title><rect x="87.0566%" y="181" width="0.1213%" height="15" fill="rgb(228,229,0)" fg:x="33011" fg:w="46"/><text x="87.3496%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (119 instructions, 0.31%)</title><rect x="87.0566%" y="197" width="0.3138%" height="15" fill="rgb(210,225,18)" fg:x="33011" fg:w="119"/><text x="87.3496%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (192 instructions, 0.51%)</title><rect x="87.0566%" y="213" width="0.5063%" height="15" fill="rgb(220,27,39)" fg:x="33011" fg:w="192"/><text x="87.3496%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="88.1168%" y="181" width="0.0897%" height="15" fill="rgb(239,192,6)" fg:x="33413" fg:w="34"/><text x="88.4097%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="88.1168%" y="197" width="0.2822%" height="15" fill="rgb(217,129,25)" fg:x="33413" fg:w="107"/><text x="88.4097%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="88.1168%" y="213" width="0.4747%" height="15" fill="rgb(244,93,45)" fg:x="33413" fg:w="180"/><text x="88.4097%" y="223.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (34 instructions, 0.09%)</title><rect x="89.1453%" y="165" width="0.0897%" height="15" fill="rgb(252,80,3)" fg:x="33803" fg:w="34"/><text x="89.4383%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (107 instructions, 0.28%)</title><rect x="89.1453%" y="181" width="0.2822%" height="15" fill="rgb(213,59,30)" fg:x="33803" fg:w="107"/><text x="89.4383%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (180 instructions, 0.47%)</title><rect x="89.1453%" y="197" width="0.4747%" height="15" fill="rgb(210,165,47)" fg:x="33803" fg:w="180"/><text x="89.4383%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::remove (253 instructions, 0.67%)</title><rect x="89.1453%" y="213" width="0.6672%" height="15" fill="rgb(222,15,18)" fg:x="33803" fg:w="253"/><text x="89.4383%" y="223.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::remove (20,008 instructions, 52.77%)</title><rect x="37.6012%" y="229" width="52.7651%" height="15" fill="rgb(243,124,54)" fg:x="14258" fg:w="20008"/><text x="37.8942%" y="239.50">im_rc::hash::map::HashMap&lt;K,V,S&gt;::remove</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21,822 instructions, 57.55%)</title><rect x="37.5854%" y="245" width="57.5490%" height="15" fill="rgb(224,166,12)" fg:x="14252" fg:w="21822"/><text x="37.8783%" y="255.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>candid::types::internal::ENV::__getit (8 instructions, 0.02%)</title><rect x="95.1344%" y="213" width="0.0211%" height="15" fill="rgb(229,184,42)" fg:x="36074" fg:w="8"/><text x="95.4273%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="95.1634%" y="133" width="0.0105%" height="15" fill="rgb(229,131,40)" fg:x="36085" fg:w="4"/><text x="95.4563%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="95.1818%" y="133" width="0.0105%" height="15" fill="rgb(230,202,45)" fg:x="36092" fg:w="4"/><text x="95.4748%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="95.1924%" y="133" width="0.0132%" height="15" fill="rgb(249,85,43)" fg:x="36096" fg:w="5"/><text x="95.4854%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (56 instructions, 0.15%)</title><rect x="95.2135%" y="133" width="0.1477%" height="15" fill="rgb(239,181,2)" fg:x="36104" fg:w="56"/><text x="95.5065%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="95.3612%" y="133" width="0.0158%" height="15" fill="rgb(226,184,53)" fg:x="36160" fg:w="6"/><text x="95.6541%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (157 instructions, 0.41%)</title><rect x="95.1555%" y="149" width="0.4140%" height="15" fill="rgb(210,118,37)" fg:x="36082" fg:w="157"/><text x="95.4484%" y="159.50"></text></g><g><title>__rdl_dealloc (159 instructions, 0.42%)</title><rect x="95.1555%" y="165" width="0.4193%" height="15" fill="rgb(246,118,30)" fg:x="36082" fg:w="159"/><text x="95.4484%" y="175.50"></text></g><g><title>__rust_dealloc (164 instructions, 0.43%)</title><rect x="95.1555%" y="181" width="0.4325%" height="15" fill="rgb(231,173,14)" fg:x="36082" fg:w="164"/><text x="95.4484%" y="191.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (196 instructions, 0.52%)</title><rect x="95.1555%" y="197" width="0.5169%" height="15" fill="rgb(235,128,32)" fg:x="36082" fg:w="196"/><text x="95.4484%" y="207.50"></text></g><g><title>compiler_builtins::mem::memset (135 instructions, 0.36%)</title><rect x="95.6724%" y="181" width="0.3560%" height="15" fill="rgb(237,70,38)" fg:x="36278" fg:w="135"/><text x="95.9653%" y="191.50"></text></g><g><title>memset (139 instructions, 0.37%)</title><rect x="95.6724%" y="197" width="0.3666%" height="15" fill="rgb(228,26,47)" fg:x="36278" fg:w="139"/><text x="95.9653%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (410 instructions, 1.08%)</title><rect x="95.1555%" y="213" width="1.0813%" height="15" fill="rgb(237,53,41)" fg:x="36082" fg:w="410"/><text x="95.4484%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::new (503 instructions, 1.33%)</title><rect x="95.1344%" y="229" width="1.3265%" height="15" fill="rgb(236,184,40)" fg:x="36074" fg:w="503"/><text x="95.4273%" y="239.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (33 instructions, 0.09%)</title><rect x="96.4688%" y="197" width="0.0870%" height="15" fill="rgb(239,74,52)" fg:x="36580" fg:w="33"/><text x="96.7618%" y="207.50"></text></g><g><title>std::io::Write::write_all (88 instructions, 0.23%)</title><rect x="96.4688%" y="213" width="0.2321%" height="15" fill="rgb(210,20,20)" fg:x="36580" fg:w="88"/><text x="96.7618%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="96.7009%" y="101" width="0.0237%" height="15" fill="rgb(246,45,33)" fg:x="36668" fg:w="9"/><text x="96.9938%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::align_up (9 instructions, 0.02%)</title><rect x="96.7246%" y="101" width="0.0237%" height="15" fill="rgb(222,17,27)" fg:x="36677" fg:w="9"/><text x="97.0176%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_inuse_and_pinuse (14 instructions, 0.04%)</title><rect x="96.7483%" y="101" width="0.0369%" height="15" fill="rgb(222,168,6)" fg:x="36686" fg:w="14"/><text x="97.0413%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (117 instructions, 0.31%)</title><rect x="96.7009%" y="117" width="0.3086%" height="15" fill="rgb(254,101,6)" fg:x="36668" fg:w="117"/><text x="96.9938%" y="127.50"></text></g><g><title>dlmalloc::Dlmalloc&lt;A&gt;::malloc (127 instructions, 0.33%)</title><rect x="96.7009%" y="133" width="0.3349%" height="15" fill="rgb(252,49,46)" fg:x="36668" fg:w="127"/><text x="96.9938%" y="143.50"></text></g><g><title>__rdl_alloc (130 instructions, 0.34%)</title><rect x="96.7009%" y="149" width="0.3428%" height="15" fill="rgb(210,35,1)" fg:x="36668" fg:w="130"/><text x="96.9938%" y="159.50"></text></g><g><title>__rust_alloc (136 instructions, 0.36%)</title><rect x="96.7009%" y="165" width="0.3587%" height="15" fill="rgb(218,179,38)" fg:x="36668" fg:w="136"/><text x="96.9938%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (168 instructions, 0.44%)</title><rect x="96.7009%" y="181" width="0.4430%" height="15" fill="rgb(243,136,1)" fg:x="36668" fg:w="168"/><text x="96.9938%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (235 instructions, 0.62%)</title><rect x="96.7009%" y="197" width="0.6197%" height="15" fill="rgb(253,11,50)" fg:x="36668" fg:w="235"/><text x="96.9938%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::concat (10 instructions, 0.03%)</title><rect x="97.3206%" y="197" width="0.0264%" height="15" fill="rgb(243,174,47)" fg:x="36903" fg:w="10"/><text x="97.6136%" y="207.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.3470%" y="181" width="0.0290%" height="15" fill="rgb(223,128,23)" fg:x="36913" fg:w="11"/><text x="97.6399%" y="191.50"></text></g><g><title>compiler_builtins::mem::memcpy (11 instructions, 0.03%)</title><rect x="97.3865%" y="181" width="0.0290%" height="15" fill="rgb(245,23,25)" fg:x="36928" fg:w="11"/><text x="97.6795%" y="191.50"></text></g><g><title>memcpy (30 instructions, 0.08%)</title><rect x="97.3470%" y="197" width="0.0791%" height="15" fill="rgb(218,224,26)" fg:x="36913" fg:w="30"/><text x="97.6399%" y="207.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (477 instructions, 1.26%)</title><rect x="96.7009%" y="213" width="1.2579%" height="15" fill="rgb(231,25,49)" fg:x="36668" fg:w="477"/><text x="96.9938%" y="223.50"></text></g><g><title>candid::ser::TypeSerialize::get_result (6 instructions, 0.02%)</title><rect x="97.9588%" y="213" width="0.0158%" height="15" fill="rgb(226,117,0)" fg:x="37145" fg:w="6"/><text x="98.2518%" y="223.50"></text></g><g><title>&lt;ic_cdk::api::call::CallReplyWriter as std::io::Write&gt;::write (31 instructions, 0.08%)</title><rect x="97.9746%" y="197" width="0.0818%" height="15" fill="rgb(247,190,22)" fg:x="37151" fg:w="31"/><text x="98.2676%" y="207.50"></text></g><g><title>std::io::Write::write_all (86 instructions, 0.23%)</title><rect x="97.9746%" y="213" width="0.2268%" height="15" fill="rgb(230,121,14)" fg:x="37151" fg:w="86"/><text x="98.2676%" y="223.50"></text></g><g><title>candid::ser::ValueSerializer::get_result (6 instructions, 0.02%)</title><rect x="98.2014%" y="213" width="0.0158%" height="15" fill="rgb(252,172,1)" fg:x="37237" fg:w="6"/><text x="98.4944%" y="223.50"></text></g><g><title>std::io::Write::write_all (15 instructions, 0.04%)</title><rect x="98.2173%" y="213" width="0.0396%" height="15" fill="rgb(208,89,16)" fg:x="37243" fg:w="15"/><text x="98.5102%" y="223.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (757 instructions, 2.00%)</title><rect x="96.4688%" y="229" width="1.9964%" height="15" fill="rgb(249,161,32)" fg:x="36580" fg:w="757"/><text x="96.7618%" y="239.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (14 instructions, 0.04%)</title><rect x="98.4651%" y="229" width="0.0369%" height="15" fill="rgb(227,51,18)" fg:x="37337" fg:w="14"/><text x="98.7581%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.5100%" y="181" width="0.0105%" height="15" fill="rgb(227,139,9)" fg:x="37354" fg:w="4"/><text x="98.8030%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="98.5284%" y="181" width="0.0105%" height="15" fill="rgb(233,151,43)" fg:x="37361" fg:w="4"/><text x="98.8214%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="98.5390%" y="181" width="0.0158%" height="15" fill="rgb(216,131,47)" fg:x="37365" fg:w="6"/><text x="98.8320%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="98.5548%" y="181" width="0.0422%" height="15" fill="rgb(242,22,17)" fg:x="37371" fg:w="16"/><text x="98.8478%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="98.5021%" y="197" width="0.2584%" height="15" fill="rgb(210,210,11)" fg:x="37351" fg:w="98"/><text x="98.7950%" y="207.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="98.5021%" y="213" width="0.2637%" height="15" fill="rgb(227,227,18)" fg:x="37351" fg:w="100"/><text x="98.7950%" y="223.50"></text></g><g><title>__rust_dealloc (105 instructions, 0.28%)</title><rect x="98.5021%" y="229" width="0.2769%" height="15" fill="rgb(241,21,7)" fg:x="37351" fg:w="105"/><text x="98.7950%" y="239.50"></text></g><g><title>candid::utils::write_args (1,458 instructions, 3.85%)</title><rect x="95.1344%" y="245" width="3.8450%" height="15" fill="rgb(240,133,5)" fg:x="36074" fg:w="1458"/><text x="95.4273%" y="255.50">can..</text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="98.9873%" y="197" width="0.0105%" height="15" fill="rgb(212,118,54)" fg:x="37535" fg:w="4"/><text x="99.2803%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="99.0058%" y="197" width="0.0105%" height="15" fill="rgb(223,134,9)" fg:x="37542" fg:w="4"/><text x="99.2987%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.0163%" y="197" width="0.0158%" height="15" fill="rgb(254,13,14)" fg:x="37546" fg:w="6"/><text x="99.3093%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_free_with_pinuse (16 instructions, 0.04%)</title><rect x="99.0321%" y="197" width="0.0422%" height="15" fill="rgb(237,83,13)" fg:x="37552" fg:w="16"/><text x="99.3251%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.26%)</title><rect x="98.9794%" y="213" width="0.2584%" height="15" fill="rgb(234,208,0)" fg:x="37532" fg:w="98"/><text x="99.2724%" y="223.50"></text></g><g><title>__rdl_dealloc (100 instructions, 0.26%)</title><rect x="98.9794%" y="229" width="0.2637%" height="15" fill="rgb(228,71,20)" fg:x="37532" fg:w="100"/><text x="99.2724%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.2642%" y="197" width="0.0105%" height="15" fill="rgb(243,44,20)" fg:x="37640" fg:w="4"/><text x="99.5572%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::pinuse (4 instructions, 0.01%)</title><rect x="99.2827%" y="197" width="0.0105%" height="15" fill="rgb(205,148,48)" fg:x="37647" fg:w="4"/><text x="99.5757%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::mmapped (5 instructions, 0.01%)</title><rect x="99.2932%" y="197" width="0.0132%" height="15" fill="rgb(216,138,50)" fg:x="37651" fg:w="5"/><text x="99.5862%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::cinuse (6 instructions, 0.02%)</title><rect x="99.3143%" y="197" width="0.0158%" height="15" fill="rgb(245,74,42)" fg:x="37659" fg:w="6"/><text x="99.6073%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::size (4 instructions, 0.01%)</title><rect x="99.3302%" y="197" width="0.0105%" height="15" fill="rgb(205,186,41)" fg:x="37665" fg:w="4"/><text x="99.6231%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Chunk::set_size_and_pinuse_of_free_chunk (10 instructions, 0.03%)</title><rect x="99.3407%" y="197" width="0.0264%" height="15" fill="rgb(249,2,26)" fg:x="37669" fg:w="10"/><text x="99.6337%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.51%)</title><rect x="99.2563%" y="213" width="0.5090%" height="15" fill="rgb(219,3,37)" fg:x="37637" fg:w="193"/><text x="99.5493%" y="223.50"></text></g><g><title>__rdl_dealloc (195 instructions, 0.51%)</title><rect x="99.2563%" y="229" width="0.5143%" height="15" fill="rgb(224,223,47)" fg:x="37637" fg:w="195"/><text x="99.5493%" y="239.50"></text></g><g><title>__rust_dealloc (305 instructions, 0.80%)</title><rect x="98.9794%" y="245" width="0.8043%" height="15" fill="rgb(249,181,54)" fg:x="37532" fg:w="305"/><text x="99.2724%" y="255.50"></text></g><g><title>ic_cdk::futures::spawn (37,908 instructions, 99.97%)</title><rect x="0.0211%" y="261" width="99.9710%" height="15" fill="rgb(220,97,10)" fg:x="8" fg:w="37908"/><text x="0.3141%" y="271.50">ic_cdk::futures::spawn</text></g><g><title>all (37,919 instructions, 100%)</title><rect x="0.0000%" y="293" width="100.0000%" height="15" fill="rgb(248,177,6)" fg:x="0" fg:w="37919"/><text x="0.2930%" y="303.50"></text></g><g><title>canister_update batch_remove (37,919 instructions, 100.00%)</title><rect x="0.0000%" y="277" width="100.0000%" height="15" fill="rgb(222,89,28)" fg:x="0" fg:w="37919"/><text x="0.2930%" y="287.50">canister_update batch_remove</text></g></svg></svg>