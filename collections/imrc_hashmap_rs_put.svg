<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="310" onload="init(evt)" viewBox="0 0 1024 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="310" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">imrc_hashmap_rs.batch_put</text><text id="details" fill="rgb(0,0,0)" x="10" y="293.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="293.00"> </text><svg id="frames" x="10" width="1004" total_samples="198252"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="0.0000%" y="229" width="0.0414%" height="15" fill="rgb(254,126,45)" fg:x="0" fg:w="82"/><text x="0.2930%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="0.0414%" y="229" width="0.0414%" height="15" fill="rgb(233,78,49)" fg:x="82" fg:w="82"/><text x="0.3343%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="0.0827%" y="181" width="0.0414%" height="15" fill="rgb(232,149,16)" fg:x="164" fg:w="82"/><text x="0.3757%" y="191.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,139 instructions, 0.57%)</title><rect x="0.0827%" y="197" width="0.5745%" height="15" fill="rgb(226,49,21)" fg:x="164" fg:w="1139"/><text x="0.3757%" y="207.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.03%)</title><rect x="0.6572%" y="165" width="0.0257%" height="15" fill="rgb(248,143,40)" fg:x="1303" fg:w="51"/><text x="0.9502%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.22%)</title><rect x="0.6830%" y="165" width="0.2204%" height="15" fill="rgb(208,14,4)" fg:x="1354" fg:w="437"/><text x="0.9759%" y="175.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="0.9034%" y="165" width="0.0323%" height="15" fill="rgb(237,213,17)" fg:x="1791" fg:w="64"/><text x="1.1964%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.04%)</title><rect x="0.9357%" y="165" width="0.0383%" height="15" fill="rgb(209,91,53)" fg:x="1855" fg:w="76"/><text x="1.2286%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.04%)</title><rect x="0.9740%" y="165" width="0.0383%" height="15" fill="rgb(222,160,3)" fg:x="1931" fg:w="76"/><text x="1.2670%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.04%)</title><rect x="1.0123%" y="165" width="0.0383%" height="15" fill="rgb(205,194,34)" fg:x="2007" fg:w="76"/><text x="1.3053%" y="175.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.04%)</title><rect x="1.0507%" y="165" width="0.0383%" height="15" fill="rgb(207,227,12)" fg:x="2083" fg:w="76"/><text x="1.3437%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.03%)</title><rect x="1.0890%" y="165" width="0.0257%" height="15" fill="rgb(254,17,28)" fg:x="2159" fg:w="51"/><text x="1.3820%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.05%)</title><rect x="1.1147%" y="165" width="0.0479%" height="15" fill="rgb(240,214,38)" fg:x="2210" fg:w="95"/><text x="1.4077%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.22%)</title><rect x="1.1627%" y="165" width="0.2204%" height="15" fill="rgb(220,163,47)" fg:x="2305" fg:w="437"/><text x="1.4556%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="1.3927%" y="133" width="0.0414%" height="15" fill="rgb(235,181,16)" fg:x="2761" fg:w="82"/><text x="1.6856%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.03%)</title><rect x="1.4340%" y="101" width="0.0338%" height="15" fill="rgb(236,166,21)" fg:x="2843" fg:w="67"/><text x="1.7270%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.05%)</title><rect x="1.4340%" y="117" width="0.0484%" height="15" fill="rgb(220,42,31)" fg:x="2843" fg:w="96"/><text x="1.7270%" y="127.50"></text></g><g><title>memcpy (35 instructions, 0.02%)</title><rect x="1.4880%" y="53" width="0.0177%" height="15" fill="rgb(238,71,26)" fg:x="2950" fg:w="35"/><text x="1.7810%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.03%)</title><rect x="1.4880%" y="69" width="0.0323%" height="15" fill="rgb(211,190,46)" fg:x="2950" fg:w="64"/><text x="1.7810%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.07%)</title><rect x="1.4825%" y="85" width="0.0726%" height="15" fill="rgb(236,118,10)" fg:x="2939" fg:w="144"/><text x="1.7754%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.11%)</title><rect x="1.4825%" y="101" width="0.1059%" height="15" fill="rgb(237,156,36)" fg:x="2939" fg:w="210"/><text x="1.7754%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.11%)</title><rect x="1.4825%" y="117" width="0.1110%" height="15" fill="rgb(233,119,16)" fg:x="2939" fg:w="220"/><text x="1.7754%" y="127.50"></text></g><g><title>core::fmt::write (449 instructions, 0.23%)</title><rect x="1.4340%" y="133" width="0.2265%" height="15" fill="rgb(231,195,31)" fg:x="2843" fg:w="449"/><text x="1.7270%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 0.34%)</title><rect x="1.3927%" y="149" width="0.3364%" height="15" fill="rgb(222,221,51)" fg:x="2761" fg:w="667"/><text x="1.6856%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="1.7291%" y="149" width="0.0323%" height="15" fill="rgb(221,10,50)" fg:x="3428" fg:w="64"/><text x="2.0221%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="1.7614%" y="149" width="0.0308%" height="15" fill="rgb(227,173,52)" fg:x="3492" fg:w="61"/><text x="2.0544%" y="159.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 0.46%)</title><rect x="1.3927%" y="165" width="0.4555%" height="15" fill="rgb(238,102,48)" fg:x="2761" fg:w="903"/><text x="1.6856%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.01%)</title><rect x="1.8482%" y="165" width="0.0136%" height="15" fill="rgb(219,130,49)" fg:x="3664" fg:w="27"/><text x="2.1411%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.02%)</title><rect x="1.8618%" y="165" width="0.0232%" height="15" fill="rgb(223,5,6)" fg:x="3691" fg:w="46"/><text x="2.1547%" y="175.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.05%)</title><rect x="1.8850%" y="165" width="0.0479%" height="15" fill="rgb(246,143,48)" fg:x="3737" fg:w="95"/><text x="2.1779%" y="175.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.22%)</title><rect x="1.9329%" y="149" width="0.2204%" height="15" fill="rgb(215,175,1)" fg:x="3832" fg:w="437"/><text x="2.2259%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="2.1629%" y="117" width="0.0414%" height="15" fill="rgb(234,198,51)" fg:x="4288" fg:w="82"/><text x="2.4559%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.03%)</title><rect x="2.2043%" y="85" width="0.0338%" height="15" fill="rgb(218,222,53)" fg:x="4370" fg:w="67"/><text x="2.4972%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.05%)</title><rect x="2.2043%" y="101" width="0.0484%" height="15" fill="rgb(234,110,52)" fg:x="4370" fg:w="96"/><text x="2.4972%" y="111.50"></text></g><g><title>memcpy (35 instructions, 0.02%)</title><rect x="2.2582%" y="37" width="0.0177%" height="15" fill="rgb(205,84,54)" fg:x="4477" fg:w="35"/><text x="2.5512%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.03%)</title><rect x="2.2582%" y="53" width="0.0323%" height="15" fill="rgb(234,101,44)" fg:x="4477" fg:w="64"/><text x="2.5512%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.07%)</title><rect x="2.2527%" y="69" width="0.0726%" height="15" fill="rgb(212,132,17)" fg:x="4466" fg:w="144"/><text x="2.5457%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.11%)</title><rect x="2.2527%" y="85" width="0.1059%" height="15" fill="rgb(237,78,47)" fg:x="4466" fg:w="210"/><text x="2.5457%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.11%)</title><rect x="2.2527%" y="101" width="0.1110%" height="15" fill="rgb(247,206,21)" fg:x="4466" fg:w="220"/><text x="2.5457%" y="111.50"></text></g><g><title>core::fmt::write (449 instructions, 0.23%)</title><rect x="2.2043%" y="117" width="0.2265%" height="15" fill="rgb(253,175,40)" fg:x="4370" fg:w="449"/><text x="2.4972%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 0.34%)</title><rect x="2.1629%" y="133" width="0.3364%" height="15" fill="rgb(239,138,41)" fg:x="4288" fg:w="667"/><text x="2.4559%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="2.4993%" y="133" width="0.0323%" height="15" fill="rgb(207,220,42)" fg:x="4955" fg:w="64"/><text x="2.7923%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="2.5316%" y="133" width="0.0308%" height="15" fill="rgb(207,58,44)" fg:x="5019" fg:w="61"/><text x="2.8246%" y="143.50"></text></g><g><title>binread::binary_template::write_vec (903 instructions, 0.46%)</title><rect x="2.1629%" y="149" width="0.4555%" height="15" fill="rgb(241,118,42)" fg:x="4288" fg:w="903"/><text x="2.4559%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.03%)</title><rect x="2.6184%" y="133" width="0.0257%" height="15" fill="rgb(219,206,2)" fg:x="5191" fg:w="51"/><text x="2.9114%" y="143.50"></text></g><g><title>candid::binary_parser::read_sleb (118 instructions, 0.06%)</title><rect x="2.6441%" y="133" width="0.0595%" height="15" fill="rgb(251,149,17)" fg:x="5242" fg:w="118"/><text x="2.9371%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.02%)</title><rect x="2.7036%" y="133" width="0.0232%" height="15" fill="rgb(244,0,4)" fg:x="5360" fg:w="46"/><text x="2.9966%" y="143.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (283 instructions, 0.14%)</title><rect x="2.6184%" y="149" width="0.1427%" height="15" fill="rgb(238,135,14)" fg:x="5191" fg:w="283"/><text x="2.9114%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="2.7611%" y="149" width="0.0414%" height="15" fill="rgb(220,151,50)" fg:x="5474" fg:w="82"/><text x="3.0541%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,910 instructions, 0.96%)</title><rect x="1.9329%" y="165" width="0.9634%" height="15" fill="rgb(249,194,20)" fg:x="3832" fg:w="1910"/><text x="2.2259%" y="175.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.02%)</title><rect x="2.8963%" y="165" width="0.0232%" height="15" fill="rgb(249,106,29)" fg:x="5742" fg:w="46"/><text x="3.1893%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="2.9311%" y="149" width="0.0414%" height="15" fill="rgb(247,187,14)" fg:x="5811" fg:w="82"/><text x="3.2241%" y="159.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (178 instructions, 0.09%)</title><rect x="2.9311%" y="165" width="0.0898%" height="15" fill="rgb(242,147,15)" fg:x="5811" fg:w="178"/><text x="3.2241%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="3.0209%" y="133" width="0.0414%" height="15" fill="rgb(251,5,52)" fg:x="5989" fg:w="82"/><text x="3.3139%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="3.0209%" y="149" width="0.0620%" height="15" fill="rgb(235,72,38)" fg:x="5989" fg:w="123"/><text x="3.3139%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.11%)</title><rect x="3.0209%" y="165" width="0.1059%" height="15" fill="rgb(228,123,50)" fg:x="5989" fg:w="210"/><text x="3.3139%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="3.1268%" y="165" width="0.0414%" height="15" fill="rgb(224,4,24)" fg:x="6199" fg:w="82"/><text x="3.4198%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="3.1682%" y="165" width="0.0449%" height="15" fill="rgb(240,107,49)" fg:x="6281" fg:w="89"/><text x="3.4612%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.05%)</title><rect x="3.2131%" y="165" width="0.0459%" height="15" fill="rgb(211,147,54)" fg:x="6370" fg:w="91"/><text x="3.5061%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.05%)</title><rect x="3.2590%" y="165" width="0.0459%" height="15" fill="rgb(221,57,23)" fg:x="6461" fg:w="91"/><text x="3.5520%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="3.3074%" y="165" width="0.0449%" height="15" fill="rgb(221,69,50)" fg:x="6557" fg:w="89"/><text x="3.6004%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.20%)</title><rect x="3.3523%" y="165" width="0.1977%" height="15" fill="rgb(250,102,7)" fg:x="6646" fg:w="392"/><text x="3.6453%" y="175.50"></text></g><g><title>memcpy (392 instructions, 0.20%)</title><rect x="3.5500%" y="165" width="0.1977%" height="15" fill="rgb(221,75,19)" fg:x="7038" fg:w="392"/><text x="3.8430%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.25%)</title><rect x="3.7478%" y="165" width="0.2542%" height="15" fill="rgb(220,31,8)" fg:x="7430" fg:w="504"/><text x="4.0407%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (7,875 instructions, 3.97%)</title><rect x="0.6572%" y="181" width="3.9722%" height="15" fill="rgb(243,164,0)" fg:x="1303" fg:w="7875"/><text x="0.9502%" y="191.50">can..</text></g><g><title>memcpy (408 instructions, 0.21%)</title><rect x="4.6295%" y="181" width="0.2058%" height="15" fill="rgb(207,134,8)" fg:x="9178" fg:w="408"/><text x="4.9224%" y="191.50"></text></g><g><title>memcpy (408 instructions, 0.21%)</title><rect x="4.8353%" y="181" width="0.2058%" height="15" fill="rgb(232,51,11)" fg:x="9586" fg:w="408"/><text x="5.1282%" y="191.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.01%)</title><rect x="5.0411%" y="181" width="0.0121%" height="15" fill="rgb(236,57,45)" fg:x="9994" fg:w="24"/><text x="5.3340%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="5.0532%" y="181" width="0.0414%" height="15" fill="rgb(245,13,49)" fg:x="10018" fg:w="82"/><text x="5.3461%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.05%)</title><rect x="5.0945%" y="165" width="0.0459%" height="15" fill="rgb(219,109,50)" fg:x="10100" fg:w="91"/><text x="5.3875%" y="175.50"></text></g><g><title>candid::types::internal::env_add (175 instructions, 0.09%)</title><rect x="5.0945%" y="181" width="0.0883%" height="15" fill="rgb(205,120,51)" fg:x="10100" fg:w="175"/><text x="5.3875%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.05%)</title><rect x="5.1828%" y="181" width="0.0459%" height="15" fill="rgb(208,73,50)" fg:x="10275" fg:w="91"/><text x="5.4758%" y="191.50"></text></g><g><title>memcmp (77 instructions, 0.04%)</title><rect x="5.2287%" y="165" width="0.0388%" height="15" fill="rgb(253,66,52)" fg:x="10366" fg:w="77"/><text x="5.5217%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="5.2675%" y="149" width="0.0449%" height="15" fill="rgb(210,209,9)" fg:x="10443" fg:w="89"/><text x="5.5605%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.08%)</title><rect x="5.2675%" y="165" width="0.0807%" height="15" fill="rgb(209,97,42)" fg:x="10443" fg:w="160"/><text x="5.5605%" y="175.50"></text></g><g><title>candid::types::internal::env_add (416 instructions, 0.21%)</title><rect x="5.2287%" y="181" width="0.2098%" height="15" fill="rgb(208,163,34)" fg:x="10366" fg:w="416"/><text x="5.5217%" y="191.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (49 instructions, 0.02%)</title><rect x="5.4385%" y="165" width="0.0247%" height="15" fill="rgb(218,169,53)" fg:x="10782" fg:w="49"/><text x="5.7315%" y="175.50"></text></g><g><title>candid::types::internal::env_id (200 instructions, 0.10%)</title><rect x="5.4385%" y="181" width="0.1009%" height="15" fill="rgb(207,3,43)" fg:x="10782" fg:w="200"/><text x="5.7315%" y="191.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.02%)</title><rect x="5.5394%" y="181" width="0.0247%" height="15" fill="rgb(234,33,32)" fg:x="10982" fg:w="49"/><text x="5.8324%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.04%)</title><rect x="5.5641%" y="165" width="0.0419%" height="15" fill="rgb(211,166,54)" fg:x="11031" fg:w="83"/><text x="5.8571%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.01%)</title><rect x="5.6418%" y="149" width="0.0116%" height="15" fill="rgb(205,104,44)" fg:x="11185" fg:w="23"/><text x="5.9348%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.07%)</title><rect x="5.6418%" y="165" width="0.0696%" height="15" fill="rgb(242,122,33)" fg:x="11185" fg:w="138"/><text x="5.9348%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (363 instructions, 0.18%)</title><rect x="5.5641%" y="181" width="0.1831%" height="15" fill="rgb(205,179,47)" fg:x="11031" fg:w="363"/><text x="5.8571%" y="191.50"></text></g><g><title>candid::de::Deserializer::unroll_type (37 instructions, 0.02%)</title><rect x="5.7472%" y="165" width="0.0187%" height="15" fill="rgb(206,142,17)" fg:x="11394" fg:w="37"/><text x="6.0402%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1370 (34 instructions, 0.02%)</title><rect x="5.7659%" y="165" width="0.0171%" height="15" fill="rgb(208,170,54)" fg:x="11431" fg:w="34"/><text x="6.0589%" y="175.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1370 (34 instructions, 0.02%)</title><rect x="5.7830%" y="165" width="0.0171%" height="15" fill="rgb(209,124,3)" fg:x="11465" fg:w="34"/><text x="6.0760%" y="175.50"></text></g><g><title>candid::de::Deserializer::add_cost (31 instructions, 0.02%)</title><rect x="5.8002%" y="165" width="0.0156%" height="15" fill="rgb(239,209,19)" fg:x="11499" fg:w="31"/><text x="6.0932%" y="175.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u32&gt;::deserialize (261 instructions, 0.13%)</title><rect x="5.7472%" y="181" width="0.1317%" height="15" fill="rgb(244,208,51)" fg:x="11394" fg:w="261"/><text x="6.0402%" y="191.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.02%)</title><rect x="5.9001%" y="181" width="0.0187%" height="15" fill="rgb(211,127,30)" fg:x="11697" fg:w="37"/><text x="6.1930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="5.9228%" y="149" width="0.0136%" height="15" fill="rgb(252,29,2)" fg:x="11742" fg:w="27"/><text x="6.2157%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (116 instructions, 0.06%)</title><rect x="5.9228%" y="165" width="0.0585%" height="15" fill="rgb(247,44,44)" fg:x="11742" fg:w="116"/><text x="6.2157%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="5.9813%" y="149" width="0.0308%" height="15" fill="rgb(212,155,16)" fg:x="11858" fg:w="61"/><text x="6.2742%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (132 instructions, 0.07%)</title><rect x="5.9813%" y="165" width="0.0666%" height="15" fill="rgb(232,147,13)" fg:x="11858" fg:w="132"/><text x="6.2742%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (367 instructions, 0.19%)</title><rect x="5.9187%" y="181" width="0.1851%" height="15" fill="rgb(247,91,7)" fg:x="11734" fg:w="367"/><text x="6.2117%" y="191.50"></text></g><g><title>candid::utils::decode_args_with_config_debug (11,230 instructions, 5.66%)</title><rect x="0.6572%" y="197" width="5.6645%" height="15" fill="rgb(219,80,32)" fg:x="1303" fg:w="11230"/><text x="0.9502%" y="207.50">candid..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="6.3218%" y="197" width="0.0308%" height="15" fill="rgb(237,46,35)" fg:x="12533" fg:w="61"/><text x="6.6147%" y="207.50"></text></g><g><title>ic_cdk::api::call::arg_data (12,537 instructions, 6.32%)</title><rect x="0.0827%" y="213" width="6.3238%" height="15" fill="rgb(243,43,52)" fg:x="164" fg:w="12537"/><text x="0.3757%" y="223.50">ic_cdk:..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="6.4065%" y="197" width="0.0989%" height="15" fill="rgb(246,2,20)" fg:x="12701" fg:w="196"/><text x="6.6995%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="6.5054%" y="181" width="0.0177%" height="15" fill="rgb(209,192,21)" fg:x="12897" fg:w="35"/><text x="6.7983%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="6.5230%" y="181" width="0.0177%" height="15" fill="rgb(217,13,51)" fg:x="12932" fg:w="35"/><text x="6.8160%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="6.5407%" y="181" width="0.0177%" height="15" fill="rgb(220,225,14)" fg:x="12967" fg:w="35"/><text x="6.8336%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="6.5583%" y="165" width="1.5939%" height="15" fill="rgb(248,125,19)" fg:x="13002" fg:w="3160"/><text x="6.8513%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="6.5583%" y="181" width="1.6439%" height="15" fill="rgb(211,47,2)" fg:x="13002" fg:w="3259"/><text x="6.8513%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="8.2022%" y="181" width="0.0353%" height="15" fill="rgb(218,150,18)" fg:x="16261" fg:w="70"/><text x="8.4952%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="8.2375%" y="181" width="1.5939%" height="15" fill="rgb(224,112,21)" fg:x="16331" fg:w="3160"/><text x="8.5305%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="6.5054%" y="197" width="3.4653%" height="15" fill="rgb(221,44,0)" fg:x="12897" fg:w="6870"/><text x="6.7983%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="10.0060%" y="197" width="0.0989%" height="15" fill="rgb(238,159,14)" fg:x="19837" fg:w="196"/><text x="10.2989%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="10.1048%" y="181" width="0.0177%" height="15" fill="rgb(249,64,50)" fg:x="20033" fg:w="35"/><text x="10.3978%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="10.1225%" y="181" width="0.0177%" height="15" fill="rgb(218,80,1)" fg:x="20068" fg:w="35"/><text x="10.4154%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="10.1401%" y="181" width="0.0177%" height="15" fill="rgb(245,31,51)" fg:x="20103" fg:w="35"/><text x="10.4331%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="10.1578%" y="149" width="1.5939%" height="15" fill="rgb(212,103,8)" fg:x="20138" fg:w="3160"/><text x="10.4507%" y="159.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="10.1578%" y="165" width="1.6439%" height="15" fill="rgb(220,150,54)" fg:x="20138" fg:w="3259"/><text x="10.4507%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="11.8016%" y="165" width="0.0353%" height="15" fill="rgb(224,225,51)" fg:x="23397" fg:w="70"/><text x="12.0946%" y="175.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="11.8370%" y="165" width="1.5939%" height="15" fill="rgb(241,0,25)" fg:x="23467" fg:w="3160"/><text x="12.1299%" y="175.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="13.4309%" y="165" width="1.5939%" height="15" fill="rgb(227,127,53)" fg:x="26627" fg:w="3160"/><text x="13.7239%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (9,758 instructions, 4.92%)</title><rect x="10.1578%" y="181" width="4.9220%" height="15" fill="rgb(224,38,0)" fg:x="20138" fg:w="9758"/><text x="10.4507%" y="191.50">im_rc..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="15.0798%" y="181" width="0.0353%" height="15" fill="rgb(224,17,17)" fg:x="29896" fg:w="70"/><text x="15.3728%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="15.1151%" y="181" width="1.5939%" height="15" fill="rgb(215,7,7)" fg:x="29966" fg:w="3160"/><text x="15.4081%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (13,369 instructions, 6.74%)</title><rect x="10.1048%" y="197" width="6.7434%" height="15" fill="rgb(239,212,17)" fg:x="20033" fg:w="13369"/><text x="10.3978%" y="207.50">im_rc::..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="16.8836%" y="197" width="0.0989%" height="15" fill="rgb(213,5,50)" fg:x="33472" fg:w="196"/><text x="17.1765%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="16.9824%" y="181" width="0.0177%" height="15" fill="rgb(215,12,47)" fg:x="33668" fg:w="35"/><text x="17.2754%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="17.0001%" y="181" width="0.0177%" height="15" fill="rgb(211,152,45)" fg:x="33703" fg:w="35"/><text x="17.2930%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="17.0177%" y="181" width="0.0177%" height="15" fill="rgb(219,214,47)" fg:x="33738" fg:w="35"/><text x="17.3107%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="17.0354%" y="165" width="1.5939%" height="15" fill="rgb(222,105,52)" fg:x="33773" fg:w="3160"/><text x="17.3284%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="17.0354%" y="181" width="1.6439%" height="15" fill="rgb(245,106,35)" fg:x="33773" fg:w="3259"/><text x="17.3284%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="18.6793%" y="181" width="0.0353%" height="15" fill="rgb(235,79,22)" fg:x="37032" fg:w="70"/><text x="18.9722%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="18.7146%" y="181" width="1.5939%" height="15" fill="rgb(224,117,19)" fg:x="37102" fg:w="3160"/><text x="19.0075%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="16.9824%" y="197" width="3.4653%" height="15" fill="rgb(217,25,40)" fg:x="33668" fg:w="6870"/><text x="17.2754%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="20.4830%" y="197" width="0.0989%" height="15" fill="rgb(224,1,5)" fg:x="40608" fg:w="196"/><text x="20.7760%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="20.5819%" y="181" width="0.0177%" height="15" fill="rgb(244,10,7)" fg:x="40804" fg:w="35"/><text x="20.8749%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="20.5995%" y="181" width="0.0177%" height="15" fill="rgb(239,40,44)" fg:x="40839" fg:w="35"/><text x="20.8925%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="20.6172%" y="181" width="0.0177%" height="15" fill="rgb(233,174,1)" fg:x="40874" fg:w="35"/><text x="20.9102%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="20.6348%" y="165" width="1.5939%" height="15" fill="rgb(251,152,10)" fg:x="40909" fg:w="3160"/><text x="20.9278%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="20.6348%" y="181" width="1.6439%" height="15" fill="rgb(249,137,8)" fg:x="40909" fg:w="3259"/><text x="20.9278%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="22.2787%" y="181" width="0.0353%" height="15" fill="rgb(229,117,30)" fg:x="44168" fg:w="70"/><text x="22.5717%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="22.3140%" y="181" width="1.5939%" height="15" fill="rgb(235,81,36)" fg:x="44238" fg:w="3160"/><text x="22.6070%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="20.5819%" y="197" width="3.4653%" height="15" fill="rgb(222,126,5)" fg:x="40804" fg:w="6870"/><text x="20.8749%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="24.0825%" y="197" width="0.0989%" height="15" fill="rgb(227,145,9)" fg:x="47744" fg:w="196"/><text x="24.3754%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.1813%" y="181" width="0.0177%" height="15" fill="rgb(228,121,20)" fg:x="47940" fg:w="35"/><text x="24.4743%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.1990%" y="181" width="0.0177%" height="15" fill="rgb(228,84,15)" fg:x="47975" fg:w="35"/><text x="24.4920%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.2167%" y="181" width="0.0177%" height="15" fill="rgb(215,12,21)" fg:x="48010" fg:w="35"/><text x="24.5096%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.2343%" y="181" width="0.0177%" height="15" fill="rgb(219,181,15)" fg:x="48045" fg:w="35"/><text x="24.5273%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="24.1813%" y="197" width="0.2018%" height="15" fill="rgb(208,103,25)" fg:x="47940" fg:w="400"/><text x="24.4743%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="24.4184%" y="197" width="0.0989%" height="15" fill="rgb(242,229,24)" fg:x="48410" fg:w="196"/><text x="24.7114%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.5173%" y="181" width="0.0177%" height="15" fill="rgb(243,80,34)" fg:x="48606" fg:w="35"/><text x="24.8102%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.5349%" y="181" width="0.0177%" height="15" fill="rgb(214,175,33)" fg:x="48641" fg:w="35"/><text x="24.8279%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.5526%" y="181" width="0.0177%" height="15" fill="rgb(231,140,33)" fg:x="48676" fg:w="35"/><text x="24.8456%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="24.5173%" y="197" width="0.1594%" height="15" fill="rgb(223,72,5)" fg:x="48606" fg:w="316"/><text x="24.8102%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="24.7120%" y="197" width="0.0989%" height="15" fill="rgb(209,120,40)" fg:x="48992" fg:w="196"/><text x="25.0050%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.8108%" y="181" width="0.0177%" height="15" fill="rgb(247,188,26)" fg:x="49188" fg:w="35"/><text x="25.1038%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.8285%" y="181" width="0.0177%" height="15" fill="rgb(243,79,41)" fg:x="49223" fg:w="35"/><text x="25.1215%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="24.8462%" y="181" width="0.0177%" height="15" fill="rgb(216,46,26)" fg:x="49258" fg:w="35"/><text x="25.1391%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="24.8638%" y="165" width="1.5939%" height="15" fill="rgb(222,181,15)" fg:x="49293" fg:w="3160"/><text x="25.1568%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="24.8638%" y="181" width="1.6439%" height="15" fill="rgb(219,210,14)" fg:x="49293" fg:w="3259"/><text x="25.1568%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="26.5077%" y="181" width="0.0353%" height="15" fill="rgb(254,12,43)" fg:x="52552" fg:w="70"/><text x="26.8006%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="26.5430%" y="181" width="1.5939%" height="15" fill="rgb(249,49,28)" fg:x="52622" fg:w="3160"/><text x="26.8360%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="24.8108%" y="197" width="3.4653%" height="15" fill="rgb(241,196,22)" fg:x="49188" fg:w="6870"/><text x="25.1038%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="28.3114%" y="197" width="0.0989%" height="15" fill="rgb(205,103,30)" fg:x="56128" fg:w="196"/><text x="28.6044%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="28.4103%" y="181" width="0.0177%" height="15" fill="rgb(207,163,12)" fg:x="56324" fg:w="35"/><text x="28.7033%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="28.4280%" y="181" width="0.0177%" height="15" fill="rgb(248,8,0)" fg:x="56359" fg:w="35"/><text x="28.7209%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="28.4456%" y="181" width="0.0177%" height="15" fill="rgb(224,76,36)" fg:x="56394" fg:w="35"/><text x="28.7386%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="28.4633%" y="165" width="1.5939%" height="15" fill="rgb(248,166,23)" fg:x="56429" fg:w="3160"/><text x="28.7562%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="28.4633%" y="181" width="1.6439%" height="15" fill="rgb(249,188,37)" fg:x="56429" fg:w="3259"/><text x="28.7562%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="30.1071%" y="181" width="0.0353%" height="15" fill="rgb(225,179,43)" fg:x="59688" fg:w="70"/><text x="30.4001%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="30.1424%" y="181" width="1.5939%" height="15" fill="rgb(246,49,8)" fg:x="59758" fg:w="3160"/><text x="30.4354%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="28.4103%" y="197" width="3.4653%" height="15" fill="rgb(231,229,28)" fg:x="56324" fg:w="6870"/><text x="28.7033%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="31.9109%" y="197" width="0.0989%" height="15" fill="rgb(225,190,31)" fg:x="63264" fg:w="196"/><text x="32.2039%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.0098%" y="181" width="0.0177%" height="15" fill="rgb(250,182,8)" fg:x="63460" fg:w="35"/><text x="32.3027%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.0274%" y="181" width="0.0177%" height="15" fill="rgb(215,168,17)" fg:x="63495" fg:w="35"/><text x="32.3204%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.0451%" y="181" width="0.0177%" height="15" fill="rgb(244,72,42)" fg:x="63530" fg:w="35"/><text x="32.3380%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="32.0098%" y="197" width="0.1594%" height="15" fill="rgb(246,187,0)" fg:x="63460" fg:w="316"/><text x="32.3027%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="32.2045%" y="197" width="0.0989%" height="15" fill="rgb(223,129,30)" fg:x="63846" fg:w="196"/><text x="32.4974%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.3033%" y="181" width="0.0177%" height="15" fill="rgb(206,213,1)" fg:x="64042" fg:w="35"/><text x="32.5963%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.3210%" y="181" width="0.0177%" height="15" fill="rgb(211,147,25)" fg:x="64077" fg:w="35"/><text x="32.6140%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="32.3386%" y="181" width="0.0177%" height="15" fill="rgb(232,221,47)" fg:x="64112" fg:w="35"/><text x="32.6316%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="32.3563%" y="165" width="1.5939%" height="15" fill="rgb(231,164,7)" fg:x="64147" fg:w="3160"/><text x="32.6493%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="32.3563%" y="181" width="1.6439%" height="15" fill="rgb(210,2,17)" fg:x="64147" fg:w="3259"/><text x="32.6493%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="34.0002%" y="181" width="0.0353%" height="15" fill="rgb(238,74,18)" fg:x="67406" fg:w="70"/><text x="34.2931%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="34.0355%" y="181" width="1.5939%" height="15" fill="rgb(241,144,34)" fg:x="67476" fg:w="3160"/><text x="34.3284%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="32.3033%" y="197" width="3.4653%" height="15" fill="rgb(241,223,35)" fg:x="64042" fg:w="6870"/><text x="32.5963%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="35.8039%" y="197" width="0.0989%" height="15" fill="rgb(222,8,15)" fg:x="70982" fg:w="196"/><text x="36.0969%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="35.9028%" y="181" width="0.0177%" height="15" fill="rgb(207,44,36)" fg:x="71178" fg:w="35"/><text x="36.1958%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="35.9204%" y="181" width="0.0177%" height="15" fill="rgb(205,187,26)" fg:x="71213" fg:w="35"/><text x="36.2134%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="35.9381%" y="181" width="0.0177%" height="15" fill="rgb(217,40,42)" fg:x="71248" fg:w="35"/><text x="36.2311%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="35.9028%" y="197" width="0.1594%" height="15" fill="rgb(235,16,49)" fg:x="71178" fg:w="316"/><text x="36.1958%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="36.0975%" y="197" width="0.0989%" height="15" fill="rgb(222,205,52)" fg:x="71564" fg:w="196"/><text x="36.3905%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="36.1964%" y="181" width="0.0177%" height="15" fill="rgb(214,157,14)" fg:x="71760" fg:w="35"/><text x="36.4893%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="36.2140%" y="181" width="0.0177%" height="15" fill="rgb(238,93,43)" fg:x="71795" fg:w="35"/><text x="36.5070%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="36.2317%" y="181" width="0.0177%" height="15" fill="rgb(222,112,54)" fg:x="71830" fg:w="35"/><text x="36.5246%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="36.2493%" y="165" width="1.5939%" height="15" fill="rgb(237,207,26)" fg:x="71865" fg:w="3160"/><text x="36.5423%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="36.2493%" y="181" width="1.6439%" height="15" fill="rgb(252,166,46)" fg:x="71865" fg:w="3259"/><text x="36.5423%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="37.8932%" y="181" width="0.0353%" height="15" fill="rgb(205,147,36)" fg:x="75124" fg:w="70"/><text x="38.1862%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="37.9285%" y="181" width="1.5939%" height="15" fill="rgb(212,89,3)" fg:x="75194" fg:w="3160"/><text x="38.2215%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="36.1964%" y="197" width="3.4653%" height="15" fill="rgb(250,118,35)" fg:x="71760" fg:w="6870"/><text x="36.4893%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="39.6970%" y="197" width="0.0989%" height="15" fill="rgb(253,213,16)" fg:x="78700" fg:w="196"/><text x="39.9899%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="39.7958%" y="181" width="0.0177%" height="15" fill="rgb(221,203,2)" fg:x="78896" fg:w="35"/><text x="40.0888%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="39.8135%" y="181" width="0.0177%" height="15" fill="rgb(239,128,7)" fg:x="78931" fg:w="35"/><text x="40.1064%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="39.8311%" y="181" width="0.0177%" height="15" fill="rgb(219,53,16)" fg:x="78966" fg:w="35"/><text x="40.1241%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="39.7958%" y="197" width="0.1594%" height="15" fill="rgb(239,139,9)" fg:x="78896" fg:w="316"/><text x="40.0888%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="39.9905%" y="197" width="0.0989%" height="15" fill="rgb(218,156,28)" fg:x="79282" fg:w="196"/><text x="40.2835%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="40.0894%" y="181" width="0.0177%" height="15" fill="rgb(206,161,11)" fg:x="79478" fg:w="35"/><text x="40.3823%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="40.1070%" y="181" width="0.0177%" height="15" fill="rgb(248,204,4)" fg:x="79513" fg:w="35"/><text x="40.4000%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="40.1247%" y="181" width="0.0177%" height="15" fill="rgb(222,128,5)" fg:x="79548" fg:w="35"/><text x="40.4177%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="40.1423%" y="165" width="1.5939%" height="15" fill="rgb(213,209,18)" fg:x="79583" fg:w="3160"/><text x="40.4353%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="40.1423%" y="181" width="1.6439%" height="15" fill="rgb(231,173,38)" fg:x="79583" fg:w="3259"/><text x="40.4353%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="41.7862%" y="181" width="0.0353%" height="15" fill="rgb(251,177,6)" fg:x="82842" fg:w="70"/><text x="42.0792%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="41.8215%" y="181" width="1.5939%" height="15" fill="rgb(225,44,27)" fg:x="82912" fg:w="3160"/><text x="42.1145%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="40.0894%" y="197" width="3.4653%" height="15" fill="rgb(215,144,10)" fg:x="79478" fg:w="6870"/><text x="40.3823%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="43.5900%" y="197" width="0.0989%" height="15" fill="rgb(234,143,30)" fg:x="86418" fg:w="196"/><text x="43.8829%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="43.6888%" y="181" width="0.0177%" height="15" fill="rgb(253,42,26)" fg:x="86614" fg:w="35"/><text x="43.9818%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="43.7065%" y="181" width="0.0177%" height="15" fill="rgb(213,117,16)" fg:x="86649" fg:w="35"/><text x="43.9995%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="43.7241%" y="181" width="0.0177%" height="15" fill="rgb(254,210,13)" fg:x="86684" fg:w="35"/><text x="44.0171%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="43.7418%" y="181" width="0.0177%" height="15" fill="rgb(244,17,39)" fg:x="86719" fg:w="35"/><text x="44.0348%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="43.6888%" y="197" width="0.2018%" height="15" fill="rgb(211,49,53)" fg:x="86614" fg:w="400"/><text x="43.9818%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="43.9259%" y="197" width="0.0989%" height="15" fill="rgb(228,198,29)" fg:x="87084" fg:w="196"/><text x="44.2189%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.0248%" y="181" width="0.0177%" height="15" fill="rgb(223,221,32)" fg:x="87280" fg:w="35"/><text x="44.3177%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.0424%" y="181" width="0.0177%" height="15" fill="rgb(211,8,27)" fg:x="87315" fg:w="35"/><text x="44.3354%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.0601%" y="181" width="0.0177%" height="15" fill="rgb(254,55,39)" fg:x="87350" fg:w="35"/><text x="44.3531%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="44.0248%" y="197" width="0.1594%" height="15" fill="rgb(213,173,29)" fg:x="87280" fg:w="316"/><text x="44.3177%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="44.2195%" y="197" width="0.0989%" height="15" fill="rgb(215,147,1)" fg:x="87666" fg:w="196"/><text x="44.5124%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.3183%" y="181" width="0.0177%" height="15" fill="rgb(219,59,0)" fg:x="87862" fg:w="35"/><text x="44.6113%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.3360%" y="181" width="0.0177%" height="15" fill="rgb(243,45,37)" fg:x="87897" fg:w="35"/><text x="44.6290%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.3537%" y="181" width="0.0177%" height="15" fill="rgb(222,132,4)" fg:x="87932" fg:w="35"/><text x="44.6466%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="44.3183%" y="197" width="0.1594%" height="15" fill="rgb(214,94,23)" fg:x="87862" fg:w="316"/><text x="44.6113%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="44.5130%" y="197" width="0.0989%" height="15" fill="rgb(221,21,18)" fg:x="88248" fg:w="196"/><text x="44.8060%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.6119%" y="181" width="0.0177%" height="15" fill="rgb(238,154,31)" fg:x="88444" fg:w="35"/><text x="44.9049%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.6296%" y="181" width="0.0177%" height="15" fill="rgb(208,25,39)" fg:x="88479" fg:w="35"/><text x="44.9225%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="44.6472%" y="181" width="0.0177%" height="15" fill="rgb(243,206,15)" fg:x="88514" fg:w="35"/><text x="44.9402%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="44.6649%" y="165" width="1.5939%" height="15" fill="rgb(212,9,8)" fg:x="88549" fg:w="3160"/><text x="44.9578%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="44.6649%" y="181" width="1.6439%" height="15" fill="rgb(238,194,54)" fg:x="88549" fg:w="3259"/><text x="44.9578%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="46.3087%" y="181" width="0.0353%" height="15" fill="rgb(212,113,36)" fg:x="91808" fg:w="70"/><text x="46.6017%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="46.3440%" y="181" width="1.5939%" height="15" fill="rgb(234,121,45)" fg:x="91878" fg:w="3160"/><text x="46.6370%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="44.6119%" y="197" width="3.4653%" height="15" fill="rgb(220,69,8)" fg:x="88444" fg:w="6870"/><text x="44.9049%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="48.1125%" y="197" width="0.0989%" height="15" fill="rgb(210,206,46)" fg:x="95384" fg:w="196"/><text x="48.4055%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.2114%" y="181" width="0.0177%" height="15" fill="rgb(242,217,3)" fg:x="95580" fg:w="35"/><text x="48.5043%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.2290%" y="181" width="0.0177%" height="15" fill="rgb(208,75,50)" fg:x="95615" fg:w="35"/><text x="48.5220%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.2467%" y="181" width="0.0177%" height="15" fill="rgb(244,224,34)" fg:x="95650" fg:w="35"/><text x="48.5396%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="48.2114%" y="197" width="0.1594%" height="15" fill="rgb(217,188,29)" fg:x="95580" fg:w="316"/><text x="48.5043%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="48.4061%" y="197" width="0.0989%" height="15" fill="rgb(217,45,5)" fg:x="95966" fg:w="196"/><text x="48.6990%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.5049%" y="181" width="0.0177%" height="15" fill="rgb(251,165,53)" fg:x="96162" fg:w="35"/><text x="48.7979%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.5226%" y="181" width="0.0177%" height="15" fill="rgb(232,94,13)" fg:x="96197" fg:w="35"/><text x="48.8156%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.5402%" y="181" width="0.0177%" height="15" fill="rgb(253,142,46)" fg:x="96232" fg:w="35"/><text x="48.8332%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.5579%" y="181" width="0.0177%" height="15" fill="rgb(247,34,38)" fg:x="96267" fg:w="35"/><text x="48.8509%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="48.5049%" y="197" width="0.2018%" height="15" fill="rgb(208,183,12)" fg:x="96162" fg:w="400"/><text x="48.7979%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="48.7420%" y="197" width="0.0989%" height="15" fill="rgb(252,101,28)" fg:x="96632" fg:w="196"/><text x="49.0350%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.8409%" y="181" width="0.0177%" height="15" fill="rgb(240,72,14)" fg:x="96828" fg:w="35"/><text x="49.1338%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.8585%" y="181" width="0.0177%" height="15" fill="rgb(253,28,49)" fg:x="96863" fg:w="35"/><text x="49.1515%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="48.8762%" y="181" width="0.0177%" height="15" fill="rgb(246,75,46)" fg:x="96898" fg:w="35"/><text x="49.1691%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="48.8938%" y="165" width="1.5939%" height="15" fill="rgb(235,157,54)" fg:x="96933" fg:w="3160"/><text x="49.1868%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="48.8938%" y="181" width="1.6439%" height="15" fill="rgb(247,138,18)" fg:x="96933" fg:w="3259"/><text x="49.1868%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="50.5377%" y="181" width="0.0353%" height="15" fill="rgb(236,112,7)" fg:x="100192" fg:w="70"/><text x="50.8307%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="50.5730%" y="181" width="1.5939%" height="15" fill="rgb(223,151,48)" fg:x="100262" fg:w="3160"/><text x="50.8660%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="48.8409%" y="197" width="3.4653%" height="15" fill="rgb(218,18,33)" fg:x="96828" fg:w="6870"/><text x="49.1338%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="52.3415%" y="197" width="0.0989%" height="15" fill="rgb(218,105,53)" fg:x="103768" fg:w="196"/><text x="52.6344%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="52.4403%" y="181" width="0.0177%" height="15" fill="rgb(213,187,30)" fg:x="103964" fg:w="35"/><text x="52.7333%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="52.4580%" y="181" width="0.0177%" height="15" fill="rgb(214,204,13)" fg:x="103999" fg:w="35"/><text x="52.7510%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="52.4756%" y="181" width="0.0177%" height="15" fill="rgb(227,80,41)" fg:x="104034" fg:w="35"/><text x="52.7686%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="52.4933%" y="165" width="1.5939%" height="15" fill="rgb(254,129,50)" fg:x="104069" fg:w="3160"/><text x="52.7863%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="52.4933%" y="181" width="1.6439%" height="15" fill="rgb(212,129,32)" fg:x="104069" fg:w="3259"/><text x="52.7863%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="54.1372%" y="181" width="0.0353%" height="15" fill="rgb(240,153,20)" fg:x="107328" fg:w="70"/><text x="54.4301%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="54.1725%" y="181" width="1.5939%" height="15" fill="rgb(222,181,46)" fg:x="107398" fg:w="3160"/><text x="54.4654%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="52.4403%" y="197" width="3.4653%" height="15" fill="rgb(248,68,52)" fg:x="103964" fg:w="6870"/><text x="52.7333%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="55.9409%" y="197" width="0.0989%" height="15" fill="rgb(206,162,2)" fg:x="110904" fg:w="196"/><text x="56.2339%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.0398%" y="181" width="0.0177%" height="15" fill="rgb(251,168,37)" fg:x="111100" fg:w="35"/><text x="56.3328%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.0574%" y="181" width="0.0177%" height="15" fill="rgb(251,91,10)" fg:x="111135" fg:w="35"/><text x="56.3504%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.0751%" y="181" width="0.0177%" height="15" fill="rgb(217,59,29)" fg:x="111170" fg:w="35"/><text x="56.3681%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.0928%" y="181" width="0.0177%" height="15" fill="rgb(243,130,24)" fg:x="111205" fg:w="35"/><text x="56.3857%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="56.0398%" y="197" width="0.2018%" height="15" fill="rgb(225,210,28)" fg:x="111100" fg:w="400"/><text x="56.3328%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="56.2769%" y="197" width="0.0989%" height="15" fill="rgb(222,103,7)" fg:x="111570" fg:w="196"/><text x="56.5698%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.3757%" y="181" width="0.0177%" height="15" fill="rgb(240,76,31)" fg:x="111766" fg:w="35"/><text x="56.6687%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.3934%" y="181" width="0.0177%" height="15" fill="rgb(222,192,8)" fg:x="111801" fg:w="35"/><text x="56.6863%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.4110%" y="181" width="0.0177%" height="15" fill="rgb(222,163,41)" fg:x="111836" fg:w="35"/><text x="56.7040%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.4287%" y="181" width="0.0177%" height="15" fill="rgb(234,24,36)" fg:x="111871" fg:w="35"/><text x="56.7217%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="56.3757%" y="197" width="0.2018%" height="15" fill="rgb(224,222,13)" fg:x="111766" fg:w="400"/><text x="56.6687%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="56.6128%" y="197" width="0.0989%" height="15" fill="rgb(229,140,32)" fg:x="112236" fg:w="196"/><text x="56.9058%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.7117%" y="181" width="0.0177%" height="15" fill="rgb(252,204,3)" fg:x="112432" fg:w="35"/><text x="57.0046%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.7293%" y="181" width="0.0177%" height="15" fill="rgb(212,152,33)" fg:x="112467" fg:w="35"/><text x="57.0223%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="56.7470%" y="181" width="0.0177%" height="15" fill="rgb(251,20,2)" fg:x="112502" fg:w="35"/><text x="57.0399%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="56.7646%" y="165" width="1.5939%" height="15" fill="rgb(212,15,37)" fg:x="112537" fg:w="3160"/><text x="57.0576%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="56.7646%" y="181" width="1.6439%" height="15" fill="rgb(242,69,29)" fg:x="112537" fg:w="3259"/><text x="57.0576%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="58.4085%" y="181" width="0.0353%" height="15" fill="rgb(240,201,1)" fg:x="115796" fg:w="70"/><text x="58.7015%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="58.4438%" y="181" width="1.5939%" height="15" fill="rgb(227,93,44)" fg:x="115866" fg:w="3160"/><text x="58.7368%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="56.7117%" y="197" width="3.4653%" height="15" fill="rgb(205,126,24)" fg:x="112432" fg:w="6870"/><text x="57.0046%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="60.2123%" y="197" width="0.0989%" height="15" fill="rgb(244,135,13)" fg:x="119372" fg:w="196"/><text x="60.5052%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.3111%" y="181" width="0.0177%" height="15" fill="rgb(213,172,47)" fg:x="119568" fg:w="35"/><text x="60.6041%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.3288%" y="181" width="0.0177%" height="15" fill="rgb(214,200,24)" fg:x="119603" fg:w="35"/><text x="60.6217%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.3464%" y="181" width="0.0177%" height="15" fill="rgb(234,186,21)" fg:x="119638" fg:w="35"/><text x="60.6394%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.3641%" y="181" width="0.0177%" height="15" fill="rgb(251,61,25)" fg:x="119673" fg:w="35"/><text x="60.6571%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="60.3111%" y="197" width="0.2018%" height="15" fill="rgb(214,147,30)" fg:x="119568" fg:w="400"/><text x="60.6041%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="60.5482%" y="197" width="0.0989%" height="15" fill="rgb(241,18,17)" fg:x="120038" fg:w="196"/><text x="60.8412%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.6471%" y="181" width="0.0177%" height="15" fill="rgb(250,130,10)" fg:x="120234" fg:w="35"/><text x="60.9400%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.6647%" y="181" width="0.0177%" height="15" fill="rgb(238,104,2)" fg:x="120269" fg:w="35"/><text x="60.9577%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="60.6824%" y="181" width="0.0177%" height="15" fill="rgb(220,172,26)" fg:x="120304" fg:w="35"/><text x="60.9753%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="60.7000%" y="165" width="1.5939%" height="15" fill="rgb(208,17,27)" fg:x="120339" fg:w="3160"/><text x="60.9930%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="60.7000%" y="181" width="1.6439%" height="15" fill="rgb(208,150,19)" fg:x="120339" fg:w="3259"/><text x="60.9930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="62.3439%" y="181" width="0.0353%" height="15" fill="rgb(226,171,34)" fg:x="123598" fg:w="70"/><text x="62.6369%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="62.3792%" y="181" width="1.5939%" height="15" fill="rgb(244,24,50)" fg:x="123668" fg:w="3160"/><text x="62.6722%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="60.6471%" y="197" width="3.4653%" height="15" fill="rgb(225,203,21)" fg:x="120234" fg:w="6870"/><text x="60.9400%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="64.1477%" y="197" width="0.0989%" height="15" fill="rgb(216,195,21)" fg:x="127174" fg:w="196"/><text x="64.4406%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="64.2465%" y="181" width="0.0177%" height="15" fill="rgb(206,23,31)" fg:x="127370" fg:w="35"/><text x="64.5395%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="64.2642%" y="181" width="0.0177%" height="15" fill="rgb(242,180,13)" fg:x="127405" fg:w="35"/><text x="64.5571%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="64.2818%" y="181" width="0.0177%" height="15" fill="rgb(205,111,40)" fg:x="127440" fg:w="35"/><text x="64.5748%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="64.2995%" y="165" width="1.5939%" height="15" fill="rgb(245,98,11)" fg:x="127475" fg:w="3160"/><text x="64.5924%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="64.2995%" y="181" width="1.6439%" height="15" fill="rgb(248,165,42)" fg:x="127475" fg:w="3259"/><text x="64.5924%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="65.9433%" y="181" width="0.0353%" height="15" fill="rgb(225,135,18)" fg:x="130734" fg:w="70"/><text x="66.2363%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="65.9787%" y="181" width="1.5939%" height="15" fill="rgb(213,159,45)" fg:x="130804" fg:w="3160"/><text x="66.2716%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="64.2465%" y="197" width="3.4653%" height="15" fill="rgb(221,185,19)" fg:x="127370" fg:w="6870"/><text x="64.5395%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="67.7471%" y="197" width="0.0989%" height="15" fill="rgb(235,212,48)" fg:x="134310" fg:w="196"/><text x="68.0401%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="67.8460%" y="181" width="0.0177%" height="15" fill="rgb(252,148,0)" fg:x="134506" fg:w="35"/><text x="68.1389%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="67.8636%" y="181" width="0.0177%" height="15" fill="rgb(229,101,2)" fg:x="134541" fg:w="35"/><text x="68.1566%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="67.8813%" y="181" width="0.0177%" height="15" fill="rgb(227,119,43)" fg:x="134576" fg:w="35"/><text x="68.1743%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="67.8460%" y="197" width="0.1594%" height="15" fill="rgb(246,4,18)" fg:x="134506" fg:w="316"/><text x="68.1389%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="68.0407%" y="197" width="0.0989%" height="15" fill="rgb(234,169,11)" fg:x="134892" fg:w="196"/><text x="68.3336%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.1395%" y="181" width="0.0177%" height="15" fill="rgb(243,226,29)" fg:x="135088" fg:w="35"/><text x="68.4325%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.1572%" y="181" width="0.0177%" height="15" fill="rgb(221,113,40)" fg:x="135123" fg:w="35"/><text x="68.4502%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.1748%" y="181" width="0.0177%" height="15" fill="rgb(249,106,37)" fg:x="135158" fg:w="35"/><text x="68.4678%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.1925%" y="181" width="0.0177%" height="15" fill="rgb(213,162,7)" fg:x="135193" fg:w="35"/><text x="68.4855%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="68.1395%" y="197" width="0.2018%" height="15" fill="rgb(229,117,11)" fg:x="135088" fg:w="400"/><text x="68.4325%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="68.3766%" y="197" width="0.0989%" height="15" fill="rgb(250,57,45)" fg:x="135558" fg:w="196"/><text x="68.6696%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.4755%" y="181" width="0.0177%" height="15" fill="rgb(240,33,1)" fg:x="135754" fg:w="35"/><text x="68.7684%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.4931%" y="181" width="0.0177%" height="15" fill="rgb(238,103,38)" fg:x="135789" fg:w="35"/><text x="68.7861%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.5108%" y="181" width="0.0177%" height="15" fill="rgb(214,155,34)" fg:x="135824" fg:w="35"/><text x="68.8038%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="68.4755%" y="197" width="0.1594%" height="15" fill="rgb(210,154,1)" fg:x="135754" fg:w="316"/><text x="68.7684%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="68.6702%" y="197" width="0.0989%" height="15" fill="rgb(252,152,38)" fg:x="136140" fg:w="196"/><text x="68.9631%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.7690%" y="181" width="0.0177%" height="15" fill="rgb(237,22,30)" fg:x="136336" fg:w="35"/><text x="69.0620%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.7867%" y="181" width="0.0177%" height="15" fill="rgb(209,76,36)" fg:x="136371" fg:w="35"/><text x="69.0797%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="68.8044%" y="181" width="0.0177%" height="15" fill="rgb(237,183,17)" fg:x="136406" fg:w="35"/><text x="69.0973%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="68.8220%" y="149" width="1.5939%" height="15" fill="rgb(241,147,46)" fg:x="136441" fg:w="3160"/><text x="69.1150%" y="159.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="68.8220%" y="165" width="1.6439%" height="15" fill="rgb(206,5,17)" fg:x="136441" fg:w="3259"/><text x="69.1150%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="70.4659%" y="165" width="0.0353%" height="15" fill="rgb(213,214,45)" fg:x="139700" fg:w="70"/><text x="70.7588%" y="175.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="70.5012%" y="165" width="1.5939%" height="15" fill="rgb(206,157,27)" fg:x="139770" fg:w="3160"/><text x="70.7941%" y="175.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="72.0951%" y="165" width="1.5939%" height="15" fill="rgb(247,114,30)" fg:x="142930" fg:w="3160"/><text x="72.3881%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (9,758 instructions, 4.92%)</title><rect x="68.8220%" y="181" width="4.9220%" height="15" fill="rgb(215,159,49)" fg:x="136441" fg:w="9758"/><text x="69.1150%" y="191.50">im_rc..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="73.7440%" y="181" width="0.0353%" height="15" fill="rgb(239,182,38)" fg:x="146199" fg:w="70"/><text x="74.0370%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="73.7793%" y="181" width="1.5939%" height="15" fill="rgb(223,69,53)" fg:x="146269" fg:w="3160"/><text x="74.0723%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (13,369 instructions, 6.74%)</title><rect x="68.7690%" y="197" width="6.7434%" height="15" fill="rgb(213,102,51)" fg:x="136336" fg:w="13369"/><text x="69.0620%" y="207.50">im_rc::..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="75.5478%" y="197" width="0.0989%" height="15" fill="rgb(237,207,54)" fg:x="149775" fg:w="196"/><text x="75.8408%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.6467%" y="181" width="0.0177%" height="15" fill="rgb(238,101,8)" fg:x="149971" fg:w="35"/><text x="75.9396%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.6643%" y="181" width="0.0177%" height="15" fill="rgb(233,129,49)" fg:x="150006" fg:w="35"/><text x="75.9573%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.6820%" y="181" width="0.0177%" height="15" fill="rgb(211,57,22)" fg:x="150041" fg:w="35"/><text x="75.9749%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="75.6467%" y="197" width="0.1594%" height="15" fill="rgb(242,194,35)" fg:x="149971" fg:w="316"/><text x="75.9396%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="75.8414%" y="197" width="0.0989%" height="15" fill="rgb(222,125,45)" fg:x="150357" fg:w="196"/><text x="76.1343%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.9402%" y="181" width="0.0177%" height="15" fill="rgb(243,1,6)" fg:x="150553" fg:w="35"/><text x="76.2332%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.9579%" y="181" width="0.0177%" height="15" fill="rgb(236,201,36)" fg:x="150588" fg:w="35"/><text x="76.2508%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="75.9755%" y="181" width="0.0177%" height="15" fill="rgb(221,7,25)" fg:x="150623" fg:w="35"/><text x="76.2685%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="75.9932%" y="165" width="1.5939%" height="15" fill="rgb(207,107,51)" fg:x="150658" fg:w="3160"/><text x="76.2861%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="75.9932%" y="181" width="1.6439%" height="15" fill="rgb(240,129,0)" fg:x="150658" fg:w="3259"/><text x="76.2861%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="77.6370%" y="181" width="0.0353%" height="15" fill="rgb(249,212,40)" fg:x="153917" fg:w="70"/><text x="77.9300%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="77.6724%" y="181" width="1.5939%" height="15" fill="rgb(205,168,1)" fg:x="153987" fg:w="3160"/><text x="77.9653%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="75.9402%" y="197" width="3.4653%" height="15" fill="rgb(242,212,5)" fg:x="150553" fg:w="6870"/><text x="76.2332%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="79.4408%" y="197" width="0.0989%" height="15" fill="rgb(207,229,5)" fg:x="157493" fg:w="196"/><text x="79.7338%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="79.5397%" y="181" width="0.0177%" height="15" fill="rgb(221,61,30)" fg:x="157689" fg:w="35"/><text x="79.8326%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="79.5573%" y="181" width="0.0177%" height="15" fill="rgb(231,18,29)" fg:x="157724" fg:w="35"/><text x="79.8503%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="79.5750%" y="181" width="0.0177%" height="15" fill="rgb(205,88,23)" fg:x="157759" fg:w="35"/><text x="79.8680%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="79.5926%" y="165" width="1.5939%" height="15" fill="rgb(238,138,21)" fg:x="157794" fg:w="3160"/><text x="79.8856%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="79.5926%" y="181" width="1.6439%" height="15" fill="rgb(245,55,9)" fg:x="157794" fg:w="3259"/><text x="79.8856%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="81.2365%" y="181" width="0.0353%" height="15" fill="rgb(238,126,29)" fg:x="161053" fg:w="70"/><text x="81.5295%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="81.2718%" y="181" width="1.5939%" height="15" fill="rgb(238,3,16)" fg:x="161123" fg:w="3160"/><text x="81.5648%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="79.5397%" y="197" width="3.4653%" height="15" fill="rgb(218,212,3)" fg:x="157689" fg:w="6870"/><text x="79.8326%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="83.0403%" y="197" width="0.0989%" height="15" fill="rgb(215,91,44)" fg:x="164629" fg:w="196"/><text x="83.3332%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.1391%" y="181" width="0.0177%" height="15" fill="rgb(238,1,21)" fg:x="164825" fg:w="35"/><text x="83.4321%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.1568%" y="181" width="0.0177%" height="15" fill="rgb(221,161,6)" fg:x="164860" fg:w="35"/><text x="83.4498%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.1744%" y="181" width="0.0177%" height="15" fill="rgb(236,180,17)" fg:x="164895" fg:w="35"/><text x="83.4674%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="83.1391%" y="197" width="0.1594%" height="15" fill="rgb(252,31,18)" fg:x="164825" fg:w="316"/><text x="83.4321%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="83.3338%" y="197" width="0.0989%" height="15" fill="rgb(232,127,38)" fg:x="165211" fg:w="196"/><text x="83.6268%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.4327%" y="181" width="0.0177%" height="15" fill="rgb(218,4,17)" fg:x="165407" fg:w="35"/><text x="83.7257%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.4504%" y="181" width="0.0177%" height="15" fill="rgb(210,20,45)" fg:x="165442" fg:w="35"/><text x="83.7433%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.4680%" y="181" width="0.0177%" height="15" fill="rgb(253,76,41)" fg:x="165477" fg:w="35"/><text x="83.7610%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="83.4857%" y="181" width="0.0177%" height="15" fill="rgb(230,155,12)" fg:x="165512" fg:w="35"/><text x="83.7786%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="83.5033%" y="165" width="1.5939%" height="15" fill="rgb(208,39,46)" fg:x="165547" fg:w="3160"/><text x="83.7963%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="83.5033%" y="181" width="1.6439%" height="15" fill="rgb(206,64,17)" fg:x="165547" fg:w="3259"/><text x="83.7963%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="85.1472%" y="181" width="0.0353%" height="15" fill="rgb(222,218,39)" fg:x="168806" fg:w="70"/><text x="85.4402%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="85.1825%" y="181" width="1.5939%" height="15" fill="rgb(240,88,28)" fg:x="168876" fg:w="3160"/><text x="85.4755%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,954 instructions, 3.51%)</title><rect x="83.4327%" y="197" width="3.5077%" height="15" fill="rgb(253,88,8)" fg:x="165407" fg:w="6954"/><text x="83.7257%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="86.9757%" y="197" width="0.0989%" height="15" fill="rgb(237,87,9)" fg:x="172431" fg:w="196"/><text x="87.2686%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.0745%" y="181" width="0.0177%" height="15" fill="rgb(250,78,36)" fg:x="172627" fg:w="35"/><text x="87.3675%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.0922%" y="181" width="0.0177%" height="15" fill="rgb(235,158,43)" fg:x="172662" fg:w="35"/><text x="87.3852%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.1098%" y="181" width="0.0177%" height="15" fill="rgb(245,4,17)" fg:x="172697" fg:w="35"/><text x="87.4028%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="87.0745%" y="197" width="0.1594%" height="15" fill="rgb(225,208,32)" fg:x="172627" fg:w="316"/><text x="87.3675%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="87.2692%" y="197" width="0.0989%" height="15" fill="rgb(216,77,23)" fg:x="173013" fg:w="196"/><text x="87.5622%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.3681%" y="181" width="0.0177%" height="15" fill="rgb(206,176,23)" fg:x="173209" fg:w="35"/><text x="87.6611%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.3858%" y="181" width="0.0177%" height="15" fill="rgb(227,183,13)" fg:x="173244" fg:w="35"/><text x="87.6787%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.4034%" y="181" width="0.0177%" height="15" fill="rgb(213,221,6)" fg:x="173279" fg:w="35"/><text x="87.6964%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.4211%" y="181" width="0.0177%" height="15" fill="rgb(248,79,28)" fg:x="173314" fg:w="35"/><text x="87.7140%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="87.3681%" y="197" width="0.2018%" height="15" fill="rgb(248,65,8)" fg:x="173209" fg:w="400"/><text x="87.6611%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="87.6052%" y="197" width="0.0989%" height="15" fill="rgb(233,173,42)" fg:x="173679" fg:w="196"/><text x="87.8981%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.7040%" y="181" width="0.0177%" height="15" fill="rgb(228,66,25)" fg:x="173875" fg:w="35"/><text x="87.9970%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.7217%" y="181" width="0.0177%" height="15" fill="rgb(226,135,32)" fg:x="173910" fg:w="35"/><text x="88.0147%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.7393%" y="181" width="0.0177%" height="15" fill="rgb(240,217,35)" fg:x="173945" fg:w="35"/><text x="88.0323%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="87.7040%" y="197" width="0.1594%" height="15" fill="rgb(245,41,19)" fg:x="173875" fg:w="316"/><text x="87.9970%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="87.8987%" y="197" width="0.0989%" height="15" fill="rgb(238,58,25)" fg:x="174261" fg:w="196"/><text x="88.1917%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="87.9976%" y="181" width="0.0177%" height="15" fill="rgb(225,88,49)" fg:x="174457" fg:w="35"/><text x="88.2906%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="88.0153%" y="181" width="0.0177%" height="15" fill="rgb(207,44,40)" fg:x="174492" fg:w="35"/><text x="88.3082%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="88.0329%" y="181" width="0.0177%" height="15" fill="rgb(251,67,3)" fg:x="174527" fg:w="35"/><text x="88.3259%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="88.0506%" y="165" width="1.5939%" height="15" fill="rgb(245,99,12)" fg:x="174562" fg:w="3160"/><text x="88.3435%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="88.0506%" y="181" width="1.6439%" height="15" fill="rgb(209,28,30)" fg:x="174562" fg:w="3259"/><text x="88.3435%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="89.6944%" y="181" width="0.0353%" height="15" fill="rgb(208,199,21)" fg:x="177821" fg:w="70"/><text x="89.9874%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="89.7297%" y="181" width="1.5939%" height="15" fill="rgb(254,51,8)" fg:x="177891" fg:w="3160"/><text x="90.0227%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="87.9976%" y="197" width="3.4653%" height="15" fill="rgb(233,43,48)" fg:x="174457" fg:w="6870"/><text x="88.2906%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="91.4982%" y="197" width="0.0989%" height="15" fill="rgb(222,111,41)" fg:x="181397" fg:w="196"/><text x="91.7912%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.5971%" y="181" width="0.0177%" height="15" fill="rgb(237,113,5)" fg:x="181593" fg:w="35"/><text x="91.8900%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.6147%" y="181" width="0.0177%" height="15" fill="rgb(243,42,6)" fg:x="181628" fg:w="35"/><text x="91.9077%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.6324%" y="181" width="0.0177%" height="15" fill="rgb(221,137,50)" fg:x="181663" fg:w="35"/><text x="91.9253%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="91.5971%" y="197" width="0.1594%" height="15" fill="rgb(217,40,6)" fg:x="181593" fg:w="316"/><text x="91.8900%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="91.7918%" y="197" width="0.0989%" height="15" fill="rgb(244,63,53)" fg:x="181979" fg:w="196"/><text x="92.0847%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.8906%" y="181" width="0.0177%" height="15" fill="rgb(209,117,29)" fg:x="182175" fg:w="35"/><text x="92.1836%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.9083%" y="181" width="0.0177%" height="15" fill="rgb(218,134,50)" fg:x="182210" fg:w="35"/><text x="92.2012%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="91.9259%" y="181" width="0.0177%" height="15" fill="rgb(231,208,38)" fg:x="182245" fg:w="35"/><text x="92.2189%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="91.8906%" y="197" width="0.1594%" height="15" fill="rgb(205,186,14)" fg:x="182175" fg:w="316"/><text x="92.1836%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="92.0853%" y="197" width="0.0989%" height="15" fill="rgb(233,136,44)" fg:x="182561" fg:w="196"/><text x="92.3783%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.1842%" y="181" width="0.0177%" height="15" fill="rgb(244,24,2)" fg:x="182757" fg:w="35"/><text x="92.4772%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.2018%" y="181" width="0.0177%" height="15" fill="rgb(219,73,45)" fg:x="182792" fg:w="35"/><text x="92.4948%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.2195%" y="181" width="0.0177%" height="15" fill="rgb(218,20,43)" fg:x="182827" fg:w="35"/><text x="92.5125%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="92.1842%" y="197" width="0.1594%" height="15" fill="rgb(213,97,21)" fg:x="182757" fg:w="316"/><text x="92.4772%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="92.3789%" y="197" width="0.0989%" height="15" fill="rgb(226,112,7)" fg:x="183143" fg:w="196"/><text x="92.6719%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.4778%" y="181" width="0.0177%" height="15" fill="rgb(254,130,45)" fg:x="183339" fg:w="35"/><text x="92.7707%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.4954%" y="181" width="0.0177%" height="15" fill="rgb(228,194,10)" fg:x="183374" fg:w="35"/><text x="92.7884%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.5131%" y="181" width="0.0177%" height="15" fill="rgb(243,213,34)" fg:x="183409" fg:w="35"/><text x="92.8060%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="92.4778%" y="197" width="0.1594%" height="15" fill="rgb(242,32,4)" fg:x="183339" fg:w="316"/><text x="92.7707%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="92.6725%" y="197" width="0.0989%" height="15" fill="rgb(212,32,21)" fg:x="183725" fg:w="196"/><text x="92.9654%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.7713%" y="181" width="0.0177%" height="15" fill="rgb(230,136,19)" fg:x="183921" fg:w="35"/><text x="93.0643%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.7890%" y="181" width="0.0177%" height="15" fill="rgb(232,179,51)" fg:x="183956" fg:w="35"/><text x="93.0819%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="92.8066%" y="181" width="0.0177%" height="15" fill="rgb(240,200,34)" fg:x="183991" fg:w="35"/><text x="93.0996%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="92.8243%" y="165" width="1.5939%" height="15" fill="rgb(248,199,39)" fg:x="184026" fg:w="3160"/><text x="93.1173%" y="175.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::merge_values (3,259 instructions, 1.64%)</title><rect x="92.8243%" y="181" width="1.6439%" height="15" fill="rgb(250,108,23)" fg:x="184026" fg:w="3259"/><text x="93.1173%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.04%)</title><rect x="94.4682%" y="181" width="0.0353%" height="15" fill="rgb(233,142,17)" fg:x="187285" fg:w="70"/><text x="94.7611%" y="191.50"></text></g><g><title>memcpy (3,160 instructions, 1.59%)</title><rect x="94.5035%" y="181" width="1.5939%" height="15" fill="rgb(252,183,45)" fg:x="187355" fg:w="3160"/><text x="94.7964%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (6,870 instructions, 3.47%)</title><rect x="92.7713%" y="197" width="3.4653%" height="15" fill="rgb(219,101,39)" fg:x="183921" fg:w="6870"/><text x="93.0643%" y="207.50">im_..</text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="96.2719%" y="197" width="0.0989%" height="15" fill="rgb(213,193,40)" fg:x="190861" fg:w="196"/><text x="96.5649%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.3708%" y="181" width="0.0177%" height="15" fill="rgb(250,126,39)" fg:x="191057" fg:w="35"/><text x="96.6637%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.3884%" y="181" width="0.0177%" height="15" fill="rgb(206,54,26)" fg:x="191092" fg:w="35"/><text x="96.6814%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.4061%" y="181" width="0.0177%" height="15" fill="rgb(241,33,16)" fg:x="191127" fg:w="35"/><text x="96.6991%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.4237%" y="181" width="0.0177%" height="15" fill="rgb(251,218,37)" fg:x="191162" fg:w="35"/><text x="96.7167%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="96.3708%" y="197" width="0.2018%" height="15" fill="rgb(242,95,45)" fg:x="191057" fg:w="400"/><text x="96.6637%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="96.6079%" y="197" width="0.0989%" height="15" fill="rgb(248,113,47)" fg:x="191527" fg:w="196"/><text x="96.9008%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.7067%" y="181" width="0.0177%" height="15" fill="rgb(227,72,50)" fg:x="191723" fg:w="35"/><text x="96.9997%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.7244%" y="181" width="0.0177%" height="15" fill="rgb(234,144,36)" fg:x="191758" fg:w="35"/><text x="97.0173%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.7420%" y="181" width="0.0177%" height="15" fill="rgb(220,93,4)" fg:x="191793" fg:w="35"/><text x="97.0350%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="96.7597%" y="181" width="0.0177%" height="15" fill="rgb(244,28,24)" fg:x="191828" fg:w="35"/><text x="97.0526%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (400 instructions, 0.20%)</title><rect x="96.7067%" y="197" width="0.2018%" height="15" fill="rgb(252,61,47)" fg:x="191723" fg:w="400"/><text x="96.9997%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="96.9438%" y="197" width="0.0989%" height="15" fill="rgb(211,211,51)" fg:x="192193" fg:w="196"/><text x="97.2368%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.0427%" y="181" width="0.0177%" height="15" fill="rgb(230,205,40)" fg:x="192389" fg:w="35"/><text x="97.3356%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.0603%" y="181" width="0.0177%" height="15" fill="rgb(224,214,20)" fg:x="192424" fg:w="35"/><text x="97.3533%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.0780%" y="181" width="0.0177%" height="15" fill="rgb(249,66,7)" fg:x="192459" fg:w="35"/><text x="97.3709%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="97.0427%" y="197" width="0.1594%" height="15" fill="rgb(211,2,19)" fg:x="192389" fg:w="316"/><text x="97.3356%" y="207.50"></text></g><g><title>im_rc::nodes::hamt::hash_key (196 instructions, 0.10%)</title><rect x="97.2374%" y="197" width="0.0989%" height="15" fill="rgb(252,194,25)" fg:x="192775" fg:w="196"/><text x="97.5303%" y="207.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.3362%" y="181" width="0.0177%" height="15" fill="rgb(210,81,4)" fg:x="192971" fg:w="35"/><text x="97.6292%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.3539%" y="181" width="0.0177%" height="15" fill="rgb(237,115,50)" fg:x="193006" fg:w="35"/><text x="97.6468%" y="191.50"></text></g><g><title>alloc::rc::Rc&lt;T,A&gt;::make_mut (35 instructions, 0.02%)</title><rect x="97.3715%" y="181" width="0.0177%" height="15" fill="rgb(249,211,34)" fg:x="193041" fg:w="35"/><text x="97.6645%" y="191.50"></text></g><g><title>im_rc::nodes::hamt::Node&lt;A&gt;::insert (316 instructions, 0.16%)</title><rect x="97.3362%" y="197" width="0.1594%" height="15" fill="rgb(248,200,26)" fg:x="192971" fg:w="316"/><text x="97.6292%" y="207.50"></text></g><g><title>im_rc::hash::map::HashMap&lt;K,V,S&gt;::insert (180,656 instructions, 91.12%)</title><rect x="6.4065%" y="213" width="91.1244%" height="15" fill="rgb(231,22,0)" fg:x="12701" fg:w="180656"/><text x="6.6995%" y="223.50">im_rc::hash::map::HashMap&lt;K,V,S&gt;::insert</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.04%)</title><rect x="97.5309%" y="165" width="0.0419%" height="15" fill="rgb(237,226,47)" fg:x="193357" fg:w="83"/><text x="97.8239%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 instructions, 0.08%)</title><rect x="97.5309%" y="181" width="0.0777%" height="15" fill="rgb(247,220,21)" fg:x="193357" fg:w="154"/><text x="97.8239%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="97.6086%" y="165" width="0.0136%" height="15" fill="rgb(219,134,8)" fg:x="193511" fg:w="27"/><text x="97.9016%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.01%)</title><rect x="97.6222%" y="165" width="0.0116%" height="15" fill="rgb(215,161,46)" fg:x="193538" fg:w="23"/><text x="97.9152%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="97.6338%" y="165" width="0.0338%" height="15" fill="rgb(233,169,17)" fg:x="193561" fg:w="67"/><text x="97.9268%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (238 instructions, 0.12%)</title><rect x="97.6086%" y="181" width="0.1200%" height="15" fill="rgb(235,222,6)" fg:x="193511" fg:w="238"/><text x="97.9016%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::new (568 instructions, 0.29%)</title><rect x="97.5309%" y="197" width="0.2865%" height="15" fill="rgb(232,198,14)" fg:x="193357" fg:w="568"/><text x="97.8239%" y="207.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.26%)</title><rect x="97.8174%" y="181" width="0.2613%" height="15" fill="rgb(211,197,47)" fg:x="193925" fg:w="518"/><text x="98.1104%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="98.0787%" y="133" width="0.0414%" height="15" fill="rgb(254,65,31)" fg:x="194443" fg:w="82"/><text x="98.3717%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="98.0787%" y="149" width="0.0620%" height="15" fill="rgb(233,6,4)" fg:x="194443" fg:w="123"/><text x="98.3717%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.10%)</title><rect x="98.0787%" y="165" width="0.1039%" height="15" fill="rgb(225,63,49)" fg:x="194443" fg:w="206"/><text x="98.3717%" y="175.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (428 instructions, 0.22%)</title><rect x="98.0787%" y="181" width="0.2159%" height="15" fill="rgb(205,208,30)" fg:x="194443" fg:w="428"/><text x="98.3717%" y="191.50"></text></g><g><title>std::io::Write::write_all (516 instructions, 0.26%)</title><rect x="98.2946%" y="181" width="0.2603%" height="15" fill="rgb(220,101,39)" fg:x="194871" fg:w="516"/><text x="98.5876%" y="191.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (1,546 instructions, 0.78%)</title><rect x="97.8174%" y="197" width="0.7798%" height="15" fill="rgb(213,75,50)" fg:x="193925" fg:w="1546"/><text x="98.1104%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="98.6053%" y="197" width="0.0308%" height="15" fill="rgb(208,16,1)" fg:x="195487" fg:w="61"/><text x="98.8983%" y="207.50"></text></g><g><title>ic_cdk::api::call::reply (2,824 instructions, 1.42%)</title><rect x="97.5309%" y="213" width="1.4244%" height="15" fill="rgb(250,200,18)" fg:x="193357" fg:w="2824"/><text x="97.8239%" y="223.50"></text></g><g><title>imrc_hashmap::__canister_method_batch_put::{{closure}} (197,654 instructions, 99.70%)</title><rect x="0.0827%" y="229" width="99.6984%" height="15" fill="rgb(235,2,10)" fg:x="164" fg:w="197654"/><text x="0.3757%" y="239.50">imrc_hashmap::__canister_method_batch_put::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="99.8340%" y="197" width="0.0136%" height="15" fill="rgb(206,19,27)" fg:x="197923" fg:w="27"/><text x="100.1270%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.10%)</title><rect x="99.7892%" y="213" width="0.1034%" height="15" fill="rgb(225,39,16)" fg:x="197834" fg:w="205"/><text x="100.0821%" y="223.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (323 instructions, 0.16%)</title><rect x="99.7887%" y="229" width="0.1629%" height="15" fill="rgb(219,89,51)" fg:x="197833" fg:w="323"/><text x="100.0816%" y="239.50"></text></g><g><title>all (198,252 instructions, 100%)</title><rect x="0.0000%" y="261" width="100.0000%" height="15" fill="rgb(227,119,11)" fg:x="0" fg:w="198252"/><text x="0.2930%" y="271.50"></text></g><g><title>canister_update batch_put (198,252 instructions, 100.00%)</title><rect x="0.0000%" y="245" width="100.0000%" height="15" fill="rgb(207,35,45)" fg:x="0" fg:w="198252"/><text x="0.2930%" y="255.50">canister_update batch_put</text></g></svg></svg>