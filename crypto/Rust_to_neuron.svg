<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="44341"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0428%" height="15" fill="rgb(249,150,24)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.0428%" y="181" width="0.1714%" height="15" fill="rgb(228,185,42)" fg:x="19" fg:w="76"/><text x="0.3358%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2142%" y="181" width="0.1714%" height="15" fill="rgb(226,39,33)" fg:x="95" fg:w="76"/><text x="0.5072%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3856%" y="165" width="0.1714%" height="15" fill="rgb(221,166,19)" fg:x="171" fg:w="76"/><text x="0.6786%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5570%" y="149" width="0.1556%" height="15" fill="rgb(209,109,2)" fg:x="247" fg:w="69"/><text x="0.8500%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="0.7127%" y="149" width="0.9156%" height="15" fill="rgb(252,216,26)" fg:x="316" fg:w="406"/><text x="1.0056%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="1.6283%" y="149" width="0.1849%" height="15" fill="rgb(227,173,36)" fg:x="722" fg:w="82"/><text x="1.9213%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8132%" y="149" width="0.1218%" height="15" fill="rgb(209,90,7)" fg:x="804" fg:w="54"/><text x="2.1062%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9350%" y="149" width="0.1218%" height="15" fill="rgb(250,194,11)" fg:x="858" fg:w="54"/><text x="2.2280%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0568%" y="149" width="0.1218%" height="15" fill="rgb(220,72,50)" fg:x="912" fg:w="54"/><text x="2.3498%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1786%" y="149" width="0.1218%" height="15" fill="rgb(222,106,48)" fg:x="966" fg:w="54"/><text x="2.4715%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.3004%" y="149" width="0.1556%" height="15" fill="rgb(216,220,45)" fg:x="1020" fg:w="69"/><text x="2.5933%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4560%" y="149" width="0.1466%" height="15" fill="rgb(234,112,18)" fg:x="1089" fg:w="65"/><text x="2.7489%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="2.6026%" y="149" width="0.9156%" height="15" fill="rgb(206,179,9)" fg:x="1154" fg:w="406"/><text x="2.8955%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5182%" y="149" width="0.0361%" height="15" fill="rgb(215,115,40)" fg:x="1560" fg:w="16"/><text x="3.8112%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="3.5543%" y="133" width="0.1714%" height="15" fill="rgb(222,69,34)" fg:x="1576" fg:w="76"/><text x="3.8472%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7257%" y="101" width="0.1353%" height="15" fill="rgb(209,161,10)" fg:x="1652" fg:w="60"/><text x="4.0186%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7257%" y="117" width="0.1917%" height="15" fill="rgb(217,6,38)" fg:x="1652" fg:w="85"/><text x="4.0186%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9174%" y="69" width="0.0203%" height="15" fill="rgb(229,229,48)" fg:x="1737" fg:w="9"/><text x="4.2103%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9377%" y="53" width="0.0677%" height="15" fill="rgb(225,21,28)" fg:x="1746" fg:w="30"/><text x="4.2306%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9377%" y="69" width="0.1240%" height="15" fill="rgb(206,33,13)" fg:x="1746" fg:w="55"/><text x="4.2306%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="3.9174%" y="85" width="0.2661%" height="15" fill="rgb(242,178,17)" fg:x="1737" fg:w="118"/><text x="4.2103%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="3.9174%" y="101" width="0.3856%" height="15" fill="rgb(220,162,5)" fg:x="1737" fg:w="171"/><text x="4.2103%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="3.9174%" y="117" width="0.3969%" height="15" fill="rgb(210,33,43)" fg:x="1737" fg:w="176"/><text x="4.2103%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="3.7257%" y="133" width="0.8390%" height="15" fill="rgb(216,116,54)" fg:x="1652" fg:w="372"/><text x="4.0186%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="3.5543%" y="149" width="1.3283%" height="15" fill="rgb(249,92,24)" fg:x="1576" fg:w="589"/><text x="3.8472%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="4.8826%" y="149" width="0.1849%" height="15" fill="rgb(231,189,14)" fg:x="2165" fg:w="82"/><text x="5.1756%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="5.0675%" y="149" width="0.1240%" height="15" fill="rgb(230,8,41)" fg:x="2247" fg:w="55"/><text x="5.3605%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="5.1916%" y="149" width="0.1421%" height="15" fill="rgb(249,7,27)" fg:x="2302" fg:w="63"/><text x="5.4846%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.3337%" y="149" width="0.1466%" height="15" fill="rgb(232,86,5)" fg:x="2365" fg:w="65"/><text x="5.6266%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="5.4803%" y="133" width="0.9156%" height="15" fill="rgb(224,175,18)" fg:x="2430" fg:w="406"/><text x="5.7732%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.3959%" y="133" width="0.0361%" height="15" fill="rgb(220,129,12)" fg:x="2836" fg:w="16"/><text x="6.6889%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="6.4320%" y="117" width="0.1714%" height="15" fill="rgb(210,19,36)" fg:x="2852" fg:w="76"/><text x="6.7249%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.6034%" y="85" width="0.1353%" height="15" fill="rgb(219,96,14)" fg:x="2928" fg:w="60"/><text x="6.8963%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="6.6034%" y="101" width="0.1917%" height="15" fill="rgb(249,106,1)" fg:x="2928" fg:w="85"/><text x="6.8963%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.7951%" y="53" width="0.0203%" height="15" fill="rgb(249,155,20)" fg:x="3013" fg:w="9"/><text x="7.0880%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="6.8154%" y="37" width="0.0677%" height="15" fill="rgb(244,168,9)" fg:x="3022" fg:w="30"/><text x="7.1083%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="6.8154%" y="53" width="0.1240%" height="15" fill="rgb(216,23,50)" fg:x="3022" fg:w="55"/><text x="7.1083%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="6.7951%" y="69" width="0.2661%" height="15" fill="rgb(224,219,20)" fg:x="3013" fg:w="118"/><text x="7.0880%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="6.7951%" y="85" width="0.3856%" height="15" fill="rgb(222,156,15)" fg:x="3013" fg:w="171"/><text x="7.0880%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="6.7951%" y="101" width="0.3969%" height="15" fill="rgb(231,97,17)" fg:x="3013" fg:w="176"/><text x="7.0880%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="6.6034%" y="117" width="0.8390%" height="15" fill="rgb(218,70,48)" fg:x="2928" fg:w="372"/><text x="6.8963%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="6.4320%" y="133" width="1.3283%" height="15" fill="rgb(212,196,52)" fg:x="2852" fg:w="589"/><text x="6.7249%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="7.7603%" y="133" width="0.1849%" height="15" fill="rgb(243,203,18)" fg:x="3441" fg:w="82"/><text x="8.0533%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="7.9452%" y="133" width="0.1240%" height="15" fill="rgb(252,125,41)" fg:x="3523" fg:w="55"/><text x="8.2382%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.0693%" y="117" width="0.1556%" height="15" fill="rgb(223,180,33)" fg:x="3578" fg:w="69"/><text x="8.3623%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="8.2249%" y="117" width="0.2052%" height="15" fill="rgb(254,159,46)" fg:x="3647" fg:w="91"/><text x="8.5179%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="8.4301%" y="117" width="0.1421%" height="15" fill="rgb(254,38,10)" fg:x="3738" fg:w="63"/><text x="8.7231%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.65%)</title><rect x="8.0693%" y="133" width="0.6450%" height="15" fill="rgb(208,217,32)" fg:x="3578" fg:w="286"/><text x="8.3623%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.7143%" y="133" width="0.1714%" height="15" fill="rgb(221,120,13)" fg:x="3864" fg:w="76"/><text x="9.0073%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.8857%" y="117" width="0.1556%" height="15" fill="rgb(246,54,52)" fg:x="3940" fg:w="69"/><text x="9.1787%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.21%)</title><rect x="9.0413%" y="117" width="0.2052%" height="15" fill="rgb(242,34,25)" fg:x="4009" fg:w="91"/><text x="9.3343%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.2465%" y="117" width="0.1421%" height="15" fill="rgb(247,209,9)" fg:x="4100" fg:w="63"/><text x="9.5395%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.64%)</title><rect x="8.8857%" y="133" width="0.6360%" height="15" fill="rgb(228,71,26)" fg:x="3940" fg:w="282"/><text x="9.1787%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,040 instructions, 4.60%)</title><rect x="5.4803%" y="149" width="4.6007%" height="15" fill="rgb(222,145,49)" fg:x="2430" fg:w="2040"/><text x="5.7732%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="10.0810%" y="149" width="0.1421%" height="15" fill="rgb(218,121,17)" fg:x="4470" fg:w="63"/><text x="10.3739%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.2230%" y="149" width="0.0293%" height="15" fill="rgb(244,50,7)" fg:x="4533" fg:w="13"/><text x="10.5160%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.2524%" y="149" width="0.0293%" height="15" fill="rgb(246,229,37)" fg:x="4546" fg:w="13"/><text x="10.5453%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.2817%" y="149" width="0.0158%" height="15" fill="rgb(225,18,5)" fg:x="4559" fg:w="7"/><text x="10.5746%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.2975%" y="149" width="0.0338%" height="15" fill="rgb(213,204,8)" fg:x="4566" fg:w="15"/><text x="10.5904%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.3313%" y="133" width="0.1714%" height="15" fill="rgb(238,103,6)" fg:x="4581" fg:w="76"/><text x="10.6243%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.3313%" y="149" width="0.3586%" height="15" fill="rgb(222,25,35)" fg:x="4581" fg:w="159"/><text x="10.6243%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.6899%" y="117" width="0.1714%" height="15" fill="rgb(213,203,35)" fg:x="4740" fg:w="76"/><text x="10.9828%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="10.6899%" y="133" width="0.2481%" height="15" fill="rgb(221,79,53)" fg:x="4740" fg:w="110"/><text x="10.9828%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="10.6899%" y="149" width="0.4014%" height="15" fill="rgb(243,200,35)" fg:x="4740" fg:w="178"/><text x="10.9828%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.0913%" y="133" width="0.1714%" height="15" fill="rgb(248,60,25)" fg:x="4918" fg:w="76"/><text x="11.3843%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="11.0913%" y="149" width="0.3586%" height="15" fill="rgb(227,53,46)" fg:x="4918" fg:w="159"/><text x="11.3843%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.4499%" y="149" width="0.1714%" height="15" fill="rgb(216,120,32)" fg:x="5077" fg:w="76"/><text x="11.7429%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="11.6213%" y="149" width="0.1827%" height="15" fill="rgb(220,134,1)" fg:x="5153" fg:w="81"/><text x="11.9143%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.8040%" y="149" width="0.1714%" height="15" fill="rgb(237,168,5)" fg:x="5234" fg:w="76"/><text x="12.0969%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.9754%" y="149" width="0.1714%" height="15" fill="rgb(231,100,33)" fg:x="5310" fg:w="76"/><text x="12.2683%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="12.1513%" y="149" width="0.1827%" height="15" fill="rgb(236,177,47)" fg:x="5388" fg:w="81"/><text x="12.4443%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="12.3340%" y="149" width="0.8570%" height="15" fill="rgb(235,7,49)" fg:x="5469" fg:w="380"/><text x="12.6269%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.86%)</title><rect x="13.1910%" y="149" width="0.8570%" height="15" fill="rgb(232,119,22)" fg:x="5849" fg:w="380"/><text x="13.4839%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,004 instructions, 15.80%)</title><rect x="0.5570%" y="165" width="15.7958%" height="15" fill="rgb(254,73,53)" fg:x="247" fg:w="7004"/><text x="0.8500%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (335 instructions, 0.76%)</title><rect x="16.3528%" y="165" width="0.7555%" height="15" fill="rgb(251,35,20)" fg:x="7251" fg:w="335"/><text x="16.6458%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.1083%" y="133" width="0.0113%" height="15" fill="rgb(241,119,20)" fg:x="7586" fg:w="5"/><text x="17.4013%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.1196%" y="117" width="0.1195%" height="15" fill="rgb(207,102,14)" fg:x="7591" fg:w="53"/><text x="17.4126%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.87%)</title><rect x="17.2391%" y="117" width="0.8660%" height="15" fill="rgb(248,201,50)" fg:x="7644" fg:w="384"/><text x="17.5321%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="18.1051%" y="117" width="0.3654%" height="15" fill="rgb(222,185,44)" fg:x="8028" fg:w="162"/><text x="18.3981%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.89%)</title><rect x="17.1196%" y="133" width="1.8854%" height="15" fill="rgb(218,107,18)" fg:x="7591" fg:w="836"/><text x="17.4126%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (954 instructions, 2.15%)</title><rect x="17.1083%" y="149" width="2.1515%" height="15" fill="rgb(237,177,39)" fg:x="7586" fg:w="954"/><text x="17.4013%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="19.2598%" y="149" width="0.1714%" height="15" fill="rgb(246,69,6)" fg:x="8540" fg:w="76"/><text x="19.5528%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="19.4312%" y="133" width="0.0113%" height="15" fill="rgb(234,208,37)" fg:x="8616" fg:w="5"/><text x="19.7242%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.4425%" y="117" width="0.1195%" height="15" fill="rgb(225,4,6)" fg:x="8621" fg:w="53"/><text x="19.7355%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.87%)</title><rect x="19.5620%" y="117" width="0.8660%" height="15" fill="rgb(233,45,0)" fg:x="8674" fg:w="384"/><text x="19.8550%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="20.4280%" y="117" width="0.3654%" height="15" fill="rgb(226,136,5)" fg:x="9058" fg:w="162"/><text x="20.7210%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.89%)</title><rect x="19.4425%" y="133" width="1.8854%" height="15" fill="rgb(211,91,47)" fg:x="8621" fg:w="836"/><text x="19.7355%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,045 instructions, 2.36%)</title><rect x="19.4312%" y="149" width="2.3567%" height="15" fill="rgb(242,88,51)" fg:x="8616" fg:w="1045"/><text x="19.7242%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="21.7880%" y="149" width="0.1714%" height="15" fill="rgb(230,91,28)" fg:x="9661" fg:w="76"/><text x="22.0809%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="21.9594%" y="133" width="0.0113%" height="15" fill="rgb(254,186,29)" fg:x="9737" fg:w="5"/><text x="22.2523%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.9706%" y="117" width="0.1195%" height="15" fill="rgb(238,6,4)" fg:x="9742" fg:w="53"/><text x="22.2636%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.87%)</title><rect x="22.0902%" y="117" width="0.8660%" height="15" fill="rgb(221,151,16)" fg:x="9795" fg:w="384"/><text x="22.3831%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="22.9562%" y="117" width="0.3654%" height="15" fill="rgb(251,143,52)" fg:x="10179" fg:w="162"/><text x="23.2491%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.89%)</title><rect x="21.9706%" y="133" width="1.8854%" height="15" fill="rgb(206,90,15)" fg:x="9742" fg:w="836"/><text x="22.2636%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.67%)</title><rect x="23.8560%" y="133" width="1.6689%" height="15" fill="rgb(218,35,8)" fg:x="10578" fg:w="740"/><text x="24.1490%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.5249%" y="117" width="0.1827%" height="15" fill="rgb(239,215,6)" fg:x="11318" fg:w="81"/><text x="25.8179%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="25.5249%" y="133" width="0.2436%" height="15" fill="rgb(245,116,39)" fg:x="11318" fg:w="108"/><text x="25.8179%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 4.19%)</title><rect x="21.9594%" y="149" width="4.1903%" height="15" fill="rgb(242,65,28)" fg:x="9737" fg:w="1858"/><text x="22.2523%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.1496%" y="101" width="0.1195%" height="15" fill="rgb(252,132,53)" fg:x="11595" fg:w="53"/><text x="26.4426%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.1496%" y="117" width="0.1759%" height="15" fill="rgb(224,159,50)" fg:x="11595" fg:w="78"/><text x="26.4426%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="26.1496%" y="133" width="0.6608%" height="15" fill="rgb(224,93,4)" fg:x="11595" fg:w="293"/><text x="26.4426%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1266 (15 instructions, 0.03%)</title><rect x="26.8104%" y="133" width="0.0338%" height="15" fill="rgb(208,81,34)" fg:x="11888" fg:w="15"/><text x="27.1034%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.8442%" y="133" width="0.0248%" height="15" fill="rgb(233,92,54)" fg:x="11903" fg:w="11"/><text x="27.1372%" y="143.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.08%)</title><rect x="26.1496%" y="149" width="1.0780%" height="15" fill="rgb(237,21,14)" fg:x="11595" fg:w="478"/><text x="26.4426%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,594 instructions, 10.36%)</title><rect x="17.1083%" y="165" width="10.3606%" height="15" fill="rgb(249,128,51)" fg:x="7586" fg:w="4594"/><text x="17.4013%" y="175.50">candid::type..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="27.4689%" y="149" width="0.1060%" height="15" fill="rgb(223,129,24)" fg:x="12180" fg:w="47"/><text x="27.7619%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.5749%" y="133" width="0.2774%" height="15" fill="rgb(231,168,25)" fg:x="12227" fg:w="123"/><text x="27.8679%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.9132%" y="133" width="0.2774%" height="15" fill="rgb(224,39,20)" fg:x="12377" fg:w="123"/><text x="28.2062%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.68%)</title><rect x="27.5749%" y="149" width="0.6766%" height="15" fill="rgb(225,152,53)" fg:x="12227" fg:w="300"/><text x="27.8679%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.2515%" y="133" width="0.0631%" height="15" fill="rgb(252,17,24)" fg:x="12527" fg:w="28"/><text x="28.5445%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.3147%" y="133" width="0.0631%" height="15" fill="rgb(250,114,30)" fg:x="12555" fg:w="28"/><text x="28.6076%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.03%)</title><rect x="28.3778%" y="133" width="0.0338%" height="15" fill="rgb(229,5,4)" fg:x="12583" fg:w="15"/><text x="28.6708%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.03%)</title><rect x="28.4116%" y="133" width="0.0338%" height="15" fill="rgb(225,176,49)" fg:x="12598" fg:w="15"/><text x="28.7046%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="28.4455%" y="133" width="0.1759%" height="15" fill="rgb(224,221,49)" fg:x="12613" fg:w="78"/><text x="28.7384%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="28.6214%" y="133" width="0.1556%" height="15" fill="rgb(253,169,27)" fg:x="12691" fg:w="69"/><text x="28.9143%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.18%)</title><rect x="28.7770%" y="117" width="0.1782%" height="15" fill="rgb(211,206,16)" fg:x="12760" fg:w="79"/><text x="29.0699%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.34%)</title><rect x="28.7770%" y="133" width="0.3360%" height="15" fill="rgb(244,87,35)" fg:x="12760" fg:w="149"/><text x="29.0699%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.1130%" y="133" width="0.1466%" height="15" fill="rgb(246,28,10)" fg:x="12909" fg:w="65"/><text x="29.4060%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.92%)</title><rect x="29.2596%" y="133" width="0.9156%" height="15" fill="rgb(229,12,44)" fg:x="12974" fg:w="406"/><text x="29.5526%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.1752%" y="117" width="0.1714%" height="15" fill="rgb(210,145,37)" fg:x="13380" fg:w="76"/><text x="30.4682%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="30.3466%" y="85" width="0.1353%" height="15" fill="rgb(227,112,52)" fg:x="13456" fg:w="60"/><text x="30.6396%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="30.3466%" y="101" width="0.1917%" height="15" fill="rgb(238,155,34)" fg:x="13456" fg:w="85"/><text x="30.6396%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.5383%" y="53" width="0.0203%" height="15" fill="rgb(239,226,36)" fg:x="13541" fg:w="9"/><text x="30.8313%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.5586%" y="37" width="0.0677%" height="15" fill="rgb(230,16,23)" fg:x="13550" fg:w="30"/><text x="30.8516%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.5586%" y="53" width="0.1240%" height="15" fill="rgb(236,171,36)" fg:x="13550" fg:w="55"/><text x="30.8516%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="30.5383%" y="69" width="0.2661%" height="15" fill="rgb(221,22,14)" fg:x="13541" fg:w="118"/><text x="30.8313%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.39%)</title><rect x="30.5383%" y="85" width="0.3856%" height="15" fill="rgb(242,43,11)" fg:x="13541" fg:w="171"/><text x="30.8313%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="30.5383%" y="101" width="0.3969%" height="15" fill="rgb(232,69,23)" fg:x="13541" fg:w="176"/><text x="30.8313%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="30.3466%" y="117" width="0.8390%" height="15" fill="rgb(216,180,54)" fg:x="13456" fg:w="372"/><text x="30.6396%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="30.1752%" y="133" width="1.3283%" height="15" fill="rgb(216,5,24)" fg:x="13380" fg:w="589"/><text x="30.4682%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="31.5036%" y="133" width="0.1849%" height="15" fill="rgb(225,89,9)" fg:x="13969" fg:w="82"/><text x="31.7965%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="31.6885%" y="133" width="0.1240%" height="15" fill="rgb(243,75,33)" fg:x="14051" fg:w="55"/><text x="31.9815%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="31.8125%" y="117" width="0.1263%" height="15" fill="rgb(247,141,45)" fg:x="14106" fg:w="56"/><text x="32.1055%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.25%)</title><rect x="31.8125%" y="133" width="0.2548%" height="15" fill="rgb(232,177,36)" fg:x="14106" fg:w="113"/><text x="32.1055%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="32.0674%" y="133" width="0.1714%" height="15" fill="rgb(219,125,36)" fg:x="14219" fg:w="76"/><text x="32.3604%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.2388%" y="117" width="0.1263%" height="15" fill="rgb(227,94,9)" fg:x="14295" fg:w="56"/><text x="32.5318%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.4936%" y="117" width="0.1263%" height="15" fill="rgb(240,34,52)" fg:x="14408" fg:w="56"/><text x="32.7866%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.7485%" y="117" width="0.1263%" height="15" fill="rgb(216,45,12)" fg:x="14521" fg:w="56"/><text x="33.0414%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.0033%" y="117" width="0.1263%" height="15" fill="rgb(246,21,19)" fg:x="14634" fg:w="56"/><text x="33.2963%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.2582%" y="117" width="0.1263%" height="15" fill="rgb(213,98,42)" fg:x="14747" fg:w="56"/><text x="33.5511%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.5130%" y="117" width="0.1263%" height="15" fill="rgb(250,136,47)" fg:x="14860" fg:w="56"/><text x="33.8060%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.7678%" y="117" width="0.1263%" height="15" fill="rgb(251,124,27)" fg:x="14973" fg:w="56"/><text x="34.0608%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.0227%" y="117" width="0.1263%" height="15" fill="rgb(229,180,14)" fg:x="15086" fg:w="56"/><text x="34.3157%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.04%)</title><rect x="32.2388%" y="133" width="2.0387%" height="15" fill="rgb(245,216,25)" fg:x="14295" fg:w="904"/><text x="32.5318%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="34.2775%" y="101" width="0.2278%" height="15" fill="rgb(251,43,5)" fg:x="15199" fg:w="101"/><text x="34.5705%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="34.2775%" y="117" width="0.3067%" height="15" fill="rgb(250,128,24)" fg:x="15199" fg:w="136"/><text x="34.5705%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.47%)</title><rect x="34.2775%" y="133" width="0.4713%" height="15" fill="rgb(217,117,27)" fg:x="15199" fg:w="209"/><text x="34.5705%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.7489%" y="117" width="0.1263%" height="15" fill="rgb(245,147,4)" fg:x="15408" fg:w="56"/><text x="35.0418%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.0037%" y="117" width="0.1263%" height="15" fill="rgb(242,201,35)" fg:x="15521" fg:w="56"/><text x="35.2967%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.2586%" y="117" width="0.1263%" height="15" fill="rgb(218,181,1)" fg:x="15634" fg:w="56"/><text x="35.5515%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.5134%" y="117" width="0.1263%" height="15" fill="rgb(222,6,29)" fg:x="15747" fg:w="56"/><text x="35.8064%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.7683%" y="117" width="0.1263%" height="15" fill="rgb(208,186,3)" fg:x="15860" fg:w="56"/><text x="36.0612%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.0231%" y="117" width="0.1263%" height="15" fill="rgb(216,36,26)" fg:x="15973" fg:w="56"/><text x="36.3161%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.2779%" y="117" width="0.1263%" height="15" fill="rgb(248,201,23)" fg:x="16086" fg:w="56"/><text x="36.5709%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.78%)</title><rect x="34.7489%" y="133" width="1.7839%" height="15" fill="rgb(251,170,31)" fg:x="15408" fg:w="791"/><text x="35.0418%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="36.5328%" y="133" width="0.0677%" height="15" fill="rgb(207,110,25)" fg:x="16199" fg:w="30"/><text x="36.8257%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="36.6004%" y="133" width="0.1421%" height="15" fill="rgb(250,54,15)" fg:x="16229" fg:w="63"/><text x="36.8934%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.10%)</title><rect x="36.7425%" y="101" width="0.1015%" height="15" fill="rgb(227,68,33)" fg:x="16292" fg:w="45"/><text x="37.0355%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.18%)</title><rect x="36.7425%" y="117" width="0.1804%" height="15" fill="rgb(238,34,41)" fg:x="16292" fg:w="80"/><text x="37.0355%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.35%)</title><rect x="36.7425%" y="133" width="0.3451%" height="15" fill="rgb(220,11,15)" fg:x="16292" fg:w="153"/><text x="37.0355%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.46%)</title><rect x="37.0876%" y="133" width="0.4646%" height="15" fill="rgb(246,111,35)" fg:x="16445" fg:w="206"/><text x="37.3805%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.36%)</title><rect x="37.5522%" y="133" width="0.3608%" height="15" fill="rgb(209,88,53)" fg:x="16651" fg:w="160"/><text x="37.8451%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.9130%" y="133" width="0.1827%" height="15" fill="rgb(231,185,47)" fg:x="16811" fg:w="81"/><text x="38.2060%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="38.0957%" y="133" width="0.1240%" height="15" fill="rgb(233,154,1)" fg:x="16892" fg:w="55"/><text x="38.3886%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,435 instructions, 12.26%)</title><rect x="28.2515%" y="149" width="12.2573%" height="15" fill="rgb(225,15,46)" fg:x="12527" fg:w="5435"/><text x="28.5445%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5088%" y="149" width="0.0248%" height="15" fill="rgb(211,135,41)" fg:x="17962" fg:w="11"/><text x="40.8018%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5336%" y="149" width="0.0248%" height="15" fill="rgb(208,54,0)" fg:x="17973" fg:w="11"/><text x="40.8266%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5584%" y="149" width="0.0248%" height="15" fill="rgb(244,136,14)" fg:x="17984" fg:w="11"/><text x="40.8514%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,064 instructions, 13.68%)</title><rect x="27.4689%" y="165" width="13.6758%" height="15" fill="rgb(241,56,14)" fg:x="12180" fg:w="6064"/><text x="27.7619%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="41.1448%" y="149" width="0.0113%" height="15" fill="rgb(205,80,24)" fg:x="18244" fg:w="5"/><text x="41.4377%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.1560%" y="133" width="0.1195%" height="15" fill="rgb(220,57,4)" fg:x="18249" fg:w="53"/><text x="41.4490%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="41.2756%" y="133" width="0.1985%" height="15" fill="rgb(226,193,50)" fg:x="18302" fg:w="88"/><text x="41.5685%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="41.4740%" y="133" width="0.3654%" height="15" fill="rgb(231,168,22)" fg:x="18390" fg:w="162"/><text x="41.7670%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="41.1560%" y="149" width="1.2178%" height="15" fill="rgb(254,215,14)" fg:x="18249" fg:w="540"/><text x="41.4490%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.48%)</title><rect x="41.1448%" y="165" width="1.4840%" height="15" fill="rgb(211,115,16)" fg:x="18244" fg:w="658"/><text x="41.4377%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.6287%" y="165" width="0.1714%" height="15" fill="rgb(236,210,16)" fg:x="18902" fg:w="76"/><text x="42.9217%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="42.8001%" y="149" width="0.0113%" height="15" fill="rgb(221,94,12)" fg:x="18978" fg:w="5"/><text x="43.0931%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="42.8114%" y="133" width="0.1195%" height="15" fill="rgb(235,218,49)" fg:x="18983" fg:w="53"/><text x="43.1044%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="42.9309%" y="133" width="0.1985%" height="15" fill="rgb(217,114,14)" fg:x="19036" fg:w="88"/><text x="43.2239%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="43.1294%" y="133" width="0.3654%" height="15" fill="rgb(216,145,22)" fg:x="19124" fg:w="162"/><text x="43.4224%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="42.8114%" y="149" width="1.2178%" height="15" fill="rgb(217,112,39)" fg:x="18983" fg:w="540"/><text x="43.1044%" y="159.50"></text></g><g><title>candid::types::internal::env_add (749 instructions, 1.69%)</title><rect x="42.8001%" y="165" width="1.6892%" height="15" fill="rgb(225,85,32)" fg:x="18978" fg:w="749"/><text x="43.0931%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.4893%" y="165" width="0.1714%" height="15" fill="rgb(245,209,47)" fg:x="19727" fg:w="76"/><text x="44.7823%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="44.6607%" y="149" width="0.0113%" height="15" fill="rgb(218,220,15)" fg:x="19803" fg:w="5"/><text x="44.9537%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="44.6720%" y="133" width="0.1195%" height="15" fill="rgb(222,202,31)" fg:x="19808" fg:w="53"/><text x="44.9649%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="44.7915%" y="133" width="0.1985%" height="15" fill="rgb(243,203,4)" fg:x="19861" fg:w="88"/><text x="45.0845%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="44.9900%" y="133" width="0.3654%" height="15" fill="rgb(237,92,17)" fg:x="19949" fg:w="162"/><text x="45.2829%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="44.6720%" y="149" width="1.2178%" height="15" fill="rgb(231,119,7)" fg:x="19808" fg:w="540"/><text x="44.9649%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.8898%" y="149" width="0.1714%" height="15" fill="rgb(237,82,41)" fg:x="20348" fg:w="76"/><text x="46.1828%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="46.0612%" y="149" width="0.1894%" height="15" fill="rgb(226,81,48)" fg:x="20424" fg:w="84"/><text x="46.3542%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.2506%" y="133" width="0.1195%" height="15" fill="rgb(234,70,51)" fg:x="20508" fg:w="53"/><text x="46.5436%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="46.3702%" y="133" width="0.1985%" height="15" fill="rgb(251,86,4)" fg:x="20561" fg:w="88"/><text x="46.6631%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="46.5686%" y="133" width="0.3654%" height="15" fill="rgb(244,144,28)" fg:x="20649" fg:w="162"/><text x="46.8616%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.4685%" y="133" width="0.1195%" height="15" fill="rgb(232,161,39)" fg:x="21048" fg:w="53"/><text x="47.7615%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="47.5880%" y="133" width="0.8209%" height="15" fill="rgb(247,34,51)" fg:x="21101" fg:w="364"/><text x="47.8810%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="48.4089%" y="133" width="0.1624%" height="15" fill="rgb(225,132,2)" fg:x="21465" fg:w="72"/><text x="48.7019%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="49.1058%" y="133" width="0.1195%" height="15" fill="rgb(209,159,44)" fg:x="21774" fg:w="53"/><text x="49.3988%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.87%)</title><rect x="49.2253%" y="133" width="0.8660%" height="15" fill="rgb(251,214,1)" fg:x="21827" fg:w="384"/><text x="49.5183%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.37%)</title><rect x="50.0913%" y="133" width="0.3654%" height="15" fill="rgb(247,84,47)" fg:x="22211" fg:w="162"/><text x="50.3843%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,102 instructions, 4.74%)</title><rect x="46.2506%" y="149" width="4.7405%" height="15" fill="rgb(240,111,43)" fg:x="20508" fg:w="2102"/><text x="46.5436%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (64 instructions, 0.14%)</title><rect x="50.9912%" y="149" width="0.1443%" height="15" fill="rgb(215,214,35)" fg:x="22610" fg:w="64"/><text x="51.2842%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="51.1355%" y="149" width="0.1534%" height="15" fill="rgb(248,207,23)" fg:x="22674" fg:w="68"/><text x="51.4285%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="51.2889%" y="133" width="0.1827%" height="15" fill="rgb(214,186,4)" fg:x="22742" fg:w="81"/><text x="51.5818%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="51.2889%" y="149" width="0.2436%" height="15" fill="rgb(220,133,22)" fg:x="22742" fg:w="108"/><text x="51.5818%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,676 instructions, 8.29%)</title><rect x="44.6607%" y="165" width="8.2903%" height="15" fill="rgb(239,134,19)" fg:x="19803" fg:w="3676"/><text x="44.9537%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="52.9510%" y="117" width="0.1195%" height="15" fill="rgb(250,140,9)" fg:x="23479" fg:w="53"/><text x="53.2440%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="52.9510%" y="133" width="0.1759%" height="15" fill="rgb(225,59,14)" fg:x="23479" fg:w="78"/><text x="53.2440%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.6118%" y="117" width="0.1195%" height="15" fill="rgb(214,152,51)" fg:x="23772" fg:w="53"/><text x="53.9048%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="53.6118%" y="133" width="0.1759%" height="15" fill="rgb(251,227,43)" fg:x="23772" fg:w="78"/><text x="53.9048%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.32%)</title><rect x="52.9510%" y="149" width="1.3216%" height="15" fill="rgb(241,96,17)" fg:x="23479" fg:w="586"/><text x="53.2440%" y="159.50"></text></g><g><title>candid::types::internal::env_id (859 instructions, 1.94%)</title><rect x="52.9510%" y="165" width="1.9373%" height="15" fill="rgb(234,198,43)" fg:x="23479" fg:w="859"/><text x="53.2440%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="54.8883%" y="165" width="0.1060%" height="15" fill="rgb(220,108,29)" fg:x="24338" fg:w="47"/><text x="55.1812%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="55.0191%" y="149" width="0.3789%" height="15" fill="rgb(226,163,33)" fg:x="24396" fg:w="168"/><text x="55.3120%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.46%)</title><rect x="54.9942%" y="165" width="0.4646%" height="15" fill="rgb(205,194,45)" fg:x="24385" fg:w="206"/><text x="55.2872%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="55.4588%" y="149" width="0.0631%" height="15" fill="rgb(206,143,44)" fg:x="24591" fg:w="28"/><text x="55.7518%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.03%)</title><rect x="55.5220%" y="149" width="0.0338%" height="15" fill="rgb(236,136,36)" fg:x="24619" fg:w="15"/><text x="55.8149%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2229 (15 instructions, 0.03%)</title><rect x="55.5558%" y="149" width="0.0338%" height="15" fill="rgb(249,172,42)" fg:x="24634" fg:w="15"/><text x="55.8488%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (131 instructions, 0.30%)</title><rect x="55.4588%" y="165" width="0.2954%" height="15" fill="rgb(216,139,23)" fg:x="24591" fg:w="131"/><text x="55.7518%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7543%" y="165" width="0.0248%" height="15" fill="rgb(207,166,20)" fg:x="24722" fg:w="11"/><text x="56.0472%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7791%" y="165" width="0.0248%" height="15" fill="rgb(210,209,22)" fg:x="24733" fg:w="11"/><text x="56.0720%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8039%" y="165" width="0.0248%" height="15" fill="rgb(232,118,20)" fg:x="24744" fg:w="11"/><text x="56.0969%" y="175.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="55.8287%" y="165" width="0.9247%" height="15" fill="rgb(238,113,42)" fg:x="24755" fg:w="410"/><text x="56.1217%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="56.7533%" y="133" width="0.0271%" height="15" fill="rgb(231,42,5)" fg:x="25165" fg:w="12"/><text x="57.0463%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="56.7804%" y="133" width="0.2774%" height="15" fill="rgb(243,166,24)" fg:x="25177" fg:w="123"/><text x="57.0734%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.17%)</title><rect x="57.0578%" y="101" width="0.1691%" height="15" fill="rgb(237,226,12)" fg:x="25300" fg:w="75"/><text x="57.3508%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.50%)</title><rect x="57.0578%" y="117" width="0.4962%" height="15" fill="rgb(229,133,24)" fg:x="25300" fg:w="220"/><text x="57.3508%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (247 instructions, 0.56%)</title><rect x="57.0578%" y="133" width="0.5570%" height="15" fill="rgb(238,33,43)" fg:x="25300" fg:w="247"/><text x="57.3508%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="57.6148%" y="133" width="0.0248%" height="15" fill="rgb(227,59,38)" fg:x="25547" fg:w="11"/><text x="57.9078%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (435 instructions, 0.98%)</title><rect x="56.7533%" y="149" width="0.9810%" height="15" fill="rgb(230,97,0)" fg:x="25165" fg:w="435"/><text x="57.0463%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (470 instructions, 1.06%)</title><rect x="56.7533%" y="165" width="1.0600%" height="15" fill="rgb(250,173,50)" fg:x="25165" fg:w="470"/><text x="57.0463%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="57.8133%" y="149" width="0.0474%" height="15" fill="rgb(240,15,50)" fg:x="25635" fg:w="21"/><text x="58.1063%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.21%)</title><rect x="57.8607%" y="149" width="0.2142%" height="15" fill="rgb(221,93,22)" fg:x="25656" fg:w="95"/><text x="58.1536%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.44%)</title><rect x="57.8133%" y="165" width="0.4443%" height="15" fill="rgb(245,180,53)" fg:x="25635" fg:w="197"/><text x="58.1063%" y="175.50"></text></g><g><title>memset (218 instructions, 0.49%)</title><rect x="58.2576%" y="165" width="0.4916%" height="15" fill="rgb(231,88,51)" fg:x="25832" fg:w="218"/><text x="58.5506%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.37%)</title><rect x="58.7492%" y="165" width="0.3676%" height="15" fill="rgb(240,58,21)" fg:x="26050" fg:w="163"/><text x="59.0422%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.06%)</title><rect x="59.1168%" y="165" width="1.0600%" height="15" fill="rgb(237,21,10)" fg:x="26213" fg:w="470"/><text x="59.4098%" y="175.50"></text></g><g><title>memset (126 instructions, 0.28%)</title><rect x="60.1768%" y="149" width="0.2842%" height="15" fill="rgb(218,43,11)" fg:x="26683" fg:w="126"/><text x="60.4698%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.25%)</title><rect x="60.4610%" y="149" width="11.2469%" height="15" fill="rgb(218,221,29)" fg:x="26809" fg:w="4987"/><text x="60.7539%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.18%)</title><rect x="60.1768%" y="165" width="12.1806%" height="15" fill="rgb(214,118,42)" fg:x="26683" fg:w="5401"/><text x="60.4698%" y="175.50">&lt;sha2::core_api..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="72.3574%" y="165" width="0.1714%" height="15" fill="rgb(251,200,26)" fg:x="32084" fg:w="76"/><text x="72.6504%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.5288%" y="149" width="0.0113%" height="15" fill="rgb(237,101,39)" fg:x="32160" fg:w="5"/><text x="72.8218%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.5401%" y="117" width="0.2842%" height="15" fill="rgb(251,117,11)" fg:x="32165" fg:w="126"/><text x="72.8331%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.35%)</title><rect x="72.5401%" y="133" width="0.3451%" height="15" fill="rgb(216,223,23)" fg:x="32165" fg:w="153"/><text x="72.8331%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.8851%" y="133" width="0.2842%" height="15" fill="rgb(251,54,12)" fg:x="32318" fg:w="126"/><text x="73.1781%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="73.2415%" y="117" width="0.1218%" height="15" fill="rgb(254,176,54)" fg:x="32476" fg:w="54"/><text x="73.5344%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="73.3633%" y="117" width="0.1421%" height="15" fill="rgb(210,32,8)" fg:x="32530" fg:w="63"/><text x="73.6562%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.55%)</title><rect x="73.2415%" y="133" width="0.5480%" height="15" fill="rgb(235,52,38)" fg:x="32476" fg:w="243"/><text x="73.5344%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (581 instructions, 1.31%)</title><rect x="72.5401%" y="149" width="1.3103%" height="15" fill="rgb(231,4,44)" fg:x="32165" fg:w="581"/><text x="72.8331%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="73.8504%" y="149" width="0.0248%" height="15" fill="rgb(249,2,32)" fg:x="32746" fg:w="11"/><text x="74.1434%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="73.8752%" y="149" width="0.1894%" height="15" fill="rgb(224,65,26)" fg:x="32757" fg:w="84"/><text x="74.1682%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="74.0646%" y="117" width="0.0113%" height="15" fill="rgb(250,73,40)" fg:x="32841" fg:w="5"/><text x="74.3576%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="74.0646%" y="133" width="0.0880%" height="15" fill="rgb(253,177,16)" fg:x="32841" fg:w="39"/><text x="74.3576%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="74.1526%" y="133" width="0.1714%" height="15" fill="rgb(217,32,34)" fg:x="32880" fg:w="76"/><text x="74.4456%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="74.3240%" y="117" width="0.0113%" height="15" fill="rgb(212,7,10)" fg:x="32956" fg:w="5"/><text x="74.6170%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="74.3353%" y="101" width="0.1195%" height="15" fill="rgb(245,89,8)" fg:x="32961" fg:w="53"/><text x="74.6282%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="74.4548%" y="101" width="0.8209%" height="15" fill="rgb(237,16,53)" fg:x="33014" fg:w="364"/><text x="74.7478%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="75.2757%" y="101" width="0.1624%" height="15" fill="rgb(250,204,30)" fg:x="33378" fg:w="72"/><text x="75.5687%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.64%)</title><rect x="74.3353%" y="117" width="1.6373%" height="15" fill="rgb(208,77,27)" fg:x="32961" fg:w="726"/><text x="74.6282%" y="127.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 2.11%)</title><rect x="74.3240%" y="133" width="2.1087%" height="15" fill="rgb(250,204,28)" fg:x="32956" fg:w="935"/><text x="74.6170%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.4326%" y="133" width="0.1714%" height="15" fill="rgb(244,63,21)" fg:x="33891" fg:w="76"/><text x="76.7256%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.6040%" y="133" width="0.1714%" height="15" fill="rgb(236,85,44)" fg:x="33967" fg:w="76"/><text x="76.8970%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.7754%" y="117" width="0.0113%" height="15" fill="rgb(215,98,4)" fg:x="34043" fg:w="5"/><text x="77.0684%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.7867%" y="101" width="0.1195%" height="15" fill="rgb(235,38,11)" fg:x="34048" fg:w="53"/><text x="77.0797%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="76.9062%" y="101" width="0.8209%" height="15" fill="rgb(254,186,25)" fg:x="34101" fg:w="364"/><text x="77.1992%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="77.7272%" y="101" width="0.1624%" height="15" fill="rgb(225,55,31)" fg:x="34465" fg:w="72"/><text x="78.0201%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.64%)</title><rect x="76.7867%" y="117" width="1.6373%" height="15" fill="rgb(211,15,21)" fg:x="34048" fg:w="726"/><text x="77.0797%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.38%)</title><rect x="78.4240%" y="117" width="1.3847%" height="15" fill="rgb(215,187,41)" fg:x="34774" fg:w="614"/><text x="78.7170%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="79.8088%" y="101" width="0.1827%" height="15" fill="rgb(248,69,32)" fg:x="35388" fg:w="81"/><text x="80.1017%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="79.8088%" y="117" width="0.2436%" height="15" fill="rgb(252,102,52)" fg:x="35388" fg:w="108"/><text x="80.1017%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 3.66%)</title><rect x="76.7754%" y="133" width="3.6580%" height="15" fill="rgb(253,140,32)" fg:x="34043" fg:w="1622"/><text x="77.0684%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.4335%" y="85" width="0.1195%" height="15" fill="rgb(216,56,42)" fg:x="35665" fg:w="53"/><text x="80.7264%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="80.5530%" y="85" width="0.3473%" height="15" fill="rgb(216,184,14)" fg:x="35718" fg:w="154"/><text x="80.8460%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="80.4335%" y="101" width="0.5819%" height="15" fill="rgb(237,187,27)" fg:x="35665" fg:w="258"/><text x="80.7264%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.07%)</title><rect x="80.4335%" y="117" width="1.0667%" height="15" fill="rgb(219,65,3)" fg:x="35665" fg:w="473"/><text x="80.7264%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1266 (42 instructions, 0.09%)</title><rect x="81.5002%" y="117" width="0.0947%" height="15" fill="rgb(245,83,25)" fg:x="36138" fg:w="42"/><text x="81.7932%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.5949%" y="117" width="0.0248%" height="15" fill="rgb(214,205,45)" fg:x="36180" fg:w="11"/><text x="81.8879%" y="127.50"></text></g><g><title>candid::types::internal::env_id (685 instructions, 1.54%)</title><rect x="80.4335%" y="133" width="1.5448%" height="15" fill="rgb(241,20,18)" fg:x="35665" fg:w="685"/><text x="80.7264%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.19%)</title><rect x="74.0646%" y="149" width="8.1933%" height="15" fill="rgb(232,163,23)" fg:x="32841" fg:w="3633"/><text x="74.3576%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.2580%" y="117" width="0.1714%" height="15" fill="rgb(214,5,46)" fg:x="36474" fg:w="76"/><text x="82.5509%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="82.2580%" y="133" width="0.2481%" height="15" fill="rgb(229,78,17)" fg:x="36474" fg:w="110"/><text x="82.5509%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="82.2580%" y="149" width="0.4014%" height="15" fill="rgb(248,89,10)" fg:x="36474" fg:w="178"/><text x="82.5509%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="82.6594%" y="133" width="0.0541%" height="15" fill="rgb(248,54,15)" fg:x="36652" fg:w="24"/><text x="82.9524%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.7135%" y="101" width="0.1759%" height="15" fill="rgb(223,116,6)" fg:x="36676" fg:w="78"/><text x="83.0065%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.35%)</title><rect x="82.7135%" y="117" width="0.3451%" height="15" fill="rgb(205,125,38)" fg:x="36676" fg:w="153"/><text x="83.0065%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="83.0586%" y="117" width="0.1714%" height="15" fill="rgb(251,78,38)" fg:x="36829" fg:w="76"/><text x="83.3515%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.69%)</title><rect x="82.7135%" y="133" width="0.6946%" height="15" fill="rgb(253,78,28)" fg:x="36676" fg:w="308"/><text x="83.0065%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4081%" y="85" width="0.1195%" height="15" fill="rgb(209,120,3)" fg:x="36984" fg:w="53"/><text x="83.7011%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="83.5277%" y="85" width="0.3473%" height="15" fill="rgb(238,229,9)" fg:x="37037" fg:w="154"/><text x="83.8206%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="83.4081%" y="101" width="0.5819%" height="15" fill="rgb(253,159,18)" fg:x="36984" fg:w="258"/><text x="83.7011%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.07%)</title><rect x="83.4081%" y="117" width="1.0667%" height="15" fill="rgb(244,42,34)" fg:x="36984" fg:w="473"/><text x="83.7011%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="84.4749%" y="117" width="0.1714%" height="15" fill="rgb(224,8,7)" fg:x="37457" fg:w="76"/><text x="84.7678%" y="127.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="84.6463%" y="117" width="0.3067%" height="15" fill="rgb(210,201,45)" fg:x="37533" fg:w="136"/><text x="84.9392%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 2.23%)</title><rect x="83.4081%" y="133" width="2.2304%" height="15" fill="rgb(252,185,21)" fg:x="36984" fg:w="989"/><text x="83.7011%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.6386%" y="101" width="0.1714%" height="15" fill="rgb(223,131,1)" fg:x="37973" fg:w="76"/><text x="85.9315%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="85.6386%" y="117" width="0.2481%" height="15" fill="rgb(245,141,16)" fg:x="37973" fg:w="110"/><text x="85.9315%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="85.6386%" y="133" width="0.4014%" height="15" fill="rgb(229,55,45)" fg:x="37973" fg:w="178"/><text x="85.9315%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.0400%" y="85" width="0.1195%" height="15" fill="rgb(208,92,15)" fg:x="38151" fg:w="53"/><text x="86.3330%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="86.0400%" y="101" width="0.1759%" height="15" fill="rgb(234,185,47)" fg:x="38151" fg:w="78"/><text x="86.3330%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="86.0400%" y="117" width="0.6608%" height="15" fill="rgb(253,104,50)" fg:x="38151" fg:w="293"/><text x="86.3330%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.7008%" y="117" width="0.0406%" height="15" fill="rgb(205,70,7)" fg:x="38444" fg:w="18"/><text x="86.9938%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.7414%" y="117" width="0.0248%" height="15" fill="rgb(240,178,43)" fg:x="38462" fg:w="11"/><text x="87.0344%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.99%)</title><rect x="86.0400%" y="133" width="0.9878%" height="15" fill="rgb(214,112,2)" fg:x="38151" fg:w="438"/><text x="86.3330%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="87.0278%" y="85" width="0.1714%" height="15" fill="rgb(206,46,17)" fg:x="38589" fg:w="76"/><text x="87.3208%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="87.0278%" y="101" width="0.2481%" height="15" fill="rgb(225,220,16)" fg:x="38589" fg:w="110"/><text x="87.3208%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="87.0278%" y="117" width="0.3947%" height="15" fill="rgb(238,65,40)" fg:x="38589" fg:w="175"/><text x="87.3208%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.51%)</title><rect x="87.0278%" y="133" width="0.5119%" height="15" fill="rgb(230,151,21)" fg:x="38589" fg:w="227"/><text x="87.3208%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.13%)</title><rect x="87.5397%" y="133" width="0.1263%" height="15" fill="rgb(218,58,49)" fg:x="38816" fg:w="56"/><text x="87.8327%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.6660%" y="101" width="0.1827%" height="15" fill="rgb(219,179,14)" fg:x="38872" fg:w="81"/><text x="87.9590%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="87.6660%" y="117" width="0.2436%" height="15" fill="rgb(223,72,1)" fg:x="38872" fg:w="108"/><text x="87.9590%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="87.9096%" y="117" width="0.1759%" height="15" fill="rgb(238,126,10)" fg:x="38980" fg:w="78"/><text x="88.2026%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.49%)</title><rect x="87.6660%" y="133" width="0.4916%" height="15" fill="rgb(224,206,38)" fg:x="38872" fg:w="218"/><text x="87.9590%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.1577%" y="133" width="0.0248%" height="15" fill="rgb(212,201,54)" fg:x="39090" fg:w="11"/><text x="88.4507%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 5.98%)</title><rect x="82.6594%" y="149" width="5.9809%" height="15" fill="rgb(218,154,48)" fg:x="36652" fg:w="2652"/><text x="82.9524%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.6403%" y="149" width="0.0248%" height="15" fill="rgb(232,93,24)" fg:x="39304" fg:w="11"/><text x="88.9333%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="88.6651%" y="117" width="0.1714%" height="15" fill="rgb(245,30,21)" fg:x="39315" fg:w="76"/><text x="88.9581%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="88.6651%" y="133" width="0.2481%" height="15" fill="rgb(242,148,29)" fg:x="39315" fg:w="110"/><text x="88.9581%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="89.0598%" y="117" width="0.2278%" height="15" fill="rgb(244,153,54)" fg:x="39490" fg:w="101"/><text x="89.3528%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="89.0598%" y="133" width="0.3067%" height="15" fill="rgb(252,87,22)" fg:x="39490" fg:w="136"/><text x="89.3528%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.87%)</title><rect x="88.6651%" y="149" width="0.8660%" height="15" fill="rgb(210,51,29)" fg:x="39315" fg:w="384"/><text x="88.9581%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.66%)</title><rect x="89.5311%" y="149" width="0.6630%" height="15" fill="rgb(242,136,47)" fg:x="39699" fg:w="294"/><text x="89.8241%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="90.1942%" y="149" width="0.2706%" height="15" fill="rgb(238,68,4)" fg:x="39993" fg:w="120"/><text x="90.4871%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="90.4648%" y="149" width="0.0722%" height="15" fill="rgb(242,161,30)" fg:x="40113" fg:w="32"/><text x="90.7578%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.5370%" y="117" width="0.1714%" height="15" fill="rgb(218,58,44)" fg:x="40145" fg:w="76"/><text x="90.8299%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="90.5370%" y="133" width="0.2481%" height="15" fill="rgb(252,125,32)" fg:x="40145" fg:w="110"/><text x="90.8299%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="90.5370%" y="149" width="0.3947%" height="15" fill="rgb(219,178,0)" fg:x="40145" fg:w="175"/><text x="90.8299%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.9316%" y="149" width="0.1714%" height="15" fill="rgb(213,152,7)" fg:x="40320" fg:w="76"/><text x="91.2246%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.1030%" y="149" width="0.1015%" height="15" fill="rgb(249,109,34)" fg:x="40396" fg:w="45"/><text x="91.3960%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.2045%" y="149" width="0.1015%" height="15" fill="rgb(232,96,21)" fg:x="40441" fg:w="45"/><text x="91.4975%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="91.3060%" y="149" width="0.1240%" height="15" fill="rgb(228,27,39)" fg:x="40486" fg:w="55"/><text x="91.5990%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.4301%" y="101" width="0.1195%" height="15" fill="rgb(211,182,52)" fg:x="40541" fg:w="53"/><text x="91.7230%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="91.5496%" y="101" width="0.3473%" height="15" fill="rgb(234,178,38)" fg:x="40594" fg:w="154"/><text x="91.8426%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="91.4301%" y="117" width="0.5819%" height="15" fill="rgb(221,111,3)" fg:x="40541" fg:w="258"/><text x="91.7230%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.07%)</title><rect x="91.4301%" y="133" width="1.0667%" height="15" fill="rgb(228,175,21)" fg:x="40541" fg:w="473"/><text x="91.7230%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="92.4968%" y="101" width="0.1714%" height="15" fill="rgb(228,174,43)" fg:x="41014" fg:w="76"/><text x="92.7898%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="92.4968%" y="117" width="0.2481%" height="15" fill="rgb(211,191,0)" fg:x="41014" fg:w="110"/><text x="92.7898%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="92.4968%" y="133" width="0.3947%" height="15" fill="rgb(253,117,3)" fg:x="41014" fg:w="175"/><text x="92.7898%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (821 instructions, 1.85%)</title><rect x="91.4301%" y="149" width="1.8516%" height="15" fill="rgb(241,127,19)" fg:x="40541" fg:w="821"/><text x="91.7230%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.2816%" y="149" width="0.0677%" height="15" fill="rgb(218,103,12)" fg:x="41362" fg:w="30"/><text x="93.5746%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="93.3493%" y="149" width="0.1240%" height="15" fill="rgb(236,214,43)" fg:x="41392" fg:w="55"/><text x="93.6422%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.07%)</title><rect x="93.4733%" y="149" width="0.0744%" height="15" fill="rgb(244,144,19)" fg:x="41447" fg:w="33"/><text x="93.7663%" y="159.50"></text></g><g><title>std::io::Write::write_all (61 instructions, 0.14%)</title><rect x="93.5477%" y="149" width="0.1376%" height="15" fill="rgb(246,188,10)" fg:x="41480" fg:w="61"/><text x="93.8407%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.6853%" y="149" width="0.1827%" height="15" fill="rgb(212,193,33)" fg:x="41541" fg:w="81"/><text x="93.9783%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8680%" y="149" width="0.2774%" height="15" fill="rgb(241,51,29)" fg:x="41622" fg:w="123"/><text x="94.1609%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.1454%" y="149" width="0.0248%" height="15" fill="rgb(211,58,19)" fg:x="41745" fg:w="11"/><text x="94.4383%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="94.1702%" y="149" width="0.3789%" height="15" fill="rgb(229,111,26)" fg:x="41756" fg:w="168"/><text x="94.4631%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5491%" y="149" width="0.0113%" height="15" fill="rgb(213,115,40)" fg:x="41924" fg:w="5"/><text x="94.8420%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.5603%" y="149" width="0.0248%" height="15" fill="rgb(209,56,44)" fg:x="41929" fg:w="11"/><text x="94.8533%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.5851%" y="149" width="0.2706%" height="15" fill="rgb(230,108,32)" fg:x="41940" fg:w="120"/><text x="94.8781%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="94.8558%" y="149" width="0.1240%" height="15" fill="rgb(216,165,31)" fg:x="42060" fg:w="55"/><text x="95.1487%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.22%)</title><rect x="94.9798%" y="149" width="0.2188%" height="15" fill="rgb(218,122,21)" fg:x="42115" fg:w="97"/><text x="95.2728%" y="159.50"></text></g><g><title>candid::utils::write_args (10,889 instructions, 24.56%)</title><rect x="72.5288%" y="165" width="24.5574%" height="15" fill="rgb(223,224,47)" fg:x="32160" fg:w="10889"/><text x="72.8218%" y="175.50">candid::utils::write_args</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (43,690 instructions, 98.53%)</title><rect x="0.3856%" y="181" width="98.5318%" height="15" fill="rgb(238,102,44)" fg:x="171" fg:w="43690"/><text x="0.6786%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9175%" y="181" width="0.0271%" height="15" fill="rgb(236,46,40)" fg:x="43861" fg:w="12"/><text x="99.2104%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="99.2287%" y="165" width="0.1240%" height="15" fill="rgb(247,202,50)" fg:x="43999" fg:w="55"/><text x="99.5217%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="99.3527%" y="165" width="0.1421%" height="15" fill="rgb(209,99,20)" fg:x="44054" fg:w="63"/><text x="99.6457%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (370 instructions, 0.83%)</title><rect x="98.9445%" y="181" width="0.8344%" height="15" fill="rgb(252,27,34)" fg:x="43873" fg:w="370"/><text x="99.2375%" y="191.50"></text></g><g><title>all (44,341 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(215,206,23)" fg:x="0" fg:w="44341"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (44,341 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(212,135,36)" fg:x="0" fg:w="44341"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>