<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="39949"><g><title>ic_cdk::setup (24 instructions, 0.06%)</title><rect x="0.0000%" y="181" width="0.0601%" height="15" fill="rgb(228,1,10)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="0.0601%" y="181" width="0.2078%" height="15" fill="rgb(213,116,27)" fg:x="24" fg:w="83"/><text x="0.3530%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="0.2678%" y="181" width="0.2078%" height="15" fill="rgb(241,95,50)" fg:x="107" fg:w="83"/><text x="0.5608%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="0.4756%" y="165" width="0.2078%" height="15" fill="rgb(238,48,32)" fg:x="190" fg:w="83"/><text x="0.7686%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.21%)</title><rect x="0.6834%" y="149" width="0.2053%" height="15" fill="rgb(235,113,49)" fg:x="273" fg:w="82"/><text x="0.9763%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="0.8886%" y="133" width="0.0150%" height="15" fill="rgb(205,127,43)" fg:x="355" fg:w="6"/><text x="1.1816%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.11%)</title><rect x="0.8886%" y="149" width="1.1089%" height="15" fill="rgb(250,162,2)" fg:x="355" fg:w="443"/><text x="1.1816%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.24%)</title><rect x="1.9975%" y="149" width="0.2378%" height="15" fill="rgb(220,13,41)" fg:x="798" fg:w="95"/><text x="2.2905%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.15%)</title><rect x="2.2354%" y="149" width="0.1502%" height="15" fill="rgb(249,221,25)" fg:x="893" fg:w="60"/><text x="2.5283%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.15%)</title><rect x="2.3855%" y="149" width="0.1502%" height="15" fill="rgb(215,208,19)" fg:x="953" fg:w="60"/><text x="2.6785%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.15%)</title><rect x="2.5357%" y="149" width="0.1502%" height="15" fill="rgb(236,175,2)" fg:x="1013" fg:w="60"/><text x="2.8287%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.15%)</title><rect x="2.6859%" y="149" width="0.1502%" height="15" fill="rgb(241,52,2)" fg:x="1073" fg:w="60"/><text x="2.9789%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.21%)</title><rect x="2.8361%" y="149" width="0.2053%" height="15" fill="rgb(248,140,14)" fg:x="1133" fg:w="82"/><text x="3.1291%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.18%)</title><rect x="3.0414%" y="149" width="0.1752%" height="15" fill="rgb(253,22,42)" fg:x="1215" fg:w="70"/><text x="3.3343%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="3.2166%" y="133" width="0.0150%" height="15" fill="rgb(234,61,47)" fg:x="1285" fg:w="6"/><text x="3.5096%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.11%)</title><rect x="3.2166%" y="149" width="1.1089%" height="15" fill="rgb(208,226,15)" fg:x="1285" fg:w="443"/><text x="3.5096%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="4.3255%" y="149" width="0.0476%" height="15" fill="rgb(217,221,4)" fg:x="1728" fg:w="19"/><text x="4.6185%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="4.3731%" y="133" width="0.2078%" height="15" fill="rgb(212,174,34)" fg:x="1747" fg:w="83"/><text x="4.6660%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="4.5808%" y="101" width="0.1677%" height="15" fill="rgb(253,83,4)" fg:x="1830" fg:w="67"/><text x="4.8738%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.24%)</title><rect x="4.5808%" y="117" width="0.2403%" height="15" fill="rgb(250,195,49)" fg:x="1830" fg:w="96"/><text x="4.8738%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="4.8211%" y="69" width="0.0275%" height="15" fill="rgb(241,192,25)" fg:x="1926" fg:w="11"/><text x="5.1141%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="4.8487%" y="53" width="0.0876%" height="15" fill="rgb(208,124,10)" fg:x="1937" fg:w="35"/><text x="5.1417%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.16%)</title><rect x="4.8487%" y="69" width="0.1602%" height="15" fill="rgb(222,33,0)" fg:x="1937" fg:w="64"/><text x="5.1417%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.36%)</title><rect x="4.8211%" y="85" width="0.3605%" height="15" fill="rgb(234,209,28)" fg:x="1926" fg:w="144"/><text x="5.1141%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.52%)</title><rect x="4.8211%" y="101" width="0.5232%" height="15" fill="rgb(224,11,23)" fg:x="1926" fg:w="209"/><text x="5.1141%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.55%)</title><rect x="4.8211%" y="117" width="0.5482%" height="15" fill="rgb(232,99,1)" fg:x="1926" fg:w="219"/><text x="5.1141%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 1.14%)</title><rect x="4.5808%" y="133" width="1.1440%" height="15" fill="rgb(237,95,45)" fg:x="1830" fg:w="457"/><text x="4.8738%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.70%)</title><rect x="4.3731%" y="149" width="1.6972%" height="15" fill="rgb(208,109,11)" fg:x="1747" fg:w="678"/><text x="4.6660%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.24%)</title><rect x="6.0702%" y="149" width="0.2378%" height="15" fill="rgb(216,190,48)" fg:x="2425" fg:w="95"/><text x="6.3632%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="6.3080%" y="149" width="0.1502%" height="15" fill="rgb(251,171,36)" fg:x="2520" fg:w="60"/><text x="6.6010%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.19%)</title><rect x="6.4582%" y="149" width="0.1902%" height="15" fill="rgb(230,62,22)" fg:x="2580" fg:w="76"/><text x="6.7512%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.18%)</title><rect x="6.6485%" y="149" width="0.1752%" height="15" fill="rgb(225,114,35)" fg:x="2656" fg:w="70"/><text x="6.9414%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="6.8237%" y="117" width="0.0150%" height="15" fill="rgb(215,118,42)" fg:x="2726" fg:w="6"/><text x="7.1167%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.11%)</title><rect x="6.8237%" y="133" width="1.1089%" height="15" fill="rgb(243,119,21)" fg:x="2726" fg:w="443"/><text x="7.1167%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.05%)</title><rect x="7.9326%" y="133" width="0.0476%" height="15" fill="rgb(252,177,53)" fg:x="3169" fg:w="19"/><text x="8.2256%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="7.9802%" y="117" width="0.2078%" height="15" fill="rgb(237,209,29)" fg:x="3188" fg:w="83"/><text x="8.2731%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="8.1879%" y="85" width="0.1677%" height="15" fill="rgb(212,65,23)" fg:x="3271" fg:w="67"/><text x="8.4809%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.24%)</title><rect x="8.1879%" y="101" width="0.2403%" height="15" fill="rgb(230,222,46)" fg:x="3271" fg:w="96"/><text x="8.4809%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="8.4282%" y="53" width="0.0275%" height="15" fill="rgb(215,135,32)" fg:x="3367" fg:w="11"/><text x="8.7212%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="8.4558%" y="37" width="0.0876%" height="15" fill="rgb(246,101,22)" fg:x="3378" fg:w="35"/><text x="8.7487%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.16%)</title><rect x="8.4558%" y="53" width="0.1602%" height="15" fill="rgb(206,107,13)" fg:x="3378" fg:w="64"/><text x="8.7487%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.36%)</title><rect x="8.4282%" y="69" width="0.3605%" height="15" fill="rgb(250,100,44)" fg:x="3367" fg:w="144"/><text x="8.7212%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.52%)</title><rect x="8.4282%" y="85" width="0.5232%" height="15" fill="rgb(231,147,38)" fg:x="3367" fg:w="209"/><text x="8.7212%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.55%)</title><rect x="8.4282%" y="101" width="0.5482%" height="15" fill="rgb(229,8,40)" fg:x="3367" fg:w="219"/><text x="8.7212%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 1.14%)</title><rect x="8.1879%" y="117" width="1.1440%" height="15" fill="rgb(221,135,30)" fg:x="3271" fg:w="457"/><text x="8.4809%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.70%)</title><rect x="7.9802%" y="133" width="1.6972%" height="15" fill="rgb(249,193,18)" fg:x="3188" fg:w="678"/><text x="8.2731%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.24%)</title><rect x="9.6773%" y="133" width="0.2378%" height="15" fill="rgb(209,133,39)" fg:x="3866" fg:w="95"/><text x="9.9703%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="9.9151%" y="133" width="0.1502%" height="15" fill="rgb(232,100,14)" fg:x="3961" fg:w="60"/><text x="10.2081%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.21%)</title><rect x="10.0653%" y="117" width="0.2053%" height="15" fill="rgb(224,185,1)" fg:x="4021" fg:w="82"/><text x="10.3583%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.24%)</title><rect x="10.2706%" y="117" width="0.2378%" height="15" fill="rgb(223,139,8)" fg:x="4103" fg:w="95"/><text x="10.5636%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.19%)</title><rect x="10.5084%" y="117" width="0.1902%" height="15" fill="rgb(232,213,38)" fg:x="4198" fg:w="76"/><text x="10.8014%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.84%)</title><rect x="10.0653%" y="133" width="0.8386%" height="15" fill="rgb(207,94,22)" fg:x="4021" fg:w="335"/><text x="10.3583%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="10.9039%" y="133" width="0.2078%" height="15" fill="rgb(219,183,54)" fg:x="4356" fg:w="83"/><text x="11.1969%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.21%)</title><rect x="11.1117%" y="117" width="0.2053%" height="15" fill="rgb(216,185,54)" fg:x="4439" fg:w="82"/><text x="11.4046%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.24%)</title><rect x="11.3169%" y="117" width="0.2378%" height="15" fill="rgb(254,217,39)" fg:x="4521" fg:w="95"/><text x="11.6099%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.19%)</title><rect x="11.5547%" y="117" width="0.1902%" height="15" fill="rgb(240,178,23)" fg:x="4616" fg:w="76"/><text x="11.8477%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.83%)</title><rect x="11.1117%" y="133" width="0.8261%" height="15" fill="rgb(218,11,47)" fg:x="4439" fg:w="330"/><text x="11.4046%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,339 instructions, 5.85%)</title><rect x="6.8237%" y="149" width="5.8550%" height="15" fill="rgb(218,51,51)" fg:x="2726" fg:w="2339"/><text x="7.1167%" y="159.50">binrea..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.19%)</title><rect x="12.6787%" y="149" width="0.1902%" height="15" fill="rgb(238,126,27)" fg:x="5065" fg:w="76"/><text x="12.9716%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="12.8689%" y="149" width="0.0375%" height="15" fill="rgb(249,202,22)" fg:x="5141" fg:w="15"/><text x="13.1619%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="12.9065%" y="149" width="0.0375%" height="15" fill="rgb(254,195,49)" fg:x="5156" fg:w="15"/><text x="13.1994%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.04%)</title><rect x="12.9440%" y="149" width="0.0375%" height="15" fill="rgb(208,123,14)" fg:x="5171" fg:w="15"/><text x="13.2370%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (6 instructions, 0.02%)</title><rect x="12.9816%" y="149" width="0.0150%" height="15" fill="rgb(224,200,8)" fg:x="5186" fg:w="6"/><text x="13.2745%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="12.9966%" y="133" width="0.2078%" height="15" fill="rgb(217,61,36)" fg:x="5192" fg:w="83"/><text x="13.2895%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.45%)</title><rect x="12.9966%" y="149" width="0.4481%" height="15" fill="rgb(206,35,45)" fg:x="5192" fg:w="179"/><text x="13.2895%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="13.4446%" y="117" width="0.2078%" height="15" fill="rgb(217,65,33)" fg:x="5371" fg:w="83"/><text x="13.7376%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="13.4446%" y="133" width="0.3154%" height="15" fill="rgb(222,158,48)" fg:x="5371" fg:w="126"/><text x="13.7376%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.53%)</title><rect x="13.4446%" y="149" width="0.5282%" height="15" fill="rgb(254,2,54)" fg:x="5371" fg:w="211"/><text x="13.7376%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="13.9728%" y="133" width="0.2078%" height="15" fill="rgb(250,143,38)" fg:x="5582" fg:w="83"/><text x="14.2658%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.45%)</title><rect x="13.9728%" y="149" width="0.4481%" height="15" fill="rgb(248,25,0)" fg:x="5582" fg:w="179"/><text x="14.2658%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="14.4209%" y="149" width="0.2078%" height="15" fill="rgb(206,152,27)" fg:x="5761" fg:w="83"/><text x="14.7139%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="14.6287%" y="149" width="0.2228%" height="15" fill="rgb(240,77,30)" fg:x="5844" fg:w="89"/><text x="14.9216%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="14.8514%" y="149" width="0.2078%" height="15" fill="rgb(231,5,3)" fg:x="5933" fg:w="83"/><text x="15.1444%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="15.0592%" y="149" width="0.2078%" height="15" fill="rgb(207,226,32)" fg:x="6016" fg:w="83"/><text x="15.3522%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 instructions, 0.01%)</title><rect x="15.2670%" y="149" width="0.0100%" height="15" fill="rgb(222,207,47)" fg:x="6099" fg:w="4"/><text x="15.5599%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="15.2770%" y="149" width="0.2228%" height="15" fill="rgb(229,115,45)" fg:x="6103" fg:w="89"/><text x="15.5699%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.98%)</title><rect x="15.4998%" y="149" width="0.9813%" height="15" fill="rgb(224,191,6)" fg:x="6192" fg:w="392"/><text x="15.7927%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.98%)</title><rect x="16.4810%" y="149" width="0.9813%" height="15" fill="rgb(230,227,24)" fg:x="6584" fg:w="392"/><text x="16.7740%" y="159.50"></text></g><g><title>memcpy (504 instructions, 1.26%)</title><rect x="17.4623%" y="149" width="1.2616%" height="15" fill="rgb(228,80,19)" fg:x="6976" fg:w="504"/><text x="17.7552%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (8,504 instructions, 21.29%)</title><rect x="0.6834%" y="165" width="21.2871%" height="15" fill="rgb(247,229,0)" fg:x="273" fg:w="8504"/><text x="0.9763%" y="175.50">candid::de::IDLDeserialize::..</text></g><g><title>memcpy (344 instructions, 0.86%)</title><rect x="21.9705%" y="165" width="0.8611%" height="15" fill="rgb(237,194,15)" fg:x="8777" fg:w="344"/><text x="22.2635%" y="175.50"></text></g><g><title>candid::types::internal::find_type (73 instructions, 0.18%)</title><rect x="22.8316%" y="149" width="0.1827%" height="15" fill="rgb(219,203,20)" fg:x="9121" fg:w="73"/><text x="23.1246%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="23.0143%" y="149" width="0.2078%" height="15" fill="rgb(234,128,8)" fg:x="9194" fg:w="83"/><text x="23.3073%" y="159.50"></text></g><g><title>memmove (220 instructions, 0.55%)</title><rect x="23.2221%" y="133" width="0.5507%" height="15" fill="rgb(248,202,8)" fg:x="9277" fg:w="220"/><text x="23.5151%" y="143.50"></text></g><g><title>memmove (92 instructions, 0.23%)</title><rect x="23.7728%" y="133" width="0.2303%" height="15" fill="rgb(206,104,37)" fg:x="9497" fg:w="92"/><text x="24.0658%" y="143.50"></text></g><g><title>candid::types::internal::env_add (504 instructions, 1.26%)</title><rect x="23.2221%" y="149" width="1.2616%" height="15" fill="rgb(223,8,27)" fg:x="9277" fg:w="504"/><text x="23.5151%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="24.4837%" y="149" width="0.2078%" height="15" fill="rgb(216,217,28)" fg:x="9781" fg:w="83"/><text x="24.7767%" y="159.50"></text></g><g><title>memcmp (537 instructions, 1.34%)</title><rect x="24.6915%" y="133" width="1.3442%" height="15" fill="rgb(249,199,1)" fg:x="9864" fg:w="537"/><text x="24.9845%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="26.0357%" y="117" width="0.2228%" height="15" fill="rgb(240,85,17)" fg:x="10401" fg:w="89"/><text x="26.3287%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.33%)</title><rect x="26.0357%" y="133" width="0.3329%" height="15" fill="rgb(206,108,45)" fg:x="10401" fg:w="133"/><text x="26.3287%" y="143.50"></text></g><g><title>candid::types::internal::env_add (842 instructions, 2.11%)</title><rect x="24.6915%" y="149" width="2.1077%" height="15" fill="rgb(245,210,41)" fg:x="9864" fg:w="842"/><text x="24.9845%" y="159.50">c..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.11%)</title><rect x="26.7992%" y="133" width="0.1101%" height="15" fill="rgb(206,13,37)" fg:x="10706" fg:w="44"/><text x="27.0921%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (51 instructions, 0.13%)</title><rect x="26.9093%" y="133" width="0.1277%" height="15" fill="rgb(250,61,18)" fg:x="10750" fg:w="51"/><text x="27.2023%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="27.0370%" y="133" width="0.0325%" height="15" fill="rgb(235,172,48)" fg:x="10801" fg:w="13"/><text x="27.3299%" y="143.50"></text></g><g><title>candid::types::internal::env_id (275 instructions, 0.69%)</title><rect x="26.7992%" y="149" width="0.6884%" height="15" fill="rgb(249,201,17)" fg:x="10706" fg:w="275"/><text x="27.0921%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (1,989 instructions, 4.98%)</title><rect x="22.8316%" y="165" width="4.9788%" height="15" fill="rgb(219,208,6)" fg:x="9121" fg:w="1989"/><text x="23.1246%" y="175.50">candi..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.12%)</title><rect x="27.8105%" y="149" width="0.1227%" height="15" fill="rgb(248,31,23)" fg:x="11110" fg:w="49"/><text x="28.1034%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="27.9331%" y="117" width="0.0676%" height="15" fill="rgb(245,15,42)" fg:x="11159" fg:w="27"/><text x="28.2261%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="27.9331%" y="133" width="0.3555%" height="15" fill="rgb(222,217,39)" fg:x="11159" fg:w="142"/><text x="28.2261%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="28.3987%" y="117" width="0.0676%" height="15" fill="rgb(210,219,27)" fg:x="11345" fg:w="27"/><text x="28.6917%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="28.3987%" y="133" width="0.3555%" height="15" fill="rgb(252,166,36)" fg:x="11345" fg:w="142"/><text x="28.6917%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.93%)</title><rect x="27.9331%" y="149" width="0.9312%" height="15" fill="rgb(245,132,34)" fg:x="11159" fg:w="372"/><text x="28.2261%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.09%)</title><rect x="28.8643%" y="133" width="0.0876%" height="15" fill="rgb(236,54,3)" fg:x="11531" fg:w="35"/><text x="29.1573%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.09%)</title><rect x="28.9519%" y="133" width="0.0876%" height="15" fill="rgb(241,173,43)" fg:x="11566" fg:w="35"/><text x="29.2449%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (34 instructions, 0.09%)</title><rect x="29.0395%" y="133" width="0.0851%" height="15" fill="rgb(215,190,9)" fg:x="11601" fg:w="34"/><text x="29.3325%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (34 instructions, 0.09%)</title><rect x="29.1246%" y="133" width="0.0851%" height="15" fill="rgb(242,101,16)" fg:x="11635" fg:w="34"/><text x="29.4176%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="29.2097%" y="133" width="0.2078%" height="15" fill="rgb(223,190,21)" fg:x="11669" fg:w="83"/><text x="29.5027%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.21%)</title><rect x="29.4175%" y="133" width="0.2053%" height="15" fill="rgb(215,228,25)" fg:x="11752" fg:w="82"/><text x="29.7105%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.23%)</title><rect x="29.6228%" y="133" width="0.2303%" height="15" fill="rgb(225,36,22)" fg:x="11834" fg:w="92"/><text x="29.9157%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.18%)</title><rect x="29.8531%" y="133" width="0.1752%" height="15" fill="rgb(251,106,46)" fg:x="11926" fg:w="70"/><text x="30.1460%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.02%)</title><rect x="30.0283%" y="117" width="0.0150%" height="15" fill="rgb(208,90,1)" fg:x="11996" fg:w="6"/><text x="30.3213%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 1.11%)</title><rect x="30.0283%" y="133" width="1.1089%" height="15" fill="rgb(243,10,4)" fg:x="11996" fg:w="443"/><text x="30.3213%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="31.1372%" y="117" width="0.2078%" height="15" fill="rgb(212,137,27)" fg:x="12439" fg:w="83"/><text x="31.4302%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.17%)</title><rect x="31.3450%" y="85" width="0.1677%" height="15" fill="rgb(231,220,49)" fg:x="12522" fg:w="67"/><text x="31.6379%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.24%)</title><rect x="31.3450%" y="101" width="0.2403%" height="15" fill="rgb(237,96,20)" fg:x="12522" fg:w="96"/><text x="31.6379%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.03%)</title><rect x="31.5853%" y="53" width="0.0275%" height="15" fill="rgb(239,229,30)" fg:x="12618" fg:w="11"/><text x="31.8782%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="31.6128%" y="37" width="0.0876%" height="15" fill="rgb(219,65,33)" fg:x="12629" fg:w="35"/><text x="31.9058%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.16%)</title><rect x="31.6128%" y="53" width="0.1602%" height="15" fill="rgb(243,134,7)" fg:x="12629" fg:w="64"/><text x="31.9058%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.36%)</title><rect x="31.5853%" y="69" width="0.3605%" height="15" fill="rgb(216,177,54)" fg:x="12618" fg:w="144"/><text x="31.8782%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.52%)</title><rect x="31.5853%" y="85" width="0.5232%" height="15" fill="rgb(211,160,20)" fg:x="12618" fg:w="209"/><text x="31.8782%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.55%)</title><rect x="31.5853%" y="101" width="0.5482%" height="15" fill="rgb(239,85,39)" fg:x="12618" fg:w="219"/><text x="31.8782%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 1.14%)</title><rect x="31.3450%" y="117" width="1.1440%" height="15" fill="rgb(232,125,22)" fg:x="12522" fg:w="457"/><text x="31.6379%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.70%)</title><rect x="31.1372%" y="133" width="1.6972%" height="15" fill="rgb(244,57,34)" fg:x="12439" fg:w="678"/><text x="31.4302%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.24%)</title><rect x="32.8344%" y="133" width="0.2378%" height="15" fill="rgb(214,203,32)" fg:x="13117" fg:w="95"/><text x="33.1273%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="33.0722%" y="133" width="0.1502%" height="15" fill="rgb(207,58,43)" fg:x="13212" fg:w="60"/><text x="33.3651%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="33.2224%" y="133" width="0.2128%" height="15" fill="rgb(215,193,15)" fg:x="13272" fg:w="85"/><text x="33.5153%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="33.4351%" y="133" width="0.2078%" height="15" fill="rgb(232,15,44)" fg:x="13357" fg:w="83"/><text x="33.7281%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="33.6429%" y="133" width="0.2128%" height="15" fill="rgb(212,3,48)" fg:x="13440" fg:w="85"/><text x="33.9359%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="33.8557%" y="133" width="0.2128%" height="15" fill="rgb(218,128,7)" fg:x="13525" fg:w="85"/><text x="34.1486%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="34.0684%" y="133" width="0.2128%" height="15" fill="rgb(226,216,39)" fg:x="13610" fg:w="85"/><text x="34.3614%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="34.2812%" y="133" width="0.2128%" height="15" fill="rgb(243,47,51)" fg:x="13695" fg:w="85"/><text x="34.5742%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="34.4940%" y="133" width="0.2128%" height="15" fill="rgb(241,183,40)" fg:x="13780" fg:w="85"/><text x="34.7869%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="34.7068%" y="133" width="0.2128%" height="15" fill="rgb(231,217,32)" fg:x="13865" fg:w="85"/><text x="34.9997%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="34.9195%" y="133" width="0.2128%" height="15" fill="rgb(229,61,38)" fg:x="13950" fg:w="85"/><text x="35.2125%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="35.1323%" y="133" width="0.2128%" height="15" fill="rgb(225,210,5)" fg:x="14035" fg:w="85"/><text x="35.4253%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.28%)</title><rect x="35.3451%" y="101" width="0.2779%" height="15" fill="rgb(231,79,45)" fg:x="14120" fg:w="111"/><text x="35.6380%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.39%)</title><rect x="35.3451%" y="117" width="0.3905%" height="15" fill="rgb(224,100,7)" fg:x="14120" fg:w="156"/><text x="35.6380%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.61%)</title><rect x="35.3451%" y="133" width="0.6083%" height="15" fill="rgb(241,198,18)" fg:x="14120" fg:w="243"/><text x="35.6380%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="35.9533%" y="133" width="0.2128%" height="15" fill="rgb(252,97,53)" fg:x="14363" fg:w="85"/><text x="36.2463%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="36.1661%" y="133" width="0.2128%" height="15" fill="rgb(220,88,7)" fg:x="14448" fg:w="85"/><text x="36.4591%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="36.3789%" y="133" width="0.2128%" height="15" fill="rgb(213,176,14)" fg:x="14533" fg:w="85"/><text x="36.6719%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="36.5917%" y="133" width="0.2128%" height="15" fill="rgb(246,73,7)" fg:x="14618" fg:w="85"/><text x="36.8846%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="36.8044%" y="133" width="0.2128%" height="15" fill="rgb(245,64,36)" fg:x="14703" fg:w="85"/><text x="37.0974%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="37.0172%" y="133" width="0.2128%" height="15" fill="rgb(245,80,10)" fg:x="14788" fg:w="85"/><text x="37.3102%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.21%)</title><rect x="37.2300%" y="133" width="0.2128%" height="15" fill="rgb(232,107,50)" fg:x="14873" fg:w="85"/><text x="37.5229%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 instructions, 0.09%)</title><rect x="37.4427%" y="133" width="0.0851%" height="15" fill="rgb(253,3,0)" fg:x="14958" fg:w="34"/><text x="37.7357%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.19%)</title><rect x="37.5278%" y="133" width="0.1902%" height="15" fill="rgb(212,99,53)" fg:x="14992" fg:w="76"/><text x="37.8208%" y="143.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="37.7181%" y="133" width="0.0826%" height="15" fill="rgb(249,111,54)" fg:x="15068" fg:w="33"/><text x="38.0111%" y="143.50"></text></g><g><title>__rust_realloc (55 instructions, 0.14%)</title><rect x="37.8007%" y="101" width="0.1377%" height="15" fill="rgb(249,55,30)" fg:x="15101" fg:w="55"/><text x="38.0937%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.25%)</title><rect x="37.8007%" y="117" width="0.2503%" height="15" fill="rgb(237,47,42)" fg:x="15101" fg:w="100"/><text x="38.0937%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.47%)</title><rect x="37.8007%" y="133" width="0.4681%" height="15" fill="rgb(211,20,18)" fg:x="15101" fg:w="187"/><text x="38.0937%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.55%)</title><rect x="38.2688%" y="133" width="0.5507%" height="15" fill="rgb(231,203,46)" fg:x="15288" fg:w="220"/><text x="38.5618%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.43%)</title><rect x="38.8195%" y="133" width="0.4280%" height="15" fill="rgb(237,142,3)" fg:x="15508" fg:w="171"/><text x="39.1125%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.13%)</title><rect x="39.2475%" y="133" width="0.1327%" height="15" fill="rgb(241,107,1)" fg:x="15679" fg:w="53"/><text x="39.5405%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="39.3802%" y="133" width="0.2228%" height="15" fill="rgb(229,83,13)" fg:x="15732" fg:w="89"/><text x="39.6732%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="39.6030%" y="133" width="0.1502%" height="15" fill="rgb(241,91,40)" fg:x="15821" fg:w="60"/><text x="39.8960%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,637 instructions, 14.11%)</title><rect x="28.8643%" y="149" width="14.1105%" height="15" fill="rgb(225,3,45)" fg:x="11531" fg:w="5637"/><text x="29.1573%" y="159.50">&lt;ic_principal::Pri..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="42.9748%" y="149" width="0.0325%" height="15" fill="rgb(244,223,14)" fg:x="17168" fg:w="13"/><text x="43.2678%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="43.0073%" y="149" width="0.0325%" height="15" fill="rgb(224,124,37)" fg:x="17181" fg:w="13"/><text x="43.3003%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="43.0399%" y="149" width="0.0325%" height="15" fill="rgb(251,171,30)" fg:x="17194" fg:w="13"/><text x="43.3328%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,376 instructions, 15.96%)</title><rect x="27.8105%" y="165" width="15.9603%" height="15" fill="rgb(236,46,54)" fg:x="11110" fg:w="6376"/><text x="28.1034%" y="175.50">candid::de::IDLDeseri..</text></g><g><title>candid::types::internal::find_type (112 instructions, 0.28%)</title><rect x="43.7708%" y="165" width="0.2804%" height="15" fill="rgb(245,213,5)" fg:x="17486" fg:w="112"/><text x="44.0638%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="44.0512%" y="165" width="0.2078%" height="15" fill="rgb(230,144,27)" fg:x="17598" fg:w="83"/><text x="44.3441%" y="175.50"></text></g><g><title>memmove (220 instructions, 0.55%)</title><rect x="44.2589%" y="149" width="0.5507%" height="15" fill="rgb(220,86,6)" fg:x="17681" fg:w="220"/><text x="44.5519%" y="159.50"></text></g><g><title>memmove (92 instructions, 0.23%)</title><rect x="44.8096%" y="149" width="0.2303%" height="15" fill="rgb(240,20,13)" fg:x="17901" fg:w="92"/><text x="45.1026%" y="159.50"></text></g><g><title>candid::types::internal::env_add (543 instructions, 1.36%)</title><rect x="44.2589%" y="165" width="1.3592%" height="15" fill="rgb(217,89,34)" fg:x="17681" fg:w="543"/><text x="44.5519%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="45.6182%" y="165" width="0.2078%" height="15" fill="rgb(229,13,5)" fg:x="18224" fg:w="83"/><text x="45.9111%" y="175.50"></text></g><g><title>memcmp (77 instructions, 0.19%)</title><rect x="45.8259%" y="149" width="0.1927%" height="15" fill="rgb(244,67,35)" fg:x="18307" fg:w="77"/><text x="46.1189%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="46.0187%" y="133" width="0.2228%" height="15" fill="rgb(221,40,2)" fg:x="18384" fg:w="89"/><text x="46.3116%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.33%)</title><rect x="46.0187%" y="149" width="0.3329%" height="15" fill="rgb(237,157,21)" fg:x="18384" fg:w="133"/><text x="46.3116%" y="159.50"></text></g><g><title>candid::types::internal::env_add (421 instructions, 1.05%)</title><rect x="45.8259%" y="165" width="1.0538%" height="15" fill="rgb(222,94,11)" fg:x="18307" fg:w="421"/><text x="46.1189%" y="175.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.08%)</title><rect x="46.8798%" y="149" width="0.0776%" height="15" fill="rgb(249,113,6)" fg:x="18728" fg:w="31"/><text x="47.1727%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.08%)</title><rect x="46.9574%" y="149" width="0.0776%" height="15" fill="rgb(238,137,36)" fg:x="18759" fg:w="31"/><text x="47.2503%" y="159.50"></text></g><g><title>memmove (156 instructions, 0.39%)</title><rect x="47.0350%" y="149" width="0.3905%" height="15" fill="rgb(210,102,26)" fg:x="18790" fg:w="156"/><text x="47.3279%" y="159.50"></text></g><g><title>memmove (172 instructions, 0.43%)</title><rect x="47.4255%" y="149" width="0.4305%" height="15" fill="rgb(218,30,30)" fg:x="18946" fg:w="172"/><text x="47.7184%" y="159.50"></text></g><g><title>candid::types::internal::env_id (671 instructions, 1.68%)</title><rect x="46.8798%" y="165" width="1.6796%" height="15" fill="rgb(214,67,26)" fg:x="18728" fg:w="671"/><text x="47.1727%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.12%)</title><rect x="48.5594%" y="165" width="0.1227%" height="15" fill="rgb(251,9,53)" fg:x="19399" fg:w="49"/><text x="48.8524%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="48.7146%" y="133" width="0.0676%" height="15" fill="rgb(228,204,25)" fg:x="19461" fg:w="27"/><text x="49.0076%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="48.7822%" y="133" width="0.0676%" height="15" fill="rgb(207,153,8)" fg:x="19488" fg:w="27"/><text x="49.0752%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.49%)</title><rect x="48.7146%" y="149" width="0.4931%" height="15" fill="rgb(242,9,16)" fg:x="19461" fg:w="197"/><text x="49.0076%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (254 instructions, 0.64%)</title><rect x="48.6821%" y="165" width="0.6358%" height="15" fill="rgb(217,211,10)" fg:x="19448" fg:w="254"/><text x="48.9750%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.09%)</title><rect x="49.3179%" y="149" width="0.0876%" height="15" fill="rgb(219,228,52)" fg:x="19702" fg:w="35"/><text x="49.6108%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (34 instructions, 0.09%)</title><rect x="49.4055%" y="149" width="0.0851%" height="15" fill="rgb(231,92,29)" fg:x="19737" fg:w="34"/><text x="49.6985%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (34 instructions, 0.09%)</title><rect x="49.4906%" y="149" width="0.0851%" height="15" fill="rgb(232,8,23)" fg:x="19771" fg:w="34"/><text x="49.7836%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.08%)</title><rect x="49.5757%" y="149" width="0.0826%" height="15" fill="rgb(216,211,34)" fg:x="19805" fg:w="33"/><text x="49.8687%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (250 instructions, 0.63%)</title><rect x="49.3179%" y="165" width="0.6258%" height="15" fill="rgb(236,151,0)" fg:x="19702" fg:w="250"/><text x="49.6108%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="49.9437%" y="165" width="0.0325%" height="15" fill="rgb(209,168,3)" fg:x="19952" fg:w="13"/><text x="50.2366%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="49.9762%" y="165" width="0.0325%" height="15" fill="rgb(208,129,28)" fg:x="19965" fg:w="13"/><text x="50.2692%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="50.0088%" y="165" width="0.0325%" height="15" fill="rgb(229,78,22)" fg:x="19978" fg:w="13"/><text x="50.3017%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.11%)</title><rect x="50.0413%" y="165" width="0.1076%" height="15" fill="rgb(228,187,13)" fg:x="19991" fg:w="43"/><text x="50.3343%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="50.1489%" y="149" width="0.0175%" height="15" fill="rgb(240,119,24)" fg:x="20034" fg:w="7"/><text x="50.4419%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="50.1665%" y="133" width="0.0676%" height="15" fill="rgb(209,194,42)" fg:x="20041" fg:w="27"/><text x="50.4594%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="50.1665%" y="149" width="0.3555%" height="15" fill="rgb(247,200,46)" fg:x="20041" fg:w="142"/><text x="50.4594%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="50.5219%" y="117" width="0.0676%" height="15" fill="rgb(218,76,16)" fg:x="20183" fg:w="27"/><text x="50.8149%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="50.5895%" y="117" width="0.0676%" height="15" fill="rgb(225,21,48)" fg:x="20210" fg:w="27"/><text x="50.8825%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.17%)</title><rect x="50.6571%" y="117" width="0.1702%" height="15" fill="rgb(239,223,50)" fg:x="20237" fg:w="68"/><text x="50.9501%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.61%)</title><rect x="50.5219%" y="133" width="0.6108%" height="15" fill="rgb(244,45,21)" fg:x="20183" fg:w="244"/><text x="50.8149%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 instructions, 0.72%)</title><rect x="50.5219%" y="149" width="0.7209%" height="15" fill="rgb(232,33,43)" fg:x="20183" fg:w="288"/><text x="50.8149%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="51.2428%" y="149" width="0.0325%" height="15" fill="rgb(209,8,3)" fg:x="20471" fg:w="13"/><text x="51.5358%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (510 instructions, 1.28%)</title><rect x="50.1489%" y="165" width="1.2766%" height="15" fill="rgb(214,25,53)" fg:x="20034" fg:w="510"/><text x="50.4419%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.17%)</title><rect x="51.4256%" y="149" width="0.1727%" height="15" fill="rgb(254,186,54)" fg:x="20544" fg:w="69"/><text x="51.7185%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.17%)</title><rect x="51.5983%" y="149" width="0.1702%" height="15" fill="rgb(208,174,49)" fg:x="20613" fg:w="68"/><text x="51.8913%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.58%)</title><rect x="51.4256%" y="165" width="0.5782%" height="15" fill="rgb(233,191,51)" fg:x="20544" fg:w="231"/><text x="51.7185%" y="175.50"></text></g><g><title>memset (240 instructions, 0.60%)</title><rect x="52.0038%" y="165" width="0.6008%" height="15" fill="rgb(222,134,10)" fg:x="20775" fg:w="240"/><text x="52.2968%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.44%)</title><rect x="52.6046%" y="165" width="0.4406%" height="15" fill="rgb(230,226,20)" fg:x="21015" fg:w="176"/><text x="52.8975%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.26%)</title><rect x="53.0451%" y="165" width="1.2616%" height="15" fill="rgb(251,111,25)" fg:x="21191" fg:w="504"/><text x="53.3381%" y="175.50"></text></g><g><title>memset (139 instructions, 0.35%)</title><rect x="54.3067%" y="149" width="0.3479%" height="15" fill="rgb(224,40,46)" fg:x="21695" fg:w="139"/><text x="54.5997%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 12.49%)</title><rect x="54.6547%" y="149" width="12.4909%" height="15" fill="rgb(236,108,47)" fg:x="21834" fg:w="4990"/><text x="54.9477%" y="159.50">sha2::sha256::co..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,432 instructions, 13.60%)</title><rect x="54.3067%" y="165" width="13.5973%" height="15" fill="rgb(234,93,0)" fg:x="21695" fg:w="5432"/><text x="54.5997%" y="175.50">&lt;sha2::core_api::..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="67.9041%" y="165" width="0.2078%" height="15" fill="rgb(224,213,32)" fg:x="27127" fg:w="83"/><text x="68.1970%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.17%)</title><rect x="68.1118%" y="117" width="0.1727%" height="15" fill="rgb(251,11,48)" fg:x="27210" fg:w="69"/><text x="68.4048%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.17%)</title><rect x="68.2846%" y="117" width="0.1702%" height="15" fill="rgb(236,173,5)" fg:x="27279" fg:w="68"/><text x="68.5775%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.58%)</title><rect x="68.1118%" y="133" width="0.5832%" height="15" fill="rgb(230,95,12)" fg:x="27210" fg:w="233"/><text x="68.4048%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (277 instructions, 0.69%)</title><rect x="68.1118%" y="149" width="0.6934%" height="15" fill="rgb(232,209,1)" fg:x="27210" fg:w="277"/><text x="68.4048%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="68.8378%" y="117" width="0.2228%" height="15" fill="rgb(232,6,1)" fg:x="27500" fg:w="89"/><text x="69.1307%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.33%)</title><rect x="68.8378%" y="133" width="0.3329%" height="15" fill="rgb(210,224,50)" fg:x="27500" fg:w="133"/><text x="69.1307%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="69.1707%" y="117" width="0.0676%" height="15" fill="rgb(228,127,35)" fg:x="27633" fg:w="27"/><text x="69.4637%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.36%)</title><rect x="69.1707%" y="133" width="0.3605%" height="15" fill="rgb(245,102,45)" fg:x="27633" fg:w="144"/><text x="69.4637%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (344 instructions, 0.86%)</title><rect x="68.8052%" y="149" width="0.8611%" height="15" fill="rgb(214,1,49)" fg:x="27487" fg:w="344"/><text x="69.0982%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="69.6663%" y="133" width="0.0676%" height="15" fill="rgb(226,163,40)" fg:x="27831" fg:w="27"/><text x="69.9593%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="69.7339%" y="133" width="0.0676%" height="15" fill="rgb(239,212,28)" fg:x="27858" fg:w="27"/><text x="70.0269%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.17%)</title><rect x="69.8015%" y="133" width="0.1702%" height="15" fill="rgb(220,20,13)" fg:x="27885" fg:w="68"/><text x="70.0945%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.61%)</title><rect x="69.6663%" y="149" width="0.6108%" height="15" fill="rgb(210,164,35)" fg:x="27831" fg:w="244"/><text x="69.9593%" y="159.50"></text></g><g><title>candid::types::internal::find_type (23 instructions, 0.06%)</title><rect x="70.2771%" y="133" width="0.0576%" height="15" fill="rgb(248,109,41)" fg:x="28075" fg:w="23"/><text x="70.5701%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="70.3347%" y="133" width="0.2078%" height="15" fill="rgb(238,23,50)" fg:x="28098" fg:w="83"/><text x="70.6276%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="70.5424%" y="117" width="0.2078%" height="15" fill="rgb(211,48,49)" fg:x="28181" fg:w="83"/><text x="70.8354%" y="127.50"></text></g><g><title>candid::types::internal::env_add (166 instructions, 0.42%)</title><rect x="70.5424%" y="133" width="0.4155%" height="15" fill="rgb(223,36,21)" fg:x="28181" fg:w="166"/><text x="70.8354%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="70.9580%" y="133" width="0.2078%" height="15" fill="rgb(207,123,46)" fg:x="28347" fg:w="83"/><text x="71.2509%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="71.1657%" y="133" width="0.2078%" height="15" fill="rgb(240,218,32)" fg:x="28430" fg:w="83"/><text x="71.4587%" y="143.50"></text></g><g><title>memcmp (675 instructions, 1.69%)</title><rect x="71.3735%" y="117" width="1.6897%" height="15" fill="rgb(252,5,43)" fg:x="28513" fg:w="675"/><text x="71.6665%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.22%)</title><rect x="73.0632%" y="101" width="0.2228%" height="15" fill="rgb(252,84,19)" fg:x="29188" fg:w="89"/><text x="73.3561%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.33%)</title><rect x="73.0632%" y="117" width="0.3329%" height="15" fill="rgb(243,152,39)" fg:x="29188" fg:w="133"/><text x="73.3561%" y="127.50"></text></g><g><title>candid::types::internal::env_add (980 instructions, 2.45%)</title><rect x="71.3735%" y="133" width="2.4531%" height="15" fill="rgb(234,160,15)" fg:x="28513" fg:w="980"/><text x="71.6665%" y="143.50">c..</text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.11%)</title><rect x="73.8266%" y="117" width="0.1101%" height="15" fill="rgb(237,34,20)" fg:x="29493" fg:w="44"/><text x="74.1196%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.28%)</title><rect x="73.9368%" y="117" width="0.2779%" height="15" fill="rgb(229,97,13)" fg:x="29537" fg:w="111"/><text x="74.2297%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="74.2146%" y="117" width="0.0325%" height="15" fill="rgb(234,71,50)" fg:x="29648" fg:w="13"/><text x="74.5076%" y="127.50"></text></g><g><title>candid::types::internal::env_id (335 instructions, 0.84%)</title><rect x="73.8266%" y="133" width="0.8386%" height="15" fill="rgb(253,155,4)" fg:x="29493" fg:w="335"/><text x="74.1196%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (1,904 instructions, 4.77%)</title><rect x="70.2771%" y="149" width="4.7661%" height="15" fill="rgb(222,185,37)" fg:x="28075" fg:w="1904"/><text x="70.5701%" y="159.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="75.0432%" y="117" width="0.2078%" height="15" fill="rgb(251,177,13)" fg:x="29979" fg:w="83"/><text x="75.3361%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="75.0432%" y="133" width="0.3154%" height="15" fill="rgb(250,179,40)" fg:x="29979" fg:w="126"/><text x="75.3361%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.53%)</title><rect x="75.0432%" y="149" width="0.5282%" height="15" fill="rgb(242,44,2)" fg:x="29979" fg:w="211"/><text x="75.3361%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.10%)</title><rect x="75.5714%" y="133" width="0.0951%" height="15" fill="rgb(216,177,13)" fg:x="30190" fg:w="38"/><text x="75.8643%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="75.6665%" y="133" width="0.2078%" height="15" fill="rgb(216,106,43)" fg:x="30228" fg:w="83"/><text x="75.9594%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="75.8742%" y="101" width="0.2078%" height="15" fill="rgb(216,183,2)" fg:x="30311" fg:w="83"/><text x="76.1672%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="75.8742%" y="117" width="0.3154%" height="15" fill="rgb(249,75,3)" fg:x="30311" fg:w="126"/><text x="76.1672%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.53%)</title><rect x="75.8742%" y="133" width="0.5282%" height="15" fill="rgb(219,67,39)" fg:x="30311" fg:w="211"/><text x="76.1672%" y="143.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.08%)</title><rect x="76.4024%" y="117" width="0.0776%" height="15" fill="rgb(253,228,2)" fg:x="30522" fg:w="31"/><text x="76.6954%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.08%)</title><rect x="76.4800%" y="117" width="0.0776%" height="15" fill="rgb(235,138,27)" fg:x="30553" fg:w="31"/><text x="76.7730%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="76.5576%" y="117" width="0.0325%" height="15" fill="rgb(236,97,51)" fg:x="30584" fg:w="13"/><text x="76.8506%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (203 instructions, 0.51%)</title><rect x="76.4024%" y="133" width="0.5081%" height="15" fill="rgb(240,80,30)" fg:x="30522" fg:w="203"/><text x="76.6954%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="76.9106%" y="85" width="0.2078%" height="15" fill="rgb(230,178,19)" fg:x="30725" fg:w="83"/><text x="77.2035%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="76.9106%" y="101" width="0.3154%" height="15" fill="rgb(210,190,27)" fg:x="30725" fg:w="126"/><text x="77.2035%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.52%)</title><rect x="76.9106%" y="117" width="0.5207%" height="15" fill="rgb(222,107,31)" fg:x="30725" fg:w="208"/><text x="77.2035%" y="127.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.67%)</title><rect x="76.9106%" y="133" width="0.6684%" height="15" fill="rgb(216,127,34)" fg:x="30725" fg:w="267"/><text x="77.2035%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.17%)</title><rect x="77.5789%" y="133" width="0.1652%" height="15" fill="rgb(234,116,52)" fg:x="30992" fg:w="66"/><text x="77.8719%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="77.7441%" y="133" width="0.0325%" height="15" fill="rgb(222,124,15)" fg:x="31058" fg:w="13"/><text x="78.0371%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (1,152 instructions, 2.88%)</title><rect x="75.5714%" y="149" width="2.8837%" height="15" fill="rgb(231,179,28)" fg:x="30190" fg:w="1152"/><text x="75.8643%" y="159.50">ca..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="78.4550%" y="149" width="0.0325%" height="15" fill="rgb(226,93,45)" fg:x="31342" fg:w="13"/><text x="78.7480%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="78.4876%" y="117" width="0.2078%" height="15" fill="rgb(215,8,51)" fg:x="31355" fg:w="83"/><text x="78.7805%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="78.4876%" y="133" width="0.3154%" height="15" fill="rgb(223,106,5)" fg:x="31355" fg:w="126"/><text x="78.7805%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.28%)</title><rect x="79.0082%" y="117" width="0.2779%" height="15" fill="rgb(250,191,5)" fg:x="31563" fg:w="111"/><text x="79.3012%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.39%)</title><rect x="79.0082%" y="133" width="0.3905%" height="15" fill="rgb(242,132,44)" fg:x="31563" fg:w="156"/><text x="79.3012%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 1.13%)</title><rect x="78.4876%" y="149" width="1.1289%" height="15" fill="rgb(251,152,29)" fg:x="31355" fg:w="451"/><text x="78.7805%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.78%)</title><rect x="79.6165%" y="149" width="0.7810%" height="15" fill="rgb(218,179,5)" fg:x="31806" fg:w="312"/><text x="79.9095%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.17%)</title><rect x="80.3975%" y="133" width="0.1727%" height="15" fill="rgb(227,67,19)" fg:x="32118" fg:w="69"/><text x="80.6905%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.17%)</title><rect x="80.5702%" y="133" width="0.1702%" height="15" fill="rgb(233,119,31)" fg:x="32187" fg:w="68"/><text x="80.8632%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.58%)</title><rect x="80.3975%" y="149" width="0.5832%" height="15" fill="rgb(241,120,22)" fg:x="32118" fg:w="233"/><text x="80.6905%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.30%)</title><rect x="80.9808%" y="149" width="1.2967%" height="15" fill="rgb(224,102,30)" fg:x="32351" fg:w="518"/><text x="81.2737%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="82.2774%" y="117" width="0.2078%" height="15" fill="rgb(210,164,37)" fg:x="32869" fg:w="83"/><text x="82.5704%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="82.2774%" y="133" width="0.3154%" height="15" fill="rgb(226,191,16)" fg:x="32869" fg:w="126"/><text x="82.5704%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.52%)</title><rect x="82.2774%" y="149" width="0.5207%" height="15" fill="rgb(214,40,45)" fg:x="32869" fg:w="208"/><text x="82.5704%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="82.7981%" y="149" width="0.2078%" height="15" fill="rgb(244,29,26)" fg:x="33077" fg:w="83"/><text x="83.0910%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="83.0058%" y="149" width="0.1277%" height="15" fill="rgb(216,16,5)" fg:x="33160" fg:w="51"/><text x="83.2988%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.13%)</title><rect x="83.1335%" y="149" width="0.1277%" height="15" fill="rgb(249,76,35)" fg:x="33211" fg:w="51"/><text x="83.4265%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="83.2612%" y="149" width="0.1502%" height="15" fill="rgb(207,11,44)" fg:x="33262" fg:w="60"/><text x="83.5541%" y="159.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.28%)</title><rect x="83.4113%" y="133" width="0.2779%" height="15" fill="rgb(228,190,49)" fg:x="33322" fg:w="111"/><text x="83.7043%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.21%)</title><rect x="83.6892%" y="101" width="0.2078%" height="15" fill="rgb(214,173,12)" fg:x="33433" fg:w="83"/><text x="83.9822%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.32%)</title><rect x="83.6892%" y="117" width="0.3154%" height="15" fill="rgb(218,26,35)" fg:x="33433" fg:w="126"/><text x="83.9822%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.52%)</title><rect x="83.6892%" y="133" width="0.5207%" height="15" fill="rgb(220,200,19)" fg:x="33433" fg:w="208"/><text x="83.9822%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (486 instructions, 1.22%)</title><rect x="83.4113%" y="149" width="1.2166%" height="15" fill="rgb(239,95,49)" fg:x="33322" fg:w="486"/><text x="83.7043%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.09%)</title><rect x="84.6279%" y="149" width="0.0876%" height="15" fill="rgb(235,85,53)" fg:x="33808" fg:w="35"/><text x="84.9209%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.15%)</title><rect x="84.7155%" y="149" width="0.1502%" height="15" fill="rgb(233,133,31)" fg:x="33843" fg:w="60"/><text x="85.0085%" y="159.50"></text></g><g><title>std::io::Write::write_all (519 instructions, 1.30%)</title><rect x="84.8657%" y="149" width="1.2992%" height="15" fill="rgb(218,25,20)" fg:x="33903" fg:w="519"/><text x="85.1587%" y="159.50"></text></g><g><title>std::io::Write::write_all (547 instructions, 1.37%)</title><rect x="86.1649%" y="149" width="1.3692%" height="15" fill="rgb(252,210,38)" fg:x="34422" fg:w="547"/><text x="86.4578%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="87.7569%" y="133" width="0.0676%" height="15" fill="rgb(242,134,21)" fg:x="35058" fg:w="27"/><text x="88.0499%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.58%)</title><rect x="87.5341%" y="149" width="0.5782%" height="15" fill="rgb(213,28,48)" fg:x="34969" fg:w="231"/><text x="87.8271%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.1123%" y="133" width="0.0325%" height="15" fill="rgb(250,196,2)" fg:x="35200" fg:w="13"/><text x="88.4053%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="88.1449%" y="117" width="0.0676%" height="15" fill="rgb(227,5,17)" fg:x="35213" fg:w="27"/><text x="88.4379%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="88.1449%" y="133" width="0.3555%" height="15" fill="rgb(221,226,24)" fg:x="35213" fg:w="142"/><text x="88.4379%" y="143.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (234 instructions, 0.59%)</title><rect x="88.1123%" y="149" width="0.5857%" height="15" fill="rgb(211,5,48)" fg:x="35200" fg:w="234"/><text x="88.4053%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.02%)</title><rect x="88.6981%" y="149" width="0.0175%" height="15" fill="rgb(219,150,6)" fg:x="35434" fg:w="7"/><text x="88.9911%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="88.7156%" y="149" width="0.0325%" height="15" fill="rgb(251,46,16)" fg:x="35441" fg:w="13"/><text x="89.0086%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="88.7482%" y="133" width="0.0676%" height="15" fill="rgb(220,204,40)" fg:x="35454" fg:w="27"/><text x="89.0411%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.36%)</title><rect x="88.7482%" y="149" width="0.3555%" height="15" fill="rgb(211,85,2)" fg:x="35454" fg:w="142"/><text x="89.0411%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.07%)</title><rect x="89.2538%" y="133" width="0.0676%" height="15" fill="rgb(229,17,7)" fg:x="35656" fg:w="27"/><text x="89.5468%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (175 instructions, 0.44%)</title><rect x="89.1036%" y="149" width="0.4381%" height="15" fill="rgb(239,72,28)" fg:x="35596" fg:w="175"/><text x="89.3966%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,023 instructions, 25.09%)</title><rect x="68.1118%" y="165" width="25.0895%" height="15" fill="rgb(230,47,54)" fg:x="27210" fg:w="10023"/><text x="68.4048%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToNeuron::{{closure}} (38,979 instructions, 97.57%)</title><rect x="0.4756%" y="181" width="97.5719%" height="15" fill="rgb(214,50,8)" fg:x="190" fg:w="38979"/><text x="0.7686%" y="191.50">sha::__canister_method_principalToNeuron::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.04%)</title><rect x="98.0475%" y="181" width="0.0350%" height="15" fill="rgb(216,198,43)" fg:x="39169" fg:w="14"/><text x="98.3405%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.17%)</title><rect x="98.0851%" y="165" width="0.1727%" height="15" fill="rgb(234,20,35)" fg:x="39184" fg:w="69"/><text x="98.3780%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.25%)</title><rect x="98.2578%" y="165" width="0.2478%" height="15" fill="rgb(254,45,19)" fg:x="39253" fg:w="99"/><text x="98.5507%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (67 instructions, 0.17%)</title><rect x="98.7459%" y="165" width="0.1677%" height="15" fill="rgb(219,14,44)" fg:x="39448" fg:w="67"/><text x="99.0389%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.17%)</title><rect x="98.9136%" y="165" width="0.1727%" height="15" fill="rgb(217,220,26)" fg:x="39515" fg:w="69"/><text x="99.2066%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.25%)</title><rect x="99.0863%" y="165" width="0.2478%" height="15" fill="rgb(213,158,28)" fg:x="39584" fg:w="99"/><text x="99.3793%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (621 instructions, 1.55%)</title><rect x="98.0851%" y="181" width="1.5545%" height="15" fill="rgb(252,51,52)" fg:x="39184" fg:w="621"/><text x="98.3780%" y="191.50"></text></g><g><title>all (39,949 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(246,89,16)" fg:x="0" fg:w="39949"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (39,949 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(216,158,49)" fg:x="0" fg:w="39949"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>