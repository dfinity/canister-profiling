<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="50388"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0476%" height="15" fill="rgb(232,213,38)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0476%" y="181" width="0.1647%" height="15" fill="rgb(207,94,22)" fg:x="24" fg:w="83"/><text x="0.3406%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2124%" y="181" width="0.1647%" height="15" fill="rgb(219,183,54)" fg:x="107" fg:w="83"/><text x="0.5053%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3771%" y="165" width="0.1647%" height="15" fill="rgb(216,185,54)" fg:x="190" fg:w="83"/><text x="0.6700%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5418%" y="149" width="0.1627%" height="15" fill="rgb(254,217,39)" fg:x="273" fg:w="82"/><text x="0.8348%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.7045%" y="133" width="0.0119%" height="15" fill="rgb(240,178,23)" fg:x="355" fg:w="6"/><text x="0.9975%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.88%)</title><rect x="0.7045%" y="149" width="0.8792%" height="15" fill="rgb(218,11,47)" fg:x="355" fg:w="443"/><text x="0.9975%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="1.5837%" y="149" width="0.1885%" height="15" fill="rgb(218,51,51)" fg:x="798" fg:w="95"/><text x="1.8767%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7722%" y="149" width="0.1191%" height="15" fill="rgb(238,126,27)" fg:x="893" fg:w="60"/><text x="2.0652%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8913%" y="149" width="0.1191%" height="15" fill="rgb(249,202,22)" fg:x="953" fg:w="60"/><text x="2.1843%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0104%" y="149" width="0.1191%" height="15" fill="rgb(254,195,49)" fg:x="1013" fg:w="60"/><text x="2.3034%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.1295%" y="149" width="0.1191%" height="15" fill="rgb(208,123,14)" fg:x="1073" fg:w="60"/><text x="2.4224%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.2486%" y="149" width="0.1627%" height="15" fill="rgb(224,200,8)" fg:x="1133" fg:w="82"/><text x="2.5415%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="2.4113%" y="149" width="0.1389%" height="15" fill="rgb(217,61,36)" fg:x="1215" fg:w="70"/><text x="2.7043%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5502%" y="133" width="0.0119%" height="15" fill="rgb(206,35,45)" fg:x="1285" fg:w="6"/><text x="2.8432%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.88%)</title><rect x="2.5502%" y="149" width="0.8792%" height="15" fill="rgb(217,65,33)" fg:x="1285" fg:w="443"/><text x="2.8432%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.4294%" y="149" width="0.0377%" height="15" fill="rgb(222,158,48)" fg:x="1728" fg:w="19"/><text x="3.7224%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="3.4671%" y="133" width="0.1647%" height="15" fill="rgb(254,2,54)" fg:x="1747" fg:w="83"/><text x="3.7601%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.6318%" y="101" width="0.1330%" height="15" fill="rgb(250,143,38)" fg:x="1830" fg:w="67"/><text x="3.9248%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="3.6318%" y="117" width="0.1905%" height="15" fill="rgb(248,25,0)" fg:x="1830" fg:w="96"/><text x="3.9248%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.8223%" y="69" width="0.0218%" height="15" fill="rgb(206,152,27)" fg:x="1926" fg:w="11"/><text x="4.1153%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.8442%" y="53" width="0.0695%" height="15" fill="rgb(240,77,30)" fg:x="1937" fg:w="35"/><text x="4.1371%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="3.8442%" y="69" width="0.1270%" height="15" fill="rgb(231,5,3)" fg:x="1937" fg:w="64"/><text x="4.1371%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.29%)</title><rect x="3.8223%" y="85" width="0.2858%" height="15" fill="rgb(207,226,32)" fg:x="1926" fg:w="144"/><text x="4.1153%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="3.8223%" y="101" width="0.4148%" height="15" fill="rgb(222,207,47)" fg:x="1926" fg:w="209"/><text x="4.1153%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="3.8223%" y="117" width="0.4346%" height="15" fill="rgb(229,115,45)" fg:x="1926" fg:w="219"/><text x="4.1153%" y="127.50"></text></g><g><title>core::fmt::write (453 instructions, 0.90%)</title><rect x="3.6318%" y="133" width="0.8990%" height="15" fill="rgb(224,191,6)" fg:x="1830" fg:w="453"/><text x="3.9248%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.34%)</title><rect x="3.4671%" y="149" width="1.3376%" height="15" fill="rgb(230,227,24)" fg:x="1747" fg:w="674"/><text x="3.7601%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="4.8047%" y="149" width="0.1885%" height="15" fill="rgb(228,80,19)" fg:x="2421" fg:w="95"/><text x="5.0977%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="4.9933%" y="149" width="0.1191%" height="15" fill="rgb(247,229,0)" fg:x="2516" fg:w="60"/><text x="5.2862%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="5.1123%" y="149" width="0.1508%" height="15" fill="rgb(237,194,15)" fg:x="2576" fg:w="76"/><text x="5.4053%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="5.2632%" y="149" width="0.1389%" height="15" fill="rgb(219,203,20)" fg:x="2652" fg:w="70"/><text x="5.5561%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.4021%" y="117" width="0.0119%" height="15" fill="rgb(234,128,8)" fg:x="2722" fg:w="6"/><text x="5.6950%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.88%)</title><rect x="5.4021%" y="133" width="0.8792%" height="15" fill="rgb(248,202,8)" fg:x="2722" fg:w="443"/><text x="5.6950%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.2813%" y="133" width="0.0377%" height="15" fill="rgb(206,104,37)" fg:x="3165" fg:w="19"/><text x="6.5742%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="6.3190%" y="117" width="0.1647%" height="15" fill="rgb(223,8,27)" fg:x="3184" fg:w="83"/><text x="6.6119%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="6.4837%" y="85" width="0.1330%" height="15" fill="rgb(216,217,28)" fg:x="3267" fg:w="67"/><text x="6.7767%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="6.4837%" y="101" width="0.1905%" height="15" fill="rgb(249,199,1)" fg:x="3267" fg:w="96"/><text x="6.7767%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.6742%" y="53" width="0.0218%" height="15" fill="rgb(240,85,17)" fg:x="3363" fg:w="11"/><text x="6.9672%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.6960%" y="37" width="0.0695%" height="15" fill="rgb(206,108,45)" fg:x="3374" fg:w="35"/><text x="6.9890%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="6.6960%" y="53" width="0.1270%" height="15" fill="rgb(245,210,41)" fg:x="3374" fg:w="64"/><text x="6.9890%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.29%)</title><rect x="6.6742%" y="69" width="0.2858%" height="15" fill="rgb(206,13,37)" fg:x="3363" fg:w="144"/><text x="6.9672%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="6.6742%" y="85" width="0.4148%" height="15" fill="rgb(250,61,18)" fg:x="3363" fg:w="209"/><text x="6.9672%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="6.6742%" y="101" width="0.4346%" height="15" fill="rgb(235,172,48)" fg:x="3363" fg:w="219"/><text x="6.9672%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.90%)</title><rect x="6.4837%" y="117" width="0.8990%" height="15" fill="rgb(249,201,17)" fg:x="3267" fg:w="453"/><text x="6.7767%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.34%)</title><rect x="6.3190%" y="133" width="1.3376%" height="15" fill="rgb(219,208,6)" fg:x="3184" fg:w="674"/><text x="6.6119%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="7.6566%" y="133" width="0.1885%" height="15" fill="rgb(248,31,23)" fg:x="3858" fg:w="95"/><text x="7.9496%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="7.8451%" y="133" width="0.1191%" height="15" fill="rgb(245,15,42)" fg:x="3953" fg:w="60"/><text x="8.1381%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="7.9642%" y="117" width="0.1627%" height="15" fill="rgb(222,217,39)" fg:x="4013" fg:w="82"/><text x="8.2572%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.1269%" y="117" width="0.1885%" height="15" fill="rgb(210,219,27)" fg:x="4095" fg:w="95"/><text x="8.4199%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.3155%" y="117" width="0.1508%" height="15" fill="rgb(252,166,36)" fg:x="4190" fg:w="76"/><text x="8.6084%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.66%)</title><rect x="7.9642%" y="133" width="0.6648%" height="15" fill="rgb(245,132,34)" fg:x="4013" fg:w="335"/><text x="8.2572%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.6290%" y="133" width="0.1647%" height="15" fill="rgb(236,54,3)" fg:x="4348" fg:w="83"/><text x="8.9220%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="8.7938%" y="117" width="0.1627%" height="15" fill="rgb(241,173,43)" fg:x="4431" fg:w="82"/><text x="9.0867%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.9565%" y="117" width="0.1885%" height="15" fill="rgb(215,190,9)" fg:x="4513" fg:w="95"/><text x="9.2495%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.1450%" y="117" width="0.1508%" height="15" fill="rgb(242,101,16)" fg:x="4608" fg:w="76"/><text x="9.4380%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.65%)</title><rect x="8.7938%" y="133" width="0.6549%" height="15" fill="rgb(223,190,21)" fg:x="4431" fg:w="330"/><text x="9.0867%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,332 instructions, 4.63%)</title><rect x="5.4021%" y="149" width="4.6281%" height="15" fill="rgb(215,228,25)" fg:x="2722" fg:w="2332"/><text x="5.6950%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="10.0302%" y="149" width="0.1508%" height="15" fill="rgb(225,36,22)" fg:x="5054" fg:w="76"/><text x="10.3231%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.1810%" y="149" width="0.0298%" height="15" fill="rgb(251,106,46)" fg:x="5130" fg:w="15"/><text x="10.4740%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.2108%" y="149" width="0.0298%" height="15" fill="rgb(208,90,1)" fg:x="5145" fg:w="15"/><text x="10.5037%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="10.2405%" y="149" width="0.0179%" height="15" fill="rgb(243,10,4)" fg:x="5160" fg:w="9"/><text x="10.5335%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (16 instructions, 0.03%)</title><rect x="10.2584%" y="149" width="0.0318%" height="15" fill="rgb(212,137,27)" fg:x="5169" fg:w="16"/><text x="10.5514%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.2901%" y="133" width="0.1647%" height="15" fill="rgb(231,220,49)" fg:x="5185" fg:w="83"/><text x="10.5831%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.36%)</title><rect x="10.2901%" y="149" width="0.3552%" height="15" fill="rgb(237,96,20)" fg:x="5185" fg:w="179"/><text x="10.5831%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.6454%" y="117" width="0.1647%" height="15" fill="rgb(239,229,30)" fg:x="5364" fg:w="83"/><text x="10.9384%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="10.6454%" y="133" width="0.2501%" height="15" fill="rgb(219,65,33)" fg:x="5364" fg:w="126"/><text x="10.9384%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.42%)</title><rect x="10.6454%" y="149" width="0.4188%" height="15" fill="rgb(243,134,7)" fg:x="5364" fg:w="211"/><text x="10.9384%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.0641%" y="133" width="0.1647%" height="15" fill="rgb(216,177,54)" fg:x="5575" fg:w="83"/><text x="11.3571%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.36%)</title><rect x="11.0641%" y="149" width="0.3552%" height="15" fill="rgb(211,160,20)" fg:x="5575" fg:w="179"/><text x="11.3571%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.4194%" y="149" width="0.1647%" height="15" fill="rgb(239,85,39)" fg:x="5754" fg:w="83"/><text x="11.7124%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="11.5841%" y="149" width="0.1766%" height="15" fill="rgb(232,125,22)" fg:x="5837" fg:w="89"/><text x="11.8771%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.7607%" y="149" width="0.1647%" height="15" fill="rgb(244,57,34)" fg:x="5926" fg:w="83"/><text x="12.0537%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.9255%" y="149" width="0.1647%" height="15" fill="rgb(214,203,32)" fg:x="6009" fg:w="83"/><text x="12.2184%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="12.0981%" y="149" width="0.1766%" height="15" fill="rgb(207,58,43)" fg:x="6096" fg:w="89"/><text x="12.3911%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.85%)</title><rect x="12.2747%" y="149" width="0.8494%" height="15" fill="rgb(215,193,15)" fg:x="6185" fg:w="428"/><text x="12.5677%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.85%)</title><rect x="13.1242%" y="149" width="0.8494%" height="15" fill="rgb(232,15,44)" fg:x="6613" fg:w="428"/><text x="13.4171%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,041 instructions, 15.96%)</title><rect x="0.5418%" y="165" width="15.9582%" height="15" fill="rgb(212,3,48)" fg:x="273" fg:w="8041"/><text x="0.8348%" y="175.50">candid::de::IDLDeseri..</text></g><g><title>memcpy (380 instructions, 0.75%)</title><rect x="16.5000%" y="165" width="0.7541%" height="15" fill="rgb(218,128,7)" fg:x="8314" fg:w="380"/><text x="16.7929%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="17.2541%" y="133" width="0.0139%" height="15" fill="rgb(226,216,39)" fg:x="8694" fg:w="7"/><text x="17.5471%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="17.2680%" y="117" width="0.1171%" height="15" fill="rgb(243,47,51)" fg:x="8701" fg:w="59"/><text x="17.5610%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.67%)</title><rect x="17.3851%" y="117" width="0.6668%" height="15" fill="rgb(241,183,40)" fg:x="8760" fg:w="336"/><text x="17.6781%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="18.0519%" y="117" width="0.1548%" height="15" fill="rgb(231,217,32)" fg:x="9096" fg:w="78"/><text x="18.3449%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.44%)</title><rect x="17.2680%" y="133" width="1.4408%" height="15" fill="rgb(229,61,38)" fg:x="8701" fg:w="726"/><text x="17.5610%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (851 instructions, 1.69%)</title><rect x="17.2541%" y="149" width="1.6889%" height="15" fill="rgb(225,210,5)" fg:x="8694" fg:w="851"/><text x="17.5471%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="18.9430%" y="149" width="0.1647%" height="15" fill="rgb(231,79,45)" fg:x="9545" fg:w="83"/><text x="19.2360%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="19.1077%" y="133" width="0.0139%" height="15" fill="rgb(224,100,7)" fg:x="9628" fg:w="7"/><text x="19.4007%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="19.1216%" y="117" width="0.1171%" height="15" fill="rgb(241,198,18)" fg:x="9635" fg:w="59"/><text x="19.4146%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.67%)</title><rect x="19.2387%" y="117" width="0.6668%" height="15" fill="rgb(252,97,53)" fg:x="9694" fg:w="336"/><text x="19.5317%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="19.9055%" y="117" width="0.1548%" height="15" fill="rgb(220,88,7)" fg:x="10030" fg:w="78"/><text x="20.1985%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.44%)</title><rect x="19.1216%" y="133" width="1.4408%" height="15" fill="rgb(213,176,14)" fg:x="9635" fg:w="726"/><text x="19.4146%" y="143.50"></text></g><g><title>candid::types::internal::env_add (945 instructions, 1.88%)</title><rect x="19.1077%" y="149" width="1.8754%" height="15" fill="rgb(246,73,7)" fg:x="9628" fg:w="945"/><text x="19.4007%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="20.9832%" y="149" width="0.1647%" height="15" fill="rgb(245,64,36)" fg:x="10573" fg:w="83"/><text x="21.2761%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="21.1479%" y="133" width="0.0139%" height="15" fill="rgb(245,80,10)" fg:x="10656" fg:w="7"/><text x="21.4409%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="21.1618%" y="117" width="0.1171%" height="15" fill="rgb(232,107,50)" fg:x="10663" fg:w="59"/><text x="21.4548%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.67%)</title><rect x="21.2789%" y="117" width="0.6668%" height="15" fill="rgb(253,3,0)" fg:x="10722" fg:w="336"/><text x="21.5718%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="21.9457%" y="117" width="0.1548%" height="15" fill="rgb(212,99,53)" fg:x="11058" fg:w="78"/><text x="22.2387%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.44%)</title><rect x="21.1618%" y="133" width="1.4408%" height="15" fill="rgb(249,111,54)" fg:x="10663" fg:w="726"/><text x="21.4548%" y="143.50"></text></g><g><title>memcmp (537 instructions, 1.07%)</title><rect x="22.6026%" y="133" width="1.0657%" height="15" fill="rgb(249,55,30)" fg:x="11389" fg:w="537"/><text x="22.8956%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="23.6683%" y="117" width="0.1766%" height="15" fill="rgb(237,47,42)" fg:x="11926" fg:w="89"/><text x="23.9613%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.25%)</title><rect x="23.6683%" y="133" width="0.2461%" height="15" fill="rgb(211,20,18)" fg:x="11926" fg:w="124"/><text x="23.9613%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,572 instructions, 3.12%)</title><rect x="21.1479%" y="149" width="3.1198%" height="15" fill="rgb(231,203,46)" fg:x="10656" fg:w="1572"/><text x="21.4409%" y="159.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="24.2677%" y="101" width="0.1171%" height="15" fill="rgb(237,142,3)" fg:x="12228" fg:w="59"/><text x="24.5607%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="24.2677%" y="117" width="0.1846%" height="15" fill="rgb(241,107,1)" fg:x="12228" fg:w="93"/><text x="24.5607%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.63%)</title><rect x="24.2677%" y="133" width="0.6271%" height="15" fill="rgb(229,83,13)" fg:x="12228" fg:w="316"/><text x="24.5607%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.320 (18 instructions, 0.04%)</title><rect x="24.8948%" y="133" width="0.0357%" height="15" fill="rgb(241,91,40)" fg:x="12544" fg:w="18"/><text x="25.1878%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="24.9305%" y="133" width="0.0258%" height="15" fill="rgb(225,3,45)" fg:x="12562" fg:w="13"/><text x="25.2235%" y="143.50"></text></g><g><title>candid::types::internal::env_id (529 instructions, 1.05%)</title><rect x="24.2677%" y="149" width="1.0499%" height="15" fill="rgb(244,223,14)" fg:x="12228" fg:w="529"/><text x="24.5607%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,192 instructions, 8.32%)</title><rect x="17.2541%" y="165" width="8.3194%" height="15" fill="rgb(224,124,37)" fg:x="8694" fg:w="4192"/><text x="17.5471%" y="175.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.11%)</title><rect x="25.5735%" y="149" width="0.1052%" height="15" fill="rgb(251,171,30)" fg:x="12886" fg:w="53"/><text x="25.8665%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="25.6787%" y="117" width="0.0536%" height="15" fill="rgb(236,46,54)" fg:x="12939" fg:w="27"/><text x="25.9717%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="25.6787%" y="133" width="0.2818%" height="15" fill="rgb(245,213,5)" fg:x="12939" fg:w="142"/><text x="25.9717%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="26.0300%" y="117" width="0.0536%" height="15" fill="rgb(230,144,27)" fg:x="13116" fg:w="27"/><text x="26.3230%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="26.0300%" y="133" width="0.2818%" height="15" fill="rgb(220,86,6)" fg:x="13116" fg:w="142"/><text x="26.3230%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (354 instructions, 0.70%)</title><rect x="25.6787%" y="149" width="0.7025%" height="15" fill="rgb(240,20,13)" fg:x="12939" fg:w="354"/><text x="25.9717%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="26.3813%" y="133" width="0.0675%" height="15" fill="rgb(217,89,34)" fg:x="13293" fg:w="34"/><text x="26.6743%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="26.4488%" y="133" width="0.0675%" height="15" fill="rgb(229,13,5)" fg:x="13327" fg:w="34"/><text x="26.7417%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="26.5162%" y="133" width="0.0357%" height="15" fill="rgb(244,67,35)" fg:x="13361" fg:w="18"/><text x="26.8092%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="26.5520%" y="133" width="0.0357%" height="15" fill="rgb(221,40,2)" fg:x="13379" fg:w="18"/><text x="26.8449%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="26.5877%" y="133" width="0.1647%" height="15" fill="rgb(237,157,21)" fg:x="13397" fg:w="83"/><text x="26.8806%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="26.7524%" y="133" width="0.1627%" height="15" fill="rgb(222,94,11)" fg:x="13480" fg:w="82"/><text x="27.0454%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.18%)</title><rect x="26.9151%" y="133" width="0.1826%" height="15" fill="rgb(249,113,6)" fg:x="13562" fg:w="92"/><text x="27.2081%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="27.0977%" y="133" width="0.1389%" height="15" fill="rgb(238,137,36)" fg:x="13654" fg:w="70"/><text x="27.3907%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.2366%" y="117" width="0.0119%" height="15" fill="rgb(210,102,26)" fg:x="13724" fg:w="6"/><text x="27.5296%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.88%)</title><rect x="27.2366%" y="133" width="0.8792%" height="15" fill="rgb(218,30,30)" fg:x="13724" fg:w="443"/><text x="27.5296%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="28.1158%" y="117" width="0.1647%" height="15" fill="rgb(214,67,26)" fg:x="14167" fg:w="83"/><text x="28.4088%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="28.2805%" y="85" width="0.1330%" height="15" fill="rgb(251,9,53)" fg:x="14250" fg:w="67"/><text x="28.5735%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="28.2805%" y="101" width="0.1905%" height="15" fill="rgb(228,204,25)" fg:x="14250" fg:w="96"/><text x="28.5735%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.4711%" y="53" width="0.0218%" height="15" fill="rgb(207,153,8)" fg:x="14346" fg:w="11"/><text x="28.7640%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.4929%" y="37" width="0.0695%" height="15" fill="rgb(242,9,16)" fg:x="14357" fg:w="35"/><text x="28.7859%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="28.4929%" y="53" width="0.1270%" height="15" fill="rgb(217,211,10)" fg:x="14357" fg:w="64"/><text x="28.7859%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.29%)</title><rect x="28.4711%" y="69" width="0.2858%" height="15" fill="rgb(219,228,52)" fg:x="14346" fg:w="144"/><text x="28.7640%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="28.4711%" y="85" width="0.4148%" height="15" fill="rgb(231,92,29)" fg:x="14346" fg:w="209"/><text x="28.7640%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="28.4711%" y="101" width="0.4346%" height="15" fill="rgb(232,8,23)" fg:x="14346" fg:w="219"/><text x="28.7640%" y="111.50"></text></g><g><title>core::fmt::write (453 instructions, 0.90%)</title><rect x="28.2805%" y="117" width="0.8990%" height="15" fill="rgb(216,211,34)" fg:x="14250" fg:w="453"/><text x="28.5735%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (674 instructions, 1.34%)</title><rect x="28.1158%" y="133" width="1.3376%" height="15" fill="rgb(236,151,0)" fg:x="14167" fg:w="674"/><text x="28.4088%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="29.4534%" y="133" width="0.1885%" height="15" fill="rgb(209,168,3)" fg:x="14841" fg:w="95"/><text x="29.7464%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="29.6420%" y="133" width="0.1191%" height="15" fill="rgb(208,129,28)" fg:x="14936" fg:w="60"/><text x="29.9349%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="29.7611%" y="133" width="0.1687%" height="15" fill="rgb(229,78,22)" fg:x="14996" fg:w="85"/><text x="30.0540%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="29.9297%" y="133" width="0.1647%" height="15" fill="rgb(228,187,13)" fg:x="15081" fg:w="83"/><text x="30.2227%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.0945%" y="133" width="0.1687%" height="15" fill="rgb(240,119,24)" fg:x="15164" fg:w="85"/><text x="30.3874%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.2632%" y="133" width="0.1687%" height="15" fill="rgb(209,194,42)" fg:x="15249" fg:w="85"/><text x="30.5561%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.4318%" y="133" width="0.1687%" height="15" fill="rgb(247,200,46)" fg:x="15334" fg:w="85"/><text x="30.7248%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.6005%" y="133" width="0.1687%" height="15" fill="rgb(218,76,16)" fg:x="15419" fg:w="85"/><text x="30.8935%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.7692%" y="133" width="0.1687%" height="15" fill="rgb(225,21,48)" fg:x="15504" fg:w="85"/><text x="31.0622%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.9379%" y="133" width="0.1687%" height="15" fill="rgb(239,223,50)" fg:x="15589" fg:w="85"/><text x="31.2309%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.1066%" y="133" width="0.1687%" height="15" fill="rgb(244,45,21)" fg:x="15674" fg:w="85"/><text x="31.3996%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.2753%" y="133" width="0.1687%" height="15" fill="rgb(232,33,43)" fg:x="15759" fg:w="85"/><text x="31.5683%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.22%)</title><rect x="31.4440%" y="101" width="0.2203%" height="15" fill="rgb(209,8,3)" fg:x="15844" fg:w="111"/><text x="31.7370%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.31%)</title><rect x="31.4440%" y="117" width="0.3096%" height="15" fill="rgb(214,25,53)" fg:x="15844" fg:w="156"/><text x="31.7370%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.48%)</title><rect x="31.4440%" y="133" width="0.4823%" height="15" fill="rgb(254,186,54)" fg:x="15844" fg:w="243"/><text x="31.7370%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.9263%" y="133" width="0.1687%" height="15" fill="rgb(208,174,49)" fg:x="16087" fg:w="85"/><text x="32.2192%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.0949%" y="133" width="0.1687%" height="15" fill="rgb(233,191,51)" fg:x="16172" fg:w="85"/><text x="32.3879%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.2636%" y="133" width="0.1687%" height="15" fill="rgb(222,134,10)" fg:x="16257" fg:w="85"/><text x="32.5566%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.4323%" y="133" width="0.1687%" height="15" fill="rgb(230,226,20)" fg:x="16342" fg:w="85"/><text x="32.7253%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.6010%" y="133" width="0.1687%" height="15" fill="rgb(251,111,25)" fg:x="16427" fg:w="85"/><text x="32.8940%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.7697%" y="133" width="0.1687%" height="15" fill="rgb(224,40,46)" fg:x="16512" fg:w="85"/><text x="33.0627%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.9384%" y="133" width="0.1687%" height="15" fill="rgb(236,108,47)" fg:x="16597" fg:w="85"/><text x="33.2314%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 instructions, 0.07%)</title><rect x="33.1071%" y="133" width="0.0675%" height="15" fill="rgb(234,93,0)" fg:x="16682" fg:w="34"/><text x="33.4001%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="33.1746%" y="133" width="0.1508%" height="15" fill="rgb(224,213,32)" fg:x="16716" fg:w="76"/><text x="33.4675%" y="143.50"></text></g><g><title>__rust_realloc (55 instructions, 0.11%)</title><rect x="33.3254%" y="101" width="0.1092%" height="15" fill="rgb(251,11,48)" fg:x="16792" fg:w="55"/><text x="33.6184%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.20%)</title><rect x="33.3254%" y="117" width="0.1985%" height="15" fill="rgb(236,173,5)" fg:x="16792" fg:w="100"/><text x="33.6184%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.37%)</title><rect x="33.3254%" y="133" width="0.3711%" height="15" fill="rgb(230,95,12)" fg:x="16792" fg:w="187"/><text x="33.6184%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.44%)</title><rect x="33.6965%" y="133" width="0.4366%" height="15" fill="rgb(232,209,1)" fg:x="16979" fg:w="220"/><text x="33.9895%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.34%)</title><rect x="34.1331%" y="133" width="0.3394%" height="15" fill="rgb(232,6,1)" fg:x="17199" fg:w="171"/><text x="34.4261%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.11%)</title><rect x="34.4725%" y="133" width="0.1052%" height="15" fill="rgb(210,224,50)" fg:x="17370" fg:w="53"/><text x="34.7655%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="34.5777%" y="133" width="0.1766%" height="15" fill="rgb(228,127,35)" fg:x="17423" fg:w="89"/><text x="34.8706%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="34.7543%" y="133" width="0.1191%" height="15" fill="rgb(245,102,45)" fg:x="17512" fg:w="60"/><text x="35.0473%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,518 instructions, 10.95%)</title><rect x="26.3813%" y="149" width="10.9510%" height="15" fill="rgb(214,1,49)" fg:x="13293" fg:w="5518"/><text x="26.6743%" y="159.50">&lt;ic_principal..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="37.3323%" y="149" width="0.0258%" height="15" fill="rgb(226,163,40)" fg:x="18811" fg:w="13"/><text x="37.6253%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="37.3581%" y="149" width="0.0258%" height="15" fill="rgb(239,212,28)" fg:x="18824" fg:w="13"/><text x="37.6511%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="37.3839%" y="149" width="0.0258%" height="15" fill="rgb(220,20,13)" fg:x="18837" fg:w="13"/><text x="37.6769%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,243 instructions, 12.39%)</title><rect x="25.5735%" y="165" width="12.3899%" height="15" fill="rgb(210,164,35)" fg:x="12886" fg:w="6243"/><text x="25.8665%" y="175.50">candid::de::IDL..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="37.9634%" y="149" width="0.0139%" height="15" fill="rgb(248,109,41)" fg:x="19129" fg:w="7"/><text x="38.2564%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="37.9773%" y="133" width="0.1171%" height="15" fill="rgb(238,23,50)" fg:x="19136" fg:w="59"/><text x="38.2703%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.19%)</title><rect x="38.0944%" y="133" width="0.1866%" height="15" fill="rgb(211,48,49)" fg:x="19195" fg:w="94"/><text x="38.3874%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="38.2809%" y="133" width="0.3433%" height="15" fill="rgb(223,36,21)" fg:x="19289" fg:w="173"/><text x="38.5739%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.15%)</title><rect x="37.9773%" y="149" width="1.1491%" height="15" fill="rgb(207,123,46)" fg:x="19136" fg:w="579"/><text x="38.2703%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (704 instructions, 1.40%)</title><rect x="37.9634%" y="165" width="1.3972%" height="15" fill="rgb(240,218,32)" fg:x="19129" fg:w="704"/><text x="38.2564%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="39.3606%" y="165" width="0.1647%" height="15" fill="rgb(252,5,43)" fg:x="19833" fg:w="83"/><text x="39.6535%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="39.5253%" y="149" width="0.0139%" height="15" fill="rgb(252,84,19)" fg:x="19916" fg:w="7"/><text x="39.8183%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="39.5392%" y="133" width="0.1171%" height="15" fill="rgb(243,152,39)" fg:x="19923" fg:w="59"/><text x="39.8321%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.19%)</title><rect x="39.6563%" y="133" width="0.1866%" height="15" fill="rgb(234,160,15)" fg:x="19982" fg:w="94"/><text x="39.9492%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="39.8428%" y="133" width="0.3433%" height="15" fill="rgb(237,34,20)" fg:x="20076" fg:w="173"/><text x="40.1358%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.15%)</title><rect x="39.5392%" y="149" width="1.1491%" height="15" fill="rgb(229,97,13)" fg:x="19923" fg:w="579"/><text x="39.8321%" y="159.50"></text></g><g><title>candid::types::internal::env_add (798 instructions, 1.58%)</title><rect x="39.5253%" y="165" width="1.5837%" height="15" fill="rgb(234,71,50)" fg:x="19916" fg:w="798"/><text x="39.8183%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="41.1090%" y="165" width="0.1647%" height="15" fill="rgb(253,155,4)" fg:x="20714" fg:w="83"/><text x="41.4020%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="41.2737%" y="149" width="0.0139%" height="15" fill="rgb(222,185,37)" fg:x="20797" fg:w="7"/><text x="41.5667%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="41.2876%" y="133" width="0.1171%" height="15" fill="rgb(251,177,13)" fg:x="20804" fg:w="59"/><text x="41.5806%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.19%)</title><rect x="41.4047%" y="133" width="0.1866%" height="15" fill="rgb(250,179,40)" fg:x="20863" fg:w="94"/><text x="41.6977%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="41.5913%" y="133" width="0.3433%" height="15" fill="rgb(242,44,2)" fg:x="20957" fg:w="173"/><text x="41.8842%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.15%)</title><rect x="41.2876%" y="149" width="1.1491%" height="15" fill="rgb(216,177,13)" fg:x="20804" fg:w="579"/><text x="41.5806%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="42.4367%" y="149" width="0.1647%" height="15" fill="rgb(216,106,43)" fg:x="21383" fg:w="83"/><text x="42.7297%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="42.6014%" y="149" width="0.1846%" height="15" fill="rgb(216,183,2)" fg:x="21466" fg:w="93"/><text x="42.8944%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="42.7860%" y="133" width="0.1171%" height="15" fill="rgb(249,75,3)" fg:x="21559" fg:w="59"/><text x="43.0789%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.19%)</title><rect x="42.9031%" y="133" width="0.1866%" height="15" fill="rgb(219,67,39)" fg:x="21618" fg:w="94"/><text x="43.1960%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="43.0896%" y="133" width="0.3433%" height="15" fill="rgb(253,228,2)" fg:x="21712" fg:w="173"/><text x="43.3826%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="43.9351%" y="133" width="0.1171%" height="15" fill="rgb(235,138,27)" fg:x="22138" fg:w="59"/><text x="44.2280%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.67%)</title><rect x="44.0522%" y="133" width="0.6668%" height="15" fill="rgb(236,97,51)" fg:x="22197" fg:w="336"/><text x="44.3451%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="44.7190%" y="133" width="0.1548%" height="15" fill="rgb(240,80,30)" fg:x="22533" fg:w="78"/><text x="45.0119%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="45.3759%" y="133" width="0.1171%" height="15" fill="rgb(230,178,19)" fg:x="22864" fg:w="59"/><text x="45.6689%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.75%)</title><rect x="45.4930%" y="133" width="0.7482%" height="15" fill="rgb(210,190,27)" fg:x="22923" fg:w="377"/><text x="45.7859%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="46.2412%" y="133" width="0.1548%" height="15" fill="rgb(222,107,31)" fg:x="23300" fg:w="78"/><text x="46.5341%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,072 instructions, 4.11%)</title><rect x="42.7860%" y="149" width="4.1121%" height="15" fill="rgb(216,127,34)" fg:x="21559" fg:w="2072"/><text x="43.0789%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.13%)</title><rect x="46.8981%" y="149" width="0.1330%" height="15" fill="rgb(234,116,52)" fg:x="23631" fg:w="67"/><text x="47.1910%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="47.0310%" y="149" width="0.1528%" height="15" fill="rgb(222,124,15)" fg:x="23698" fg:w="77"/><text x="47.3240%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="47.1839%" y="133" width="0.1766%" height="15" fill="rgb(231,179,28)" fg:x="23775" fg:w="89"/><text x="47.4768%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.25%)</title><rect x="47.1839%" y="149" width="0.2461%" height="15" fill="rgb(226,93,45)" fg:x="23775" fg:w="124"/><text x="47.4768%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,800 instructions, 7.54%)</title><rect x="41.2737%" y="165" width="7.5415%" height="15" fill="rgb(215,8,51)" fg:x="20797" fg:w="3800"/><text x="41.5667%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="48.8152%" y="117" width="0.1171%" height="15" fill="rgb(223,106,5)" fg:x="24597" fg:w="59"/><text x="49.1082%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="48.8152%" y="133" width="0.1846%" height="15" fill="rgb(250,191,5)" fg:x="24597" fg:w="93"/><text x="49.1082%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="49.4423%" y="117" width="0.1171%" height="15" fill="rgb(242,132,44)" fg:x="24913" fg:w="59"/><text x="49.7353%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="49.4423%" y="133" width="0.1846%" height="15" fill="rgb(251,152,29)" fg:x="24913" fg:w="93"/><text x="49.7353%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (632 instructions, 1.25%)</title><rect x="48.8152%" y="149" width="1.2543%" height="15" fill="rgb(218,179,5)" fg:x="24597" fg:w="632"/><text x="49.1082%" y="159.50"></text></g><g><title>candid::types::internal::env_id (929 instructions, 1.84%)</title><rect x="48.8152%" y="165" width="1.8437%" height="15" fill="rgb(227,67,19)" fg:x="24597" fg:w="929"/><text x="49.1082%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.11%)</title><rect x="50.6589%" y="165" width="0.1052%" height="15" fill="rgb(233,119,31)" fg:x="25526" fg:w="53"/><text x="50.9519%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="50.7899%" y="133" width="0.0536%" height="15" fill="rgb(241,120,22)" fg:x="25592" fg:w="27"/><text x="51.0828%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="50.8435%" y="133" width="0.0536%" height="15" fill="rgb(224,102,30)" fg:x="25619" fg:w="27"/><text x="51.1364%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.39%)</title><rect x="50.7899%" y="149" width="0.3910%" height="15" fill="rgb(210,164,37)" fg:x="25592" fg:w="197"/><text x="51.0828%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (245 instructions, 0.49%)</title><rect x="50.7641%" y="165" width="0.4862%" height="15" fill="rgb(226,191,16)" fg:x="25579" fg:w="245"/><text x="51.0570%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="51.2503%" y="149" width="0.0675%" height="15" fill="rgb(214,40,45)" fg:x="25824" fg:w="34"/><text x="51.5433%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="51.3178%" y="149" width="0.0357%" height="15" fill="rgb(244,29,26)" fg:x="25858" fg:w="18"/><text x="51.6107%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1488 (18 instructions, 0.04%)</title><rect x="51.3535%" y="149" width="0.0357%" height="15" fill="rgb(216,16,5)" fg:x="25876" fg:w="18"/><text x="51.6465%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (167 instructions, 0.33%)</title><rect x="51.2503%" y="165" width="0.3314%" height="15" fill="rgb(249,76,35)" fg:x="25824" fg:w="167"/><text x="51.5433%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="51.5817%" y="165" width="0.0258%" height="15" fill="rgb(207,11,44)" fg:x="25991" fg:w="13"/><text x="51.8747%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="51.6075%" y="165" width="0.0258%" height="15" fill="rgb(228,190,49)" fg:x="26004" fg:w="13"/><text x="51.9005%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="51.6333%" y="165" width="0.0258%" height="15" fill="rgb(214,173,12)" fg:x="26017" fg:w="13"/><text x="51.9263%" y="175.50"></text></g><g><title>memcpy (440 instructions, 0.87%)</title><rect x="51.6591%" y="165" width="0.8732%" height="15" fill="rgb(218,26,35)" fg:x="26030" fg:w="440"/><text x="51.9521%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="52.5323%" y="133" width="0.0139%" height="15" fill="rgb(220,200,19)" fg:x="26470" fg:w="7"/><text x="52.8253%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.5462%" y="117" width="0.0536%" height="15" fill="rgb(239,95,49)" fg:x="26477" fg:w="27"/><text x="52.8392%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="52.5462%" y="133" width="0.2818%" height="15" fill="rgb(235,85,53)" fg:x="26477" fg:w="142"/><text x="52.8392%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.8281%" y="101" width="0.0536%" height="15" fill="rgb(233,133,31)" fg:x="26619" fg:w="27"/><text x="53.1210%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.8816%" y="101" width="0.0536%" height="15" fill="rgb(218,25,20)" fg:x="26646" fg:w="27"/><text x="53.1746%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (81 instructions, 0.16%)</title><rect x="52.9352%" y="101" width="0.1608%" height="15" fill="rgb(252,210,38)" fg:x="26673" fg:w="81"/><text x="53.2282%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (257 instructions, 0.51%)</title><rect x="52.8281%" y="117" width="0.5100%" height="15" fill="rgb(242,134,21)" fg:x="26619" fg:w="257"/><text x="53.1210%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (292 instructions, 0.58%)</title><rect x="52.8281%" y="133" width="0.5795%" height="15" fill="rgb(213,28,48)" fg:x="26619" fg:w="292"/><text x="53.1210%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="53.4076%" y="133" width="0.0258%" height="15" fill="rgb(250,196,2)" fg:x="26911" fg:w="13"/><text x="53.7005%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (516 instructions, 1.02%)</title><rect x="52.5323%" y="149" width="1.0241%" height="15" fill="rgb(227,5,17)" fg:x="26470" fg:w="516"/><text x="52.8253%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (565 instructions, 1.12%)</title><rect x="52.5323%" y="165" width="1.1213%" height="15" fill="rgb(221,226,24)" fg:x="26470" fg:w="565"/><text x="52.8253%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (31 instructions, 0.06%)</title><rect x="53.6536%" y="149" width="0.0615%" height="15" fill="rgb(211,5,48)" fg:x="27035" fg:w="31"/><text x="53.9466%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.20%)</title><rect x="53.7152%" y="149" width="0.1965%" height="15" fill="rgb(219,150,6)" fg:x="27066" fg:w="99"/><text x="54.0081%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (224 instructions, 0.44%)</title><rect x="53.6536%" y="165" width="0.4446%" height="15" fill="rgb(251,46,16)" fg:x="27035" fg:w="224"/><text x="53.9466%" y="175.50"></text></g><g><title>memset (240 instructions, 0.48%)</title><rect x="54.0982%" y="165" width="0.4763%" height="15" fill="rgb(220,204,40)" fg:x="27259" fg:w="240"/><text x="54.3912%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.35%)</title><rect x="54.5745%" y="165" width="0.3493%" height="15" fill="rgb(211,85,2)" fg:x="27499" fg:w="176"/><text x="54.8675%" y="175.50"></text></g><g><title>memcpy (504 instructions, 1.00%)</title><rect x="54.9238%" y="165" width="1.0002%" height="15" fill="rgb(229,17,7)" fg:x="27675" fg:w="504"/><text x="55.2168%" y="175.50"></text></g><g><title>memset (139 instructions, 0.28%)</title><rect x="55.9240%" y="149" width="0.2759%" height="15" fill="rgb(239,72,28)" fg:x="28179" fg:w="139"/><text x="56.2170%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 9.90%)</title><rect x="56.1999%" y="149" width="9.9032%" height="15" fill="rgb(230,47,54)" fg:x="28318" fg:w="4990"/><text x="56.4929%" y="159.50">sha2::sha256..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,432 instructions, 10.78%)</title><rect x="55.9240%" y="165" width="10.7803%" height="15" fill="rgb(214,50,8)" fg:x="28179" fg:w="5432"/><text x="56.2170%" y="175.50">&lt;sha2::core_a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="66.7044%" y="165" width="0.1647%" height="15" fill="rgb(216,198,43)" fg:x="33611" fg:w="83"/><text x="66.9973%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="66.8691%" y="149" width="0.0139%" height="15" fill="rgb(234,20,35)" fg:x="33694" fg:w="7"/><text x="67.1621%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (67 instructions, 0.13%)</title><rect x="66.8830%" y="117" width="0.1330%" height="15" fill="rgb(254,45,19)" fg:x="33701" fg:w="67"/><text x="67.1760%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="67.0160%" y="117" width="0.0536%" height="15" fill="rgb(219,14,44)" fg:x="33768" fg:w="27"/><text x="67.3089%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="67.0695%" y="117" width="0.1350%" height="15" fill="rgb(217,220,26)" fg:x="33795" fg:w="68"/><text x="67.3625%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (284 instructions, 0.56%)</title><rect x="66.8830%" y="133" width="0.5636%" height="15" fill="rgb(213,158,28)" fg:x="33701" fg:w="284"/><text x="67.1760%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="67.5161%" y="101" width="0.0536%" height="15" fill="rgb(252,51,52)" fg:x="34020" fg:w="27"/><text x="67.8090%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.29%)</title><rect x="67.5161%" y="117" width="0.2858%" height="15" fill="rgb(246,89,16)" fg:x="34020" fg:w="144"/><text x="67.8090%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (179 instructions, 0.36%)</title><rect x="67.5161%" y="133" width="0.3552%" height="15" fill="rgb(216,158,49)" fg:x="34020" fg:w="179"/><text x="67.8090%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="67.8713%" y="117" width="0.0536%" height="15" fill="rgb(236,107,19)" fg:x="34199" fg:w="27"/><text x="68.1643%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.29%)</title><rect x="67.8713%" y="133" width="0.2858%" height="15" fill="rgb(228,185,30)" fg:x="34199" fg:w="144"/><text x="68.1643%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (687 instructions, 1.36%)</title><rect x="66.8830%" y="149" width="1.3634%" height="15" fill="rgb(246,134,8)" fg:x="33701" fg:w="687"/><text x="67.1760%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="68.2464%" y="149" width="0.0258%" height="15" fill="rgb(214,143,50)" fg:x="34388" fg:w="13"/><text x="68.5394%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="68.2722%" y="149" width="0.1846%" height="15" fill="rgb(228,75,8)" fg:x="34401" fg:w="93"/><text x="68.5652%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="68.4568%" y="117" width="0.0139%" height="15" fill="rgb(207,175,4)" fg:x="34494" fg:w="7"/><text x="68.7497%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="68.4568%" y="133" width="0.0774%" height="15" fill="rgb(205,108,24)" fg:x="34494" fg:w="39"/><text x="68.7497%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="68.5342%" y="133" width="0.1647%" height="15" fill="rgb(244,120,49)" fg:x="34533" fg:w="83"/><text x="68.8271%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="68.6989%" y="117" width="0.0139%" height="15" fill="rgb(223,47,38)" fg:x="34616" fg:w="7"/><text x="68.9919%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="68.7128%" y="101" width="0.1171%" height="15" fill="rgb(229,179,11)" fg:x="34623" fg:w="59"/><text x="69.0058%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.75%)</title><rect x="68.8299%" y="101" width="0.7482%" height="15" fill="rgb(231,122,1)" fg:x="34682" fg:w="377"/><text x="69.1228%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="69.5781%" y="101" width="0.1548%" height="15" fill="rgb(245,119,9)" fg:x="35059" fg:w="78"/><text x="69.8710%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.52%)</title><rect x="68.7128%" y="117" width="1.5222%" height="15" fill="rgb(241,163,25)" fg:x="34623" fg:w="767"/><text x="69.0058%" y="127.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 1.96%)</title><rect x="68.6989%" y="133" width="1.9568%" height="15" fill="rgb(217,214,3)" fg:x="34616" fg:w="986"/><text x="68.9919%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="70.6557%" y="133" width="0.1647%" height="15" fill="rgb(240,86,28)" fg:x="35602" fg:w="83"/><text x="70.9487%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="70.8204%" y="133" width="0.1647%" height="15" fill="rgb(215,47,9)" fg:x="35685" fg:w="83"/><text x="71.1134%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="70.9852%" y="117" width="0.0139%" height="15" fill="rgb(252,25,45)" fg:x="35768" fg:w="7"/><text x="71.2781%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="70.9990%" y="101" width="0.1171%" height="15" fill="rgb(251,164,9)" fg:x="35775" fg:w="59"/><text x="71.2920%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.75%)</title><rect x="71.1161%" y="101" width="0.7482%" height="15" fill="rgb(233,194,0)" fg:x="35834" fg:w="377"/><text x="71.4091%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="71.8643%" y="101" width="0.1548%" height="15" fill="rgb(249,111,24)" fg:x="36211" fg:w="78"/><text x="72.1573%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.52%)</title><rect x="70.9990%" y="117" width="1.5222%" height="15" fill="rgb(250,223,3)" fg:x="35775" fg:w="767"/><text x="71.2920%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.34%)</title><rect x="72.5212%" y="117" width="1.3396%" height="15" fill="rgb(236,178,37)" fg:x="36542" fg:w="675"/><text x="72.8142%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="73.8608%" y="101" width="0.1766%" height="15" fill="rgb(241,158,50)" fg:x="37217" fg:w="89"/><text x="74.1538%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.25%)</title><rect x="73.8608%" y="117" width="0.2461%" height="15" fill="rgb(213,121,41)" fg:x="37217" fg:w="124"/><text x="74.1538%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,751 instructions, 3.48%)</title><rect x="70.9852%" y="133" width="3.4750%" height="15" fill="rgb(240,92,3)" fg:x="35768" fg:w="1751"/><text x="71.2781%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="74.4602%" y="85" width="0.1171%" height="15" fill="rgb(205,123,3)" fg:x="37519" fg:w="59"/><text x="74.7532%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="74.5773%" y="85" width="0.3255%" height="15" fill="rgb(205,97,47)" fg:x="37578" fg:w="164"/><text x="74.8702%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.57%)</title><rect x="74.4602%" y="101" width="0.5716%" height="15" fill="rgb(247,152,14)" fg:x="37519" fg:w="288"/><text x="74.7532%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.01%)</title><rect x="74.4602%" y="117" width="1.0141%" height="15" fill="rgb(248,195,53)" fg:x="37519" fg:w="511"/><text x="74.7532%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.320 (48 instructions, 0.10%)</title><rect x="75.4743%" y="117" width="0.0953%" height="15" fill="rgb(226,201,16)" fg:x="38030" fg:w="48"/><text x="75.7673%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="75.5696%" y="117" width="0.0258%" height="15" fill="rgb(205,98,0)" fg:x="38078" fg:w="13"/><text x="75.8625%" y="127.50"></text></g><g><title>candid::types::internal::env_id (754 instructions, 1.50%)</title><rect x="74.4602%" y="133" width="1.4964%" height="15" fill="rgb(214,191,48)" fg:x="37519" fg:w="754"/><text x="74.7532%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,930 instructions, 7.80%)</title><rect x="68.4568%" y="149" width="7.7995%" height="15" fill="rgb(237,112,39)" fg:x="34494" fg:w="3930"/><text x="68.7497%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="76.2563%" y="117" width="0.1647%" height="15" fill="rgb(247,203,27)" fg:x="38424" fg:w="83"/><text x="76.5492%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="76.2563%" y="133" width="0.2501%" height="15" fill="rgb(235,124,28)" fg:x="38424" fg:w="126"/><text x="76.5492%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.42%)</title><rect x="76.2563%" y="149" width="0.4188%" height="15" fill="rgb(208,207,46)" fg:x="38424" fg:w="211"/><text x="76.5492%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.06%)</title><rect x="76.6750%" y="133" width="0.0595%" height="15" fill="rgb(234,176,4)" fg:x="38635" fg:w="30"/><text x="76.9680%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="76.7345%" y="101" width="0.1647%" height="15" fill="rgb(230,133,28)" fg:x="38665" fg:w="83"/><text x="77.0275%" y="111.50"></text></g><g><title>candid::types::internal::unroll (171 instructions, 0.34%)</title><rect x="76.7345%" y="117" width="0.3394%" height="15" fill="rgb(211,137,40)" fg:x="38665" fg:w="171"/><text x="77.0275%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.0739%" y="117" width="0.1647%" height="15" fill="rgb(254,35,13)" fg:x="38836" fg:w="83"/><text x="77.3669%" y="127.50"></text></g><g><title>candid::types::internal::unroll (349 instructions, 0.69%)</title><rect x="76.7345%" y="133" width="0.6926%" height="15" fill="rgb(225,49,51)" fg:x="38665" fg:w="349"/><text x="77.0275%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="77.4272%" y="85" width="0.1171%" height="15" fill="rgb(251,10,15)" fg:x="39014" fg:w="59"/><text x="77.7201%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="77.5443%" y="85" width="0.3255%" height="15" fill="rgb(228,207,15)" fg:x="39073" fg:w="164"/><text x="77.8372%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.57%)</title><rect x="77.4272%" y="101" width="0.5716%" height="15" fill="rgb(241,99,19)" fg:x="39014" fg:w="288"/><text x="77.7201%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.01%)</title><rect x="77.4272%" y="117" width="1.0141%" height="15" fill="rgb(207,104,49)" fg:x="39014" fg:w="511"/><text x="77.7201%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.4413%" y="117" width="0.1647%" height="15" fill="rgb(234,99,18)" fg:x="39525" fg:w="83"/><text x="78.7343%" y="127.50"></text></g><g><title>memset (152 instructions, 0.30%)</title><rect x="78.6060%" y="117" width="0.3017%" height="15" fill="rgb(213,191,49)" fg:x="39608" fg:w="152"/><text x="78.8990%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,066 instructions, 2.12%)</title><rect x="77.4272%" y="133" width="2.1156%" height="15" fill="rgb(210,226,19)" fg:x="39014" fg:w="1066"/><text x="77.7201%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="79.5427%" y="101" width="0.1647%" height="15" fill="rgb(229,97,18)" fg:x="40080" fg:w="83"/><text x="79.8357%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="79.5427%" y="117" width="0.2501%" height="15" fill="rgb(211,167,15)" fg:x="40080" fg:w="126"/><text x="79.8357%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.42%)</title><rect x="79.5427%" y="133" width="0.4188%" height="15" fill="rgb(210,169,34)" fg:x="40080" fg:w="211"/><text x="79.8357%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="79.9615%" y="85" width="0.1171%" height="15" fill="rgb(241,121,31)" fg:x="40291" fg:w="59"/><text x="80.2545%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.18%)</title><rect x="79.9615%" y="101" width="0.1846%" height="15" fill="rgb(232,40,11)" fg:x="40291" fg:w="93"/><text x="80.2545%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.63%)</title><rect x="79.9615%" y="117" width="0.6271%" height="15" fill="rgb(205,86,26)" fg:x="40291" fg:w="316"/><text x="80.2545%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.05%)</title><rect x="80.5886%" y="117" width="0.0456%" height="15" fill="rgb(231,126,28)" fg:x="40607" fg:w="23"/><text x="80.8816%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.6343%" y="117" width="0.0258%" height="15" fill="rgb(219,221,18)" fg:x="40630" fg:w="13"/><text x="80.9272%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (489 instructions, 0.97%)</title><rect x="79.9615%" y="133" width="0.9705%" height="15" fill="rgb(211,40,0)" fg:x="40291" fg:w="489"/><text x="80.2545%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.9320%" y="85" width="0.1647%" height="15" fill="rgb(239,85,43)" fg:x="40780" fg:w="83"/><text x="81.2249%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="80.9320%" y="101" width="0.2501%" height="15" fill="rgb(231,55,21)" fg:x="40780" fg:w="126"/><text x="81.2249%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="80.9320%" y="117" width="0.4128%" height="15" fill="rgb(225,184,43)" fg:x="40780" fg:w="208"/><text x="81.2249%" y="127.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.53%)</title><rect x="80.9320%" y="133" width="0.5299%" height="15" fill="rgb(251,158,41)" fg:x="40780" fg:w="267"/><text x="81.2249%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.12%)</title><rect x="81.4619%" y="133" width="0.1230%" height="15" fill="rgb(234,159,37)" fg:x="41047" fg:w="62"/><text x="81.7548%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.18%)</title><rect x="81.5849%" y="101" width="0.1766%" height="15" fill="rgb(216,204,22)" fg:x="41109" fg:w="89"/><text x="81.8779%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.25%)</title><rect x="81.5849%" y="117" width="0.2461%" height="15" fill="rgb(214,17,3)" fg:x="41109" fg:w="124"/><text x="81.8779%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="81.8310%" y="117" width="0.1647%" height="15" fill="rgb(212,111,17)" fg:x="41233" fg:w="83"/><text x="82.1240%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.50%)</title><rect x="81.5849%" y="133" width="0.5001%" height="15" fill="rgb(221,157,24)" fg:x="41109" fg:w="252"/><text x="81.8779%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.0850%" y="133" width="0.0258%" height="15" fill="rgb(252,16,13)" fg:x="41361" fg:w="13"/><text x="82.3780%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,994 instructions, 5.94%)</title><rect x="76.6750%" y="149" width="5.9419%" height="15" fill="rgb(221,62,2)" fg:x="38635" fg:w="2994"/><text x="76.9680%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.6169%" y="149" width="0.0258%" height="15" fill="rgb(247,87,22)" fg:x="41629" fg:w="13"/><text x="82.9099%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="82.6427%" y="117" width="0.1647%" height="15" fill="rgb(215,73,9)" fg:x="41642" fg:w="83"/><text x="82.9357%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="82.6427%" y="133" width="0.2501%" height="15" fill="rgb(207,175,33)" fg:x="41642" fg:w="126"/><text x="82.9357%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.22%)</title><rect x="83.0555%" y="117" width="0.2203%" height="15" fill="rgb(243,129,54)" fg:x="41850" fg:w="111"/><text x="83.3485%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.31%)</title><rect x="83.0555%" y="133" width="0.3096%" height="15" fill="rgb(227,119,45)" fg:x="41850" fg:w="156"/><text x="83.3485%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 0.90%)</title><rect x="82.6427%" y="149" width="0.8951%" height="15" fill="rgb(205,109,36)" fg:x="41642" fg:w="451"/><text x="82.9357%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.62%)</title><rect x="83.5377%" y="149" width="0.6192%" height="15" fill="rgb(205,6,39)" fg:x="42093" fg:w="312"/><text x="83.8307%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="84.1569%" y="133" width="0.0456%" height="15" fill="rgb(221,32,16)" fg:x="42405" fg:w="23"/><text x="84.4499%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (138 instructions, 0.27%)</title><rect x="84.1569%" y="149" width="0.2739%" height="15" fill="rgb(228,144,50)" fg:x="42405" fg:w="138"/><text x="84.4499%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.03%)</title><rect x="84.4308%" y="149" width="1.0280%" height="15" fill="rgb(229,201,53)" fg:x="42543" fg:w="518"/><text x="84.7238%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.4588%" y="117" width="0.1647%" height="15" fill="rgb(249,153,27)" fg:x="43061" fg:w="83"/><text x="85.7518%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="85.4588%" y="133" width="0.2501%" height="15" fill="rgb(227,106,25)" fg:x="43061" fg:w="126"/><text x="85.7518%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="85.4588%" y="149" width="0.4128%" height="15" fill="rgb(230,65,29)" fg:x="43061" fg:w="208"/><text x="85.7518%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.8716%" y="149" width="0.1647%" height="15" fill="rgb(221,57,46)" fg:x="43269" fg:w="83"/><text x="86.1646%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="86.0364%" y="149" width="0.1012%" height="15" fill="rgb(229,161,17)" fg:x="43352" fg:w="51"/><text x="86.3293%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="86.1376%" y="149" width="0.1012%" height="15" fill="rgb(222,213,11)" fg:x="43403" fg:w="51"/><text x="86.4305%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="86.2388%" y="149" width="0.1191%" height="15" fill="rgb(235,35,13)" fg:x="43454" fg:w="60"/><text x="86.5318%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="86.3579%" y="101" width="0.1171%" height="15" fill="rgb(233,158,34)" fg:x="43514" fg:w="59"/><text x="86.6508%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.33%)</title><rect x="86.4750%" y="101" width="0.3255%" height="15" fill="rgb(215,151,48)" fg:x="43573" fg:w="164"/><text x="86.7679%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.57%)</title><rect x="86.3579%" y="117" width="0.5716%" height="15" fill="rgb(229,84,14)" fg:x="43514" fg:w="288"/><text x="86.6508%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 1.01%)</title><rect x="86.3579%" y="133" width="1.0141%" height="15" fill="rgb(229,68,14)" fg:x="43514" fg:w="511"/><text x="86.6508%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="87.3720%" y="101" width="0.1647%" height="15" fill="rgb(243,106,26)" fg:x="44025" fg:w="83"/><text x="87.6650%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="87.3720%" y="117" width="0.2501%" height="15" fill="rgb(206,45,38)" fg:x="44025" fg:w="126"/><text x="87.6650%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="87.3720%" y="133" width="0.4128%" height="15" fill="rgb(226,6,15)" fg:x="44025" fg:w="208"/><text x="87.6650%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (908 instructions, 1.80%)</title><rect x="86.3579%" y="149" width="1.8020%" height="15" fill="rgb(232,22,54)" fg:x="43514" fg:w="908"/><text x="86.6508%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="88.1599%" y="149" width="0.0695%" height="15" fill="rgb(229,222,32)" fg:x="44422" fg:w="35"/><text x="88.4528%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="88.2293%" y="149" width="0.1191%" height="15" fill="rgb(228,62,29)" fg:x="44457" fg:w="60"/><text x="88.5223%" y="159.50"></text></g><g><title>std::io::Write::write_all (519 instructions, 1.03%)</title><rect x="88.3484%" y="149" width="1.0300%" height="15" fill="rgb(251,103,34)" fg:x="44517" fg:w="519"/><text x="88.6414%" y="159.50"></text></g><g><title>std::io::Write::write_all (547 instructions, 1.09%)</title><rect x="89.3784%" y="149" width="1.0856%" height="15" fill="rgb(233,12,30)" fg:x="45036" fg:w="547"/><text x="89.6714%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.6406%" y="133" width="0.0536%" height="15" fill="rgb(238,52,0)" fg:x="45672" fg:w="27"/><text x="90.9336%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.46%)</title><rect x="90.4640%" y="149" width="0.4584%" height="15" fill="rgb(223,98,5)" fg:x="45583" fg:w="231"/><text x="90.7570%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.9224%" y="149" width="0.0258%" height="15" fill="rgb(228,75,37)" fg:x="45814" fg:w="13"/><text x="91.2154%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.9482%" y="133" width="0.0536%" height="15" fill="rgb(205,115,49)" fg:x="45827" fg:w="27"/><text x="91.2412%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="91.0018%" y="133" width="0.0536%" height="15" fill="rgb(250,154,43)" fg:x="45854" fg:w="27"/><text x="91.2948%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.39%)</title><rect x="90.9482%" y="149" width="0.3910%" height="15" fill="rgb(226,43,29)" fg:x="45827" fg:w="197"/><text x="91.2412%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="91.3392%" y="149" width="0.0139%" height="15" fill="rgb(249,228,39)" fg:x="46024" fg:w="7"/><text x="91.6322%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.3531%" y="149" width="0.0258%" height="15" fill="rgb(216,79,43)" fg:x="46031" fg:w="13"/><text x="91.6461%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="91.3789%" y="133" width="0.0536%" height="15" fill="rgb(228,95,12)" fg:x="46044" fg:w="27"/><text x="91.6719%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (136 instructions, 0.27%)</title><rect x="91.3789%" y="149" width="0.2699%" height="15" fill="rgb(249,221,15)" fg:x="46044" fg:w="136"/><text x="91.6719%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="91.7679%" y="133" width="0.0456%" height="15" fill="rgb(233,34,13)" fg:x="46240" fg:w="23"/><text x="92.0608%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (171 instructions, 0.34%)</title><rect x="91.6488%" y="149" width="0.3394%" height="15" fill="rgb(214,103,39)" fg:x="46180" fg:w="171"/><text x="91.9418%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,200 instructions, 28.18%)</title><rect x="66.8691%" y="165" width="28.1813%" height="15" fill="rgb(251,126,39)" fg:x="33694" fg:w="14200"/><text x="67.1621%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToNeuron::{{closure}} (49,609 instructions, 98.45%)</title><rect x="0.3771%" y="181" width="98.4540%" height="15" fill="rgb(214,216,36)" fg:x="190" fg:w="49609"/><text x="0.6700%" y="191.50">sha::__canister_method_principalToNeuron::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.8311%" y="181" width="0.0278%" height="15" fill="rgb(220,221,8)" fg:x="49799" fg:w="14"/><text x="99.1240%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="98.8608%" y="165" width="0.0536%" height="15" fill="rgb(240,216,3)" fg:x="49814" fg:w="27"/><text x="99.1538%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="99.1466%" y="165" width="0.0536%" height="15" fill="rgb(232,218,17)" fg:x="49958" fg:w="27"/><text x="99.4396%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="99.2002%" y="165" width="0.1369%" height="15" fill="rgb(229,163,45)" fg:x="49985" fg:w="69"/><text x="99.4932%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="99.3371%" y="165" width="0.1350%" height="15" fill="rgb(231,110,42)" fg:x="50054" fg:w="68"/><text x="99.6301%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (430 instructions, 0.85%)</title><rect x="98.8608%" y="181" width="0.8534%" height="15" fill="rgb(208,170,48)" fg:x="49814" fg:w="430"/><text x="99.1538%" y="191.50"></text></g><g><title>all (50,388 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(239,116,25)" fg:x="0" fg:w="50388"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (50,388 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(219,200,50)" fg:x="0" fg:w="50388"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>