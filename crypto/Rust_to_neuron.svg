<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="44430"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0428%" height="15" fill="rgb(227,166,31)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.0428%" y="181" width="0.1711%" height="15" fill="rgb(245,143,41)" fg:x="19" fg:w="76"/><text x="0.3357%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2138%" y="181" width="0.1711%" height="15" fill="rgb(238,181,32)" fg:x="95" fg:w="76"/><text x="0.5068%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3849%" y="165" width="0.1711%" height="15" fill="rgb(224,113,18)" fg:x="171" fg:w="76"/><text x="0.6778%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="0.5559%" y="149" width="0.1598%" height="15" fill="rgb(240,229,28)" fg:x="247" fg:w="71"/><text x="0.8489%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.90%)</title><rect x="0.7157%" y="149" width="0.9048%" height="15" fill="rgb(250,185,3)" fg:x="318" fg:w="402"/><text x="1.0087%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="1.6205%" y="149" width="0.1868%" height="15" fill="rgb(212,59,25)" fg:x="720" fg:w="83"/><text x="1.9135%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8073%" y="149" width="0.1215%" height="15" fill="rgb(221,87,20)" fg:x="803" fg:w="54"/><text x="2.1003%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9289%" y="149" width="0.1215%" height="15" fill="rgb(213,74,28)" fg:x="857" fg:w="54"/><text x="2.2218%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0504%" y="149" width="0.1215%" height="15" fill="rgb(224,132,34)" fg:x="911" fg:w="54"/><text x="2.3434%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1720%" y="149" width="0.1215%" height="15" fill="rgb(222,101,24)" fg:x="965" fg:w="54"/><text x="2.4649%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="2.2935%" y="149" width="0.1598%" height="15" fill="rgb(254,142,4)" fg:x="1019" fg:w="71"/><text x="2.5865%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4533%" y="149" width="0.1463%" height="15" fill="rgb(230,229,49)" fg:x="1090" fg:w="65"/><text x="2.7463%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.90%)</title><rect x="2.5996%" y="149" width="0.9048%" height="15" fill="rgb(238,70,47)" fg:x="1155" fg:w="402"/><text x="2.8926%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5044%" y="149" width="0.0360%" height="15" fill="rgb(231,160,17)" fg:x="1557" fg:w="16"/><text x="3.7974%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="3.5404%" y="133" width="0.1711%" height="15" fill="rgb(218,68,53)" fg:x="1573" fg:w="76"/><text x="3.8334%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7115%" y="101" width="0.1350%" height="15" fill="rgb(236,111,10)" fg:x="1649" fg:w="60"/><text x="4.0044%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7115%" y="117" width="0.1913%" height="15" fill="rgb(224,34,41)" fg:x="1649" fg:w="85"/><text x="4.0044%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9028%" y="69" width="0.0203%" height="15" fill="rgb(241,118,19)" fg:x="1734" fg:w="9"/><text x="4.1957%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9230%" y="53" width="0.0675%" height="15" fill="rgb(238,129,25)" fg:x="1743" fg:w="30"/><text x="4.2160%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9230%" y="69" width="0.1238%" height="15" fill="rgb(238,22,31)" fg:x="1743" fg:w="55"/><text x="4.2160%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="3.9028%" y="85" width="0.2566%" height="15" fill="rgb(222,174,48)" fg:x="1734" fg:w="114"/><text x="4.1957%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="3.9028%" y="101" width="0.3759%" height="15" fill="rgb(206,152,40)" fg:x="1734" fg:w="167"/><text x="4.1957%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="3.9028%" y="117" width="0.3871%" height="15" fill="rgb(218,99,54)" fg:x="1734" fg:w="172"/><text x="4.1957%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="3.7115%" y="133" width="0.8283%" height="15" fill="rgb(220,174,26)" fg:x="1649" fg:w="368"/><text x="4.0044%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="3.5404%" y="149" width="1.2717%" height="15" fill="rgb(245,116,9)" fg:x="1573" fg:w="565"/><text x="3.8334%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="4.8121%" y="149" width="0.1868%" height="15" fill="rgb(209,72,35)" fg:x="2138" fg:w="83"/><text x="5.1050%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="4.9989%" y="149" width="0.1238%" height="15" fill="rgb(226,126,21)" fg:x="2221" fg:w="55"/><text x="5.2918%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="5.1227%" y="149" width="0.1463%" height="15" fill="rgb(227,192,1)" fg:x="2276" fg:w="65"/><text x="5.4156%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.2690%" y="149" width="0.1463%" height="15" fill="rgb(237,180,29)" fg:x="2341" fg:w="65"/><text x="5.5619%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.90%)</title><rect x="5.4153%" y="133" width="0.9048%" height="15" fill="rgb(230,197,35)" fg:x="2406" fg:w="402"/><text x="5.7082%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.3201%" y="133" width="0.0360%" height="15" fill="rgb(246,193,31)" fg:x="2808" fg:w="16"/><text x="6.6130%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="6.3561%" y="117" width="0.1711%" height="15" fill="rgb(241,36,4)" fg:x="2824" fg:w="76"/><text x="6.6490%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.5271%" y="85" width="0.1350%" height="15" fill="rgb(241,130,17)" fg:x="2900" fg:w="60"/><text x="6.8201%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="6.5271%" y="101" width="0.1913%" height="15" fill="rgb(206,137,32)" fg:x="2900" fg:w="85"/><text x="6.8201%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.7184%" y="53" width="0.0203%" height="15" fill="rgb(237,228,51)" fg:x="2985" fg:w="9"/><text x="7.0114%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="6.7387%" y="37" width="0.0675%" height="15" fill="rgb(243,6,42)" fg:x="2994" fg:w="30"/><text x="7.0317%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="6.7387%" y="53" width="0.1238%" height="15" fill="rgb(251,74,28)" fg:x="2994" fg:w="55"/><text x="7.0317%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="6.7184%" y="69" width="0.2566%" height="15" fill="rgb(218,20,49)" fg:x="2985" fg:w="114"/><text x="7.0114%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="6.7184%" y="85" width="0.3759%" height="15" fill="rgb(238,28,14)" fg:x="2985" fg:w="167"/><text x="7.0114%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="6.7184%" y="101" width="0.3871%" height="15" fill="rgb(229,40,46)" fg:x="2985" fg:w="172"/><text x="7.0114%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="6.5271%" y="117" width="0.8283%" height="15" fill="rgb(244,195,20)" fg:x="2900" fg:w="368"/><text x="6.8201%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="6.3561%" y="133" width="1.2717%" height="15" fill="rgb(253,56,35)" fg:x="2824" fg:w="565"/><text x="6.6490%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="7.6277%" y="133" width="0.1868%" height="15" fill="rgb(210,149,44)" fg:x="3389" fg:w="83"/><text x="7.9207%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="7.8145%" y="133" width="0.1238%" height="15" fill="rgb(240,135,12)" fg:x="3472" fg:w="55"/><text x="8.1075%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="7.9383%" y="117" width="0.1598%" height="15" fill="rgb(251,24,50)" fg:x="3527" fg:w="71"/><text x="8.2313%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="8.0981%" y="117" width="0.2026%" height="15" fill="rgb(243,200,47)" fg:x="3598" fg:w="90"/><text x="8.3911%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="8.3007%" y="117" width="0.1463%" height="15" fill="rgb(224,166,26)" fg:x="3688" fg:w="65"/><text x="8.5937%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (289 instructions, 0.65%)</title><rect x="7.9383%" y="133" width="0.6505%" height="15" fill="rgb(233,0,47)" fg:x="3527" fg:w="289"/><text x="8.2313%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.5888%" y="133" width="0.1711%" height="15" fill="rgb(253,80,5)" fg:x="3816" fg:w="76"/><text x="8.8818%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="8.7598%" y="117" width="0.1598%" height="15" fill="rgb(214,133,25)" fg:x="3892" fg:w="71"/><text x="9.0528%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="8.9196%" y="117" width="0.2026%" height="15" fill="rgb(209,27,14)" fg:x="3963" fg:w="90"/><text x="9.2126%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.1222%" y="117" width="0.1463%" height="15" fill="rgb(219,102,51)" fg:x="4053" fg:w="65"/><text x="9.4152%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.64%)</title><rect x="8.7598%" y="133" width="0.6415%" height="15" fill="rgb(237,18,16)" fg:x="3892" fg:w="285"/><text x="9.0528%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,016 instructions, 4.54%)</title><rect x="5.4153%" y="149" width="4.5375%" height="15" fill="rgb(241,85,17)" fg:x="2406" fg:w="2016"/><text x="5.7082%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.9527%" y="149" width="0.1463%" height="15" fill="rgb(236,90,42)" fg:x="4422" fg:w="65"/><text x="10.2457%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.0990%" y="149" width="0.0293%" height="15" fill="rgb(249,57,21)" fg:x="4487" fg:w="13"/><text x="10.3920%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.1283%" y="149" width="0.0293%" height="15" fill="rgb(243,12,36)" fg:x="4500" fg:w="13"/><text x="10.4213%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.1576%" y="149" width="0.0158%" height="15" fill="rgb(253,128,47)" fg:x="4513" fg:w="7"/><text x="10.4505%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.1733%" y="149" width="0.0338%" height="15" fill="rgb(207,33,20)" fg:x="4520" fg:w="15"/><text x="10.4663%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.2071%" y="133" width="0.1711%" height="15" fill="rgb(233,215,35)" fg:x="4535" fg:w="76"/><text x="10.5000%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.2071%" y="149" width="0.3579%" height="15" fill="rgb(249,188,52)" fg:x="4535" fg:w="159"/><text x="10.5000%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.5649%" y="117" width="0.1711%" height="15" fill="rgb(225,12,32)" fg:x="4694" fg:w="76"/><text x="10.8579%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="10.5649%" y="133" width="0.2476%" height="15" fill="rgb(247,98,14)" fg:x="4694" fg:w="110"/><text x="10.8579%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="10.5649%" y="149" width="0.4051%" height="15" fill="rgb(247,219,48)" fg:x="4694" fg:w="180"/><text x="10.8579%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.9701%" y="133" width="0.1711%" height="15" fill="rgb(253,60,48)" fg:x="4874" fg:w="76"/><text x="11.2630%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.9701%" y="149" width="0.3579%" height="15" fill="rgb(245,15,52)" fg:x="4874" fg:w="159"/><text x="11.2630%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.3279%" y="149" width="0.1711%" height="15" fill="rgb(220,133,28)" fg:x="5033" fg:w="76"/><text x="11.6209%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="11.4990%" y="149" width="0.1823%" height="15" fill="rgb(217,180,4)" fg:x="5109" fg:w="81"/><text x="11.7920%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.6813%" y="149" width="0.1711%" height="15" fill="rgb(251,24,1)" fg:x="5190" fg:w="76"/><text x="11.9743%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.8524%" y="149" width="0.1711%" height="15" fill="rgb(212,185,49)" fg:x="5266" fg:w="76"/><text x="12.1453%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="12.0279%" y="149" width="0.1823%" height="15" fill="rgb(215,175,22)" fg:x="5344" fg:w="81"/><text x="12.3209%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="12.2102%" y="149" width="0.8980%" height="15" fill="rgb(250,205,14)" fg:x="5425" fg:w="399"/><text x="12.5032%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="13.1083%" y="149" width="0.8980%" height="15" fill="rgb(225,211,22)" fg:x="5824" fg:w="399"/><text x="13.4012%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,012 instructions, 15.78%)</title><rect x="0.5559%" y="165" width="15.7821%" height="15" fill="rgb(251,179,42)" fg:x="247" fg:w="7012"/><text x="0.8489%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="16.3381%" y="165" width="0.7968%" height="15" fill="rgb(208,216,51)" fg:x="7259" fg:w="354"/><text x="16.6310%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="17.1348%" y="133" width="0.0270%" height="15" fill="rgb(235,36,11)" fg:x="7613" fg:w="12"/><text x="17.4278%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.1618%" y="117" width="0.1193%" height="15" fill="rgb(213,189,28)" fg:x="7625" fg:w="53"/><text x="17.4548%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="17.2811%" y="117" width="0.8643%" height="15" fill="rgb(227,203,42)" fg:x="7678" fg:w="384"/><text x="17.5741%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="18.1454%" y="117" width="0.3646%" height="15" fill="rgb(244,72,36)" fg:x="8062" fg:w="162"/><text x="18.4384%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="17.1618%" y="133" width="1.8816%" height="15" fill="rgb(213,53,17)" fg:x="7625" fg:w="836"/><text x="17.4548%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (963 instructions, 2.17%)</title><rect x="17.1348%" y="149" width="2.1675%" height="15" fill="rgb(207,167,3)" fg:x="7613" fg:w="963"/><text x="17.4278%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="19.3023%" y="149" width="0.1711%" height="15" fill="rgb(216,98,30)" fg:x="8576" fg:w="76"/><text x="19.5952%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="19.4733%" y="133" width="0.0270%" height="15" fill="rgb(236,123,15)" fg:x="8652" fg:w="12"/><text x="19.7663%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.5003%" y="117" width="0.1193%" height="15" fill="rgb(248,81,50)" fg:x="8664" fg:w="53"/><text x="19.7933%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="19.6196%" y="117" width="0.8643%" height="15" fill="rgb(214,120,4)" fg:x="8717" fg:w="384"/><text x="19.9126%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="20.4839%" y="117" width="0.3646%" height="15" fill="rgb(208,179,34)" fg:x="9101" fg:w="162"/><text x="20.7769%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="19.5003%" y="133" width="1.8816%" height="15" fill="rgb(227,140,7)" fg:x="8664" fg:w="836"/><text x="19.7933%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,056 instructions, 2.38%)</title><rect x="19.4733%" y="149" width="2.3768%" height="15" fill="rgb(214,22,6)" fg:x="8652" fg:w="1056"/><text x="19.7663%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="21.8501%" y="149" width="0.1711%" height="15" fill="rgb(207,137,27)" fg:x="9708" fg:w="76"/><text x="22.1431%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="22.0212%" y="133" width="0.0270%" height="15" fill="rgb(210,8,46)" fg:x="9784" fg:w="12"/><text x="22.3141%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.0482%" y="117" width="0.1193%" height="15" fill="rgb(240,16,54)" fg:x="9796" fg:w="53"/><text x="22.3411%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="22.1675%" y="117" width="0.8643%" height="15" fill="rgb(211,209,29)" fg:x="9849" fg:w="384"/><text x="22.4604%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="23.0317%" y="117" width="0.3646%" height="15" fill="rgb(226,228,24)" fg:x="10233" fg:w="162"/><text x="23.3247%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="22.0482%" y="133" width="1.8816%" height="15" fill="rgb(222,84,9)" fg:x="9796" fg:w="836"/><text x="22.3411%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.67%)</title><rect x="23.9298%" y="133" width="1.6655%" height="15" fill="rgb(234,203,30)" fg:x="10632" fg:w="740"/><text x="24.2227%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.5953%" y="117" width="0.1823%" height="15" fill="rgb(238,109,14)" fg:x="11372" fg:w="81"/><text x="25.8883%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="25.5953%" y="133" width="0.2431%" height="15" fill="rgb(233,206,34)" fg:x="11372" fg:w="108"/><text x="25.8883%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,863 instructions, 4.19%)</title><rect x="22.0212%" y="149" width="4.1931%" height="15" fill="rgb(220,167,47)" fg:x="9784" fg:w="1863"/><text x="22.3141%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.2143%" y="101" width="0.1193%" height="15" fill="rgb(238,105,10)" fg:x="11647" fg:w="53"/><text x="26.5072%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="26.2143%" y="117" width="0.1778%" height="15" fill="rgb(213,227,17)" fg:x="11647" fg:w="79"/><text x="26.5072%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (294 instructions, 0.66%)</title><rect x="26.2143%" y="133" width="0.6617%" height="15" fill="rgb(217,132,38)" fg:x="11647" fg:w="294"/><text x="26.5072%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.564 (15 instructions, 0.03%)</title><rect x="26.8760%" y="133" width="0.0338%" height="15" fill="rgb(242,146,4)" fg:x="11941" fg:w="15"/><text x="27.1690%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.9097%" y="133" width="0.0248%" height="15" fill="rgb(212,61,9)" fg:x="11956" fg:w="11"/><text x="27.2027%" y="143.50"></text></g><g><title>candid::types::internal::env_id (498 instructions, 1.12%)</title><rect x="26.2143%" y="149" width="1.1209%" height="15" fill="rgb(247,126,22)" fg:x="11647" fg:w="498"/><text x="26.5072%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,629 instructions, 10.42%)</title><rect x="17.1348%" y="165" width="10.4186%" height="15" fill="rgb(220,196,2)" fg:x="7613" fg:w="4629"/><text x="17.4278%" y="175.50">candid::types..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="27.5535%" y="149" width="0.1013%" height="15" fill="rgb(208,46,4)" fg:x="12242" fg:w="45"/><text x="27.8464%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.6547%" y="133" width="0.2768%" height="15" fill="rgb(252,104,46)" fg:x="12287" fg:w="123"/><text x="27.9477%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.9923%" y="133" width="0.2768%" height="15" fill="rgb(237,152,48)" fg:x="12437" fg:w="123"/><text x="28.2853%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.68%)</title><rect x="27.6547%" y="149" width="0.6752%" height="15" fill="rgb(221,59,37)" fg:x="12287" fg:w="300"/><text x="27.9477%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.3300%" y="133" width="0.0630%" height="15" fill="rgb(209,202,51)" fg:x="12587" fg:w="28"/><text x="28.6229%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.3930%" y="133" width="0.0630%" height="15" fill="rgb(228,81,30)" fg:x="12615" fg:w="28"/><text x="28.6859%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.03%)</title><rect x="28.4560%" y="133" width="0.0338%" height="15" fill="rgb(227,42,39)" fg:x="12643" fg:w="15"/><text x="28.7490%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.03%)</title><rect x="28.4898%" y="133" width="0.0338%" height="15" fill="rgb(221,26,2)" fg:x="12658" fg:w="15"/><text x="28.7827%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="28.5235%" y="133" width="0.1756%" height="15" fill="rgb(254,61,31)" fg:x="12673" fg:w="78"/><text x="28.8165%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="28.6991%" y="133" width="0.1598%" height="15" fill="rgb(222,173,38)" fg:x="12751" fg:w="71"/><text x="28.9920%" y="143.50"></text></g><g><title>binread::binary_template::write_named (80 instructions, 0.18%)</title><rect x="28.8589%" y="117" width="0.1801%" height="15" fill="rgb(218,50,12)" fg:x="12822" fg:w="80"/><text x="29.1518%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (150 instructions, 0.34%)</title><rect x="28.8589%" y="133" width="0.3376%" height="15" fill="rgb(223,88,40)" fg:x="12822" fg:w="150"/><text x="29.1518%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.1965%" y="133" width="0.1463%" height="15" fill="rgb(237,54,19)" fg:x="12972" fg:w="65"/><text x="29.4895%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.90%)</title><rect x="29.3428%" y="133" width="0.9048%" height="15" fill="rgb(251,129,25)" fg:x="13037" fg:w="402"/><text x="29.6358%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.2476%" y="117" width="0.1711%" height="15" fill="rgb(238,97,19)" fg:x="13439" fg:w="76"/><text x="30.5405%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="30.4186%" y="85" width="0.1350%" height="15" fill="rgb(240,169,18)" fg:x="13515" fg:w="60"/><text x="30.7116%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="30.4186%" y="101" width="0.1913%" height="15" fill="rgb(230,187,49)" fg:x="13515" fg:w="85"/><text x="30.7116%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.6099%" y="53" width="0.0203%" height="15" fill="rgb(209,44,26)" fg:x="13600" fg:w="9"/><text x="30.9029%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.6302%" y="37" width="0.0675%" height="15" fill="rgb(244,0,6)" fg:x="13609" fg:w="30"/><text x="30.9232%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.6302%" y="53" width="0.1238%" height="15" fill="rgb(248,18,21)" fg:x="13609" fg:w="55"/><text x="30.9232%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="30.6099%" y="69" width="0.2566%" height="15" fill="rgb(245,180,19)" fg:x="13600" fg:w="114"/><text x="30.9029%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="30.6099%" y="85" width="0.3759%" height="15" fill="rgb(252,118,36)" fg:x="13600" fg:w="167"/><text x="30.9029%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="30.6099%" y="101" width="0.3871%" height="15" fill="rgb(210,224,19)" fg:x="13600" fg:w="172"/><text x="30.9029%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="30.4186%" y="117" width="0.8283%" height="15" fill="rgb(218,30,24)" fg:x="13515" fg:w="368"/><text x="30.7116%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="30.2476%" y="133" width="1.2717%" height="15" fill="rgb(219,75,50)" fg:x="13439" fg:w="565"/><text x="30.5405%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="31.5192%" y="133" width="0.1868%" height="15" fill="rgb(234,72,50)" fg:x="14004" fg:w="83"/><text x="31.8122%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="31.7061%" y="133" width="0.1238%" height="15" fill="rgb(219,100,48)" fg:x="14087" fg:w="55"/><text x="31.9990%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="31.8298%" y="117" width="0.1215%" height="15" fill="rgb(253,5,41)" fg:x="14142" fg:w="54"/><text x="32.1228%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.24%)</title><rect x="31.8298%" y="133" width="0.2408%" height="15" fill="rgb(247,181,11)" fg:x="14142" fg:w="107"/><text x="32.1228%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="32.0707%" y="133" width="0.1711%" height="15" fill="rgb(222,223,25)" fg:x="14249" fg:w="76"/><text x="32.3636%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.2417%" y="117" width="0.1215%" height="15" fill="rgb(214,198,28)" fg:x="14325" fg:w="54"/><text x="32.5347%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.4826%" y="117" width="0.1215%" height="15" fill="rgb(230,46,43)" fg:x="14432" fg:w="54"/><text x="32.7755%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.7234%" y="117" width="0.1215%" height="15" fill="rgb(233,65,53)" fg:x="14539" fg:w="54"/><text x="33.0164%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.9642%" y="117" width="0.1215%" height="15" fill="rgb(221,121,27)" fg:x="14646" fg:w="54"/><text x="33.2572%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.2050%" y="117" width="0.1215%" height="15" fill="rgb(247,70,47)" fg:x="14753" fg:w="54"/><text x="33.4980%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.4459%" y="117" width="0.1215%" height="15" fill="rgb(228,85,35)" fg:x="14860" fg:w="54"/><text x="33.7388%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.6867%" y="117" width="0.1215%" height="15" fill="rgb(209,50,18)" fg:x="14967" fg:w="54"/><text x="33.9797%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.9275%" y="117" width="0.1215%" height="15" fill="rgb(250,19,35)" fg:x="15074" fg:w="54"/><text x="34.2205%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (856 instructions, 1.93%)</title><rect x="32.2417%" y="133" width="1.9266%" height="15" fill="rgb(253,107,29)" fg:x="14325" fg:w="856"/><text x="32.5347%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="34.1684%" y="101" width="0.2273%" height="15" fill="rgb(252,179,29)" fg:x="15181" fg:w="101"/><text x="34.4613%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="34.1684%" y="117" width="0.3061%" height="15" fill="rgb(238,194,6)" fg:x="15181" fg:w="136"/><text x="34.4613%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.47%)</title><rect x="34.1684%" y="133" width="0.4749%" height="15" fill="rgb(238,164,29)" fg:x="15181" fg:w="211"/><text x="34.4613%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="34.6433%" y="117" width="0.1215%" height="15" fill="rgb(224,25,9)" fg:x="15392" fg:w="54"/><text x="34.9362%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="34.8841%" y="117" width="0.1215%" height="15" fill="rgb(244,153,23)" fg:x="15499" fg:w="54"/><text x="35.1771%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.1249%" y="117" width="0.1215%" height="15" fill="rgb(212,203,14)" fg:x="15606" fg:w="54"/><text x="35.4179%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.3657%" y="117" width="0.1215%" height="15" fill="rgb(220,164,20)" fg:x="15713" fg:w="54"/><text x="35.6587%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.6066%" y="117" width="0.1215%" height="15" fill="rgb(222,203,48)" fg:x="15820" fg:w="54"/><text x="35.8995%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.8474%" y="117" width="0.1215%" height="15" fill="rgb(215,159,22)" fg:x="15927" fg:w="54"/><text x="36.1404%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="36.0882%" y="117" width="0.1215%" height="15" fill="rgb(216,183,47)" fg:x="16034" fg:w="54"/><text x="36.3812%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (749 instructions, 1.69%)</title><rect x="34.6433%" y="133" width="1.6858%" height="15" fill="rgb(229,195,25)" fg:x="15392" fg:w="749"/><text x="34.9362%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 instructions, 0.05%)</title><rect x="36.3291%" y="133" width="0.0540%" height="15" fill="rgb(224,132,51)" fg:x="16141" fg:w="24"/><text x="36.6220%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="36.3831%" y="133" width="0.1463%" height="15" fill="rgb(240,63,7)" fg:x="16165" fg:w="65"/><text x="36.6760%" y="143.50"></text></g><g><title>__rust_realloc (48 instructions, 0.11%)</title><rect x="36.5294%" y="101" width="0.1080%" height="15" fill="rgb(249,182,41)" fg:x="16230" fg:w="48"/><text x="36.8223%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 instructions, 0.19%)</title><rect x="36.5294%" y="117" width="0.1868%" height="15" fill="rgb(243,47,26)" fg:x="16230" fg:w="83"/><text x="36.8223%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (158 instructions, 0.36%)</title><rect x="36.5294%" y="133" width="0.3556%" height="15" fill="rgb(233,48,2)" fg:x="16230" fg:w="158"/><text x="36.8223%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.46%)</title><rect x="36.8850%" y="133" width="0.4637%" height="15" fill="rgb(244,165,34)" fg:x="16388" fg:w="206"/><text x="37.1780%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.36%)</title><rect x="37.3486%" y="133" width="0.3601%" height="15" fill="rgb(207,89,7)" fg:x="16594" fg:w="160"/><text x="37.6416%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (48 instructions, 0.11%)</title><rect x="37.7088%" y="133" width="0.1080%" height="15" fill="rgb(244,117,36)" fg:x="16754" fg:w="48"/><text x="38.0017%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.8168%" y="133" width="0.1823%" height="15" fill="rgb(226,144,34)" fg:x="16802" fg:w="81"/><text x="38.1098%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="37.9991%" y="133" width="0.1238%" height="15" fill="rgb(213,23,19)" fg:x="16883" fg:w="55"/><text x="38.2921%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,354 instructions, 12.05%)</title><rect x="28.3300%" y="149" width="12.0504%" height="15" fill="rgb(217,75,12)" fg:x="12587" fg:w="5354"/><text x="28.6229%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.3804%" y="149" width="0.0248%" height="15" fill="rgb(224,159,17)" fg:x="17941" fg:w="11"/><text x="40.6733%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4051%" y="149" width="0.0248%" height="15" fill="rgb(217,118,1)" fg:x="17952" fg:w="11"/><text x="40.6981%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4299%" y="149" width="0.0248%" height="15" fill="rgb(232,180,48)" fg:x="17963" fg:w="11"/><text x="40.7229%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (5,971 instructions, 13.44%)</title><rect x="27.5535%" y="165" width="13.4391%" height="15" fill="rgb(230,27,33)" fg:x="12242" fg:w="5971"/><text x="27.8464%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="40.9926%" y="149" width="0.0270%" height="15" fill="rgb(205,31,21)" fg:x="18213" fg:w="12"/><text x="41.2855%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.0196%" y="133" width="0.1193%" height="15" fill="rgb(253,59,4)" fg:x="18225" fg:w="53"/><text x="41.3126%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="41.1389%" y="133" width="0.1981%" height="15" fill="rgb(224,201,9)" fg:x="18278" fg:w="88"/><text x="41.4318%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="41.3369%" y="133" width="0.3646%" height="15" fill="rgb(229,206,30)" fg:x="18366" fg:w="162"/><text x="41.6299%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="41.0196%" y="149" width="1.2154%" height="15" fill="rgb(212,67,47)" fg:x="18225" fg:w="540"/><text x="41.3126%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.50%)</title><rect x="40.9926%" y="165" width="1.5012%" height="15" fill="rgb(211,96,50)" fg:x="18213" fg:w="667"/><text x="41.2855%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.4938%" y="165" width="0.1711%" height="15" fill="rgb(252,114,18)" fg:x="18880" fg:w="76"/><text x="42.7868%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="42.6649%" y="149" width="0.0270%" height="15" fill="rgb(223,58,37)" fg:x="18956" fg:w="12"/><text x="42.9578%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="42.6919%" y="133" width="0.1193%" height="15" fill="rgb(237,70,4)" fg:x="18968" fg:w="53"/><text x="42.9848%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="42.8112%" y="133" width="0.1981%" height="15" fill="rgb(244,85,46)" fg:x="19021" fg:w="88"/><text x="43.1041%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="43.0092%" y="133" width="0.3646%" height="15" fill="rgb(223,39,52)" fg:x="19109" fg:w="162"/><text x="43.3022%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="42.6919%" y="149" width="1.2154%" height="15" fill="rgb(218,200,14)" fg:x="18968" fg:w="540"/><text x="42.9848%" y="159.50"></text></g><g><title>candid::types::internal::env_add (760 instructions, 1.71%)</title><rect x="42.6649%" y="165" width="1.7106%" height="15" fill="rgb(208,171,16)" fg:x="18956" fg:w="760"/><text x="42.9578%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.3754%" y="165" width="0.1711%" height="15" fill="rgb(234,200,18)" fg:x="19716" fg:w="76"/><text x="44.6684%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="44.5465%" y="149" width="0.0270%" height="15" fill="rgb(228,45,11)" fg:x="19792" fg:w="12"/><text x="44.8394%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="44.5735%" y="133" width="0.1193%" height="15" fill="rgb(237,182,11)" fg:x="19804" fg:w="53"/><text x="44.8665%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="44.6928%" y="133" width="0.1981%" height="15" fill="rgb(241,175,49)" fg:x="19857" fg:w="88"/><text x="44.9857%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="44.8908%" y="133" width="0.3646%" height="15" fill="rgb(247,38,35)" fg:x="19945" fg:w="162"/><text x="45.1838%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="44.5735%" y="149" width="1.2154%" height="15" fill="rgb(228,39,49)" fg:x="19804" fg:w="540"/><text x="44.8665%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.7889%" y="149" width="0.1711%" height="15" fill="rgb(226,101,26)" fg:x="20344" fg:w="76"/><text x="46.0819%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="45.9599%" y="149" width="0.1891%" height="15" fill="rgb(206,141,19)" fg:x="20420" fg:w="84"/><text x="46.2529%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.1490%" y="133" width="0.1193%" height="15" fill="rgb(211,200,13)" fg:x="20504" fg:w="53"/><text x="46.4420%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="46.2683%" y="133" width="0.8193%" height="15" fill="rgb(241,121,6)" fg:x="20557" fg:w="364"/><text x="46.5613%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.0876%" y="133" width="0.1621%" height="15" fill="rgb(234,221,29)" fg:x="20921" fg:w="72"/><text x="47.3805%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.7830%" y="133" width="0.1193%" height="15" fill="rgb(229,136,5)" fg:x="21230" fg:w="53"/><text x="48.0760%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="47.9023%" y="133" width="0.8643%" height="15" fill="rgb(238,36,11)" fg:x="21283" fg:w="384"/><text x="48.1953%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="48.7666%" y="133" width="0.3646%" height="15" fill="rgb(251,55,41)" fg:x="21667" fg:w="162"/><text x="49.0596%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="49.6646%" y="133" width="0.1193%" height="15" fill="rgb(242,34,40)" fg:x="22066" fg:w="53"/><text x="49.9576%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="49.7839%" y="133" width="0.1981%" height="15" fill="rgb(215,42,17)" fg:x="22119" fg:w="88"/><text x="50.0769%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="49.9820%" y="133" width="0.3646%" height="15" fill="rgb(207,44,46)" fg:x="22207" fg:w="162"/><text x="50.2750%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,102 instructions, 4.73%)</title><rect x="46.1490%" y="149" width="4.7310%" height="15" fill="rgb(211,206,28)" fg:x="20504" fg:w="2102"/><text x="46.4420%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.14%)</title><rect x="50.8800%" y="149" width="0.1395%" height="15" fill="rgb(237,167,16)" fg:x="22606" fg:w="62"/><text x="51.1730%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="51.0196%" y="149" width="0.1530%" height="15" fill="rgb(233,66,6)" fg:x="22668" fg:w="68"/><text x="51.3126%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="51.1726%" y="133" width="0.1823%" height="15" fill="rgb(246,123,29)" fg:x="22736" fg:w="81"/><text x="51.4656%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="51.1726%" y="149" width="0.2431%" height="15" fill="rgb(209,62,40)" fg:x="22736" fg:w="108"/><text x="51.4656%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,676 instructions, 8.27%)</title><rect x="44.5465%" y="165" width="8.2737%" height="15" fill="rgb(218,4,25)" fg:x="19792" fg:w="3676"/><text x="44.8394%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="52.8202%" y="117" width="0.1193%" height="15" fill="rgb(253,91,49)" fg:x="23468" fg:w="53"/><text x="53.1131%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="52.8202%" y="133" width="0.1778%" height="15" fill="rgb(228,155,29)" fg:x="23468" fg:w="79"/><text x="53.1131%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.4819%" y="117" width="0.1193%" height="15" fill="rgb(243,57,37)" fg:x="23762" fg:w="53"/><text x="53.7749%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.4819%" y="133" width="0.1778%" height="15" fill="rgb(244,167,17)" fg:x="23762" fg:w="79"/><text x="53.7749%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (588 instructions, 1.32%)</title><rect x="52.8202%" y="149" width="1.3234%" height="15" fill="rgb(207,181,38)" fg:x="23468" fg:w="588"/><text x="53.1131%" y="159.50"></text></g><g><title>candid::types::internal::env_id (891 instructions, 2.01%)</title><rect x="52.8202%" y="165" width="2.0054%" height="15" fill="rgb(211,8,23)" fg:x="23468" fg:w="891"/><text x="53.1131%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="54.8256%" y="165" width="0.1013%" height="15" fill="rgb(235,11,44)" fg:x="24359" fg:w="45"/><text x="55.1185%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="54.9516%" y="149" width="0.3781%" height="15" fill="rgb(248,18,52)" fg:x="24415" fg:w="168"/><text x="55.2446%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.46%)</title><rect x="54.9269%" y="165" width="0.4637%" height="15" fill="rgb(208,4,7)" fg:x="24404" fg:w="206"/><text x="55.2198%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="55.3905%" y="149" width="0.0630%" height="15" fill="rgb(240,17,39)" fg:x="24610" fg:w="28"/><text x="55.6835%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.03%)</title><rect x="55.4535%" y="149" width="0.0338%" height="15" fill="rgb(207,170,3)" fg:x="24638" fg:w="15"/><text x="55.7465%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2223 (15 instructions, 0.03%)</title><rect x="55.4873%" y="149" width="0.0338%" height="15" fill="rgb(236,100,52)" fg:x="24653" fg:w="15"/><text x="55.7803%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (135 instructions, 0.30%)</title><rect x="55.3905%" y="165" width="0.3038%" height="15" fill="rgb(246,78,51)" fg:x="24610" fg:w="135"/><text x="55.6835%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.6944%" y="165" width="0.0248%" height="15" fill="rgb(211,17,15)" fg:x="24745" fg:w="11"/><text x="55.9873%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7191%" y="165" width="0.0248%" height="15" fill="rgb(209,59,46)" fg:x="24756" fg:w="11"/><text x="56.0121%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7439%" y="165" width="0.0248%" height="15" fill="rgb(210,92,25)" fg:x="24767" fg:w="11"/><text x="56.0368%" y="175.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="55.7686%" y="165" width="0.9228%" height="15" fill="rgb(238,174,52)" fg:x="24778" fg:w="410"/><text x="56.0616%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="56.6914%" y="133" width="0.0338%" height="15" fill="rgb(230,73,7)" fg:x="25188" fg:w="15"/><text x="56.9844%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="56.7252%" y="133" width="0.2768%" height="15" fill="rgb(243,124,40)" fg:x="25203" fg:w="123"/><text x="57.0182%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.17%)</title><rect x="57.0020%" y="101" width="0.1688%" height="15" fill="rgb(244,170,11)" fg:x="25326" fg:w="75"/><text x="57.2950%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.50%)</title><rect x="57.0020%" y="117" width="0.4952%" height="15" fill="rgb(207,114,54)" fg:x="25326" fg:w="220"/><text x="57.2950%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 instructions, 0.56%)</title><rect x="57.0020%" y="133" width="0.5559%" height="15" fill="rgb(205,42,20)" fg:x="25326" fg:w="247"/><text x="57.2950%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="57.5580%" y="133" width="0.0248%" height="15" fill="rgb(230,30,28)" fg:x="25573" fg:w="11"/><text x="57.8509%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (436 instructions, 0.98%)</title><rect x="56.6914%" y="149" width="0.9813%" height="15" fill="rgb(205,73,54)" fg:x="25188" fg:w="436"/><text x="56.9844%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (473 instructions, 1.06%)</title><rect x="56.6914%" y="165" width="1.0646%" height="15" fill="rgb(254,227,23)" fg:x="25188" fg:w="473"/><text x="56.9844%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="57.7560%" y="149" width="0.0473%" height="15" fill="rgb(228,202,34)" fg:x="25661" fg:w="21"/><text x="58.0490%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.21%)</title><rect x="57.8033%" y="149" width="0.2138%" height="15" fill="rgb(222,225,37)" fg:x="25682" fg:w="95"/><text x="58.0963%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.44%)</title><rect x="57.7560%" y="165" width="0.4434%" height="15" fill="rgb(221,14,54)" fg:x="25661" fg:w="197"/><text x="58.0490%" y="175.50"></text></g><g><title>memset (218 instructions, 0.49%)</title><rect x="58.1994%" y="165" width="0.4907%" height="15" fill="rgb(254,102,2)" fg:x="25858" fg:w="218"/><text x="58.4924%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.37%)</title><rect x="58.6901%" y="165" width="0.3669%" height="15" fill="rgb(232,104,17)" fg:x="26076" fg:w="163"/><text x="58.9830%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.06%)</title><rect x="59.0569%" y="165" width="1.0578%" height="15" fill="rgb(250,220,14)" fg:x="26239" fg:w="470"/><text x="59.3499%" y="175.50"></text></g><g><title>memset (126 instructions, 0.28%)</title><rect x="60.1148%" y="149" width="0.2836%" height="15" fill="rgb(241,158,9)" fg:x="26709" fg:w="126"/><text x="60.4078%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.22%)</title><rect x="60.3984%" y="149" width="11.2244%" height="15" fill="rgb(246,9,43)" fg:x="26835" fg:w="4987"/><text x="60.6913%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.16%)</title><rect x="60.1148%" y="165" width="12.1562%" height="15" fill="rgb(206,73,33)" fg:x="26709" fg:w="5401"/><text x="60.4078%" y="175.50">&lt;sha2::core_api..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="72.2710%" y="165" width="0.1711%" height="15" fill="rgb(222,79,8)" fg:x="32110" fg:w="76"/><text x="72.5640%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="72.4420%" y="149" width="0.0270%" height="15" fill="rgb(234,8,54)" fg:x="32186" fg:w="12"/><text x="72.7350%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.4691%" y="117" width="0.2836%" height="15" fill="rgb(209,134,38)" fg:x="32198" fg:w="126"/><text x="72.7620%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.34%)</title><rect x="72.4691%" y="133" width="0.3444%" height="15" fill="rgb(230,127,29)" fg:x="32198" fg:w="153"/><text x="72.7620%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.8134%" y="133" width="0.2836%" height="15" fill="rgb(242,44,41)" fg:x="32351" fg:w="126"/><text x="73.1064%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="73.1690%" y="117" width="0.1215%" height="15" fill="rgb(222,56,43)" fg:x="32509" fg:w="54"/><text x="73.4620%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="73.2906%" y="117" width="0.1418%" height="15" fill="rgb(238,39,47)" fg:x="32563" fg:w="63"/><text x="73.5835%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.55%)</title><rect x="73.1690%" y="133" width="0.5469%" height="15" fill="rgb(226,79,43)" fg:x="32509" fg:w="243"/><text x="73.4620%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (581 instructions, 1.31%)</title><rect x="72.4691%" y="149" width="1.3077%" height="15" fill="rgb(242,105,53)" fg:x="32198" fg:w="581"/><text x="72.7620%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="73.7767%" y="149" width="0.0248%" height="15" fill="rgb(251,132,46)" fg:x="32779" fg:w="11"/><text x="74.0697%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="73.8015%" y="149" width="0.1891%" height="15" fill="rgb(231,77,14)" fg:x="32790" fg:w="84"/><text x="74.0945%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="73.9905%" y="117" width="0.0270%" height="15" fill="rgb(240,135,9)" fg:x="32874" fg:w="12"/><text x="74.2835%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="73.9905%" y="133" width="0.1125%" height="15" fill="rgb(248,109,14)" fg:x="32874" fg:w="50"/><text x="74.2835%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="74.1031%" y="133" width="0.1711%" height="15" fill="rgb(227,146,52)" fg:x="32924" fg:w="76"/><text x="74.3961%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="74.2741%" y="117" width="0.0270%" height="15" fill="rgb(232,54,3)" fg:x="33000" fg:w="12"/><text x="74.5671%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="74.3011%" y="101" width="0.1193%" height="15" fill="rgb(229,201,43)" fg:x="33012" fg:w="53"/><text x="74.5941%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="74.4204%" y="101" width="0.8193%" height="15" fill="rgb(252,161,33)" fg:x="33065" fg:w="364"/><text x="74.7134%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="75.2397%" y="101" width="0.1621%" height="15" fill="rgb(226,146,40)" fg:x="33429" fg:w="72"/><text x="75.5327%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="74.3011%" y="117" width="1.6340%" height="15" fill="rgb(219,47,25)" fg:x="33012" fg:w="726"/><text x="74.5941%" y="127.50"></text></g><g><title>candid::types::internal::env_add (946 instructions, 2.13%)</title><rect x="74.2741%" y="133" width="2.1292%" height="15" fill="rgb(250,135,13)" fg:x="33000" fg:w="946"/><text x="74.5671%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.4033%" y="133" width="0.1711%" height="15" fill="rgb(219,229,18)" fg:x="33946" fg:w="76"/><text x="76.6963%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.5744%" y="133" width="0.1711%" height="15" fill="rgb(217,152,27)" fg:x="34022" fg:w="76"/><text x="76.8674%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.7454%" y="117" width="0.0270%" height="15" fill="rgb(225,71,47)" fg:x="34098" fg:w="12"/><text x="77.0384%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.7725%" y="101" width="0.1193%" height="15" fill="rgb(220,139,14)" fg:x="34110" fg:w="53"/><text x="77.0654%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="76.8917%" y="101" width="0.8193%" height="15" fill="rgb(247,54,32)" fg:x="34163" fg:w="364"/><text x="77.1847%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="77.7110%" y="101" width="0.1621%" height="15" fill="rgb(252,131,39)" fg:x="34527" fg:w="72"/><text x="78.0040%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="76.7725%" y="117" width="1.6340%" height="15" fill="rgb(210,108,39)" fg:x="34110" fg:w="726"/><text x="77.0654%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.38%)</title><rect x="78.4065%" y="117" width="1.3819%" height="15" fill="rgb(205,23,29)" fg:x="34836" fg:w="614"/><text x="78.6995%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="79.7884%" y="101" width="0.1823%" height="15" fill="rgb(246,139,46)" fg:x="35450" fg:w="81"/><text x="80.0814%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="79.7884%" y="117" width="0.2431%" height="15" fill="rgb(250,81,26)" fg:x="35450" fg:w="108"/><text x="80.0814%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,627 instructions, 3.66%)</title><rect x="76.7454%" y="133" width="3.6619%" height="15" fill="rgb(214,104,7)" fg:x="34098" fg:w="1627"/><text x="77.0384%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.4074%" y="85" width="0.1193%" height="15" fill="rgb(233,189,8)" fg:x="35725" fg:w="53"/><text x="80.7004%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="80.5267%" y="85" width="0.3466%" height="15" fill="rgb(228,141,17)" fg:x="35778" fg:w="154"/><text x="80.8196%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="80.4074%" y="101" width="0.5807%" height="15" fill="rgb(247,157,1)" fg:x="35725" fg:w="258"/><text x="80.7004%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="80.4074%" y="117" width="1.0646%" height="15" fill="rgb(249,225,5)" fg:x="35725" fg:w="473"/><text x="80.7004%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.564 (42 instructions, 0.09%)</title><rect x="81.4720%" y="117" width="0.0945%" height="15" fill="rgb(242,55,13)" fg:x="36198" fg:w="42"/><text x="81.7649%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.5665%" y="117" width="0.0248%" height="15" fill="rgb(230,49,50)" fg:x="36240" fg:w="11"/><text x="81.8595%" y="127.50"></text></g><g><title>candid::types::internal::env_id (704 instructions, 1.58%)</title><rect x="80.4074%" y="133" width="1.5845%" height="15" fill="rgb(241,111,38)" fg:x="35725" fg:w="704"/><text x="80.7004%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,669 instructions, 8.26%)</title><rect x="73.9905%" y="149" width="8.2579%" height="15" fill="rgb(252,155,4)" fg:x="32874" fg:w="3669"/><text x="74.2835%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.2485%" y="117" width="0.1711%" height="15" fill="rgb(212,69,32)" fg:x="36543" fg:w="76"/><text x="82.5414%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="82.2485%" y="133" width="0.2476%" height="15" fill="rgb(243,107,47)" fg:x="36543" fg:w="110"/><text x="82.5414%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="82.2485%" y="149" width="0.4051%" height="15" fill="rgb(247,130,12)" fg:x="36543" fg:w="180"/><text x="82.5414%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="82.6536%" y="133" width="0.0540%" height="15" fill="rgb(233,74,16)" fg:x="36723" fg:w="24"/><text x="82.9466%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.7076%" y="101" width="0.1756%" height="15" fill="rgb(208,58,18)" fg:x="36747" fg:w="78"/><text x="83.0006%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.34%)</title><rect x="82.7076%" y="117" width="0.3444%" height="15" fill="rgb(242,225,1)" fg:x="36747" fg:w="153"/><text x="83.0006%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="83.0520%" y="117" width="0.1711%" height="15" fill="rgb(249,39,40)" fg:x="36900" fg:w="76"/><text x="83.3450%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.69%)</title><rect x="82.7076%" y="133" width="0.6932%" height="15" fill="rgb(207,72,44)" fg:x="36747" fg:w="308"/><text x="83.0006%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4009%" y="85" width="0.1193%" height="15" fill="rgb(215,193,12)" fg:x="37055" fg:w="53"/><text x="83.6938%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="83.5201%" y="85" width="0.3466%" height="15" fill="rgb(248,41,39)" fg:x="37108" fg:w="154"/><text x="83.8131%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="83.4009%" y="101" width="0.5807%" height="15" fill="rgb(253,85,4)" fg:x="37055" fg:w="258"/><text x="83.6938%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="83.4009%" y="117" width="1.0646%" height="15" fill="rgb(243,70,31)" fg:x="37055" fg:w="473"/><text x="83.6938%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="84.4655%" y="117" width="0.1711%" height="15" fill="rgb(253,195,26)" fg:x="37528" fg:w="76"/><text x="84.7584%" y="127.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="84.6365%" y="117" width="0.3061%" height="15" fill="rgb(243,42,11)" fg:x="37604" fg:w="136"/><text x="84.9295%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (986 instructions, 2.22%)</title><rect x="83.4009%" y="133" width="2.2192%" height="15" fill="rgb(239,66,17)" fg:x="37055" fg:w="986"/><text x="83.6938%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.6201%" y="101" width="0.1711%" height="15" fill="rgb(217,132,21)" fg:x="38041" fg:w="76"/><text x="85.9130%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="85.6201%" y="117" width="0.2476%" height="15" fill="rgb(252,202,21)" fg:x="38041" fg:w="110"/><text x="85.9130%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="85.6201%" y="133" width="0.4051%" height="15" fill="rgb(233,98,36)" fg:x="38041" fg:w="180"/><text x="85.9130%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.0252%" y="85" width="0.1193%" height="15" fill="rgb(216,153,54)" fg:x="38221" fg:w="53"/><text x="86.3182%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="86.0252%" y="101" width="0.1778%" height="15" fill="rgb(250,99,7)" fg:x="38221" fg:w="79"/><text x="86.3182%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (294 instructions, 0.66%)</title><rect x="86.0252%" y="117" width="0.6617%" height="15" fill="rgb(207,56,50)" fg:x="38221" fg:w="294"/><text x="86.3182%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.6869%" y="117" width="0.0405%" height="15" fill="rgb(244,61,34)" fg:x="38515" fg:w="18"/><text x="86.9799%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.7274%" y="117" width="0.0248%" height="15" fill="rgb(241,50,38)" fg:x="38533" fg:w="11"/><text x="87.0204%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 0.98%)</title><rect x="86.0252%" y="133" width="0.9836%" height="15" fill="rgb(212,166,30)" fg:x="38221" fg:w="437"/><text x="86.3182%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="87.0088%" y="85" width="0.1711%" height="15" fill="rgb(249,127,32)" fg:x="38658" fg:w="76"/><text x="87.3017%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="87.0088%" y="101" width="0.2476%" height="15" fill="rgb(209,103,0)" fg:x="38658" fg:w="110"/><text x="87.3017%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="87.0088%" y="117" width="0.3984%" height="15" fill="rgb(238,209,51)" fg:x="38658" fg:w="177"/><text x="87.3017%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.52%)</title><rect x="87.0088%" y="133" width="0.5154%" height="15" fill="rgb(237,56,23)" fg:x="38658" fg:w="229"/><text x="87.3017%" y="143.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.11%)</title><rect x="87.5242%" y="117" width="0.1058%" height="15" fill="rgb(215,153,46)" fg:x="38887" fg:w="47"/><text x="87.8172%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::encode (95 instructions, 0.21%)</title><rect x="87.5242%" y="133" width="0.2138%" height="15" fill="rgb(224,49,31)" fg:x="38887" fg:w="95"/><text x="87.8172%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.7380%" y="101" width="0.1823%" height="15" fill="rgb(250,18,42)" fg:x="38982" fg:w="81"/><text x="88.0310%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="87.7380%" y="117" width="0.2431%" height="15" fill="rgb(215,176,39)" fg:x="38982" fg:w="108"/><text x="88.0310%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="87.9811%" y="117" width="0.1756%" height="15" fill="rgb(223,77,29)" fg:x="39090" fg:w="78"/><text x="88.2741%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.49%)</title><rect x="87.7380%" y="133" width="0.4907%" height="15" fill="rgb(234,94,52)" fg:x="38982" fg:w="218"/><text x="88.0310%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.2287%" y="133" width="0.0248%" height="15" fill="rgb(220,154,50)" fg:x="39200" fg:w="11"/><text x="88.5216%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,689 instructions, 6.05%)</title><rect x="82.6536%" y="149" width="6.0522%" height="15" fill="rgb(212,11,10)" fg:x="36723" fg:w="2689"/><text x="82.9466%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.7058%" y="149" width="0.0248%" height="15" fill="rgb(205,166,19)" fg:x="39412" fg:w="11"/><text x="88.9988%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="88.7306%" y="117" width="0.1711%" height="15" fill="rgb(244,198,16)" fg:x="39423" fg:w="76"/><text x="89.0236%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="88.7306%" y="133" width="0.2476%" height="15" fill="rgb(219,69,12)" fg:x="39423" fg:w="110"/><text x="89.0236%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="89.1290%" y="117" width="0.2273%" height="15" fill="rgb(245,30,7)" fg:x="39600" fg:w="101"/><text x="89.4219%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="89.1290%" y="133" width="0.3061%" height="15" fill="rgb(218,221,48)" fg:x="39600" fg:w="136"/><text x="89.4219%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.87%)</title><rect x="88.7306%" y="149" width="0.8733%" height="15" fill="rgb(216,66,15)" fg:x="39423" fg:w="388"/><text x="89.0236%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.66%)</title><rect x="89.6039%" y="149" width="0.6617%" height="15" fill="rgb(226,122,50)" fg:x="39811" fg:w="294"/><text x="89.8968%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="90.2656%" y="149" width="0.2701%" height="15" fill="rgb(239,156,16)" fg:x="40105" fg:w="120"/><text x="90.5586%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.5357%" y="117" width="0.1711%" height="15" fill="rgb(224,27,38)" fg:x="40225" fg:w="76"/><text x="90.8286%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="90.5357%" y="133" width="0.2476%" height="15" fill="rgb(224,39,27)" fg:x="40225" fg:w="110"/><text x="90.8286%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="90.5357%" y="149" width="0.3984%" height="15" fill="rgb(215,92,29)" fg:x="40225" fg:w="177"/><text x="90.8286%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.9341%" y="149" width="0.1711%" height="15" fill="rgb(207,159,16)" fg:x="40402" fg:w="76"/><text x="91.2270%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.1051%" y="149" width="0.1013%" height="15" fill="rgb(238,163,47)" fg:x="40478" fg:w="45"/><text x="91.3981%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.2064%" y="149" width="0.1013%" height="15" fill="rgb(219,91,49)" fg:x="40523" fg:w="45"/><text x="91.4994%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="91.3077%" y="149" width="0.1238%" height="15" fill="rgb(227,167,31)" fg:x="40568" fg:w="55"/><text x="91.6006%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.4315%" y="101" width="0.1193%" height="15" fill="rgb(234,80,54)" fg:x="40623" fg:w="53"/><text x="91.7244%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="91.5508%" y="101" width="0.3466%" height="15" fill="rgb(212,114,2)" fg:x="40676" fg:w="154"/><text x="91.8437%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="91.4315%" y="117" width="0.5807%" height="15" fill="rgb(234,50,24)" fg:x="40623" fg:w="258"/><text x="91.7244%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="91.4315%" y="133" width="1.0646%" height="15" fill="rgb(221,68,8)" fg:x="40623" fg:w="473"/><text x="91.7244%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="92.4961%" y="85" width="0.1711%" height="15" fill="rgb(254,180,31)" fg:x="41096" fg:w="76"/><text x="92.7890%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="92.4961%" y="101" width="0.2476%" height="15" fill="rgb(247,130,50)" fg:x="41096" fg:w="110"/><text x="92.7890%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="92.4961%" y="117" width="0.3984%" height="15" fill="rgb(211,109,4)" fg:x="41096" fg:w="177"/><text x="92.7890%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.52%)</title><rect x="92.4961%" y="133" width="0.5154%" height="15" fill="rgb(238,50,21)" fg:x="41096" fg:w="229"/><text x="92.7890%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (839 instructions, 1.89%)</title><rect x="91.4315%" y="149" width="1.8884%" height="15" fill="rgb(225,57,45)" fg:x="40623" fg:w="839"/><text x="91.7244%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.3198%" y="149" width="0.0675%" height="15" fill="rgb(209,196,50)" fg:x="41462" fg:w="30"/><text x="93.6128%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="93.3874%" y="149" width="0.1238%" height="15" fill="rgb(242,140,13)" fg:x="41492" fg:w="55"/><text x="93.6803%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (33 instructions, 0.07%)</title><rect x="93.5111%" y="149" width="0.0743%" height="15" fill="rgb(217,111,7)" fg:x="41547" fg:w="33"/><text x="93.8041%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (61 instructions, 0.14%)</title><rect x="93.5854%" y="149" width="0.1373%" height="15" fill="rgb(253,193,51)" fg:x="41580" fg:w="61"/><text x="93.8784%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.7227%" y="149" width="0.1823%" height="15" fill="rgb(252,70,29)" fg:x="41641" fg:w="81"/><text x="94.0157%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.9050%" y="149" width="0.2768%" height="15" fill="rgb(232,127,12)" fg:x="41722" fg:w="123"/><text x="94.1980%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.1819%" y="149" width="0.0248%" height="15" fill="rgb(211,180,21)" fg:x="41845" fg:w="11"/><text x="94.4748%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="94.2066%" y="149" width="0.3781%" height="15" fill="rgb(229,72,13)" fg:x="41856" fg:w="168"/><text x="94.4996%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5847%" y="149" width="0.0113%" height="15" fill="rgb(240,211,49)" fg:x="42024" fg:w="5"/><text x="94.8777%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.5960%" y="149" width="0.0248%" height="15" fill="rgb(219,149,40)" fg:x="42029" fg:w="11"/><text x="94.8890%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.6208%" y="149" width="0.2701%" height="15" fill="rgb(210,127,46)" fg:x="42040" fg:w="120"/><text x="94.9137%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="94.8908%" y="149" width="0.1238%" height="15" fill="rgb(220,106,7)" fg:x="42160" fg:w="55"/><text x="95.1838%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.22%)</title><rect x="95.0146%" y="149" width="0.2183%" height="15" fill="rgb(249,31,22)" fg:x="42215" fg:w="97"/><text x="95.3076%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,982 instructions, 24.72%)</title><rect x="72.4420%" y="165" width="24.7175%" height="15" fill="rgb(253,1,49)" fg:x="32186" fg:w="10982"/><text x="72.7350%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (43,779 instructions, 98.53%)</title><rect x="0.3849%" y="181" width="98.5348%" height="15" fill="rgb(227,144,33)" fg:x="171" fg:w="43779"/><text x="0.6778%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9196%" y="181" width="0.0270%" height="15" fill="rgb(249,163,44)" fg:x="43950" fg:w="12"/><text x="99.2126%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="99.2302%" y="165" width="0.1238%" height="15" fill="rgb(234,15,39)" fg:x="44088" fg:w="55"/><text x="99.5232%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="99.3540%" y="165" width="0.1418%" height="15" fill="rgb(207,66,16)" fg:x="44143" fg:w="63"/><text x="99.6470%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (370 instructions, 0.83%)</title><rect x="98.9467%" y="181" width="0.8328%" height="15" fill="rgb(233,112,24)" fg:x="43962" fg:w="370"/><text x="99.2396%" y="191.50"></text></g><g><title>all (44,430 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(230,90,22)" fg:x="0" fg:w="44430"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (44,430 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(229,61,13)" fg:x="0" fg:w="44430"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>