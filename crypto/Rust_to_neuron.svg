<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="44417"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0428%" height="15" fill="rgb(227,166,31)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.0428%" y="181" width="0.1711%" height="15" fill="rgb(245,143,41)" fg:x="19" fg:w="76"/><text x="0.3357%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2139%" y="181" width="0.1711%" height="15" fill="rgb(238,181,32)" fg:x="95" fg:w="76"/><text x="0.5069%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3850%" y="165" width="0.1711%" height="15" fill="rgb(224,113,18)" fg:x="171" fg:w="76"/><text x="0.6780%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="0.5561%" y="149" width="0.1598%" height="15" fill="rgb(240,229,28)" fg:x="247" fg:w="71"/><text x="0.8491%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="0.7159%" y="149" width="0.9051%" height="15" fill="rgb(250,185,3)" fg:x="318" fg:w="402"/><text x="1.0089%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="1.6210%" y="149" width="0.1869%" height="15" fill="rgb(212,59,25)" fg:x="720" fg:w="83"/><text x="1.9140%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8079%" y="149" width="0.1216%" height="15" fill="rgb(221,87,20)" fg:x="803" fg:w="54"/><text x="2.1008%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9294%" y="149" width="0.1216%" height="15" fill="rgb(213,74,28)" fg:x="857" fg:w="54"/><text x="2.2224%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0510%" y="149" width="0.1216%" height="15" fill="rgb(224,132,34)" fg:x="911" fg:w="54"/><text x="2.3440%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1726%" y="149" width="0.1216%" height="15" fill="rgb(222,101,24)" fg:x="965" fg:w="54"/><text x="2.4656%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="2.2942%" y="149" width="0.1598%" height="15" fill="rgb(254,142,4)" fg:x="1019" fg:w="71"/><text x="2.5871%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4540%" y="149" width="0.1463%" height="15" fill="rgb(230,229,49)" fg:x="1090" fg:w="65"/><text x="2.7470%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="2.6004%" y="149" width="0.9051%" height="15" fill="rgb(238,70,47)" fg:x="1155" fg:w="402"/><text x="2.8933%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5054%" y="149" width="0.0360%" height="15" fill="rgb(231,160,17)" fg:x="1557" fg:w="16"/><text x="3.7984%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="3.5414%" y="133" width="0.1711%" height="15" fill="rgb(218,68,53)" fg:x="1573" fg:w="76"/><text x="3.8344%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7125%" y="101" width="0.1351%" height="15" fill="rgb(236,111,10)" fg:x="1649" fg:w="60"/><text x="4.0055%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7125%" y="117" width="0.1914%" height="15" fill="rgb(224,34,41)" fg:x="1649" fg:w="85"/><text x="4.0055%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9039%" y="69" width="0.0203%" height="15" fill="rgb(241,118,19)" fg:x="1734" fg:w="9"/><text x="4.1969%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9242%" y="53" width="0.0675%" height="15" fill="rgb(238,129,25)" fg:x="1743" fg:w="30"/><text x="4.2171%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9242%" y="69" width="0.1238%" height="15" fill="rgb(238,22,31)" fg:x="1743" fg:w="55"/><text x="4.2171%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="3.9039%" y="85" width="0.2567%" height="15" fill="rgb(222,174,48)" fg:x="1734" fg:w="114"/><text x="4.1969%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="3.9039%" y="101" width="0.3760%" height="15" fill="rgb(206,152,40)" fg:x="1734" fg:w="167"/><text x="4.1969%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="3.9039%" y="117" width="0.3872%" height="15" fill="rgb(218,99,54)" fg:x="1734" fg:w="172"/><text x="4.1969%" y="127.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="3.7125%" y="133" width="0.8285%" height="15" fill="rgb(220,174,26)" fg:x="1649" fg:w="368"/><text x="4.0055%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="3.5414%" y="149" width="1.2720%" height="15" fill="rgb(245,116,9)" fg:x="1573" fg:w="565"/><text x="3.8344%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="4.8135%" y="149" width="0.1869%" height="15" fill="rgb(209,72,35)" fg:x="2138" fg:w="83"/><text x="5.1064%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="5.0003%" y="149" width="0.1238%" height="15" fill="rgb(226,126,21)" fg:x="2221" fg:w="55"/><text x="5.2933%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="5.1242%" y="149" width="0.1463%" height="15" fill="rgb(227,192,1)" fg:x="2276" fg:w="65"/><text x="5.4171%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.2705%" y="149" width="0.1463%" height="15" fill="rgb(237,180,29)" fg:x="2341" fg:w="65"/><text x="5.5635%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="5.4168%" y="133" width="0.9051%" height="15" fill="rgb(230,197,35)" fg:x="2406" fg:w="402"/><text x="5.7098%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.3219%" y="133" width="0.0360%" height="15" fill="rgb(246,193,31)" fg:x="2808" fg:w="16"/><text x="6.6149%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="6.3579%" y="117" width="0.1711%" height="15" fill="rgb(241,36,4)" fg:x="2824" fg:w="76"/><text x="6.6509%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.5290%" y="85" width="0.1351%" height="15" fill="rgb(241,130,17)" fg:x="2900" fg:w="60"/><text x="6.8220%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="6.5290%" y="101" width="0.1914%" height="15" fill="rgb(206,137,32)" fg:x="2900" fg:w="85"/><text x="6.8220%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.7204%" y="53" width="0.0203%" height="15" fill="rgb(237,228,51)" fg:x="2985" fg:w="9"/><text x="7.0134%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="6.7407%" y="37" width="0.0675%" height="15" fill="rgb(243,6,42)" fg:x="2994" fg:w="30"/><text x="7.0336%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="6.7407%" y="53" width="0.1238%" height="15" fill="rgb(251,74,28)" fg:x="2994" fg:w="55"/><text x="7.0336%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="6.7204%" y="69" width="0.2567%" height="15" fill="rgb(218,20,49)" fg:x="2985" fg:w="114"/><text x="7.0134%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="6.7204%" y="85" width="0.3760%" height="15" fill="rgb(238,28,14)" fg:x="2985" fg:w="167"/><text x="7.0134%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="6.7204%" y="101" width="0.3872%" height="15" fill="rgb(229,40,46)" fg:x="2985" fg:w="172"/><text x="7.0134%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="6.5290%" y="117" width="0.8285%" height="15" fill="rgb(244,195,20)" fg:x="2900" fg:w="368"/><text x="6.8220%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="6.3579%" y="133" width="1.2720%" height="15" fill="rgb(253,56,35)" fg:x="2824" fg:w="565"/><text x="6.6509%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="7.6300%" y="133" width="0.1869%" height="15" fill="rgb(210,149,44)" fg:x="3389" fg:w="83"/><text x="7.9229%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="7.8168%" y="133" width="0.1238%" height="15" fill="rgb(240,135,12)" fg:x="3472" fg:w="55"/><text x="8.1098%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="7.9407%" y="117" width="0.1598%" height="15" fill="rgb(251,24,50)" fg:x="3527" fg:w="71"/><text x="8.2336%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="8.1005%" y="117" width="0.2026%" height="15" fill="rgb(243,200,47)" fg:x="3598" fg:w="90"/><text x="8.3935%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="8.3031%" y="117" width="0.1463%" height="15" fill="rgb(224,166,26)" fg:x="3688" fg:w="65"/><text x="8.5961%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (289 instructions, 0.65%)</title><rect x="7.9407%" y="133" width="0.6507%" height="15" fill="rgb(233,0,47)" fg:x="3527" fg:w="289"/><text x="8.2336%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.5913%" y="133" width="0.1711%" height="15" fill="rgb(253,80,5)" fg:x="3816" fg:w="76"/><text x="8.8843%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="8.7624%" y="117" width="0.1598%" height="15" fill="rgb(214,133,25)" fg:x="3892" fg:w="71"/><text x="9.0554%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (90 instructions, 0.20%)</title><rect x="8.9223%" y="117" width="0.2026%" height="15" fill="rgb(209,27,14)" fg:x="3963" fg:w="90"/><text x="9.2152%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.1249%" y="117" width="0.1463%" height="15" fill="rgb(219,102,51)" fg:x="4053" fg:w="65"/><text x="9.4179%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (285 instructions, 0.64%)</title><rect x="8.7624%" y="133" width="0.6416%" height="15" fill="rgb(237,18,16)" fg:x="3892" fg:w="285"/><text x="9.0554%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,016 instructions, 4.54%)</title><rect x="5.4168%" y="149" width="4.5388%" height="15" fill="rgb(241,85,17)" fg:x="2406" fg:w="2016"/><text x="5.7098%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="9.9556%" y="149" width="0.1463%" height="15" fill="rgb(236,90,42)" fg:x="4422" fg:w="65"/><text x="10.2486%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.1020%" y="149" width="0.0293%" height="15" fill="rgb(249,57,21)" fg:x="4487" fg:w="13"/><text x="10.3950%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.1313%" y="149" width="0.0293%" height="15" fill="rgb(243,12,36)" fg:x="4500" fg:w="13"/><text x="10.4242%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.1605%" y="149" width="0.0158%" height="15" fill="rgb(253,128,47)" fg:x="4513" fg:w="7"/><text x="10.4535%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.1763%" y="149" width="0.0338%" height="15" fill="rgb(207,33,20)" fg:x="4520" fg:w="15"/><text x="10.4693%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.2101%" y="133" width="0.1711%" height="15" fill="rgb(233,215,35)" fg:x="4535" fg:w="76"/><text x="10.5030%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.2101%" y="149" width="0.3580%" height="15" fill="rgb(249,188,52)" fg:x="4535" fg:w="159"/><text x="10.5030%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.5680%" y="117" width="0.1711%" height="15" fill="rgb(225,12,32)" fg:x="4694" fg:w="76"/><text x="10.8610%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="10.5680%" y="133" width="0.2477%" height="15" fill="rgb(247,98,14)" fg:x="4694" fg:w="110"/><text x="10.8610%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="10.5680%" y="149" width="0.4053%" height="15" fill="rgb(247,219,48)" fg:x="4694" fg:w="180"/><text x="10.8610%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.9733%" y="133" width="0.1711%" height="15" fill="rgb(253,60,48)" fg:x="4874" fg:w="76"/><text x="11.2662%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.9733%" y="149" width="0.3580%" height="15" fill="rgb(245,15,52)" fg:x="4874" fg:w="159"/><text x="11.2662%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.3312%" y="149" width="0.1711%" height="15" fill="rgb(220,133,28)" fg:x="5033" fg:w="76"/><text x="11.6242%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="11.5024%" y="149" width="0.1824%" height="15" fill="rgb(217,180,4)" fg:x="5109" fg:w="81"/><text x="11.7953%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.6847%" y="149" width="0.1711%" height="15" fill="rgb(251,24,1)" fg:x="5190" fg:w="76"/><text x="11.9777%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.8558%" y="149" width="0.1711%" height="15" fill="rgb(212,185,49)" fg:x="5266" fg:w="76"/><text x="12.1488%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="12.0314%" y="149" width="0.1824%" height="15" fill="rgb(215,175,22)" fg:x="5344" fg:w="81"/><text x="12.3244%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="12.2138%" y="149" width="0.8983%" height="15" fill="rgb(250,205,14)" fg:x="5425" fg:w="399"/><text x="12.5068%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="13.1121%" y="149" width="0.8983%" height="15" fill="rgb(225,211,22)" fg:x="5824" fg:w="399"/><text x="13.4051%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,012 instructions, 15.79%)</title><rect x="0.5561%" y="165" width="15.7867%" height="15" fill="rgb(251,179,42)" fg:x="247" fg:w="7012"/><text x="0.8491%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="16.3428%" y="165" width="0.7970%" height="15" fill="rgb(208,216,51)" fg:x="7259" fg:w="354"/><text x="16.6358%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="17.1398%" y="133" width="0.0270%" height="15" fill="rgb(235,36,11)" fg:x="7613" fg:w="12"/><text x="17.4328%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.1669%" y="117" width="0.1193%" height="15" fill="rgb(213,189,28)" fg:x="7625" fg:w="53"/><text x="17.4598%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="17.2862%" y="117" width="0.8645%" height="15" fill="rgb(227,203,42)" fg:x="7678" fg:w="384"/><text x="17.5791%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="18.1507%" y="117" width="0.3647%" height="15" fill="rgb(244,72,36)" fg:x="8062" fg:w="162"/><text x="18.4437%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="17.1669%" y="133" width="1.8822%" height="15" fill="rgb(213,53,17)" fg:x="7625" fg:w="836"/><text x="17.4598%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (963 instructions, 2.17%)</title><rect x="17.1398%" y="149" width="2.1681%" height="15" fill="rgb(207,167,3)" fg:x="7613" fg:w="963"/><text x="17.4328%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="19.3079%" y="149" width="0.1711%" height="15" fill="rgb(216,98,30)" fg:x="8576" fg:w="76"/><text x="19.6009%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="19.4790%" y="133" width="0.0270%" height="15" fill="rgb(236,123,15)" fg:x="8652" fg:w="12"/><text x="19.7720%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.5060%" y="117" width="0.1193%" height="15" fill="rgb(248,81,50)" fg:x="8664" fg:w="53"/><text x="19.7990%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="19.6254%" y="117" width="0.8645%" height="15" fill="rgb(214,120,4)" fg:x="8717" fg:w="384"/><text x="19.9183%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="20.4899%" y="117" width="0.3647%" height="15" fill="rgb(208,179,34)" fg:x="9101" fg:w="162"/><text x="20.7829%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="19.5060%" y="133" width="1.8822%" height="15" fill="rgb(227,140,7)" fg:x="8664" fg:w="836"/><text x="19.7990%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,056 instructions, 2.38%)</title><rect x="19.4790%" y="149" width="2.3775%" height="15" fill="rgb(214,22,6)" fg:x="8652" fg:w="1056"/><text x="19.7720%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="21.8565%" y="149" width="0.1711%" height="15" fill="rgb(207,137,27)" fg:x="9708" fg:w="76"/><text x="22.1495%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="22.0276%" y="133" width="0.0270%" height="15" fill="rgb(210,8,46)" fg:x="9784" fg:w="12"/><text x="22.3206%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.0546%" y="117" width="0.1193%" height="15" fill="rgb(240,16,54)" fg:x="9796" fg:w="53"/><text x="22.3476%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="22.1739%" y="117" width="0.8645%" height="15" fill="rgb(211,209,29)" fg:x="9849" fg:w="384"/><text x="22.4669%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="23.0385%" y="117" width="0.3647%" height="15" fill="rgb(226,228,24)" fg:x="10233" fg:w="162"/><text x="23.3314%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="22.0546%" y="133" width="1.8822%" height="15" fill="rgb(222,84,9)" fg:x="9796" fg:w="836"/><text x="22.3476%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.67%)</title><rect x="23.9368%" y="133" width="1.6660%" height="15" fill="rgb(234,203,30)" fg:x="10632" fg:w="740"/><text x="24.2297%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.6028%" y="117" width="0.1824%" height="15" fill="rgb(238,109,14)" fg:x="11372" fg:w="81"/><text x="25.8958%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="25.6028%" y="133" width="0.2432%" height="15" fill="rgb(233,206,34)" fg:x="11372" fg:w="108"/><text x="25.8958%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,863 instructions, 4.19%)</title><rect x="22.0276%" y="149" width="4.1943%" height="15" fill="rgb(220,167,47)" fg:x="9784" fg:w="1863"/><text x="22.3206%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.2219%" y="101" width="0.1193%" height="15" fill="rgb(238,105,10)" fg:x="11647" fg:w="53"/><text x="26.5149%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="26.2219%" y="117" width="0.1779%" height="15" fill="rgb(213,227,17)" fg:x="11647" fg:w="79"/><text x="26.5149%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="26.2219%" y="133" width="0.6574%" height="15" fill="rgb(217,132,38)" fg:x="11647" fg:w="292"/><text x="26.5149%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.847 (15 instructions, 0.03%)</title><rect x="26.8793%" y="133" width="0.0338%" height="15" fill="rgb(242,146,4)" fg:x="11939" fg:w="15"/><text x="27.1723%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.9131%" y="133" width="0.0248%" height="15" fill="rgb(212,61,9)" fg:x="11954" fg:w="11"/><text x="27.2061%" y="143.50"></text></g><g><title>candid::types::internal::env_id (498 instructions, 1.12%)</title><rect x="26.2219%" y="149" width="1.1212%" height="15" fill="rgb(247,126,22)" fg:x="11647" fg:w="498"/><text x="26.5149%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,629 instructions, 10.42%)</title><rect x="17.1398%" y="165" width="10.4217%" height="15" fill="rgb(220,196,2)" fg:x="7613" fg:w="4629"/><text x="17.4328%" y="175.50">candid::types..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="27.5615%" y="149" width="0.1013%" height="15" fill="rgb(208,46,4)" fg:x="12242" fg:w="45"/><text x="27.8545%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.6628%" y="133" width="0.2769%" height="15" fill="rgb(252,104,46)" fg:x="12287" fg:w="123"/><text x="27.9558%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="28.0005%" y="133" width="0.2769%" height="15" fill="rgb(237,152,48)" fg:x="12437" fg:w="123"/><text x="28.2935%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.68%)</title><rect x="27.6628%" y="149" width="0.6754%" height="15" fill="rgb(221,59,37)" fg:x="12287" fg:w="300"/><text x="27.9558%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.3382%" y="133" width="0.0630%" height="15" fill="rgb(209,202,51)" fg:x="12587" fg:w="28"/><text x="28.6312%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.4013%" y="133" width="0.0630%" height="15" fill="rgb(228,81,30)" fg:x="12615" fg:w="28"/><text x="28.6943%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (15 instructions, 0.03%)</title><rect x="28.4643%" y="133" width="0.0338%" height="15" fill="rgb(227,42,39)" fg:x="12643" fg:w="15"/><text x="28.7573%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (15 instructions, 0.03%)</title><rect x="28.4981%" y="133" width="0.0338%" height="15" fill="rgb(221,26,2)" fg:x="12658" fg:w="15"/><text x="28.7911%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="28.5319%" y="133" width="0.1756%" height="15" fill="rgb(254,61,31)" fg:x="12673" fg:w="78"/><text x="28.8248%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.16%)</title><rect x="28.7075%" y="133" width="0.1598%" height="15" fill="rgb(222,173,38)" fg:x="12751" fg:w="71"/><text x="29.0004%" y="143.50"></text></g><g><title>binread::binary_template::write_named (80 instructions, 0.18%)</title><rect x="28.8673%" y="117" width="0.1801%" height="15" fill="rgb(218,50,12)" fg:x="12822" fg:w="80"/><text x="29.1603%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (150 instructions, 0.34%)</title><rect x="28.8673%" y="133" width="0.3377%" height="15" fill="rgb(223,88,40)" fg:x="12822" fg:w="150"/><text x="29.1603%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.2050%" y="133" width="0.1463%" height="15" fill="rgb(237,54,19)" fg:x="12972" fg:w="65"/><text x="29.4980%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.91%)</title><rect x="29.3514%" y="133" width="0.9051%" height="15" fill="rgb(251,129,25)" fg:x="13037" fg:w="402"/><text x="29.6443%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.2564%" y="117" width="0.1711%" height="15" fill="rgb(238,97,19)" fg:x="13439" fg:w="76"/><text x="30.5494%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="30.4275%" y="85" width="0.1351%" height="15" fill="rgb(240,169,18)" fg:x="13515" fg:w="60"/><text x="30.7205%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="30.4275%" y="101" width="0.1914%" height="15" fill="rgb(230,187,49)" fg:x="13515" fg:w="85"/><text x="30.7205%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.6189%" y="53" width="0.0203%" height="15" fill="rgb(209,44,26)" fg:x="13600" fg:w="9"/><text x="30.9119%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.6392%" y="37" width="0.0675%" height="15" fill="rgb(244,0,6)" fg:x="13609" fg:w="30"/><text x="30.9321%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.6392%" y="53" width="0.1238%" height="15" fill="rgb(248,18,21)" fg:x="13609" fg:w="55"/><text x="30.9321%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.26%)</title><rect x="30.6189%" y="69" width="0.2567%" height="15" fill="rgb(245,180,19)" fg:x="13600" fg:w="114"/><text x="30.9119%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.38%)</title><rect x="30.6189%" y="85" width="0.3760%" height="15" fill="rgb(252,118,36)" fg:x="13600" fg:w="167"/><text x="30.9119%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.39%)</title><rect x="30.6189%" y="101" width="0.3872%" height="15" fill="rgb(210,224,19)" fg:x="13600" fg:w="172"/><text x="30.9119%" y="111.50"></text></g><g><title>core::fmt::write (368 instructions, 0.83%)</title><rect x="30.4275%" y="117" width="0.8285%" height="15" fill="rgb(218,30,24)" fg:x="13515" fg:w="368"/><text x="30.7205%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (565 instructions, 1.27%)</title><rect x="30.2564%" y="133" width="1.2720%" height="15" fill="rgb(219,75,50)" fg:x="13439" fg:w="565"/><text x="30.5494%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.19%)</title><rect x="31.5285%" y="133" width="0.1869%" height="15" fill="rgb(234,72,50)" fg:x="14004" fg:w="83"/><text x="31.8214%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="31.7153%" y="133" width="0.1238%" height="15" fill="rgb(219,100,48)" fg:x="14087" fg:w="55"/><text x="32.0083%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="31.8392%" y="117" width="0.1216%" height="15" fill="rgb(253,5,41)" fg:x="14142" fg:w="54"/><text x="32.1321%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (107 instructions, 0.24%)</title><rect x="31.8392%" y="133" width="0.2409%" height="15" fill="rgb(247,181,11)" fg:x="14142" fg:w="107"/><text x="32.1321%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="32.0801%" y="133" width="0.1711%" height="15" fill="rgb(222,223,25)" fg:x="14249" fg:w="76"/><text x="32.3730%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.2512%" y="117" width="0.1216%" height="15" fill="rgb(214,198,28)" fg:x="14325" fg:w="54"/><text x="32.5441%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.4921%" y="117" width="0.1216%" height="15" fill="rgb(230,46,43)" fg:x="14432" fg:w="54"/><text x="32.7850%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.7330%" y="117" width="0.1216%" height="15" fill="rgb(233,65,53)" fg:x="14539" fg:w="54"/><text x="33.0259%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="32.9739%" y="117" width="0.1216%" height="15" fill="rgb(221,121,27)" fg:x="14646" fg:w="54"/><text x="33.2668%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.2148%" y="117" width="0.1216%" height="15" fill="rgb(247,70,47)" fg:x="14753" fg:w="54"/><text x="33.5077%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.4557%" y="117" width="0.1216%" height="15" fill="rgb(228,85,35)" fg:x="14860" fg:w="54"/><text x="33.7486%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.6966%" y="117" width="0.1216%" height="15" fill="rgb(209,50,18)" fg:x="14967" fg:w="54"/><text x="33.9895%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="33.9375%" y="117" width="0.1216%" height="15" fill="rgb(250,19,35)" fg:x="15074" fg:w="54"/><text x="34.2304%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (856 instructions, 1.93%)</title><rect x="32.2512%" y="133" width="1.9272%" height="15" fill="rgb(253,107,29)" fg:x="14325" fg:w="856"/><text x="32.5441%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="34.1784%" y="101" width="0.2274%" height="15" fill="rgb(252,179,29)" fg:x="15181" fg:w="101"/><text x="34.4713%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="34.1784%" y="117" width="0.3062%" height="15" fill="rgb(238,194,6)" fg:x="15181" fg:w="136"/><text x="34.4713%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.48%)</title><rect x="34.1784%" y="133" width="0.4750%" height="15" fill="rgb(238,164,29)" fg:x="15181" fg:w="211"/><text x="34.4713%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="34.6534%" y="117" width="0.1216%" height="15" fill="rgb(224,25,9)" fg:x="15392" fg:w="54"/><text x="34.9464%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="34.8943%" y="117" width="0.1216%" height="15" fill="rgb(244,153,23)" fg:x="15499" fg:w="54"/><text x="35.1873%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.1352%" y="117" width="0.1216%" height="15" fill="rgb(212,203,14)" fg:x="15606" fg:w="54"/><text x="35.4282%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.3761%" y="117" width="0.1216%" height="15" fill="rgb(220,164,20)" fg:x="15713" fg:w="54"/><text x="35.6691%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.6170%" y="117" width="0.1216%" height="15" fill="rgb(222,203,48)" fg:x="15820" fg:w="54"/><text x="35.9100%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="35.8579%" y="117" width="0.1216%" height="15" fill="rgb(215,159,22)" fg:x="15927" fg:w="54"/><text x="36.1509%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="36.0988%" y="117" width="0.1216%" height="15" fill="rgb(216,183,47)" fg:x="16034" fg:w="54"/><text x="36.3918%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (749 instructions, 1.69%)</title><rect x="34.6534%" y="133" width="1.6863%" height="15" fill="rgb(229,195,25)" fg:x="15392" fg:w="749"/><text x="34.9464%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 instructions, 0.05%)</title><rect x="36.3397%" y="133" width="0.0540%" height="15" fill="rgb(224,132,51)" fg:x="16141" fg:w="24"/><text x="36.6327%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.15%)</title><rect x="36.3937%" y="133" width="0.1463%" height="15" fill="rgb(240,63,7)" fg:x="16165" fg:w="65"/><text x="36.6867%" y="143.50"></text></g><g><title>__rust_realloc (48 instructions, 0.11%)</title><rect x="36.5401%" y="101" width="0.1081%" height="15" fill="rgb(249,182,41)" fg:x="16230" fg:w="48"/><text x="36.8330%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 instructions, 0.19%)</title><rect x="36.5401%" y="117" width="0.1869%" height="15" fill="rgb(243,47,26)" fg:x="16230" fg:w="83"/><text x="36.8330%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (158 instructions, 0.36%)</title><rect x="36.5401%" y="133" width="0.3557%" height="15" fill="rgb(233,48,2)" fg:x="16230" fg:w="158"/><text x="36.8330%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.46%)</title><rect x="36.8958%" y="133" width="0.4638%" height="15" fill="rgb(244,165,34)" fg:x="16388" fg:w="206"/><text x="37.1888%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.36%)</title><rect x="37.3596%" y="133" width="0.3602%" height="15" fill="rgb(207,89,7)" fg:x="16594" fg:w="160"/><text x="37.6525%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (48 instructions, 0.11%)</title><rect x="37.7198%" y="133" width="0.1081%" height="15" fill="rgb(244,117,36)" fg:x="16754" fg:w="48"/><text x="38.0128%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.8279%" y="133" width="0.1824%" height="15" fill="rgb(226,144,34)" fg:x="16802" fg:w="81"/><text x="38.1208%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="38.0102%" y="133" width="0.1238%" height="15" fill="rgb(213,23,19)" fg:x="16883" fg:w="55"/><text x="38.3032%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,354 instructions, 12.05%)</title><rect x="28.3382%" y="149" width="12.0539%" height="15" fill="rgb(217,75,12)" fg:x="12587" fg:w="5354"/><text x="28.6312%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.3922%" y="149" width="0.0248%" height="15" fill="rgb(224,159,17)" fg:x="17941" fg:w="11"/><text x="40.6852%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4170%" y="149" width="0.0248%" height="15" fill="rgb(217,118,1)" fg:x="17952" fg:w="11"/><text x="40.7099%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4417%" y="149" width="0.0248%" height="15" fill="rgb(232,180,48)" fg:x="17963" fg:w="11"/><text x="40.7347%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (5,971 instructions, 13.44%)</title><rect x="27.5615%" y="165" width="13.4431%" height="15" fill="rgb(230,27,33)" fg:x="12242" fg:w="5971"/><text x="27.8545%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="41.0046%" y="149" width="0.0270%" height="15" fill="rgb(205,31,21)" fg:x="18213" fg:w="12"/><text x="41.2975%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.0316%" y="133" width="0.1193%" height="15" fill="rgb(253,59,4)" fg:x="18225" fg:w="53"/><text x="41.3246%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="41.1509%" y="133" width="0.1981%" height="15" fill="rgb(224,201,9)" fg:x="18278" fg:w="88"/><text x="41.4439%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="41.3490%" y="133" width="0.3647%" height="15" fill="rgb(229,206,30)" fg:x="18366" fg:w="162"/><text x="41.6420%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="41.0316%" y="149" width="1.2158%" height="15" fill="rgb(212,67,47)" fg:x="18225" fg:w="540"/><text x="41.3246%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.50%)</title><rect x="41.0046%" y="165" width="1.5017%" height="15" fill="rgb(211,96,50)" fg:x="18213" fg:w="667"/><text x="41.2975%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.5062%" y="165" width="0.1711%" height="15" fill="rgb(252,114,18)" fg:x="18880" fg:w="76"/><text x="42.7992%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="42.6774%" y="149" width="0.0270%" height="15" fill="rgb(223,58,37)" fg:x="18956" fg:w="12"/><text x="42.9703%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="42.7044%" y="133" width="0.1193%" height="15" fill="rgb(237,70,4)" fg:x="18968" fg:w="53"/><text x="42.9973%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="42.8237%" y="133" width="0.1981%" height="15" fill="rgb(244,85,46)" fg:x="19021" fg:w="88"/><text x="43.1167%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="43.0218%" y="133" width="0.3647%" height="15" fill="rgb(223,39,52)" fg:x="19109" fg:w="162"/><text x="43.3148%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="42.7044%" y="149" width="1.2158%" height="15" fill="rgb(218,200,14)" fg:x="18968" fg:w="540"/><text x="42.9973%" y="159.50"></text></g><g><title>candid::types::internal::env_add (760 instructions, 1.71%)</title><rect x="42.6774%" y="165" width="1.7111%" height="15" fill="rgb(208,171,16)" fg:x="18956" fg:w="760"/><text x="42.9703%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.3884%" y="165" width="0.1711%" height="15" fill="rgb(234,200,18)" fg:x="19716" fg:w="76"/><text x="44.6814%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="44.5595%" y="149" width="0.0270%" height="15" fill="rgb(228,45,11)" fg:x="19792" fg:w="12"/><text x="44.8525%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="44.5865%" y="133" width="0.1193%" height="15" fill="rgb(237,182,11)" fg:x="19804" fg:w="53"/><text x="44.8795%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="44.7059%" y="133" width="0.1981%" height="15" fill="rgb(241,175,49)" fg:x="19857" fg:w="88"/><text x="44.9988%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="44.9040%" y="133" width="0.3647%" height="15" fill="rgb(247,38,35)" fg:x="19945" fg:w="162"/><text x="45.1969%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="44.5865%" y="149" width="1.2158%" height="15" fill="rgb(228,39,49)" fg:x="19804" fg:w="540"/><text x="44.8795%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.8023%" y="149" width="0.1711%" height="15" fill="rgb(226,101,26)" fg:x="20344" fg:w="76"/><text x="46.0953%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="45.9734%" y="149" width="0.1891%" height="15" fill="rgb(206,141,19)" fg:x="20420" fg:w="84"/><text x="46.2664%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.1625%" y="133" width="0.1193%" height="15" fill="rgb(211,200,13)" fg:x="20504" fg:w="53"/><text x="46.4555%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="46.2818%" y="133" width="0.8195%" height="15" fill="rgb(241,121,6)" fg:x="20557" fg:w="364"/><text x="46.5748%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.1013%" y="133" width="0.1621%" height="15" fill="rgb(234,221,29)" fg:x="20921" fg:w="72"/><text x="47.3943%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.7970%" y="133" width="0.1193%" height="15" fill="rgb(229,136,5)" fg:x="21230" fg:w="53"/><text x="48.0900%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="47.9163%" y="133" width="0.8645%" height="15" fill="rgb(238,36,11)" fg:x="21283" fg:w="384"/><text x="48.2093%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="48.7809%" y="133" width="0.3647%" height="15" fill="rgb(251,55,41)" fg:x="21667" fg:w="162"/><text x="49.0738%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="49.6792%" y="133" width="0.1193%" height="15" fill="rgb(242,34,40)" fg:x="22066" fg:w="53"/><text x="49.9721%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="49.7985%" y="133" width="0.1981%" height="15" fill="rgb(215,42,17)" fg:x="22119" fg:w="88"/><text x="50.0915%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="49.9966%" y="133" width="0.3647%" height="15" fill="rgb(207,44,46)" fg:x="22207" fg:w="162"/><text x="50.2896%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,102 instructions, 4.73%)</title><rect x="46.1625%" y="149" width="4.7324%" height="15" fill="rgb(211,206,28)" fg:x="20504" fg:w="2102"/><text x="46.4555%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.14%)</title><rect x="50.8949%" y="149" width="0.1396%" height="15" fill="rgb(237,167,16)" fg:x="22606" fg:w="62"/><text x="51.1879%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="51.0345%" y="149" width="0.1531%" height="15" fill="rgb(233,66,6)" fg:x="22668" fg:w="68"/><text x="51.3275%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="51.1876%" y="133" width="0.1824%" height="15" fill="rgb(246,123,29)" fg:x="22736" fg:w="81"/><text x="51.4806%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="51.1876%" y="149" width="0.2432%" height="15" fill="rgb(209,62,40)" fg:x="22736" fg:w="108"/><text x="51.4806%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,676 instructions, 8.28%)</title><rect x="44.5595%" y="165" width="8.2761%" height="15" fill="rgb(218,4,25)" fg:x="19792" fg:w="3676"/><text x="44.8525%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="52.8356%" y="117" width="0.1193%" height="15" fill="rgb(253,91,49)" fg:x="23468" fg:w="53"/><text x="53.1286%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="52.8356%" y="133" width="0.1779%" height="15" fill="rgb(228,155,29)" fg:x="23468" fg:w="79"/><text x="53.1286%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.4930%" y="117" width="0.1193%" height="15" fill="rgb(243,57,37)" fg:x="23760" fg:w="53"/><text x="53.7860%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.4930%" y="133" width="0.1779%" height="15" fill="rgb(244,167,17)" fg:x="23760" fg:w="79"/><text x="53.7860%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.31%)</title><rect x="52.8356%" y="149" width="1.3148%" height="15" fill="rgb(207,181,38)" fg:x="23468" fg:w="584"/><text x="53.1286%" y="159.50"></text></g><g><title>candid::types::internal::env_id (891 instructions, 2.01%)</title><rect x="52.8356%" y="165" width="2.0060%" height="15" fill="rgb(211,8,23)" fg:x="23468" fg:w="891"/><text x="53.1286%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (45 instructions, 0.10%)</title><rect x="54.8416%" y="165" width="0.1013%" height="15" fill="rgb(235,11,44)" fg:x="24359" fg:w="45"/><text x="55.1346%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="54.9677%" y="149" width="0.3782%" height="15" fill="rgb(248,18,52)" fg:x="24415" fg:w="168"/><text x="55.2607%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.46%)</title><rect x="54.9429%" y="165" width="0.4638%" height="15" fill="rgb(208,4,7)" fg:x="24404" fg:w="206"/><text x="55.2359%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="55.4067%" y="149" width="0.0630%" height="15" fill="rgb(240,17,39)" fg:x="24610" fg:w="28"/><text x="55.6997%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (15 instructions, 0.03%)</title><rect x="55.4698%" y="149" width="0.0338%" height="15" fill="rgb(207,170,3)" fg:x="24638" fg:w="15"/><text x="55.7627%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (15 instructions, 0.03%)</title><rect x="55.5035%" y="149" width="0.0338%" height="15" fill="rgb(236,100,52)" fg:x="24653" fg:w="15"/><text x="55.7965%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (135 instructions, 0.30%)</title><rect x="55.4067%" y="165" width="0.3039%" height="15" fill="rgb(246,78,51)" fg:x="24610" fg:w="135"/><text x="55.6997%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7107%" y="165" width="0.0248%" height="15" fill="rgb(211,17,15)" fg:x="24745" fg:w="11"/><text x="56.0036%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7354%" y="165" width="0.0248%" height="15" fill="rgb(209,59,46)" fg:x="24756" fg:w="11"/><text x="56.0284%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.7602%" y="165" width="0.0248%" height="15" fill="rgb(210,92,25)" fg:x="24767" fg:w="11"/><text x="56.0532%" y="175.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="55.7849%" y="165" width="0.9231%" height="15" fill="rgb(238,174,52)" fg:x="24778" fg:w="410"/><text x="56.0779%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (15 instructions, 0.03%)</title><rect x="56.7080%" y="133" width="0.0338%" height="15" fill="rgb(230,73,7)" fg:x="25188" fg:w="15"/><text x="57.0010%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="56.7418%" y="133" width="0.2769%" height="15" fill="rgb(243,124,40)" fg:x="25203" fg:w="123"/><text x="57.0348%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.17%)</title><rect x="57.0187%" y="101" width="0.1689%" height="15" fill="rgb(244,170,11)" fg:x="25326" fg:w="75"/><text x="57.3117%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.50%)</title><rect x="57.0187%" y="117" width="0.4953%" height="15" fill="rgb(207,114,54)" fg:x="25326" fg:w="220"/><text x="57.3117%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (247 instructions, 0.56%)</title><rect x="57.0187%" y="133" width="0.5561%" height="15" fill="rgb(205,42,20)" fg:x="25326" fg:w="247"/><text x="57.3117%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="57.5748%" y="133" width="0.0248%" height="15" fill="rgb(230,30,28)" fg:x="25573" fg:w="11"/><text x="57.8678%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (436 instructions, 0.98%)</title><rect x="56.7080%" y="149" width="0.9816%" height="15" fill="rgb(205,73,54)" fg:x="25188" fg:w="436"/><text x="57.0010%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (473 instructions, 1.06%)</title><rect x="56.7080%" y="165" width="1.0649%" height="15" fill="rgb(254,227,23)" fg:x="25188" fg:w="473"/><text x="57.0010%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="57.7729%" y="149" width="0.0473%" height="15" fill="rgb(228,202,34)" fg:x="25661" fg:w="21"/><text x="58.0659%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.21%)</title><rect x="57.8202%" y="149" width="0.2139%" height="15" fill="rgb(222,225,37)" fg:x="25682" fg:w="95"/><text x="58.1132%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.44%)</title><rect x="57.7729%" y="165" width="0.4435%" height="15" fill="rgb(221,14,54)" fg:x="25661" fg:w="197"/><text x="58.0659%" y="175.50"></text></g><g><title>memset (218 instructions, 0.49%)</title><rect x="58.2164%" y="165" width="0.4908%" height="15" fill="rgb(254,102,2)" fg:x="25858" fg:w="218"/><text x="58.5094%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.37%)</title><rect x="58.7073%" y="165" width="0.3670%" height="15" fill="rgb(232,104,17)" fg:x="26076" fg:w="163"/><text x="59.0002%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.06%)</title><rect x="59.0742%" y="165" width="1.0582%" height="15" fill="rgb(250,220,14)" fg:x="26239" fg:w="470"/><text x="59.3672%" y="175.50"></text></g><g><title>memset (126 instructions, 0.28%)</title><rect x="60.1324%" y="149" width="0.2837%" height="15" fill="rgb(241,158,9)" fg:x="26709" fg:w="126"/><text x="60.4254%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.23%)</title><rect x="60.4161%" y="149" width="11.2277%" height="15" fill="rgb(246,9,43)" fg:x="26835" fg:w="4987"/><text x="60.7090%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.16%)</title><rect x="60.1324%" y="165" width="12.1598%" height="15" fill="rgb(206,73,33)" fg:x="26709" fg:w="5401"/><text x="60.4254%" y="175.50">&lt;sha2::core_api..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="72.2921%" y="165" width="0.1711%" height="15" fill="rgb(222,79,8)" fg:x="32110" fg:w="76"/><text x="72.5851%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="72.4632%" y="149" width="0.0270%" height="15" fill="rgb(234,8,54)" fg:x="32186" fg:w="12"/><text x="72.7562%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.4903%" y="117" width="0.2837%" height="15" fill="rgb(209,134,38)" fg:x="32198" fg:w="126"/><text x="72.7832%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.34%)</title><rect x="72.4903%" y="133" width="0.3445%" height="15" fill="rgb(230,127,29)" fg:x="32198" fg:w="153"/><text x="72.7832%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.8347%" y="133" width="0.2837%" height="15" fill="rgb(242,44,41)" fg:x="32351" fg:w="126"/><text x="73.1277%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="73.1904%" y="117" width="0.1216%" height="15" fill="rgb(222,56,43)" fg:x="32509" fg:w="54"/><text x="73.4834%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="73.3120%" y="117" width="0.1418%" height="15" fill="rgb(238,39,47)" fg:x="32563" fg:w="63"/><text x="73.6050%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.55%)</title><rect x="73.1904%" y="133" width="0.5471%" height="15" fill="rgb(226,79,43)" fg:x="32509" fg:w="243"/><text x="73.4834%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (581 instructions, 1.31%)</title><rect x="72.4903%" y="149" width="1.3081%" height="15" fill="rgb(242,105,53)" fg:x="32198" fg:w="581"/><text x="72.7832%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="73.7983%" y="149" width="0.0248%" height="15" fill="rgb(251,132,46)" fg:x="32779" fg:w="11"/><text x="74.0913%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="73.8231%" y="149" width="0.1891%" height="15" fill="rgb(231,77,14)" fg:x="32790" fg:w="84"/><text x="74.1161%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="74.0122%" y="117" width="0.0270%" height="15" fill="rgb(240,135,9)" fg:x="32874" fg:w="12"/><text x="74.3052%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="74.0122%" y="133" width="0.1126%" height="15" fill="rgb(248,109,14)" fg:x="32874" fg:w="50"/><text x="74.3052%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="74.1248%" y="133" width="0.1711%" height="15" fill="rgb(227,146,52)" fg:x="32924" fg:w="76"/><text x="74.4177%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="74.2959%" y="117" width="0.0270%" height="15" fill="rgb(232,54,3)" fg:x="33000" fg:w="12"/><text x="74.5888%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="74.3229%" y="101" width="0.1193%" height="15" fill="rgb(229,201,43)" fg:x="33012" fg:w="53"/><text x="74.6159%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="74.4422%" y="101" width="0.8195%" height="15" fill="rgb(252,161,33)" fg:x="33065" fg:w="364"/><text x="74.7352%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="75.2617%" y="101" width="0.1621%" height="15" fill="rgb(226,146,40)" fg:x="33429" fg:w="72"/><text x="75.5547%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="74.3229%" y="117" width="1.6345%" height="15" fill="rgb(219,47,25)" fg:x="33012" fg:w="726"/><text x="74.6159%" y="127.50"></text></g><g><title>candid::types::internal::env_add (946 instructions, 2.13%)</title><rect x="74.2959%" y="133" width="2.1298%" height="15" fill="rgb(250,135,13)" fg:x="33000" fg:w="946"/><text x="74.5888%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.4257%" y="133" width="0.1711%" height="15" fill="rgb(219,229,18)" fg:x="33946" fg:w="76"/><text x="76.7187%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.5968%" y="133" width="0.1711%" height="15" fill="rgb(217,152,27)" fg:x="34022" fg:w="76"/><text x="76.8898%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.7679%" y="117" width="0.0270%" height="15" fill="rgb(225,71,47)" fg:x="34098" fg:w="12"/><text x="77.0609%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.7949%" y="101" width="0.1193%" height="15" fill="rgb(220,139,14)" fg:x="34110" fg:w="53"/><text x="77.0879%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="76.9142%" y="101" width="0.8195%" height="15" fill="rgb(247,54,32)" fg:x="34163" fg:w="364"/><text x="77.2072%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="77.7338%" y="101" width="0.1621%" height="15" fill="rgb(252,131,39)" fg:x="34527" fg:w="72"/><text x="78.0267%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="76.7949%" y="117" width="1.6345%" height="15" fill="rgb(210,108,39)" fg:x="34110" fg:w="726"/><text x="77.0879%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.38%)</title><rect x="78.4294%" y="117" width="1.3824%" height="15" fill="rgb(205,23,29)" fg:x="34836" fg:w="614"/><text x="78.7224%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="79.8118%" y="101" width="0.1824%" height="15" fill="rgb(246,139,46)" fg:x="35450" fg:w="81"/><text x="80.1048%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="79.8118%" y="117" width="0.2432%" height="15" fill="rgb(250,81,26)" fg:x="35450" fg:w="108"/><text x="80.1048%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,627 instructions, 3.66%)</title><rect x="76.7679%" y="133" width="3.6630%" height="15" fill="rgb(214,104,7)" fg:x="34098" fg:w="1627"/><text x="77.0609%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.4309%" y="85" width="0.1193%" height="15" fill="rgb(233,189,8)" fg:x="35725" fg:w="53"/><text x="80.7239%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="80.5502%" y="85" width="0.3467%" height="15" fill="rgb(228,141,17)" fg:x="35778" fg:w="154"/><text x="80.8432%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="80.4309%" y="101" width="0.5741%" height="15" fill="rgb(247,157,1)" fg:x="35725" fg:w="255"/><text x="80.7239%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="80.4309%" y="117" width="1.0537%" height="15" fill="rgb(249,225,5)" fg:x="35725" fg:w="468"/><text x="80.7239%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.847 (42 instructions, 0.09%)</title><rect x="81.4846%" y="117" width="0.0946%" height="15" fill="rgb(242,55,13)" fg:x="36193" fg:w="42"/><text x="81.7775%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.5791%" y="117" width="0.0248%" height="15" fill="rgb(230,49,50)" fg:x="36235" fg:w="11"/><text x="81.8721%" y="127.50"></text></g><g><title>candid::types::internal::env_id (701 instructions, 1.58%)</title><rect x="80.4309%" y="133" width="1.5782%" height="15" fill="rgb(241,111,38)" fg:x="35725" fg:w="701"/><text x="80.7239%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,666 instructions, 8.25%)</title><rect x="74.0122%" y="149" width="8.2536%" height="15" fill="rgb(252,155,4)" fg:x="32874" fg:w="3666"/><text x="74.3052%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.2658%" y="117" width="0.1711%" height="15" fill="rgb(212,69,32)" fg:x="36540" fg:w="76"/><text x="82.5588%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="82.2658%" y="133" width="0.2477%" height="15" fill="rgb(243,107,47)" fg:x="36540" fg:w="110"/><text x="82.5588%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="82.2658%" y="149" width="0.4053%" height="15" fill="rgb(247,130,12)" fg:x="36540" fg:w="180"/><text x="82.5588%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="82.6710%" y="133" width="0.0540%" height="15" fill="rgb(233,74,16)" fg:x="36720" fg:w="24"/><text x="82.9640%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.7251%" y="101" width="0.1756%" height="15" fill="rgb(208,58,18)" fg:x="36744" fg:w="78"/><text x="83.0181%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.34%)</title><rect x="82.7251%" y="117" width="0.3445%" height="15" fill="rgb(242,225,1)" fg:x="36744" fg:w="153"/><text x="83.0181%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="83.0695%" y="117" width="0.1711%" height="15" fill="rgb(249,39,40)" fg:x="36897" fg:w="76"/><text x="83.3625%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.69%)</title><rect x="82.7251%" y="133" width="0.6934%" height="15" fill="rgb(207,72,44)" fg:x="36744" fg:w="308"/><text x="83.0181%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4185%" y="85" width="0.1193%" height="15" fill="rgb(215,193,12)" fg:x="37052" fg:w="53"/><text x="83.7115%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="83.5378%" y="85" width="0.3467%" height="15" fill="rgb(248,41,39)" fg:x="37105" fg:w="154"/><text x="83.8308%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="83.4185%" y="101" width="0.5741%" height="15" fill="rgb(253,85,4)" fg:x="37052" fg:w="255"/><text x="83.7115%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="83.4185%" y="117" width="1.0537%" height="15" fill="rgb(243,70,31)" fg:x="37052" fg:w="468"/><text x="83.7115%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="84.4722%" y="117" width="0.1711%" height="15" fill="rgb(253,195,26)" fg:x="37520" fg:w="76"/><text x="84.7651%" y="127.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="84.6433%" y="117" width="0.3062%" height="15" fill="rgb(243,42,11)" fg:x="37596" fg:w="136"/><text x="84.9362%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (983 instructions, 2.21%)</title><rect x="83.4185%" y="133" width="2.2131%" height="15" fill="rgb(239,66,17)" fg:x="37052" fg:w="983"/><text x="83.7115%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.6316%" y="101" width="0.1711%" height="15" fill="rgb(217,132,21)" fg:x="38035" fg:w="76"/><text x="85.9246%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="85.6316%" y="117" width="0.2477%" height="15" fill="rgb(252,202,21)" fg:x="38035" fg:w="110"/><text x="85.9246%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.41%)</title><rect x="85.6316%" y="133" width="0.4053%" height="15" fill="rgb(233,98,36)" fg:x="38035" fg:w="180"/><text x="85.9246%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.0369%" y="85" width="0.1193%" height="15" fill="rgb(216,153,54)" fg:x="38215" fg:w="53"/><text x="86.3298%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="86.0369%" y="101" width="0.1779%" height="15" fill="rgb(250,99,7)" fg:x="38215" fg:w="79"/><text x="86.3298%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="86.0369%" y="117" width="0.6574%" height="15" fill="rgb(207,56,50)" fg:x="38215" fg:w="292"/><text x="86.3298%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.6943%" y="117" width="0.0405%" height="15" fill="rgb(244,61,34)" fg:x="38507" fg:w="18"/><text x="86.9873%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.7348%" y="117" width="0.0248%" height="15" fill="rgb(241,50,38)" fg:x="38525" fg:w="11"/><text x="87.0278%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (434 instructions, 0.98%)</title><rect x="86.0369%" y="133" width="0.9771%" height="15" fill="rgb(212,166,30)" fg:x="38215" fg:w="434"/><text x="86.3298%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="87.0140%" y="85" width="0.1711%" height="15" fill="rgb(249,127,32)" fg:x="38649" fg:w="76"/><text x="87.3069%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="87.0140%" y="101" width="0.2477%" height="15" fill="rgb(209,103,0)" fg:x="38649" fg:w="110"/><text x="87.3069%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="87.0140%" y="117" width="0.3985%" height="15" fill="rgb(238,209,51)" fg:x="38649" fg:w="177"/><text x="87.3069%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.52%)</title><rect x="87.0140%" y="133" width="0.5156%" height="15" fill="rgb(237,56,23)" fg:x="38649" fg:w="229"/><text x="87.3069%" y="143.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.11%)</title><rect x="87.5295%" y="117" width="0.1058%" height="15" fill="rgb(215,153,46)" fg:x="38878" fg:w="47"/><text x="87.8225%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::encode (95 instructions, 0.21%)</title><rect x="87.5295%" y="133" width="0.2139%" height="15" fill="rgb(224,49,31)" fg:x="38878" fg:w="95"/><text x="87.8225%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.7434%" y="101" width="0.1824%" height="15" fill="rgb(250,18,42)" fg:x="38973" fg:w="81"/><text x="88.0364%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="87.7434%" y="117" width="0.2432%" height="15" fill="rgb(215,176,39)" fg:x="38973" fg:w="108"/><text x="88.0364%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="87.9866%" y="117" width="0.1756%" height="15" fill="rgb(223,77,29)" fg:x="39081" fg:w="78"/><text x="88.2796%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.49%)</title><rect x="87.7434%" y="133" width="0.4908%" height="15" fill="rgb(234,94,52)" fg:x="38973" fg:w="218"/><text x="88.0364%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.2342%" y="133" width="0.0248%" height="15" fill="rgb(220,154,50)" fg:x="39191" fg:w="11"/><text x="88.5272%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,684 instructions, 6.04%)</title><rect x="82.6710%" y="149" width="6.0427%" height="15" fill="rgb(212,11,10)" fg:x="36720" fg:w="2684"/><text x="82.9640%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.7138%" y="149" width="0.0248%" height="15" fill="rgb(205,166,19)" fg:x="39404" fg:w="11"/><text x="89.0067%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="88.7385%" y="117" width="0.1711%" height="15" fill="rgb(244,198,16)" fg:x="39415" fg:w="76"/><text x="89.0315%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="88.7385%" y="133" width="0.2477%" height="15" fill="rgb(219,69,12)" fg:x="39415" fg:w="110"/><text x="89.0315%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="89.1370%" y="117" width="0.2274%" height="15" fill="rgb(245,30,7)" fg:x="39592" fg:w="101"/><text x="89.4300%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="89.1370%" y="133" width="0.3062%" height="15" fill="rgb(218,221,48)" fg:x="39592" fg:w="136"/><text x="89.4300%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.87%)</title><rect x="88.7385%" y="149" width="0.8735%" height="15" fill="rgb(216,66,15)" fg:x="39415" fg:w="388"/><text x="89.0315%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.66%)</title><rect x="89.6121%" y="149" width="0.6619%" height="15" fill="rgb(226,122,50)" fg:x="39803" fg:w="294"/><text x="89.9051%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="90.2740%" y="149" width="0.2702%" height="15" fill="rgb(239,156,16)" fg:x="40097" fg:w="120"/><text x="90.5670%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.5442%" y="117" width="0.1711%" height="15" fill="rgb(224,27,38)" fg:x="40217" fg:w="76"/><text x="90.8371%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="90.5442%" y="133" width="0.2477%" height="15" fill="rgb(224,39,27)" fg:x="40217" fg:w="110"/><text x="90.8371%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="90.5442%" y="149" width="0.3985%" height="15" fill="rgb(215,92,29)" fg:x="40217" fg:w="177"/><text x="90.8371%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.9427%" y="149" width="0.1711%" height="15" fill="rgb(207,159,16)" fg:x="40394" fg:w="76"/><text x="91.2356%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.1138%" y="149" width="0.1013%" height="15" fill="rgb(238,163,47)" fg:x="40470" fg:w="45"/><text x="91.4067%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.2151%" y="149" width="0.1013%" height="15" fill="rgb(219,91,49)" fg:x="40515" fg:w="45"/><text x="91.5080%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="91.3164%" y="149" width="0.1238%" height="15" fill="rgb(227,167,31)" fg:x="40560" fg:w="55"/><text x="91.6094%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.4402%" y="101" width="0.1193%" height="15" fill="rgb(234,80,54)" fg:x="40615" fg:w="53"/><text x="91.7332%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="91.5595%" y="101" width="0.3467%" height="15" fill="rgb(212,114,2)" fg:x="40668" fg:w="154"/><text x="91.8525%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="91.4402%" y="117" width="0.5741%" height="15" fill="rgb(234,50,24)" fg:x="40615" fg:w="255"/><text x="91.7332%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="91.4402%" y="133" width="1.0537%" height="15" fill="rgb(221,68,8)" fg:x="40615" fg:w="468"/><text x="91.7332%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="92.4939%" y="85" width="0.1711%" height="15" fill="rgb(254,180,31)" fg:x="41083" fg:w="76"/><text x="92.7868%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="92.4939%" y="101" width="0.2477%" height="15" fill="rgb(247,130,50)" fg:x="41083" fg:w="110"/><text x="92.7868%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.40%)</title><rect x="92.4939%" y="117" width="0.3985%" height="15" fill="rgb(211,109,4)" fg:x="41083" fg:w="177"/><text x="92.7868%" y="127.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.52%)</title><rect x="92.4939%" y="133" width="0.5156%" height="15" fill="rgb(238,50,21)" fg:x="41083" fg:w="229"/><text x="92.7868%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (834 instructions, 1.88%)</title><rect x="91.4402%" y="149" width="1.8777%" height="15" fill="rgb(225,57,45)" fg:x="40615" fg:w="834"/><text x="91.7332%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.3179%" y="149" width="0.0675%" height="15" fill="rgb(209,196,50)" fg:x="41449" fg:w="30"/><text x="93.6108%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="93.3854%" y="149" width="0.1238%" height="15" fill="rgb(242,140,13)" fg:x="41479" fg:w="55"/><text x="93.6784%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (33 instructions, 0.07%)</title><rect x="93.5092%" y="149" width="0.0743%" height="15" fill="rgb(217,111,7)" fg:x="41534" fg:w="33"/><text x="93.8022%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (61 instructions, 0.14%)</title><rect x="93.5835%" y="149" width="0.1373%" height="15" fill="rgb(253,193,51)" fg:x="41567" fg:w="61"/><text x="93.8765%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.7209%" y="149" width="0.1824%" height="15" fill="rgb(252,70,29)" fg:x="41628" fg:w="81"/><text x="94.0138%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.9032%" y="149" width="0.2769%" height="15" fill="rgb(232,127,12)" fg:x="41709" fg:w="123"/><text x="94.1962%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.1802%" y="149" width="0.0248%" height="15" fill="rgb(211,180,21)" fg:x="41832" fg:w="11"/><text x="94.4731%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="94.2049%" y="149" width="0.3782%" height="15" fill="rgb(229,72,13)" fg:x="41843" fg:w="168"/><text x="94.4979%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5832%" y="149" width="0.0113%" height="15" fill="rgb(240,211,49)" fg:x="42011" fg:w="5"/><text x="94.8761%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.5944%" y="149" width="0.0248%" height="15" fill="rgb(219,149,40)" fg:x="42016" fg:w="11"/><text x="94.8874%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.6192%" y="149" width="0.2702%" height="15" fill="rgb(210,127,46)" fg:x="42027" fg:w="120"/><text x="94.9121%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="94.8893%" y="149" width="0.1238%" height="15" fill="rgb(220,106,7)" fg:x="42147" fg:w="55"/><text x="95.1823%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.22%)</title><rect x="95.0132%" y="149" width="0.2184%" height="15" fill="rgb(249,31,22)" fg:x="42202" fg:w="97"/><text x="95.3061%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,969 instructions, 24.70%)</title><rect x="72.4632%" y="165" width="24.6955%" height="15" fill="rgb(253,1,49)" fg:x="32186" fg:w="10969"/><text x="72.7562%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (43,766 instructions, 98.53%)</title><rect x="0.3850%" y="181" width="98.5343%" height="15" fill="rgb(227,144,33)" fg:x="171" fg:w="43766"/><text x="0.6780%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9193%" y="181" width="0.0270%" height="15" fill="rgb(249,163,44)" fg:x="43937" fg:w="12"/><text x="99.2123%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="99.2300%" y="165" width="0.1238%" height="15" fill="rgb(234,15,39)" fg:x="44075" fg:w="55"/><text x="99.5230%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="99.3539%" y="165" width="0.1418%" height="15" fill="rgb(207,66,16)" fg:x="44130" fg:w="63"/><text x="99.6468%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (370 instructions, 0.83%)</title><rect x="98.9463%" y="181" width="0.8330%" height="15" fill="rgb(233,112,24)" fg:x="43949" fg:w="370"/><text x="99.2393%" y="191.50"></text></g><g><title>all (44,417 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(230,90,22)" fg:x="0" fg:w="44417"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (44,417 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(229,61,13)" fg:x="0" fg:w="44417"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>