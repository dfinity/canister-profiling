<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="41597"><g><title>ic_cdk::setup (19 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0457%" height="15" fill="rgb(238,6,4)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.0457%" y="181" width="0.1827%" height="15" fill="rgb(221,151,16)" fg:x="19" fg:w="76"/><text x="0.3386%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.2284%" y="181" width="0.1827%" height="15" fill="rgb(251,143,52)" fg:x="95" fg:w="76"/><text x="0.5214%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="0.4111%" y="165" width="0.1827%" height="15" fill="rgb(206,90,15)" fg:x="171" fg:w="76"/><text x="0.7041%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="0.5938%" y="149" width="0.1707%" height="15" fill="rgb(218,35,8)" fg:x="247" fg:w="71"/><text x="0.8868%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="0.7645%" y="149" width="0.9616%" height="15" fill="rgb(239,215,6)" fg:x="318" fg:w="400"/><text x="1.0574%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="1.7261%" y="149" width="0.2043%" height="15" fill="rgb(245,116,39)" fg:x="718" fg:w="85"/><text x="2.0191%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="1.9304%" y="149" width="0.1298%" height="15" fill="rgb(242,65,28)" fg:x="803" fg:w="54"/><text x="2.2234%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.0602%" y="149" width="0.1298%" height="15" fill="rgb(252,132,53)" fg:x="857" fg:w="54"/><text x="2.3532%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.1901%" y="149" width="0.1298%" height="15" fill="rgb(224,159,50)" fg:x="911" fg:w="54"/><text x="2.4830%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="2.3199%" y="149" width="0.1298%" height="15" fill="rgb(224,93,4)" fg:x="965" fg:w="54"/><text x="2.6128%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="2.4497%" y="149" width="0.1707%" height="15" fill="rgb(208,81,34)" fg:x="1019" fg:w="71"/><text x="2.7427%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="2.6204%" y="149" width="0.1563%" height="15" fill="rgb(233,92,54)" fg:x="1090" fg:w="65"/><text x="2.9134%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="2.7766%" y="149" width="0.9616%" height="15" fill="rgb(237,21,14)" fg:x="1155" fg:w="400"/><text x="3.0696%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.7383%" y="149" width="0.0385%" height="15" fill="rgb(249,128,51)" fg:x="1555" fg:w="16"/><text x="4.0312%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="3.7767%" y="133" width="0.1827%" height="15" fill="rgb(223,129,24)" fg:x="1571" fg:w="76"/><text x="4.0697%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.9594%" y="101" width="0.1442%" height="15" fill="rgb(231,168,25)" fg:x="1647" fg:w="60"/><text x="4.2524%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="3.9594%" y="117" width="0.2043%" height="15" fill="rgb(224,39,20)" fg:x="1647" fg:w="85"/><text x="4.2524%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="4.1638%" y="69" width="0.0216%" height="15" fill="rgb(225,152,53)" fg:x="1732" fg:w="9"/><text x="4.4567%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="4.1854%" y="53" width="0.0721%" height="15" fill="rgb(252,17,24)" fg:x="1741" fg:w="30"/><text x="4.4784%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="4.1854%" y="69" width="0.1322%" height="15" fill="rgb(250,114,30)" fg:x="1741" fg:w="55"/><text x="4.4784%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="4.1638%" y="85" width="0.2837%" height="15" fill="rgb(229,5,4)" fg:x="1732" fg:w="118"/><text x="4.4567%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="4.1638%" y="101" width="0.4111%" height="15" fill="rgb(225,176,49)" fg:x="1732" fg:w="171"/><text x="4.4567%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="4.1638%" y="117" width="0.4231%" height="15" fill="rgb(224,221,49)" fg:x="1732" fg:w="176"/><text x="4.4567%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="3.9594%" y="133" width="0.8943%" height="15" fill="rgb(253,169,27)" fg:x="1647" fg:w="372"/><text x="4.2524%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.43%)</title><rect x="3.7767%" y="149" width="1.4280%" height="15" fill="rgb(211,206,16)" fg:x="1571" fg:w="594"/><text x="4.0697%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="5.2047%" y="149" width="0.2043%" height="15" fill="rgb(244,87,35)" fg:x="2165" fg:w="85"/><text x="5.4977%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="5.4090%" y="149" width="0.1322%" height="15" fill="rgb(246,28,10)" fg:x="2250" fg:w="55"/><text x="5.7020%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="5.5413%" y="149" width="0.1587%" height="15" fill="rgb(229,12,44)" fg:x="2305" fg:w="66"/><text x="5.8342%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="5.6999%" y="149" width="0.1563%" height="15" fill="rgb(210,145,37)" fg:x="2371" fg:w="65"/><text x="5.9929%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="5.8562%" y="133" width="0.9616%" height="15" fill="rgb(227,112,52)" fg:x="2436" fg:w="400"/><text x="6.1492%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.8178%" y="133" width="0.0385%" height="15" fill="rgb(238,155,34)" fg:x="2836" fg:w="16"/><text x="7.1108%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="6.8563%" y="117" width="0.1827%" height="15" fill="rgb(239,226,36)" fg:x="2852" fg:w="76"/><text x="7.1492%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="7.0390%" y="85" width="0.1442%" height="15" fill="rgb(230,16,23)" fg:x="2928" fg:w="60"/><text x="7.3319%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="7.0390%" y="101" width="0.2043%" height="15" fill="rgb(236,171,36)" fg:x="2928" fg:w="85"/><text x="7.3319%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="7.2433%" y="53" width="0.0216%" height="15" fill="rgb(221,22,14)" fg:x="3013" fg:w="9"/><text x="7.5363%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="7.2649%" y="37" width="0.0721%" height="15" fill="rgb(242,43,11)" fg:x="3022" fg:w="30"/><text x="7.5579%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="7.2649%" y="53" width="0.1322%" height="15" fill="rgb(232,69,23)" fg:x="3022" fg:w="55"/><text x="7.5579%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="7.2433%" y="69" width="0.2837%" height="15" fill="rgb(216,180,54)" fg:x="3013" fg:w="118"/><text x="7.5363%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="7.2433%" y="85" width="0.4111%" height="15" fill="rgb(216,5,24)" fg:x="3013" fg:w="171"/><text x="7.5363%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="7.2433%" y="101" width="0.4231%" height="15" fill="rgb(225,89,9)" fg:x="3013" fg:w="176"/><text x="7.5363%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="7.0390%" y="117" width="0.8943%" height="15" fill="rgb(243,75,33)" fg:x="2928" fg:w="372"/><text x="7.3319%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.43%)</title><rect x="6.8563%" y="133" width="1.4280%" height="15" fill="rgb(247,141,45)" fg:x="2852" fg:w="594"/><text x="7.1492%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="8.2843%" y="133" width="0.2043%" height="15" fill="rgb(232,177,36)" fg:x="3446" fg:w="85"/><text x="8.5772%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="8.4886%" y="133" width="0.1322%" height="15" fill="rgb(219,125,36)" fg:x="3531" fg:w="55"/><text x="8.7816%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="8.6208%" y="117" width="0.1707%" height="15" fill="rgb(227,94,9)" fg:x="3586" fg:w="71"/><text x="8.9138%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.22%)</title><rect x="8.7915%" y="117" width="0.2188%" height="15" fill="rgb(240,34,52)" fg:x="3657" fg:w="91"/><text x="9.0845%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="9.0103%" y="117" width="0.1587%" height="15" fill="rgb(216,45,12)" fg:x="3748" fg:w="66"/><text x="9.3032%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (291 instructions, 0.70%)</title><rect x="8.6208%" y="133" width="0.6996%" height="15" fill="rgb(246,21,19)" fg:x="3586" fg:w="291"/><text x="8.9138%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="9.3204%" y="133" width="0.1827%" height="15" fill="rgb(213,98,42)" fg:x="3877" fg:w="76"/><text x="9.6134%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="9.5031%" y="117" width="0.1707%" height="15" fill="rgb(250,136,47)" fg:x="3953" fg:w="71"/><text x="9.7961%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.22%)</title><rect x="9.6738%" y="117" width="0.2188%" height="15" fill="rgb(251,124,27)" fg:x="4024" fg:w="91"/><text x="9.9667%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="9.8925%" y="117" width="0.1587%" height="15" fill="rgb(229,180,14)" fg:x="4115" fg:w="66"/><text x="10.1855%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (287 instructions, 0.69%)</title><rect x="9.5031%" y="133" width="0.6900%" height="15" fill="rgb(245,216,25)" fg:x="3953" fg:w="287"/><text x="9.7961%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,050 instructions, 4.93%)</title><rect x="5.8562%" y="149" width="4.9282%" height="15" fill="rgb(251,43,5)" fg:x="2436" fg:w="2050"/><text x="6.1492%" y="159.50">binre..</text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="10.7844%" y="149" width="0.1587%" height="15" fill="rgb(250,128,24)" fg:x="4486" fg:w="66"/><text x="11.0774%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.9431%" y="149" width="0.0313%" height="15" fill="rgb(217,117,27)" fg:x="4552" fg:w="13"/><text x="11.2361%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.9743%" y="149" width="0.0313%" height="15" fill="rgb(245,147,4)" fg:x="4565" fg:w="13"/><text x="11.2673%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="11.0056%" y="149" width="0.0168%" height="15" fill="rgb(242,201,35)" fg:x="4578" fg:w="7"/><text x="11.2986%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.04%)</title><rect x="11.0224%" y="149" width="0.0361%" height="15" fill="rgb(218,181,1)" fg:x="4585" fg:w="15"/><text x="11.3154%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.0585%" y="133" width="0.1827%" height="15" fill="rgb(222,6,29)" fg:x="4600" fg:w="76"/><text x="11.3515%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (158 instructions, 0.38%)</title><rect x="11.0585%" y="149" width="0.3798%" height="15" fill="rgb(208,186,3)" fg:x="4600" fg:w="158"/><text x="11.3515%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.4383%" y="117" width="0.1827%" height="15" fill="rgb(216,36,26)" fg:x="4758" fg:w="76"/><text x="11.7313%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="11.4383%" y="133" width="0.2668%" height="15" fill="rgb(248,201,23)" fg:x="4758" fg:w="111"/><text x="11.7313%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.43%)</title><rect x="11.4383%" y="149" width="0.4303%" height="15" fill="rgb(251,170,31)" fg:x="4758" fg:w="179"/><text x="11.7313%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="11.8686%" y="133" width="0.1827%" height="15" fill="rgb(207,110,25)" fg:x="4937" fg:w="76"/><text x="12.1616%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.38%)</title><rect x="11.8686%" y="149" width="0.3822%" height="15" fill="rgb(250,54,15)" fg:x="4937" fg:w="159"/><text x="12.1616%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="12.2509%" y="149" width="0.1827%" height="15" fill="rgb(227,68,33)" fg:x="5096" fg:w="76"/><text x="12.5439%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.4336%" y="149" width="0.1947%" height="15" fill="rgb(238,34,41)" fg:x="5172" fg:w="81"/><text x="12.7266%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="12.6283%" y="149" width="0.1827%" height="15" fill="rgb(220,11,15)" fg:x="5253" fg:w="76"/><text x="12.9213%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="12.8110%" y="149" width="0.1827%" height="15" fill="rgb(246,111,35)" fg:x="5329" fg:w="76"/><text x="13.1040%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="12.9985%" y="149" width="0.1947%" height="15" fill="rgb(209,88,53)" fg:x="5407" fg:w="81"/><text x="13.2915%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="13.1933%" y="149" width="0.9159%" height="15" fill="rgb(231,185,47)" fg:x="5488" fg:w="381"/><text x="13.4862%" y="159.50"></text></g><g><title>memcpy (381 instructions, 0.92%)</title><rect x="14.1092%" y="149" width="0.9159%" height="15" fill="rgb(233,154,1)" fg:x="5869" fg:w="381"/><text x="14.4022%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,996 instructions, 16.82%)</title><rect x="0.5938%" y="165" width="16.8185%" height="15" fill="rgb(225,15,46)" fg:x="247" fg:w="6996"/><text x="0.8868%" y="175.50">candid::de::IDLDeseria..</text></g><g><title>memcpy (336 instructions, 0.81%)</title><rect x="17.4123%" y="165" width="0.8078%" height="15" fill="rgb(211,135,41)" fg:x="7243" fg:w="336"/><text x="17.7053%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="18.2201%" y="133" width="0.0120%" height="15" fill="rgb(208,54,0)" fg:x="7579" fg:w="5"/><text x="18.5130%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="18.2321%" y="117" width="0.1274%" height="15" fill="rgb(244,136,14)" fg:x="7584" fg:w="53"/><text x="18.5251%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.92%)</title><rect x="18.3595%" y="117" width="0.9207%" height="15" fill="rgb(241,56,14)" fg:x="7637" fg:w="383"/><text x="18.6525%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="19.2802%" y="117" width="0.3870%" height="15" fill="rgb(205,80,24)" fg:x="8020" fg:w="161"/><text x="19.5732%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 2.00%)</title><rect x="18.2321%" y="133" width="2.0050%" height="15" fill="rgb(220,57,4)" fg:x="7584" fg:w="834"/><text x="18.5251%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (952 instructions, 2.29%)</title><rect x="18.2201%" y="149" width="2.2886%" height="15" fill="rgb(226,193,50)" fg:x="7579" fg:w="952"/><text x="18.5130%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="20.5087%" y="149" width="0.1827%" height="15" fill="rgb(231,168,22)" fg:x="8531" fg:w="76"/><text x="20.8017%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="20.6914%" y="133" width="0.0120%" height="15" fill="rgb(254,215,14)" fg:x="8607" fg:w="5"/><text x="20.9844%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="20.7034%" y="117" width="0.1274%" height="15" fill="rgb(211,115,16)" fg:x="8612" fg:w="53"/><text x="20.9964%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.92%)</title><rect x="20.8308%" y="117" width="0.9207%" height="15" fill="rgb(236,210,16)" fg:x="8665" fg:w="383"/><text x="21.1238%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="21.7516%" y="117" width="0.3870%" height="15" fill="rgb(221,94,12)" fg:x="9048" fg:w="161"/><text x="22.0445%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 2.00%)</title><rect x="20.7034%" y="133" width="2.0050%" height="15" fill="rgb(235,218,49)" fg:x="8612" fg:w="834"/><text x="20.9964%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,049 instructions, 2.52%)</title><rect x="20.6914%" y="149" width="2.5218%" height="15" fill="rgb(217,114,14)" fg:x="8607" fg:w="1049"/><text x="20.9844%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="23.2132%" y="149" width="0.1827%" height="15" fill="rgb(216,145,22)" fg:x="9656" fg:w="76"/><text x="23.5062%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="23.3959%" y="133" width="0.0120%" height="15" fill="rgb(217,112,39)" fg:x="9732" fg:w="5"/><text x="23.6889%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="23.4079%" y="117" width="0.1274%" height="15" fill="rgb(225,85,32)" fg:x="9737" fg:w="53"/><text x="23.7009%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (383 instructions, 0.92%)</title><rect x="23.5354%" y="117" width="0.9207%" height="15" fill="rgb(245,209,47)" fg:x="9790" fg:w="383"/><text x="23.8283%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="24.4561%" y="117" width="0.3870%" height="15" fill="rgb(218,220,15)" fg:x="10173" fg:w="161"/><text x="24.7491%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (834 instructions, 2.00%)</title><rect x="23.4079%" y="133" width="2.0050%" height="15" fill="rgb(222,202,31)" fg:x="9737" fg:w="834"/><text x="23.7009%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.78%)</title><rect x="25.4129%" y="133" width="1.7790%" height="15" fill="rgb(243,203,4)" fg:x="10571" fg:w="740"/><text x="25.7059%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="27.1919%" y="117" width="0.1947%" height="15" fill="rgb(237,92,17)" fg:x="11311" fg:w="81"/><text x="27.4848%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="27.1919%" y="133" width="0.2596%" height="15" fill="rgb(231,119,7)" fg:x="11311" fg:w="108"/><text x="27.4848%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,855 instructions, 4.46%)</title><rect x="23.3959%" y="149" width="4.4595%" height="15" fill="rgb(237,82,41)" fg:x="9732" fg:w="1855"/><text x="23.6889%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="27.8554%" y="101" width="0.1274%" height="15" fill="rgb(226,81,48)" fg:x="11587" fg:w="53"/><text x="28.1483%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="27.8554%" y="117" width="0.1899%" height="15" fill="rgb(234,70,51)" fg:x="11587" fg:w="79"/><text x="28.1483%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.70%)</title><rect x="27.8554%" y="133" width="0.7020%" height="15" fill="rgb(251,86,4)" fg:x="11587" fg:w="292"/><text x="28.1483%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.174 (15 instructions, 0.04%)</title><rect x="28.5573%" y="133" width="0.0361%" height="15" fill="rgb(244,144,28)" fg:x="11879" fg:w="15"/><text x="28.8503%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="28.5934%" y="133" width="0.0264%" height="15" fill="rgb(232,161,39)" fg:x="11894" fg:w="11"/><text x="28.8864%" y="143.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.15%)</title><rect x="27.8554%" y="149" width="1.1491%" height="15" fill="rgb(247,34,51)" fg:x="11587" fg:w="478"/><text x="28.1483%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,593 instructions, 11.04%)</title><rect x="18.2201%" y="165" width="11.0417%" height="15" fill="rgb(225,132,2)" fg:x="7579" fg:w="4593"/><text x="18.5130%" y="175.50">candid::types..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="29.2617%" y="149" width="0.0793%" height="15" fill="rgb(209,159,44)" fg:x="12172" fg:w="33"/><text x="29.5547%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="29.3411%" y="133" width="0.2957%" height="15" fill="rgb(251,214,1)" fg:x="12205" fg:w="123"/><text x="29.6340%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="29.7017%" y="133" width="0.2957%" height="15" fill="rgb(247,84,47)" fg:x="12355" fg:w="123"/><text x="29.9946%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.72%)</title><rect x="29.3411%" y="149" width="0.7212%" height="15" fill="rgb(240,111,43)" fg:x="12205" fg:w="300"/><text x="29.6340%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="30.0623%" y="133" width="0.0673%" height="15" fill="rgb(215,214,35)" fg:x="12505" fg:w="28"/><text x="30.3552%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="30.1296%" y="133" width="0.0673%" height="15" fill="rgb(248,207,23)" fg:x="12533" fg:w="28"/><text x="30.4225%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="30.1969%" y="133" width="0.0361%" height="15" fill="rgb(214,186,4)" fg:x="12561" fg:w="15"/><text x="30.4899%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="30.2329%" y="133" width="0.0361%" height="15" fill="rgb(220,133,22)" fg:x="12576" fg:w="15"/><text x="30.5259%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="30.2690%" y="133" width="0.1899%" height="15" fill="rgb(239,134,19)" fg:x="12591" fg:w="79"/><text x="30.5620%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.17%)</title><rect x="30.4589%" y="133" width="0.1707%" height="15" fill="rgb(250,140,9)" fg:x="12670" fg:w="71"/><text x="30.7519%" y="143.50"></text></g><g><title>binread::binary_template::write_named (82 instructions, 0.20%)</title><rect x="30.6296%" y="117" width="0.1971%" height="15" fill="rgb(225,59,14)" fg:x="12741" fg:w="82"/><text x="30.9226%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (152 instructions, 0.37%)</title><rect x="30.6296%" y="133" width="0.3654%" height="15" fill="rgb(214,152,51)" fg:x="12741" fg:w="152"/><text x="30.9226%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.16%)</title><rect x="30.9950%" y="133" width="0.1563%" height="15" fill="rgb(251,227,43)" fg:x="12893" fg:w="65"/><text x="31.2880%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.96%)</title><rect x="31.1513%" y="133" width="0.9616%" height="15" fill="rgb(241,96,17)" fg:x="12958" fg:w="400"/><text x="31.4443%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="32.1129%" y="117" width="0.1827%" height="15" fill="rgb(234,198,43)" fg:x="13358" fg:w="76"/><text x="32.4059%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="32.2956%" y="85" width="0.1442%" height="15" fill="rgb(220,108,29)" fg:x="13434" fg:w="60"/><text x="32.5886%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.20%)</title><rect x="32.2956%" y="101" width="0.2043%" height="15" fill="rgb(226,163,33)" fg:x="13434" fg:w="85"/><text x="32.5886%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="32.4999%" y="53" width="0.0216%" height="15" fill="rgb(205,194,45)" fg:x="13519" fg:w="9"/><text x="32.7929%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="32.5216%" y="37" width="0.0721%" height="15" fill="rgb(206,143,44)" fg:x="13528" fg:w="30"/><text x="32.8145%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.13%)</title><rect x="32.5216%" y="53" width="0.1322%" height="15" fill="rgb(236,136,36)" fg:x="13528" fg:w="55"/><text x="32.8145%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.28%)</title><rect x="32.4999%" y="69" width="0.2837%" height="15" fill="rgb(249,172,42)" fg:x="13519" fg:w="118"/><text x="32.7929%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.41%)</title><rect x="32.4999%" y="85" width="0.4111%" height="15" fill="rgb(216,139,23)" fg:x="13519" fg:w="171"/><text x="32.7929%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.42%)</title><rect x="32.4999%" y="101" width="0.4231%" height="15" fill="rgb(207,166,20)" fg:x="13519" fg:w="176"/><text x="32.7929%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.89%)</title><rect x="32.2956%" y="117" width="0.8943%" height="15" fill="rgb(210,209,22)" fg:x="13434" fg:w="372"/><text x="32.5886%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (594 instructions, 1.43%)</title><rect x="32.1129%" y="133" width="1.4280%" height="15" fill="rgb(232,118,20)" fg:x="13358" fg:w="594"/><text x="32.4059%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.20%)</title><rect x="33.5409%" y="133" width="0.2043%" height="15" fill="rgb(238,113,42)" fg:x="13952" fg:w="85"/><text x="33.8338%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="33.7452%" y="133" width="0.1322%" height="15" fill="rgb(231,42,5)" fg:x="14037" fg:w="55"/><text x="34.0382%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="33.8774%" y="117" width="0.1298%" height="15" fill="rgb(243,166,24)" fg:x="14092" fg:w="54"/><text x="34.1704%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (111 instructions, 0.27%)</title><rect x="33.8774%" y="133" width="0.2668%" height="15" fill="rgb(237,226,12)" fg:x="14092" fg:w="111"/><text x="34.1704%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="34.1443%" y="133" width="0.1827%" height="15" fill="rgb(229,133,24)" fg:x="14203" fg:w="76"/><text x="34.4373%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.3270%" y="117" width="0.1298%" height="15" fill="rgb(238,33,43)" fg:x="14279" fg:w="54"/><text x="34.6200%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.5938%" y="117" width="0.1298%" height="15" fill="rgb(227,59,38)" fg:x="14390" fg:w="54"/><text x="34.8868%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="34.8607%" y="117" width="0.1298%" height="15" fill="rgb(230,97,0)" fg:x="14501" fg:w="54"/><text x="35.1537%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.1275%" y="117" width="0.1298%" height="15" fill="rgb(250,173,50)" fg:x="14612" fg:w="54"/><text x="35.4205%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.3944%" y="117" width="0.1298%" height="15" fill="rgb(240,15,50)" fg:x="14723" fg:w="54"/><text x="35.6873%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.6612%" y="117" width="0.1298%" height="15" fill="rgb(221,93,22)" fg:x="14834" fg:w="54"/><text x="35.9542%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="35.9281%" y="117" width="0.1298%" height="15" fill="rgb(245,180,53)" fg:x="14945" fg:w="54"/><text x="36.2210%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.1949%" y="117" width="0.1298%" height="15" fill="rgb(231,88,51)" fg:x="15056" fg:w="54"/><text x="36.4879%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (888 instructions, 2.13%)</title><rect x="34.3270%" y="133" width="2.1348%" height="15" fill="rgb(240,58,21)" fg:x="14279" fg:w="888"/><text x="34.6200%" y="143.50">&lt;..</text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="36.4618%" y="101" width="0.2500%" height="15" fill="rgb(237,21,10)" fg:x="15167" fg:w="104"/><text x="36.7547%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (138 instructions, 0.33%)</title><rect x="36.4618%" y="117" width="0.3318%" height="15" fill="rgb(218,43,11)" fg:x="15167" fg:w="138"/><text x="36.7547%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.51%)</title><rect x="36.4618%" y="133" width="0.5072%" height="15" fill="rgb(218,221,29)" fg:x="15167" fg:w="211"/><text x="36.7547%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="36.9690%" y="117" width="0.1298%" height="15" fill="rgb(214,118,42)" fg:x="15378" fg:w="54"/><text x="37.2620%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.2359%" y="117" width="0.1298%" height="15" fill="rgb(251,200,26)" fg:x="15489" fg:w="54"/><text x="37.5288%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.5027%" y="117" width="0.1298%" height="15" fill="rgb(237,101,39)" fg:x="15600" fg:w="54"/><text x="37.7957%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="37.7696%" y="117" width="0.1298%" height="15" fill="rgb(251,117,11)" fg:x="15711" fg:w="54"/><text x="38.0625%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="38.0364%" y="117" width="0.1298%" height="15" fill="rgb(216,223,23)" fg:x="15822" fg:w="54"/><text x="38.3294%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="38.3032%" y="117" width="0.1298%" height="15" fill="rgb(251,54,12)" fg:x="15933" fg:w="54"/><text x="38.5962%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.13%)</title><rect x="38.5701%" y="117" width="0.1298%" height="15" fill="rgb(254,176,54)" fg:x="16044" fg:w="54"/><text x="38.8631%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (777 instructions, 1.87%)</title><rect x="36.9690%" y="133" width="1.8679%" height="15" fill="rgb(210,32,8)" fg:x="15378" fg:w="777"/><text x="37.2620%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="38.8369%" y="133" width="0.0721%" height="15" fill="rgb(235,52,38)" fg:x="16155" fg:w="30"/><text x="39.1299%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.16%)</title><rect x="38.9091%" y="133" width="0.1587%" height="15" fill="rgb(231,4,44)" fg:x="16185" fg:w="66"/><text x="39.2020%" y="143.50"></text></g><g><title>__rust_realloc (47 instructions, 0.11%)</title><rect x="39.0677%" y="101" width="0.1130%" height="15" fill="rgb(249,2,32)" fg:x="16251" fg:w="47"/><text x="39.3607%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (81 instructions, 0.19%)</title><rect x="39.0677%" y="117" width="0.1947%" height="15" fill="rgb(224,65,26)" fg:x="16251" fg:w="81"/><text x="39.3607%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (154 instructions, 0.37%)</title><rect x="39.0677%" y="133" width="0.3702%" height="15" fill="rgb(250,73,40)" fg:x="16251" fg:w="154"/><text x="39.3607%" y="143.50"></text></g><g><title>memcpy (203 instructions, 0.49%)</title><rect x="39.4379%" y="133" width="0.4880%" height="15" fill="rgb(253,177,16)" fg:x="16405" fg:w="203"/><text x="39.7309%" y="143.50"></text></g><g><title>memcpy (157 instructions, 0.38%)</title><rect x="39.9260%" y="133" width="0.3774%" height="15" fill="rgb(217,32,34)" fg:x="16608" fg:w="157"/><text x="40.2189%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="40.3034%" y="133" width="0.1947%" height="15" fill="rgb(212,7,10)" fg:x="16765" fg:w="81"/><text x="40.5964%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="40.4981%" y="133" width="0.1322%" height="15" fill="rgb(245,89,8)" fg:x="16846" fg:w="55"/><text x="40.7911%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,408 instructions, 13.00%)</title><rect x="30.0623%" y="149" width="13.0009%" height="15" fill="rgb(237,16,53)" fg:x="12505" fg:w="5408"/><text x="30.3552%" y="159.50">&lt;candid::types::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.0632%" y="149" width="0.0264%" height="15" fill="rgb(250,204,30)" fg:x="17913" fg:w="11"/><text x="43.3562%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.0896%" y="149" width="0.0264%" height="15" fill="rgb(208,77,27)" fg:x="17924" fg:w="11"/><text x="43.3826%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="43.1161%" y="149" width="0.0264%" height="15" fill="rgb(250,204,28)" fg:x="17935" fg:w="11"/><text x="43.4091%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,020 instructions, 14.47%)</title><rect x="29.2617%" y="165" width="14.4722%" height="15" fill="rgb(244,63,21)" fg:x="12172" fg:w="6020"/><text x="29.5547%" y="175.50">candid::de::IDLDes..</text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="43.7339%" y="149" width="0.0120%" height="15" fill="rgb(236,85,44)" fg:x="18192" fg:w="5"/><text x="44.0269%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="43.7459%" y="133" width="0.1274%" height="15" fill="rgb(215,98,4)" fg:x="18197" fg:w="53"/><text x="44.0389%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="43.8734%" y="133" width="0.2140%" height="15" fill="rgb(235,38,11)" fg:x="18250" fg:w="89"/><text x="44.1663%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="44.0873%" y="133" width="0.3870%" height="15" fill="rgb(254,186,25)" fg:x="18339" fg:w="161"/><text x="44.3803%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="43.7459%" y="149" width="1.2982%" height="15" fill="rgb(225,55,31)" fg:x="18197" fg:w="540"/><text x="44.0389%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.58%)</title><rect x="43.7339%" y="165" width="1.5818%" height="15" fill="rgb(211,15,21)" fg:x="18192" fg:w="658"/><text x="44.0269%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="45.3158%" y="165" width="0.1827%" height="15" fill="rgb(215,187,41)" fg:x="18850" fg:w="76"/><text x="45.6087%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="45.4985%" y="149" width="0.0120%" height="15" fill="rgb(248,69,32)" fg:x="18926" fg:w="5"/><text x="45.7914%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="45.5105%" y="133" width="0.1274%" height="15" fill="rgb(252,102,52)" fg:x="18931" fg:w="53"/><text x="45.8035%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="45.6379%" y="133" width="0.2140%" height="15" fill="rgb(253,140,32)" fg:x="18984" fg:w="89"/><text x="45.9309%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="45.8519%" y="133" width="0.3870%" height="15" fill="rgb(216,56,42)" fg:x="19073" fg:w="161"/><text x="46.1448%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="45.5105%" y="149" width="1.2982%" height="15" fill="rgb(216,184,14)" fg:x="18931" fg:w="540"/><text x="45.8035%" y="159.50"></text></g><g><title>candid::types::internal::env_add (755 instructions, 1.82%)</title><rect x="45.4985%" y="165" width="1.8150%" height="15" fill="rgb(237,187,27)" fg:x="18926" fg:w="755"/><text x="45.7914%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="47.3135%" y="165" width="0.1827%" height="15" fill="rgb(219,65,3)" fg:x="19681" fg:w="76"/><text x="47.6065%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="47.4962%" y="149" width="0.0120%" height="15" fill="rgb(245,83,25)" fg:x="19757" fg:w="5"/><text x="47.7892%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="47.5082%" y="133" width="0.1274%" height="15" fill="rgb(214,205,45)" fg:x="19762" fg:w="53"/><text x="47.8012%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (89 instructions, 0.21%)</title><rect x="47.6356%" y="133" width="0.2140%" height="15" fill="rgb(241,20,18)" fg:x="19815" fg:w="89"/><text x="47.9286%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (161 instructions, 0.39%)</title><rect x="47.8496%" y="133" width="0.3870%" height="15" fill="rgb(232,163,23)" fg:x="19904" fg:w="161"/><text x="48.1426%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.30%)</title><rect x="47.5082%" y="149" width="1.2982%" height="15" fill="rgb(214,5,46)" fg:x="19762" fg:w="540"/><text x="47.8012%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.16%)</title><rect x="48.8064%" y="149" width="0.1635%" height="15" fill="rgb(229,78,17)" fg:x="20302" fg:w="68"/><text x="49.0994%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="48.9699%" y="133" width="0.1947%" height="15" fill="rgb(248,89,10)" fg:x="20370" fg:w="81"/><text x="49.2628%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="48.9699%" y="149" width="0.2596%" height="15" fill="rgb(248,54,15)" fg:x="20370" fg:w="108"/><text x="49.2628%" y="159.50"></text></g><g><title>candid::types::internal::env_add (889 instructions, 2.14%)</title><rect x="47.4962%" y="165" width="2.1372%" height="15" fill="rgb(223,116,6)" fg:x="19757" fg:w="889"/><text x="47.7892%" y="175.50">c..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="49.6334%" y="117" width="0.1274%" height="15" fill="rgb(205,125,38)" fg:x="20646" fg:w="53"/><text x="49.9264%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="49.6334%" y="133" width="0.1899%" height="15" fill="rgb(251,78,38)" fg:x="20646" fg:w="79"/><text x="49.9264%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="50.3354%" y="117" width="0.1274%" height="15" fill="rgb(253,78,28)" fg:x="20938" fg:w="53"/><text x="50.6283%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="50.3354%" y="133" width="0.1899%" height="15" fill="rgb(209,120,3)" fg:x="20938" fg:w="79"/><text x="50.6283%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.40%)</title><rect x="49.6334%" y="149" width="1.4039%" height="15" fill="rgb(238,229,9)" fg:x="20646" fg:w="584"/><text x="49.9264%" y="159.50"></text></g><g><title>candid::types::internal::env_id (861 instructions, 2.07%)</title><rect x="49.6334%" y="165" width="2.0699%" height="15" fill="rgb(253,159,18)" fg:x="20646" fg:w="861"/><text x="49.9264%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (33 instructions, 0.08%)</title><rect x="51.7032%" y="165" width="0.0793%" height="15" fill="rgb(244,42,34)" fg:x="21507" fg:w="33"/><text x="51.9962%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="51.8090%" y="149" width="0.4039%" height="15" fill="rgb(224,8,7)" fg:x="21551" fg:w="168"/><text x="52.1020%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.50%)</title><rect x="51.7826%" y="165" width="0.4952%" height="15" fill="rgb(210,201,45)" fg:x="21540" fg:w="206"/><text x="52.0755%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.07%)</title><rect x="52.2778%" y="149" width="0.0673%" height="15" fill="rgb(252,185,21)" fg:x="21746" fg:w="28"/><text x="52.5708%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="52.3451%" y="149" width="0.0361%" height="15" fill="rgb(223,131,1)" fg:x="21774" fg:w="15"/><text x="52.6381%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2133 (15 instructions, 0.04%)</title><rect x="52.3812%" y="149" width="0.0361%" height="15" fill="rgb(245,141,16)" fg:x="21789" fg:w="15"/><text x="52.6742%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (133 instructions, 0.32%)</title><rect x="52.2778%" y="165" width="0.3197%" height="15" fill="rgb(229,55,45)" fg:x="21746" fg:w="133"/><text x="52.5708%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="52.5975%" y="165" width="0.0264%" height="15" fill="rgb(208,92,15)" fg:x="21879" fg:w="11"/><text x="52.8905%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="52.6240%" y="165" width="0.0264%" height="15" fill="rgb(234,185,47)" fg:x="21890" fg:w="11"/><text x="52.9170%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="52.6504%" y="165" width="0.0264%" height="15" fill="rgb(253,104,50)" fg:x="21901" fg:w="11"/><text x="52.9434%" y="175.50"></text></g><g><title>memcpy (411 instructions, 0.99%)</title><rect x="52.6769%" y="165" width="0.9881%" height="15" fill="rgb(205,70,7)" fg:x="21912" fg:w="411"/><text x="52.9698%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="53.6649%" y="133" width="0.0288%" height="15" fill="rgb(240,178,43)" fg:x="22323" fg:w="12"/><text x="53.9579%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="53.6938%" y="133" width="0.2957%" height="15" fill="rgb(214,112,2)" fg:x="22335" fg:w="123"/><text x="53.9867%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.18%)</title><rect x="53.9895%" y="101" width="0.1803%" height="15" fill="rgb(206,46,17)" fg:x="22458" fg:w="75"/><text x="54.2824%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (221 instructions, 0.53%)</title><rect x="53.9895%" y="117" width="0.5313%" height="15" fill="rgb(225,220,16)" fg:x="22458" fg:w="221"/><text x="54.2824%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (248 instructions, 0.60%)</title><rect x="53.9895%" y="133" width="0.5962%" height="15" fill="rgb(238,65,40)" fg:x="22458" fg:w="248"/><text x="54.2824%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="54.5857%" y="133" width="0.0264%" height="15" fill="rgb(230,151,21)" fg:x="22706" fg:w="11"/><text x="54.8786%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (436 instructions, 1.05%)</title><rect x="53.6649%" y="149" width="1.0482%" height="15" fill="rgb(218,58,49)" fg:x="22323" fg:w="436"/><text x="53.9579%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (470 instructions, 1.13%)</title><rect x="53.6649%" y="165" width="1.1299%" height="15" fill="rgb(219,179,14)" fg:x="22323" fg:w="470"/><text x="53.9579%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="54.7948%" y="149" width="0.0505%" height="15" fill="rgb(223,72,1)" fg:x="22793" fg:w="21"/><text x="55.0878%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.23%)</title><rect x="54.8453%" y="149" width="0.2284%" height="15" fill="rgb(238,126,10)" fg:x="22814" fg:w="95"/><text x="55.1383%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (198 instructions, 0.48%)</title><rect x="54.7948%" y="165" width="0.4760%" height="15" fill="rgb(224,206,38)" fg:x="22793" fg:w="198"/><text x="55.0878%" y="175.50"></text></g><g><title>memset (218 instructions, 0.52%)</title><rect x="55.2708%" y="165" width="0.5241%" height="15" fill="rgb(212,201,54)" fg:x="22991" fg:w="218"/><text x="55.5638%" y="175.50"></text></g><g><title>memcpy (164 instructions, 0.39%)</title><rect x="55.7949%" y="165" width="0.3943%" height="15" fill="rgb(218,154,48)" fg:x="23209" fg:w="164"/><text x="56.0879%" y="175.50"></text></g><g><title>memcpy (471 instructions, 1.13%)</title><rect x="56.1891%" y="165" width="1.1323%" height="15" fill="rgb(232,93,24)" fg:x="23373" fg:w="471"/><text x="56.4821%" y="175.50"></text></g><g><title>memset (126 instructions, 0.30%)</title><rect x="57.3214%" y="149" width="0.3029%" height="15" fill="rgb(245,30,21)" fg:x="23844" fg:w="126"/><text x="57.6144%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.99%)</title><rect x="57.6243%" y="149" width="11.9888%" height="15" fill="rgb(242,148,29)" fg:x="23970" fg:w="4987"/><text x="57.9173%" y="159.50">sha2::sha256::c..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.98%)</title><rect x="57.3214%" y="165" width="12.9841%" height="15" fill="rgb(244,153,54)" fg:x="23844" fg:w="5401"/><text x="57.6144%" y="175.50">&lt;sha2::core_api:..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="70.3056%" y="165" width="0.1827%" height="15" fill="rgb(252,87,22)" fg:x="29245" fg:w="76"/><text x="70.5985%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="70.4883%" y="149" width="0.0120%" height="15" fill="rgb(210,51,29)" fg:x="29321" fg:w="5"/><text x="70.7812%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.30%)</title><rect x="70.5003%" y="117" width="0.3029%" height="15" fill="rgb(242,136,47)" fg:x="29326" fg:w="126"/><text x="70.7932%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.37%)</title><rect x="70.5003%" y="133" width="0.3678%" height="15" fill="rgb(238,68,4)" fg:x="29326" fg:w="153"/><text x="70.7932%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.30%)</title><rect x="70.8681%" y="133" width="0.3029%" height="15" fill="rgb(242,161,30)" fg:x="29479" fg:w="126"/><text x="71.1611%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.13%)</title><rect x="71.2479%" y="117" width="0.1298%" height="15" fill="rgb(218,58,44)" fg:x="29637" fg:w="54"/><text x="71.5409%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="71.3777%" y="117" width="0.1515%" height="15" fill="rgb(252,125,32)" fg:x="29691" fg:w="63"/><text x="71.6707%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.59%)</title><rect x="71.2479%" y="133" width="0.5866%" height="15" fill="rgb(219,178,0)" fg:x="29637" fg:w="244"/><text x="71.5409%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (582 instructions, 1.40%)</title><rect x="70.5003%" y="149" width="1.3991%" height="15" fill="rgb(213,152,7)" fg:x="29326" fg:w="582"/><text x="70.7932%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="71.8994%" y="149" width="0.0264%" height="15" fill="rgb(249,109,34)" fg:x="29908" fg:w="11"/><text x="72.1924%" y="159.50"></text></g><g><title>memset (136 instructions, 0.33%)</title><rect x="71.9259%" y="149" width="0.3269%" height="15" fill="rgb(232,96,21)" fg:x="29919" fg:w="136"/><text x="72.2188%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.2528%" y="117" width="0.0120%" height="15" fill="rgb(228,27,39)" fg:x="30055" fg:w="5"/><text x="72.5458%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="72.2528%" y="133" width="0.0938%" height="15" fill="rgb(211,182,52)" fg:x="30055" fg:w="39"/><text x="72.5458%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="72.3466%" y="133" width="0.1827%" height="15" fill="rgb(234,178,38)" fg:x="30094" fg:w="76"/><text x="72.6395%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.5293%" y="117" width="0.0120%" height="15" fill="rgb(221,111,3)" fg:x="30170" fg:w="5"/><text x="72.8222%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="72.5413%" y="101" width="0.1274%" height="15" fill="rgb(228,175,21)" fg:x="30175" fg:w="53"/><text x="72.8343%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.87%)</title><rect x="72.6687%" y="101" width="0.8727%" height="15" fill="rgb(228,174,43)" fg:x="30228" fg:w="363"/><text x="72.9617%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="73.5414%" y="101" width="0.1755%" height="15" fill="rgb(211,191,0)" fg:x="30591" fg:w="73"/><text x="73.8343%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.75%)</title><rect x="72.5413%" y="117" width="1.7453%" height="15" fill="rgb(253,117,3)" fg:x="30175" fg:w="726"/><text x="72.8343%" y="127.50"></text></g><g><title>candid::types::internal::env_add (941 instructions, 2.26%)</title><rect x="72.5293%" y="133" width="2.2622%" height="15" fill="rgb(241,127,19)" fg:x="30170" fg:w="941"/><text x="72.8222%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="74.7915%" y="133" width="0.1827%" height="15" fill="rgb(218,103,12)" fg:x="31111" fg:w="76"/><text x="75.0844%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="74.9742%" y="133" width="0.1827%" height="15" fill="rgb(236,214,43)" fg:x="31187" fg:w="76"/><text x="75.2671%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="75.1569%" y="117" width="0.0120%" height="15" fill="rgb(244,144,19)" fg:x="31263" fg:w="5"/><text x="75.4498%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="75.1689%" y="101" width="0.1274%" height="15" fill="rgb(246,188,10)" fg:x="31268" fg:w="53"/><text x="75.4619%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.87%)</title><rect x="75.2963%" y="101" width="0.8727%" height="15" fill="rgb(212,193,33)" fg:x="31321" fg:w="363"/><text x="75.5893%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.18%)</title><rect x="76.1690%" y="101" width="0.1755%" height="15" fill="rgb(241,51,29)" fg:x="31684" fg:w="73"/><text x="76.4619%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.75%)</title><rect x="75.1689%" y="117" width="1.7453%" height="15" fill="rgb(211,58,19)" fg:x="31268" fg:w="726"/><text x="75.4619%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.48%)</title><rect x="76.9142%" y="117" width="1.4761%" height="15" fill="rgb(229,111,26)" fg:x="31994" fg:w="614"/><text x="77.2072%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="78.3903%" y="101" width="0.1947%" height="15" fill="rgb(213,115,40)" fg:x="32608" fg:w="81"/><text x="78.6832%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="78.3903%" y="117" width="0.2596%" height="15" fill="rgb(209,56,44)" fg:x="32608" fg:w="108"/><text x="78.6832%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,621 instructions, 3.90%)</title><rect x="75.1569%" y="133" width="3.8969%" height="15" fill="rgb(230,108,32)" fg:x="31263" fg:w="1621"/><text x="75.4498%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="79.0538%" y="85" width="0.1274%" height="15" fill="rgb(216,165,31)" fg:x="32884" fg:w="53"/><text x="79.3467%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="79.1812%" y="85" width="0.3678%" height="15" fill="rgb(218,122,21)" fg:x="32937" fg:w="153"/><text x="79.4742%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.61%)</title><rect x="79.0538%" y="101" width="0.6106%" height="15" fill="rgb(223,224,47)" fg:x="32884" fg:w="254"/><text x="79.3467%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.12%)</title><rect x="79.0538%" y="117" width="1.1227%" height="15" fill="rgb(238,102,44)" fg:x="32884" fg:w="467"/><text x="79.3467%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.174 (42 instructions, 0.10%)</title><rect x="80.1765%" y="117" width="0.1010%" height="15" fill="rgb(236,46,40)" fg:x="33351" fg:w="42"/><text x="80.4694%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="80.2774%" y="117" width="0.0264%" height="15" fill="rgb(247,202,50)" fg:x="33393" fg:w="11"/><text x="80.5704%" y="127.50"></text></g><g><title>candid::types::internal::env_id (680 instructions, 1.63%)</title><rect x="79.0538%" y="133" width="1.6347%" height="15" fill="rgb(209,99,20)" fg:x="32884" fg:w="680"/><text x="79.3467%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.73%)</title><rect x="72.2528%" y="149" width="8.7338%" height="15" fill="rgb(252,27,34)" fg:x="30055" fg:w="3633"/><text x="72.5458%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="80.9866%" y="117" width="0.1827%" height="15" fill="rgb(215,206,23)" fg:x="33688" fg:w="76"/><text x="81.2796%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="80.9866%" y="133" width="0.2668%" height="15" fill="rgb(212,135,36)" fg:x="33688" fg:w="111"/><text x="81.2796%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.43%)</title><rect x="80.9866%" y="149" width="0.4303%" height="15" fill="rgb(240,189,1)" fg:x="33688" fg:w="179"/><text x="81.2796%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.06%)</title><rect x="81.4169%" y="133" width="0.0577%" height="15" fill="rgb(242,56,20)" fg:x="33867" fg:w="24"/><text x="81.7099%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.19%)</title><rect x="81.4746%" y="101" width="0.1899%" height="15" fill="rgb(247,132,33)" fg:x="33891" fg:w="79"/><text x="81.7676%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.37%)</title><rect x="81.4746%" y="117" width="0.3678%" height="15" fill="rgb(208,149,11)" fg:x="33891" fg:w="153"/><text x="81.7676%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="81.8424%" y="117" width="0.1827%" height="15" fill="rgb(211,33,11)" fg:x="34044" fg:w="76"/><text x="82.1354%" y="127.50"></text></g><g><title>candid::types::internal::unroll (307 instructions, 0.74%)</title><rect x="81.4746%" y="133" width="0.7380%" height="15" fill="rgb(221,29,38)" fg:x="33891" fg:w="307"/><text x="81.7676%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="82.2127%" y="85" width="0.1274%" height="15" fill="rgb(206,182,49)" fg:x="34198" fg:w="53"/><text x="82.5056%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="82.3401%" y="85" width="0.3678%" height="15" fill="rgb(216,140,1)" fg:x="34251" fg:w="153"/><text x="82.6330%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.61%)</title><rect x="82.2127%" y="101" width="0.6106%" height="15" fill="rgb(232,57,40)" fg:x="34198" fg:w="254"/><text x="82.5056%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.12%)</title><rect x="82.2127%" y="117" width="1.1227%" height="15" fill="rgb(224,186,18)" fg:x="34198" fg:w="467"/><text x="82.5056%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="83.3353%" y="117" width="0.1827%" height="15" fill="rgb(215,121,11)" fg:x="34665" fg:w="76"/><text x="83.6283%" y="127.50"></text></g><g><title>memset (136 instructions, 0.33%)</title><rect x="83.5180%" y="117" width="0.3269%" height="15" fill="rgb(245,147,10)" fg:x="34741" fg:w="136"/><text x="83.8110%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,042 instructions, 2.50%)</title><rect x="82.2127%" y="133" width="2.5050%" height="15" fill="rgb(238,153,13)" fg:x="34198" fg:w="1042"/><text x="82.5056%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="84.7176%" y="101" width="0.1827%" height="15" fill="rgb(233,108,0)" fg:x="35240" fg:w="76"/><text x="85.0106%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="84.7176%" y="117" width="0.2668%" height="15" fill="rgb(212,157,17)" fg:x="35240" fg:w="111"/><text x="85.0106%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.43%)</title><rect x="84.7176%" y="133" width="0.4303%" height="15" fill="rgb(225,213,38)" fg:x="35240" fg:w="179"/><text x="85.0106%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="85.1480%" y="85" width="0.1274%" height="15" fill="rgb(248,16,11)" fg:x="35419" fg:w="53"/><text x="85.4409%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.19%)</title><rect x="85.1480%" y="101" width="0.1899%" height="15" fill="rgb(241,33,4)" fg:x="35419" fg:w="79"/><text x="85.4409%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.70%)</title><rect x="85.1480%" y="117" width="0.7020%" height="15" fill="rgb(222,26,43)" fg:x="35419" fg:w="292"/><text x="85.4409%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="85.8499%" y="117" width="0.0433%" height="15" fill="rgb(243,29,36)" fg:x="35711" fg:w="18"/><text x="86.1429%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="85.8932%" y="117" width="0.0264%" height="15" fill="rgb(241,9,27)" fg:x="35729" fg:w="11"/><text x="86.1862%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 1.05%)</title><rect x="85.1480%" y="133" width="1.0506%" height="15" fill="rgb(205,117,26)" fg:x="35419" fg:w="437"/><text x="85.4409%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="86.1985%" y="85" width="0.1827%" height="15" fill="rgb(209,80,39)" fg:x="35856" fg:w="76"/><text x="86.4915%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="86.1985%" y="101" width="0.2668%" height="15" fill="rgb(239,155,6)" fg:x="35856" fg:w="111"/><text x="86.4915%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="86.1985%" y="117" width="0.4231%" height="15" fill="rgb(212,104,12)" fg:x="35856" fg:w="176"/><text x="86.4915%" y="127.50"></text></g><g><title>leb128::write::signed (226 instructions, 0.54%)</title><rect x="86.1985%" y="133" width="0.5433%" height="15" fill="rgb(234,204,3)" fg:x="35856" fg:w="226"/><text x="86.4915%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.12%)</title><rect x="86.7418%" y="133" width="0.1202%" height="15" fill="rgb(251,218,7)" fg:x="36082" fg:w="50"/><text x="87.0348%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="86.8620%" y="101" width="0.1947%" height="15" fill="rgb(221,81,32)" fg:x="36132" fg:w="81"/><text x="87.1550%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.26%)</title><rect x="86.8620%" y="117" width="0.2596%" height="15" fill="rgb(214,152,26)" fg:x="36132" fg:w="108"/><text x="87.1550%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.19%)</title><rect x="87.1217%" y="117" width="0.1875%" height="15" fill="rgb(223,22,3)" fg:x="36240" fg:w="78"/><text x="87.4146%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.52%)</title><rect x="86.8620%" y="133" width="0.5241%" height="15" fill="rgb(207,174,7)" fg:x="36132" fg:w="218"/><text x="87.1550%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.3861%" y="133" width="0.0264%" height="15" fill="rgb(224,19,52)" fg:x="36350" fg:w="11"/><text x="87.6791%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,697 instructions, 6.48%)</title><rect x="81.4169%" y="149" width="6.4836%" height="15" fill="rgb(228,24,14)" fg:x="33867" fg:w="2697"/><text x="81.7099%" y="159.50">candid:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="87.9006%" y="149" width="0.0264%" height="15" fill="rgb(230,153,43)" fg:x="36564" fg:w="11"/><text x="88.1935%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="87.9270%" y="117" width="0.1827%" height="15" fill="rgb(231,106,12)" fg:x="36575" fg:w="76"/><text x="88.2200%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="87.9270%" y="133" width="0.2668%" height="15" fill="rgb(215,92,2)" fg:x="36575" fg:w="111"/><text x="88.2200%" y="143.50"></text></g><g><title>__rust_realloc (104 instructions, 0.25%)</title><rect x="88.3501%" y="117" width="0.2500%" height="15" fill="rgb(249,143,25)" fg:x="36751" fg:w="104"/><text x="88.6431%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.33%)</title><rect x="88.3501%" y="133" width="0.3342%" height="15" fill="rgb(252,7,35)" fg:x="36751" fg:w="139"/><text x="88.6431%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.93%)</title><rect x="87.9270%" y="149" width="0.9328%" height="15" fill="rgb(216,69,40)" fg:x="36575" fg:w="388"/><text x="88.2200%" y="159.50"></text></g><g><title>memcpy (291 instructions, 0.70%)</title><rect x="88.8598%" y="149" width="0.6996%" height="15" fill="rgb(240,36,33)" fg:x="36963" fg:w="291"/><text x="89.1527%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="89.5593%" y="149" width="0.2885%" height="15" fill="rgb(231,128,14)" fg:x="37254" fg:w="120"/><text x="89.8523%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.08%)</title><rect x="89.8478%" y="149" width="0.0769%" height="15" fill="rgb(245,143,14)" fg:x="37374" fg:w="32"/><text x="90.1408%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="89.9248%" y="117" width="0.1827%" height="15" fill="rgb(222,130,28)" fg:x="37406" fg:w="76"/><text x="90.2177%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="89.9248%" y="133" width="0.2668%" height="15" fill="rgb(212,10,48)" fg:x="37406" fg:w="111"/><text x="90.2177%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="89.9248%" y="149" width="0.4231%" height="15" fill="rgb(254,118,45)" fg:x="37406" fg:w="176"/><text x="90.2177%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="90.3479%" y="149" width="0.1827%" height="15" fill="rgb(228,6,45)" fg:x="37582" fg:w="76"/><text x="90.6408%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="90.5306%" y="149" width="0.1082%" height="15" fill="rgb(241,18,35)" fg:x="37658" fg:w="45"/><text x="90.8235%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.11%)</title><rect x="90.6387%" y="149" width="0.1082%" height="15" fill="rgb(227,214,53)" fg:x="37703" fg:w="45"/><text x="90.9317%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="90.7469%" y="149" width="0.1322%" height="15" fill="rgb(224,107,51)" fg:x="37748" fg:w="55"/><text x="91.0399%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.13%)</title><rect x="90.8791%" y="101" width="0.1274%" height="15" fill="rgb(248,60,28)" fg:x="37803" fg:w="53"/><text x="91.1721%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.37%)</title><rect x="91.0066%" y="101" width="0.3678%" height="15" fill="rgb(249,101,23)" fg:x="37856" fg:w="153"/><text x="91.2995%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.61%)</title><rect x="90.8791%" y="117" width="0.6106%" height="15" fill="rgb(228,51,19)" fg:x="37803" fg:w="254"/><text x="91.1721%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 1.12%)</title><rect x="90.8791%" y="133" width="1.1227%" height="15" fill="rgb(213,20,6)" fg:x="37803" fg:w="467"/><text x="91.1721%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.18%)</title><rect x="92.0018%" y="101" width="0.1827%" height="15" fill="rgb(212,124,10)" fg:x="38270" fg:w="76"/><text x="92.2948%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.27%)</title><rect x="92.0018%" y="117" width="0.2668%" height="15" fill="rgb(248,3,40)" fg:x="38270" fg:w="111"/><text x="92.2948%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.42%)</title><rect x="92.0018%" y="133" width="0.4231%" height="15" fill="rgb(223,178,23)" fg:x="38270" fg:w="176"/><text x="92.2948%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (810 instructions, 1.95%)</title><rect x="90.8791%" y="149" width="1.9473%" height="15" fill="rgb(240,132,45)" fg:x="37803" fg:w="810"/><text x="91.1721%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="92.8264%" y="149" width="0.0721%" height="15" fill="rgb(245,164,36)" fg:x="38613" fg:w="30"/><text x="93.1194%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="92.8985%" y="149" width="0.1322%" height="15" fill="rgb(231,188,53)" fg:x="38643" fg:w="55"/><text x="93.1915%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.08%)</title><rect x="93.0307%" y="149" width="0.0793%" height="15" fill="rgb(237,198,39)" fg:x="38698" fg:w="33"/><text x="93.3237%" y="159.50"></text></g><g><title>std::io::Write::write_all (61 instructions, 0.15%)</title><rect x="93.1101%" y="149" width="0.1466%" height="15" fill="rgb(223,120,35)" fg:x="38731" fg:w="61"/><text x="93.4030%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.19%)</title><rect x="93.2567%" y="149" width="0.1947%" height="15" fill="rgb(253,107,49)" fg:x="38792" fg:w="81"/><text x="93.5497%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.30%)</title><rect x="93.4515%" y="149" width="0.2957%" height="15" fill="rgb(216,44,31)" fg:x="38873" fg:w="123"/><text x="93.7444%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="93.7471%" y="149" width="0.0264%" height="15" fill="rgb(253,87,21)" fg:x="38996" fg:w="11"/><text x="94.0401%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.40%)</title><rect x="93.7736%" y="149" width="0.4039%" height="15" fill="rgb(226,18,2)" fg:x="39007" fg:w="168"/><text x="94.0666%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.1775%" y="149" width="0.0120%" height="15" fill="rgb(216,8,46)" fg:x="39175" fg:w="5"/><text x="94.4704%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.03%)</title><rect x="94.1895%" y="149" width="0.0264%" height="15" fill="rgb(226,140,39)" fg:x="39180" fg:w="11"/><text x="94.4825%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.29%)</title><rect x="94.2159%" y="149" width="0.2885%" height="15" fill="rgb(221,194,54)" fg:x="39191" fg:w="120"/><text x="94.5089%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.13%)</title><rect x="94.5044%" y="149" width="0.1322%" height="15" fill="rgb(213,92,11)" fg:x="39311" fg:w="55"/><text x="94.7974%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.23%)</title><rect x="94.6366%" y="149" width="0.2332%" height="15" fill="rgb(229,162,46)" fg:x="39366" fg:w="97"/><text x="94.9296%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,993 instructions, 26.43%)</title><rect x="70.4883%" y="165" width="26.4274%" height="15" fill="rgb(214,111,36)" fg:x="29321" fg:w="10993"/><text x="70.7812%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (40,945 instructions, 98.43%)</title><rect x="0.4111%" y="181" width="98.4326%" height="15" fill="rgb(207,6,21)" fg:x="171" fg:w="40945"/><text x="0.7041%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.8437%" y="181" width="0.0288%" height="15" fill="rgb(213,127,38)" fg:x="41116" fg:w="12"/><text x="99.1366%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.13%)</title><rect x="99.1754%" y="165" width="0.1322%" height="15" fill="rgb(238,118,32)" fg:x="41254" fg:w="55"/><text x="99.4684%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.15%)</title><rect x="99.3076%" y="165" width="0.1515%" height="15" fill="rgb(240,139,39)" fg:x="41309" fg:w="63"/><text x="99.6006%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (371 instructions, 0.89%)</title><rect x="98.8725%" y="181" width="0.8919%" height="15" fill="rgb(235,10,37)" fg:x="41128" fg:w="371"/><text x="99.1655%" y="191.50"></text></g><g><title>all (41,597 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(249,171,38)" fg:x="0" fg:w="41597"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (41,597 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(242,144,32)" fg:x="0" fg:w="41597"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>