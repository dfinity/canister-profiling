<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="51163"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0469%" height="15" fill="rgb(221,135,30)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0469%" y="181" width="0.1622%" height="15" fill="rgb(249,193,18)" fg:x="24" fg:w="83"/><text x="0.3399%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2091%" y="181" width="0.1622%" height="15" fill="rgb(209,133,39)" fg:x="107" fg:w="83"/><text x="0.5021%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3714%" y="165" width="0.1622%" height="15" fill="rgb(232,100,14)" fg:x="190" fg:w="83"/><text x="0.6643%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5336%" y="149" width="0.1603%" height="15" fill="rgb(224,185,1)" fg:x="273" fg:w="82"/><text x="0.8266%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6939%" y="133" width="0.0117%" height="15" fill="rgb(223,139,8)" fg:x="355" fg:w="6"/><text x="0.9868%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.86%)</title><rect x="0.6939%" y="149" width="0.8600%" height="15" fill="rgb(232,213,38)" fg:x="355" fg:w="440"/><text x="0.9868%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="1.5539%" y="149" width="0.1857%" height="15" fill="rgb(207,94,22)" fg:x="795" fg:w="95"/><text x="1.8468%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7395%" y="149" width="0.1173%" height="15" fill="rgb(219,183,54)" fg:x="890" fg:w="60"/><text x="2.0325%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8568%" y="149" width="0.1173%" height="15" fill="rgb(216,185,54)" fg:x="950" fg:w="60"/><text x="2.1498%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9741%" y="149" width="0.1173%" height="15" fill="rgb(254,217,39)" fg:x="1010" fg:w="60"/><text x="2.2671%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0914%" y="149" width="0.1173%" height="15" fill="rgb(240,178,23)" fg:x="1070" fg:w="60"/><text x="2.3843%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.2086%" y="149" width="0.1603%" height="15" fill="rgb(218,11,47)" fg:x="1130" fg:w="82"/><text x="2.5016%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="2.3689%" y="149" width="0.1368%" height="15" fill="rgb(218,51,51)" fg:x="1212" fg:w="70"/><text x="2.6619%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5057%" y="133" width="0.0117%" height="15" fill="rgb(238,126,27)" fg:x="1282" fg:w="6"/><text x="2.7987%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.86%)</title><rect x="2.5057%" y="149" width="0.8600%" height="15" fill="rgb(249,202,22)" fg:x="1282" fg:w="440"/><text x="2.7987%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3657%" y="149" width="0.0371%" height="15" fill="rgb(254,195,49)" fg:x="1722" fg:w="19"/><text x="3.6587%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="3.4028%" y="133" width="0.1622%" height="15" fill="rgb(208,123,14)" fg:x="1741" fg:w="83"/><text x="3.6958%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.5651%" y="101" width="0.1310%" height="15" fill="rgb(224,200,8)" fg:x="1824" fg:w="67"/><text x="3.8580%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="3.5651%" y="117" width="0.1915%" height="15" fill="rgb(217,61,36)" fg:x="1824" fg:w="98"/><text x="3.8580%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.7566%" y="69" width="0.0215%" height="15" fill="rgb(206,35,45)" fg:x="1922" fg:w="11"/><text x="4.0496%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.7781%" y="53" width="0.0684%" height="15" fill="rgb(217,65,33)" fg:x="1933" fg:w="35"/><text x="4.0711%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="3.7781%" y="69" width="0.1290%" height="15" fill="rgb(222,158,48)" fg:x="1933" fg:w="66"/><text x="4.0711%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.29%)</title><rect x="3.7566%" y="85" width="0.2873%" height="15" fill="rgb(254,2,54)" fg:x="1922" fg:w="147"/><text x="4.0496%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="3.7566%" y="101" width="0.4144%" height="15" fill="rgb(250,143,38)" fg:x="1922" fg:w="212"/><text x="4.0496%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="3.7566%" y="117" width="0.4339%" height="15" fill="rgb(248,25,0)" fg:x="1922" fg:w="222"/><text x="4.0496%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.90%)</title><rect x="3.5651%" y="133" width="0.9010%" height="15" fill="rgb(206,152,27)" fg:x="1824" fg:w="461"/><text x="3.8580%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.35%)</title><rect x="3.4028%" y="149" width="1.3467%" height="15" fill="rgb(240,77,30)" fg:x="1741" fg:w="689"/><text x="3.6958%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="4.7495%" y="149" width="0.1857%" height="15" fill="rgb(231,5,3)" fg:x="2430" fg:w="95"/><text x="5.0425%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="4.9352%" y="149" width="0.1173%" height="15" fill="rgb(207,226,32)" fg:x="2525" fg:w="60"/><text x="5.2282%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="5.0525%" y="149" width="0.1485%" height="15" fill="rgb(222,207,47)" fg:x="2585" fg:w="76"/><text x="5.3454%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="5.2010%" y="149" width="0.1368%" height="15" fill="rgb(229,115,45)" fg:x="2661" fg:w="70"/><text x="5.4940%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.3378%" y="117" width="0.0117%" height="15" fill="rgb(224,191,6)" fg:x="2731" fg:w="6"/><text x="5.6308%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.86%)</title><rect x="5.3378%" y="133" width="0.8600%" height="15" fill="rgb(230,227,24)" fg:x="2731" fg:w="440"/><text x="5.6308%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.1978%" y="133" width="0.0371%" height="15" fill="rgb(228,80,19)" fg:x="3171" fg:w="19"/><text x="6.4908%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="6.2350%" y="117" width="0.1622%" height="15" fill="rgb(247,229,0)" fg:x="3190" fg:w="83"/><text x="6.5279%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="6.3972%" y="85" width="0.1310%" height="15" fill="rgb(237,194,15)" fg:x="3273" fg:w="67"/><text x="6.6902%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="6.3972%" y="101" width="0.1915%" height="15" fill="rgb(219,203,20)" fg:x="3273" fg:w="98"/><text x="6.6902%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.5887%" y="53" width="0.0215%" height="15" fill="rgb(234,128,8)" fg:x="3371" fg:w="11"/><text x="6.8817%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.6102%" y="37" width="0.0684%" height="15" fill="rgb(248,202,8)" fg:x="3382" fg:w="35"/><text x="6.9032%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="6.6102%" y="53" width="0.1290%" height="15" fill="rgb(206,104,37)" fg:x="3382" fg:w="66"/><text x="6.9032%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.29%)</title><rect x="6.5887%" y="69" width="0.2873%" height="15" fill="rgb(223,8,27)" fg:x="3371" fg:w="147"/><text x="6.8817%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="6.5887%" y="85" width="0.4144%" height="15" fill="rgb(216,217,28)" fg:x="3371" fg:w="212"/><text x="6.8817%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="6.5887%" y="101" width="0.4339%" height="15" fill="rgb(249,199,1)" fg:x="3371" fg:w="222"/><text x="6.8817%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.90%)</title><rect x="6.3972%" y="117" width="0.9010%" height="15" fill="rgb(240,85,17)" fg:x="3273" fg:w="461"/><text x="6.6902%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.35%)</title><rect x="6.2350%" y="133" width="1.3467%" height="15" fill="rgb(206,108,45)" fg:x="3190" fg:w="689"/><text x="6.5279%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="7.5817%" y="133" width="0.1857%" height="15" fill="rgb(245,210,41)" fg:x="3879" fg:w="95"/><text x="7.8746%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="7.7673%" y="133" width="0.1173%" height="15" fill="rgb(206,13,37)" fg:x="3974" fg:w="60"/><text x="8.0603%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="7.8846%" y="117" width="0.1603%" height="15" fill="rgb(250,61,18)" fg:x="4034" fg:w="82"/><text x="8.1776%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.0449%" y="117" width="0.1857%" height="15" fill="rgb(235,172,48)" fg:x="4116" fg:w="95"/><text x="8.3378%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.2306%" y="117" width="0.1485%" height="15" fill="rgb(249,201,17)" fg:x="4211" fg:w="76"/><text x="8.5235%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.65%)</title><rect x="7.8846%" y="133" width="0.6548%" height="15" fill="rgb(219,208,6)" fg:x="4034" fg:w="335"/><text x="8.1776%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.5394%" y="133" width="0.1622%" height="15" fill="rgb(248,31,23)" fg:x="4369" fg:w="83"/><text x="8.8323%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="8.7016%" y="117" width="0.1603%" height="15" fill="rgb(245,15,42)" fg:x="4452" fg:w="82"/><text x="8.9946%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.8619%" y="117" width="0.1857%" height="15" fill="rgb(222,217,39)" fg:x="4534" fg:w="95"/><text x="9.1548%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.0476%" y="117" width="0.1485%" height="15" fill="rgb(210,219,27)" fg:x="4629" fg:w="76"/><text x="9.3405%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.64%)</title><rect x="8.7016%" y="133" width="0.6450%" height="15" fill="rgb(252,166,36)" fg:x="4452" fg:w="330"/><text x="8.9946%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,346 instructions, 4.59%)</title><rect x="5.3378%" y="149" width="4.5853%" height="15" fill="rgb(245,132,34)" fg:x="2731" fg:w="2346"/><text x="5.6308%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.9232%" y="149" width="0.1485%" height="15" fill="rgb(236,54,3)" fg:x="5077" fg:w="76"/><text x="10.2162%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.0717%" y="149" width="0.0293%" height="15" fill="rgb(241,173,43)" fg:x="5153" fg:w="15"/><text x="10.3647%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.1010%" y="149" width="0.0293%" height="15" fill="rgb(215,190,9)" fg:x="5168" fg:w="15"/><text x="10.3940%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="10.1304%" y="149" width="0.0176%" height="15" fill="rgb(242,101,16)" fg:x="5183" fg:w="9"/><text x="10.4233%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.04%)</title><rect x="10.1480%" y="149" width="0.0352%" height="15" fill="rgb(223,190,21)" fg:x="5192" fg:w="18"/><text x="10.4409%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.1831%" y="133" width="0.1622%" height="15" fill="rgb(215,228,25)" fg:x="5210" fg:w="83"/><text x="10.4761%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.35%)</title><rect x="10.1831%" y="149" width="0.3499%" height="15" fill="rgb(225,36,22)" fg:x="5210" fg:w="179"/><text x="10.4761%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.5330%" y="117" width="0.1622%" height="15" fill="rgb(251,106,46)" fg:x="5389" fg:w="83"/><text x="10.8260%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="10.5330%" y="133" width="0.2463%" height="15" fill="rgb(208,90,1)" fg:x="5389" fg:w="126"/><text x="10.8260%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.41%)</title><rect x="10.5330%" y="149" width="0.4065%" height="15" fill="rgb(243,10,4)" fg:x="5389" fg:w="208"/><text x="10.8260%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.9395%" y="133" width="0.1622%" height="15" fill="rgb(212,137,27)" fg:x="5597" fg:w="83"/><text x="11.2325%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.35%)</title><rect x="10.9395%" y="149" width="0.3499%" height="15" fill="rgb(231,220,49)" fg:x="5597" fg:w="179"/><text x="11.2325%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.2894%" y="149" width="0.1622%" height="15" fill="rgb(237,96,20)" fg:x="5776" fg:w="83"/><text x="11.5824%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="11.4516%" y="149" width="0.1681%" height="15" fill="rgb(239,229,30)" fg:x="5859" fg:w="86"/><text x="11.7446%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.6197%" y="149" width="0.1622%" height="15" fill="rgb(219,65,33)" fg:x="5945" fg:w="83"/><text x="11.9127%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.7820%" y="149" width="0.1622%" height="15" fill="rgb(243,134,7)" fg:x="6028" fg:w="83"/><text x="12.0749%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="11.9520%" y="149" width="0.1681%" height="15" fill="rgb(216,177,54)" fg:x="6115" fg:w="86"/><text x="12.2450%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.84%)</title><rect x="12.1201%" y="149" width="0.8365%" height="15" fill="rgb(211,160,20)" fg:x="6201" fg:w="428"/><text x="12.4131%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.84%)</title><rect x="12.9566%" y="149" width="0.8365%" height="15" fill="rgb(239,85,39)" fg:x="6629" fg:w="428"/><text x="13.2496%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,014 instructions, 15.66%)</title><rect x="0.5336%" y="165" width="15.6637%" height="15" fill="rgb(232,125,22)" fg:x="273" fg:w="8014"/><text x="0.8266%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (380 instructions, 0.74%)</title><rect x="16.1973%" y="165" width="0.7427%" height="15" fill="rgb(244,57,34)" fg:x="8287" fg:w="380"/><text x="16.4902%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="16.9400%" y="133" width="0.0274%" height="15" fill="rgb(214,203,32)" fg:x="8667" fg:w="14"/><text x="17.2329%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="16.9673%" y="117" width="0.1153%" height="15" fill="rgb(207,58,43)" fg:x="8681" fg:w="59"/><text x="17.2603%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="17.0827%" y="117" width="0.6567%" height="15" fill="rgb(215,193,15)" fg:x="8740" fg:w="336"/><text x="17.3756%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="17.7394%" y="117" width="0.1525%" height="15" fill="rgb(232,15,44)" fg:x="9076" fg:w="78"/><text x="18.0324%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.42%)</title><rect x="16.9673%" y="133" width="1.4190%" height="15" fill="rgb(212,3,48)" fg:x="8681" fg:w="726"/><text x="17.2603%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (872 instructions, 1.70%)</title><rect x="16.9400%" y="149" width="1.7044%" height="15" fill="rgb(218,128,7)" fg:x="8667" fg:w="872"/><text x="17.2329%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="18.6443%" y="149" width="0.1622%" height="15" fill="rgb(226,216,39)" fg:x="9539" fg:w="83"/><text x="18.9373%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="18.8066%" y="133" width="0.0274%" height="15" fill="rgb(243,47,51)" fg:x="9622" fg:w="14"/><text x="19.0995%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="18.8339%" y="117" width="0.1153%" height="15" fill="rgb(241,183,40)" fg:x="9636" fg:w="59"/><text x="19.1269%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="18.9492%" y="117" width="0.6567%" height="15" fill="rgb(231,217,32)" fg:x="9695" fg:w="336"/><text x="19.2422%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="19.6060%" y="117" width="0.1525%" height="15" fill="rgb(229,61,38)" fg:x="10031" fg:w="78"/><text x="19.8989%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.42%)</title><rect x="18.8339%" y="133" width="1.4190%" height="15" fill="rgb(225,210,5)" fg:x="9636" fg:w="726"/><text x="19.1269%" y="143.50"></text></g><g><title>candid::types::internal::env_add (968 instructions, 1.89%)</title><rect x="18.8066%" y="149" width="1.8920%" height="15" fill="rgb(231,79,45)" fg:x="9622" fg:w="968"/><text x="19.0995%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="20.6986%" y="149" width="0.1622%" height="15" fill="rgb(224,100,7)" fg:x="10590" fg:w="83"/><text x="20.9915%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="20.8608%" y="133" width="0.0274%" height="15" fill="rgb(241,198,18)" fg:x="10673" fg:w="14"/><text x="21.1537%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="20.8881%" y="117" width="0.1153%" height="15" fill="rgb(252,97,53)" fg:x="10687" fg:w="59"/><text x="21.1811%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="21.0035%" y="117" width="0.6567%" height="15" fill="rgb(220,88,7)" fg:x="10746" fg:w="336"/><text x="21.2964%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="21.6602%" y="117" width="0.1525%" height="15" fill="rgb(213,176,14)" fg:x="11082" fg:w="78"/><text x="21.9532%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.42%)</title><rect x="20.8881%" y="133" width="1.4190%" height="15" fill="rgb(246,73,7)" fg:x="10687" fg:w="726"/><text x="21.1811%" y="143.50"></text></g><g><title>memcmp (537 instructions, 1.05%)</title><rect x="22.3071%" y="133" width="1.0496%" height="15" fill="rgb(245,64,36)" fg:x="11413" fg:w="537"/><text x="22.6001%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="23.3567%" y="117" width="0.1681%" height="15" fill="rgb(245,80,10)" fg:x="11950" fg:w="86"/><text x="23.6497%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="23.3567%" y="133" width="0.2365%" height="15" fill="rgb(232,107,50)" fg:x="11950" fg:w="121"/><text x="23.6497%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,593 instructions, 3.11%)</title><rect x="20.8608%" y="149" width="3.1136%" height="15" fill="rgb(253,3,0)" fg:x="10673" fg:w="1593"/><text x="21.1537%" y="159.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="23.9744%" y="101" width="0.1153%" height="15" fill="rgb(212,99,53)" fg:x="12266" fg:w="59"/><text x="24.2673%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="23.9744%" y="117" width="0.1837%" height="15" fill="rgb(249,111,54)" fg:x="12266" fg:w="94"/><text x="24.2673%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.62%)</title><rect x="23.9744%" y="133" width="0.6157%" height="15" fill="rgb(249,55,30)" fg:x="12266" fg:w="315"/><text x="24.2673%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.316 (18 instructions, 0.04%)</title><rect x="24.5900%" y="133" width="0.0352%" height="15" fill="rgb(237,47,42)" fg:x="12581" fg:w="18"/><text x="24.8830%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="24.6252%" y="133" width="0.0254%" height="15" fill="rgb(211,20,18)" fg:x="12599" fg:w="13"/><text x="24.9182%" y="143.50"></text></g><g><title>candid::types::internal::env_id (551 instructions, 1.08%)</title><rect x="23.9744%" y="149" width="1.0770%" height="15" fill="rgb(231,203,46)" fg:x="12266" fg:w="551"/><text x="24.2673%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,279 instructions, 8.36%)</title><rect x="16.9400%" y="165" width="8.3635%" height="15" fill="rgb(237,142,3)" fg:x="8667" fg:w="4279"/><text x="17.2329%" y="175.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="25.3034%" y="149" width="0.1036%" height="15" fill="rgb(241,107,1)" fg:x="12946" fg:w="53"/><text x="25.5964%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.26%)</title><rect x="25.4070%" y="133" width="0.2580%" height="15" fill="rgb(229,83,13)" fg:x="12999" fg:w="132"/><text x="25.7000%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.26%)</title><rect x="25.7334%" y="133" width="0.2580%" height="15" fill="rgb(241,91,40)" fg:x="13166" fg:w="132"/><text x="26.0264%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.65%)</title><rect x="25.4070%" y="149" width="0.6528%" height="15" fill="rgb(225,3,45)" fg:x="12999" fg:w="334"/><text x="25.7000%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="26.0598%" y="133" width="0.0665%" height="15" fill="rgb(244,223,14)" fg:x="13333" fg:w="34"/><text x="26.3528%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="26.1263%" y="133" width="0.0665%" height="15" fill="rgb(224,124,37)" fg:x="13367" fg:w="34"/><text x="26.4193%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1903 (18 instructions, 0.04%)</title><rect x="26.1928%" y="133" width="0.0352%" height="15" fill="rgb(251,171,30)" fg:x="13401" fg:w="18"/><text x="26.4857%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1903 (18 instructions, 0.04%)</title><rect x="26.2279%" y="133" width="0.0352%" height="15" fill="rgb(236,46,54)" fg:x="13419" fg:w="18"/><text x="26.5209%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="26.2631%" y="133" width="0.1603%" height="15" fill="rgb(245,213,5)" fg:x="13437" fg:w="82"/><text x="26.5561%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="26.4234%" y="133" width="0.1603%" height="15" fill="rgb(230,144,27)" fg:x="13519" fg:w="82"/><text x="26.7164%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.18%)</title><rect x="26.5837%" y="117" width="0.1798%" height="15" fill="rgb(220,86,6)" fg:x="13601" fg:w="92"/><text x="26.8766%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.34%)</title><rect x="26.5837%" y="133" width="0.3401%" height="15" fill="rgb(240,20,13)" fg:x="13601" fg:w="174"/><text x="26.8766%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="26.9238%" y="133" width="0.1368%" height="15" fill="rgb(217,89,34)" fg:x="13775" fg:w="70"/><text x="27.2167%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.0606%" y="117" width="0.0117%" height="15" fill="rgb(229,13,5)" fg:x="13845" fg:w="6"/><text x="27.3535%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.86%)</title><rect x="27.0606%" y="133" width="0.8600%" height="15" fill="rgb(244,67,35)" fg:x="13845" fg:w="440"/><text x="27.3535%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="27.9206%" y="117" width="0.1622%" height="15" fill="rgb(221,40,2)" fg:x="14285" fg:w="83"/><text x="28.2135%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="28.0828%" y="85" width="0.1310%" height="15" fill="rgb(237,157,21)" fg:x="14368" fg:w="67"/><text x="28.3758%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="28.0828%" y="101" width="0.1915%" height="15" fill="rgb(222,94,11)" fg:x="14368" fg:w="98"/><text x="28.3758%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="28.2743%" y="53" width="0.0215%" height="15" fill="rgb(249,113,6)" fg:x="14466" fg:w="11"/><text x="28.5673%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="28.2958%" y="37" width="0.0684%" height="15" fill="rgb(238,137,36)" fg:x="14477" fg:w="35"/><text x="28.5888%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="28.2958%" y="53" width="0.1290%" height="15" fill="rgb(210,102,26)" fg:x="14477" fg:w="66"/><text x="28.5888%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.29%)</title><rect x="28.2743%" y="69" width="0.2873%" height="15" fill="rgb(218,30,30)" fg:x="14466" fg:w="147"/><text x="28.5673%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="28.2743%" y="85" width="0.4144%" height="15" fill="rgb(214,67,26)" fg:x="14466" fg:w="212"/><text x="28.5673%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="28.2743%" y="101" width="0.4339%" height="15" fill="rgb(251,9,53)" fg:x="14466" fg:w="222"/><text x="28.5673%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.90%)</title><rect x="28.0828%" y="117" width="0.9010%" height="15" fill="rgb(228,204,25)" fg:x="14368" fg:w="461"/><text x="28.3758%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.35%)</title><rect x="27.9206%" y="133" width="1.3467%" height="15" fill="rgb(207,153,8)" fg:x="14285" fg:w="689"/><text x="28.2135%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="29.2672%" y="133" width="0.1857%" height="15" fill="rgb(242,9,16)" fg:x="14974" fg:w="95"/><text x="29.5602%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="29.4529%" y="133" width="0.1173%" height="15" fill="rgb(217,211,10)" fg:x="15069" fg:w="60"/><text x="29.7459%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="29.5702%" y="117" width="0.1173%" height="15" fill="rgb(219,228,52)" fg:x="15129" fg:w="60"/><text x="29.8632%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.24%)</title><rect x="29.5702%" y="133" width="0.2424%" height="15" fill="rgb(231,92,29)" fg:x="15129" fg:w="124"/><text x="29.8632%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="29.8126%" y="133" width="0.1622%" height="15" fill="rgb(232,8,23)" fg:x="15253" fg:w="83"/><text x="30.1055%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="29.9748%" y="117" width="0.1173%" height="15" fill="rgb(216,211,34)" fg:x="15336" fg:w="60"/><text x="30.2678%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.2171%" y="117" width="0.1173%" height="15" fill="rgb(236,151,0)" fg:x="15460" fg:w="60"/><text x="30.5101%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.4595%" y="117" width="0.1173%" height="15" fill="rgb(209,168,3)" fg:x="15584" fg:w="60"/><text x="30.7525%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.7019%" y="117" width="0.1173%" height="15" fill="rgb(208,129,28)" fg:x="15708" fg:w="60"/><text x="30.9948%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.9442%" y="117" width="0.1173%" height="15" fill="rgb(229,78,22)" fg:x="15832" fg:w="60"/><text x="31.2372%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.1866%" y="117" width="0.1173%" height="15" fill="rgb(228,187,13)" fg:x="15956" fg:w="60"/><text x="31.4796%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.4290%" y="117" width="0.1173%" height="15" fill="rgb(240,119,24)" fg:x="16080" fg:w="60"/><text x="31.7219%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.6713%" y="117" width="0.1173%" height="15" fill="rgb(209,194,42)" fg:x="16204" fg:w="60"/><text x="31.9643%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (992 instructions, 1.94%)</title><rect x="29.9748%" y="133" width="1.9389%" height="15" fill="rgb(247,200,46)" fg:x="15336" fg:w="992"/><text x="30.2678%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="31.9137%" y="101" width="0.2150%" height="15" fill="rgb(218,76,16)" fg:x="16328" fg:w="110"/><text x="32.2067%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="31.9137%" y="117" width="0.3030%" height="15" fill="rgb(225,21,48)" fg:x="16328" fg:w="155"/><text x="32.2067%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.47%)</title><rect x="31.9137%" y="133" width="0.4750%" height="15" fill="rgb(239,223,50)" fg:x="16328" fg:w="243"/><text x="32.2067%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.3886%" y="117" width="0.1173%" height="15" fill="rgb(244,45,21)" fg:x="16571" fg:w="60"/><text x="32.6816%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.6310%" y="117" width="0.1173%" height="15" fill="rgb(232,33,43)" fg:x="16695" fg:w="60"/><text x="32.9240%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.8734%" y="117" width="0.1173%" height="15" fill="rgb(209,8,3)" fg:x="16819" fg:w="60"/><text x="33.1663%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.1157%" y="117" width="0.1173%" height="15" fill="rgb(214,25,53)" fg:x="16943" fg:w="60"/><text x="33.4087%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.3581%" y="117" width="0.1173%" height="15" fill="rgb(254,186,54)" fg:x="17067" fg:w="60"/><text x="33.6511%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.6005%" y="117" width="0.1173%" height="15" fill="rgb(208,174,49)" fg:x="17191" fg:w="60"/><text x="33.8934%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.8428%" y="117" width="0.1173%" height="15" fill="rgb(233,191,51)" fg:x="17315" fg:w="60"/><text x="34.1358%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (868 instructions, 1.70%)</title><rect x="32.3886%" y="133" width="1.6965%" height="15" fill="rgb(222,134,10)" fg:x="16571" fg:w="868"/><text x="32.6816%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 instructions, 0.06%)</title><rect x="34.0852%" y="133" width="0.0567%" height="15" fill="rgb(230,226,20)" fg:x="17439" fg:w="29"/><text x="34.3781%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="34.1419%" y="133" width="0.1485%" height="15" fill="rgb(251,111,25)" fg:x="17468" fg:w="76"/><text x="34.4348%" y="143.50"></text></g><g><title>__rust_realloc (54 instructions, 0.11%)</title><rect x="34.2904%" y="101" width="0.1055%" height="15" fill="rgb(224,40,46)" fg:x="17544" fg:w="54"/><text x="34.5834%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 instructions, 0.19%)</title><rect x="34.2904%" y="117" width="0.1935%" height="15" fill="rgb(236,108,47)" fg:x="17544" fg:w="99"/><text x="34.5834%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.37%)</title><rect x="34.2904%" y="133" width="0.3655%" height="15" fill="rgb(234,93,0)" fg:x="17544" fg:w="187"/><text x="34.5834%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.43%)</title><rect x="34.6559%" y="133" width="0.4300%" height="15" fill="rgb(224,213,32)" fg:x="17731" fg:w="220"/><text x="34.9489%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.33%)</title><rect x="35.0859%" y="133" width="0.3342%" height="15" fill="rgb(251,11,48)" fg:x="17951" fg:w="171"/><text x="35.3789%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.10%)</title><rect x="35.4201%" y="133" width="0.1036%" height="15" fill="rgb(236,173,5)" fg:x="18122" fg:w="53"/><text x="35.7131%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="35.5237%" y="133" width="0.1681%" height="15" fill="rgb(230,95,12)" fg:x="18175" fg:w="86"/><text x="35.8167%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="35.6918%" y="133" width="0.1173%" height="15" fill="rgb(232,209,1)" fg:x="18261" fg:w="60"/><text x="35.9848%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (6,218 instructions, 12.15%)</title><rect x="26.0598%" y="149" width="12.1533%" height="15" fill="rgb(232,6,1)" fg:x="13333" fg:w="6218"/><text x="26.3528%" y="159.50">&lt;ic_principal::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.2132%" y="149" width="0.0254%" height="15" fill="rgb(210,224,50)" fg:x="19551" fg:w="13"/><text x="38.5061%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.2386%" y="149" width="0.0254%" height="15" fill="rgb(228,127,35)" fg:x="19564" fg:w="13"/><text x="38.5315%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.2640%" y="149" width="0.0254%" height="15" fill="rgb(245,102,45)" fg:x="19577" fg:w="13"/><text x="38.5569%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,924 instructions, 13.53%)</title><rect x="25.3034%" y="165" width="13.5332%" height="15" fill="rgb(214,1,49)" fg:x="12946" fg:w="6924"/><text x="25.5964%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="38.8367%" y="149" width="0.0274%" height="15" fill="rgb(226,163,40)" fg:x="19870" fg:w="14"/><text x="39.1296%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="38.8640%" y="133" width="0.1153%" height="15" fill="rgb(239,212,28)" fg:x="19884" fg:w="59"/><text x="39.1570%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="38.9793%" y="133" width="0.1837%" height="15" fill="rgb(220,20,13)" fg:x="19943" fg:w="94"/><text x="39.2723%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="39.1631%" y="133" width="0.3381%" height="15" fill="rgb(210,164,35)" fg:x="20037" fg:w="173"/><text x="39.4560%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.13%)</title><rect x="38.8640%" y="149" width="1.1317%" height="15" fill="rgb(248,109,41)" fg:x="19884" fg:w="579"/><text x="39.1570%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (725 instructions, 1.42%)</title><rect x="38.8367%" y="165" width="1.4170%" height="15" fill="rgb(238,23,50)" fg:x="19870" fg:w="725"/><text x="39.1296%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="40.2537%" y="165" width="0.1622%" height="15" fill="rgb(211,48,49)" fg:x="20595" fg:w="83"/><text x="40.5467%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="40.4159%" y="149" width="0.0274%" height="15" fill="rgb(223,36,21)" fg:x="20678" fg:w="14"/><text x="40.7089%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="40.4433%" y="133" width="0.1153%" height="15" fill="rgb(207,123,46)" fg:x="20692" fg:w="59"/><text x="40.7363%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="40.5586%" y="133" width="0.1837%" height="15" fill="rgb(240,218,32)" fg:x="20751" fg:w="94"/><text x="40.8516%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="40.7423%" y="133" width="0.3381%" height="15" fill="rgb(252,5,43)" fg:x="20845" fg:w="173"/><text x="41.0353%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.13%)</title><rect x="40.4433%" y="149" width="1.1317%" height="15" fill="rgb(252,84,19)" fg:x="20692" fg:w="579"/><text x="40.7363%" y="159.50"></text></g><g><title>candid::types::internal::env_add (834 instructions, 1.63%)</title><rect x="40.4159%" y="165" width="1.6301%" height="15" fill="rgb(243,152,39)" fg:x="20678" fg:w="834"/><text x="40.7089%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="42.0460%" y="165" width="0.1622%" height="15" fill="rgb(234,160,15)" fg:x="21512" fg:w="83"/><text x="42.3390%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="42.2082%" y="149" width="0.0274%" height="15" fill="rgb(237,34,20)" fg:x="21595" fg:w="14"/><text x="42.5012%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="42.2356%" y="133" width="0.1153%" height="15" fill="rgb(229,97,13)" fg:x="21609" fg:w="59"/><text x="42.5286%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="42.3509%" y="133" width="0.1837%" height="15" fill="rgb(234,71,50)" fg:x="21668" fg:w="94"/><text x="42.6439%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="42.5346%" y="133" width="0.3381%" height="15" fill="rgb(253,155,4)" fg:x="21762" fg:w="173"/><text x="42.8276%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.13%)</title><rect x="42.2356%" y="149" width="1.1317%" height="15" fill="rgb(222,185,37)" fg:x="21609" fg:w="579"/><text x="42.5286%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="43.3673%" y="149" width="0.1622%" height="15" fill="rgb(251,177,13)" fg:x="22188" fg:w="83"/><text x="43.6602%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="43.5295%" y="149" width="0.1818%" height="15" fill="rgb(250,179,40)" fg:x="22271" fg:w="93"/><text x="43.8225%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="43.7113%" y="133" width="0.1153%" height="15" fill="rgb(242,44,2)" fg:x="22364" fg:w="59"/><text x="44.0042%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="43.8266%" y="133" width="0.7369%" height="15" fill="rgb(216,177,13)" fg:x="22423" fg:w="377"/><text x="44.1196%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="44.5635%" y="133" width="0.1525%" height="15" fill="rgb(216,106,43)" fg:x="22800" fg:w="78"/><text x="44.8564%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="45.2104%" y="133" width="0.1153%" height="15" fill="rgb(216,183,2)" fg:x="23131" fg:w="59"/><text x="45.5034%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="45.3257%" y="133" width="0.1837%" height="15" fill="rgb(249,75,3)" fg:x="23190" fg:w="94"/><text x="45.6187%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="45.5095%" y="133" width="0.3381%" height="15" fill="rgb(219,67,39)" fg:x="23284" fg:w="173"/><text x="45.8024%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="46.3421%" y="133" width="0.1153%" height="15" fill="rgb(253,228,2)" fg:x="23710" fg:w="59"/><text x="46.6351%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="46.4574%" y="133" width="0.6567%" height="15" fill="rgb(235,138,27)" fg:x="23769" fg:w="336"/><text x="46.7504%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="47.1141%" y="133" width="0.1525%" height="15" fill="rgb(236,97,51)" fg:x="24105" fg:w="78"/><text x="47.4071%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,072 instructions, 4.05%)</title><rect x="43.7113%" y="149" width="4.0498%" height="15" fill="rgb(240,80,30)" fg:x="22364" fg:w="2072"/><text x="44.0042%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.13%)</title><rect x="47.7611%" y="149" width="0.1310%" height="15" fill="rgb(230,178,19)" fg:x="24436" fg:w="67"/><text x="48.0540%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="47.8920%" y="149" width="0.1505%" height="15" fill="rgb(210,190,27)" fg:x="24503" fg:w="77"/><text x="48.1850%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="48.0425%" y="133" width="0.1681%" height="15" fill="rgb(222,107,31)" fg:x="24580" fg:w="86"/><text x="48.3355%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="48.0425%" y="149" width="0.2365%" height="15" fill="rgb(216,127,34)" fg:x="24580" fg:w="121"/><text x="48.3355%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,808 instructions, 7.44%)</title><rect x="42.2082%" y="165" width="7.4429%" height="15" fill="rgb(234,116,52)" fg:x="21595" fg:w="3808"/><text x="42.5012%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="49.6511%" y="117" width="0.1153%" height="15" fill="rgb(222,124,15)" fg:x="25403" fg:w="59"/><text x="49.9441%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="49.6511%" y="133" width="0.1837%" height="15" fill="rgb(231,179,28)" fg:x="25403" fg:w="94"/><text x="49.9441%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="50.2668%" y="117" width="0.1153%" height="15" fill="rgb(226,93,45)" fg:x="25718" fg:w="59"/><text x="50.5598%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="50.2668%" y="133" width="0.1837%" height="15" fill="rgb(215,8,51)" fg:x="25718" fg:w="94"/><text x="50.5598%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (630 instructions, 1.23%)</title><rect x="49.6511%" y="149" width="1.2314%" height="15" fill="rgb(223,106,5)" fg:x="25403" fg:w="630"/><text x="49.9441%" y="159.50"></text></g><g><title>candid::types::internal::env_id (960 instructions, 1.88%)</title><rect x="49.6511%" y="165" width="1.8764%" height="15" fill="rgb(250,191,5)" fg:x="25403" fg:w="960"/><text x="49.9441%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="51.5275%" y="165" width="0.1036%" height="15" fill="rgb(242,132,44)" fg:x="26363" fg:w="53"/><text x="51.8204%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="51.6565%" y="149" width="0.3538%" height="15" fill="rgb(251,152,29)" fg:x="26429" fg:w="181"/><text x="51.9494%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (229 instructions, 0.45%)</title><rect x="51.6311%" y="165" width="0.4476%" height="15" fill="rgb(218,179,5)" fg:x="26416" fg:w="229"/><text x="51.9240%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="52.0787%" y="149" width="0.0665%" height="15" fill="rgb(227,67,19)" fg:x="26645" fg:w="34"/><text x="52.3716%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1903 (18 instructions, 0.04%)</title><rect x="52.1451%" y="149" width="0.0352%" height="15" fill="rgb(233,119,31)" fg:x="26679" fg:w="18"/><text x="52.4381%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1903 (18 instructions, 0.04%)</title><rect x="52.1803%" y="149" width="0.0352%" height="15" fill="rgb(241,120,22)" fg:x="26697" fg:w="18"/><text x="52.4733%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (169 instructions, 0.33%)</title><rect x="52.0787%" y="165" width="0.3303%" height="15" fill="rgb(224,102,30)" fg:x="26645" fg:w="169"/><text x="52.3716%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.4090%" y="165" width="0.0254%" height="15" fill="rgb(210,164,37)" fg:x="26814" fg:w="13"/><text x="52.7019%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.4344%" y="165" width="0.0254%" height="15" fill="rgb(226,191,16)" fg:x="26827" fg:w="13"/><text x="52.7273%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.4598%" y="165" width="0.0254%" height="15" fill="rgb(214,40,45)" fg:x="26840" fg:w="13"/><text x="52.7528%" y="175.50"></text></g><g><title>memcpy (440 instructions, 0.86%)</title><rect x="52.4852%" y="165" width="0.8600%" height="15" fill="rgb(244,29,26)" fg:x="26853" fg:w="440"/><text x="52.7782%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.04%)</title><rect x="53.3452%" y="133" width="0.0371%" height="15" fill="rgb(216,16,5)" fg:x="27293" fg:w="19"/><text x="53.6382%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.26%)</title><rect x="53.3823%" y="133" width="0.2580%" height="15" fill="rgb(249,76,35)" fg:x="27312" fg:w="132"/><text x="53.6753%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (80 instructions, 0.16%)</title><rect x="53.6403%" y="101" width="0.1564%" height="15" fill="rgb(207,11,44)" fg:x="27444" fg:w="80"/><text x="53.9333%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.47%)</title><rect x="53.6403%" y="117" width="0.4750%" height="15" fill="rgb(228,190,49)" fg:x="27444" fg:w="243"/><text x="53.9333%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (278 instructions, 0.54%)</title><rect x="53.6403%" y="133" width="0.5434%" height="15" fill="rgb(214,173,12)" fg:x="27444" fg:w="278"/><text x="53.9333%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="54.1837%" y="133" width="0.0254%" height="15" fill="rgb(218,26,35)" fg:x="27722" fg:w="13"/><text x="54.4767%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (504 instructions, 0.99%)</title><rect x="53.3452%" y="149" width="0.9851%" height="15" fill="rgb(220,200,19)" fg:x="27293" fg:w="504"/><text x="53.6382%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (553 instructions, 1.08%)</title><rect x="53.3452%" y="165" width="1.0809%" height="15" fill="rgb(239,95,49)" fg:x="27293" fg:w="553"/><text x="53.6382%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (25 instructions, 0.05%)</title><rect x="54.4261%" y="149" width="0.0489%" height="15" fill="rgb(235,85,53)" fg:x="27846" fg:w="25"/><text x="54.7190%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (100 instructions, 0.20%)</title><rect x="54.4749%" y="149" width="0.1955%" height="15" fill="rgb(233,133,31)" fg:x="27871" fg:w="100"/><text x="54.7679%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (224 instructions, 0.44%)</title><rect x="54.4261%" y="165" width="0.4378%" height="15" fill="rgb(218,25,20)" fg:x="27846" fg:w="224"/><text x="54.7190%" y="175.50"></text></g><g><title>memset (240 instructions, 0.47%)</title><rect x="54.8639%" y="165" width="0.4691%" height="15" fill="rgb(252,210,38)" fg:x="28070" fg:w="240"/><text x="55.1568%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.34%)</title><rect x="55.3330%" y="165" width="0.3440%" height="15" fill="rgb(242,134,21)" fg:x="28310" fg:w="176"/><text x="55.6259%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.99%)</title><rect x="55.6770%" y="165" width="0.9851%" height="15" fill="rgb(213,28,48)" fg:x="28486" fg:w="504"/><text x="55.9699%" y="175.50"></text></g><g><title>memset (139 instructions, 0.27%)</title><rect x="56.6620%" y="149" width="0.2717%" height="15" fill="rgb(250,196,2)" fg:x="28990" fg:w="139"/><text x="56.9550%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 9.75%)</title><rect x="56.9337%" y="149" width="9.7531%" height="15" fill="rgb(227,5,17)" fg:x="29129" fg:w="4990"/><text x="57.2267%" y="159.50">sha2::sha256..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,432 instructions, 10.62%)</title><rect x="56.6620%" y="165" width="10.6170%" height="15" fill="rgb(221,226,24)" fg:x="28990" fg:w="5432"/><text x="56.9550%" y="175.50">&lt;sha2::core_a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="67.2791%" y="165" width="0.1622%" height="15" fill="rgb(211,5,48)" fg:x="34422" fg:w="83"/><text x="67.5721%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="67.4413%" y="149" width="0.0274%" height="15" fill="rgb(219,150,6)" fg:x="34505" fg:w="14"/><text x="67.7343%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="67.4687%" y="117" width="0.2639%" height="15" fill="rgb(251,46,16)" fg:x="34519" fg:w="135"/><text x="67.7616%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 instructions, 0.33%)</title><rect x="67.4687%" y="133" width="0.3323%" height="15" fill="rgb(220,204,40)" fg:x="34519" fg:w="170"/><text x="67.7616%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="67.8009%" y="133" width="0.2639%" height="15" fill="rgb(211,85,2)" fg:x="34689" fg:w="135"/><text x="68.0939%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="68.1528%" y="117" width="0.1212%" height="15" fill="rgb(229,17,7)" fg:x="34869" fg:w="62"/><text x="68.4457%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="68.2739%" y="117" width="0.1310%" height="15" fill="rgb(239,72,28)" fg:x="34931" fg:w="67"/><text x="68.5669%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (277 instructions, 0.54%)</title><rect x="68.1528%" y="133" width="0.5414%" height="15" fill="rgb(230,47,54)" fg:x="34869" fg:w="277"/><text x="68.4457%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (662 instructions, 1.29%)</title><rect x="67.4687%" y="149" width="1.2939%" height="15" fill="rgb(214,50,8)" fg:x="34519" fg:w="662"/><text x="67.7616%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="68.7626%" y="149" width="0.0254%" height="15" fill="rgb(216,198,43)" fg:x="35181" fg:w="13"/><text x="69.0556%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="68.7880%" y="149" width="0.1818%" height="15" fill="rgb(234,20,35)" fg:x="35194" fg:w="93"/><text x="69.0810%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="68.9698%" y="117" width="0.0274%" height="15" fill="rgb(254,45,19)" fg:x="35287" fg:w="14"/><text x="69.2627%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.12%)</title><rect x="68.9698%" y="133" width="0.1231%" height="15" fill="rgb(219,14,44)" fg:x="35287" fg:w="63"/><text x="69.2627%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="69.0929%" y="133" width="0.1622%" height="15" fill="rgb(217,220,26)" fg:x="35350" fg:w="83"/><text x="69.3859%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="69.2551%" y="117" width="0.0274%" height="15" fill="rgb(213,158,28)" fg:x="35433" fg:w="14"/><text x="69.5481%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="69.2825%" y="101" width="0.1153%" height="15" fill="rgb(252,51,52)" fg:x="35447" fg:w="59"/><text x="69.5755%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="69.3978%" y="101" width="0.7369%" height="15" fill="rgb(246,89,16)" fg:x="35506" fg:w="377"/><text x="69.6908%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="70.1347%" y="101" width="0.1525%" height="15" fill="rgb(216,158,49)" fg:x="35883" fg:w="78"/><text x="70.4276%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.50%)</title><rect x="69.2825%" y="117" width="1.4991%" height="15" fill="rgb(236,107,19)" fg:x="35447" fg:w="767"/><text x="69.5755%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,009 instructions, 1.97%)</title><rect x="69.2551%" y="133" width="1.9721%" height="15" fill="rgb(228,185,30)" fg:x="35433" fg:w="1009"/><text x="69.5481%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="71.2273%" y="133" width="0.1622%" height="15" fill="rgb(246,134,8)" fg:x="36442" fg:w="83"/><text x="71.5202%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="71.3895%" y="133" width="0.1622%" height="15" fill="rgb(214,143,50)" fg:x="36525" fg:w="83"/><text x="71.6824%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="71.5517%" y="117" width="0.0274%" height="15" fill="rgb(228,75,8)" fg:x="36608" fg:w="14"/><text x="71.8447%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="71.5791%" y="101" width="0.1153%" height="15" fill="rgb(207,175,4)" fg:x="36622" fg:w="59"/><text x="71.8720%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="71.6944%" y="101" width="0.7369%" height="15" fill="rgb(205,108,24)" fg:x="36681" fg:w="377"/><text x="71.9874%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="72.4312%" y="101" width="0.1525%" height="15" fill="rgb(244,120,49)" fg:x="37058" fg:w="78"/><text x="72.7242%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.50%)</title><rect x="71.5791%" y="117" width="1.4991%" height="15" fill="rgb(223,47,38)" fg:x="36622" fg:w="767"/><text x="71.8720%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.32%)</title><rect x="73.0782%" y="117" width="1.3193%" height="15" fill="rgb(229,179,11)" fg:x="37389" fg:w="675"/><text x="73.3712%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="74.3975%" y="101" width="0.1681%" height="15" fill="rgb(231,122,1)" fg:x="38064" fg:w="86"/><text x="74.6905%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="74.3975%" y="117" width="0.2365%" height="15" fill="rgb(245,119,9)" fg:x="38064" fg:w="121"/><text x="74.6905%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,772 instructions, 3.46%)</title><rect x="71.5517%" y="133" width="3.4634%" height="15" fill="rgb(241,163,25)" fg:x="36608" fg:w="1772"/><text x="71.8447%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="75.0151%" y="85" width="0.1153%" height="15" fill="rgb(217,214,3)" fg:x="38380" fg:w="59"/><text x="75.3081%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="75.1305%" y="85" width="0.3205%" height="15" fill="rgb(240,86,28)" fg:x="38439" fg:w="164"/><text x="75.4234%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.56%)</title><rect x="75.0151%" y="101" width="0.5590%" height="15" fill="rgb(215,47,9)" fg:x="38380" fg:w="286"/><text x="75.3081%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.99%)</title><rect x="75.0151%" y="117" width="0.9910%" height="15" fill="rgb(252,25,45)" fg:x="38380" fg:w="507"/><text x="75.3081%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.316 (48 instructions, 0.09%)</title><rect x="76.0061%" y="117" width="0.0938%" height="15" fill="rgb(251,164,9)" fg:x="38887" fg:w="48"/><text x="76.2991%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="76.0999%" y="117" width="0.0254%" height="15" fill="rgb(233,194,0)" fg:x="38935" fg:w="13"/><text x="76.3929%" y="127.50"></text></g><g><title>candid::types::internal::env_id (773 instructions, 1.51%)</title><rect x="75.0151%" y="133" width="1.5109%" height="15" fill="rgb(249,111,24)" fg:x="38380" fg:w="773"/><text x="75.3081%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (4,017 instructions, 7.85%)</title><rect x="68.9698%" y="149" width="7.8514%" height="15" fill="rgb(250,223,3)" fg:x="35287" fg:w="4017"/><text x="69.2627%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="76.8211%" y="117" width="0.1622%" height="15" fill="rgb(236,178,37)" fg:x="39304" fg:w="83"/><text x="77.1141%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="76.8211%" y="133" width="0.2463%" height="15" fill="rgb(241,158,50)" fg:x="39304" fg:w="126"/><text x="77.1141%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.41%)</title><rect x="76.8211%" y="149" width="0.4065%" height="15" fill="rgb(213,121,41)" fg:x="39304" fg:w="208"/><text x="77.1141%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.06%)</title><rect x="77.2277%" y="133" width="0.0586%" height="15" fill="rgb(240,92,3)" fg:x="39512" fg:w="30"/><text x="77.5207%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="77.2863%" y="101" width="0.1603%" height="15" fill="rgb(205,123,3)" fg:x="39542" fg:w="82"/><text x="77.5793%" y="111.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.33%)</title><rect x="77.2863%" y="117" width="0.3323%" height="15" fill="rgb(205,97,47)" fg:x="39542" fg:w="170"/><text x="77.5793%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.6186%" y="117" width="0.1622%" height="15" fill="rgb(247,152,14)" fg:x="39712" fg:w="83"/><text x="77.9116%" y="127.50"></text></g><g><title>candid::types::internal::unroll (348 instructions, 0.68%)</title><rect x="77.2863%" y="133" width="0.6802%" height="15" fill="rgb(248,195,53)" fg:x="39542" fg:w="348"/><text x="77.5793%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="77.9665%" y="85" width="0.1153%" height="15" fill="rgb(226,201,16)" fg:x="39890" fg:w="59"/><text x="78.2595%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="78.0818%" y="85" width="0.3205%" height="15" fill="rgb(205,98,0)" fg:x="39949" fg:w="164"/><text x="78.3748%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.56%)</title><rect x="77.9665%" y="101" width="0.5590%" height="15" fill="rgb(214,191,48)" fg:x="39890" fg:w="286"/><text x="78.2595%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.99%)</title><rect x="77.9665%" y="117" width="0.9910%" height="15" fill="rgb(237,112,39)" fg:x="39890" fg:w="507"/><text x="78.2595%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.9574%" y="117" width="0.1622%" height="15" fill="rgb(247,203,27)" fg:x="40397" fg:w="83"/><text x="79.2504%" y="127.50"></text></g><g><title>memset (152 instructions, 0.30%)</title><rect x="79.1197%" y="117" width="0.2971%" height="15" fill="rgb(235,124,28)" fg:x="40480" fg:w="152"/><text x="79.4126%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 2.11%)</title><rect x="77.9665%" y="133" width="2.1070%" height="15" fill="rgb(208,207,46)" fg:x="39890" fg:w="1078"/><text x="78.2595%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.0735%" y="101" width="0.1622%" height="15" fill="rgb(234,176,4)" fg:x="40968" fg:w="83"/><text x="80.3665%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="80.0735%" y="117" width="0.2463%" height="15" fill="rgb(230,133,28)" fg:x="40968" fg:w="126"/><text x="80.3665%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.41%)</title><rect x="80.0735%" y="133" width="0.4065%" height="15" fill="rgb(211,137,40)" fg:x="40968" fg:w="208"/><text x="80.3665%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="80.4800%" y="85" width="0.1153%" height="15" fill="rgb(254,35,13)" fg:x="41176" fg:w="59"/><text x="80.7730%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="80.4800%" y="101" width="0.1837%" height="15" fill="rgb(225,49,51)" fg:x="41176" fg:w="94"/><text x="80.7730%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.62%)</title><rect x="80.4800%" y="117" width="0.6157%" height="15" fill="rgb(251,10,15)" fg:x="41176" fg:w="315"/><text x="80.7730%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.04%)</title><rect x="81.0957%" y="117" width="0.0450%" height="15" fill="rgb(228,207,15)" fg:x="41491" fg:w="23"/><text x="81.3887%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.1407%" y="117" width="0.0254%" height="15" fill="rgb(241,99,19)" fg:x="41514" fg:w="13"/><text x="81.4336%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.95%)</title><rect x="80.4800%" y="133" width="0.9519%" height="15" fill="rgb(207,104,49)" fg:x="41176" fg:w="487"/><text x="80.7730%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="81.4319%" y="85" width="0.1622%" height="15" fill="rgb(234,99,18)" fg:x="41663" fg:w="83"/><text x="81.7249%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="81.4319%" y="101" width="0.2463%" height="15" fill="rgb(213,191,49)" fg:x="41663" fg:w="126"/><text x="81.7249%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.40%)</title><rect x="81.4319%" y="117" width="0.4007%" height="15" fill="rgb(210,226,19)" fg:x="41663" fg:w="205"/><text x="81.7249%" y="127.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.52%)</title><rect x="81.4319%" y="133" width="0.5160%" height="15" fill="rgb(229,97,18)" fg:x="41663" fg:w="264"/><text x="81.7249%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.12%)</title><rect x="81.9479%" y="133" width="0.1212%" height="15" fill="rgb(211,167,15)" fg:x="41927" fg:w="62"/><text x="82.2409%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="82.0691%" y="101" width="0.1681%" height="15" fill="rgb(210,169,34)" fg:x="41989" fg:w="86"/><text x="82.3620%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.24%)</title><rect x="82.0691%" y="117" width="0.2365%" height="15" fill="rgb(241,121,31)" fg:x="41989" fg:w="121"/><text x="82.3620%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="82.3056%" y="117" width="0.1642%" height="15" fill="rgb(232,40,11)" fg:x="42110" fg:w="84"/><text x="82.5985%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.49%)</title><rect x="82.0691%" y="133" width="0.4886%" height="15" fill="rgb(205,86,26)" fg:x="41989" fg:w="250"/><text x="82.3620%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.5577%" y="133" width="0.0254%" height="15" fill="rgb(231,126,28)" fg:x="42239" fg:w="13"/><text x="82.8507%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,997 instructions, 5.86%)</title><rect x="77.2277%" y="149" width="5.8577%" height="15" fill="rgb(219,221,18)" fg:x="39512" fg:w="2997"/><text x="77.5207%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="83.0854%" y="149" width="0.0254%" height="15" fill="rgb(211,40,0)" fg:x="42509" fg:w="13"/><text x="83.3784%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="83.1108%" y="117" width="0.1622%" height="15" fill="rgb(239,85,43)" fg:x="42522" fg:w="83"/><text x="83.4038%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="83.1108%" y="133" width="0.2463%" height="15" fill="rgb(231,55,21)" fg:x="42522" fg:w="126"/><text x="83.4038%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="83.5115%" y="117" width="0.2150%" height="15" fill="rgb(225,184,43)" fg:x="42727" fg:w="110"/><text x="83.8045%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="83.5115%" y="133" width="0.3030%" height="15" fill="rgb(251,158,41)" fg:x="42727" fg:w="155"/><text x="83.8045%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 instructions, 0.88%)</title><rect x="83.1108%" y="149" width="0.8756%" height="15" fill="rgb(234,159,37)" fg:x="42522" fg:w="448"/><text x="83.4038%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.61%)</title><rect x="83.9865%" y="149" width="0.6098%" height="15" fill="rgb(216,204,22)" fg:x="42970" fg:w="312"/><text x="84.2794%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="84.5963%" y="149" width="0.2541%" height="15" fill="rgb(214,17,3)" fg:x="43282" fg:w="130"/><text x="84.8893%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="84.8504%" y="117" width="0.1622%" height="15" fill="rgb(212,111,17)" fg:x="43412" fg:w="83"/><text x="85.1433%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="84.8504%" y="133" width="0.2463%" height="15" fill="rgb(221,157,24)" fg:x="43412" fg:w="126"/><text x="85.1433%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.40%)</title><rect x="84.8504%" y="149" width="0.4007%" height="15" fill="rgb(252,16,13)" fg:x="43412" fg:w="205"/><text x="85.1433%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.2511%" y="149" width="0.1622%" height="15" fill="rgb(221,62,2)" fg:x="43617" fg:w="83"/><text x="85.5440%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.4133%" y="149" width="0.0997%" height="15" fill="rgb(247,87,22)" fg:x="43700" fg:w="51"/><text x="85.7063%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.5130%" y="149" width="0.0997%" height="15" fill="rgb(215,73,9)" fg:x="43751" fg:w="51"/><text x="85.8059%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="85.6126%" y="149" width="0.1173%" height="15" fill="rgb(207,175,33)" fg:x="43802" fg:w="60"/><text x="85.9056%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="85.7299%" y="101" width="0.1153%" height="15" fill="rgb(243,129,54)" fg:x="43862" fg:w="59"/><text x="86.0229%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="85.8452%" y="101" width="0.3205%" height="15" fill="rgb(227,119,45)" fg:x="43921" fg:w="164"/><text x="86.1382%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.56%)</title><rect x="85.7299%" y="117" width="0.5590%" height="15" fill="rgb(205,109,36)" fg:x="43862" fg:w="286"/><text x="86.0229%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.99%)</title><rect x="85.7299%" y="133" width="0.9910%" height="15" fill="rgb(205,6,39)" fg:x="43862" fg:w="507"/><text x="86.0229%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="86.7209%" y="101" width="0.1622%" height="15" fill="rgb(221,32,16)" fg:x="44369" fg:w="83"/><text x="87.0138%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="86.7209%" y="117" width="0.2463%" height="15" fill="rgb(228,144,50)" fg:x="44369" fg:w="126"/><text x="87.0138%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.40%)</title><rect x="86.7209%" y="133" width="0.4007%" height="15" fill="rgb(229,201,53)" fg:x="44369" fg:w="205"/><text x="87.0138%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (901 instructions, 1.76%)</title><rect x="85.7299%" y="149" width="1.7610%" height="15" fill="rgb(249,153,27)" fg:x="43862" fg:w="901"/><text x="86.0229%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="87.4910%" y="149" width="0.0684%" height="15" fill="rgb(227,106,25)" fg:x="44763" fg:w="35"/><text x="87.7839%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="87.5594%" y="149" width="0.1173%" height="15" fill="rgb(230,65,29)" fg:x="44798" fg:w="60"/><text x="87.8523%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (519 instructions, 1.01%)</title><rect x="87.6766%" y="149" width="1.0144%" height="15" fill="rgb(221,57,46)" fg:x="44858" fg:w="519"/><text x="87.9696%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (547 instructions, 1.07%)</title><rect x="88.6910%" y="149" width="1.0691%" height="15" fill="rgb(229,161,17)" fg:x="45377" fg:w="547"/><text x="88.9840%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.17%)</title><rect x="89.7602%" y="149" width="0.1681%" height="15" fill="rgb(222,213,11)" fg:x="45924" fg:w="86"/><text x="90.0531%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.26%)</title><rect x="89.9283%" y="149" width="0.2580%" height="15" fill="rgb(235,35,13)" fg:x="46010" fg:w="132"/><text x="90.2212%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.1863%" y="149" width="0.0254%" height="15" fill="rgb(233,158,34)" fg:x="46142" fg:w="13"/><text x="90.4792%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="90.2117%" y="149" width="0.3538%" height="15" fill="rgb(215,151,48)" fg:x="46155" fg:w="181"/><text x="90.5046%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="90.5654%" y="149" width="0.0137%" height="15" fill="rgb(229,84,14)" fg:x="46336" fg:w="7"/><text x="90.8584%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.5791%" y="149" width="0.0254%" height="15" fill="rgb(229,68,14)" fg:x="46343" fg:w="13"/><text x="90.8721%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="90.6045%" y="149" width="0.2541%" height="15" fill="rgb(243,106,26)" fg:x="46356" fg:w="130"/><text x="90.8975%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="90.8586%" y="149" width="0.1173%" height="15" fill="rgb(206,45,38)" fg:x="46486" fg:w="60"/><text x="91.1516%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (107 instructions, 0.21%)</title><rect x="90.9759%" y="149" width="0.2091%" height="15" fill="rgb(226,6,15)" fg:x="46546" fg:w="107"/><text x="91.2689%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,180 instructions, 27.72%)</title><rect x="67.4413%" y="165" width="27.7153%" height="15" fill="rgb(232,22,54)" fg:x="34505" fg:w="14180"/><text x="67.7343%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToNeuron::{{closure}} (50,402 instructions, 98.51%)</title><rect x="0.3714%" y="181" width="98.5126%" height="15" fill="rgb(229,222,32)" fg:x="190" fg:w="50402"/><text x="0.6643%" y="191.50">sha::__canister_method_principalToNeuron::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.8840%" y="181" width="0.0274%" height="15" fill="rgb(228,62,29)" fg:x="50592" fg:w="14"/><text x="99.1769%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="99.1771%" y="165" width="0.1212%" height="15" fill="rgb(251,103,34)" fg:x="50742" fg:w="62"/><text x="99.4701%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="99.2983%" y="165" width="0.1310%" height="15" fill="rgb(233,12,30)" fg:x="50804" fg:w="67"/><text x="99.5913%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (412 instructions, 0.81%)</title><rect x="98.9133%" y="181" width="0.8053%" height="15" fill="rgb(238,52,0)" fg:x="50607" fg:w="412"/><text x="99.2062%" y="191.50"></text></g><g><title>all (51,163 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(223,98,5)" fg:x="0" fg:w="51163"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (51,163 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(228,75,37)" fg:x="0" fg:w="51163"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>