<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="50870"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0472%" height="15" fill="rgb(209,133,39)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0472%" y="181" width="0.1632%" height="15" fill="rgb(232,100,14)" fg:x="24" fg:w="83"/><text x="0.3401%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2103%" y="181" width="0.1632%" height="15" fill="rgb(224,185,1)" fg:x="107" fg:w="83"/><text x="0.5033%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3735%" y="165" width="0.1632%" height="15" fill="rgb(223,139,8)" fg:x="190" fg:w="83"/><text x="0.6665%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5367%" y="149" width="0.1612%" height="15" fill="rgb(232,213,38)" fg:x="273" fg:w="82"/><text x="0.8296%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6979%" y="133" width="0.0118%" height="15" fill="rgb(207,94,22)" fg:x="355" fg:w="6"/><text x="0.9908%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.87%)</title><rect x="0.6979%" y="149" width="0.8708%" height="15" fill="rgb(219,183,54)" fg:x="355" fg:w="443"/><text x="0.9908%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="1.5687%" y="149" width="0.1868%" height="15" fill="rgb(216,185,54)" fg:x="798" fg:w="95"/><text x="1.8617%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7555%" y="149" width="0.1179%" height="15" fill="rgb(254,217,39)" fg:x="893" fg:w="60"/><text x="2.0484%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8734%" y="149" width="0.1179%" height="15" fill="rgb(240,178,23)" fg:x="953" fg:w="60"/><text x="2.1664%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9914%" y="149" width="0.1179%" height="15" fill="rgb(218,11,47)" fg:x="1013" fg:w="60"/><text x="2.2843%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.1093%" y="149" width="0.1179%" height="15" fill="rgb(218,51,51)" fg:x="1073" fg:w="60"/><text x="2.4023%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.2272%" y="149" width="0.1612%" height="15" fill="rgb(238,126,27)" fg:x="1133" fg:w="82"/><text x="2.5202%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="2.3884%" y="149" width="0.1376%" height="15" fill="rgb(249,202,22)" fg:x="1215" fg:w="70"/><text x="2.6814%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.5260%" y="133" width="0.0118%" height="15" fill="rgb(254,195,49)" fg:x="1285" fg:w="6"/><text x="2.8190%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.87%)</title><rect x="2.5260%" y="149" width="0.8708%" height="15" fill="rgb(208,123,14)" fg:x="1285" fg:w="443"/><text x="2.8190%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3969%" y="149" width="0.0374%" height="15" fill="rgb(224,200,8)" fg:x="1728" fg:w="19"/><text x="3.6899%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="3.4342%" y="133" width="0.1632%" height="15" fill="rgb(217,61,36)" fg:x="1747" fg:w="83"/><text x="3.7272%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.5974%" y="101" width="0.1317%" height="15" fill="rgb(206,35,45)" fg:x="1830" fg:w="67"/><text x="3.8904%" y="111.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="3.5974%" y="117" width="0.1887%" height="15" fill="rgb(217,65,33)" fg:x="1830" fg:w="96"/><text x="3.8904%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.7861%" y="69" width="0.0216%" height="15" fill="rgb(222,158,48)" fg:x="1926" fg:w="11"/><text x="4.0791%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.8077%" y="53" width="0.0688%" height="15" fill="rgb(254,2,54)" fg:x="1937" fg:w="35"/><text x="4.1007%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="3.8077%" y="69" width="0.1258%" height="15" fill="rgb(250,143,38)" fg:x="1937" fg:w="64"/><text x="4.1007%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="3.7861%" y="85" width="0.2831%" height="15" fill="rgb(248,25,0)" fg:x="1926" fg:w="144"/><text x="4.0791%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="3.7861%" y="101" width="0.4109%" height="15" fill="rgb(206,152,27)" fg:x="1926" fg:w="209"/><text x="4.0791%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="3.7861%" y="117" width="0.4305%" height="15" fill="rgb(240,77,30)" fg:x="1926" fg:w="219"/><text x="4.0791%" y="127.50"></text></g><g><title>core::fmt::write (457 instructions, 0.90%)</title><rect x="3.5974%" y="133" width="0.8984%" height="15" fill="rgb(231,5,3)" fg:x="1830" fg:w="457"/><text x="3.8904%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.33%)</title><rect x="3.4342%" y="149" width="1.3328%" height="15" fill="rgb(207,226,32)" fg:x="1747" fg:w="678"/><text x="3.7272%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="4.7671%" y="149" width="0.1868%" height="15" fill="rgb(222,207,47)" fg:x="2425" fg:w="95"/><text x="5.0600%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="4.9538%" y="149" width="0.1179%" height="15" fill="rgb(229,115,45)" fg:x="2520" fg:w="60"/><text x="5.2468%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="5.0718%" y="149" width="0.1494%" height="15" fill="rgb(224,191,6)" fg:x="2580" fg:w="76"/><text x="5.3647%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="5.2212%" y="149" width="0.1376%" height="15" fill="rgb(230,227,24)" fg:x="2656" fg:w="70"/><text x="5.5141%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.3588%" y="117" width="0.0118%" height="15" fill="rgb(228,80,19)" fg:x="2726" fg:w="6"/><text x="5.6517%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.87%)</title><rect x="5.3588%" y="133" width="0.8708%" height="15" fill="rgb(247,229,0)" fg:x="2726" fg:w="443"/><text x="5.6517%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.2296%" y="133" width="0.0374%" height="15" fill="rgb(237,194,15)" fg:x="3169" fg:w="19"/><text x="6.5226%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="6.2670%" y="117" width="0.1632%" height="15" fill="rgb(219,203,20)" fg:x="3188" fg:w="83"/><text x="6.5599%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="6.4301%" y="85" width="0.1317%" height="15" fill="rgb(234,128,8)" fg:x="3271" fg:w="67"/><text x="6.7231%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="6.4301%" y="101" width="0.1887%" height="15" fill="rgb(248,202,8)" fg:x="3271" fg:w="96"/><text x="6.7231%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.6188%" y="53" width="0.0216%" height="15" fill="rgb(206,104,37)" fg:x="3367" fg:w="11"/><text x="6.9118%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.6405%" y="37" width="0.0688%" height="15" fill="rgb(223,8,27)" fg:x="3378" fg:w="35"/><text x="6.9334%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="6.6405%" y="53" width="0.1258%" height="15" fill="rgb(216,217,28)" fg:x="3378" fg:w="64"/><text x="6.9334%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="6.6188%" y="69" width="0.2831%" height="15" fill="rgb(249,199,1)" fg:x="3367" fg:w="144"/><text x="6.9118%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="6.6188%" y="85" width="0.4109%" height="15" fill="rgb(240,85,17)" fg:x="3367" fg:w="209"/><text x="6.9118%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="6.6188%" y="101" width="0.4305%" height="15" fill="rgb(206,108,45)" fg:x="3367" fg:w="219"/><text x="6.9118%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.90%)</title><rect x="6.4301%" y="117" width="0.8984%" height="15" fill="rgb(245,210,41)" fg:x="3271" fg:w="457"/><text x="6.7231%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.33%)</title><rect x="6.2670%" y="133" width="1.3328%" height="15" fill="rgb(206,13,37)" fg:x="3188" fg:w="678"/><text x="6.5599%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="7.5998%" y="133" width="0.1868%" height="15" fill="rgb(250,61,18)" fg:x="3866" fg:w="95"/><text x="7.8927%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="7.7865%" y="133" width="0.1179%" height="15" fill="rgb(235,172,48)" fg:x="3961" fg:w="60"/><text x="8.0795%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="7.9045%" y="117" width="0.1612%" height="15" fill="rgb(249,201,17)" fg:x="4021" fg:w="82"/><text x="8.1974%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.0657%" y="117" width="0.1868%" height="15" fill="rgb(219,208,6)" fg:x="4103" fg:w="95"/><text x="8.3586%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.2524%" y="117" width="0.1494%" height="15" fill="rgb(248,31,23)" fg:x="4198" fg:w="76"/><text x="8.5454%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.66%)</title><rect x="7.9045%" y="133" width="0.6585%" height="15" fill="rgb(245,15,42)" fg:x="4021" fg:w="335"/><text x="8.1974%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.5630%" y="133" width="0.1632%" height="15" fill="rgb(222,217,39)" fg:x="4356" fg:w="83"/><text x="8.8560%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="8.7262%" y="117" width="0.1612%" height="15" fill="rgb(210,219,27)" fg:x="4439" fg:w="82"/><text x="9.0191%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.19%)</title><rect x="8.8874%" y="117" width="0.1868%" height="15" fill="rgb(252,166,36)" fg:x="4521" fg:w="95"/><text x="9.1803%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.0741%" y="117" width="0.1494%" height="15" fill="rgb(245,132,34)" fg:x="4616" fg:w="76"/><text x="9.3671%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.65%)</title><rect x="8.7262%" y="133" width="0.6487%" height="15" fill="rgb(236,54,3)" fg:x="4439" fg:w="330"/><text x="9.0191%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,333 instructions, 4.59%)</title><rect x="5.3588%" y="149" width="4.5862%" height="15" fill="rgb(241,173,43)" fg:x="2726" fg:w="2333"/><text x="5.6517%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.9450%" y="149" width="0.1494%" height="15" fill="rgb(215,190,9)" fg:x="5059" fg:w="76"/><text x="10.2379%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.0944%" y="149" width="0.0295%" height="15" fill="rgb(242,101,16)" fg:x="5135" fg:w="15"/><text x="10.3873%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.1238%" y="149" width="0.0295%" height="15" fill="rgb(223,190,21)" fg:x="5150" fg:w="15"/><text x="10.4168%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="10.1533%" y="149" width="0.0295%" height="15" fill="rgb(215,228,25)" fg:x="5165" fg:w="15"/><text x="10.4463%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="10.1828%" y="149" width="0.0138%" height="15" fill="rgb(225,36,22)" fg:x="5180" fg:w="7"/><text x="10.4758%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.1966%" y="133" width="0.1632%" height="15" fill="rgb(251,106,46)" fg:x="5187" fg:w="83"/><text x="10.4895%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.35%)</title><rect x="10.1966%" y="149" width="0.3519%" height="15" fill="rgb(208,90,1)" fg:x="5187" fg:w="179"/><text x="10.4895%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.5485%" y="117" width="0.1632%" height="15" fill="rgb(243,10,4)" fg:x="5366" fg:w="83"/><text x="10.8414%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="10.5485%" y="133" width="0.2477%" height="15" fill="rgb(212,137,27)" fg:x="5366" fg:w="126"/><text x="10.8414%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.41%)</title><rect x="10.5485%" y="149" width="0.4148%" height="15" fill="rgb(231,220,49)" fg:x="5366" fg:w="211"/><text x="10.8414%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.9632%" y="133" width="0.1632%" height="15" fill="rgb(237,96,20)" fg:x="5577" fg:w="83"/><text x="11.2562%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.35%)</title><rect x="10.9632%" y="149" width="0.3519%" height="15" fill="rgb(239,229,30)" fg:x="5577" fg:w="179"/><text x="11.2562%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.3151%" y="149" width="0.1632%" height="15" fill="rgb(219,65,33)" fg:x="5756" fg:w="83"/><text x="11.6081%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="11.4783%" y="149" width="0.1750%" height="15" fill="rgb(243,134,7)" fg:x="5839" fg:w="89"/><text x="11.7712%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.6532%" y="149" width="0.1632%" height="15" fill="rgb(216,177,54)" fg:x="5928" fg:w="83"/><text x="11.9462%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.8164%" y="149" width="0.1632%" height="15" fill="rgb(211,160,20)" fg:x="6011" fg:w="83"/><text x="12.1094%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="11.9874%" y="149" width="0.1750%" height="15" fill="rgb(239,85,39)" fg:x="6098" fg:w="89"/><text x="12.2804%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.77%)</title><rect x="12.1624%" y="149" width="0.7706%" height="15" fill="rgb(232,125,22)" fg:x="6187" fg:w="392"/><text x="12.4553%" y="159.50"></text></g><g><title>memcpy (392 instructions, 0.77%)</title><rect x="12.9330%" y="149" width="0.7706%" height="15" fill="rgb(244,57,34)" fg:x="6579" fg:w="392"/><text x="13.2259%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.99%)</title><rect x="13.7036%" y="149" width="0.9908%" height="15" fill="rgb(214,203,32)" fg:x="6971" fg:w="504"/><text x="13.9965%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (8,496 instructions, 16.70%)</title><rect x="0.5367%" y="165" width="16.7014%" height="15" fill="rgb(207,58,43)" fg:x="273" fg:w="8496"/><text x="0.8296%" y="175.50">candid::de::IDLDeseria..</text></g><g><title>memcpy (344 instructions, 0.68%)</title><rect x="17.2381%" y="165" width="0.6762%" height="15" fill="rgb(215,193,15)" fg:x="8769" fg:w="344"/><text x="17.5310%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="17.9143%" y="133" width="0.0138%" height="15" fill="rgb(232,15,44)" fg:x="9113" fg:w="7"/><text x="18.2073%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="17.9281%" y="117" width="0.1160%" height="15" fill="rgb(212,3,48)" fg:x="9120" fg:w="59"/><text x="18.2210%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="18.0440%" y="117" width="0.6605%" height="15" fill="rgb(218,128,7)" fg:x="9179" fg:w="336"/><text x="18.3370%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="18.7045%" y="117" width="0.1533%" height="15" fill="rgb(226,216,39)" fg:x="9515" fg:w="78"/><text x="18.9975%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.43%)</title><rect x="17.9281%" y="133" width="1.4272%" height="15" fill="rgb(243,47,51)" fg:x="9120" fg:w="726"/><text x="18.2210%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (851 instructions, 1.67%)</title><rect x="17.9143%" y="149" width="1.6729%" height="15" fill="rgb(241,183,40)" fg:x="9113" fg:w="851"/><text x="18.2073%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="19.5872%" y="149" width="0.1632%" height="15" fill="rgb(231,217,32)" fg:x="9964" fg:w="83"/><text x="19.8802%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="19.7503%" y="133" width="0.0138%" height="15" fill="rgb(229,61,38)" fg:x="10047" fg:w="7"/><text x="20.0433%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="19.7641%" y="117" width="0.1160%" height="15" fill="rgb(225,210,5)" fg:x="10054" fg:w="59"/><text x="20.0571%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="19.8801%" y="117" width="0.6605%" height="15" fill="rgb(231,79,45)" fg:x="10113" fg:w="336"/><text x="20.1731%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="20.5406%" y="117" width="0.1533%" height="15" fill="rgb(224,100,7)" fg:x="10449" fg:w="78"/><text x="20.8336%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.43%)</title><rect x="19.7641%" y="133" width="1.4272%" height="15" fill="rgb(241,198,18)" fg:x="10054" fg:w="726"/><text x="20.0571%" y="143.50"></text></g><g><title>candid::types::internal::env_add (944 instructions, 1.86%)</title><rect x="19.7503%" y="149" width="1.8557%" height="15" fill="rgb(252,97,53)" fg:x="10047" fg:w="944"/><text x="20.0433%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="21.6061%" y="149" width="0.1632%" height="15" fill="rgb(220,88,7)" fg:x="10991" fg:w="83"/><text x="21.8990%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="21.7692%" y="133" width="0.0138%" height="15" fill="rgb(213,176,14)" fg:x="11074" fg:w="7"/><text x="22.0622%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="21.7830%" y="117" width="0.1160%" height="15" fill="rgb(246,73,7)" fg:x="11081" fg:w="59"/><text x="22.0759%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="21.8990%" y="117" width="0.6605%" height="15" fill="rgb(245,64,36)" fg:x="11140" fg:w="336"/><text x="22.1919%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="22.5595%" y="117" width="0.1533%" height="15" fill="rgb(245,80,10)" fg:x="11476" fg:w="78"/><text x="22.8524%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.43%)</title><rect x="21.7830%" y="133" width="1.4272%" height="15" fill="rgb(232,107,50)" fg:x="11081" fg:w="726"/><text x="22.0759%" y="143.50"></text></g><g><title>memcmp (537 instructions, 1.06%)</title><rect x="23.2101%" y="133" width="1.0556%" height="15" fill="rgb(253,3,0)" fg:x="11807" fg:w="537"/><text x="23.5031%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="24.2658%" y="117" width="0.1750%" height="15" fill="rgb(212,99,53)" fg:x="12344" fg:w="89"/><text x="24.5587%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.26%)</title><rect x="24.2658%" y="133" width="0.2615%" height="15" fill="rgb(249,111,54)" fg:x="12344" fg:w="133"/><text x="24.5587%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,582 instructions, 3.11%)</title><rect x="21.7692%" y="149" width="3.1099%" height="15" fill="rgb(249,55,30)" fg:x="11074" fg:w="1582"/><text x="22.0622%" y="159.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="24.8791%" y="101" width="0.1160%" height="15" fill="rgb(237,47,42)" fg:x="12656" fg:w="59"/><text x="25.1721%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.20%)</title><rect x="24.8791%" y="117" width="0.2005%" height="15" fill="rgb(211,20,18)" fg:x="12656" fg:w="102"/><text x="25.1721%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.63%)</title><rect x="24.8791%" y="133" width="0.6350%" height="15" fill="rgb(231,203,46)" fg:x="12656" fg:w="323"/><text x="25.1721%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.303 (34 instructions, 0.07%)</title><rect x="25.5141%" y="133" width="0.0668%" height="15" fill="rgb(237,142,3)" fg:x="12979" fg:w="34"/><text x="25.8070%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="25.5809%" y="133" width="0.0256%" height="15" fill="rgb(241,107,1)" fg:x="13013" fg:w="13"/><text x="25.8739%" y="143.50"></text></g><g><title>candid::types::internal::env_id (555 instructions, 1.09%)</title><rect x="24.8791%" y="149" width="1.0910%" height="15" fill="rgb(229,83,13)" fg:x="12656" fg:w="555"/><text x="25.1721%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,227 instructions, 8.31%)</title><rect x="17.9143%" y="165" width="8.3094%" height="15" fill="rgb(241,91,40)" fg:x="9113" fg:w="4227"/><text x="18.2073%" y="175.50">candid::ty..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.10%)</title><rect x="26.2237%" y="149" width="0.0963%" height="15" fill="rgb(225,3,45)" fg:x="13340" fg:w="49"/><text x="26.5167%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="26.3200%" y="117" width="0.0531%" height="15" fill="rgb(244,223,14)" fg:x="13389" fg:w="27"/><text x="26.6130%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="26.3200%" y="133" width="0.2791%" height="15" fill="rgb(224,124,37)" fg:x="13389" fg:w="142"/><text x="26.6130%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="26.6857%" y="117" width="0.0531%" height="15" fill="rgb(251,171,30)" fg:x="13575" fg:w="27"/><text x="26.9786%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="26.6857%" y="133" width="0.2791%" height="15" fill="rgb(236,46,54)" fg:x="13575" fg:w="142"/><text x="26.9786%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (372 instructions, 0.73%)</title><rect x="26.3200%" y="149" width="0.7313%" height="15" fill="rgb(245,213,5)" fg:x="13389" fg:w="372"/><text x="26.6130%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="27.0513%" y="133" width="0.0688%" height="15" fill="rgb(230,144,27)" fg:x="13761" fg:w="35"/><text x="27.3443%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="27.1201%" y="133" width="0.0688%" height="15" fill="rgb(220,86,6)" fg:x="13796" fg:w="35"/><text x="27.4131%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="27.1889%" y="133" width="0.0668%" height="15" fill="rgb(240,20,13)" fg:x="13831" fg:w="34"/><text x="27.4819%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="27.2557%" y="133" width="0.0668%" height="15" fill="rgb(217,89,34)" fg:x="13865" fg:w="34"/><text x="27.5487%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="27.3226%" y="133" width="0.1632%" height="15" fill="rgb(229,13,5)" fg:x="13899" fg:w="83"/><text x="27.6156%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="27.4857%" y="133" width="0.1612%" height="15" fill="rgb(244,67,35)" fg:x="13982" fg:w="82"/><text x="27.7787%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.18%)</title><rect x="27.6469%" y="133" width="0.1809%" height="15" fill="rgb(221,40,2)" fg:x="14064" fg:w="92"/><text x="27.9399%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.14%)</title><rect x="27.8278%" y="133" width="0.1376%" height="15" fill="rgb(237,157,21)" fg:x="14156" fg:w="70"/><text x="28.1208%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.9654%" y="117" width="0.0118%" height="15" fill="rgb(222,94,11)" fg:x="14226" fg:w="6"/><text x="28.2584%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.87%)</title><rect x="27.9654%" y="133" width="0.8708%" height="15" fill="rgb(249,113,6)" fg:x="14226" fg:w="443"/><text x="28.2584%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="28.8362%" y="117" width="0.1632%" height="15" fill="rgb(238,137,36)" fg:x="14669" fg:w="83"/><text x="29.1292%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="28.9994%" y="85" width="0.1317%" height="15" fill="rgb(210,102,26)" fg:x="14752" fg:w="67"/><text x="29.2924%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.19%)</title><rect x="28.9994%" y="101" width="0.1887%" height="15" fill="rgb(218,30,30)" fg:x="14752" fg:w="96"/><text x="29.2924%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="29.1881%" y="53" width="0.0216%" height="15" fill="rgb(214,67,26)" fg:x="14848" fg:w="11"/><text x="29.4811%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="29.2098%" y="37" width="0.0688%" height="15" fill="rgb(251,9,53)" fg:x="14859" fg:w="35"/><text x="29.5027%" y="47.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.13%)</title><rect x="29.2098%" y="53" width="0.1258%" height="15" fill="rgb(228,204,25)" fg:x="14859" fg:w="64"/><text x="29.5027%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.28%)</title><rect x="29.1881%" y="69" width="0.2831%" height="15" fill="rgb(207,153,8)" fg:x="14848" fg:w="144"/><text x="29.4811%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.41%)</title><rect x="29.1881%" y="85" width="0.4109%" height="15" fill="rgb(242,9,16)" fg:x="14848" fg:w="209"/><text x="29.4811%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.43%)</title><rect x="29.1881%" y="101" width="0.4305%" height="15" fill="rgb(217,211,10)" fg:x="14848" fg:w="219"/><text x="29.4811%" y="111.50"></text></g><g><title>core::fmt::write (457 instructions, 0.90%)</title><rect x="28.9994%" y="117" width="0.8984%" height="15" fill="rgb(219,228,52)" fg:x="14752" fg:w="457"/><text x="29.2924%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (678 instructions, 1.33%)</title><rect x="28.8362%" y="133" width="1.3328%" height="15" fill="rgb(231,92,29)" fg:x="14669" fg:w="678"/><text x="29.1292%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.19%)</title><rect x="30.1691%" y="133" width="0.1868%" height="15" fill="rgb(232,8,23)" fg:x="15347" fg:w="95"/><text x="30.4620%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="30.3558%" y="133" width="0.1179%" height="15" fill="rgb(216,211,34)" fg:x="15442" fg:w="60"/><text x="30.6488%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.4738%" y="133" width="0.1671%" height="15" fill="rgb(236,151,0)" fg:x="15502" fg:w="85"/><text x="30.7667%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="30.6408%" y="133" width="0.1632%" height="15" fill="rgb(209,168,3)" fg:x="15587" fg:w="83"/><text x="30.9338%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.8040%" y="133" width="0.1671%" height="15" fill="rgb(208,129,28)" fg:x="15670" fg:w="85"/><text x="31.0970%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="30.9711%" y="133" width="0.1671%" height="15" fill="rgb(229,78,22)" fg:x="15755" fg:w="85"/><text x="31.2641%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.1382%" y="133" width="0.1671%" height="15" fill="rgb(228,187,13)" fg:x="15840" fg:w="85"/><text x="31.4312%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.3053%" y="133" width="0.1671%" height="15" fill="rgb(240,119,24)" fg:x="15925" fg:w="85"/><text x="31.5983%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.4724%" y="133" width="0.1671%" height="15" fill="rgb(209,194,42)" fg:x="16010" fg:w="85"/><text x="31.7653%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.6395%" y="133" width="0.1671%" height="15" fill="rgb(247,200,46)" fg:x="16095" fg:w="85"/><text x="31.9324%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.8066%" y="133" width="0.1671%" height="15" fill="rgb(218,76,16)" fg:x="16180" fg:w="85"/><text x="32.0995%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="31.9737%" y="133" width="0.1671%" height="15" fill="rgb(225,21,48)" fg:x="16265" fg:w="85"/><text x="32.2666%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.22%)</title><rect x="32.1408%" y="101" width="0.2182%" height="15" fill="rgb(239,223,50)" fg:x="16350" fg:w="111"/><text x="32.4337%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.31%)</title><rect x="32.1408%" y="117" width="0.3067%" height="15" fill="rgb(244,45,21)" fg:x="16350" fg:w="156"/><text x="32.4337%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.48%)</title><rect x="32.1408%" y="133" width="0.4777%" height="15" fill="rgb(232,33,43)" fg:x="16350" fg:w="243"/><text x="32.4337%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.6184%" y="133" width="0.1671%" height="15" fill="rgb(209,8,3)" fg:x="16593" fg:w="85"/><text x="32.9114%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.7855%" y="133" width="0.1671%" height="15" fill="rgb(214,25,53)" fg:x="16678" fg:w="85"/><text x="33.0785%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="32.9526%" y="133" width="0.1671%" height="15" fill="rgb(254,186,54)" fg:x="16763" fg:w="85"/><text x="33.2456%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="33.1197%" y="133" width="0.1671%" height="15" fill="rgb(208,174,49)" fg:x="16848" fg:w="85"/><text x="33.4127%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="33.2868%" y="133" width="0.1671%" height="15" fill="rgb(233,191,51)" fg:x="16933" fg:w="85"/><text x="33.5798%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="33.4539%" y="133" width="0.1671%" height="15" fill="rgb(222,134,10)" fg:x="17018" fg:w="85"/><text x="33.7469%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (85 instructions, 0.17%)</title><rect x="33.6210%" y="133" width="0.1671%" height="15" fill="rgb(230,226,20)" fg:x="17103" fg:w="85"/><text x="33.9140%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (34 instructions, 0.07%)</title><rect x="33.7881%" y="133" width="0.0668%" height="15" fill="rgb(251,111,25)" fg:x="17188" fg:w="34"/><text x="34.0811%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="33.8549%" y="133" width="0.1494%" height="15" fill="rgb(224,40,46)" fg:x="17222" fg:w="76"/><text x="34.1479%" y="143.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="34.0043%" y="133" width="0.0649%" height="15" fill="rgb(236,108,47)" fg:x="17298" fg:w="33"/><text x="34.2973%" y="143.50"></text></g><g><title>__rust_realloc (55 instructions, 0.11%)</title><rect x="34.0692%" y="101" width="0.1081%" height="15" fill="rgb(234,93,0)" fg:x="17331" fg:w="55"/><text x="34.3622%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (100 instructions, 0.20%)</title><rect x="34.0692%" y="117" width="0.1966%" height="15" fill="rgb(224,213,32)" fg:x="17331" fg:w="100"/><text x="34.3622%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.37%)</title><rect x="34.0692%" y="133" width="0.3676%" height="15" fill="rgb(251,11,48)" fg:x="17331" fg:w="187"/><text x="34.3622%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.43%)</title><rect x="34.4368%" y="133" width="0.4325%" height="15" fill="rgb(236,173,5)" fg:x="17518" fg:w="220"/><text x="34.7298%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.34%)</title><rect x="34.8693%" y="133" width="0.3362%" height="15" fill="rgb(230,95,12)" fg:x="17738" fg:w="171"/><text x="35.1622%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="35.2054%" y="133" width="0.1750%" height="15" fill="rgb(232,209,1)" fg:x="17909" fg:w="89"/><text x="35.4984%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="35.3804%" y="133" width="0.1179%" height="15" fill="rgb(232,6,1)" fg:x="17998" fg:w="60"/><text x="35.6734%" y="143.50"></text></g><g><title>&lt;ic_principal::Principal as serde::de::Deserialize&gt;::deserialize (5,557 instructions, 10.92%)</title><rect x="27.0513%" y="149" width="10.9239%" height="15" fill="rgb(210,224,50)" fg:x="13761" fg:w="5557"/><text x="27.3443%" y="159.50">&lt;ic_principal..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="37.9752%" y="149" width="0.0256%" height="15" fill="rgb(228,127,35)" fg:x="19318" fg:w="13"/><text x="38.2682%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.0008%" y="149" width="0.0256%" height="15" fill="rgb(245,102,45)" fg:x="19331" fg:w="13"/><text x="38.2938%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="38.0263%" y="149" width="0.0256%" height="15" fill="rgb(214,1,49)" fg:x="19344" fg:w="13"/><text x="38.3193%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,296 instructions, 12.38%)</title><rect x="26.2237%" y="165" width="12.3766%" height="15" fill="rgb(226,163,40)" fg:x="13340" fg:w="6296"/><text x="26.5167%" y="175.50">candid::de::IDL..</text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="38.6004%" y="149" width="0.0138%" height="15" fill="rgb(239,212,28)" fg:x="19636" fg:w="7"/><text x="38.8933%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="38.6141%" y="133" width="0.1160%" height="15" fill="rgb(220,20,13)" fg:x="19643" fg:w="59"/><text x="38.9071%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="38.7301%" y="133" width="0.1848%" height="15" fill="rgb(210,164,35)" fg:x="19702" fg:w="94"/><text x="39.0231%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="38.9149%" y="133" width="0.3401%" height="15" fill="rgb(248,109,41)" fg:x="19796" fg:w="173"/><text x="39.2078%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.14%)</title><rect x="38.6141%" y="149" width="1.1382%" height="15" fill="rgb(238,23,50)" fg:x="19643" fg:w="579"/><text x="38.9071%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (704 instructions, 1.38%)</title><rect x="38.6004%" y="165" width="1.3839%" height="15" fill="rgb(211,48,49)" fg:x="19636" fg:w="704"/><text x="38.8933%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="39.9843%" y="165" width="0.1632%" height="15" fill="rgb(223,36,21)" fg:x="20340" fg:w="83"/><text x="40.2772%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="40.1474%" y="149" width="0.0138%" height="15" fill="rgb(207,123,46)" fg:x="20423" fg:w="7"/><text x="40.4404%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="40.1612%" y="133" width="0.1160%" height="15" fill="rgb(240,218,32)" fg:x="20430" fg:w="59"/><text x="40.4542%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="40.2772%" y="133" width="0.1848%" height="15" fill="rgb(252,5,43)" fg:x="20489" fg:w="94"/><text x="40.5701%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="40.4620%" y="133" width="0.3401%" height="15" fill="rgb(252,84,19)" fg:x="20583" fg:w="173"/><text x="40.7549%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.14%)</title><rect x="40.1612%" y="149" width="1.1382%" height="15" fill="rgb(243,152,39)" fg:x="20430" fg:w="579"/><text x="40.4542%" y="159.50"></text></g><g><title>candid::types::internal::env_add (797 instructions, 1.57%)</title><rect x="40.1474%" y="165" width="1.5667%" height="15" fill="rgb(234,160,15)" fg:x="20423" fg:w="797"/><text x="40.4404%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="41.7142%" y="165" width="0.1632%" height="15" fill="rgb(237,34,20)" fg:x="21220" fg:w="83"/><text x="42.0071%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="41.8773%" y="149" width="0.0138%" height="15" fill="rgb(229,97,13)" fg:x="21303" fg:w="7"/><text x="42.1703%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="41.8911%" y="133" width="0.1160%" height="15" fill="rgb(234,71,50)" fg:x="21310" fg:w="59"/><text x="42.1841%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="42.0071%" y="133" width="0.1848%" height="15" fill="rgb(253,155,4)" fg:x="21369" fg:w="94"/><text x="42.3000%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="42.1919%" y="133" width="0.3401%" height="15" fill="rgb(222,185,37)" fg:x="21463" fg:w="173"/><text x="42.4848%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.14%)</title><rect x="41.8911%" y="149" width="1.1382%" height="15" fill="rgb(251,177,13)" fg:x="21310" fg:w="579"/><text x="42.1841%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="43.0293%" y="149" width="0.1632%" height="15" fill="rgb(250,179,40)" fg:x="21889" fg:w="83"/><text x="43.3223%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="43.1925%" y="149" width="0.1828%" height="15" fill="rgb(242,44,2)" fg:x="21972" fg:w="93"/><text x="43.4854%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="43.3753%" y="133" width="0.1160%" height="15" fill="rgb(216,177,13)" fg:x="22065" fg:w="59"/><text x="43.6682%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (336 instructions, 0.66%)</title><rect x="43.4913%" y="133" width="0.6605%" height="15" fill="rgb(216,106,43)" fg:x="22124" fg:w="336"/><text x="43.7842%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="44.1518%" y="133" width="0.1533%" height="15" fill="rgb(216,183,2)" fg:x="22460" fg:w="78"/><text x="44.4447%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="44.8024%" y="133" width="0.1160%" height="15" fill="rgb(249,75,3)" fg:x="22791" fg:w="59"/><text x="45.0954%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="44.9184%" y="133" width="0.1848%" height="15" fill="rgb(219,67,39)" fg:x="22850" fg:w="94"/><text x="45.2114%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.34%)</title><rect x="45.1032%" y="133" width="0.3401%" height="15" fill="rgb(253,228,2)" fg:x="22944" fg:w="173"/><text x="45.3962%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="45.9406%" y="133" width="0.1160%" height="15" fill="rgb(235,138,27)" fg:x="23370" fg:w="59"/><text x="46.2336%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="46.0566%" y="133" width="0.7411%" height="15" fill="rgb(236,97,51)" fg:x="23429" fg:w="377"/><text x="46.3496%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="46.7977%" y="133" width="0.1533%" height="15" fill="rgb(240,80,30)" fg:x="23806" fg:w="78"/><text x="47.0907%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,072 instructions, 4.07%)</title><rect x="43.3753%" y="149" width="4.0731%" height="15" fill="rgb(230,178,19)" fg:x="22065" fg:w="2072"/><text x="43.6682%" y="159.50">cor..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.13%)</title><rect x="47.4484%" y="149" width="0.1317%" height="15" fill="rgb(210,190,27)" fg:x="24137" fg:w="67"/><text x="47.7414%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="47.5801%" y="149" width="0.1514%" height="15" fill="rgb(222,107,31)" fg:x="24204" fg:w="77"/><text x="47.8731%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="47.7315%" y="133" width="0.1750%" height="15" fill="rgb(216,127,34)" fg:x="24281" fg:w="89"/><text x="48.0244%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.26%)</title><rect x="47.7315%" y="149" width="0.2615%" height="15" fill="rgb(234,116,52)" fg:x="24281" fg:w="133"/><text x="48.0244%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,810 instructions, 7.49%)</title><rect x="41.8773%" y="165" width="7.4897%" height="15" fill="rgb(222,124,15)" fg:x="21303" fg:w="3810"/><text x="42.1703%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="49.3670%" y="117" width="0.1160%" height="15" fill="rgb(231,179,28)" fg:x="25113" fg:w="59"/><text x="49.6600%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.20%)</title><rect x="49.3670%" y="133" width="0.2005%" height="15" fill="rgb(226,93,45)" fg:x="25113" fg:w="102"/><text x="49.6600%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="50.0020%" y="117" width="0.1160%" height="15" fill="rgb(215,8,51)" fg:x="25436" fg:w="59"/><text x="50.2949%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.20%)</title><rect x="50.0020%" y="133" width="0.2005%" height="15" fill="rgb(223,106,5)" fg:x="25436" fg:w="102"/><text x="50.2949%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (646 instructions, 1.27%)</title><rect x="49.3670%" y="149" width="1.2699%" height="15" fill="rgb(250,191,5)" fg:x="25113" fg:w="646"/><text x="49.6600%" y="159.50"></text></g><g><title>candid::types::internal::env_id (948 instructions, 1.86%)</title><rect x="49.3670%" y="165" width="1.8636%" height="15" fill="rgb(242,132,44)" fg:x="25113" fg:w="948"/><text x="49.6600%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (49 instructions, 0.10%)</title><rect x="51.2306%" y="165" width="0.0963%" height="15" fill="rgb(251,152,29)" fg:x="26061" fg:w="49"/><text x="51.5236%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="51.3525%" y="133" width="0.0531%" height="15" fill="rgb(218,179,5)" fg:x="26123" fg:w="27"/><text x="51.6454%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="51.4055%" y="133" width="0.0531%" height="15" fill="rgb(227,67,19)" fg:x="26150" fg:w="27"/><text x="51.6985%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.39%)</title><rect x="51.3525%" y="149" width="0.3873%" height="15" fill="rgb(233,119,31)" fg:x="26123" fg:w="197"/><text x="51.6454%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (254 instructions, 0.50%)</title><rect x="51.3269%" y="165" width="0.4993%" height="15" fill="rgb(241,120,22)" fg:x="26110" fg:w="254"/><text x="51.6199%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (35 instructions, 0.07%)</title><rect x="51.8262%" y="149" width="0.0688%" height="15" fill="rgb(224,102,30)" fg:x="26364" fg:w="35"/><text x="52.1192%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="51.8950%" y="149" width="0.0668%" height="15" fill="rgb(210,164,37)" fg:x="26399" fg:w="34"/><text x="52.1880%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1501 (34 instructions, 0.07%)</title><rect x="51.9619%" y="149" width="0.0668%" height="15" fill="rgb(226,191,16)" fg:x="26433" fg:w="34"/><text x="52.2548%" y="159.50"></text></g><g><title>candid::de::Deserializer::add_cost (33 instructions, 0.06%)</title><rect x="52.0287%" y="149" width="0.0649%" height="15" fill="rgb(214,40,45)" fg:x="26467" fg:w="33"/><text x="52.3217%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (250 instructions, 0.49%)</title><rect x="51.8262%" y="165" width="0.4914%" height="15" fill="rgb(244,29,26)" fg:x="26364" fg:w="250"/><text x="52.1192%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.3177%" y="165" width="0.0256%" height="15" fill="rgb(216,16,5)" fg:x="26614" fg:w="13"/><text x="52.6106%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.3432%" y="165" width="0.0256%" height="15" fill="rgb(249,76,35)" fg:x="26627" fg:w="13"/><text x="52.6362%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="52.3688%" y="165" width="0.0256%" height="15" fill="rgb(207,11,44)" fg:x="26640" fg:w="13"/><text x="52.6618%" y="175.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.08%)</title><rect x="52.3943%" y="165" width="0.0845%" height="15" fill="rgb(228,190,49)" fg:x="26653" fg:w="43"/><text x="52.6873%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="52.4789%" y="149" width="0.0138%" height="15" fill="rgb(214,173,12)" fg:x="26696" fg:w="7"/><text x="52.7718%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.4926%" y="133" width="0.0531%" height="15" fill="rgb(218,26,35)" fg:x="26703" fg:w="27"/><text x="52.7856%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="52.4926%" y="149" width="0.2791%" height="15" fill="rgb(220,200,19)" fg:x="26703" fg:w="142"/><text x="52.7856%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.7718%" y="117" width="0.0531%" height="15" fill="rgb(239,95,49)" fg:x="26845" fg:w="27"/><text x="53.0647%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="52.8248%" y="117" width="0.0531%" height="15" fill="rgb(235,85,53)" fg:x="26872" fg:w="27"/><text x="53.1178%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="52.8779%" y="117" width="0.1337%" height="15" fill="rgb(233,133,31)" fg:x="26899" fg:w="68"/><text x="53.1709%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (244 instructions, 0.48%)</title><rect x="52.7718%" y="133" width="0.4797%" height="15" fill="rgb(218,25,20)" fg:x="26845" fg:w="244"/><text x="53.0647%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (288 instructions, 0.57%)</title><rect x="52.7718%" y="149" width="0.5661%" height="15" fill="rgb(252,210,38)" fg:x="26845" fg:w="288"/><text x="53.0647%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="53.3379%" y="149" width="0.0256%" height="15" fill="rgb(242,134,21)" fg:x="27133" fg:w="13"/><text x="53.6309%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (510 instructions, 1.00%)</title><rect x="52.4789%" y="165" width="1.0026%" height="15" fill="rgb(213,28,48)" fg:x="26696" fg:w="510"/><text x="52.7718%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="53.4814%" y="149" width="0.1356%" height="15" fill="rgb(250,196,2)" fg:x="27206" fg:w="69"/><text x="53.7744%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.13%)</title><rect x="53.6171%" y="149" width="0.1337%" height="15" fill="rgb(227,5,17)" fg:x="27275" fg:w="68"/><text x="53.9100%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.45%)</title><rect x="53.4814%" y="165" width="0.4541%" height="15" fill="rgb(221,226,24)" fg:x="27206" fg:w="231"/><text x="53.7744%" y="175.50"></text></g><g><title>memset (240 instructions, 0.47%)</title><rect x="53.9355%" y="165" width="0.4718%" height="15" fill="rgb(211,5,48)" fg:x="27437" fg:w="240"/><text x="54.2285%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.35%)</title><rect x="54.4073%" y="165" width="0.3460%" height="15" fill="rgb(219,150,6)" fg:x="27677" fg:w="176"/><text x="54.7003%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.99%)</title><rect x="54.7533%" y="165" width="0.9908%" height="15" fill="rgb(251,46,16)" fg:x="27853" fg:w="504"/><text x="55.0463%" y="175.50"></text></g><g><title>memset (139 instructions, 0.27%)</title><rect x="55.7441%" y="149" width="0.2732%" height="15" fill="rgb(220,204,40)" fg:x="28357" fg:w="139"/><text x="56.0370%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 9.81%)</title><rect x="56.0173%" y="149" width="9.8093%" height="15" fill="rgb(211,85,2)" fg:x="28496" fg:w="4990"/><text x="56.3103%" y="159.50">sha2::sha256..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,432 instructions, 10.68%)</title><rect x="55.7441%" y="165" width="10.6782%" height="15" fill="rgb(229,17,7)" fg:x="28357" fg:w="5432"/><text x="56.0370%" y="175.50">&lt;sha2::core_a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="66.4223%" y="165" width="0.1632%" height="15" fill="rgb(239,72,28)" fg:x="33789" fg:w="83"/><text x="66.7152%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="66.5854%" y="149" width="0.0138%" height="15" fill="rgb(230,47,54)" fg:x="33872" fg:w="7"/><text x="66.8784%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.14%)</title><rect x="66.5992%" y="117" width="0.1356%" height="15" fill="rgb(214,50,8)" fg:x="33879" fg:w="69"/><text x="66.8921%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (81 instructions, 0.16%)</title><rect x="66.7348%" y="117" width="0.1592%" height="15" fill="rgb(216,198,43)" fg:x="33948" fg:w="81"/><text x="67.0278%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (246 instructions, 0.48%)</title><rect x="66.5992%" y="133" width="0.4836%" height="15" fill="rgb(234,20,35)" fg:x="33879" fg:w="246"/><text x="66.8921%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="67.1693%" y="101" width="0.0531%" height="15" fill="rgb(254,45,19)" fg:x="34169" fg:w="27"/><text x="67.4622%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.28%)</title><rect x="67.1693%" y="117" width="0.2831%" height="15" fill="rgb(219,14,44)" fg:x="34169" fg:w="144"/><text x="67.4622%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (188 instructions, 0.37%)</title><rect x="67.1693%" y="133" width="0.3696%" height="15" fill="rgb(217,220,26)" fg:x="34169" fg:w="188"/><text x="67.4622%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="67.5388%" y="117" width="0.0531%" height="15" fill="rgb(213,158,28)" fg:x="34357" fg:w="27"/><text x="67.8318%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.28%)</title><rect x="67.5388%" y="133" width="0.2831%" height="15" fill="rgb(252,51,52)" fg:x="34357" fg:w="144"/><text x="67.8318%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (676 instructions, 1.33%)</title><rect x="66.5992%" y="149" width="1.3289%" height="15" fill="rgb(246,89,16)" fg:x="33879" fg:w="676"/><text x="66.8921%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="67.9281%" y="149" width="0.0256%" height="15" fill="rgb(216,158,49)" fg:x="34555" fg:w="13"/><text x="68.2210%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="67.9536%" y="149" width="0.1828%" height="15" fill="rgb(236,107,19)" fg:x="34568" fg:w="93"/><text x="68.2466%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="68.1364%" y="117" width="0.0138%" height="15" fill="rgb(228,185,30)" fg:x="34661" fg:w="7"/><text x="68.4294%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.08%)</title><rect x="68.1364%" y="133" width="0.0767%" height="15" fill="rgb(246,134,8)" fg:x="34661" fg:w="39"/><text x="68.4294%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="68.2131%" y="133" width="0.1632%" height="15" fill="rgb(214,143,50)" fg:x="34700" fg:w="83"/><text x="68.5061%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="68.3763%" y="117" width="0.0138%" height="15" fill="rgb(228,75,8)" fg:x="34783" fg:w="7"/><text x="68.6692%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="68.3900%" y="101" width="0.1160%" height="15" fill="rgb(207,175,4)" fg:x="34790" fg:w="59"/><text x="68.6830%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="68.5060%" y="101" width="0.7411%" height="15" fill="rgb(205,108,24)" fg:x="34849" fg:w="377"/><text x="68.7990%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="69.2471%" y="101" width="0.1533%" height="15" fill="rgb(244,120,49)" fg:x="35226" fg:w="78"/><text x="69.5401%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.51%)</title><rect x="68.3900%" y="117" width="1.5078%" height="15" fill="rgb(223,47,38)" fg:x="34790" fg:w="767"/><text x="68.6830%" y="127.50"></text></g><g><title>candid::types::internal::env_add (985 instructions, 1.94%)</title><rect x="68.3763%" y="133" width="1.9363%" height="15" fill="rgb(229,179,11)" fg:x="34783" fg:w="985"/><text x="68.6692%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="70.3126%" y="133" width="0.1632%" height="15" fill="rgb(231,122,1)" fg:x="35768" fg:w="83"/><text x="70.6055%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="70.4757%" y="133" width="0.1632%" height="15" fill="rgb(245,119,9)" fg:x="35851" fg:w="83"/><text x="70.7687%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (7 instructions, 0.01%)</title><rect x="70.6389%" y="117" width="0.0138%" height="15" fill="rgb(241,163,25)" fg:x="35934" fg:w="7"/><text x="70.9319%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="70.6526%" y="101" width="0.1160%" height="15" fill="rgb(217,214,3)" fg:x="35941" fg:w="59"/><text x="70.9456%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.74%)</title><rect x="70.7686%" y="101" width="0.7411%" height="15" fill="rgb(240,86,28)" fg:x="36000" fg:w="377"/><text x="71.0616%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="71.5097%" y="101" width="0.1533%" height="15" fill="rgb(215,47,9)" fg:x="36377" fg:w="78"/><text x="71.8027%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.51%)</title><rect x="70.6526%" y="117" width="1.5078%" height="15" fill="rgb(252,25,45)" fg:x="35941" fg:w="767"/><text x="70.9456%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.33%)</title><rect x="72.1604%" y="117" width="1.3269%" height="15" fill="rgb(251,164,9)" fg:x="36708" fg:w="675"/><text x="72.4534%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="73.4873%" y="101" width="0.1750%" height="15" fill="rgb(233,194,0)" fg:x="37383" fg:w="89"/><text x="73.7803%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.26%)</title><rect x="73.4873%" y="117" width="0.2615%" height="15" fill="rgb(249,111,24)" fg:x="37383" fg:w="133"/><text x="73.7803%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,761 instructions, 3.46%)</title><rect x="70.6389%" y="133" width="3.4618%" height="15" fill="rgb(250,223,3)" fg:x="35934" fg:w="1761"/><text x="70.9319%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="74.1006%" y="85" width="0.1160%" height="15" fill="rgb(236,178,37)" fg:x="37695" fg:w="59"/><text x="74.3936%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="74.2166%" y="85" width="0.3224%" height="15" fill="rgb(241,158,50)" fg:x="37754" fg:w="164"/><text x="74.5096%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.59%)</title><rect x="74.1006%" y="101" width="0.5937%" height="15" fill="rgb(213,121,41)" fg:x="37695" fg:w="302"/><text x="74.3936%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.03%)</title><rect x="74.1006%" y="117" width="1.0281%" height="15" fill="rgb(240,92,3)" fg:x="37695" fg:w="523"/><text x="74.3936%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.303 (80 instructions, 0.16%)</title><rect x="75.1288%" y="117" width="0.1573%" height="15" fill="rgb(205,123,3)" fg:x="38218" fg:w="80"/><text x="75.4217%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="75.2860%" y="117" width="0.0256%" height="15" fill="rgb(205,97,47)" fg:x="38298" fg:w="13"/><text x="75.5790%" y="127.50"></text></g><g><title>candid::types::internal::env_id (801 instructions, 1.57%)</title><rect x="74.1006%" y="133" width="1.5746%" height="15" fill="rgb(247,152,14)" fg:x="37695" fg:w="801"/><text x="74.3936%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,986 instructions, 7.84%)</title><rect x="68.1364%" y="149" width="7.8357%" height="15" fill="rgb(248,195,53)" fg:x="34661" fg:w="3986"/><text x="68.4294%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="75.9721%" y="117" width="0.1632%" height="15" fill="rgb(226,201,16)" fg:x="38647" fg:w="83"/><text x="76.2651%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="75.9721%" y="133" width="0.2477%" height="15" fill="rgb(205,98,0)" fg:x="38647" fg:w="126"/><text x="76.2651%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.41%)</title><rect x="75.9721%" y="149" width="0.4148%" height="15" fill="rgb(214,191,48)" fg:x="38647" fg:w="211"/><text x="76.2651%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.07%)</title><rect x="76.3869%" y="133" width="0.0747%" height="15" fill="rgb(237,112,39)" fg:x="38858" fg:w="38"/><text x="76.6798%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="76.4616%" y="101" width="0.1632%" height="15" fill="rgb(247,203,27)" fg:x="38896" fg:w="83"/><text x="76.7545%" y="111.50"></text></g><g><title>candid::types::internal::unroll (179 instructions, 0.35%)</title><rect x="76.4616%" y="117" width="0.3519%" height="15" fill="rgb(235,124,28)" fg:x="38896" fg:w="179"/><text x="76.7545%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="76.8134%" y="117" width="0.1632%" height="15" fill="rgb(208,207,46)" fg:x="39075" fg:w="83"/><text x="77.1064%" y="127.50"></text></g><g><title>candid::types::internal::unroll (365 instructions, 0.72%)</title><rect x="76.4616%" y="133" width="0.7175%" height="15" fill="rgb(234,176,4)" fg:x="38896" fg:w="365"/><text x="76.7545%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="77.1791%" y="85" width="0.1160%" height="15" fill="rgb(230,133,28)" fg:x="39261" fg:w="59"/><text x="77.4721%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="77.2951%" y="85" width="0.3224%" height="15" fill="rgb(211,137,40)" fg:x="39320" fg:w="164"/><text x="77.5880%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.59%)</title><rect x="77.1791%" y="101" width="0.5937%" height="15" fill="rgb(254,35,13)" fg:x="39261" fg:w="302"/><text x="77.4721%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.03%)</title><rect x="77.1791%" y="117" width="1.0281%" height="15" fill="rgb(225,49,51)" fg:x="39261" fg:w="523"/><text x="77.4721%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="78.2072%" y="117" width="0.1632%" height="15" fill="rgb(251,10,15)" fg:x="39784" fg:w="83"/><text x="78.5002%" y="127.50"></text></g><g><title>memset (152 instructions, 0.30%)</title><rect x="78.3704%" y="117" width="0.2988%" height="15" fill="rgb(228,207,15)" fg:x="39867" fg:w="152"/><text x="78.6633%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,080 instructions, 2.12%)</title><rect x="77.1791%" y="133" width="2.1231%" height="15" fill="rgb(241,99,19)" fg:x="39261" fg:w="1080"/><text x="77.4721%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="79.3021%" y="101" width="0.1632%" height="15" fill="rgb(207,104,49)" fg:x="40341" fg:w="83"/><text x="79.5951%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="79.3021%" y="117" width="0.2477%" height="15" fill="rgb(234,99,18)" fg:x="40341" fg:w="126"/><text x="79.5951%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (211 instructions, 0.41%)</title><rect x="79.3021%" y="133" width="0.4148%" height="15" fill="rgb(213,191,49)" fg:x="40341" fg:w="211"/><text x="79.5951%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="79.7169%" y="85" width="0.1160%" height="15" fill="rgb(210,226,19)" fg:x="40552" fg:w="59"/><text x="80.0099%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.20%)</title><rect x="79.7169%" y="101" width="0.2005%" height="15" fill="rgb(229,97,18)" fg:x="40552" fg:w="102"/><text x="80.0099%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.63%)</title><rect x="79.7169%" y="117" width="0.6350%" height="15" fill="rgb(211,167,15)" fg:x="40552" fg:w="323"/><text x="80.0099%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.06%)</title><rect x="80.3519%" y="117" width="0.0609%" height="15" fill="rgb(210,169,34)" fg:x="40875" fg:w="31"/><text x="80.6448%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="80.4128%" y="117" width="0.0256%" height="15" fill="rgb(241,121,31)" fg:x="40906" fg:w="13"/><text x="80.7058%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (503 instructions, 0.99%)</title><rect x="79.7169%" y="133" width="0.9888%" height="15" fill="rgb(232,40,11)" fg:x="40552" fg:w="503"/><text x="80.0099%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.7057%" y="85" width="0.1632%" height="15" fill="rgb(205,86,26)" fg:x="41055" fg:w="83"/><text x="80.9987%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="80.7057%" y="101" width="0.2477%" height="15" fill="rgb(231,126,28)" fg:x="41055" fg:w="126"/><text x="80.9987%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="80.7057%" y="117" width="0.4089%" height="15" fill="rgb(219,221,18)" fg:x="41055" fg:w="208"/><text x="80.9987%" y="127.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.52%)</title><rect x="80.7057%" y="133" width="0.5249%" height="15" fill="rgb(211,40,0)" fg:x="41055" fg:w="267"/><text x="80.9987%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.13%)</title><rect x="81.2306%" y="133" width="0.1297%" height="15" fill="rgb(239,85,43)" fg:x="41322" fg:w="66"/><text x="81.5236%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.17%)</title><rect x="81.3603%" y="101" width="0.1750%" height="15" fill="rgb(231,55,21)" fg:x="41388" fg:w="89"/><text x="81.6533%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.26%)</title><rect x="81.3603%" y="117" width="0.2615%" height="15" fill="rgb(225,184,43)" fg:x="41388" fg:w="133"/><text x="81.6533%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.16%)</title><rect x="81.6218%" y="117" width="0.1632%" height="15" fill="rgb(251,158,41)" fg:x="41521" fg:w="83"/><text x="81.9147%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 instructions, 0.53%)</title><rect x="81.3603%" y="133" width="0.5308%" height="15" fill="rgb(234,159,37)" fg:x="41388" fg:w="270"/><text x="81.6533%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="81.8911%" y="133" width="0.0256%" height="15" fill="rgb(216,204,22)" fg:x="41658" fg:w="13"/><text x="82.1841%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,076 instructions, 6.05%)</title><rect x="76.3869%" y="149" width="6.0468%" height="15" fill="rgb(214,17,3)" fg:x="38858" fg:w="3076"/><text x="76.6798%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="82.4337%" y="149" width="0.0256%" height="15" fill="rgb(212,111,17)" fg:x="41934" fg:w="13"/><text x="82.7266%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="82.4592%" y="117" width="0.1632%" height="15" fill="rgb(221,157,24)" fg:x="41947" fg:w="83"/><text x="82.7522%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="82.4592%" y="133" width="0.2477%" height="15" fill="rgb(252,16,13)" fg:x="41947" fg:w="126"/><text x="82.7522%" y="143.50"></text></g><g><title>__rust_realloc (111 instructions, 0.22%)</title><rect x="82.8681%" y="117" width="0.2182%" height="15" fill="rgb(221,62,2)" fg:x="42155" fg:w="111"/><text x="83.1611%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.31%)</title><rect x="82.8681%" y="133" width="0.3067%" height="15" fill="rgb(247,87,22)" fg:x="42155" fg:w="156"/><text x="83.1611%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 0.89%)</title><rect x="82.4592%" y="149" width="0.8866%" height="15" fill="rgb(215,73,9)" fg:x="41947" fg:w="451"/><text x="82.7522%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.61%)</title><rect x="83.3458%" y="149" width="0.6133%" height="15" fill="rgb(207,175,33)" fg:x="42398" fg:w="312"/><text x="83.6388%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (31 instructions, 0.06%)</title><rect x="83.9591%" y="133" width="0.0609%" height="15" fill="rgb(243,129,54)" fg:x="42710" fg:w="31"/><text x="84.2521%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.19%)</title><rect x="84.0201%" y="133" width="0.1946%" height="15" fill="rgb(227,119,45)" fg:x="42741" fg:w="99"/><text x="84.3130%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (226 instructions, 0.44%)</title><rect x="83.9591%" y="149" width="0.4443%" height="15" fill="rgb(205,109,36)" fg:x="42710" fg:w="226"/><text x="84.2521%" y="159.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 1.02%)</title><rect x="84.4034%" y="149" width="1.0183%" height="15" fill="rgb(205,6,39)" fg:x="42936" fg:w="518"/><text x="84.6963%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.4217%" y="117" width="0.1632%" height="15" fill="rgb(221,32,16)" fg:x="43454" fg:w="83"/><text x="85.7146%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="85.4217%" y="133" width="0.2477%" height="15" fill="rgb(228,144,50)" fg:x="43454" fg:w="126"/><text x="85.7146%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="85.4217%" y="149" width="0.4089%" height="15" fill="rgb(229,201,53)" fg:x="43454" fg:w="208"/><text x="85.7146%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.8305%" y="149" width="0.1632%" height="15" fill="rgb(249,153,27)" fg:x="43662" fg:w="83"/><text x="86.1235%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.9937%" y="149" width="0.1003%" height="15" fill="rgb(227,106,25)" fg:x="43745" fg:w="51"/><text x="86.2867%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="86.0940%" y="149" width="0.1003%" height="15" fill="rgb(230,65,29)" fg:x="43796" fg:w="51"/><text x="86.3869%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="86.1942%" y="149" width="0.1179%" height="15" fill="rgb(221,57,46)" fg:x="43847" fg:w="60"/><text x="86.4872%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.12%)</title><rect x="86.3122%" y="101" width="0.1160%" height="15" fill="rgb(229,161,17)" fg:x="43907" fg:w="59"/><text x="86.6051%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.32%)</title><rect x="86.4282%" y="101" width="0.3224%" height="15" fill="rgb(222,213,11)" fg:x="43966" fg:w="164"/><text x="86.7211%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.59%)</title><rect x="86.3122%" y="117" width="0.5937%" height="15" fill="rgb(235,35,13)" fg:x="43907" fg:w="302"/><text x="86.6051%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 1.03%)</title><rect x="86.3122%" y="133" width="1.0281%" height="15" fill="rgb(233,158,34)" fg:x="43907" fg:w="523"/><text x="86.6051%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="87.3403%" y="101" width="0.1632%" height="15" fill="rgb(215,151,48)" fg:x="44430" fg:w="83"/><text x="87.6332%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.25%)</title><rect x="87.3403%" y="117" width="0.2477%" height="15" fill="rgb(229,84,14)" fg:x="44430" fg:w="126"/><text x="87.6332%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.41%)</title><rect x="87.3403%" y="133" width="0.4089%" height="15" fill="rgb(229,68,14)" fg:x="44430" fg:w="208"/><text x="87.6332%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (924 instructions, 1.82%)</title><rect x="86.3122%" y="149" width="1.8164%" height="15" fill="rgb(243,106,26)" fg:x="43907" fg:w="924"/><text x="86.6051%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="88.1286%" y="149" width="0.0688%" height="15" fill="rgb(206,45,38)" fg:x="44831" fg:w="35"/><text x="88.4215%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="88.1974%" y="149" width="0.1179%" height="15" fill="rgb(226,6,15)" fg:x="44866" fg:w="60"/><text x="88.4903%" y="159.50"></text></g><g><title>std::io::Write::write_all (519 instructions, 1.02%)</title><rect x="88.3153%" y="149" width="1.0202%" height="15" fill="rgb(232,22,54)" fg:x="44926" fg:w="519"/><text x="88.6083%" y="159.50"></text></g><g><title>std::io::Write::write_all (547 instructions, 1.08%)</title><rect x="89.3356%" y="149" width="1.0753%" height="15" fill="rgb(229,222,32)" fg:x="45445" fg:w="547"/><text x="89.6285%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.5858%" y="133" width="0.0531%" height="15" fill="rgb(228,62,29)" fg:x="46081" fg:w="27"/><text x="90.8788%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.45%)</title><rect x="90.4109%" y="149" width="0.4541%" height="15" fill="rgb(251,103,34)" fg:x="45992" fg:w="231"/><text x="90.7038%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="90.8649%" y="149" width="0.0256%" height="15" fill="rgb(233,12,30)" fg:x="46223" fg:w="13"/><text x="91.1579%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (23 instructions, 0.05%)</title><rect x="90.8905%" y="133" width="0.0452%" height="15" fill="rgb(238,52,0)" fg:x="46236" fg:w="23"/><text x="91.1835%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="90.9357%" y="133" width="0.0531%" height="15" fill="rgb(223,98,5)" fg:x="46259" fg:w="27"/><text x="91.2287%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (193 instructions, 0.38%)</title><rect x="90.8905%" y="149" width="0.3794%" height="15" fill="rgb(228,75,37)" fg:x="46236" fg:w="193"/><text x="91.1835%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="91.2699%" y="149" width="0.0138%" height="15" fill="rgb(205,115,49)" fg:x="46429" fg:w="7"/><text x="91.5629%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.03%)</title><rect x="91.2837%" y="149" width="0.0256%" height="15" fill="rgb(250,154,43)" fg:x="46436" fg:w="13"/><text x="91.5766%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="91.3092%" y="133" width="0.0531%" height="15" fill="rgb(226,43,29)" fg:x="46449" fg:w="27"/><text x="91.6022%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.28%)</title><rect x="91.3092%" y="149" width="0.2791%" height="15" fill="rgb(249,228,39)" fg:x="46449" fg:w="142"/><text x="91.6022%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="91.7063%" y="133" width="0.0531%" height="15" fill="rgb(216,79,43)" fg:x="46651" fg:w="27"/><text x="91.9993%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (175 instructions, 0.34%)</title><rect x="91.5884%" y="149" width="0.3440%" height="15" fill="rgb(228,95,12)" fg:x="46591" fg:w="175"/><text x="91.8813%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,444 instructions, 28.39%)</title><rect x="66.5854%" y="165" width="28.3939%" height="15" fill="rgb(249,221,15)" fg:x="33872" fg:w="14444"/><text x="66.8784%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::__canister_method_principalToNeuron::{{closure}} (50,062 instructions, 98.41%)</title><rect x="0.3735%" y="181" width="98.4116%" height="15" fill="rgb(233,34,13)" fg:x="190" fg:w="50062"/><text x="0.6665%" y="191.50">sha::__canister_method_principalToNeuron::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.7851%" y="181" width="0.0275%" height="15" fill="rgb(214,103,39)" fg:x="50252" fg:w="14"/><text x="99.0781%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="98.8146%" y="165" width="0.0531%" height="15" fill="rgb(251,126,39)" fg:x="50267" fg:w="27"/><text x="99.1076%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.05%)</title><rect x="99.0977%" y="165" width="0.0531%" height="15" fill="rgb(214,216,36)" fg:x="50411" fg:w="27"/><text x="99.3907%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (67 instructions, 0.13%)</title><rect x="99.1508%" y="165" width="0.1317%" height="15" fill="rgb(220,221,8)" fg:x="50438" fg:w="67"/><text x="99.4437%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (99 instructions, 0.19%)</title><rect x="99.2825%" y="165" width="0.1946%" height="15" fill="rgb(240,216,3)" fg:x="50505" fg:w="99"/><text x="99.5755%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (459 instructions, 0.90%)</title><rect x="98.8146%" y="181" width="0.9023%" height="15" fill="rgb(232,218,17)" fg:x="50267" fg:w="459"/><text x="99.1076%" y="191.50"></text></g><g><title>all (50,870 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(229,163,45)" fg:x="0" fg:w="50870"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (50,870 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(231,110,42)" fg:x="0" fg:w="50870"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>