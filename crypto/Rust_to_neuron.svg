<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="44574"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0426%" height="15" fill="rgb(249,150,24)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.0426%" y="181" width="0.1705%" height="15" fill="rgb(228,185,42)" fg:x="19" fg:w="76"/><text x="0.3356%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2131%" y="181" width="0.1705%" height="15" fill="rgb(226,39,33)" fg:x="95" fg:w="76"/><text x="0.5061%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3836%" y="165" width="0.1705%" height="15" fill="rgb(221,166,19)" fg:x="171" fg:w="76"/><text x="0.6766%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.15%)</title><rect x="0.5541%" y="149" width="0.1548%" height="15" fill="rgb(209,109,2)" fg:x="247" fg:w="69"/><text x="0.8471%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="0.7089%" y="149" width="0.9108%" height="15" fill="rgb(252,216,26)" fg:x="316" fg:w="406"/><text x="1.0019%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="1.6198%" y="149" width="0.1840%" height="15" fill="rgb(227,173,36)" fg:x="722" fg:w="82"/><text x="1.9127%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8037%" y="149" width="0.1211%" height="15" fill="rgb(209,90,7)" fg:x="804" fg:w="54"/><text x="2.0967%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9249%" y="149" width="0.1211%" height="15" fill="rgb(250,194,11)" fg:x="858" fg:w="54"/><text x="2.2179%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0460%" y="149" width="0.1211%" height="15" fill="rgb(220,72,50)" fg:x="912" fg:w="54"/><text x="2.3390%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1672%" y="149" width="0.1211%" height="15" fill="rgb(222,106,48)" fg:x="966" fg:w="54"/><text x="2.4602%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.15%)</title><rect x="2.2883%" y="149" width="0.1548%" height="15" fill="rgb(216,220,45)" fg:x="1020" fg:w="69"/><text x="2.5813%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4431%" y="149" width="0.1458%" height="15" fill="rgb(234,112,18)" fg:x="1089" fg:w="65"/><text x="2.7361%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="2.5890%" y="149" width="0.9108%" height="15" fill="rgb(206,179,9)" fg:x="1154" fg:w="406"/><text x="2.8819%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.4998%" y="149" width="0.0359%" height="15" fill="rgb(215,115,40)" fg:x="1560" fg:w="16"/><text x="3.7928%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="3.5357%" y="133" width="0.1705%" height="15" fill="rgb(222,69,34)" fg:x="1576" fg:w="76"/><text x="3.8287%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="3.7062%" y="101" width="0.1346%" height="15" fill="rgb(209,161,10)" fg:x="1652" fg:w="60"/><text x="3.9992%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7062%" y="117" width="0.1907%" height="15" fill="rgb(217,6,38)" fg:x="1652" fg:w="85"/><text x="3.9992%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.8969%" y="69" width="0.0202%" height="15" fill="rgb(229,229,48)" fg:x="1737" fg:w="9"/><text x="4.1899%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9171%" y="53" width="0.0673%" height="15" fill="rgb(225,21,28)" fg:x="1746" fg:w="30"/><text x="4.2101%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9171%" y="69" width="0.1234%" height="15" fill="rgb(206,33,13)" fg:x="1746" fg:w="55"/><text x="4.2101%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.26%)</title><rect x="3.8969%" y="85" width="0.2647%" height="15" fill="rgb(242,178,17)" fg:x="1737" fg:w="118"/><text x="4.1899%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="3.8969%" y="101" width="0.3836%" height="15" fill="rgb(220,162,5)" fg:x="1737" fg:w="171"/><text x="4.1899%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.39%)</title><rect x="3.8969%" y="117" width="0.3948%" height="15" fill="rgb(210,33,43)" fg:x="1737" fg:w="176"/><text x="4.1899%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.83%)</title><rect x="3.7062%" y="133" width="0.8346%" height="15" fill="rgb(216,116,54)" fg:x="1652" fg:w="372"/><text x="3.9992%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.32%)</title><rect x="3.5357%" y="149" width="1.3214%" height="15" fill="rgb(249,92,24)" fg:x="1576" fg:w="589"/><text x="3.8287%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="4.8571%" y="149" width="0.1840%" height="15" fill="rgb(231,189,14)" fg:x="2165" fg:w="82"/><text x="5.1501%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="5.0411%" y="149" width="0.1234%" height="15" fill="rgb(230,8,41)" fg:x="2247" fg:w="55"/><text x="5.3340%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="5.1644%" y="149" width="0.1413%" height="15" fill="rgb(249,7,27)" fg:x="2302" fg:w="63"/><text x="5.4574%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.3058%" y="149" width="0.1458%" height="15" fill="rgb(232,86,5)" fg:x="2365" fg:w="65"/><text x="5.5988%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="5.4516%" y="133" width="0.9108%" height="15" fill="rgb(224,175,18)" fg:x="2430" fg:w="406"/><text x="5.7446%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.3625%" y="133" width="0.0359%" height="15" fill="rgb(220,129,12)" fg:x="2836" fg:w="16"/><text x="6.6554%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="6.3983%" y="117" width="0.1705%" height="15" fill="rgb(210,19,36)" fg:x="2852" fg:w="76"/><text x="6.6913%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="6.5689%" y="85" width="0.1346%" height="15" fill="rgb(219,96,14)" fg:x="2928" fg:w="60"/><text x="6.8618%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="6.5689%" y="101" width="0.1907%" height="15" fill="rgb(249,106,1)" fg:x="2928" fg:w="85"/><text x="6.8618%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.7595%" y="53" width="0.0202%" height="15" fill="rgb(249,155,20)" fg:x="3013" fg:w="9"/><text x="7.0525%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="6.7797%" y="37" width="0.0673%" height="15" fill="rgb(244,168,9)" fg:x="3022" fg:w="30"/><text x="7.0727%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="6.7797%" y="53" width="0.1234%" height="15" fill="rgb(216,23,50)" fg:x="3022" fg:w="55"/><text x="7.0727%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.26%)</title><rect x="6.7595%" y="69" width="0.2647%" height="15" fill="rgb(224,219,20)" fg:x="3013" fg:w="118"/><text x="7.0525%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="6.7595%" y="85" width="0.3836%" height="15" fill="rgb(222,156,15)" fg:x="3013" fg:w="171"/><text x="7.0525%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.39%)</title><rect x="6.7595%" y="101" width="0.3948%" height="15" fill="rgb(231,97,17)" fg:x="3013" fg:w="176"/><text x="7.0525%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.83%)</title><rect x="6.5689%" y="117" width="0.8346%" height="15" fill="rgb(218,70,48)" fg:x="2928" fg:w="372"/><text x="6.8618%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.32%)</title><rect x="6.3983%" y="133" width="1.3214%" height="15" fill="rgb(212,196,52)" fg:x="2852" fg:w="589"/><text x="6.6913%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="7.7197%" y="133" width="0.1840%" height="15" fill="rgb(243,203,18)" fg:x="3441" fg:w="82"/><text x="8.0127%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="7.9037%" y="133" width="0.1234%" height="15" fill="rgb(252,125,41)" fg:x="3523" fg:w="55"/><text x="8.1967%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.15%)</title><rect x="8.0271%" y="117" width="0.1548%" height="15" fill="rgb(223,180,33)" fg:x="3578" fg:w="69"/><text x="8.3201%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.20%)</title><rect x="8.1819%" y="117" width="0.2042%" height="15" fill="rgb(254,159,46)" fg:x="3647" fg:w="91"/><text x="8.4749%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="8.3861%" y="117" width="0.1413%" height="15" fill="rgb(254,38,10)" fg:x="3738" fg:w="63"/><text x="8.6790%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.64%)</title><rect x="8.0271%" y="133" width="0.6416%" height="15" fill="rgb(208,217,32)" fg:x="3578" fg:w="286"/><text x="8.3201%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.6687%" y="133" width="0.1705%" height="15" fill="rgb(221,120,13)" fg:x="3864" fg:w="76"/><text x="8.9617%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.15%)</title><rect x="8.8392%" y="117" width="0.1548%" height="15" fill="rgb(246,54,52)" fg:x="3940" fg:w="69"/><text x="9.1322%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.20%)</title><rect x="8.9940%" y="117" width="0.2042%" height="15" fill="rgb(242,34,25)" fg:x="4009" fg:w="91"/><text x="9.2870%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.1982%" y="117" width="0.1413%" height="15" fill="rgb(247,209,9)" fg:x="4100" fg:w="63"/><text x="9.4912%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.63%)</title><rect x="8.8392%" y="133" width="0.6327%" height="15" fill="rgb(228,71,26)" fg:x="3940" fg:w="282"/><text x="9.1322%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,040 instructions, 4.58%)</title><rect x="5.4516%" y="149" width="4.5767%" height="15" fill="rgb(222,145,49)" fg:x="2430" fg:w="2040"/><text x="5.7446%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="10.0283%" y="149" width="0.1413%" height="15" fill="rgb(218,121,17)" fg:x="4470" fg:w="63"/><text x="10.3212%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.1696%" y="149" width="0.0292%" height="15" fill="rgb(244,50,7)" fg:x="4533" fg:w="13"/><text x="10.4626%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.1988%" y="149" width="0.0292%" height="15" fill="rgb(246,229,37)" fg:x="4546" fg:w="13"/><text x="10.4917%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.2279%" y="149" width="0.0157%" height="15" fill="rgb(225,18,5)" fg:x="4559" fg:w="7"/><text x="10.5209%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.2436%" y="149" width="0.0337%" height="15" fill="rgb(213,204,8)" fg:x="4566" fg:w="15"/><text x="10.5366%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.2773%" y="133" width="0.1705%" height="15" fill="rgb(238,103,6)" fg:x="4581" fg:w="76"/><text x="10.5703%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.2773%" y="149" width="0.3567%" height="15" fill="rgb(222,25,35)" fg:x="4581" fg:w="159"/><text x="10.5703%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.6340%" y="117" width="0.1705%" height="15" fill="rgb(213,203,35)" fg:x="4740" fg:w="76"/><text x="10.9270%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="10.6340%" y="133" width="0.2468%" height="15" fill="rgb(221,79,53)" fg:x="4740" fg:w="110"/><text x="10.9270%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="10.6340%" y="149" width="0.3993%" height="15" fill="rgb(243,200,35)" fg:x="4740" fg:w="178"/><text x="10.9270%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.0333%" y="133" width="0.1705%" height="15" fill="rgb(248,60,25)" fg:x="4918" fg:w="76"/><text x="11.3263%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="11.0333%" y="149" width="0.3567%" height="15" fill="rgb(227,53,46)" fg:x="4918" fg:w="159"/><text x="11.3263%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.3900%" y="149" width="0.1705%" height="15" fill="rgb(216,120,32)" fg:x="5077" fg:w="76"/><text x="11.6830%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="11.5606%" y="149" width="0.1817%" height="15" fill="rgb(220,134,1)" fg:x="5153" fg:w="81"/><text x="11.8535%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.7423%" y="149" width="0.1705%" height="15" fill="rgb(237,168,5)" fg:x="5234" fg:w="76"/><text x="12.0352%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.9128%" y="149" width="0.1705%" height="15" fill="rgb(231,100,33)" fg:x="5310" fg:w="76"/><text x="12.2057%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="12.0878%" y="149" width="0.1817%" height="15" fill="rgb(236,177,47)" fg:x="5388" fg:w="81"/><text x="12.3807%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.85%)</title><rect x="12.2695%" y="149" width="0.8525%" height="15" fill="rgb(235,7,49)" fg:x="5469" fg:w="380"/><text x="12.5625%" y="159.50"></text></g><g><title>memcpy (380 instructions, 0.85%)</title><rect x="13.1220%" y="149" width="0.8525%" height="15" fill="rgb(232,119,22)" fg:x="5849" fg:w="380"/><text x="13.4150%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,975 instructions, 15.65%)</title><rect x="0.5541%" y="165" width="15.6481%" height="15" fill="rgb(254,73,53)" fg:x="247" fg:w="6975"/><text x="0.8471%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (335 instructions, 0.75%)</title><rect x="16.2023%" y="165" width="0.7516%" height="15" fill="rgb(251,35,20)" fg:x="7222" fg:w="335"/><text x="16.4952%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="16.9538%" y="133" width="0.0269%" height="15" fill="rgb(241,119,20)" fg:x="7557" fg:w="12"/><text x="17.2468%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="16.9808%" y="117" width="0.1189%" height="15" fill="rgb(207,102,14)" fg:x="7569" fg:w="53"/><text x="17.2737%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="17.0997%" y="117" width="0.8615%" height="15" fill="rgb(248,201,50)" fg:x="7622" fg:w="384"/><text x="17.3926%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="17.9611%" y="117" width="0.3634%" height="15" fill="rgb(222,185,44)" fg:x="8006" fg:w="162"/><text x="18.2541%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="16.9808%" y="133" width="1.8755%" height="15" fill="rgb(218,107,18)" fg:x="7569" fg:w="836"/><text x="17.2737%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (963 instructions, 2.16%)</title><rect x="16.9538%" y="149" width="2.1605%" height="15" fill="rgb(237,177,39)" fg:x="7557" fg:w="963"/><text x="17.2468%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="19.1143%" y="149" width="0.1705%" height="15" fill="rgb(246,69,6)" fg:x="8520" fg:w="76"/><text x="19.4073%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="19.2848%" y="133" width="0.0269%" height="15" fill="rgb(234,208,37)" fg:x="8596" fg:w="12"/><text x="19.5778%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.3117%" y="117" width="0.1189%" height="15" fill="rgb(225,4,6)" fg:x="8608" fg:w="53"/><text x="19.6047%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="19.4306%" y="117" width="0.8615%" height="15" fill="rgb(233,45,0)" fg:x="8661" fg:w="384"/><text x="19.7236%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="20.2921%" y="117" width="0.3634%" height="15" fill="rgb(226,136,5)" fg:x="9045" fg:w="162"/><text x="20.5851%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="19.3117%" y="133" width="1.8755%" height="15" fill="rgb(211,91,47)" fg:x="8608" fg:w="836"/><text x="19.6047%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,068 instructions, 2.40%)</title><rect x="19.2848%" y="149" width="2.3960%" height="15" fill="rgb(242,88,51)" fg:x="8596" fg:w="1068"/><text x="19.5778%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="21.6808%" y="149" width="0.1705%" height="15" fill="rgb(230,91,28)" fg:x="9664" fg:w="76"/><text x="21.9738%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="21.8513%" y="133" width="0.0269%" height="15" fill="rgb(254,186,29)" fg:x="9740" fg:w="12"/><text x="22.1443%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="21.8782%" y="117" width="0.1189%" height="15" fill="rgb(238,6,4)" fg:x="9752" fg:w="53"/><text x="22.1712%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="21.9971%" y="117" width="0.8615%" height="15" fill="rgb(221,151,16)" fg:x="9805" fg:w="384"/><text x="22.2901%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="22.8586%" y="117" width="0.3634%" height="15" fill="rgb(251,143,52)" fg:x="10189" fg:w="162"/><text x="23.1516%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="21.8782%" y="133" width="1.8755%" height="15" fill="rgb(206,90,15)" fg:x="9752" fg:w="836"/><text x="22.1712%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.66%)</title><rect x="23.7538%" y="133" width="1.6602%" height="15" fill="rgb(218,35,8)" fg:x="10588" fg:w="740"/><text x="24.0467%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.4139%" y="117" width="0.1817%" height="15" fill="rgb(239,215,6)" fg:x="11328" fg:w="81"/><text x="25.7069%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="25.4139%" y="133" width="0.2423%" height="15" fill="rgb(245,116,39)" fg:x="11328" fg:w="108"/><text x="25.7069%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,880 instructions, 4.22%)</title><rect x="21.8513%" y="149" width="4.2177%" height="15" fill="rgb(242,65,28)" fg:x="9740" fg:w="1880"/><text x="22.1443%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.0690%" y="101" width="0.1189%" height="15" fill="rgb(252,132,53)" fg:x="11620" fg:w="53"/><text x="26.3620%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="26.0690%" y="117" width="0.1772%" height="15" fill="rgb(224,159,50)" fg:x="11620" fg:w="79"/><text x="26.3620%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="26.0690%" y="133" width="0.6551%" height="15" fill="rgb(224,93,4)" fg:x="11620" fg:w="292"/><text x="26.3620%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1078 (15 instructions, 0.03%)</title><rect x="26.7241%" y="133" width="0.0337%" height="15" fill="rgb(208,81,34)" fg:x="11912" fg:w="15"/><text x="27.0171%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.7578%" y="133" width="0.0247%" height="15" fill="rgb(233,92,54)" fg:x="11927" fg:w="11"/><text x="27.0507%" y="143.50"></text></g><g><title>candid::types::internal::env_id (522 instructions, 1.17%)</title><rect x="26.0690%" y="149" width="1.1711%" height="15" fill="rgb(237,21,14)" fg:x="11620" fg:w="522"/><text x="26.3620%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,692 instructions, 10.53%)</title><rect x="16.9538%" y="165" width="10.5263%" height="15" fill="rgb(249,128,51)" fg:x="7557" fg:w="4692"/><text x="17.2468%" y="175.50">candid::types..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="27.4801%" y="149" width="0.0763%" height="15" fill="rgb(223,129,24)" fg:x="12249" fg:w="34"/><text x="27.7731%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.5564%" y="133" width="0.2759%" height="15" fill="rgb(231,168,25)" fg:x="12283" fg:w="123"/><text x="27.8494%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.8929%" y="133" width="0.2759%" height="15" fill="rgb(224,39,20)" fg:x="12433" fg:w="123"/><text x="28.1859%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.67%)</title><rect x="27.5564%" y="149" width="0.6730%" height="15" fill="rgb(225,152,53)" fg:x="12283" fg:w="300"/><text x="27.8494%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.2295%" y="133" width="0.0628%" height="15" fill="rgb(252,17,24)" fg:x="12583" fg:w="28"/><text x="28.5224%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.2923%" y="133" width="0.0628%" height="15" fill="rgb(250,114,30)" fg:x="12611" fg:w="28"/><text x="28.5852%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.03%)</title><rect x="28.3551%" y="133" width="0.0337%" height="15" fill="rgb(229,5,4)" fg:x="12639" fg:w="15"/><text x="28.6481%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.03%)</title><rect x="28.3887%" y="133" width="0.0337%" height="15" fill="rgb(225,176,49)" fg:x="12654" fg:w="15"/><text x="28.6817%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.17%)</title><rect x="28.4224%" y="133" width="0.1750%" height="15" fill="rgb(224,221,49)" fg:x="12669" fg:w="78"/><text x="28.7154%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.15%)</title><rect x="28.5974%" y="133" width="0.1548%" height="15" fill="rgb(253,169,27)" fg:x="12747" fg:w="69"/><text x="28.8904%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.18%)</title><rect x="28.7522%" y="117" width="0.1772%" height="15" fill="rgb(211,206,16)" fg:x="12816" fg:w="79"/><text x="29.0452%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.33%)</title><rect x="28.7522%" y="133" width="0.3343%" height="15" fill="rgb(244,87,35)" fg:x="12816" fg:w="149"/><text x="29.0452%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.0865%" y="133" width="0.1458%" height="15" fill="rgb(246,28,10)" fg:x="12965" fg:w="65"/><text x="29.3794%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="29.2323%" y="133" width="0.9108%" height="15" fill="rgb(229,12,44)" fg:x="13030" fg:w="406"/><text x="29.5253%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.1431%" y="117" width="0.1705%" height="15" fill="rgb(210,145,37)" fg:x="13436" fg:w="76"/><text x="30.4361%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.13%)</title><rect x="30.3136%" y="85" width="0.1346%" height="15" fill="rgb(227,112,52)" fg:x="13512" fg:w="60"/><text x="30.6066%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="30.3136%" y="101" width="0.1907%" height="15" fill="rgb(238,155,34)" fg:x="13512" fg:w="85"/><text x="30.6066%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.5043%" y="53" width="0.0202%" height="15" fill="rgb(239,226,36)" fg:x="13597" fg:w="9"/><text x="30.7973%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.5245%" y="37" width="0.0673%" height="15" fill="rgb(230,16,23)" fg:x="13606" fg:w="30"/><text x="30.8175%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.5245%" y="53" width="0.1234%" height="15" fill="rgb(236,171,36)" fg:x="13606" fg:w="55"/><text x="30.8175%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.26%)</title><rect x="30.5043%" y="69" width="0.2647%" height="15" fill="rgb(221,22,14)" fg:x="13597" fg:w="118"/><text x="30.7973%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="30.5043%" y="85" width="0.3836%" height="15" fill="rgb(242,43,11)" fg:x="13597" fg:w="171"/><text x="30.7973%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.39%)</title><rect x="30.5043%" y="101" width="0.3948%" height="15" fill="rgb(232,69,23)" fg:x="13597" fg:w="176"/><text x="30.7973%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.83%)</title><rect x="30.3136%" y="117" width="0.8346%" height="15" fill="rgb(216,180,54)" fg:x="13512" fg:w="372"/><text x="30.6066%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.32%)</title><rect x="30.1431%" y="133" width="1.3214%" height="15" fill="rgb(216,5,24)" fg:x="13436" fg:w="589"/><text x="30.4361%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="31.4645%" y="133" width="0.1840%" height="15" fill="rgb(225,89,9)" fg:x="14025" fg:w="82"/><text x="31.7575%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="31.6485%" y="133" width="0.1234%" height="15" fill="rgb(243,75,33)" fg:x="14107" fg:w="55"/><text x="31.9415%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="31.7719%" y="117" width="0.1256%" height="15" fill="rgb(247,141,45)" fg:x="14162" fg:w="56"/><text x="32.0649%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.25%)</title><rect x="31.7719%" y="133" width="0.2535%" height="15" fill="rgb(232,177,36)" fg:x="14162" fg:w="113"/><text x="32.0649%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="32.0254%" y="133" width="0.1705%" height="15" fill="rgb(219,125,36)" fg:x="14275" fg:w="76"/><text x="32.3184%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.1959%" y="117" width="0.1256%" height="15" fill="rgb(227,94,9)" fg:x="14351" fg:w="56"/><text x="32.4889%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.4494%" y="117" width="0.1256%" height="15" fill="rgb(240,34,52)" fg:x="14464" fg:w="56"/><text x="32.7424%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.7029%" y="117" width="0.1256%" height="15" fill="rgb(216,45,12)" fg:x="14577" fg:w="56"/><text x="32.9959%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.9564%" y="117" width="0.1256%" height="15" fill="rgb(246,21,19)" fg:x="14690" fg:w="56"/><text x="33.2494%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.2099%" y="117" width="0.1256%" height="15" fill="rgb(213,98,42)" fg:x="14803" fg:w="56"/><text x="33.5029%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.4635%" y="117" width="0.1256%" height="15" fill="rgb(250,136,47)" fg:x="14916" fg:w="56"/><text x="33.7564%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.7170%" y="117" width="0.1256%" height="15" fill="rgb(251,124,27)" fg:x="15029" fg:w="56"/><text x="34.0099%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.9705%" y="117" width="0.1256%" height="15" fill="rgb(229,180,14)" fg:x="15142" fg:w="56"/><text x="34.2634%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.03%)</title><rect x="32.1959%" y="133" width="2.0281%" height="15" fill="rgb(245,216,25)" fg:x="14351" fg:w="904"/><text x="32.4889%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="34.2240%" y="101" width="0.2266%" height="15" fill="rgb(251,43,5)" fg:x="15255" fg:w="101"/><text x="34.5170%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="34.2240%" y="117" width="0.3051%" height="15" fill="rgb(250,128,24)" fg:x="15255" fg:w="136"/><text x="34.5170%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.47%)</title><rect x="34.2240%" y="133" width="0.4689%" height="15" fill="rgb(217,117,27)" fg:x="15255" fg:w="209"/><text x="34.5170%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.6929%" y="117" width="0.1256%" height="15" fill="rgb(245,147,4)" fg:x="15464" fg:w="56"/><text x="34.9858%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.9464%" y="117" width="0.1256%" height="15" fill="rgb(242,201,35)" fg:x="15577" fg:w="56"/><text x="35.2394%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.1999%" y="117" width="0.1256%" height="15" fill="rgb(218,181,1)" fg:x="15690" fg:w="56"/><text x="35.4929%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.4534%" y="117" width="0.1256%" height="15" fill="rgb(222,6,29)" fg:x="15803" fg:w="56"/><text x="35.7464%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.7069%" y="117" width="0.1256%" height="15" fill="rgb(208,186,3)" fg:x="15916" fg:w="56"/><text x="35.9999%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.9604%" y="117" width="0.1256%" height="15" fill="rgb(216,36,26)" fg:x="16029" fg:w="56"/><text x="36.2534%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.2139%" y="117" width="0.1256%" height="15" fill="rgb(248,201,23)" fg:x="16142" fg:w="56"/><text x="36.5069%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.77%)</title><rect x="34.6929%" y="133" width="1.7746%" height="15" fill="rgb(251,170,31)" fg:x="15464" fg:w="791"/><text x="34.9858%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="36.4674%" y="133" width="0.0673%" height="15" fill="rgb(207,110,25)" fg:x="16255" fg:w="30"/><text x="36.7604%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="36.5348%" y="133" width="0.1413%" height="15" fill="rgb(250,54,15)" fg:x="16285" fg:w="63"/><text x="36.8277%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.10%)</title><rect x="36.6761%" y="101" width="0.1010%" height="15" fill="rgb(227,68,33)" fg:x="16348" fg:w="45"/><text x="36.9691%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.18%)</title><rect x="36.6761%" y="117" width="0.1795%" height="15" fill="rgb(238,34,41)" fg:x="16348" fg:w="80"/><text x="36.9691%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.34%)</title><rect x="36.6761%" y="133" width="0.3432%" height="15" fill="rgb(220,11,15)" fg:x="16348" fg:w="153"/><text x="36.9691%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.46%)</title><rect x="37.0193%" y="133" width="0.4622%" height="15" fill="rgb(246,111,35)" fg:x="16501" fg:w="206"/><text x="37.3123%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.36%)</title><rect x="37.4815%" y="133" width="0.3590%" height="15" fill="rgb(209,88,53)" fg:x="16707" fg:w="160"/><text x="37.7745%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.8404%" y="133" width="0.1817%" height="15" fill="rgb(231,185,47)" fg:x="16867" fg:w="81"/><text x="38.1334%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="38.0222%" y="133" width="0.1234%" height="15" fill="rgb(233,154,1)" fg:x="16948" fg:w="55"/><text x="38.3151%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,435 instructions, 12.19%)</title><rect x="28.2295%" y="149" width="12.1932%" height="15" fill="rgb(225,15,46)" fg:x="12583" fg:w="5435"/><text x="28.5224%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4227%" y="149" width="0.0247%" height="15" fill="rgb(211,135,41)" fg:x="18018" fg:w="11"/><text x="40.7156%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4473%" y="149" width="0.0247%" height="15" fill="rgb(208,54,0)" fg:x="18029" fg:w="11"/><text x="40.7403%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.4720%" y="149" width="0.0247%" height="15" fill="rgb(244,136,14)" fg:x="18040" fg:w="11"/><text x="40.7650%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,051 instructions, 13.58%)</title><rect x="27.4801%" y="165" width="13.5752%" height="15" fill="rgb(241,56,14)" fg:x="12249" fg:w="6051"/><text x="27.7731%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="41.0553%" y="149" width="0.0269%" height="15" fill="rgb(205,80,24)" fg:x="18300" fg:w="12"/><text x="41.3483%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.0822%" y="133" width="0.1189%" height="15" fill="rgb(220,57,4)" fg:x="18312" fg:w="53"/><text x="41.3752%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="41.2011%" y="133" width="0.1974%" height="15" fill="rgb(226,193,50)" fg:x="18365" fg:w="88"/><text x="41.4941%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="41.3986%" y="133" width="0.3634%" height="15" fill="rgb(231,168,22)" fg:x="18453" fg:w="162"/><text x="41.6915%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.21%)</title><rect x="41.0822%" y="149" width="1.2115%" height="15" fill="rgb(254,215,14)" fg:x="18312" fg:w="540"/><text x="41.3752%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (667 instructions, 1.50%)</title><rect x="41.0553%" y="165" width="1.4964%" height="15" fill="rgb(211,115,16)" fg:x="18300" fg:w="667"/><text x="41.3483%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.5517%" y="165" width="0.1705%" height="15" fill="rgb(236,210,16)" fg:x="18967" fg:w="76"/><text x="42.8447%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="42.7222%" y="149" width="0.0269%" height="15" fill="rgb(221,94,12)" fg:x="19043" fg:w="12"/><text x="43.0152%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="42.7491%" y="133" width="0.1189%" height="15" fill="rgb(235,218,49)" fg:x="19055" fg:w="53"/><text x="43.0421%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="42.8680%" y="133" width="0.1974%" height="15" fill="rgb(217,114,14)" fg:x="19108" fg:w="88"/><text x="43.1610%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="43.0655%" y="133" width="0.3634%" height="15" fill="rgb(216,145,22)" fg:x="19196" fg:w="162"/><text x="43.3584%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.21%)</title><rect x="42.7491%" y="149" width="1.2115%" height="15" fill="rgb(217,112,39)" fg:x="19055" fg:w="540"/><text x="43.0421%" y="159.50"></text></g><g><title>candid::types::internal::env_add (772 instructions, 1.73%)</title><rect x="42.7222%" y="165" width="1.7320%" height="15" fill="rgb(225,85,32)" fg:x="19043" fg:w="772"/><text x="43.0152%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.4542%" y="165" width="0.1705%" height="15" fill="rgb(245,209,47)" fg:x="19815" fg:w="76"/><text x="44.7471%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="44.6247%" y="149" width="0.0269%" height="15" fill="rgb(218,220,15)" fg:x="19891" fg:w="12"/><text x="44.9176%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="44.6516%" y="133" width="0.1189%" height="15" fill="rgb(222,202,31)" fg:x="19903" fg:w="53"/><text x="44.9446%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="44.7705%" y="133" width="0.1974%" height="15" fill="rgb(243,203,4)" fg:x="19956" fg:w="88"/><text x="45.0635%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="44.9679%" y="133" width="0.3634%" height="15" fill="rgb(237,92,17)" fg:x="20044" fg:w="162"/><text x="45.2609%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.21%)</title><rect x="44.6516%" y="149" width="1.2115%" height="15" fill="rgb(231,119,7)" fg:x="19903" fg:w="540"/><text x="44.9446%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.8631%" y="149" width="0.1705%" height="15" fill="rgb(237,82,41)" fg:x="20443" fg:w="76"/><text x="46.1560%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="46.0336%" y="149" width="0.1885%" height="15" fill="rgb(226,81,48)" fg:x="20519" fg:w="84"/><text x="46.3265%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.2220%" y="133" width="0.1189%" height="15" fill="rgb(234,70,51)" fg:x="20603" fg:w="53"/><text x="46.5150%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="46.3409%" y="133" width="0.8166%" height="15" fill="rgb(251,86,4)" fg:x="20656" fg:w="364"/><text x="46.6339%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.1575%" y="133" width="0.1615%" height="15" fill="rgb(244,144,28)" fg:x="21020" fg:w="72"/><text x="47.4505%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.8508%" y="133" width="0.1189%" height="15" fill="rgb(232,161,39)" fg:x="21329" fg:w="53"/><text x="48.1437%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="47.9697%" y="133" width="0.1974%" height="15" fill="rgb(247,34,51)" fg:x="21382" fg:w="88"/><text x="48.2626%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="48.1671%" y="133" width="0.3634%" height="15" fill="rgb(225,132,2)" fg:x="21470" fg:w="162"/><text x="48.4601%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="49.0622%" y="133" width="0.1189%" height="15" fill="rgb(209,159,44)" fg:x="21869" fg:w="53"/><text x="49.3552%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="49.1811%" y="133" width="0.8615%" height="15" fill="rgb(251,214,1)" fg:x="21922" fg:w="384"/><text x="49.4741%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="50.0426%" y="133" width="0.3634%" height="15" fill="rgb(247,84,47)" fg:x="22306" fg:w="162"/><text x="50.3356%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,102 instructions, 4.72%)</title><rect x="46.2220%" y="149" width="4.7158%" height="15" fill="rgb(240,111,43)" fg:x="20603" fg:w="2102"/><text x="46.5150%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (64 instructions, 0.14%)</title><rect x="50.9378%" y="149" width="0.1436%" height="15" fill="rgb(215,214,35)" fg:x="22705" fg:w="64"/><text x="51.2307%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="51.0813%" y="149" width="0.1526%" height="15" fill="rgb(248,207,23)" fg:x="22769" fg:w="68"/><text x="51.3743%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="51.2339%" y="133" width="0.1817%" height="15" fill="rgb(214,186,4)" fg:x="22837" fg:w="81"/><text x="51.5269%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="51.2339%" y="149" width="0.2423%" height="15" fill="rgb(220,133,22)" fg:x="22837" fg:w="108"/><text x="51.5269%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,698 instructions, 8.30%)</title><rect x="44.6247%" y="165" width="8.2963%" height="15" fill="rgb(239,134,19)" fg:x="19891" fg:w="3698"/><text x="44.9176%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="52.9210%" y="117" width="0.1189%" height="15" fill="rgb(250,140,9)" fg:x="23589" fg:w="53"/><text x="53.2140%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="52.9210%" y="133" width="0.1772%" height="15" fill="rgb(225,59,14)" fg:x="23589" fg:w="79"/><text x="53.2140%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.5761%" y="117" width="0.1189%" height="15" fill="rgb(214,152,51)" fg:x="23881" fg:w="53"/><text x="53.8690%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="53.5761%" y="133" width="0.1772%" height="15" fill="rgb(251,227,43)" fg:x="23881" fg:w="79"/><text x="53.8690%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584 instructions, 1.31%)</title><rect x="52.9210%" y="149" width="1.3102%" height="15" fill="rgb(241,96,17)" fg:x="23589" fg:w="584"/><text x="53.2140%" y="159.50"></text></g><g><title>candid::types::internal::env_id (918 instructions, 2.06%)</title><rect x="52.9210%" y="165" width="2.0595%" height="15" fill="rgb(234,198,43)" fg:x="23589" fg:w="918"/><text x="53.2140%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (34 instructions, 0.08%)</title><rect x="54.9805%" y="165" width="0.0763%" height="15" fill="rgb(220,108,29)" fg:x="24507" fg:w="34"/><text x="55.2735%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="55.0814%" y="149" width="0.3769%" height="15" fill="rgb(226,163,33)" fg:x="24552" fg:w="168"/><text x="55.3744%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.46%)</title><rect x="55.0568%" y="165" width="0.4622%" height="15" fill="rgb(205,194,45)" fg:x="24541" fg:w="206"/><text x="55.3497%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="55.5189%" y="149" width="0.0628%" height="15" fill="rgb(206,143,44)" fg:x="24747" fg:w="28"/><text x="55.8119%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.03%)</title><rect x="55.5817%" y="149" width="0.0337%" height="15" fill="rgb(236,136,36)" fg:x="24775" fg:w="15"/><text x="55.8747%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2296 (15 instructions, 0.03%)</title><rect x="55.6154%" y="149" width="0.0337%" height="15" fill="rgb(249,172,42)" fg:x="24790" fg:w="15"/><text x="55.9083%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (133 instructions, 0.30%)</title><rect x="55.5189%" y="165" width="0.2984%" height="15" fill="rgb(216,139,23)" fg:x="24747" fg:w="133"/><text x="55.8119%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8173%" y="165" width="0.0247%" height="15" fill="rgb(207,166,20)" fg:x="24880" fg:w="11"/><text x="56.1103%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8420%" y="165" width="0.0247%" height="15" fill="rgb(210,209,22)" fg:x="24891" fg:w="11"/><text x="56.1349%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8666%" y="165" width="0.0247%" height="15" fill="rgb(232,118,20)" fg:x="24902" fg:w="11"/><text x="56.1596%" y="175.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="55.8913%" y="165" width="0.9198%" height="15" fill="rgb(238,113,42)" fg:x="24913" fg:w="410"/><text x="56.1843%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="56.8111%" y="133" width="0.0269%" height="15" fill="rgb(231,42,5)" fg:x="25323" fg:w="12"/><text x="57.1041%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="56.8381%" y="133" width="0.2759%" height="15" fill="rgb(243,166,24)" fg:x="25335" fg:w="123"/><text x="57.1310%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.17%)</title><rect x="57.1140%" y="101" width="0.1683%" height="15" fill="rgb(237,226,12)" fg:x="25458" fg:w="75"/><text x="57.4070%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.49%)</title><rect x="57.1140%" y="117" width="0.4936%" height="15" fill="rgb(229,133,24)" fg:x="25458" fg:w="220"/><text x="57.4070%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (247 instructions, 0.55%)</title><rect x="57.1140%" y="133" width="0.5541%" height="15" fill="rgb(238,33,43)" fg:x="25458" fg:w="247"/><text x="57.4070%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="57.6681%" y="133" width="0.0247%" height="15" fill="rgb(227,59,38)" fg:x="25705" fg:w="11"/><text x="57.9611%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (435 instructions, 0.98%)</title><rect x="56.8111%" y="149" width="0.9759%" height="15" fill="rgb(230,97,0)" fg:x="25323" fg:w="435"/><text x="57.1041%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (469 instructions, 1.05%)</title><rect x="56.8111%" y="165" width="1.0522%" height="15" fill="rgb(250,173,50)" fg:x="25323" fg:w="469"/><text x="57.1041%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="57.8633%" y="149" width="0.0471%" height="15" fill="rgb(240,15,50)" fg:x="25792" fg:w="21"/><text x="58.1563%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.21%)</title><rect x="57.9104%" y="149" width="0.2131%" height="15" fill="rgb(221,93,22)" fg:x="25813" fg:w="95"/><text x="58.2034%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.44%)</title><rect x="57.8633%" y="165" width="0.4420%" height="15" fill="rgb(245,180,53)" fg:x="25792" fg:w="197"/><text x="58.1563%" y="175.50"></text></g><g><title>memset (218 instructions, 0.49%)</title><rect x="58.3053%" y="165" width="0.4891%" height="15" fill="rgb(231,88,51)" fg:x="25989" fg:w="218"/><text x="58.5983%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.37%)</title><rect x="58.7944%" y="165" width="0.3657%" height="15" fill="rgb(240,58,21)" fg:x="26207" fg:w="163"/><text x="59.0873%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.05%)</title><rect x="59.1600%" y="165" width="1.0544%" height="15" fill="rgb(237,21,10)" fg:x="26370" fg:w="470"/><text x="59.4530%" y="175.50"></text></g><g><title>memset (126 instructions, 0.28%)</title><rect x="60.2145%" y="149" width="0.2827%" height="15" fill="rgb(218,43,11)" fg:x="26840" fg:w="126"/><text x="60.5074%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.19%)</title><rect x="60.4972%" y="149" width="11.1881%" height="15" fill="rgb(218,221,29)" fg:x="26966" fg:w="4987"/><text x="60.7901%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.12%)</title><rect x="60.2145%" y="165" width="12.1169%" height="15" fill="rgb(214,118,42)" fg:x="26840" fg:w="5401"/><text x="60.5074%" y="175.50">&lt;sha2::core_api..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="72.3314%" y="165" width="0.1705%" height="15" fill="rgb(251,200,26)" fg:x="32241" fg:w="76"/><text x="72.6244%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="72.5019%" y="149" width="0.0269%" height="15" fill="rgb(237,101,39)" fg:x="32317" fg:w="12"/><text x="72.7949%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.5535%" y="117" width="0.2827%" height="15" fill="rgb(251,117,11)" fg:x="32340" fg:w="126"/><text x="72.8465%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.34%)</title><rect x="72.5535%" y="133" width="0.3432%" height="15" fill="rgb(216,223,23)" fg:x="32340" fg:w="153"/><text x="72.8465%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.8968%" y="133" width="0.2827%" height="15" fill="rgb(251,54,12)" fg:x="32493" fg:w="126"/><text x="73.1897%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="73.2512%" y="117" width="0.1211%" height="15" fill="rgb(254,176,54)" fg:x="32651" fg:w="54"/><text x="73.5442%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="73.3724%" y="117" width="0.1413%" height="15" fill="rgb(210,32,8)" fg:x="32705" fg:w="63"/><text x="73.6653%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.55%)</title><rect x="73.2512%" y="133" width="0.5452%" height="15" fill="rgb(235,52,38)" fg:x="32651" fg:w="243"/><text x="73.5442%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (592 instructions, 1.33%)</title><rect x="72.5288%" y="149" width="1.3281%" height="15" fill="rgb(231,4,44)" fg:x="32329" fg:w="592"/><text x="72.8218%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="73.8570%" y="149" width="0.1885%" height="15" fill="rgb(249,2,32)" fg:x="32921" fg:w="84"/><text x="74.1499%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="74.0454%" y="117" width="0.0269%" height="15" fill="rgb(224,65,26)" fg:x="33005" fg:w="12"/><text x="74.3384%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.11%)</title><rect x="74.0454%" y="133" width="0.1122%" height="15" fill="rgb(250,73,40)" fg:x="33005" fg:w="50"/><text x="74.3384%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="74.1576%" y="133" width="0.1705%" height="15" fill="rgb(253,177,16)" fg:x="33055" fg:w="76"/><text x="74.4505%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="74.3281%" y="117" width="0.0269%" height="15" fill="rgb(217,32,34)" fg:x="33131" fg:w="12"/><text x="74.6211%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="74.3550%" y="101" width="0.1189%" height="15" fill="rgb(212,7,10)" fg:x="33143" fg:w="53"/><text x="74.6480%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="74.4739%" y="101" width="0.8166%" height="15" fill="rgb(245,89,8)" fg:x="33196" fg:w="364"/><text x="74.7669%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="75.2905%" y="101" width="0.1615%" height="15" fill="rgb(237,16,53)" fg:x="33560" fg:w="72"/><text x="75.5835%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="74.3550%" y="117" width="1.6288%" height="15" fill="rgb(250,204,30)" fg:x="33143" fg:w="726"/><text x="74.6480%" y="127.50"></text></g><g><title>candid::types::internal::env_add (958 instructions, 2.15%)</title><rect x="74.3281%" y="133" width="2.1492%" height="15" fill="rgb(208,77,27)" fg:x="33131" fg:w="958"/><text x="74.6211%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.4773%" y="133" width="0.1705%" height="15" fill="rgb(250,204,28)" fg:x="34089" fg:w="76"/><text x="76.7703%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.6478%" y="133" width="0.1705%" height="15" fill="rgb(244,63,21)" fg:x="34165" fg:w="76"/><text x="76.9408%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (12 instructions, 0.03%)</title><rect x="76.8183%" y="117" width="0.0269%" height="15" fill="rgb(236,85,44)" fg:x="34241" fg:w="12"/><text x="77.1113%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.8452%" y="101" width="0.1189%" height="15" fill="rgb(215,98,4)" fg:x="34253" fg:w="53"/><text x="77.1382%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="76.9641%" y="101" width="0.8166%" height="15" fill="rgb(235,38,11)" fg:x="34306" fg:w="364"/><text x="77.2571%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="77.7808%" y="101" width="0.1615%" height="15" fill="rgb(254,186,25)" fg:x="34670" fg:w="72"/><text x="78.0737%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="76.8452%" y="117" width="1.6288%" height="15" fill="rgb(225,55,31)" fg:x="34253" fg:w="726"/><text x="77.1382%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.38%)</title><rect x="78.4740%" y="117" width="1.3775%" height="15" fill="rgb(211,15,21)" fg:x="34979" fg:w="614"/><text x="78.7670%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="79.8515%" y="101" width="0.1817%" height="15" fill="rgb(215,187,41)" fg:x="35593" fg:w="81"/><text x="80.1445%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="79.8515%" y="117" width="0.2423%" height="15" fill="rgb(248,69,32)" fg:x="35593" fg:w="108"/><text x="80.1445%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,644 instructions, 3.69%)</title><rect x="76.8183%" y="133" width="3.6882%" height="15" fill="rgb(252,102,52)" fg:x="34241" fg:w="1644"/><text x="77.1113%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.5066%" y="85" width="0.1189%" height="15" fill="rgb(253,140,32)" fg:x="35885" fg:w="53"/><text x="80.7995%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="80.6255%" y="85" width="0.3455%" height="15" fill="rgb(216,56,42)" fg:x="35938" fg:w="154"/><text x="80.9184%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="80.5066%" y="101" width="0.5721%" height="15" fill="rgb(216,184,14)" fg:x="35885" fg:w="255"/><text x="80.7995%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="80.5066%" y="117" width="1.0499%" height="15" fill="rgb(237,187,27)" fg:x="35885" fg:w="468"/><text x="80.7995%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1078 (42 instructions, 0.09%)</title><rect x="81.5565%" y="117" width="0.0942%" height="15" fill="rgb(219,65,3)" fg:x="36353" fg:w="42"/><text x="81.8495%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.6507%" y="117" width="0.0247%" height="15" fill="rgb(245,83,25)" fg:x="36395" fg:w="11"/><text x="81.9437%" y="127.50"></text></g><g><title>candid::types::internal::env_id (725 instructions, 1.63%)</title><rect x="80.5066%" y="133" width="1.6265%" height="15" fill="rgb(214,205,45)" fg:x="35885" fg:w="725"/><text x="80.7995%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,729 instructions, 8.37%)</title><rect x="74.0454%" y="149" width="8.3659%" height="15" fill="rgb(241,20,18)" fg:x="33005" fg:w="3729"/><text x="74.3384%" y="159.50">candid::ty..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.4113%" y="117" width="0.1705%" height="15" fill="rgb(232,163,23)" fg:x="36734" fg:w="76"/><text x="82.7042%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="82.4113%" y="133" width="0.2468%" height="15" fill="rgb(214,5,46)" fg:x="36734" fg:w="110"/><text x="82.7042%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="82.4113%" y="149" width="0.3993%" height="15" fill="rgb(229,78,17)" fg:x="36734" fg:w="178"/><text x="82.7042%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="82.8106%" y="133" width="0.0538%" height="15" fill="rgb(248,89,10)" fg:x="36912" fg:w="24"/><text x="83.1036%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.17%)</title><rect x="82.8645%" y="101" width="0.1750%" height="15" fill="rgb(248,54,15)" fg:x="36936" fg:w="78"/><text x="83.1574%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.34%)</title><rect x="82.8645%" y="117" width="0.3432%" height="15" fill="rgb(223,116,6)" fg:x="36936" fg:w="153"/><text x="83.1574%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="83.2077%" y="117" width="0.1705%" height="15" fill="rgb(205,125,38)" fg:x="37089" fg:w="76"/><text x="83.5007%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.69%)</title><rect x="82.8645%" y="133" width="0.6910%" height="15" fill="rgb(251,78,38)" fg:x="36936" fg:w="308"/><text x="83.1574%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.5554%" y="85" width="0.1189%" height="15" fill="rgb(253,78,28)" fg:x="37244" fg:w="53"/><text x="83.8484%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="83.6743%" y="85" width="0.3455%" height="15" fill="rgb(209,120,3)" fg:x="37297" fg:w="154"/><text x="83.9673%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="83.5554%" y="101" width="0.5721%" height="15" fill="rgb(238,229,9)" fg:x="37244" fg:w="255"/><text x="83.8484%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="83.5554%" y="117" width="1.0499%" height="15" fill="rgb(253,159,18)" fg:x="37244" fg:w="468"/><text x="83.8484%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="84.6054%" y="117" width="0.1705%" height="15" fill="rgb(244,42,34)" fg:x="37712" fg:w="76"/><text x="84.8983%" y="127.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="84.7759%" y="117" width="0.3051%" height="15" fill="rgb(224,8,7)" fg:x="37788" fg:w="136"/><text x="85.0688%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (986 instructions, 2.21%)</title><rect x="83.5554%" y="133" width="2.2121%" height="15" fill="rgb(210,201,45)" fg:x="37244" fg:w="986"/><text x="83.8484%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.7675%" y="101" width="0.1705%" height="15" fill="rgb(252,185,21)" fg:x="38230" fg:w="76"/><text x="86.0605%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="85.7675%" y="117" width="0.2468%" height="15" fill="rgb(223,131,1)" fg:x="38230" fg:w="110"/><text x="86.0605%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="85.7675%" y="133" width="0.3993%" height="15" fill="rgb(245,141,16)" fg:x="38230" fg:w="178"/><text x="86.0605%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.1668%" y="85" width="0.1189%" height="15" fill="rgb(229,55,45)" fg:x="38408" fg:w="53"/><text x="86.4598%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.18%)</title><rect x="86.1668%" y="101" width="0.1772%" height="15" fill="rgb(208,92,15)" fg:x="38408" fg:w="79"/><text x="86.4598%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.66%)</title><rect x="86.1668%" y="117" width="0.6551%" height="15" fill="rgb(234,185,47)" fg:x="38408" fg:w="292"/><text x="86.4598%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.8219%" y="117" width="0.0404%" height="15" fill="rgb(253,104,50)" fg:x="38700" fg:w="18"/><text x="87.1149%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.8623%" y="117" width="0.0247%" height="15" fill="rgb(205,70,7)" fg:x="38718" fg:w="11"/><text x="87.1553%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 0.98%)</title><rect x="86.1668%" y="133" width="0.9804%" height="15" fill="rgb(240,178,43)" fg:x="38408" fg:w="437"/><text x="86.4598%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="87.1472%" y="85" width="0.1705%" height="15" fill="rgb(214,112,2)" fg:x="38845" fg:w="76"/><text x="87.4402%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="87.1472%" y="101" width="0.2468%" height="15" fill="rgb(206,46,17)" fg:x="38845" fg:w="110"/><text x="87.4402%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="87.1472%" y="117" width="0.3926%" height="15" fill="rgb(225,220,16)" fg:x="38845" fg:w="175"/><text x="87.4402%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.51%)</title><rect x="87.1472%" y="133" width="0.5093%" height="15" fill="rgb(238,65,40)" fg:x="38845" fg:w="227"/><text x="87.4402%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.11%)</title><rect x="87.6565%" y="133" width="0.1122%" height="15" fill="rgb(230,151,21)" fg:x="39072" fg:w="50"/><text x="87.9495%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.7687%" y="101" width="0.1817%" height="15" fill="rgb(218,58,49)" fg:x="39122" fg:w="81"/><text x="88.0616%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="87.7687%" y="117" width="0.2423%" height="15" fill="rgb(219,179,14)" fg:x="39122" fg:w="108"/><text x="88.0616%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.17%)</title><rect x="88.0109%" y="117" width="0.1750%" height="15" fill="rgb(223,72,1)" fg:x="39230" fg:w="78"/><text x="88.3039%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.49%)</title><rect x="87.7687%" y="133" width="0.4891%" height="15" fill="rgb(238,126,10)" fg:x="39122" fg:w="218"/><text x="88.0616%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.2577%" y="133" width="0.0247%" height="15" fill="rgb(224,206,38)" fg:x="39340" fg:w="11"/><text x="88.5507%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,642 instructions, 5.93%)</title><rect x="82.8106%" y="149" width="5.9272%" height="15" fill="rgb(212,201,54)" fg:x="36912" fg:w="2642"/><text x="83.1036%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.7378%" y="149" width="0.0247%" height="15" fill="rgb(218,154,48)" fg:x="39554" fg:w="11"/><text x="89.0308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="88.7625%" y="117" width="0.1705%" height="15" fill="rgb(232,93,24)" fg:x="39565" fg:w="76"/><text x="89.0555%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="88.7625%" y="133" width="0.2468%" height="15" fill="rgb(245,30,21)" fg:x="39565" fg:w="110"/><text x="89.0555%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="89.1551%" y="117" width="0.2266%" height="15" fill="rgb(242,148,29)" fg:x="39740" fg:w="101"/><text x="89.4481%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="89.1551%" y="133" width="0.3051%" height="15" fill="rgb(244,153,54)" fg:x="39740" fg:w="136"/><text x="89.4481%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.86%)</title><rect x="88.7625%" y="149" width="0.8615%" height="15" fill="rgb(252,87,22)" fg:x="39565" fg:w="384"/><text x="89.0555%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.66%)</title><rect x="89.6240%" y="149" width="0.6596%" height="15" fill="rgb(210,51,29)" fg:x="39949" fg:w="294"/><text x="89.9170%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="90.2836%" y="149" width="0.2692%" height="15" fill="rgb(242,136,47)" fg:x="40243" fg:w="120"/><text x="90.5765%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="90.5528%" y="149" width="0.0718%" height="15" fill="rgb(238,68,4)" fg:x="40363" fg:w="32"/><text x="90.8458%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.6246%" y="117" width="0.1705%" height="15" fill="rgb(242,161,30)" fg:x="40395" fg:w="76"/><text x="90.9175%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="90.6246%" y="133" width="0.2468%" height="15" fill="rgb(218,58,44)" fg:x="40395" fg:w="110"/><text x="90.9175%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="90.6246%" y="149" width="0.3926%" height="15" fill="rgb(252,125,32)" fg:x="40395" fg:w="175"/><text x="90.9175%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="91.0172%" y="149" width="0.1705%" height="15" fill="rgb(219,178,0)" fg:x="40570" fg:w="76"/><text x="91.3102%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.1877%" y="149" width="0.1010%" height="15" fill="rgb(213,152,7)" fg:x="40646" fg:w="45"/><text x="91.4807%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.2886%" y="149" width="0.1010%" height="15" fill="rgb(249,109,34)" fg:x="40691" fg:w="45"/><text x="91.5816%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="91.3896%" y="149" width="0.1234%" height="15" fill="rgb(232,96,21)" fg:x="40736" fg:w="55"/><text x="91.6826%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.5130%" y="101" width="0.1189%" height="15" fill="rgb(228,27,39)" fg:x="40791" fg:w="53"/><text x="91.8060%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="91.6319%" y="101" width="0.3455%" height="15" fill="rgb(211,182,52)" fg:x="40844" fg:w="154"/><text x="91.9249%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.57%)</title><rect x="91.5130%" y="117" width="0.5721%" height="15" fill="rgb(234,178,38)" fg:x="40791" fg:w="255"/><text x="91.8060%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 1.05%)</title><rect x="91.5130%" y="133" width="1.0499%" height="15" fill="rgb(221,111,3)" fg:x="40791" fg:w="468"/><text x="91.8060%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="92.5629%" y="101" width="0.1705%" height="15" fill="rgb(228,175,21)" fg:x="41259" fg:w="76"/><text x="92.8559%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="92.5629%" y="117" width="0.2468%" height="15" fill="rgb(228,174,43)" fg:x="41259" fg:w="110"/><text x="92.8559%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="92.5629%" y="133" width="0.3926%" height="15" fill="rgb(211,191,0)" fg:x="41259" fg:w="175"/><text x="92.8559%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (810 instructions, 1.82%)</title><rect x="91.5130%" y="149" width="1.8172%" height="15" fill="rgb(253,117,3)" fg:x="40791" fg:w="810"/><text x="91.8060%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.3302%" y="149" width="0.0673%" height="15" fill="rgb(241,127,19)" fg:x="41601" fg:w="30"/><text x="93.6232%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="93.3975%" y="149" width="0.1234%" height="15" fill="rgb(218,103,12)" fg:x="41631" fg:w="55"/><text x="93.6905%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.07%)</title><rect x="93.5209%" y="149" width="0.0740%" height="15" fill="rgb(236,214,43)" fg:x="41686" fg:w="33"/><text x="93.8139%" y="159.50"></text></g><g><title>std::io::Write::write_all (61 instructions, 0.14%)</title><rect x="93.5949%" y="149" width="0.1369%" height="15" fill="rgb(244,144,19)" fg:x="41719" fg:w="61"/><text x="93.8879%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.7318%" y="149" width="0.1817%" height="15" fill="rgb(246,188,10)" fg:x="41780" fg:w="81"/><text x="94.0247%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.9135%" y="149" width="0.2759%" height="15" fill="rgb(212,193,33)" fg:x="41861" fg:w="123"/><text x="94.2065%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.1894%" y="149" width="0.0247%" height="15" fill="rgb(241,51,29)" fg:x="41984" fg:w="11"/><text x="94.4824%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="94.2141%" y="149" width="0.3769%" height="15" fill="rgb(211,58,19)" fg:x="41995" fg:w="168"/><text x="94.5071%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5910%" y="149" width="0.0112%" height="15" fill="rgb(229,111,26)" fg:x="42163" fg:w="5"/><text x="94.8840%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.6022%" y="149" width="0.0247%" height="15" fill="rgb(213,115,40)" fg:x="42168" fg:w="11"/><text x="94.8952%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.6269%" y="149" width="0.2692%" height="15" fill="rgb(209,56,44)" fg:x="42179" fg:w="120"/><text x="94.9199%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="94.8961%" y="149" width="0.1234%" height="15" fill="rgb(230,108,32)" fg:x="42299" fg:w="55"/><text x="95.1891%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.22%)</title><rect x="95.0195%" y="149" width="0.2176%" height="15" fill="rgb(216,165,31)" fg:x="42354" fg:w="97"/><text x="95.3125%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (10,974 instructions, 24.62%)</title><rect x="72.5019%" y="165" width="24.6197%" height="15" fill="rgb(218,122,21)" fg:x="32317" fg:w="10974"/><text x="72.7949%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (43,923 instructions, 98.54%)</title><rect x="0.3836%" y="181" width="98.5395%" height="15" fill="rgb(223,224,47)" fg:x="171" fg:w="43923"/><text x="0.6766%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9231%" y="181" width="0.0269%" height="15" fill="rgb(238,102,44)" fg:x="44094" fg:w="12"/><text x="99.2161%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="99.2327%" y="165" width="0.1234%" height="15" fill="rgb(236,46,40)" fg:x="44232" fg:w="55"/><text x="99.5257%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="99.3561%" y="165" width="0.1413%" height="15" fill="rgb(247,202,50)" fg:x="44287" fg:w="63"/><text x="99.6491%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (370 instructions, 0.83%)</title><rect x="98.9501%" y="181" width="0.8301%" height="15" fill="rgb(209,99,20)" fg:x="44106" fg:w="370"/><text x="99.2430%" y="191.50"></text></g><g><title>all (44,574 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(252,27,34)" fg:x="0" fg:w="44574"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (44,574 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(215,206,23)" fg:x="0" fg:w="44574"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>