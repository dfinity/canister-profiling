<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="52124"><g><title>ic_cdk::setup (24 instructions, 0.05%)</title><rect x="0.0000%" y="181" width="0.0460%" height="15" fill="rgb(240,229,28)" fg:x="0" fg:w="24"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.0460%" y="181" width="0.1592%" height="15" fill="rgb(250,185,3)" fg:x="24" fg:w="83"/><text x="0.3390%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.2053%" y="181" width="0.1592%" height="15" fill="rgb(212,59,25)" fg:x="107" fg:w="83"/><text x="0.4982%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="0.3645%" y="165" width="0.1592%" height="15" fill="rgb(221,87,20)" fg:x="190" fg:w="83"/><text x="0.6575%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="0.5238%" y="149" width="0.1573%" height="15" fill="rgb(213,74,28)" fg:x="273" fg:w="82"/><text x="0.8167%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="0.6811%" y="133" width="0.0115%" height="15" fill="rgb(224,132,34)" fg:x="355" fg:w="6"/><text x="0.9740%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="0.6811%" y="149" width="0.8441%" height="15" fill="rgb(222,101,24)" fg:x="355" fg:w="440"/><text x="0.9740%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="1.5252%" y="149" width="0.1823%" height="15" fill="rgb(254,142,4)" fg:x="795" fg:w="95"/><text x="1.8182%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.7075%" y="149" width="0.1151%" height="15" fill="rgb(230,229,49)" fg:x="890" fg:w="60"/><text x="2.0004%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.8226%" y="149" width="0.1151%" height="15" fill="rgb(238,70,47)" fg:x="950" fg:w="60"/><text x="2.1155%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="1.9377%" y="149" width="0.1151%" height="15" fill="rgb(231,160,17)" fg:x="1010" fg:w="60"/><text x="2.2307%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="2.0528%" y="149" width="0.1151%" height="15" fill="rgb(218,68,53)" fg:x="1070" fg:w="60"/><text x="2.3458%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="2.1679%" y="149" width="0.1573%" height="15" fill="rgb(236,111,10)" fg:x="1130" fg:w="82"/><text x="2.4609%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="2.3252%" y="149" width="0.1343%" height="15" fill="rgb(224,34,41)" fg:x="1212" fg:w="70"/><text x="2.6182%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="2.4595%" y="133" width="0.0115%" height="15" fill="rgb(241,118,19)" fg:x="1282" fg:w="6"/><text x="2.7525%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="2.4595%" y="149" width="0.8441%" height="15" fill="rgb(238,129,25)" fg:x="1282" fg:w="440"/><text x="2.7525%" y="159.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="3.3037%" y="149" width="0.0365%" height="15" fill="rgb(238,22,31)" fg:x="1722" fg:w="19"/><text x="3.5966%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="3.3401%" y="133" width="0.1592%" height="15" fill="rgb(222,174,48)" fg:x="1741" fg:w="83"/><text x="3.6331%" y="143.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="3.4993%" y="101" width="0.1285%" height="15" fill="rgb(206,152,40)" fg:x="1824" fg:w="67"/><text x="3.7923%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="3.4993%" y="117" width="0.1880%" height="15" fill="rgb(218,99,54)" fg:x="1824" fg:w="98"/><text x="3.7923%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="3.6874%" y="69" width="0.0211%" height="15" fill="rgb(220,174,26)" fg:x="1922" fg:w="11"/><text x="3.9803%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="3.7085%" y="53" width="0.0671%" height="15" fill="rgb(245,116,9)" fg:x="1933" fg:w="35"/><text x="4.0014%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="3.7085%" y="69" width="0.1266%" height="15" fill="rgb(209,72,35)" fg:x="1933" fg:w="66"/><text x="4.0014%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="3.6874%" y="85" width="0.2820%" height="15" fill="rgb(226,126,21)" fg:x="1922" fg:w="147"/><text x="3.9803%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="3.6874%" y="101" width="0.4067%" height="15" fill="rgb(227,192,1)" fg:x="1922" fg:w="212"/><text x="3.9803%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="3.6874%" y="117" width="0.4259%" height="15" fill="rgb(237,180,29)" fg:x="1922" fg:w="222"/><text x="3.9803%" y="127.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="3.4993%" y="133" width="0.8844%" height="15" fill="rgb(230,197,35)" fg:x="1824" fg:w="461"/><text x="3.7923%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.32%)</title><rect x="3.3401%" y="149" width="1.3218%" height="15" fill="rgb(246,193,31)" fg:x="1741" fg:w="689"/><text x="3.6331%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="4.6620%" y="149" width="0.1823%" height="15" fill="rgb(241,36,4)" fg:x="2430" fg:w="95"/><text x="4.9549%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="4.8442%" y="149" width="0.1151%" height="15" fill="rgb(241,130,17)" fg:x="2525" fg:w="60"/><text x="5.1372%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="4.9593%" y="149" width="0.1458%" height="15" fill="rgb(206,137,32)" fg:x="2585" fg:w="76"/><text x="5.2523%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="5.1051%" y="149" width="0.1343%" height="15" fill="rgb(237,228,51)" fg:x="2661" fg:w="70"/><text x="5.3981%" y="159.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="5.2394%" y="117" width="0.0115%" height="15" fill="rgb(243,6,42)" fg:x="2731" fg:w="6"/><text x="5.5324%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="5.2394%" y="133" width="0.8441%" height="15" fill="rgb(251,74,28)" fg:x="2731" fg:w="440"/><text x="5.5324%" y="143.50"></text></g><g><title>memcmp (19 instructions, 0.04%)</title><rect x="6.0836%" y="133" width="0.0365%" height="15" fill="rgb(218,20,49)" fg:x="3171" fg:w="19"/><text x="6.3765%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="6.1200%" y="117" width="0.1592%" height="15" fill="rgb(238,28,14)" fg:x="3190" fg:w="83"/><text x="6.4130%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="6.2793%" y="85" width="0.1285%" height="15" fill="rgb(229,40,46)" fg:x="3273" fg:w="67"/><text x="6.5722%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="6.2793%" y="101" width="0.1880%" height="15" fill="rgb(244,195,20)" fg:x="3273" fg:w="98"/><text x="6.5722%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="6.4673%" y="53" width="0.0211%" height="15" fill="rgb(253,56,35)" fg:x="3371" fg:w="11"/><text x="6.7602%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="6.4884%" y="37" width="0.0671%" height="15" fill="rgb(210,149,44)" fg:x="3382" fg:w="35"/><text x="6.7813%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="6.4884%" y="53" width="0.1266%" height="15" fill="rgb(240,135,12)" fg:x="3382" fg:w="66"/><text x="6.7813%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="6.4673%" y="69" width="0.2820%" height="15" fill="rgb(251,24,50)" fg:x="3371" fg:w="147"/><text x="6.7602%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="6.4673%" y="85" width="0.4067%" height="15" fill="rgb(243,200,47)" fg:x="3371" fg:w="212"/><text x="6.7602%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="6.4673%" y="101" width="0.4259%" height="15" fill="rgb(224,166,26)" fg:x="3371" fg:w="222"/><text x="6.7602%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="6.2793%" y="117" width="0.8844%" height="15" fill="rgb(233,0,47)" fg:x="3273" fg:w="461"/><text x="6.5722%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.32%)</title><rect x="6.1200%" y="133" width="1.3218%" height="15" fill="rgb(253,80,5)" fg:x="3190" fg:w="689"/><text x="6.4130%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="7.4419%" y="133" width="0.1823%" height="15" fill="rgb(214,133,25)" fg:x="3879" fg:w="95"/><text x="7.7348%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="7.6241%" y="133" width="0.1151%" height="15" fill="rgb(209,27,14)" fg:x="3974" fg:w="60"/><text x="7.9171%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="7.7392%" y="117" width="0.1573%" height="15" fill="rgb(219,102,51)" fg:x="4034" fg:w="82"/><text x="8.0322%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="7.8966%" y="117" width="0.1823%" height="15" fill="rgb(237,18,16)" fg:x="4116" fg:w="95"/><text x="8.1895%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.0788%" y="117" width="0.1458%" height="15" fill="rgb(241,85,17)" fg:x="4211" fg:w="76"/><text x="8.3718%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (335 instructions, 0.64%)</title><rect x="7.7392%" y="133" width="0.6427%" height="15" fill="rgb(236,90,42)" fg:x="4034" fg:w="335"/><text x="8.0322%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="8.3819%" y="133" width="0.1592%" height="15" fill="rgb(249,57,21)" fg:x="4369" fg:w="83"/><text x="8.6749%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="8.5412%" y="117" width="0.1573%" height="15" fill="rgb(243,12,36)" fg:x="4452" fg:w="82"/><text x="8.8341%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (95 instructions, 0.18%)</title><rect x="8.6985%" y="117" width="0.1823%" height="15" fill="rgb(253,128,47)" fg:x="4534" fg:w="95"/><text x="8.9915%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="8.8807%" y="117" width="0.1458%" height="15" fill="rgb(207,33,20)" fg:x="4629" fg:w="76"/><text x="9.1737%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (330 instructions, 0.63%)</title><rect x="8.5412%" y="133" width="0.6331%" height="15" fill="rgb(233,215,35)" fg:x="4452" fg:w="330"/><text x="8.8341%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,346 instructions, 4.50%)</title><rect x="5.2394%" y="149" width="4.5008%" height="15" fill="rgb(249,188,52)" fg:x="2731" fg:w="2346"/><text x="5.5324%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="9.7402%" y="149" width="0.1458%" height="15" fill="rgb(225,12,32)" fg:x="5077" fg:w="76"/><text x="10.0332%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.8860%" y="149" width="0.0288%" height="15" fill="rgb(247,98,14)" fg:x="5153" fg:w="15"/><text x="10.1790%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 instructions, 0.03%)</title><rect x="9.9148%" y="149" width="0.0288%" height="15" fill="rgb(247,219,48)" fg:x="5168" fg:w="15"/><text x="10.2078%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 instructions, 0.02%)</title><rect x="9.9436%" y="149" width="0.0173%" height="15" fill="rgb(253,60,48)" fg:x="5183" fg:w="9"/><text x="10.2366%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (18 instructions, 0.03%)</title><rect x="9.9609%" y="149" width="0.0345%" height="15" fill="rgb(245,15,52)" fg:x="5192" fg:w="18"/><text x="10.2538%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="9.9954%" y="133" width="0.1592%" height="15" fill="rgb(220,133,28)" fg:x="5210" fg:w="83"/><text x="10.2884%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.34%)</title><rect x="9.9954%" y="149" width="0.3434%" height="15" fill="rgb(217,180,4)" fg:x="5210" fg:w="179"/><text x="10.2884%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.3388%" y="117" width="0.1592%" height="15" fill="rgb(251,24,1)" fg:x="5389" fg:w="83"/><text x="10.6318%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="10.3388%" y="133" width="0.2417%" height="15" fill="rgb(212,185,49)" fg:x="5389" fg:w="126"/><text x="10.6318%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.40%)</title><rect x="10.3388%" y="149" width="0.3990%" height="15" fill="rgb(215,175,22)" fg:x="5389" fg:w="208"/><text x="10.6318%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="10.7379%" y="133" width="0.1592%" height="15" fill="rgb(250,205,14)" fg:x="5597" fg:w="83"/><text x="11.0308%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (179 instructions, 0.34%)</title><rect x="10.7379%" y="149" width="0.3434%" height="15" fill="rgb(225,211,22)" fg:x="5597" fg:w="179"/><text x="11.0308%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.0813%" y="149" width="0.1592%" height="15" fill="rgb(251,179,42)" fg:x="5776" fg:w="83"/><text x="11.3742%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="11.2405%" y="149" width="0.1650%" height="15" fill="rgb(208,216,51)" fg:x="5859" fg:w="86"/><text x="11.5335%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.4055%" y="149" width="0.1592%" height="15" fill="rgb(235,36,11)" fg:x="5945" fg:w="83"/><text x="11.6985%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="11.5647%" y="149" width="0.1592%" height="15" fill="rgb(213,189,28)" fg:x="6028" fg:w="83"/><text x="11.8577%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="11.7316%" y="149" width="0.1650%" height="15" fill="rgb(227,203,42)" fg:x="6115" fg:w="86"/><text x="12.0246%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="11.8966%" y="149" width="0.8211%" height="15" fill="rgb(244,72,36)" fg:x="6201" fg:w="428"/><text x="12.1896%" y="159.50"></text></g><g><title>memcpy (428 instructions, 0.82%)</title><rect x="12.7177%" y="149" width="0.8211%" height="15" fill="rgb(213,53,17)" fg:x="6629" fg:w="428"/><text x="13.0107%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (8,015 instructions, 15.38%)</title><rect x="0.5238%" y="165" width="15.3768%" height="15" fill="rgb(207,167,3)" fg:x="273" fg:w="8015"/><text x="0.8167%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (380 instructions, 0.73%)</title><rect x="15.9005%" y="165" width="0.7290%" height="15" fill="rgb(216,98,30)" fg:x="8288" fg:w="380"/><text x="16.1935%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="16.6296%" y="133" width="0.0269%" height="15" fill="rgb(236,123,15)" fg:x="8668" fg:w="14"/><text x="16.9225%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="16.6564%" y="117" width="0.1132%" height="15" fill="rgb(248,81,50)" fg:x="8682" fg:w="59"/><text x="16.9494%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.76%)</title><rect x="16.7696%" y="117" width="0.7597%" height="15" fill="rgb(214,120,4)" fg:x="8741" fg:w="396"/><text x="17.0626%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="17.5294%" y="117" width="0.3319%" height="15" fill="rgb(208,179,34)" fg:x="9137" fg:w="173"/><text x="17.8223%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.69%)</title><rect x="16.6564%" y="133" width="1.6902%" height="15" fill="rgb(227,140,7)" fg:x="8682" fg:w="881"/><text x="16.9494%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,027 instructions, 1.97%)</title><rect x="16.6296%" y="149" width="1.9703%" height="15" fill="rgb(214,22,6)" fg:x="8668" fg:w="1027"/><text x="16.9225%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="18.5999%" y="149" width="0.1592%" height="15" fill="rgb(207,137,27)" fg:x="9695" fg:w="83"/><text x="18.8928%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="18.7591%" y="133" width="0.0269%" height="15" fill="rgb(210,8,46)" fg:x="9778" fg:w="14"/><text x="19.0521%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="18.7860%" y="117" width="0.1132%" height="15" fill="rgb(240,16,54)" fg:x="9792" fg:w="59"/><text x="19.0789%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.76%)</title><rect x="18.8992%" y="117" width="0.7597%" height="15" fill="rgb(211,209,29)" fg:x="9851" fg:w="396"/><text x="19.1921%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="19.6589%" y="117" width="0.3319%" height="15" fill="rgb(226,228,24)" fg:x="10247" fg:w="173"/><text x="19.9519%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.69%)</title><rect x="18.7860%" y="133" width="1.6902%" height="15" fill="rgb(222,84,9)" fg:x="9792" fg:w="881"/><text x="19.0789%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,123 instructions, 2.15%)</title><rect x="18.7591%" y="149" width="2.1545%" height="15" fill="rgb(234,203,30)" fg:x="9778" fg:w="1123"/><text x="19.0521%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="20.9136%" y="149" width="0.1592%" height="15" fill="rgb(238,109,14)" fg:x="10901" fg:w="83"/><text x="21.2066%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="21.0728%" y="133" width="0.0269%" height="15" fill="rgb(233,206,34)" fg:x="10984" fg:w="14"/><text x="21.3658%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="21.0997%" y="117" width="0.1132%" height="15" fill="rgb(220,167,47)" fg:x="10998" fg:w="59"/><text x="21.3927%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.76%)</title><rect x="21.2129%" y="117" width="0.7597%" height="15" fill="rgb(238,105,10)" fg:x="11057" fg:w="396"/><text x="21.5058%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="21.9726%" y="117" width="0.3319%" height="15" fill="rgb(213,227,17)" fg:x="11453" fg:w="173"/><text x="22.2656%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (881 instructions, 1.69%)</title><rect x="21.0997%" y="133" width="1.6902%" height="15" fill="rgb(217,132,38)" fg:x="10998" fg:w="881"/><text x="21.3927%" y="143.50"></text></g><g><title>memcmp (813 instructions, 1.56%)</title><rect x="22.7899%" y="133" width="1.5597%" height="15" fill="rgb(242,146,4)" fg:x="11879" fg:w="813"/><text x="23.0829%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="24.3496%" y="117" width="0.1650%" height="15" fill="rgb(212,61,9)" fg:x="12692" fg:w="86"/><text x="24.6426%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="24.3496%" y="133" width="0.2321%" height="15" fill="rgb(247,126,22)" fg:x="12692" fg:w="121"/><text x="24.6426%" y="143.50"></text></g><g><title>candid::types::internal::env_add (2,024 instructions, 3.88%)</title><rect x="21.0728%" y="149" width="3.8830%" height="15" fill="rgb(220,196,2)" fg:x="10984" fg:w="2024"/><text x="21.3658%" y="159.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="24.9559%" y="101" width="0.1132%" height="15" fill="rgb(208,46,4)" fg:x="13008" fg:w="59"/><text x="25.2488%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="24.9559%" y="117" width="0.1803%" height="15" fill="rgb(252,104,46)" fg:x="13008" fg:w="94"/><text x="25.2488%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.60%)</title><rect x="24.9559%" y="133" width="0.6043%" height="15" fill="rgb(237,152,48)" fg:x="13008" fg:w="315"/><text x="25.2488%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.847 (18 instructions, 0.03%)</title><rect x="25.5602%" y="133" width="0.0345%" height="15" fill="rgb(221,59,37)" fg:x="13323" fg:w="18"/><text x="25.8532%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="25.5947%" y="133" width="0.0249%" height="15" fill="rgb(209,202,51)" fg:x="13341" fg:w="13"/><text x="25.8877%" y="143.50"></text></g><g><title>candid::types::internal::env_id (551 instructions, 1.06%)</title><rect x="24.9559%" y="149" width="1.0571%" height="15" fill="rgb(228,81,30)" fg:x="13008" fg:w="551"/><text x="25.2488%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (5,020 instructions, 9.63%)</title><rect x="16.6296%" y="165" width="9.6309%" height="15" fill="rgb(227,42,39)" fg:x="8668" fg:w="5020"/><text x="16.9225%" y="175.50">candid::typ..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="26.2605%" y="149" width="0.1017%" height="15" fill="rgb(221,26,2)" fg:x="13688" fg:w="53"/><text x="26.5534%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="26.3621%" y="133" width="0.2532%" height="15" fill="rgb(254,61,31)" fg:x="13741" fg:w="132"/><text x="26.6551%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="26.6825%" y="133" width="0.2532%" height="15" fill="rgb(222,173,38)" fg:x="13908" fg:w="132"/><text x="26.9755%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 instructions, 0.64%)</title><rect x="26.3621%" y="149" width="0.6408%" height="15" fill="rgb(218,50,12)" fg:x="13741" fg:w="334"/><text x="26.6551%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="27.0029%" y="133" width="0.0652%" height="15" fill="rgb(223,88,40)" fg:x="14075" fg:w="34"/><text x="27.2959%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="27.0681%" y="133" width="0.0652%" height="15" fill="rgb(237,54,19)" fg:x="14109" fg:w="34"/><text x="27.3611%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.03%)</title><rect x="27.1334%" y="133" width="0.0345%" height="15" fill="rgb(251,129,25)" fg:x="14143" fg:w="18"/><text x="27.4263%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.03%)</title><rect x="27.1679%" y="133" width="0.0345%" height="15" fill="rgb(238,97,19)" fg:x="14161" fg:w="18"/><text x="27.4609%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="27.2024%" y="133" width="0.1573%" height="15" fill="rgb(240,169,18)" fg:x="14179" fg:w="82"/><text x="27.4954%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.16%)</title><rect x="27.3598%" y="133" width="0.1573%" height="15" fill="rgb(230,187,49)" fg:x="14261" fg:w="82"/><text x="27.6527%" y="143.50"></text></g><g><title>binread::binary_template::write_named (92 instructions, 0.18%)</title><rect x="27.5171%" y="117" width="0.1765%" height="15" fill="rgb(209,44,26)" fg:x="14343" fg:w="92"/><text x="27.8100%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (174 instructions, 0.33%)</title><rect x="27.5171%" y="133" width="0.3338%" height="15" fill="rgb(244,0,6)" fg:x="14343" fg:w="174"/><text x="27.8100%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.13%)</title><rect x="27.8509%" y="133" width="0.1343%" height="15" fill="rgb(248,18,21)" fg:x="14517" fg:w="70"/><text x="28.1439%" y="143.50"></text></g><g><title>memcmp (6 instructions, 0.01%)</title><rect x="27.9852%" y="117" width="0.0115%" height="15" fill="rgb(245,180,19)" fg:x="14587" fg:w="6"/><text x="28.2782%" y="127.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.84%)</title><rect x="27.9852%" y="133" width="0.8441%" height="15" fill="rgb(252,118,36)" fg:x="14587" fg:w="440"/><text x="28.2782%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="28.8293%" y="117" width="0.1592%" height="15" fill="rgb(210,224,19)" fg:x="15027" fg:w="83"/><text x="29.1223%" y="127.50"></text></g><g><title>memcpy (67 instructions, 0.13%)</title><rect x="28.9886%" y="85" width="0.1285%" height="15" fill="rgb(218,30,24)" fg:x="15110" fg:w="67"/><text x="29.2815%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.19%)</title><rect x="28.9886%" y="101" width="0.1880%" height="15" fill="rgb(219,75,50)" fg:x="15110" fg:w="98"/><text x="29.2815%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (11 instructions, 0.02%)</title><rect x="29.1766%" y="53" width="0.0211%" height="15" fill="rgb(234,72,50)" fg:x="15208" fg:w="11"/><text x="29.4695%" y="63.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="29.1977%" y="37" width="0.0671%" height="15" fill="rgb(219,100,48)" fg:x="15219" fg:w="35"/><text x="29.4907%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.13%)</title><rect x="29.1977%" y="53" width="0.1266%" height="15" fill="rgb(253,5,41)" fg:x="15219" fg:w="66"/><text x="29.4907%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.28%)</title><rect x="29.1766%" y="69" width="0.2820%" height="15" fill="rgb(247,181,11)" fg:x="15208" fg:w="147"/><text x="29.4695%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.41%)</title><rect x="29.1766%" y="85" width="0.4067%" height="15" fill="rgb(222,223,25)" fg:x="15208" fg:w="212"/><text x="29.4695%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.43%)</title><rect x="29.1766%" y="101" width="0.4259%" height="15" fill="rgb(214,198,28)" fg:x="15208" fg:w="222"/><text x="29.4695%" y="111.50"></text></g><g><title>core::fmt::write (461 instructions, 0.88%)</title><rect x="28.9886%" y="117" width="0.8844%" height="15" fill="rgb(230,46,43)" fg:x="15110" fg:w="461"/><text x="29.2815%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (689 instructions, 1.32%)</title><rect x="28.8293%" y="133" width="1.3218%" height="15" fill="rgb(233,65,53)" fg:x="15027" fg:w="689"/><text x="29.1223%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.18%)</title><rect x="30.1512%" y="133" width="0.1823%" height="15" fill="rgb(221,121,27)" fg:x="15716" fg:w="95"/><text x="30.4441%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="30.3334%" y="133" width="0.1151%" height="15" fill="rgb(247,70,47)" fg:x="15811" fg:w="60"/><text x="30.6264%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.4485%" y="117" width="0.1151%" height="15" fill="rgb(228,85,35)" fg:x="15871" fg:w="60"/><text x="30.7415%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (124 instructions, 0.24%)</title><rect x="30.4485%" y="133" width="0.2379%" height="15" fill="rgb(209,50,18)" fg:x="15871" fg:w="124"/><text x="30.7415%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="30.6864%" y="133" width="0.1592%" height="15" fill="rgb(250,19,35)" fg:x="15995" fg:w="83"/><text x="30.9794%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="30.8457%" y="117" width="0.1151%" height="15" fill="rgb(253,107,29)" fg:x="16078" fg:w="60"/><text x="31.1386%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.0836%" y="117" width="0.1151%" height="15" fill="rgb(252,179,29)" fg:x="16202" fg:w="60"/><text x="31.3765%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.3215%" y="117" width="0.1151%" height="15" fill="rgb(238,194,6)" fg:x="16326" fg:w="60"/><text x="31.6144%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.5594%" y="117" width="0.1151%" height="15" fill="rgb(238,164,29)" fg:x="16450" fg:w="60"/><text x="31.8523%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="31.7973%" y="117" width="0.1151%" height="15" fill="rgb(224,25,9)" fg:x="16574" fg:w="60"/><text x="32.0902%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.0351%" y="117" width="0.1151%" height="15" fill="rgb(244,153,23)" fg:x="16698" fg:w="60"/><text x="32.3281%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.2730%" y="117" width="0.1151%" height="15" fill="rgb(212,203,14)" fg:x="16822" fg:w="60"/><text x="32.5660%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="32.5109%" y="117" width="0.1151%" height="15" fill="rgb(220,164,20)" fg:x="16946" fg:w="60"/><text x="32.8039%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (992 instructions, 1.90%)</title><rect x="30.8457%" y="133" width="1.9032%" height="15" fill="rgb(222,203,48)" fg:x="16078" fg:w="992"/><text x="31.1386%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="32.7488%" y="101" width="0.2110%" height="15" fill="rgb(215,159,22)" fg:x="17070" fg:w="110"/><text x="33.0418%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="32.7488%" y="117" width="0.2974%" height="15" fill="rgb(216,183,47)" fg:x="17070" fg:w="155"/><text x="33.0418%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.47%)</title><rect x="32.7488%" y="133" width="0.4662%" height="15" fill="rgb(229,195,25)" fg:x="17070" fg:w="243"/><text x="33.0418%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.2150%" y="117" width="0.1151%" height="15" fill="rgb(224,132,51)" fg:x="17313" fg:w="60"/><text x="33.5080%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.4529%" y="117" width="0.1151%" height="15" fill="rgb(240,63,7)" fg:x="17437" fg:w="60"/><text x="33.7459%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.6908%" y="117" width="0.1151%" height="15" fill="rgb(249,182,41)" fg:x="17561" fg:w="60"/><text x="33.9838%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="33.9287%" y="117" width="0.1151%" height="15" fill="rgb(243,47,26)" fg:x="17685" fg:w="60"/><text x="34.2217%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="34.1666%" y="117" width="0.1151%" height="15" fill="rgb(233,48,2)" fg:x="17809" fg:w="60"/><text x="34.4596%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="34.4045%" y="117" width="0.1151%" height="15" fill="rgb(244,165,34)" fg:x="17933" fg:w="60"/><text x="34.6975%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.12%)</title><rect x="34.6424%" y="117" width="0.1151%" height="15" fill="rgb(207,89,7)" fg:x="18057" fg:w="60"/><text x="34.9354%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (868 instructions, 1.67%)</title><rect x="33.2150%" y="133" width="1.6653%" height="15" fill="rgb(244,117,36)" fg:x="17313" fg:w="868"/><text x="33.5080%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 instructions, 0.06%)</title><rect x="34.8803%" y="133" width="0.0556%" height="15" fill="rgb(226,144,34)" fg:x="18181" fg:w="29"/><text x="35.1733%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.15%)</title><rect x="34.9359%" y="133" width="0.1458%" height="15" fill="rgb(213,23,19)" fg:x="18210" fg:w="76"/><text x="35.2289%" y="143.50"></text></g><g><title>__rust_realloc (54 instructions, 0.10%)</title><rect x="35.0817%" y="101" width="0.1036%" height="15" fill="rgb(217,75,12)" fg:x="18286" fg:w="54"/><text x="35.3747%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (99 instructions, 0.19%)</title><rect x="35.0817%" y="117" width="0.1899%" height="15" fill="rgb(224,159,17)" fg:x="18286" fg:w="99"/><text x="35.3747%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (187 instructions, 0.36%)</title><rect x="35.0817%" y="133" width="0.3588%" height="15" fill="rgb(217,118,1)" fg:x="18286" fg:w="187"/><text x="35.3747%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.42%)</title><rect x="35.4405%" y="133" width="0.4221%" height="15" fill="rgb(232,180,48)" fg:x="18473" fg:w="220"/><text x="35.7335%" y="143.50"></text></g><g><title>memcpy (171 instructions, 0.33%)</title><rect x="35.8626%" y="133" width="0.3281%" height="15" fill="rgb(230,27,33)" fg:x="18693" fg:w="171"/><text x="36.1555%" y="143.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (53 instructions, 0.10%)</title><rect x="36.1906%" y="133" width="0.1017%" height="15" fill="rgb(205,31,21)" fg:x="18864" fg:w="53"/><text x="36.4836%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="36.2923%" y="133" width="0.1650%" height="15" fill="rgb(253,59,4)" fg:x="18917" fg:w="86"/><text x="36.5853%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="36.4573%" y="133" width="0.1151%" height="15" fill="rgb(224,201,9)" fg:x="19003" fg:w="60"/><text x="36.7503%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (6,218 instructions, 11.93%)</title><rect x="27.0029%" y="149" width="11.9292%" height="15" fill="rgb(229,206,30)" fg:x="14075" fg:w="6218"/><text x="27.2959%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.9322%" y="149" width="0.0249%" height="15" fill="rgb(212,67,47)" fg:x="20293" fg:w="13"/><text x="39.2251%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.9571%" y="149" width="0.0249%" height="15" fill="rgb(211,96,50)" fg:x="20306" fg:w="13"/><text x="39.2501%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="38.9820%" y="149" width="0.0249%" height="15" fill="rgb(252,114,18)" fg:x="20319" fg:w="13"/><text x="39.2750%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,924 instructions, 13.28%)</title><rect x="26.2605%" y="165" width="13.2837%" height="15" fill="rgb(223,58,37)" fg:x="13688" fg:w="6924"/><text x="26.5534%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="39.5442%" y="149" width="0.0269%" height="15" fill="rgb(237,70,4)" fg:x="20612" fg:w="14"/><text x="39.8371%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="39.5710%" y="133" width="0.1132%" height="15" fill="rgb(244,85,46)" fg:x="20626" fg:w="59"/><text x="39.8640%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="39.6842%" y="133" width="0.1803%" height="15" fill="rgb(223,39,52)" fg:x="20685" fg:w="94"/><text x="39.9772%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="39.8646%" y="133" width="0.3319%" height="15" fill="rgb(218,200,14)" fg:x="20779" fg:w="173"/><text x="40.1575%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="39.5710%" y="149" width="1.1108%" height="15" fill="rgb(208,171,16)" fg:x="20626" fg:w="579"/><text x="39.8640%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (725 instructions, 1.39%)</title><rect x="39.5442%" y="165" width="1.3909%" height="15" fill="rgb(234,200,18)" fg:x="20612" fg:w="725"/><text x="39.8371%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="40.9351%" y="165" width="0.1592%" height="15" fill="rgb(228,45,11)" fg:x="21337" fg:w="83"/><text x="41.2280%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="41.0943%" y="149" width="0.0269%" height="15" fill="rgb(237,182,11)" fg:x="21420" fg:w="14"/><text x="41.3873%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="41.1212%" y="133" width="0.1132%" height="15" fill="rgb(241,175,49)" fg:x="21434" fg:w="59"/><text x="41.4141%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="41.2344%" y="133" width="0.1803%" height="15" fill="rgb(247,38,35)" fg:x="21493" fg:w="94"/><text x="41.5273%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="41.4147%" y="133" width="0.3319%" height="15" fill="rgb(228,39,49)" fg:x="21587" fg:w="173"/><text x="41.7077%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="41.1212%" y="149" width="1.1108%" height="15" fill="rgb(226,101,26)" fg:x="21434" fg:w="579"/><text x="41.4141%" y="159.50"></text></g><g><title>candid::types::internal::env_add (821 instructions, 1.58%)</title><rect x="41.0943%" y="165" width="1.5751%" height="15" fill="rgb(206,141,19)" fg:x="21420" fg:w="821"/><text x="41.3873%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="42.6694%" y="165" width="0.1592%" height="15" fill="rgb(211,200,13)" fg:x="22241" fg:w="83"/><text x="42.9624%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="42.8286%" y="149" width="0.0269%" height="15" fill="rgb(241,121,6)" fg:x="22324" fg:w="14"/><text x="43.1216%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="42.8555%" y="133" width="0.1132%" height="15" fill="rgb(234,221,29)" fg:x="22338" fg:w="59"/><text x="43.1485%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="42.9687%" y="133" width="0.1803%" height="15" fill="rgb(229,136,5)" fg:x="22397" fg:w="94"/><text x="43.2617%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="43.1490%" y="133" width="0.3319%" height="15" fill="rgb(238,36,11)" fg:x="22491" fg:w="173"/><text x="43.4420%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (579 instructions, 1.11%)</title><rect x="42.8555%" y="149" width="1.1108%" height="15" fill="rgb(251,55,41)" fg:x="22338" fg:w="579"/><text x="43.1485%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="43.9663%" y="149" width="0.1592%" height="15" fill="rgb(242,34,40)" fg:x="22917" fg:w="83"/><text x="44.2593%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="44.1255%" y="149" width="0.1784%" height="15" fill="rgb(215,42,17)" fg:x="23000" fg:w="93"/><text x="44.4185%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="44.3040%" y="133" width="0.1132%" height="15" fill="rgb(207,44,46)" fg:x="23093" fg:w="59"/><text x="44.5969%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.72%)</title><rect x="44.4172%" y="133" width="0.7233%" height="15" fill="rgb(211,206,28)" fg:x="23152" fg:w="377"/><text x="44.7101%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="45.1404%" y="133" width="0.1496%" height="15" fill="rgb(237,167,16)" fg:x="23529" fg:w="78"/><text x="45.4334%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="45.7755%" y="133" width="0.1132%" height="15" fill="rgb(233,66,6)" fg:x="23860" fg:w="59"/><text x="46.0684%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (396 instructions, 0.76%)</title><rect x="45.8887%" y="133" width="0.7597%" height="15" fill="rgb(246,123,29)" fg:x="23919" fg:w="396"/><text x="46.1816%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="46.6484%" y="133" width="0.3319%" height="15" fill="rgb(209,62,40)" fg:x="24315" fg:w="173"/><text x="46.9413%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="47.4657%" y="133" width="0.1132%" height="15" fill="rgb(218,4,25)" fg:x="24741" fg:w="59"/><text x="47.7586%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (94 instructions, 0.18%)</title><rect x="47.5789%" y="133" width="0.1803%" height="15" fill="rgb(253,91,49)" fg:x="24800" fg:w="94"/><text x="47.8718%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (173 instructions, 0.33%)</title><rect x="47.7592%" y="133" width="0.3319%" height="15" fill="rgb(228,155,29)" fg:x="24894" fg:w="173"/><text x="48.0522%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,227 instructions, 4.27%)</title><rect x="44.3040%" y="149" width="4.2725%" height="15" fill="rgb(243,57,37)" fg:x="23093" fg:w="2227"/><text x="44.5969%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.13%)</title><rect x="48.5765%" y="149" width="0.1285%" height="15" fill="rgb(244,167,17)" fg:x="25320" fg:w="67"/><text x="48.8694%" y="159.50"></text></g><g><title>memcmp (77 instructions, 0.15%)</title><rect x="48.7050%" y="149" width="0.1477%" height="15" fill="rgb(207,181,38)" fg:x="25387" fg:w="77"/><text x="48.9980%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="48.8527%" y="133" width="0.1650%" height="15" fill="rgb(211,8,23)" fg:x="25464" fg:w="86"/><text x="49.1457%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="48.8527%" y="149" width="0.2321%" height="15" fill="rgb(235,11,44)" fg:x="25464" fg:w="121"/><text x="49.1457%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,963 instructions, 7.60%)</title><rect x="42.8286%" y="165" width="7.6030%" height="15" fill="rgb(248,18,52)" fg:x="22324" fg:w="3963"/><text x="43.1216%" y="175.50">candid::..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="50.4317%" y="117" width="0.1132%" height="15" fill="rgb(208,4,7)" fg:x="26287" fg:w="59"/><text x="50.7246%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="50.4317%" y="133" width="0.1803%" height="15" fill="rgb(240,17,39)" fg:x="26287" fg:w="94"/><text x="50.7246%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="51.0360%" y="117" width="0.1132%" height="15" fill="rgb(207,170,3)" fg:x="26602" fg:w="59"/><text x="51.3290%" y="127.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="51.0360%" y="133" width="0.1803%" height="15" fill="rgb(236,100,52)" fg:x="26602" fg:w="94"/><text x="51.3290%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (630 instructions, 1.21%)</title><rect x="50.4317%" y="149" width="1.2087%" height="15" fill="rgb(246,78,51)" fg:x="26287" fg:w="630"/><text x="50.7246%" y="159.50"></text></g><g><title>candid::types::internal::env_id (960 instructions, 1.84%)</title><rect x="50.4317%" y="165" width="1.8418%" height="15" fill="rgb(211,17,15)" fg:x="26287" fg:w="960"/><text x="50.7246%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (53 instructions, 0.10%)</title><rect x="52.2734%" y="165" width="0.1017%" height="15" fill="rgb(209,59,46)" fg:x="27247" fg:w="53"/><text x="52.5664%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="52.4000%" y="149" width="0.3472%" height="15" fill="rgb(210,92,25)" fg:x="27313" fg:w="181"/><text x="52.6930%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (229 instructions, 0.44%)</title><rect x="52.3751%" y="165" width="0.4393%" height="15" fill="rgb(238,174,52)" fg:x="27300" fg:w="229"/><text x="52.6681%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (34 instructions, 0.07%)</title><rect x="52.8144%" y="149" width="0.0652%" height="15" fill="rgb(230,73,7)" fg:x="27529" fg:w="34"/><text x="53.1074%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.03%)</title><rect x="52.8797%" y="149" width="0.0345%" height="15" fill="rgb(243,124,40)" fg:x="27563" fg:w="18"/><text x="53.1726%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2303 (18 instructions, 0.03%)</title><rect x="52.9142%" y="149" width="0.0345%" height="15" fill="rgb(244,170,11)" fg:x="27581" fg:w="18"/><text x="53.2072%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (169 instructions, 0.32%)</title><rect x="52.8144%" y="165" width="0.3242%" height="15" fill="rgb(207,114,54)" fg:x="27529" fg:w="169"/><text x="53.1074%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="53.1387%" y="165" width="0.0249%" height="15" fill="rgb(205,42,20)" fg:x="27698" fg:w="13"/><text x="53.4316%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="53.1636%" y="165" width="0.0249%" height="15" fill="rgb(230,30,28)" fg:x="27711" fg:w="13"/><text x="53.4566%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="53.1886%" y="165" width="0.0249%" height="15" fill="rgb(205,73,54)" fg:x="27724" fg:w="13"/><text x="53.4815%" y="175.50"></text></g><g><title>memcpy (440 instructions, 0.84%)</title><rect x="53.2135%" y="165" width="0.8441%" height="15" fill="rgb(254,227,23)" fg:x="27737" fg:w="440"/><text x="53.5065%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (19 instructions, 0.04%)</title><rect x="54.0576%" y="133" width="0.0365%" height="15" fill="rgb(228,202,34)" fg:x="28177" fg:w="19"/><text x="54.3506%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="54.0941%" y="133" width="0.2532%" height="15" fill="rgb(222,225,37)" fg:x="28196" fg:w="132"/><text x="54.3871%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (80 instructions, 0.15%)</title><rect x="54.3473%" y="101" width="0.1535%" height="15" fill="rgb(221,14,54)" fg:x="28328" fg:w="80"/><text x="54.6403%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.47%)</title><rect x="54.3473%" y="117" width="0.4662%" height="15" fill="rgb(254,102,2)" fg:x="28328" fg:w="243"/><text x="54.6403%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (278 instructions, 0.53%)</title><rect x="54.3473%" y="133" width="0.5333%" height="15" fill="rgb(232,104,17)" fg:x="28328" fg:w="278"/><text x="54.6403%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="54.8807%" y="133" width="0.0249%" height="15" fill="rgb(250,220,14)" fg:x="28606" fg:w="13"/><text x="55.1736%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (504 instructions, 0.97%)</title><rect x="54.0576%" y="149" width="0.9669%" height="15" fill="rgb(241,158,9)" fg:x="28177" fg:w="504"/><text x="54.3506%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (553 instructions, 1.06%)</title><rect x="54.0576%" y="165" width="1.0609%" height="15" fill="rgb(246,9,43)" fg:x="28177" fg:w="553"/><text x="54.3506%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (25 instructions, 0.05%)</title><rect x="55.1186%" y="149" width="0.0480%" height="15" fill="rgb(206,73,33)" fg:x="28730" fg:w="25"/><text x="55.4115%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (100 instructions, 0.19%)</title><rect x="55.1665%" y="149" width="0.1919%" height="15" fill="rgb(222,79,8)" fg:x="28755" fg:w="100"/><text x="55.4595%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (224 instructions, 0.43%)</title><rect x="55.1186%" y="165" width="0.4297%" height="15" fill="rgb(234,8,54)" fg:x="28730" fg:w="224"/><text x="55.4115%" y="175.50"></text></g><g><title>memset (240 instructions, 0.46%)</title><rect x="55.5483%" y="165" width="0.4604%" height="15" fill="rgb(209,134,38)" fg:x="28954" fg:w="240"/><text x="55.8413%" y="175.50"></text></g><g><title>memcpy (176 instructions, 0.34%)</title><rect x="56.0087%" y="165" width="0.3377%" height="15" fill="rgb(230,127,29)" fg:x="29194" fg:w="176"/><text x="56.3017%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.97%)</title><rect x="56.3464%" y="165" width="0.9669%" height="15" fill="rgb(242,44,41)" fg:x="29370" fg:w="504"/><text x="56.6394%" y="175.50"></text></g><g><title>memset (139 instructions, 0.27%)</title><rect x="57.3133%" y="149" width="0.2667%" height="15" fill="rgb(222,56,43)" fg:x="29874" fg:w="139"/><text x="57.6063%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,990 instructions, 9.57%)</title><rect x="57.5800%" y="149" width="9.5733%" height="15" fill="rgb(238,39,47)" fg:x="30013" fg:w="4990"/><text x="57.8730%" y="159.50">sha2::sha25..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,432 instructions, 10.42%)</title><rect x="57.3133%" y="165" width="10.4213%" height="15" fill="rgb(226,79,43)" fg:x="29874" fg:w="5432"/><text x="57.6063%" y="175.50">&lt;sha2::core_a..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="67.7346%" y="165" width="0.1592%" height="15" fill="rgb(242,105,53)" fg:x="35306" fg:w="83"/><text x="68.0276%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="67.8939%" y="149" width="0.0269%" height="15" fill="rgb(251,132,46)" fg:x="35389" fg:w="14"/><text x="68.1868%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="67.9207%" y="117" width="0.2590%" height="15" fill="rgb(231,77,14)" fg:x="35403" fg:w="135"/><text x="68.2137%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (170 instructions, 0.33%)</title><rect x="67.9207%" y="133" width="0.3261%" height="15" fill="rgb(240,135,9)" fg:x="35403" fg:w="170"/><text x="68.2137%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.26%)</title><rect x="68.2469%" y="133" width="0.2590%" height="15" fill="rgb(248,109,14)" fg:x="35573" fg:w="135"/><text x="68.5398%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="68.5922%" y="117" width="0.1189%" height="15" fill="rgb(227,146,52)" fg:x="35753" fg:w="62"/><text x="68.8852%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="68.7112%" y="117" width="0.1285%" height="15" fill="rgb(232,54,3)" fg:x="35815" fg:w="67"/><text x="69.0041%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (277 instructions, 0.53%)</title><rect x="68.5922%" y="133" width="0.5314%" height="15" fill="rgb(229,201,43)" fg:x="35753" fg:w="277"/><text x="68.8852%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (662 instructions, 1.27%)</title><rect x="67.9207%" y="149" width="1.2700%" height="15" fill="rgb(252,161,33)" fg:x="35403" fg:w="662"/><text x="68.2137%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="69.1908%" y="149" width="0.0249%" height="15" fill="rgb(226,146,40)" fg:x="36065" fg:w="13"/><text x="69.4837%" y="159.50"></text></g><g><title>memset (93 instructions, 0.18%)</title><rect x="69.2157%" y="149" width="0.1784%" height="15" fill="rgb(219,47,25)" fg:x="36078" fg:w="93"/><text x="69.5087%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="69.3941%" y="117" width="0.0269%" height="15" fill="rgb(250,135,13)" fg:x="36171" fg:w="14"/><text x="69.6871%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.12%)</title><rect x="69.3941%" y="133" width="0.1209%" height="15" fill="rgb(219,229,18)" fg:x="36171" fg:w="63"/><text x="69.6871%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="69.5150%" y="133" width="0.1592%" height="15" fill="rgb(217,152,27)" fg:x="36234" fg:w="83"/><text x="69.8080%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="69.6742%" y="117" width="0.0269%" height="15" fill="rgb(225,71,47)" fg:x="36317" fg:w="14"/><text x="69.9672%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="69.7011%" y="101" width="0.1132%" height="15" fill="rgb(220,139,14)" fg:x="36331" fg:w="59"/><text x="69.9941%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.72%)</title><rect x="69.8143%" y="101" width="0.7233%" height="15" fill="rgb(247,54,32)" fg:x="36390" fg:w="377"/><text x="70.1073%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="70.5376%" y="101" width="0.1496%" height="15" fill="rgb(252,131,39)" fg:x="36767" fg:w="78"/><text x="70.8305%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.47%)</title><rect x="69.7011%" y="117" width="1.4715%" height="15" fill="rgb(210,108,39)" fg:x="36331" fg:w="767"/><text x="69.9941%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,009 instructions, 1.94%)</title><rect x="69.6742%" y="133" width="1.9358%" height="15" fill="rgb(205,23,29)" fg:x="36317" fg:w="1009"/><text x="69.9672%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="71.6100%" y="133" width="0.1592%" height="15" fill="rgb(246,139,46)" fg:x="37326" fg:w="83"/><text x="71.9030%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="71.7692%" y="133" width="0.1592%" height="15" fill="rgb(250,81,26)" fg:x="37409" fg:w="83"/><text x="72.0622%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (14 instructions, 0.03%)</title><rect x="71.9285%" y="117" width="0.0269%" height="15" fill="rgb(214,104,7)" fg:x="37492" fg:w="14"/><text x="72.2214%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="71.9553%" y="101" width="0.1132%" height="15" fill="rgb(233,189,8)" fg:x="37506" fg:w="59"/><text x="72.2483%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.72%)</title><rect x="72.0685%" y="101" width="0.7233%" height="15" fill="rgb(228,141,17)" fg:x="37565" fg:w="377"/><text x="72.3615%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.15%)</title><rect x="72.7918%" y="101" width="0.1496%" height="15" fill="rgb(247,157,1)" fg:x="37942" fg:w="78"/><text x="73.0848%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 1.47%)</title><rect x="71.9553%" y="117" width="1.4715%" height="15" fill="rgb(249,225,5)" fg:x="37506" fg:w="767"/><text x="72.2483%" y="127.50"></text></g><g><title>memcmp (675 instructions, 1.29%)</title><rect x="73.4268%" y="117" width="1.2950%" height="15" fill="rgb(242,55,13)" fg:x="38273" fg:w="675"/><text x="73.7198%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="74.7218%" y="101" width="0.1650%" height="15" fill="rgb(230,49,50)" fg:x="38948" fg:w="86"/><text x="75.0148%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="74.7218%" y="117" width="0.2321%" height="15" fill="rgb(241,111,38)" fg:x="38948" fg:w="121"/><text x="75.0148%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,772 instructions, 3.40%)</title><rect x="71.9285%" y="133" width="3.3996%" height="15" fill="rgb(252,155,4)" fg:x="37492" fg:w="1772"/><text x="72.2214%" y="143.50">ca..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="75.3281%" y="85" width="0.1132%" height="15" fill="rgb(212,69,32)" fg:x="39264" fg:w="59"/><text x="75.6210%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="75.4413%" y="85" width="0.3146%" height="15" fill="rgb(243,107,47)" fg:x="39323" fg:w="164"/><text x="75.7342%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.55%)</title><rect x="75.3281%" y="101" width="0.5487%" height="15" fill="rgb(247,130,12)" fg:x="39264" fg:w="286"/><text x="75.6210%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.97%)</title><rect x="75.3281%" y="117" width="0.9727%" height="15" fill="rgb(233,74,16)" fg:x="39264" fg:w="507"/><text x="75.6210%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.847 (48 instructions, 0.09%)</title><rect x="76.3007%" y="117" width="0.0921%" height="15" fill="rgb(208,58,18)" fg:x="39771" fg:w="48"/><text x="76.5937%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="76.3928%" y="117" width="0.0249%" height="15" fill="rgb(242,225,1)" fg:x="39819" fg:w="13"/><text x="76.6858%" y="127.50"></text></g><g><title>candid::types::internal::env_id (773 instructions, 1.48%)</title><rect x="75.3281%" y="133" width="1.4830%" height="15" fill="rgb(249,39,40)" fg:x="39264" fg:w="773"/><text x="75.6210%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (4,017 instructions, 7.71%)</title><rect x="69.3941%" y="149" width="7.7066%" height="15" fill="rgb(207,72,44)" fg:x="36171" fg:w="4017"/><text x="69.6871%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.1008%" y="117" width="0.1592%" height="15" fill="rgb(215,193,12)" fg:x="40188" fg:w="83"/><text x="77.3937%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="77.1008%" y="133" width="0.2417%" height="15" fill="rgb(248,41,39)" fg:x="40188" fg:w="126"/><text x="77.3937%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.40%)</title><rect x="77.1008%" y="149" width="0.3990%" height="15" fill="rgb(253,85,4)" fg:x="40188" fg:w="208"/><text x="77.3937%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (30 instructions, 0.06%)</title><rect x="77.4998%" y="133" width="0.0576%" height="15" fill="rgb(243,70,31)" fg:x="40396" fg:w="30"/><text x="77.7928%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.16%)</title><rect x="77.5574%" y="101" width="0.1573%" height="15" fill="rgb(253,195,26)" fg:x="40426" fg:w="82"/><text x="77.8503%" y="111.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.33%)</title><rect x="77.5574%" y="117" width="0.3261%" height="15" fill="rgb(243,42,11)" fg:x="40426" fg:w="170"/><text x="77.8503%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="77.8835%" y="117" width="0.1592%" height="15" fill="rgb(239,66,17)" fg:x="40596" fg:w="83"/><text x="78.1765%" y="127.50"></text></g><g><title>candid::types::internal::unroll (348 instructions, 0.67%)</title><rect x="77.5574%" y="133" width="0.6676%" height="15" fill="rgb(217,132,21)" fg:x="40426" fg:w="348"/><text x="77.8503%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="78.2250%" y="85" width="0.1132%" height="15" fill="rgb(252,202,21)" fg:x="40774" fg:w="59"/><text x="78.5180%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="78.3382%" y="85" width="0.3146%" height="15" fill="rgb(233,98,36)" fg:x="40833" fg:w="164"/><text x="78.6312%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.55%)</title><rect x="78.2250%" y="101" width="0.5487%" height="15" fill="rgb(216,153,54)" fg:x="40774" fg:w="286"/><text x="78.5180%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.97%)</title><rect x="78.2250%" y="117" width="0.9727%" height="15" fill="rgb(250,99,7)" fg:x="40774" fg:w="507"/><text x="78.5180%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="79.1977%" y="117" width="0.1592%" height="15" fill="rgb(207,56,50)" fg:x="41281" fg:w="83"/><text x="79.4907%" y="127.50"></text></g><g><title>memset (152 instructions, 0.29%)</title><rect x="79.3569%" y="117" width="0.2916%" height="15" fill="rgb(244,61,34)" fg:x="41364" fg:w="152"/><text x="79.6499%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 2.07%)</title><rect x="78.2250%" y="133" width="2.0681%" height="15" fill="rgb(241,50,38)" fg:x="40774" fg:w="1078"/><text x="78.5180%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="80.2931%" y="101" width="0.1592%" height="15" fill="rgb(212,166,30)" fg:x="41852" fg:w="83"/><text x="80.5861%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="80.2931%" y="117" width="0.2417%" height="15" fill="rgb(249,127,32)" fg:x="41852" fg:w="126"/><text x="80.5861%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.40%)</title><rect x="80.2931%" y="133" width="0.3990%" height="15" fill="rgb(209,103,0)" fg:x="41852" fg:w="208"/><text x="80.5861%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="80.6922%" y="85" width="0.1132%" height="15" fill="rgb(238,209,51)" fg:x="42060" fg:w="59"/><text x="80.9852%" y="95.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.18%)</title><rect x="80.6922%" y="101" width="0.1803%" height="15" fill="rgb(237,56,23)" fg:x="42060" fg:w="94"/><text x="80.9852%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.60%)</title><rect x="80.6922%" y="117" width="0.6043%" height="15" fill="rgb(215,153,46)" fg:x="42060" fg:w="315"/><text x="80.9852%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (23 instructions, 0.04%)</title><rect x="81.2965%" y="117" width="0.0441%" height="15" fill="rgb(224,49,31)" fg:x="42375" fg:w="23"/><text x="81.5895%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="81.3406%" y="117" width="0.0249%" height="15" fill="rgb(250,18,42)" fg:x="42398" fg:w="13"/><text x="81.6336%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.93%)</title><rect x="80.6922%" y="133" width="0.9343%" height="15" fill="rgb(215,176,39)" fg:x="42060" fg:w="487"/><text x="80.9852%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="81.6265%" y="85" width="0.1592%" height="15" fill="rgb(223,77,29)" fg:x="42547" fg:w="83"/><text x="81.9195%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="81.6265%" y="101" width="0.2417%" height="15" fill="rgb(234,94,52)" fg:x="42547" fg:w="126"/><text x="81.9195%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.39%)</title><rect x="81.6265%" y="117" width="0.3933%" height="15" fill="rgb(220,154,50)" fg:x="42547" fg:w="205"/><text x="81.9195%" y="127.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.51%)</title><rect x="81.6265%" y="133" width="0.5065%" height="15" fill="rgb(212,11,10)" fg:x="42547" fg:w="264"/><text x="81.9195%" y="143.50"></text></g><g><title>leb128::write::signed (50 instructions, 0.10%)</title><rect x="82.1330%" y="117" width="0.0959%" height="15" fill="rgb(205,166,19)" fg:x="42811" fg:w="50"/><text x="82.4260%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::encode (111 instructions, 0.21%)</title><rect x="82.1330%" y="133" width="0.2130%" height="15" fill="rgb(244,198,16)" fg:x="42811" fg:w="111"/><text x="82.4260%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="82.3459%" y="101" width="0.1650%" height="15" fill="rgb(219,69,12)" fg:x="42922" fg:w="86"/><text x="82.6389%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.23%)</title><rect x="82.3459%" y="117" width="0.2321%" height="15" fill="rgb(245,30,7)" fg:x="42922" fg:w="121"/><text x="82.6389%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.16%)</title><rect x="82.5781%" y="117" width="0.1612%" height="15" fill="rgb(218,221,48)" fg:x="43043" fg:w="84"/><text x="82.8711%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.48%)</title><rect x="82.3459%" y="133" width="0.4796%" height="15" fill="rgb(216,66,15)" fg:x="42922" fg:w="250"/><text x="82.6389%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="82.8256%" y="133" width="0.0249%" height="15" fill="rgb(226,122,50)" fg:x="43172" fg:w="13"/><text x="83.1185%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,046 instructions, 5.84%)</title><rect x="77.4998%" y="149" width="5.8438%" height="15" fill="rgb(239,156,16)" fg:x="40396" fg:w="3046"/><text x="77.7928%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="83.3436%" y="149" width="0.0249%" height="15" fill="rgb(224,27,38)" fg:x="43442" fg:w="13"/><text x="83.6365%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="83.3685%" y="117" width="0.1592%" height="15" fill="rgb(224,39,27)" fg:x="43455" fg:w="83"/><text x="83.6615%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="83.3685%" y="133" width="0.2417%" height="15" fill="rgb(215,92,29)" fg:x="43455" fg:w="126"/><text x="83.6615%" y="143.50"></text></g><g><title>__rust_realloc (110 instructions, 0.21%)</title><rect x="83.7618%" y="117" width="0.2110%" height="15" fill="rgb(207,159,16)" fg:x="43660" fg:w="110"/><text x="84.0548%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.30%)</title><rect x="83.7618%" y="133" width="0.2974%" height="15" fill="rgb(238,163,47)" fg:x="43660" fg:w="155"/><text x="84.0548%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 instructions, 0.86%)</title><rect x="83.3685%" y="149" width="0.8595%" height="15" fill="rgb(219,91,49)" fg:x="43455" fg:w="448"/><text x="83.6615%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.60%)</title><rect x="84.2280%" y="149" width="0.5986%" height="15" fill="rgb(227,167,31)" fg:x="43903" fg:w="312"/><text x="84.5210%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="84.8266%" y="149" width="0.2494%" height="15" fill="rgb(234,80,54)" fg:x="44215" fg:w="130"/><text x="85.1195%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.0760%" y="117" width="0.1592%" height="15" fill="rgb(212,114,2)" fg:x="44345" fg:w="83"/><text x="85.3689%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="85.0760%" y="133" width="0.2417%" height="15" fill="rgb(234,50,24)" fg:x="44345" fg:w="126"/><text x="85.3689%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.39%)</title><rect x="85.0760%" y="149" width="0.3933%" height="15" fill="rgb(221,68,8)" fg:x="44345" fg:w="205"/><text x="85.3689%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="85.4693%" y="149" width="0.1592%" height="15" fill="rgb(254,180,31)" fg:x="44550" fg:w="83"/><text x="85.7622%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.6285%" y="149" width="0.0978%" height="15" fill="rgb(247,130,50)" fg:x="44633" fg:w="51"/><text x="85.9215%" y="159.50"></text></g><g><title>memcpy (51 instructions, 0.10%)</title><rect x="85.7263%" y="149" width="0.0978%" height="15" fill="rgb(211,109,4)" fg:x="44684" fg:w="51"/><text x="86.0193%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="85.8242%" y="149" width="0.1151%" height="15" fill="rgb(238,50,21)" fg:x="44735" fg:w="60"/><text x="86.1172%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.11%)</title><rect x="85.9393%" y="101" width="0.1132%" height="15" fill="rgb(225,57,45)" fg:x="44795" fg:w="59"/><text x="86.2323%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.31%)</title><rect x="86.0525%" y="101" width="0.3146%" height="15" fill="rgb(209,196,50)" fg:x="44854" fg:w="164"/><text x="86.3455%" y="111.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.55%)</title><rect x="85.9393%" y="117" width="0.5487%" height="15" fill="rgb(242,140,13)" fg:x="44795" fg:w="286"/><text x="86.2323%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.97%)</title><rect x="85.9393%" y="133" width="0.9727%" height="15" fill="rgb(217,111,7)" fg:x="44795" fg:w="507"/><text x="86.2323%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.16%)</title><rect x="86.9120%" y="85" width="0.1592%" height="15" fill="rgb(253,193,51)" fg:x="45302" fg:w="83"/><text x="87.2049%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.24%)</title><rect x="86.9120%" y="101" width="0.2417%" height="15" fill="rgb(252,70,29)" fg:x="45302" fg:w="126"/><text x="87.2049%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.39%)</title><rect x="86.9120%" y="117" width="0.3933%" height="15" fill="rgb(232,127,12)" fg:x="45302" fg:w="205"/><text x="87.2049%" y="127.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.51%)</title><rect x="86.9120%" y="133" width="0.5065%" height="15" fill="rgb(211,180,21)" fg:x="45302" fg:w="264"/><text x="87.2049%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (929 instructions, 1.78%)</title><rect x="85.9393%" y="149" width="1.7823%" height="15" fill="rgb(229,72,13)" fg:x="44795" fg:w="929"/><text x="86.2323%" y="159.50"></text></g><g><title>memcpy (35 instructions, 0.07%)</title><rect x="87.7216%" y="149" width="0.0671%" height="15" fill="rgb(240,211,49)" fg:x="45724" fg:w="35"/><text x="88.0146%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="87.7887%" y="149" width="0.1151%" height="15" fill="rgb(219,149,40)" fg:x="45759" fg:w="60"/><text x="88.0817%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (519 instructions, 1.00%)</title><rect x="87.9038%" y="149" width="0.9957%" height="15" fill="rgb(210,127,46)" fg:x="45819" fg:w="519"/><text x="88.1968%" y="159.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Write for &amp;mut W&gt;::write_all (547 instructions, 1.05%)</title><rect x="88.8995%" y="149" width="1.0494%" height="15" fill="rgb(220,106,7)" fg:x="46338" fg:w="547"/><text x="89.1925%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.16%)</title><rect x="89.9490%" y="149" width="0.1650%" height="15" fill="rgb(249,31,22)" fg:x="46885" fg:w="86"/><text x="90.2419%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.25%)</title><rect x="90.1140%" y="149" width="0.2532%" height="15" fill="rgb(253,1,49)" fg:x="46971" fg:w="132"/><text x="90.4069%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.3672%" y="149" width="0.0249%" height="15" fill="rgb(227,144,33)" fg:x="47103" fg:w="13"/><text x="90.6602%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (181 instructions, 0.35%)</title><rect x="90.3921%" y="149" width="0.3472%" height="15" fill="rgb(249,163,44)" fg:x="47116" fg:w="181"/><text x="90.6851%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (7 instructions, 0.01%)</title><rect x="90.7394%" y="149" width="0.0134%" height="15" fill="rgb(234,15,39)" fg:x="47297" fg:w="7"/><text x="91.0324%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 instructions, 0.02%)</title><rect x="90.7528%" y="149" width="0.0249%" height="15" fill="rgb(207,66,16)" fg:x="47304" fg:w="13"/><text x="91.0458%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.25%)</title><rect x="90.7778%" y="149" width="0.2494%" height="15" fill="rgb(233,112,24)" fg:x="47317" fg:w="130"/><text x="91.0707%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.12%)</title><rect x="91.0272%" y="149" width="0.1151%" height="15" fill="rgb(230,90,22)" fg:x="47447" fg:w="60"/><text x="91.3201%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (107 instructions, 0.21%)</title><rect x="91.1423%" y="149" width="0.2053%" height="15" fill="rgb(229,61,13)" fg:x="47507" fg:w="107"/><text x="91.4352%" y="159.50"></text></g><g><title>ic_cdk::api::call::reply (14,257 instructions, 27.35%)</title><rect x="67.8939%" y="165" width="27.3521%" height="15" fill="rgb(225,57,24)" fg:x="35389" fg:w="14257"/><text x="68.1868%" y="175.50">ic_cdk::api::call::reply</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (51,363 instructions, 98.54%)</title><rect x="0.3645%" y="181" width="98.5400%" height="15" fill="rgb(208,169,48)" fg:x="190" fg:w="51363"/><text x="0.6575%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (14 instructions, 0.03%)</title><rect x="98.9045%" y="181" width="0.0269%" height="15" fill="rgb(244,218,51)" fg:x="51553" fg:w="14"/><text x="99.1975%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.12%)</title><rect x="99.1923%" y="165" width="0.1189%" height="15" fill="rgb(214,148,10)" fg:x="51703" fg:w="62"/><text x="99.4853%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.13%)</title><rect x="99.3113%" y="165" width="0.1285%" height="15" fill="rgb(225,174,27)" fg:x="51765" fg:w="67"/><text x="99.6042%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (412 instructions, 0.79%)</title><rect x="98.9333%" y="181" width="0.7904%" height="15" fill="rgb(230,96,26)" fg:x="51568" fg:w="412"/><text x="99.2263%" y="191.50"></text></g><g><title>all (52,124 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(232,10,30)" fg:x="0" fg:w="52124"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (52,124 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(222,8,50)" fg:x="0" fg:w="52124"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>