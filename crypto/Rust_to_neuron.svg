<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="262" onload="init(evt)" viewBox="0 0 1024 262" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="262" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.principalToNeuron</text><text id="details" fill="rgb(0,0,0)" x="10" y="245.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="245.00"> </text><svg id="frames" x="10" width="1004" total_samples="44437"><g><title>ic_cdk::setup (19 instructions, 0.04%)</title><rect x="0.0000%" y="181" width="0.0428%" height="15" fill="rgb(249,150,24)" fg:x="0" fg:w="19"/><text x="0.2930%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.0428%" y="181" width="0.1710%" height="15" fill="rgb(228,185,42)" fg:x="19" fg:w="76"/><text x="0.3357%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.2138%" y="181" width="0.1710%" height="15" fill="rgb(226,39,33)" fg:x="95" fg:w="76"/><text x="0.5068%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="0.3848%" y="165" width="0.1710%" height="15" fill="rgb(221,166,19)" fg:x="171" fg:w="76"/><text x="0.6778%" y="175.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="0.5558%" y="149" width="0.1553%" height="15" fill="rgb(209,109,2)" fg:x="247" fg:w="69"/><text x="0.8488%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="0.7111%" y="149" width="0.9137%" height="15" fill="rgb(252,216,26)" fg:x="316" fg:w="406"/><text x="1.0041%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="1.6248%" y="149" width="0.1845%" height="15" fill="rgb(227,173,36)" fg:x="722" fg:w="82"/><text x="1.9177%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.8093%" y="149" width="0.1215%" height="15" fill="rgb(209,90,7)" fg:x="804" fg:w="54"/><text x="2.1023%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="1.9308%" y="149" width="0.1215%" height="15" fill="rgb(250,194,11)" fg:x="858" fg:w="54"/><text x="2.2238%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.0523%" y="149" width="0.1215%" height="15" fill="rgb(220,72,50)" fg:x="912" fg:w="54"/><text x="2.3453%" y="159.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.12%)</title><rect x="2.1739%" y="149" width="0.1215%" height="15" fill="rgb(222,106,48)" fg:x="966" fg:w="54"/><text x="2.4668%" y="159.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="2.2954%" y="149" width="0.1553%" height="15" fill="rgb(216,220,45)" fg:x="1020" fg:w="69"/><text x="2.5884%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="2.4507%" y="149" width="0.1463%" height="15" fill="rgb(234,112,18)" fg:x="1089" fg:w="65"/><text x="2.7436%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="2.5969%" y="149" width="0.9137%" height="15" fill="rgb(206,179,9)" fg:x="1154" fg:w="406"/><text x="2.8899%" y="159.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="3.5106%" y="149" width="0.0360%" height="15" fill="rgb(215,115,40)" fg:x="1560" fg:w="16"/><text x="3.8036%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="3.5466%" y="133" width="0.1710%" height="15" fill="rgb(222,69,34)" fg:x="1576" fg:w="76"/><text x="3.8396%" y="143.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="3.7176%" y="101" width="0.1350%" height="15" fill="rgb(209,161,10)" fg:x="1652" fg:w="60"/><text x="4.0106%" y="111.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="3.7176%" y="117" width="0.1913%" height="15" fill="rgb(217,6,38)" fg:x="1652" fg:w="85"/><text x="4.0106%" y="127.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="3.9089%" y="69" width="0.0203%" height="15" fill="rgb(229,229,48)" fg:x="1737" fg:w="9"/><text x="4.2019%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="3.9292%" y="53" width="0.0675%" height="15" fill="rgb(225,21,28)" fg:x="1746" fg:w="30"/><text x="4.2221%" y="63.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="3.9292%" y="69" width="0.1238%" height="15" fill="rgb(206,33,13)" fg:x="1746" fg:w="55"/><text x="4.2221%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="3.9089%" y="85" width="0.2655%" height="15" fill="rgb(242,178,17)" fg:x="1737" fg:w="118"/><text x="4.2019%" y="95.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="3.9089%" y="101" width="0.3848%" height="15" fill="rgb(220,162,5)" fg:x="1737" fg:w="171"/><text x="4.2019%" y="111.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="3.9089%" y="117" width="0.3961%" height="15" fill="rgb(210,33,43)" fg:x="1737" fg:w="176"/><text x="4.2019%" y="127.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="3.7176%" y="133" width="0.8371%" height="15" fill="rgb(216,116,54)" fg:x="1652" fg:w="372"/><text x="4.0106%" y="143.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="3.5466%" y="149" width="1.3255%" height="15" fill="rgb(249,92,24)" fg:x="1576" fg:w="589"/><text x="3.8396%" y="159.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="4.8721%" y="149" width="0.1845%" height="15" fill="rgb(231,189,14)" fg:x="2165" fg:w="82"/><text x="5.1650%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="5.0566%" y="149" width="0.1238%" height="15" fill="rgb(230,8,41)" fg:x="2247" fg:w="55"/><text x="5.3496%" y="159.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="5.1804%" y="149" width="0.1418%" height="15" fill="rgb(249,7,27)" fg:x="2302" fg:w="63"/><text x="5.4733%" y="159.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="5.3221%" y="149" width="0.1463%" height="15" fill="rgb(232,86,5)" fg:x="2365" fg:w="65"/><text x="5.6151%" y="159.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="5.4684%" y="133" width="0.9137%" height="15" fill="rgb(224,175,18)" fg:x="2430" fg:w="406"/><text x="5.7614%" y="143.50"></text></g><g><title>memcmp (16 instructions, 0.04%)</title><rect x="6.3821%" y="133" width="0.0360%" height="15" fill="rgb(220,129,12)" fg:x="2836" fg:w="16"/><text x="6.6750%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="6.4181%" y="117" width="0.1710%" height="15" fill="rgb(210,19,36)" fg:x="2852" fg:w="76"/><text x="6.7110%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="6.5891%" y="85" width="0.1350%" height="15" fill="rgb(219,96,14)" fg:x="2928" fg:w="60"/><text x="6.8821%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="6.5891%" y="101" width="0.1913%" height="15" fill="rgb(249,106,1)" fg:x="2928" fg:w="85"/><text x="6.8821%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="6.7804%" y="53" width="0.0203%" height="15" fill="rgb(249,155,20)" fg:x="3013" fg:w="9"/><text x="7.0734%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="6.8006%" y="37" width="0.0675%" height="15" fill="rgb(244,168,9)" fg:x="3022" fg:w="30"/><text x="7.0936%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="6.8006%" y="53" width="0.1238%" height="15" fill="rgb(216,23,50)" fg:x="3022" fg:w="55"/><text x="7.0936%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="6.7804%" y="69" width="0.2655%" height="15" fill="rgb(224,219,20)" fg:x="3013" fg:w="118"/><text x="7.0734%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="6.7804%" y="85" width="0.3848%" height="15" fill="rgb(222,156,15)" fg:x="3013" fg:w="171"/><text x="7.0734%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="6.7804%" y="101" width="0.3961%" height="15" fill="rgb(231,97,17)" fg:x="3013" fg:w="176"/><text x="7.0734%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="6.5891%" y="117" width="0.8371%" height="15" fill="rgb(218,70,48)" fg:x="2928" fg:w="372"/><text x="6.8821%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="6.4181%" y="133" width="1.3255%" height="15" fill="rgb(212,196,52)" fg:x="2852" fg:w="589"/><text x="6.7110%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="7.7435%" y="133" width="0.1845%" height="15" fill="rgb(243,203,18)" fg:x="3441" fg:w="82"/><text x="8.0365%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="7.9281%" y="133" width="0.1238%" height="15" fill="rgb(252,125,41)" fg:x="3523" fg:w="55"/><text x="8.2210%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.0518%" y="117" width="0.1553%" height="15" fill="rgb(223,180,33)" fg:x="3578" fg:w="69"/><text x="8.3448%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.20%)</title><rect x="8.2071%" y="117" width="0.2048%" height="15" fill="rgb(254,159,46)" fg:x="3647" fg:w="91"/><text x="8.5001%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="8.4119%" y="117" width="0.1418%" height="15" fill="rgb(254,38,10)" fg:x="3738" fg:w="63"/><text x="8.7049%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (286 instructions, 0.64%)</title><rect x="8.0518%" y="133" width="0.6436%" height="15" fill="rgb(208,217,32)" fg:x="3578" fg:w="286"/><text x="8.3448%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="8.6955%" y="133" width="0.1710%" height="15" fill="rgb(221,120,13)" fg:x="3864" fg:w="76"/><text x="8.9884%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="8.8665%" y="117" width="0.1553%" height="15" fill="rgb(246,54,52)" fg:x="3940" fg:w="69"/><text x="9.1595%" y="127.50"></text></g><g><title>candid::binary_parser::read_sleb (91 instructions, 0.20%)</title><rect x="9.0218%" y="117" width="0.2048%" height="15" fill="rgb(242,34,25)" fg:x="4009" fg:w="91"/><text x="9.3147%" y="127.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="9.2265%" y="117" width="0.1418%" height="15" fill="rgb(247,209,9)" fg:x="4100" fg:w="63"/><text x="9.5195%" y="127.50"></text></g><g><title>&lt;candid::binary_parser::IndexType as binread::BinRead&gt;::read_options (282 instructions, 0.63%)</title><rect x="8.8665%" y="133" width="0.6346%" height="15" fill="rgb(228,71,26)" fg:x="3940" fg:w="282"/><text x="9.1595%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (2,040 instructions, 4.59%)</title><rect x="5.4684%" y="149" width="4.5908%" height="15" fill="rgb(222,145,49)" fg:x="2430" fg:w="2040"/><text x="5.7614%" y="159.50">binr..</text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="10.0592%" y="149" width="0.1418%" height="15" fill="rgb(218,121,17)" fg:x="4470" fg:w="63"/><text x="10.3522%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.2010%" y="149" width="0.0293%" height="15" fill="rgb(244,50,7)" fg:x="4533" fg:w="13"/><text x="10.4939%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 instructions, 0.03%)</title><rect x="10.2302%" y="149" width="0.0293%" height="15" fill="rgb(246,229,37)" fg:x="4546" fg:w="13"/><text x="10.5232%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::set::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 instructions, 0.02%)</title><rect x="10.2595%" y="149" width="0.0158%" height="15" fill="rgb(225,18,5)" fg:x="4559" fg:w="7"/><text x="10.5524%" y="159.50"></text></g><g><title>alloc::collections::btree::map::IntoIter&lt;K,V,A&gt;::dying_next (15 instructions, 0.03%)</title><rect x="10.2752%" y="149" width="0.0338%" height="15" fill="rgb(213,204,8)" fg:x="4566" fg:w="15"/><text x="10.5682%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.3090%" y="133" width="0.1710%" height="15" fill="rgb(238,103,6)" fg:x="4581" fg:w="76"/><text x="10.6019%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="10.3090%" y="149" width="0.3578%" height="15" fill="rgb(222,25,35)" fg:x="4581" fg:w="159"/><text x="10.6019%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="10.6668%" y="117" width="0.1710%" height="15" fill="rgb(213,203,35)" fg:x="4740" fg:w="76"/><text x="10.9598%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="10.6668%" y="133" width="0.2475%" height="15" fill="rgb(221,79,53)" fg:x="4740" fg:w="110"/><text x="10.9598%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="10.6668%" y="149" width="0.4006%" height="15" fill="rgb(243,200,35)" fg:x="4740" fg:w="178"/><text x="10.9598%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.0674%" y="133" width="0.1710%" height="15" fill="rgb(248,60,25)" fg:x="4918" fg:w="76"/><text x="11.3603%" y="143.50"></text></g><g><title>candid::binary_parser::IndexType::to_type (159 instructions, 0.36%)</title><rect x="11.0674%" y="149" width="0.3578%" height="15" fill="rgb(227,53,46)" fg:x="4918" fg:w="159"/><text x="11.3603%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.4252%" y="149" width="0.1710%" height="15" fill="rgb(216,120,32)" fg:x="5077" fg:w="76"/><text x="11.7181%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="11.5962%" y="149" width="0.1823%" height="15" fill="rgb(220,134,1)" fg:x="5153" fg:w="81"/><text x="11.8892%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.7785%" y="149" width="0.1710%" height="15" fill="rgb(237,168,5)" fg:x="5234" fg:w="76"/><text x="12.0714%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="11.9495%" y="149" width="0.1710%" height="15" fill="rgb(231,100,33)" fg:x="5310" fg:w="76"/><text x="12.2425%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="12.1250%" y="149" width="0.1823%" height="15" fill="rgb(236,177,47)" fg:x="5388" fg:w="81"/><text x="12.4180%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="12.3073%" y="149" width="0.8979%" height="15" fill="rgb(235,7,49)" fg:x="5469" fg:w="399"/><text x="12.6003%" y="159.50"></text></g><g><title>memcpy (399 instructions, 0.90%)</title><rect x="13.2052%" y="149" width="0.8979%" height="15" fill="rgb(232,119,22)" fg:x="5868" fg:w="399"/><text x="13.4982%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::new (7,025 instructions, 15.81%)</title><rect x="0.5558%" y="165" width="15.8089%" height="15" fill="rgb(254,73,53)" fg:x="247" fg:w="7025"/><text x="0.8488%" y="175.50">candid::de::IDLDeser..</text></g><g><title>memcpy (354 instructions, 0.80%)</title><rect x="16.3647%" y="165" width="0.7966%" height="15" fill="rgb(251,35,20)" fg:x="7272" fg:w="354"/><text x="16.6577%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="17.1614%" y="133" width="0.0113%" height="15" fill="rgb(241,119,20)" fg:x="7626" fg:w="5"/><text x="17.4543%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="17.1726%" y="117" width="0.1193%" height="15" fill="rgb(207,102,14)" fg:x="7631" fg:w="53"/><text x="17.4656%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="17.2919%" y="117" width="0.8641%" height="15" fill="rgb(248,201,50)" fg:x="7684" fg:w="384"/><text x="17.5849%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="18.1560%" y="117" width="0.3646%" height="15" fill="rgb(222,185,44)" fg:x="8068" fg:w="162"/><text x="18.4490%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="17.1726%" y="133" width="1.8813%" height="15" fill="rgb(218,107,18)" fg:x="7631" fg:w="836"/><text x="17.4656%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (954 instructions, 2.15%)</title><rect x="17.1614%" y="149" width="2.1469%" height="15" fill="rgb(237,177,39)" fg:x="7626" fg:w="954"/><text x="17.4543%" y="159.50">s..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="19.3082%" y="149" width="0.1710%" height="15" fill="rgb(246,69,6)" fg:x="8580" fg:w="76"/><text x="19.6012%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="19.4793%" y="133" width="0.0113%" height="15" fill="rgb(234,208,37)" fg:x="8656" fg:w="5"/><text x="19.7722%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="19.4905%" y="117" width="0.1193%" height="15" fill="rgb(225,4,6)" fg:x="8661" fg:w="53"/><text x="19.7835%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="19.6098%" y="117" width="0.8641%" height="15" fill="rgb(233,45,0)" fg:x="8714" fg:w="384"/><text x="19.9028%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="20.4739%" y="117" width="0.3646%" height="15" fill="rgb(226,136,5)" fg:x="9098" fg:w="162"/><text x="20.7669%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="19.4905%" y="133" width="1.8813%" height="15" fill="rgb(211,91,47)" fg:x="8661" fg:w="836"/><text x="19.7835%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,045 instructions, 2.35%)</title><rect x="19.4793%" y="149" width="2.3516%" height="15" fill="rgb(242,88,51)" fg:x="8656" fg:w="1045"/><text x="19.7722%" y="159.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="21.8309%" y="149" width="0.1710%" height="15" fill="rgb(230,91,28)" fg:x="9701" fg:w="76"/><text x="22.1239%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="22.0019%" y="133" width="0.0113%" height="15" fill="rgb(254,186,29)" fg:x="9777" fg:w="5"/><text x="22.2949%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="22.0132%" y="117" width="0.1193%" height="15" fill="rgb(238,6,4)" fg:x="9782" fg:w="53"/><text x="22.3062%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="22.1325%" y="117" width="0.8641%" height="15" fill="rgb(221,151,16)" fg:x="9835" fg:w="384"/><text x="22.4254%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="22.9966%" y="117" width="0.3646%" height="15" fill="rgb(251,143,52)" fg:x="10219" fg:w="162"/><text x="23.2896%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (836 instructions, 1.88%)</title><rect x="22.0132%" y="133" width="1.8813%" height="15" fill="rgb(206,90,15)" fg:x="9782" fg:w="836"/><text x="22.3062%" y="143.50"></text></g><g><title>memcmp (740 instructions, 1.67%)</title><rect x="23.8945%" y="133" width="1.6653%" height="15" fill="rgb(218,35,8)" fg:x="10618" fg:w="740"/><text x="24.1875%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="25.5598%" y="117" width="0.1823%" height="15" fill="rgb(239,215,6)" fg:x="11358" fg:w="81"/><text x="25.8528%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="25.5598%" y="133" width="0.2430%" height="15" fill="rgb(245,116,39)" fg:x="11358" fg:w="108"/><text x="25.8528%" y="143.50"></text></g><g><title>candid::types::internal::env_add (1,858 instructions, 4.18%)</title><rect x="22.0019%" y="149" width="4.1812%" height="15" fill="rgb(242,65,28)" fg:x="9777" fg:w="1858"/><text x="22.2949%" y="159.50">cand..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="26.1831%" y="101" width="0.1193%" height="15" fill="rgb(252,132,53)" fg:x="11635" fg:w="53"/><text x="26.4761%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="26.1831%" y="117" width="0.1755%" height="15" fill="rgb(224,159,50)" fg:x="11635" fg:w="78"/><text x="26.4761%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="26.1831%" y="133" width="0.6594%" height="15" fill="rgb(224,93,4)" fg:x="11635" fg:w="293"/><text x="26.4761%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1311 (15 instructions, 0.03%)</title><rect x="26.8425%" y="133" width="0.0338%" height="15" fill="rgb(208,81,34)" fg:x="11928" fg:w="15"/><text x="27.1355%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="26.8763%" y="133" width="0.0248%" height="15" fill="rgb(233,92,54)" fg:x="11943" fg:w="11"/><text x="27.1692%" y="143.50"></text></g><g><title>candid::types::internal::env_id (478 instructions, 1.08%)</title><rect x="26.1831%" y="149" width="1.0757%" height="15" fill="rgb(237,21,14)" fg:x="11635" fg:w="478"/><text x="26.4761%" y="159.50"></text></g><g><title>candid::types::CandidType::ty (4,594 instructions, 10.34%)</title><rect x="17.1614%" y="165" width="10.3382%" height="15" fill="rgb(249,128,51)" fg:x="7626" fg:w="4594"/><text x="17.4543%" y="175.50">candid::type..</text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="27.4996%" y="149" width="0.1058%" height="15" fill="rgb(223,129,24)" fg:x="12220" fg:w="47"/><text x="27.7926%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.6054%" y="133" width="0.2768%" height="15" fill="rgb(231,168,25)" fg:x="12267" fg:w="123"/><text x="27.8983%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="27.9429%" y="133" width="0.2768%" height="15" fill="rgb(224,39,20)" fg:x="12417" fg:w="123"/><text x="28.2359%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (300 instructions, 0.68%)</title><rect x="27.6054%" y="149" width="0.6751%" height="15" fill="rgb(225,152,53)" fg:x="12267" fg:w="300"/><text x="27.8983%" y="159.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.2805%" y="133" width="0.0630%" height="15" fill="rgb(252,17,24)" fg:x="12567" fg:w="28"/><text x="28.5735%" y="143.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="28.3435%" y="133" width="0.0630%" height="15" fill="rgb(250,114,30)" fg:x="12595" fg:w="28"/><text x="28.6365%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.03%)</title><rect x="28.4065%" y="133" width="0.0338%" height="15" fill="rgb(229,5,4)" fg:x="12623" fg:w="15"/><text x="28.6995%" y="143.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.03%)</title><rect x="28.4403%" y="133" width="0.0338%" height="15" fill="rgb(225,176,49)" fg:x="12638" fg:w="15"/><text x="28.7332%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="28.4740%" y="133" width="0.1755%" height="15" fill="rgb(224,221,49)" fg:x="12653" fg:w="78"/><text x="28.7670%" y="143.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.16%)</title><rect x="28.6495%" y="133" width="0.1553%" height="15" fill="rgb(253,169,27)" fg:x="12731" fg:w="69"/><text x="28.9425%" y="143.50"></text></g><g><title>binread::binary_template::write_named (79 instructions, 0.18%)</title><rect x="28.8048%" y="117" width="0.1778%" height="15" fill="rgb(211,206,16)" fg:x="12800" fg:w="79"/><text x="29.0978%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (149 instructions, 0.34%)</title><rect x="28.8048%" y="133" width="0.3353%" height="15" fill="rgb(244,87,35)" fg:x="12800" fg:w="149"/><text x="29.0978%" y="143.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.15%)</title><rect x="29.1401%" y="133" width="0.1463%" height="15" fill="rgb(246,28,10)" fg:x="12949" fg:w="65"/><text x="29.4331%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.91%)</title><rect x="29.2864%" y="133" width="0.9137%" height="15" fill="rgb(229,12,44)" fg:x="13014" fg:w="406"/><text x="29.5794%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="30.2001%" y="117" width="0.1710%" height="15" fill="rgb(210,145,37)" fg:x="13420" fg:w="76"/><text x="30.4930%" y="127.50"></text></g><g><title>memcpy (60 instructions, 0.14%)</title><rect x="30.3711%" y="85" width="0.1350%" height="15" fill="rgb(227,112,52)" fg:x="13496" fg:w="60"/><text x="30.6641%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.19%)</title><rect x="30.3711%" y="101" width="0.1913%" height="15" fill="rgb(238,155,34)" fg:x="13496" fg:w="85"/><text x="30.6641%" y="111.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (9 instructions, 0.02%)</title><rect x="30.5624%" y="53" width="0.0203%" height="15" fill="rgb(239,226,36)" fg:x="13581" fg:w="9"/><text x="30.8553%" y="63.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="30.5826%" y="37" width="0.0675%" height="15" fill="rgb(230,16,23)" fg:x="13590" fg:w="30"/><text x="30.8756%" y="47.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.12%)</title><rect x="30.5826%" y="53" width="0.1238%" height="15" fill="rgb(236,171,36)" fg:x="13590" fg:w="55"/><text x="30.8756%" y="63.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.27%)</title><rect x="30.5624%" y="69" width="0.2655%" height="15" fill="rgb(221,22,14)" fg:x="13581" fg:w="118"/><text x="30.8553%" y="79.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.38%)</title><rect x="30.5624%" y="85" width="0.3848%" height="15" fill="rgb(242,43,11)" fg:x="13581" fg:w="171"/><text x="30.8553%" y="95.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.40%)</title><rect x="30.5624%" y="101" width="0.3961%" height="15" fill="rgb(232,69,23)" fg:x="13581" fg:w="176"/><text x="30.8553%" y="111.50"></text></g><g><title>core::fmt::write (372 instructions, 0.84%)</title><rect x="30.3711%" y="117" width="0.8371%" height="15" fill="rgb(216,180,54)" fg:x="13496" fg:w="372"/><text x="30.6641%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (589 instructions, 1.33%)</title><rect x="30.2001%" y="133" width="1.3255%" height="15" fill="rgb(216,5,24)" fg:x="13420" fg:w="589"/><text x="30.4930%" y="143.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.18%)</title><rect x="31.5255%" y="133" width="0.1845%" height="15" fill="rgb(225,89,9)" fg:x="14009" fg:w="82"/><text x="31.8185%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="31.7101%" y="133" width="0.1238%" height="15" fill="rgb(243,75,33)" fg:x="14091" fg:w="55"/><text x="32.0030%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="31.8338%" y="117" width="0.1260%" height="15" fill="rgb(247,141,45)" fg:x="14146" fg:w="56"/><text x="32.1268%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (113 instructions, 0.25%)</title><rect x="31.8338%" y="133" width="0.2543%" height="15" fill="rgb(232,177,36)" fg:x="14146" fg:w="113"/><text x="32.1268%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="32.0881%" y="133" width="0.1710%" height="15" fill="rgb(219,125,36)" fg:x="14259" fg:w="76"/><text x="32.3811%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.2592%" y="117" width="0.1260%" height="15" fill="rgb(227,94,9)" fg:x="14335" fg:w="56"/><text x="32.5521%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.5134%" y="117" width="0.1260%" height="15" fill="rgb(240,34,52)" fg:x="14448" fg:w="56"/><text x="32.8064%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="32.7677%" y="117" width="0.1260%" height="15" fill="rgb(216,45,12)" fg:x="14561" fg:w="56"/><text x="33.0607%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.0220%" y="117" width="0.1260%" height="15" fill="rgb(246,21,19)" fg:x="14674" fg:w="56"/><text x="33.3150%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.2763%" y="117" width="0.1260%" height="15" fill="rgb(213,98,42)" fg:x="14787" fg:w="56"/><text x="33.5693%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.5306%" y="117" width="0.1260%" height="15" fill="rgb(250,136,47)" fg:x="14900" fg:w="56"/><text x="33.8236%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="33.7849%" y="117" width="0.1260%" height="15" fill="rgb(251,124,27)" fg:x="15013" fg:w="56"/><text x="34.0779%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.0392%" y="117" width="0.1260%" height="15" fill="rgb(229,180,14)" fg:x="15126" fg:w="56"/><text x="34.3322%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (904 instructions, 2.03%)</title><rect x="32.2592%" y="133" width="2.0343%" height="15" fill="rgb(245,216,25)" fg:x="14335" fg:w="904"/><text x="32.5521%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="34.2935%" y="101" width="0.2273%" height="15" fill="rgb(251,43,5)" fg:x="15239" fg:w="101"/><text x="34.5865%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="34.2935%" y="117" width="0.3061%" height="15" fill="rgb(250,128,24)" fg:x="15239" fg:w="136"/><text x="34.5865%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (209 instructions, 0.47%)</title><rect x="34.2935%" y="133" width="0.4703%" height="15" fill="rgb(217,117,27)" fg:x="15239" fg:w="209"/><text x="34.5865%" y="143.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="34.7638%" y="117" width="0.1260%" height="15" fill="rgb(245,147,4)" fg:x="15448" fg:w="56"/><text x="35.0568%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.0181%" y="117" width="0.1260%" height="15" fill="rgb(242,201,35)" fg:x="15561" fg:w="56"/><text x="35.3111%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.2724%" y="117" width="0.1260%" height="15" fill="rgb(218,181,1)" fg:x="15674" fg:w="56"/><text x="35.5654%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.5267%" y="117" width="0.1260%" height="15" fill="rgb(222,6,29)" fg:x="15787" fg:w="56"/><text x="35.8197%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="35.7810%" y="117" width="0.1260%" height="15" fill="rgb(208,186,3)" fg:x="15900" fg:w="56"/><text x="36.0740%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.0353%" y="117" width="0.1260%" height="15" fill="rgb(216,36,26)" fg:x="16013" fg:w="56"/><text x="36.3283%" y="127.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (56 instructions, 0.13%)</title><rect x="36.2896%" y="117" width="0.1260%" height="15" fill="rgb(248,201,23)" fg:x="16126" fg:w="56"/><text x="36.5825%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (791 instructions, 1.78%)</title><rect x="34.7638%" y="133" width="1.7800%" height="15" fill="rgb(251,170,31)" fg:x="15448" fg:w="791"/><text x="35.0568%" y="143.50"></text></g><g><title>&lt;core::iter::adapters::GenericShunt&lt;I,R&gt; as core::iter::traits::iterator::Iterator&gt;::next (30 instructions, 0.07%)</title><rect x="36.5439%" y="133" width="0.0675%" height="15" fill="rgb(207,110,25)" fg:x="16239" fg:w="30"/><text x="36.8368%" y="143.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.14%)</title><rect x="36.6114%" y="133" width="0.1418%" height="15" fill="rgb(250,54,15)" fg:x="16269" fg:w="63"/><text x="36.9044%" y="143.50"></text></g><g><title>__rust_realloc (45 instructions, 0.10%)</title><rect x="36.7532%" y="101" width="0.1013%" height="15" fill="rgb(227,68,33)" fg:x="16332" fg:w="45"/><text x="37.0461%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 instructions, 0.18%)</title><rect x="36.7532%" y="117" width="0.1800%" height="15" fill="rgb(238,34,41)" fg:x="16332" fg:w="80"/><text x="37.0461%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 instructions, 0.34%)</title><rect x="36.7532%" y="133" width="0.3443%" height="15" fill="rgb(220,11,15)" fg:x="16332" fg:w="153"/><text x="37.0461%" y="143.50"></text></g><g><title>memcpy (206 instructions, 0.46%)</title><rect x="37.0975%" y="133" width="0.4636%" height="15" fill="rgb(246,111,35)" fg:x="16485" fg:w="206"/><text x="37.3904%" y="143.50"></text></g><g><title>memcpy (160 instructions, 0.36%)</title><rect x="37.5610%" y="133" width="0.3601%" height="15" fill="rgb(209,88,53)" fg:x="16691" fg:w="160"/><text x="37.8540%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="37.9211%" y="133" width="0.1823%" height="15" fill="rgb(231,185,47)" fg:x="16851" fg:w="81"/><text x="38.2141%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="38.1034%" y="133" width="0.1238%" height="15" fill="rgb(233,154,1)" fg:x="16932" fg:w="55"/><text x="38.3964%" y="143.50"></text></g><g><title>&lt;candid::types::principal::Principal as serde::de::Deserialize&gt;::deserialize (5,440 instructions, 12.24%)</title><rect x="28.2805%" y="149" width="12.2421%" height="15" fill="rgb(225,15,46)" fg:x="12567" fg:w="5440"/><text x="28.5735%" y="159.50">&lt;candid::types:..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5225%" y="149" width="0.0248%" height="15" fill="rgb(211,135,41)" fg:x="18007" fg:w="11"/><text x="40.8155%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5473%" y="149" width="0.0248%" height="15" fill="rgb(208,54,0)" fg:x="18018" fg:w="11"/><text x="40.8403%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="40.5720%" y="149" width="0.0248%" height="15" fill="rgb(244,136,14)" fg:x="18029" fg:w="11"/><text x="40.8650%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::deserialize_with_type (6,100 instructions, 13.73%)</title><rect x="27.4996%" y="165" width="13.7273%" height="15" fill="rgb(241,56,14)" fg:x="12220" fg:w="6100"/><text x="27.7926%" y="175.50">candid::de::IDLDe..</text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="41.2269%" y="149" width="0.0113%" height="15" fill="rgb(205,80,24)" fg:x="18320" fg:w="5"/><text x="41.5199%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="41.2382%" y="133" width="0.1193%" height="15" fill="rgb(220,57,4)" fg:x="18325" fg:w="53"/><text x="41.5311%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="41.3574%" y="133" width="0.1980%" height="15" fill="rgb(226,193,50)" fg:x="18378" fg:w="88"/><text x="41.6504%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="41.5555%" y="133" width="0.3646%" height="15" fill="rgb(231,168,22)" fg:x="18466" fg:w="162"/><text x="41.8484%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="41.2382%" y="149" width="1.2152%" height="15" fill="rgb(254,215,14)" fg:x="18325" fg:w="540"/><text x="41.5311%" y="159.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (658 instructions, 1.48%)</title><rect x="41.2269%" y="165" width="1.4807%" height="15" fill="rgb(211,115,16)" fg:x="18320" fg:w="658"/><text x="41.5199%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="42.7077%" y="165" width="0.1710%" height="15" fill="rgb(236,210,16)" fg:x="18978" fg:w="76"/><text x="43.0006%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="42.8787%" y="149" width="0.0113%" height="15" fill="rgb(221,94,12)" fg:x="19054" fg:w="5"/><text x="43.1717%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="42.8899%" y="133" width="0.1193%" height="15" fill="rgb(235,218,49)" fg:x="19059" fg:w="53"/><text x="43.1829%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="43.0092%" y="133" width="0.1980%" height="15" fill="rgb(217,114,14)" fg:x="19112" fg:w="88"/><text x="43.3022%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="43.2072%" y="133" width="0.3646%" height="15" fill="rgb(216,145,22)" fg:x="19200" fg:w="162"/><text x="43.5002%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="42.8899%" y="149" width="1.2152%" height="15" fill="rgb(217,112,39)" fg:x="19059" fg:w="540"/><text x="43.1829%" y="159.50"></text></g><g><title>candid::types::internal::env_add (762 instructions, 1.71%)</title><rect x="42.8787%" y="165" width="1.7148%" height="15" fill="rgb(225,85,32)" fg:x="19054" fg:w="762"/><text x="43.1717%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="44.5935%" y="165" width="0.1710%" height="15" fill="rgb(245,209,47)" fg:x="19816" fg:w="76"/><text x="44.8864%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="44.7645%" y="149" width="0.0113%" height="15" fill="rgb(218,220,15)" fg:x="19892" fg:w="5"/><text x="45.0575%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="44.7757%" y="133" width="0.1193%" height="15" fill="rgb(222,202,31)" fg:x="19897" fg:w="53"/><text x="45.0687%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="44.8950%" y="133" width="0.1980%" height="15" fill="rgb(243,203,4)" fg:x="19950" fg:w="88"/><text x="45.1880%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="45.0931%" y="133" width="0.3646%" height="15" fill="rgb(237,92,17)" fg:x="20038" fg:w="162"/><text x="45.3860%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (540 instructions, 1.22%)</title><rect x="44.7757%" y="149" width="1.2152%" height="15" fill="rgb(231,119,7)" fg:x="19897" fg:w="540"/><text x="45.0687%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="45.9910%" y="149" width="0.1710%" height="15" fill="rgb(237,82,41)" fg:x="20437" fg:w="76"/><text x="46.2839%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="46.1620%" y="149" width="0.1890%" height="15" fill="rgb(226,81,48)" fg:x="20513" fg:w="84"/><text x="46.4550%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="46.3510%" y="133" width="0.1193%" height="15" fill="rgb(234,70,51)" fg:x="20597" fg:w="53"/><text x="46.6440%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="46.4703%" y="133" width="0.8191%" height="15" fill="rgb(251,86,4)" fg:x="20650" fg:w="364"/><text x="46.7633%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="47.2894%" y="133" width="0.1620%" height="15" fill="rgb(244,144,28)" fg:x="21014" fg:w="72"/><text x="47.5824%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="47.9848%" y="133" width="0.1193%" height="15" fill="rgb(232,161,39)" fg:x="21323" fg:w="53"/><text x="48.2778%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (88 instructions, 0.20%)</title><rect x="48.1041%" y="133" width="0.1980%" height="15" fill="rgb(247,34,51)" fg:x="21376" fg:w="88"/><text x="48.3970%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="48.3021%" y="133" width="0.3646%" height="15" fill="rgb(225,132,2)" fg:x="21464" fg:w="162"/><text x="48.5951%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="49.2000%" y="133" width="0.1193%" height="15" fill="rgb(209,159,44)" fg:x="21863" fg:w="53"/><text x="49.4930%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (384 instructions, 0.86%)</title><rect x="49.3193%" y="133" width="0.8641%" height="15" fill="rgb(251,214,1)" fg:x="21916" fg:w="384"/><text x="49.6122%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (162 instructions, 0.36%)</title><rect x="50.1834%" y="133" width="0.3646%" height="15" fill="rgb(247,84,47)" fg:x="22300" fg:w="162"/><text x="50.4764%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2,102 instructions, 4.73%)</title><rect x="46.3510%" y="149" width="4.7303%" height="15" fill="rgb(240,111,43)" fg:x="20597" fg:w="2102"/><text x="46.6440%" y="159.50">core..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (64 instructions, 0.14%)</title><rect x="51.0813%" y="149" width="0.1440%" height="15" fill="rgb(215,214,35)" fg:x="22699" fg:w="64"/><text x="51.3743%" y="159.50"></text></g><g><title>memcmp (68 instructions, 0.15%)</title><rect x="51.2253%" y="149" width="0.1530%" height="15" fill="rgb(248,207,23)" fg:x="22763" fg:w="68"/><text x="51.5183%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="51.3784%" y="133" width="0.1823%" height="15" fill="rgb(214,186,4)" fg:x="22831" fg:w="81"/><text x="51.6713%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="51.3784%" y="149" width="0.2430%" height="15" fill="rgb(220,133,22)" fg:x="22831" fg:w="108"/><text x="51.6713%" y="159.50"></text></g><g><title>candid::types::internal::env_add (3,676 instructions, 8.27%)</title><rect x="44.7645%" y="165" width="8.2724%" height="15" fill="rgb(239,134,19)" fg:x="19892" fg:w="3676"/><text x="45.0575%" y="175.50">candid::t..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.0369%" y="117" width="0.1193%" height="15" fill="rgb(250,140,9)" fg:x="23568" fg:w="53"/><text x="53.3299%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="53.0369%" y="133" width="0.1755%" height="15" fill="rgb(225,59,14)" fg:x="23568" fg:w="78"/><text x="53.3299%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="53.6962%" y="117" width="0.1193%" height="15" fill="rgb(214,152,51)" fg:x="23861" fg:w="53"/><text x="53.9892%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="53.6962%" y="133" width="0.1755%" height="15" fill="rgb(251,227,43)" fg:x="23861" fg:w="78"/><text x="53.9892%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (586 instructions, 1.32%)</title><rect x="53.0369%" y="149" width="1.3187%" height="15" fill="rgb(241,96,17)" fg:x="23568" fg:w="586"/><text x="53.3299%" y="159.50"></text></g><g><title>candid::types::internal::env_id (859 instructions, 1.93%)</title><rect x="53.0369%" y="165" width="1.9331%" height="15" fill="rgb(234,198,43)" fg:x="23568" fg:w="859"/><text x="53.3299%" y="175.50"></text></g><g><title>candid::types::type_env::TypeEnv::trace_type (47 instructions, 0.11%)</title><rect x="54.9700%" y="165" width="0.1058%" height="15" fill="rgb(220,108,29)" fg:x="24427" fg:w="47"/><text x="55.2629%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="55.1005%" y="149" width="0.3781%" height="15" fill="rgb(226,163,33)" fg:x="24485" fg:w="168"/><text x="55.3934%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (206 instructions, 0.46%)</title><rect x="55.0757%" y="165" width="0.4636%" height="15" fill="rgb(205,194,45)" fg:x="24474" fg:w="206"/><text x="55.3687%" y="175.50"></text></g><g><title>candid::de::Deserializer::unroll_type (28 instructions, 0.06%)</title><rect x="55.5393%" y="149" width="0.0630%" height="15" fill="rgb(206,143,44)" fg:x="24680" fg:w="28"/><text x="55.8323%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.03%)</title><rect x="55.6023%" y="149" width="0.0338%" height="15" fill="rgb(236,136,36)" fg:x="24708" fg:w="15"/><text x="55.8953%" y="159.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.2278 (15 instructions, 0.03%)</title><rect x="55.6361%" y="149" width="0.0338%" height="15" fill="rgb(249,172,42)" fg:x="24723" fg:w="15"/><text x="55.9290%" y="159.50"></text></g><g><title>serde::de::impls::&lt;impl serde::de::Deserialize for u64&gt;::deserialize (135 instructions, 0.30%)</title><rect x="55.5393%" y="165" width="0.3038%" height="15" fill="rgb(216,139,23)" fg:x="24680" fg:w="135"/><text x="55.8323%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8431%" y="165" width="0.0248%" height="15" fill="rgb(207,166,20)" fg:x="24815" fg:w="11"/><text x="56.1361%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8679%" y="165" width="0.0248%" height="15" fill="rgb(210,209,22)" fg:x="24826" fg:w="11"/><text x="56.1608%" y="175.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="55.8926%" y="165" width="0.0248%" height="15" fill="rgb(232,118,20)" fg:x="24837" fg:w="11"/><text x="56.1856%" y="175.50"></text></g><g><title>memcpy (410 instructions, 0.92%)</title><rect x="55.9174%" y="165" width="0.9227%" height="15" fill="rgb(238,113,42)" fg:x="24848" fg:w="410"/><text x="56.2103%" y="175.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (12 instructions, 0.03%)</title><rect x="56.8400%" y="133" width="0.0270%" height="15" fill="rgb(231,42,5)" fg:x="25258" fg:w="12"/><text x="57.1330%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="56.8670%" y="133" width="0.2768%" height="15" fill="rgb(243,166,24)" fg:x="25270" fg:w="123"/><text x="57.1600%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (75 instructions, 0.17%)</title><rect x="57.1438%" y="101" width="0.1688%" height="15" fill="rgb(237,226,12)" fg:x="25393" fg:w="75"/><text x="57.4368%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (220 instructions, 0.50%)</title><rect x="57.1438%" y="117" width="0.4951%" height="15" fill="rgb(229,133,24)" fg:x="25393" fg:w="220"/><text x="57.4368%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (247 instructions, 0.56%)</title><rect x="57.1438%" y="133" width="0.5558%" height="15" fill="rgb(238,33,43)" fg:x="25393" fg:w="247"/><text x="57.4368%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="57.6997%" y="133" width="0.0248%" height="15" fill="rgb(227,59,38)" fg:x="25640" fg:w="11"/><text x="57.9926%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (433 instructions, 0.97%)</title><rect x="56.8400%" y="149" width="0.9744%" height="15" fill="rgb(230,97,0)" fg:x="25258" fg:w="433"/><text x="57.1330%" y="159.50"></text></g><g><title>candid::de::IDLDeserialize::done (471 instructions, 1.06%)</title><rect x="56.8400%" y="165" width="1.0599%" height="15" fill="rgb(250,173,50)" fg:x="25258" fg:w="471"/><text x="57.1330%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (21 instructions, 0.05%)</title><rect x="57.8999%" y="149" width="0.0473%" height="15" fill="rgb(240,15,50)" fg:x="25729" fg:w="21"/><text x="58.1929%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (95 instructions, 0.21%)</title><rect x="57.9472%" y="149" width="0.2138%" height="15" fill="rgb(221,93,22)" fg:x="25750" fg:w="95"/><text x="58.2402%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (197 instructions, 0.44%)</title><rect x="57.8999%" y="165" width="0.4433%" height="15" fill="rgb(245,180,53)" fg:x="25729" fg:w="197"/><text x="58.1929%" y="175.50"></text></g><g><title>memset (218 instructions, 0.49%)</title><rect x="58.3433%" y="165" width="0.4906%" height="15" fill="rgb(231,88,51)" fg:x="25926" fg:w="218"/><text x="58.6362%" y="175.50"></text></g><g><title>memcpy (163 instructions, 0.37%)</title><rect x="58.8339%" y="165" width="0.3668%" height="15" fill="rgb(240,58,21)" fg:x="26144" fg:w="163"/><text x="59.1268%" y="175.50"></text></g><g><title>memcpy (470 instructions, 1.06%)</title><rect x="59.2007%" y="165" width="1.0577%" height="15" fill="rgb(237,21,10)" fg:x="26307" fg:w="470"/><text x="59.4936%" y="175.50"></text></g><g><title>memset (126 instructions, 0.28%)</title><rect x="60.2583%" y="149" width="0.2835%" height="15" fill="rgb(218,43,11)" fg:x="26777" fg:w="126"/><text x="60.5513%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 11.22%)</title><rect x="60.5419%" y="149" width="11.2226%" height="15" fill="rgb(218,221,29)" fg:x="26903" fg:w="4987"/><text x="60.8349%" y="159.50">sha2::sha256::..</text></g><g><title>&lt;sha2::core_api::Sha256VarCore as digest::core_api::VariableOutputCore&gt;::finalize_variable_core (5,401 instructions, 12.15%)</title><rect x="60.2583%" y="165" width="12.1543%" height="15" fill="rgb(214,118,42)" fg:x="26777" fg:w="5401"/><text x="60.5513%" y="175.50">&lt;sha2::core_api..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="72.4126%" y="165" width="0.1710%" height="15" fill="rgb(251,200,26)" fg:x="32178" fg:w="76"/><text x="72.7056%" y="175.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="72.5837%" y="149" width="0.0113%" height="15" fill="rgb(237,101,39)" fg:x="32254" fg:w="5"/><text x="72.8766%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.5949%" y="117" width="0.2835%" height="15" fill="rgb(251,117,11)" fg:x="32259" fg:w="126"/><text x="72.8879%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (153 instructions, 0.34%)</title><rect x="72.5949%" y="133" width="0.3443%" height="15" fill="rgb(216,223,23)" fg:x="32259" fg:w="153"/><text x="72.8879%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.28%)</title><rect x="72.9392%" y="133" width="0.2835%" height="15" fill="rgb(251,54,12)" fg:x="32412" fg:w="126"/><text x="73.2322%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (54 instructions, 0.12%)</title><rect x="73.2948%" y="117" width="0.1215%" height="15" fill="rgb(254,176,54)" fg:x="32570" fg:w="54"/><text x="73.5877%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="73.4163%" y="117" width="0.1418%" height="15" fill="rgb(210,32,8)" fg:x="32624" fg:w="63"/><text x="73.7093%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (243 instructions, 0.55%)</title><rect x="73.2948%" y="133" width="0.5468%" height="15" fill="rgb(235,52,38)" fg:x="32570" fg:w="243"/><text x="73.5877%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (581 instructions, 1.31%)</title><rect x="72.5949%" y="149" width="1.3075%" height="15" fill="rgb(231,4,44)" fg:x="32259" fg:w="581"/><text x="72.8879%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="73.9024%" y="149" width="0.0248%" height="15" fill="rgb(249,2,32)" fg:x="32840" fg:w="11"/><text x="74.1953%" y="159.50"></text></g><g><title>memset (84 instructions, 0.19%)</title><rect x="73.9271%" y="149" width="0.1890%" height="15" fill="rgb(224,65,26)" fg:x="32851" fg:w="84"/><text x="74.2201%" y="159.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="74.1162%" y="117" width="0.0113%" height="15" fill="rgb(250,73,40)" fg:x="32935" fg:w="5"/><text x="74.4091%" y="127.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.09%)</title><rect x="74.1162%" y="133" width="0.0878%" height="15" fill="rgb(253,177,16)" fg:x="32935" fg:w="39"/><text x="74.4091%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="74.2039%" y="133" width="0.1710%" height="15" fill="rgb(217,32,34)" fg:x="32974" fg:w="76"/><text x="74.4969%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="74.3750%" y="117" width="0.0113%" height="15" fill="rgb(212,7,10)" fg:x="33050" fg:w="5"/><text x="74.6679%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="74.3862%" y="101" width="0.1193%" height="15" fill="rgb(245,89,8)" fg:x="33055" fg:w="53"/><text x="74.6792%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="74.5055%" y="101" width="0.8191%" height="15" fill="rgb(237,16,53)" fg:x="33108" fg:w="364"/><text x="74.7984%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="75.3246%" y="101" width="0.1620%" height="15" fill="rgb(250,204,30)" fg:x="33472" fg:w="72"/><text x="75.6176%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="74.3862%" y="117" width="1.6338%" height="15" fill="rgb(208,77,27)" fg:x="33055" fg:w="726"/><text x="74.6792%" y="127.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 2.10%)</title><rect x="74.3750%" y="133" width="2.1041%" height="15" fill="rgb(250,204,28)" fg:x="33050" fg:w="935"/><text x="74.6679%" y="143.50">c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.4791%" y="133" width="0.1710%" height="15" fill="rgb(244,63,21)" fg:x="33985" fg:w="76"/><text x="76.7720%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="76.6501%" y="133" width="0.1710%" height="15" fill="rgb(236,85,44)" fg:x="34061" fg:w="76"/><text x="76.9431%" y="143.50"></text></g><g><title>candid::types::internal::ENV::__getit (5 instructions, 0.01%)</title><rect x="76.8211%" y="117" width="0.0113%" height="15" fill="rgb(215,98,4)" fg:x="34137" fg:w="5"/><text x="77.1141%" y="127.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="76.8324%" y="101" width="0.1193%" height="15" fill="rgb(235,38,11)" fg:x="34142" fg:w="53"/><text x="77.1253%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.82%)</title><rect x="76.9516%" y="101" width="0.8191%" height="15" fill="rgb(254,186,25)" fg:x="34195" fg:w="364"/><text x="77.2446%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.16%)</title><rect x="77.7708%" y="101" width="0.1620%" height="15" fill="rgb(225,55,31)" fg:x="34559" fg:w="72"/><text x="78.0637%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 1.63%)</title><rect x="76.8324%" y="117" width="1.6338%" height="15" fill="rgb(211,15,21)" fg:x="34142" fg:w="726"/><text x="77.1253%" y="127.50"></text></g><g><title>memcmp (614 instructions, 1.38%)</title><rect x="78.4661%" y="117" width="1.3817%" height="15" fill="rgb(215,187,41)" fg:x="34868" fg:w="614"/><text x="78.7591%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="79.8479%" y="101" width="0.1823%" height="15" fill="rgb(248,69,32)" fg:x="35482" fg:w="81"/><text x="80.1408%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="79.8479%" y="117" width="0.2430%" height="15" fill="rgb(252,102,52)" fg:x="35482" fg:w="108"/><text x="80.1408%" y="127.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 3.65%)</title><rect x="76.8211%" y="133" width="3.6501%" height="15" fill="rgb(253,140,32)" fg:x="34137" fg:w="1622"/><text x="77.1141%" y="143.50">can..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="80.4712%" y="85" width="0.1193%" height="15" fill="rgb(216,56,42)" fg:x="35759" fg:w="53"/><text x="80.7642%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="80.5905%" y="85" width="0.3466%" height="15" fill="rgb(216,184,14)" fg:x="35812" fg:w="154"/><text x="80.8835%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="80.4712%" y="101" width="0.5806%" height="15" fill="rgb(237,187,27)" fg:x="35759" fg:w="258"/><text x="80.7642%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="80.4712%" y="117" width="1.0644%" height="15" fill="rgb(219,65,3)" fg:x="35759" fg:w="473"/><text x="80.7642%" y="127.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::cmp::PartialEq&gt;::eq.1311 (42 instructions, 0.09%)</title><rect x="81.5357%" y="117" width="0.0945%" height="15" fill="rgb(245,83,25)" fg:x="36232" fg:w="42"/><text x="81.8286%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="81.6302%" y="117" width="0.0248%" height="15" fill="rgb(214,205,45)" fg:x="36274" fg:w="11"/><text x="81.9231%" y="127.50"></text></g><g><title>candid::types::internal::env_id (685 instructions, 1.54%)</title><rect x="80.4712%" y="133" width="1.5415%" height="15" fill="rgb(241,20,18)" fg:x="35759" fg:w="685"/><text x="80.7642%" y="143.50"></text></g><g><title>candid::types::CandidType::ty (3,633 instructions, 8.18%)</title><rect x="74.1162%" y="149" width="8.1756%" height="15" fill="rgb(232,163,23)" fg:x="32935" fg:w="3633"/><text x="74.4091%" y="159.50">candid::t..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="82.2918%" y="117" width="0.1710%" height="15" fill="rgb(214,5,46)" fg:x="36568" fg:w="76"/><text x="82.5848%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="82.2918%" y="133" width="0.2475%" height="15" fill="rgb(229,78,17)" fg:x="36568" fg:w="110"/><text x="82.5848%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="82.2918%" y="149" width="0.4006%" height="15" fill="rgb(248,89,10)" fg:x="36568" fg:w="178"/><text x="82.5848%" y="159.50"></text></g><g><title>candid::types::internal::is_primitive (24 instructions, 0.05%)</title><rect x="82.6924%" y="133" width="0.0540%" height="15" fill="rgb(248,54,15)" fg:x="36746" fg:w="24"/><text x="82.9853%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.18%)</title><rect x="82.7464%" y="101" width="0.1755%" height="15" fill="rgb(223,116,6)" fg:x="36770" fg:w="78"/><text x="83.0393%" y="111.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.34%)</title><rect x="82.7464%" y="117" width="0.3443%" height="15" fill="rgb(205,125,38)" fg:x="36770" fg:w="153"/><text x="83.0393%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="83.0907%" y="117" width="0.1710%" height="15" fill="rgb(251,78,38)" fg:x="36923" fg:w="76"/><text x="83.3836%" y="127.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.69%)</title><rect x="82.7464%" y="133" width="0.6931%" height="15" fill="rgb(253,78,28)" fg:x="36770" fg:w="308"/><text x="83.0393%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="83.4395%" y="85" width="0.1193%" height="15" fill="rgb(209,120,3)" fg:x="37078" fg:w="53"/><text x="83.7324%" y="95.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="83.5587%" y="85" width="0.3466%" height="15" fill="rgb(238,229,9)" fg:x="37131" fg:w="154"/><text x="83.8517%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="83.4395%" y="101" width="0.5806%" height="15" fill="rgb(253,159,18)" fg:x="37078" fg:w="258"/><text x="83.7324%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="83.4395%" y="117" width="1.0644%" height="15" fill="rgb(244,42,34)" fg:x="37078" fg:w="473"/><text x="83.7324%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="84.5039%" y="117" width="0.1710%" height="15" fill="rgb(224,8,7)" fg:x="37551" fg:w="76"/><text x="84.7969%" y="127.50"></text></g><g><title>memset (136 instructions, 0.31%)</title><rect x="84.6749%" y="117" width="0.3061%" height="15" fill="rgb(210,201,45)" fg:x="37627" fg:w="136"/><text x="84.9679%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 2.23%)</title><rect x="83.4395%" y="133" width="2.2256%" height="15" fill="rgb(252,185,21)" fg:x="37078" fg:w="989"/><text x="83.7324%" y="143.50">h..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="85.6651%" y="101" width="0.1710%" height="15" fill="rgb(223,131,1)" fg:x="38067" fg:w="76"/><text x="85.9581%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="85.6651%" y="117" width="0.2475%" height="15" fill="rgb(245,141,16)" fg:x="38067" fg:w="110"/><text x="85.9581%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.40%)</title><rect x="85.6651%" y="133" width="0.4006%" height="15" fill="rgb(229,55,45)" fg:x="38067" fg:w="178"/><text x="85.9581%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="86.0657%" y="85" width="0.1193%" height="15" fill="rgb(208,92,15)" fg:x="38245" fg:w="53"/><text x="86.3586%" y="95.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.18%)</title><rect x="86.0657%" y="101" width="0.1755%" height="15" fill="rgb(234,185,47)" fg:x="38245" fg:w="78"/><text x="86.3586%" y="111.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.66%)</title><rect x="86.0657%" y="117" width="0.6594%" height="15" fill="rgb(253,104,50)" fg:x="38245" fg:w="293"/><text x="86.3586%" y="127.50"></text></g><g><title>candid::types::internal::is_primitive (18 instructions, 0.04%)</title><rect x="86.7250%" y="117" width="0.0405%" height="15" fill="rgb(205,70,7)" fg:x="38538" fg:w="18"/><text x="87.0180%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="86.7655%" y="117" width="0.0248%" height="15" fill="rgb(240,178,43)" fg:x="38556" fg:w="11"/><text x="87.0585%" y="127.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.99%)</title><rect x="86.0657%" y="133" width="0.9857%" height="15" fill="rgb(214,112,2)" fg:x="38245" fg:w="438"/><text x="86.3586%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="87.0513%" y="85" width="0.1710%" height="15" fill="rgb(206,46,17)" fg:x="38683" fg:w="76"/><text x="87.3443%" y="95.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="87.0513%" y="101" width="0.2475%" height="15" fill="rgb(225,220,16)" fg:x="38683" fg:w="110"/><text x="87.3443%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="87.0513%" y="117" width="0.3938%" height="15" fill="rgb(238,65,40)" fg:x="38683" fg:w="175"/><text x="87.3443%" y="127.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.51%)</title><rect x="87.0513%" y="133" width="0.5108%" height="15" fill="rgb(230,151,21)" fg:x="38683" fg:w="227"/><text x="87.3443%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.13%)</title><rect x="87.5622%" y="133" width="0.1260%" height="15" fill="rgb(218,58,49)" fg:x="38910" fg:w="56"/><text x="87.8551%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="87.6882%" y="101" width="0.1823%" height="15" fill="rgb(219,179,14)" fg:x="38966" fg:w="81"/><text x="87.9812%" y="111.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.24%)</title><rect x="87.6882%" y="117" width="0.2430%" height="15" fill="rgb(223,72,1)" fg:x="38966" fg:w="108"/><text x="87.9812%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.18%)</title><rect x="87.9312%" y="117" width="0.1755%" height="15" fill="rgb(238,126,10)" fg:x="39074" fg:w="78"/><text x="88.2242%" y="127.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.49%)</title><rect x="87.6882%" y="133" width="0.4906%" height="15" fill="rgb(224,206,38)" fg:x="38966" fg:w="218"/><text x="87.9812%" y="143.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.1788%" y="133" width="0.0248%" height="15" fill="rgb(212,201,54)" fg:x="39184" fg:w="11"/><text x="88.4717%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 5.97%)</title><rect x="82.6924%" y="149" width="5.9680%" height="15" fill="rgb(218,154,48)" fg:x="36746" fg:w="2652"/><text x="82.9853%" y="159.50">candid..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="88.6604%" y="149" width="0.0248%" height="15" fill="rgb(232,93,24)" fg:x="39398" fg:w="11"/><text x="88.9533%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="88.6851%" y="117" width="0.1710%" height="15" fill="rgb(245,30,21)" fg:x="39409" fg:w="76"/><text x="88.9781%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="88.6851%" y="133" width="0.2475%" height="15" fill="rgb(242,148,29)" fg:x="39409" fg:w="110"/><text x="88.9781%" y="143.50"></text></g><g><title>__rust_realloc (101 instructions, 0.23%)</title><rect x="89.0789%" y="117" width="0.2273%" height="15" fill="rgb(244,153,54)" fg:x="39584" fg:w="101"/><text x="89.3719%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.31%)</title><rect x="89.0789%" y="133" width="0.3061%" height="15" fill="rgb(252,87,22)" fg:x="39584" fg:w="136"/><text x="89.3719%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.86%)</title><rect x="88.6851%" y="149" width="0.8641%" height="15" fill="rgb(210,51,29)" fg:x="39409" fg:w="384"/><text x="88.9781%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.66%)</title><rect x="89.5492%" y="149" width="0.6616%" height="15" fill="rgb(242,136,47)" fg:x="39793" fg:w="294"/><text x="89.8422%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="90.2109%" y="149" width="0.2700%" height="15" fill="rgb(238,68,4)" fg:x="40087" fg:w="120"/><text x="90.5038%" y="159.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.07%)</title><rect x="90.4809%" y="149" width="0.0720%" height="15" fill="rgb(242,161,30)" fg:x="40207" fg:w="32"/><text x="90.7739%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.5529%" y="117" width="0.1710%" height="15" fill="rgb(218,58,44)" fg:x="40239" fg:w="76"/><text x="90.8459%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="90.5529%" y="133" width="0.2475%" height="15" fill="rgb(252,125,32)" fg:x="40239" fg:w="110"/><text x="90.8459%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="90.5529%" y="149" width="0.3938%" height="15" fill="rgb(219,178,0)" fg:x="40239" fg:w="175"/><text x="90.8459%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="90.9467%" y="149" width="0.1710%" height="15" fill="rgb(213,152,7)" fg:x="40414" fg:w="76"/><text x="91.2397%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.1178%" y="149" width="0.1013%" height="15" fill="rgb(249,109,34)" fg:x="40490" fg:w="45"/><text x="91.4107%" y="159.50"></text></g><g><title>memcpy (45 instructions, 0.10%)</title><rect x="91.2190%" y="149" width="0.1013%" height="15" fill="rgb(232,96,21)" fg:x="40535" fg:w="45"/><text x="91.5120%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="91.3203%" y="149" width="0.1238%" height="15" fill="rgb(228,27,39)" fg:x="40580" fg:w="55"/><text x="91.6133%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.12%)</title><rect x="91.4441%" y="101" width="0.1193%" height="15" fill="rgb(211,182,52)" fg:x="40635" fg:w="53"/><text x="91.7370%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.35%)</title><rect x="91.5633%" y="101" width="0.3466%" height="15" fill="rgb(234,178,38)" fg:x="40688" fg:w="154"/><text x="91.8563%" y="111.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.58%)</title><rect x="91.4441%" y="117" width="0.5806%" height="15" fill="rgb(221,111,3)" fg:x="40635" fg:w="258"/><text x="91.7370%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 1.06%)</title><rect x="91.4441%" y="133" width="1.0644%" height="15" fill="rgb(228,175,21)" fg:x="40635" fg:w="473"/><text x="91.7370%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.17%)</title><rect x="92.5085%" y="101" width="0.1710%" height="15" fill="rgb(228,174,43)" fg:x="41108" fg:w="76"/><text x="92.8015%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.25%)</title><rect x="92.5085%" y="117" width="0.2475%" height="15" fill="rgb(211,191,0)" fg:x="41108" fg:w="110"/><text x="92.8015%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.39%)</title><rect x="92.5085%" y="133" width="0.3938%" height="15" fill="rgb(253,117,3)" fg:x="41108" fg:w="175"/><text x="92.8015%" y="143.50"></text></g><g><title>candid::ser::TypeSerialize::encode (821 instructions, 1.85%)</title><rect x="91.4441%" y="149" width="1.8476%" height="15" fill="rgb(241,127,19)" fg:x="40635" fg:w="821"/><text x="91.7370%" y="159.50"></text></g><g><title>memcpy (30 instructions, 0.07%)</title><rect x="93.2916%" y="149" width="0.0675%" height="15" fill="rgb(218,103,12)" fg:x="41456" fg:w="30"/><text x="93.5846%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="93.3591%" y="149" width="0.1238%" height="15" fill="rgb(236,214,43)" fg:x="41486" fg:w="55"/><text x="93.6521%" y="159.50"></text></g><g><title>std::io::Write::write_all (33 instructions, 0.07%)</title><rect x="93.4829%" y="149" width="0.0743%" height="15" fill="rgb(244,144,19)" fg:x="41541" fg:w="33"/><text x="93.7759%" y="159.50"></text></g><g><title>std::io::Write::write_all (61 instructions, 0.14%)</title><rect x="93.5572%" y="149" width="0.1373%" height="15" fill="rgb(246,188,10)" fg:x="41574" fg:w="61"/><text x="93.8501%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.18%)</title><rect x="93.6944%" y="149" width="0.1823%" height="15" fill="rgb(212,193,33)" fg:x="41635" fg:w="81"/><text x="93.9874%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.28%)</title><rect x="93.8767%" y="149" width="0.2768%" height="15" fill="rgb(241,51,29)" fg:x="41716" fg:w="123"/><text x="94.1697%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.1535%" y="149" width="0.0248%" height="15" fill="rgb(211,58,19)" fg:x="41839" fg:w="11"/><text x="94.4465%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (168 instructions, 0.38%)</title><rect x="94.1783%" y="149" width="0.3781%" height="15" fill="rgb(229,111,26)" fg:x="41850" fg:w="168"/><text x="94.4712%" y="159.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (5 instructions, 0.01%)</title><rect x="94.5563%" y="149" width="0.0113%" height="15" fill="rgb(213,115,40)" fg:x="42018" fg:w="5"/><text x="94.8493%" y="159.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 instructions, 0.02%)</title><rect x="94.5676%" y="149" width="0.0248%" height="15" fill="rgb(209,56,44)" fg:x="42023" fg:w="11"/><text x="94.8606%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.27%)</title><rect x="94.5923%" y="149" width="0.2700%" height="15" fill="rgb(230,108,32)" fg:x="42034" fg:w="120"/><text x="94.8853%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.12%)</title><rect x="94.8624%" y="149" width="0.1238%" height="15" fill="rgb(216,165,31)" fg:x="42154" fg:w="55"/><text x="95.1554%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.22%)</title><rect x="94.9862%" y="149" width="0.2183%" height="15" fill="rgb(218,122,21)" fg:x="42209" fg:w="97"/><text x="95.2791%" y="159.50"></text></g><g><title>candid::utils::write_args (10,889 instructions, 24.50%)</title><rect x="72.5837%" y="165" width="24.5044%" height="15" fill="rgb(223,224,47)" fg:x="32254" fg:w="10889"/><text x="72.8766%" y="175.50">candid::utils::write_args</text></g><g><title>sha::principalToNeuron_3_::{{closure}} (43,786 instructions, 98.54%)</title><rect x="0.3848%" y="181" width="98.5350%" height="15" fill="rgb(238,102,44)" fg:x="171" fg:w="43786"/><text x="0.6778%" y="191.50">sha::principalToNeuron_3_::{{closure}}</text></g><g><title>ic_cdk::futures::waker::drop (12 instructions, 0.03%)</title><rect x="98.9198%" y="181" width="0.0270%" height="15" fill="rgb(236,46,40)" fg:x="43957" fg:w="12"/><text x="99.2128%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.12%)</title><rect x="99.2304%" y="165" width="0.1238%" height="15" fill="rgb(247,202,50)" fg:x="44095" fg:w="55"/><text x="99.5233%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.14%)</title><rect x="99.3541%" y="165" width="0.1418%" height="15" fill="rgb(209,99,20)" fg:x="44150" fg:w="63"/><text x="99.6471%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (370 instructions, 0.83%)</title><rect x="98.9468%" y="181" width="0.8326%" height="15" fill="rgb(252,27,34)" fg:x="43969" fg:w="370"/><text x="99.2398%" y="191.50"></text></g><g><title>all (44,437 instructions, 100%)</title><rect x="0.0000%" y="213" width="100.0000%" height="15" fill="rgb(215,206,23)" fg:x="0" fg:w="44437"/><text x="0.2930%" y="223.50"></text></g><g><title>canister_update principalToNeuron (44,437 instructions, 100.00%)</title><rect x="0.0000%" y="197" width="100.0000%" height="15" fill="rgb(212,135,36)" fg:x="0" fg:w="44437"/><text x="0.2930%" y="207.50">canister_update principalToNeuron</text></g></svg></svg>