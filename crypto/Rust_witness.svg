<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="288834"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="0.0066%" y="389" width="0.0409%" height="15" fill="rgb(207,194,50)" fg:x="19" fg:w="118"/><text x="0.2995%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (73 instructions, 0.03%)</title><rect x="0.0474%" y="389" width="0.0253%" height="15" fill="rgb(207,4,18)" fg:x="137" fg:w="73"/><text x="0.3404%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0727%" y="357" width="0.0284%" height="15" fill="rgb(213,50,30)" fg:x="210" fg:w="82"/><text x="0.3657%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.02%)</title><rect x="0.1011%" y="341" width="0.0246%" height="15" fill="rgb(208,77,22)" fg:x="292" fg:w="71"/><text x="0.3941%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.14%)</title><rect x="0.1257%" y="341" width="0.1385%" height="15" fill="rgb(244,204,34)" fg:x="363" fg:w="400"/><text x="0.4186%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.03%)</title><rect x="0.2642%" y="341" width="0.0294%" height="15" fill="rgb(230,20,17)" fg:x="763" fg:w="85"/><text x="0.5571%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.2936%" y="341" width="0.0187%" height="15" fill="rgb(237,83,15)" fg:x="848" fg:w="54"/><text x="0.5866%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3123%" y="341" width="0.0187%" height="15" fill="rgb(221,109,25)" fg:x="902" fg:w="54"/><text x="0.6053%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3310%" y="341" width="0.0187%" height="15" fill="rgb(205,194,52)" fg:x="956" fg:w="54"/><text x="0.6240%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3497%" y="341" width="0.0187%" height="15" fill="rgb(244,173,54)" fg:x="1010" fg:w="54"/><text x="0.6427%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.02%)</title><rect x="0.3684%" y="341" width="0.0246%" height="15" fill="rgb(227,181,18)" fg:x="1064" fg:w="71"/><text x="0.6613%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.3930%" y="341" width="0.0225%" height="15" fill="rgb(238,36,30)" fg:x="1135" fg:w="65"/><text x="0.6859%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.14%)</title><rect x="0.4155%" y="341" width="0.1385%" height="15" fill="rgb(254,85,0)" fg:x="1200" fg:w="400"/><text x="0.7084%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.5595%" y="325" width="0.0284%" height="15" fill="rgb(247,63,33)" fg:x="1616" fg:w="82"/><text x="0.8525%" y="335.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="0.5879%" y="293" width="0.0208%" height="15" fill="rgb(220,7,54)" fg:x="1698" fg:w="60"/><text x="0.8808%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="0.5879%" y="309" width="0.0294%" height="15" fill="rgb(238,227,21)" fg:x="1698" fg:w="85"/><text x="0.8808%" y="319.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="0.6204%" y="245" width="0.0104%" height="15" fill="rgb(237,29,31)" fg:x="1792" fg:w="30"/><text x="0.9134%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="0.6204%" y="261" width="0.0190%" height="15" fill="rgb(211,21,50)" fg:x="1792" fg:w="55"/><text x="0.9134%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="0.6173%" y="277" width="0.0409%" height="15" fill="rgb(239,119,2)" fg:x="1783" fg:w="118"/><text x="0.9103%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="0.6173%" y="293" width="0.0592%" height="15" fill="rgb(250,2,39)" fg:x="1783" fg:w="171"/><text x="0.9103%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="0.6173%" y="309" width="0.0609%" height="15" fill="rgb(244,46,53)" fg:x="1783" fg:w="176"/><text x="0.9103%" y="319.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="0.5879%" y="325" width="0.1288%" height="15" fill="rgb(209,21,19)" fg:x="1698" fg:w="372"/><text x="0.8808%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 0.21%)</title><rect x="0.5595%" y="341" width="0.2077%" height="15" fill="rgb(236,145,4)" fg:x="1616" fg:w="600"/><text x="0.8525%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.03%)</title><rect x="0.7672%" y="341" width="0.0294%" height="15" fill="rgb(220,133,36)" fg:x="2216" fg:w="85"/><text x="1.0602%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.02%)</title><rect x="0.7967%" y="341" width="0.0197%" height="15" fill="rgb(244,18,3)" fg:x="2301" fg:w="57"/><text x="1.0896%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.02%)</title><rect x="0.8164%" y="341" width="0.0229%" height="15" fill="rgb(232,171,48)" fg:x="2358" fg:w="66"/><text x="1.1094%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.8392%" y="341" width="0.0225%" height="15" fill="rgb(223,223,53)" fg:x="2424" fg:w="65"/><text x="1.1322%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (400 instructions, 0.14%)</title><rect x="0.8617%" y="325" width="0.1385%" height="15" fill="rgb(246,92,13)" fg:x="2489" fg:w="400"/><text x="1.1547%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.0058%" y="309" width="0.0284%" height="15" fill="rgb(229,171,10)" fg:x="2905" fg:w="82"/><text x="1.2987%" y="319.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="1.0342%" y="277" width="0.0208%" height="15" fill="rgb(213,131,26)" fg:x="2987" fg:w="60"/><text x="1.3271%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="1.0342%" y="293" width="0.0294%" height="15" fill="rgb(242,87,54)" fg:x="2987" fg:w="85"/><text x="1.3271%" y="303.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="1.0667%" y="229" width="0.0104%" height="15" fill="rgb(237,21,35)" fg:x="3081" fg:w="30"/><text x="1.3597%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="1.0667%" y="245" width="0.0190%" height="15" fill="rgb(253,13,47)" fg:x="3081" fg:w="55"/><text x="1.3597%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="1.0636%" y="261" width="0.0409%" height="15" fill="rgb(215,122,49)" fg:x="3072" fg:w="118"/><text x="1.3566%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="1.0636%" y="277" width="0.0592%" height="15" fill="rgb(209,179,30)" fg:x="3072" fg:w="171"/><text x="1.3566%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="1.0636%" y="293" width="0.0609%" height="15" fill="rgb(235,100,24)" fg:x="3072" fg:w="176"/><text x="1.3566%" y="303.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="1.0342%" y="309" width="0.1288%" height="15" fill="rgb(209,67,24)" fg:x="2987" fg:w="372"/><text x="1.3271%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (600 instructions, 0.21%)</title><rect x="1.0058%" y="325" width="0.2077%" height="15" fill="rgb(206,74,32)" fg:x="2905" fg:w="600"/><text x="1.2987%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (85 instructions, 0.03%)</title><rect x="1.2135%" y="325" width="0.0294%" height="15" fill="rgb(212,45,25)" fg:x="3505" fg:w="85"/><text x="1.5065%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.02%)</title><rect x="1.2429%" y="325" width="0.0197%" height="15" fill="rgb(239,26,3)" fg:x="3590" fg:w="57"/><text x="1.5359%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,316 instructions, 0.46%)</title><rect x="0.8617%" y="341" width="0.4556%" height="15" fill="rgb(218,36,15)" fg:x="2489" fg:w="1316"/><text x="1.1547%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (66 instructions, 0.02%)</title><rect x="1.3174%" y="341" width="0.0229%" height="15" fill="rgb(206,108,24)" fg:x="3805" fg:w="66"/><text x="1.6103%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3568%" y="341" width="0.0284%" height="15" fill="rgb(234,204,42)" fg:x="3919" fg:w="82"/><text x="1.6498%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3852%" y="341" width="0.0284%" height="15" fill="rgb(229,2,11)" fg:x="4001" fg:w="82"/><text x="1.6782%" y="351.50"></text></g><g><title>memcpy (381 instructions, 0.13%)</title><rect x="1.4143%" y="341" width="0.1319%" height="15" fill="rgb(221,20,48)" fg:x="4085" fg:w="381"/><text x="1.7073%" y="351.50"></text></g><g><title>memcpy (381 instructions, 0.13%)</title><rect x="1.5462%" y="341" width="0.1319%" height="15" fill="rgb(244,164,10)" fg:x="4466" fg:w="381"/><text x="1.8392%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,326 instructions, 1.84%)</title><rect x="0.1011%" y="357" width="1.8440%" height="15" fill="rgb(243,229,2)" fg:x="292" fg:w="5326"/><text x="0.3941%" y="367.50"></text></g><g><title>memcpy (336 instructions, 0.12%)</title><rect x="1.9451%" y="357" width="0.1163%" height="15" fill="rgb(232,131,37)" fg:x="5618" fg:w="336"/><text x="2.2380%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="2.0655%" y="309" width="0.0280%" height="15" fill="rgb(217,156,11)" fg:x="5966" fg:w="81"/><text x="2.3585%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (102 instructions, 0.04%)</title><rect x="2.1029%" y="309" width="0.0353%" height="15" fill="rgb(239,99,48)" fg:x="6074" fg:w="102"/><text x="2.3959%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (237 instructions, 0.08%)</title><rect x="2.0655%" y="325" width="0.0821%" height="15" fill="rgb(231,209,9)" fg:x="5966" fg:w="237"/><text x="2.3585%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (288 instructions, 0.10%)</title><rect x="2.0614%" y="341" width="0.0997%" height="15" fill="rgb(254,97,27)" fg:x="5954" fg:w="288"/><text x="2.3544%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (322 instructions, 0.11%)</title><rect x="2.0614%" y="357" width="0.1115%" height="15" fill="rgb(223,151,38)" fg:x="5954" fg:w="322"/><text x="2.3544%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (57 instructions, 0.02%)</title><rect x="2.1729%" y="357" width="0.0197%" height="15" fill="rgb(219,206,35)" fg:x="6276" fg:w="57"/><text x="2.4658%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (6,261 instructions, 2.17%)</title><rect x="0.0727%" y="373" width="2.1677%" height="15" fill="rgb(216,130,31)" fg:x="210" fg:w="6261"/><text x="0.3657%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.2404%" y="341" width="0.0284%" height="15" fill="rgb(251,97,34)" fg:x="6471" fg:w="82"/><text x="2.5334%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 instructions, 0.04%)</title><rect x="2.2404%" y="357" width="0.0388%" height="15" fill="rgb(246,159,47)" fg:x="6471" fg:w="112"/><text x="2.5334%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.06%)</title><rect x="2.2404%" y="373" width="0.0613%" height="15" fill="rgb(232,87,10)" fg:x="6471" fg:w="177"/><text x="2.5334%" y="383.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3294%" y="277" width="0.0128%" height="15" fill="rgb(249,1,37)" fg:x="6728" fg:w="37"/><text x="2.6223%" y="287.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3422%" y="261" width="0.0128%" height="15" fill="rgb(239,135,14)" fg:x="6765" fg:w="37"/><text x="2.6351%" y="271.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3550%" y="245" width="0.0128%" height="15" fill="rgb(253,116,46)" fg:x="6802" fg:w="37"/><text x="2.6480%" y="255.50"></text></g><g><title>memcmp (58 instructions, 0.02%)</title><rect x="2.3678%" y="229" width="0.0201%" height="15" fill="rgb(222,217,37)" fg:x="6839" fg:w="58"/><text x="2.6608%" y="239.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3879%" y="213" width="0.0128%" height="15" fill="rgb(252,96,8)" fg:x="6897" fg:w="37"/><text x="2.6808%" y="223.50"></text></g><g><title>memcmp (152 instructions, 0.05%)</title><rect x="2.4007%" y="197" width="0.0526%" height="15" fill="rgb(254,103,41)" fg:x="6934" fg:w="152"/><text x="2.6937%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4533%" y="197" width="0.0284%" height="15" fill="rgb(218,213,19)" fg:x="7086" fg:w="82"/><text x="2.7463%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4817%" y="181" width="0.0284%" height="15" fill="rgb(253,95,21)" fg:x="7168" fg:w="82"/><text x="2.7747%" y="191.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="2.5101%" y="181" width="0.1111%" height="15" fill="rgb(229,26,28)" fg:x="7250" fg:w="321"/><text x="2.8031%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.6212%" y="181" width="0.0284%" height="15" fill="rgb(230,129,16)" fg:x="7571" fg:w="82"/><text x="2.9142%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (773 instructions, 0.27%)</title><rect x="2.4817%" y="197" width="0.2676%" height="15" fill="rgb(236,126,17)" fg:x="7168" fg:w="773"/><text x="2.7747%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,173 instructions, 0.41%)</title><rect x="2.4007%" y="213" width="0.4061%" height="15" fill="rgb(209,33,33)" fg:x="6934" fg:w="1173"/><text x="2.6937%" y="223.50"></text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="2.8068%" y="197" width="0.0755%" height="15" fill="rgb(227,85,29)" fg:x="8107" fg:w="218"/><text x="3.0998%" y="207.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="2.8823%" y="197" width="0.1631%" height="15" fill="rgb(241,53,46)" fg:x="8325" fg:w="471"/><text x="3.1752%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="3.0453%" y="197" width="0.0415%" height="15" fill="rgb(228,167,53)" fg:x="8796" fg:w="120"/><text x="3.3383%" y="207.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="3.0869%" y="197" width="0.1631%" height="15" fill="rgb(238,195,45)" fg:x="8916" fg:w="471"/><text x="3.3799%" y="207.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="3.2500%" y="181" width="0.0575%" height="15" fill="rgb(252,124,45)" fg:x="9387" fg:w="166"/><text x="3.5429%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="3.3074%" y="181" width="1.7266%" height="15" fill="rgb(251,38,35)" fg:x="9553" fg:w="4987"/><text x="3.6004%" y="191.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="3.2500%" y="197" width="1.8862%" height="15" fill="rgb(227,33,2)" fg:x="9387" fg:w="5448"/><text x="3.5429%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="2.8068%" y="213" width="2.3900%" height="15" fill="rgb(223,157,46)" fg:x="8107" fg:w="6903"/><text x="3.0998%" y="223.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="5.1968%" y="197" width="0.0755%" height="15" fill="rgb(222,78,41)" fg:x="15010" fg:w="218"/><text x="5.4897%" y="207.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="5.2722%" y="197" width="0.1631%" height="15" fill="rgb(248,176,11)" fg:x="15228" fg:w="471"/><text x="5.5652%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="5.4353%" y="197" width="0.0415%" height="15" fill="rgb(241,221,18)" fg:x="15699" fg:w="120"/><text x="5.7283%" y="207.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="5.4768%" y="197" width="0.1631%" height="15" fill="rgb(218,85,22)" fg:x="15819" fg:w="471"/><text x="5.7698%" y="207.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="5.6399%" y="181" width="0.0194%" height="15" fill="rgb(222,223,7)" fg:x="16290" fg:w="56"/><text x="5.9329%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="5.6593%" y="181" width="1.7266%" height="15" fill="rgb(254,59,39)" fg:x="16346" fg:w="4987"/><text x="5.9523%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="7.3859%" y="181" width="1.7266%" height="15" fill="rgb(247,100,27)" fg:x="21333" fg:w="4987"/><text x="7.6789%" y="191.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="5.6399%" y="197" width="3.5865%" height="15" fill="rgb(237,207,10)" fg:x="16290" fg:w="10359"/><text x="5.9329%" y="207.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="5.1968%" y="213" width="4.1086%" height="15" fill="rgb(220,121,28)" fg:x="15010" fg:w="11867"/><text x="5.4897%" y="223.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="9.3053%" y="181" width="0.0755%" height="15" fill="rgb(213,223,20)" fg:x="26877" fg:w="218"/><text x="9.5983%" y="191.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="9.3808%" y="181" width="0.1631%" height="15" fill="rgb(205,121,27)" fg:x="27095" fg:w="471"/><text x="9.6738%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="9.5439%" y="181" width="0.0831%" height="15" fill="rgb(253,24,53)" fg:x="27566" fg:w="240"/><text x="9.8369%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="9.6270%" y="181" width="1.7266%" height="15" fill="rgb(224,224,47)" fg:x="27806" fg:w="4987"/><text x="9.9200%" y="191.50"></text></g><g><title>memcpy (176 instructions, 0.06%)</title><rect x="11.3536%" y="181" width="0.0609%" height="15" fill="rgb(250,125,36)" fg:x="32793" fg:w="176"/><text x="11.6465%" y="191.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="11.4145%" y="181" width="0.1631%" height="15" fill="rgb(240,144,38)" fg:x="32969" fg:w="471"/><text x="11.7075%" y="191.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="11.5776%" y="165" width="0.0609%" height="15" fill="rgb(250,15,50)" fg:x="33440" fg:w="176"/><text x="11.8706%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="11.6385%" y="165" width="1.7266%" height="15" fill="rgb(210,24,26)" fg:x="33616" fg:w="4987"/><text x="11.9315%" y="175.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,458 instructions, 1.89%)</title><rect x="11.5776%" y="181" width="1.8897%" height="15" fill="rgb(234,53,53)" fg:x="33440" fg:w="5458"/><text x="11.8706%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,272 instructions, 4.25%)</title><rect x="9.3053%" y="197" width="4.2488%" height="15" fill="rgb(208,108,28)" fg:x="26877" fg:w="12272"/><text x="9.5983%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="13.5542%" y="197" width="0.0284%" height="15" fill="rgb(227,143,7)" fg:x="39149" fg:w="82"/><text x="13.8471%" y="207.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="13.5825%" y="197" width="0.1111%" height="15" fill="rgb(238,189,38)" fg:x="39231" fg:w="321"/><text x="13.8755%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,009 instructions, 4.50%)</title><rect x="9.3053%" y="213" width="4.5040%" height="15" fill="rgb(222,69,15)" fg:x="26877" fg:w="13009"/><text x="9.5983%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,164 instructions, 11.48%)</title><rect x="2.3879%" y="229" width="11.4820%" height="15" fill="rgb(213,169,7)" fg:x="6897" fg:w="33164"/><text x="2.6808%" y="239.50">ic_certified_m..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="13.8699%" y="213" width="0.0755%" height="15" fill="rgb(251,219,4)" fg:x="40061" fg:w="218"/><text x="14.1629%" y="223.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="13.9454%" y="213" width="0.1631%" height="15" fill="rgb(241,55,40)" fg:x="40279" fg:w="471"/><text x="14.2383%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="14.1084%" y="213" width="0.0415%" height="15" fill="rgb(243,57,30)" fg:x="40750" fg:w="120"/><text x="14.4014%" y="223.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="14.1500%" y="213" width="0.1631%" height="15" fill="rgb(234,50,30)" fg:x="40870" fg:w="471"/><text x="14.4430%" y="223.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="14.3131%" y="197" width="0.0575%" height="15" fill="rgb(239,23,42)" fg:x="41341" fg:w="166"/><text x="14.6060%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="14.3705%" y="197" width="1.7266%" height="15" fill="rgb(217,38,19)" fg:x="41507" fg:w="4987"/><text x="14.6635%" y="207.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="14.3131%" y="213" width="1.8862%" height="15" fill="rgb(215,179,16)" fg:x="41341" fg:w="5448"/><text x="14.6060%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="13.8699%" y="229" width="2.3900%" height="15" fill="rgb(254,21,37)" fg:x="40061" fg:w="6903"/><text x="14.1629%" y="239.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="16.2599%" y="213" width="0.0755%" height="15" fill="rgb(219,207,48)" fg:x="46964" fg:w="218"/><text x="16.5528%" y="223.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="16.3353%" y="213" width="0.1631%" height="15" fill="rgb(227,225,41)" fg:x="47182" fg:w="471"/><text x="16.6283%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="16.4984%" y="213" width="0.0415%" height="15" fill="rgb(223,130,1)" fg:x="47653" fg:w="120"/><text x="16.7914%" y="223.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="16.5400%" y="213" width="0.1631%" height="15" fill="rgb(249,54,42)" fg:x="47773" fg:w="471"/><text x="16.8329%" y="223.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="16.7030%" y="197" width="0.0194%" height="15" fill="rgb(248,69,25)" fg:x="48244" fg:w="56"/><text x="16.9960%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="16.7224%" y="197" width="1.7266%" height="15" fill="rgb(234,21,32)" fg:x="48300" fg:w="4987"/><text x="17.0154%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="18.4490%" y="197" width="1.7266%" height="15" fill="rgb(252,136,6)" fg:x="53287" fg:w="4987"/><text x="18.7420%" y="207.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="16.7030%" y="213" width="3.5865%" height="15" fill="rgb(245,87,12)" fg:x="48244" fg:w="10359"/><text x="16.9960%" y="223.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="16.2599%" y="229" width="4.1086%" height="15" fill="rgb(208,12,15)" fg:x="46964" fg:w="11867"/><text x="16.5528%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.3684%" y="213" width="0.0284%" height="15" fill="rgb(250,98,2)" fg:x="58831" fg:w="82"/><text x="20.6614%" y="223.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="20.3968%" y="213" width="0.1111%" height="15" fill="rgb(205,213,15)" fg:x="58913" fg:w="321"/><text x="20.6898%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.5080%" y="213" width="0.0284%" height="15" fill="rgb(248,192,44)" fg:x="59234" fg:w="82"/><text x="20.8009%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="20.3684%" y="229" width="0.2704%" height="15" fill="rgb(221,89,17)" fg:x="58831" fg:w="781"/><text x="20.6614%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (52,948 instructions, 18.33%)</title><rect x="2.3678%" y="245" width="18.3316%" height="15" fill="rgb(209,55,3)" fg:x="6839" fg:w="52948"/><text x="2.6608%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="20.6994%" y="229" width="0.0755%" height="15" fill="rgb(247,23,45)" fg:x="59787" fg:w="218"/><text x="20.9924%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="20.7749%" y="229" width="0.1631%" height="15" fill="rgb(235,152,23)" fg:x="60005" fg:w="471"/><text x="21.0679%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="20.9380%" y="229" width="0.0415%" height="15" fill="rgb(244,63,13)" fg:x="60476" fg:w="120"/><text x="21.2309%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="20.9795%" y="229" width="0.1631%" height="15" fill="rgb(227,30,37)" fg:x="60596" fg:w="471"/><text x="21.2725%" y="239.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="21.1426%" y="213" width="0.0575%" height="15" fill="rgb(224,49,42)" fg:x="61067" fg:w="166"/><text x="21.4356%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="21.2001%" y="213" width="1.7266%" height="15" fill="rgb(218,129,5)" fg:x="61233" fg:w="4987"/><text x="21.4930%" y="223.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="21.1426%" y="229" width="1.8862%" height="15" fill="rgb(240,199,54)" fg:x="61067" fg:w="5448"/><text x="21.4356%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="20.6994%" y="245" width="2.3900%" height="15" fill="rgb(234,31,13)" fg:x="59787" fg:w="6903"/><text x="20.9924%" y="255.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="23.0894%" y="229" width="0.0755%" height="15" fill="rgb(219,73,54)" fg:x="66690" fg:w="218"/><text x="23.3824%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="23.1649%" y="229" width="0.1631%" height="15" fill="rgb(251,162,10)" fg:x="66908" fg:w="471"/><text x="23.4578%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="23.3279%" y="229" width="0.0415%" height="15" fill="rgb(240,138,47)" fg:x="67379" fg:w="120"/><text x="23.6209%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="23.3695%" y="229" width="0.1631%" height="15" fill="rgb(216,138,26)" fg:x="67499" fg:w="471"/><text x="23.6624%" y="239.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="23.5325%" y="213" width="0.0194%" height="15" fill="rgb(243,17,35)" fg:x="67970" fg:w="56"/><text x="23.8255%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="23.5519%" y="213" width="1.7266%" height="15" fill="rgb(241,60,18)" fg:x="68026" fg:w="4987"/><text x="23.8449%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="25.2785%" y="213" width="1.7266%" height="15" fill="rgb(234,2,44)" fg:x="73013" fg:w="4987"/><text x="25.5715%" y="223.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="23.5325%" y="229" width="3.5865%" height="15" fill="rgb(225,225,33)" fg:x="67970" fg:w="10359"/><text x="23.8255%" y="239.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="23.0894%" y="245" width="4.1086%" height="15" fill="rgb(234,50,31)" fg:x="66690" fg:w="11867"/><text x="23.3824%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.1980%" y="229" width="0.0284%" height="15" fill="rgb(249,6,25)" fg:x="78557" fg:w="82"/><text x="27.4909%" y="239.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="27.2264%" y="229" width="0.1111%" height="15" fill="rgb(241,5,17)" fg:x="78639" fg:w="321"/><text x="27.5193%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.3375%" y="229" width="0.0284%" height="15" fill="rgb(207,116,10)" fg:x="78960" fg:w="82"/><text x="27.6305%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="27.1980%" y="245" width="0.2704%" height="15" fill="rgb(222,128,18)" fg:x="78557" fg:w="781"/><text x="27.4909%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (72,711 instructions, 25.17%)</title><rect x="2.3550%" y="261" width="25.1740%" height="15" fill="rgb(229,109,25)" fg:x="6802" fg:w="72711"/><text x="2.6480%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="27.5290%" y="245" width="0.0755%" height="15" fill="rgb(222,102,25)" fg:x="79513" fg:w="218"/><text x="27.8219%" y="255.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="27.6044%" y="245" width="0.1631%" height="15" fill="rgb(239,211,5)" fg:x="79731" fg:w="471"/><text x="27.8974%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="27.7675%" y="245" width="0.0415%" height="15" fill="rgb(223,136,26)" fg:x="80202" fg:w="120"/><text x="28.0605%" y="255.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="27.8091%" y="245" width="0.1631%" height="15" fill="rgb(227,30,15)" fg:x="80322" fg:w="471"/><text x="28.1020%" y="255.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="27.9721%" y="229" width="0.0575%" height="15" fill="rgb(247,76,4)" fg:x="80793" fg:w="166"/><text x="28.2651%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="28.0296%" y="229" width="1.7266%" height="15" fill="rgb(245,38,48)" fg:x="80959" fg:w="4987"/><text x="28.3226%" y="239.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="27.9721%" y="245" width="1.8862%" height="15" fill="rgb(210,220,14)" fg:x="80793" fg:w="5448"/><text x="28.2651%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="27.5290%" y="261" width="2.3900%" height="15" fill="rgb(224,60,51)" fg:x="79513" fg:w="6903"/><text x="27.8219%" y="271.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="29.9189%" y="245" width="0.0755%" height="15" fill="rgb(212,133,49)" fg:x="86416" fg:w="218"/><text x="30.2119%" y="255.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="29.9944%" y="245" width="0.1631%" height="15" fill="rgb(231,39,22)" fg:x="86634" fg:w="471"/><text x="30.2874%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="30.1575%" y="245" width="0.0415%" height="15" fill="rgb(236,173,22)" fg:x="87105" fg:w="120"/><text x="30.4504%" y="255.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="30.1990%" y="245" width="0.1631%" height="15" fill="rgb(210,70,0)" fg:x="87225" fg:w="471"/><text x="30.4920%" y="255.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="30.3621%" y="229" width="0.0194%" height="15" fill="rgb(215,170,11)" fg:x="87696" fg:w="56"/><text x="30.6550%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="30.3815%" y="229" width="1.7266%" height="15" fill="rgb(220,154,28)" fg:x="87752" fg:w="4987"/><text x="30.6744%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="32.1081%" y="229" width="1.7266%" height="15" fill="rgb(240,160,41)" fg:x="92739" fg:w="4987"/><text x="32.4010%" y="239.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="30.3621%" y="245" width="3.5865%" height="15" fill="rgb(243,215,41)" fg:x="87696" fg:w="10359"/><text x="30.6550%" y="255.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="29.9189%" y="261" width="4.1086%" height="15" fill="rgb(214,208,31)" fg:x="86416" fg:w="11867"/><text x="30.2119%" y="271.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="34.0275%" y="229" width="0.0755%" height="15" fill="rgb(247,57,22)" fg:x="98283" fg:w="218"/><text x="34.3205%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="34.1030%" y="229" width="0.1631%" height="15" fill="rgb(228,73,52)" fg:x="98501" fg:w="471"/><text x="34.3959%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="34.2660%" y="229" width="0.0831%" height="15" fill="rgb(252,60,9)" fg:x="98972" fg:w="240"/><text x="34.5590%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="34.3491%" y="229" width="1.7266%" height="15" fill="rgb(233,9,51)" fg:x="99212" fg:w="4987"/><text x="34.6421%" y="239.50"></text></g><g><title>memcpy (176 instructions, 0.06%)</title><rect x="36.0757%" y="229" width="0.0609%" height="15" fill="rgb(223,67,14)" fg:x="104199" fg:w="176"/><text x="36.3687%" y="239.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="36.1367%" y="229" width="0.1631%" height="15" fill="rgb(222,86,2)" fg:x="104375" fg:w="471"/><text x="36.4296%" y="239.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="36.2997%" y="213" width="0.0609%" height="15" fill="rgb(243,58,54)" fg:x="104846" fg:w="176"/><text x="36.5927%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="36.3607%" y="213" width="1.7266%" height="15" fill="rgb(210,200,39)" fg:x="105022" fg:w="4987"/><text x="36.6536%" y="223.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,458 instructions, 1.89%)</title><rect x="36.2997%" y="229" width="1.8897%" height="15" fill="rgb(238,135,9)" fg:x="104846" fg:w="5458"/><text x="36.5927%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,272 instructions, 4.25%)</title><rect x="34.0275%" y="245" width="4.2488%" height="15" fill="rgb(232,179,7)" fg:x="98283" fg:w="12272"/><text x="34.3205%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="38.2763%" y="245" width="0.0284%" height="15" fill="rgb(245,65,41)" fg:x="110555" fg:w="82"/><text x="38.5693%" y="255.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="38.3047%" y="245" width="0.1111%" height="15" fill="rgb(227,43,8)" fg:x="110637" fg:w="321"/><text x="38.5977%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,009 instructions, 4.50%)</title><rect x="34.0275%" y="261" width="4.5040%" height="15" fill="rgb(235,91,14)" fg:x="98283" fg:w="13009"/><text x="34.3205%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (104,702 instructions, 36.25%)</title><rect x="2.3422%" y="277" width="36.2499%" height="15" fill="rgb(235,219,31)" fg:x="6765" fg:w="104702"/><text x="2.6351%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="38.5921%" y="261" width="0.0755%" height="15" fill="rgb(227,121,25)" fg:x="111467" fg:w="218"/><text x="38.8850%" y="271.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="38.6675%" y="261" width="0.1631%" height="15" fill="rgb(254,129,24)" fg:x="111685" fg:w="471"/><text x="38.9605%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="38.8306%" y="261" width="0.0415%" height="15" fill="rgb(226,144,49)" fg:x="112156" fg:w="120"/><text x="39.1236%" y="271.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="38.8722%" y="261" width="0.1631%" height="15" fill="rgb(214,187,32)" fg:x="112276" fg:w="471"/><text x="39.1651%" y="271.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="39.0352%" y="245" width="0.0575%" height="15" fill="rgb(243,129,46)" fg:x="112747" fg:w="166"/><text x="39.3282%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="39.0927%" y="245" width="1.7266%" height="15" fill="rgb(221,185,35)" fg:x="112913" fg:w="4987"/><text x="39.3857%" y="255.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="39.0352%" y="261" width="1.8862%" height="15" fill="rgb(205,0,32)" fg:x="112747" fg:w="5448"/><text x="39.3282%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="38.5921%" y="277" width="2.3900%" height="15" fill="rgb(229,179,12)" fg:x="111467" fg:w="6903"/><text x="38.8850%" y="287.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="40.9820%" y="261" width="0.0755%" height="15" fill="rgb(252,107,19)" fg:x="118370" fg:w="218"/><text x="41.2750%" y="271.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="41.0575%" y="261" width="0.1631%" height="15" fill="rgb(220,95,27)" fg:x="118588" fg:w="471"/><text x="41.3505%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="41.2206%" y="261" width="0.0415%" height="15" fill="rgb(240,113,40)" fg:x="119059" fg:w="120"/><text x="41.5135%" y="271.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="41.2621%" y="261" width="0.1631%" height="15" fill="rgb(208,4,43)" fg:x="119179" fg:w="471"/><text x="41.5551%" y="271.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="41.4252%" y="245" width="0.0194%" height="15" fill="rgb(247,189,30)" fg:x="119650" fg:w="56"/><text x="41.7181%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="41.4446%" y="245" width="1.7266%" height="15" fill="rgb(231,157,17)" fg:x="119706" fg:w="4987"/><text x="41.7375%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="43.1712%" y="245" width="1.7266%" height="15" fill="rgb(224,139,6)" fg:x="124693" fg:w="4987"/><text x="43.4641%" y="255.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="41.4252%" y="261" width="3.5865%" height="15" fill="rgb(223,83,16)" fg:x="119650" fg:w="10359"/><text x="41.7181%" y="271.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="40.9820%" y="277" width="4.1086%" height="15" fill="rgb(232,211,20)" fg:x="118370" fg:w="11867"/><text x="41.2750%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.0906%" y="261" width="0.0284%" height="15" fill="rgb(225,203,35)" fg:x="130237" fg:w="82"/><text x="45.3836%" y="271.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="45.1190%" y="261" width="0.1111%" height="15" fill="rgb(215,211,44)" fg:x="130319" fg:w="321"/><text x="45.4120%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.2301%" y="261" width="0.0284%" height="15" fill="rgb(248,213,26)" fg:x="130640" fg:w="82"/><text x="45.5231%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="45.0906%" y="277" width="0.2704%" height="15" fill="rgb(214,23,52)" fg:x="130237" fg:w="781"/><text x="45.3836%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (124,465 instructions, 43.09%)</title><rect x="2.3294%" y="293" width="43.0922%" height="15" fill="rgb(225,173,50)" fg:x="6728" fg:w="124465"/><text x="2.6223%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="45.4216%" y="277" width="0.0755%" height="15" fill="rgb(206,150,22)" fg:x="131193" fg:w="218"/><text x="45.7146%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="45.4971%" y="277" width="0.1631%" height="15" fill="rgb(239,64,23)" fg:x="131411" fg:w="471"/><text x="45.7900%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="45.6601%" y="277" width="0.0415%" height="15" fill="rgb(242,50,38)" fg:x="131882" fg:w="120"/><text x="45.9531%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="45.7017%" y="277" width="0.1631%" height="15" fill="rgb(217,91,15)" fg:x="132002" fg:w="471"/><text x="45.9947%" y="287.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="45.8648%" y="261" width="0.0575%" height="15" fill="rgb(230,172,6)" fg:x="132473" fg:w="166"/><text x="46.1577%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="45.9222%" y="261" width="1.7266%" height="15" fill="rgb(221,98,26)" fg:x="132639" fg:w="4987"/><text x="46.2152%" y="271.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="45.8648%" y="277" width="1.8862%" height="15" fill="rgb(227,210,45)" fg:x="132473" fg:w="5448"/><text x="46.1577%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="45.4216%" y="293" width="2.3900%" height="15" fill="rgb(206,8,30)" fg:x="131193" fg:w="6903"/><text x="45.7146%" y="303.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="47.8115%" y="277" width="0.0755%" height="15" fill="rgb(241,219,17)" fg:x="138096" fg:w="218"/><text x="48.1045%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="47.8870%" y="277" width="0.1631%" height="15" fill="rgb(247,121,29)" fg:x="138314" fg:w="471"/><text x="48.1800%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="48.0501%" y="277" width="0.0415%" height="15" fill="rgb(219,169,49)" fg:x="138785" fg:w="120"/><text x="48.3431%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="48.0916%" y="277" width="0.1631%" height="15" fill="rgb(253,49,49)" fg:x="138905" fg:w="471"/><text x="48.3846%" y="287.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="48.2547%" y="261" width="0.0194%" height="15" fill="rgb(217,178,3)" fg:x="139376" fg:w="56"/><text x="48.5477%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="48.2741%" y="261" width="1.7266%" height="15" fill="rgb(234,73,37)" fg:x="139432" fg:w="4987"/><text x="48.5671%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="50.0007%" y="261" width="1.7266%" height="15" fill="rgb(250,98,22)" fg:x="144419" fg:w="4987"/><text x="50.2937%" y="271.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="48.2547%" y="277" width="3.5865%" height="15" fill="rgb(220,108,37)" fg:x="139376" fg:w="10359"/><text x="48.5477%" y="287.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="47.8115%" y="293" width="4.1086%" height="15" fill="rgb(225,168,10)" fg:x="138096" fg:w="11867"/><text x="48.1045%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="51.9201%" y="277" width="0.0284%" height="15" fill="rgb(247,215,21)" fg:x="149963" fg:w="82"/><text x="52.2131%" y="287.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="51.9485%" y="277" width="0.1111%" height="15" fill="rgb(253,189,31)" fg:x="150045" fg:w="321"/><text x="52.2415%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="52.0597%" y="277" width="0.0284%" height="15" fill="rgb(241,54,22)" fg:x="150366" fg:w="82"/><text x="52.3526%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="51.9201%" y="293" width="0.2704%" height="15" fill="rgb(211,87,4)" fg:x="149963" fg:w="781"/><text x="52.2131%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (144,207 instructions, 49.93%)</title><rect x="2.3238%" y="309" width="49.9273%" height="15" fill="rgb(245,112,24)" fg:x="6712" fg:w="144207"/><text x="2.6168%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="52.2511%" y="293" width="0.0755%" height="15" fill="rgb(235,190,41)" fg:x="150919" fg:w="218"/><text x="52.5441%" y="303.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="52.3266%" y="293" width="0.1631%" height="15" fill="rgb(214,89,8)" fg:x="151137" fg:w="471"/><text x="52.6196%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="52.4897%" y="293" width="0.0415%" height="15" fill="rgb(249,155,35)" fg:x="151608" fg:w="120"/><text x="52.7826%" y="303.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="52.5312%" y="293" width="0.1631%" height="15" fill="rgb(249,88,26)" fg:x="151728" fg:w="471"/><text x="52.8242%" y="303.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="52.6943%" y="277" width="0.0575%" height="15" fill="rgb(232,56,8)" fg:x="152199" fg:w="166"/><text x="52.9872%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="52.7518%" y="277" width="1.7266%" height="15" fill="rgb(240,95,3)" fg:x="152365" fg:w="4987"/><text x="53.0447%" y="287.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="52.6943%" y="293" width="1.8862%" height="15" fill="rgb(222,44,28)" fg:x="152199" fg:w="5448"/><text x="52.9872%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="52.2511%" y="309" width="2.3900%" height="15" fill="rgb(234,16,30)" fg:x="150919" fg:w="6903"/><text x="52.5441%" y="319.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="54.6411%" y="293" width="0.0755%" height="15" fill="rgb(223,26,17)" fg:x="157822" fg:w="218"/><text x="54.9340%" y="303.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="54.7165%" y="293" width="0.1631%" height="15" fill="rgb(239,187,47)" fg:x="158040" fg:w="471"/><text x="55.0095%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="54.8796%" y="293" width="0.0415%" height="15" fill="rgb(247,102,50)" fg:x="158511" fg:w="120"/><text x="55.1726%" y="303.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="54.9212%" y="293" width="0.1631%" height="15" fill="rgb(231,216,22)" fg:x="158631" fg:w="471"/><text x="55.2141%" y="303.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="55.0842%" y="277" width="0.0194%" height="15" fill="rgb(216,201,26)" fg:x="159102" fg:w="56"/><text x="55.3772%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="55.1036%" y="277" width="1.7266%" height="15" fill="rgb(214,186,23)" fg:x="159158" fg:w="4987"/><text x="55.3966%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="56.8302%" y="277" width="1.7266%" height="15" fill="rgb(235,184,4)" fg:x="164145" fg:w="4987"/><text x="57.1232%" y="287.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="55.0842%" y="293" width="3.5865%" height="15" fill="rgb(244,46,17)" fg:x="159102" fg:w="10359"/><text x="55.3772%" y="303.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="54.6411%" y="309" width="4.1086%" height="15" fill="rgb(248,74,46)" fg:x="157822" fg:w="11867"/><text x="54.9340%" y="319.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="58.7497%" y="277" width="0.0755%" height="15" fill="rgb(243,79,5)" fg:x="169689" fg:w="218"/><text x="59.0426%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="58.8251%" y="277" width="0.1631%" height="15" fill="rgb(213,148,1)" fg:x="169907" fg:w="471"/><text x="59.1181%" y="287.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="58.9882%" y="277" width="0.0831%" height="15" fill="rgb(221,30,0)" fg:x="170378" fg:w="240"/><text x="59.2812%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="59.0713%" y="277" width="1.7266%" height="15" fill="rgb(207,85,29)" fg:x="170618" fg:w="4987"/><text x="59.3643%" y="287.50"></text></g><g><title>memcpy (176 instructions, 0.06%)</title><rect x="60.7979%" y="277" width="0.0609%" height="15" fill="rgb(239,31,46)" fg:x="175605" fg:w="176"/><text x="61.0909%" y="287.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="60.8588%" y="277" width="0.1631%" height="15" fill="rgb(219,6,1)" fg:x="175781" fg:w="471"/><text x="61.1518%" y="287.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="61.0219%" y="261" width="0.0609%" height="15" fill="rgb(229,90,29)" fg:x="176252" fg:w="176"/><text x="61.3149%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="61.0828%" y="261" width="1.7266%" height="15" fill="rgb(242,201,42)" fg:x="176428" fg:w="4987"/><text x="61.3758%" y="271.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,458 instructions, 1.89%)</title><rect x="61.0219%" y="277" width="1.8897%" height="15" fill="rgb(243,80,54)" fg:x="176252" fg:w="5458"/><text x="61.3149%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,272 instructions, 4.25%)</title><rect x="58.7497%" y="293" width="4.2488%" height="15" fill="rgb(223,166,15)" fg:x="169689" fg:w="12272"/><text x="59.0426%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="62.9985%" y="293" width="0.0284%" height="15" fill="rgb(238,78,27)" fg:x="181961" fg:w="82"/><text x="63.2914%" y="303.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="63.0269%" y="293" width="0.1111%" height="15" fill="rgb(235,28,43)" fg:x="182043" fg:w="321"/><text x="63.3198%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,009 instructions, 4.50%)</title><rect x="58.7497%" y="309" width="4.5040%" height="15" fill="rgb(240,210,28)" fg:x="169689" fg:w="13009"/><text x="59.0426%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (176,177 instructions, 61.00%)</title><rect x="2.3183%" y="325" width="60.9959%" height="15" fill="rgb(253,6,46)" fg:x="6696" fg:w="176177"/><text x="2.6113%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="63.3142%" y="309" width="0.0755%" height="15" fill="rgb(250,159,47)" fg:x="182873" fg:w="218"/><text x="63.6072%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="63.3897%" y="309" width="0.1631%" height="15" fill="rgb(216,139,2)" fg:x="183091" fg:w="471"/><text x="63.6827%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="63.5528%" y="309" width="0.0415%" height="15" fill="rgb(221,124,44)" fg:x="183562" fg:w="120"/><text x="63.8457%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="63.5943%" y="309" width="0.1631%" height="15" fill="rgb(205,37,22)" fg:x="183682" fg:w="471"/><text x="63.8873%" y="319.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="63.7574%" y="293" width="0.0575%" height="15" fill="rgb(250,55,8)" fg:x="184153" fg:w="166"/><text x="64.0504%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="63.8149%" y="293" width="1.7266%" height="15" fill="rgb(215,83,48)" fg:x="184319" fg:w="4987"/><text x="64.1078%" y="303.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="63.7574%" y="309" width="1.8862%" height="15" fill="rgb(253,2,32)" fg:x="184153" fg:w="5448"/><text x="64.0504%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="63.3142%" y="325" width="2.3900%" height="15" fill="rgb(236,67,28)" fg:x="182873" fg:w="6903"/><text x="63.6072%" y="335.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="65.7042%" y="309" width="0.0755%" height="15" fill="rgb(252,55,15)" fg:x="189776" fg:w="218"/><text x="65.9971%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="65.7797%" y="309" width="0.1631%" height="15" fill="rgb(243,173,17)" fg:x="189994" fg:w="471"/><text x="66.0726%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="65.9427%" y="309" width="0.0415%" height="15" fill="rgb(215,212,13)" fg:x="190465" fg:w="120"/><text x="66.2357%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="65.9843%" y="309" width="0.1631%" height="15" fill="rgb(253,176,6)" fg:x="190585" fg:w="471"/><text x="66.2772%" y="319.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="66.1473%" y="293" width="0.0194%" height="15" fill="rgb(236,105,26)" fg:x="191056" fg:w="56"/><text x="66.4403%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="66.1667%" y="293" width="1.7266%" height="15" fill="rgb(239,226,32)" fg:x="191112" fg:w="4987"/><text x="66.4597%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="67.8933%" y="293" width="1.7266%" height="15" fill="rgb(236,104,51)" fg:x="196099" fg:w="4987"/><text x="68.1863%" y="303.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="66.1473%" y="309" width="3.5865%" height="15" fill="rgb(220,172,33)" fg:x="191056" fg:w="10359"/><text x="66.4403%" y="319.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="65.7042%" y="325" width="4.1086%" height="15" fill="rgb(224,182,25)" fg:x="189776" fg:w="11867"/><text x="65.9971%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.8128%" y="309" width="0.0284%" height="15" fill="rgb(236,184,24)" fg:x="201643" fg:w="82"/><text x="70.1057%" y="319.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="69.8412%" y="309" width="0.1111%" height="15" fill="rgb(241,221,14)" fg:x="201725" fg:w="321"/><text x="70.1341%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.9523%" y="309" width="0.0284%" height="15" fill="rgb(227,146,5)" fg:x="202046" fg:w="82"/><text x="70.2453%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="69.8128%" y="325" width="0.2704%" height="15" fill="rgb(214,15,23)" fg:x="201643" fg:w="781"/><text x="70.1057%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (195,919 instructions, 67.83%)</title><rect x="2.3127%" y="341" width="67.8310%" height="15" fill="rgb(233,157,31)" fg:x="6680" fg:w="195919"/><text x="2.6057%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="70.1438%" y="325" width="0.0755%" height="15" fill="rgb(211,27,52)" fg:x="202599" fg:w="218"/><text x="70.4367%" y="335.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="70.2192%" y="325" width="0.1631%" height="15" fill="rgb(212,223,15)" fg:x="202817" fg:w="471"/><text x="70.5122%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="70.3823%" y="325" width="0.0415%" height="15" fill="rgb(254,211,0)" fg:x="203288" fg:w="120"/><text x="70.6753%" y="335.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="70.4238%" y="325" width="0.1631%" height="15" fill="rgb(205,43,38)" fg:x="203408" fg:w="471"/><text x="70.7168%" y="335.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="70.5869%" y="309" width="0.0575%" height="15" fill="rgb(242,206,46)" fg:x="203879" fg:w="166"/><text x="70.8799%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="70.6444%" y="309" width="1.7266%" height="15" fill="rgb(220,221,12)" fg:x="204045" fg:w="4987"/><text x="70.9374%" y="319.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="70.5869%" y="325" width="1.8862%" height="15" fill="rgb(217,156,35)" fg:x="203879" fg:w="5448"/><text x="70.8799%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="70.1438%" y="341" width="2.3900%" height="15" fill="rgb(207,181,49)" fg:x="202599" fg:w="6903"/><text x="70.4367%" y="351.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="72.5337%" y="325" width="0.0755%" height="15" fill="rgb(235,103,47)" fg:x="209502" fg:w="218"/><text x="72.8267%" y="335.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="72.6092%" y="325" width="0.1631%" height="15" fill="rgb(222,63,28)" fg:x="209720" fg:w="471"/><text x="72.9021%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="72.7722%" y="325" width="0.0415%" height="15" fill="rgb(244,137,21)" fg:x="210191" fg:w="120"/><text x="73.0652%" y="335.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="72.8138%" y="325" width="0.1631%" height="15" fill="rgb(228,35,27)" fg:x="210311" fg:w="471"/><text x="73.1068%" y="335.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="72.9769%" y="309" width="0.0194%" height="15" fill="rgb(226,191,41)" fg:x="210782" fg:w="56"/><text x="73.2698%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="72.9963%" y="309" width="1.7266%" height="15" fill="rgb(210,154,3)" fg:x="210838" fg:w="4987"/><text x="73.2892%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="74.7229%" y="309" width="1.7266%" height="15" fill="rgb(216,60,49)" fg:x="215825" fg:w="4987"/><text x="75.0158%" y="319.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="72.9769%" y="325" width="3.5865%" height="15" fill="rgb(226,17,20)" fg:x="210782" fg:w="10359"/><text x="73.2698%" y="335.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="72.5337%" y="341" width="4.1086%" height="15" fill="rgb(206,115,35)" fg:x="209502" fg:w="11867"/><text x="72.8267%" y="351.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="76.6423%" y="309" width="0.0755%" height="15" fill="rgb(227,88,1)" fg:x="221369" fg:w="218"/><text x="76.9353%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="76.7178%" y="309" width="0.1631%" height="15" fill="rgb(230,222,24)" fg:x="221587" fg:w="471"/><text x="77.0107%" y="319.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="76.8808%" y="309" width="0.0831%" height="15" fill="rgb(214,124,32)" fg:x="222058" fg:w="240"/><text x="77.1738%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="76.9639%" y="309" width="1.7266%" height="15" fill="rgb(240,41,36)" fg:x="222298" fg:w="4987"/><text x="77.2569%" y="319.50"></text></g><g><title>memcpy (176 instructions, 0.06%)</title><rect x="78.6905%" y="309" width="0.0609%" height="15" fill="rgb(221,17,52)" fg:x="227285" fg:w="176"/><text x="78.9835%" y="319.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="78.7515%" y="309" width="0.1631%" height="15" fill="rgb(252,70,16)" fg:x="227461" fg:w="471"/><text x="79.0444%" y="319.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="78.9145%" y="293" width="0.0609%" height="15" fill="rgb(250,177,4)" fg:x="227932" fg:w="176"/><text x="79.2075%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="78.9755%" y="293" width="1.7266%" height="15" fill="rgb(240,188,47)" fg:x="228108" fg:w="4987"/><text x="79.2684%" y="303.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,458 instructions, 1.89%)</title><rect x="78.9145%" y="309" width="1.8897%" height="15" fill="rgb(215,92,12)" fg:x="227932" fg:w="5458"/><text x="79.2075%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,272 instructions, 4.25%)</title><rect x="76.6423%" y="325" width="4.2488%" height="15" fill="rgb(242,110,29)" fg:x="221369" fg:w="12272"/><text x="76.9353%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="80.8911%" y="325" width="0.0284%" height="15" fill="rgb(208,211,26)" fg:x="233641" fg:w="82"/><text x="81.1841%" y="335.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="80.9195%" y="325" width="0.1111%" height="15" fill="rgb(244,147,6)" fg:x="233723" fg:w="321"/><text x="81.2125%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,009 instructions, 4.50%)</title><rect x="76.6423%" y="341" width="4.5040%" height="15" fill="rgb(211,130,42)" fg:x="221369" fg:w="13009"/><text x="76.9353%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (227,889 instructions, 78.90%)</title><rect x="2.3072%" y="357" width="78.8996%" height="15" fill="rgb(220,63,1)" fg:x="6664" fg:w="227889"/><text x="2.6002%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="81.2069%" y="341" width="0.0755%" height="15" fill="rgb(241,212,30)" fg:x="234553" fg:w="218"/><text x="81.4998%" y="351.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="81.2823%" y="341" width="0.1631%" height="15" fill="rgb(233,153,17)" fg:x="234771" fg:w="471"/><text x="81.5753%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="81.4454%" y="341" width="0.0415%" height="15" fill="rgb(236,3,10)" fg:x="235242" fg:w="120"/><text x="81.7384%" y="351.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="81.4869%" y="341" width="0.1631%" height="15" fill="rgb(232,41,21)" fg:x="235362" fg:w="471"/><text x="81.7799%" y="351.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="81.6500%" y="325" width="0.0575%" height="15" fill="rgb(206,63,51)" fg:x="235833" fg:w="166"/><text x="81.9430%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="81.7075%" y="325" width="1.7266%" height="15" fill="rgb(250,214,3)" fg:x="235999" fg:w="4987"/><text x="82.0005%" y="335.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (5,448 instructions, 1.89%)</title><rect x="81.6500%" y="341" width="1.8862%" height="15" fill="rgb(254,89,27)" fg:x="235833" fg:w="5448"/><text x="81.9430%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,903 instructions, 2.39%)</title><rect x="81.2069%" y="357" width="2.3900%" height="15" fill="rgb(249,41,14)" fg:x="234553" fg:w="6903"/><text x="81.4998%" y="367.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="83.5968%" y="341" width="0.0755%" height="15" fill="rgb(221,196,51)" fg:x="241456" fg:w="218"/><text x="83.8898%" y="351.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="83.6723%" y="341" width="0.1631%" height="15" fill="rgb(214,116,26)" fg:x="241674" fg:w="471"/><text x="83.9653%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="83.8354%" y="341" width="0.0415%" height="15" fill="rgb(236,67,7)" fg:x="242145" fg:w="120"/><text x="84.1283%" y="351.50"></text></g><g><title>memcpy (471 instructions, 0.16%)</title><rect x="83.8769%" y="341" width="0.1631%" height="15" fill="rgb(253,179,32)" fg:x="242265" fg:w="471"/><text x="84.1699%" y="351.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="84.0400%" y="325" width="0.0194%" height="15" fill="rgb(218,33,15)" fg:x="242736" fg:w="56"/><text x="84.3329%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="84.0594%" y="325" width="1.7266%" height="15" fill="rgb(217,202,41)" fg:x="242792" fg:w="4987"/><text x="84.3523%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.73%)</title><rect x="85.7860%" y="325" width="1.7266%" height="15" fill="rgb(234,133,5)" fg:x="247779" fg:w="4987"/><text x="86.0789%" y="335.50"></text></g><g><title>&lt;digest::core_api::wrapper::CoreWrapper&lt;T&gt; as digest::FixedOutput&gt;::finalize_into (10,359 instructions, 3.59%)</title><rect x="84.0400%" y="341" width="3.5865%" height="15" fill="rgb(240,47,40)" fg:x="242736" fg:w="10359"/><text x="84.3329%" y="351.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,867 instructions, 4.11%)</title><rect x="83.5968%" y="357" width="4.1086%" height="15" fill="rgb(234,166,26)" fg:x="241456" fg:w="11867"/><text x="83.8898%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.7054%" y="341" width="0.0284%" height="15" fill="rgb(244,125,51)" fg:x="253323" fg:w="82"/><text x="87.9984%" y="351.50"></text></g><g><title>memcpy (321 instructions, 0.11%)</title><rect x="87.7338%" y="341" width="0.1111%" height="15" fill="rgb(229,171,11)" fg:x="253405" fg:w="321"/><text x="88.0268%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.8449%" y="341" width="0.0284%" height="15" fill="rgb(224,38,45)" fg:x="253726" fg:w="82"/><text x="88.1379%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (781 instructions, 0.27%)</title><rect x="87.7054%" y="357" width="0.2704%" height="15" fill="rgb(237,27,7)" fg:x="253323" fg:w="781"/><text x="87.9984%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (247,631 instructions, 85.73%)</title><rect x="2.3017%" y="373" width="85.7347%" height="15" fill="rgb(216,52,7)" fg:x="6648" fg:w="247631"/><text x="2.5946%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.0364%" y="277" width="0.0284%" height="15" fill="rgb(243,11,11)" fg:x="254279" fg:w="82"/><text x="88.3293%" y="287.50"></text></g><g><title>memcpy (195 instructions, 0.07%)</title><rect x="88.0648%" y="277" width="0.0675%" height="15" fill="rgb(253,167,20)" fg:x="254361" fg:w="195"/><text x="88.3577%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="88.1323%" y="277" width="0.0280%" height="15" fill="rgb(215,207,5)" fg:x="254556" fg:w="81"/><text x="88.4253%" y="287.50"></text></g><g><title>__rust_realloc (442 instructions, 0.15%)</title><rect x="88.0364%" y="293" width="0.1530%" height="15" fill="rgb(252,127,31)" fg:x="254279" fg:w="442"/><text x="88.3293%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (476 instructions, 0.16%)</title><rect x="88.0364%" y="309" width="0.1648%" height="15" fill="rgb(209,106,27)" fg:x="254279" fg:w="476"/><text x="88.3293%" y="319.50"></text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="88.2265%" y="293" width="0.0287%" height="15" fill="rgb(214,220,18)" fg:x="254828" fg:w="83"/><text x="88.5194%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="88.2265%" y="309" width="0.0405%" height="15" fill="rgb(237,89,12)" fg:x="254828" fg:w="117"/><text x="88.5194%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (739 instructions, 0.26%)</title><rect x="88.0364%" y="325" width="0.2559%" height="15" fill="rgb(209,167,36)" fg:x="254279" fg:w="739"/><text x="88.3293%" y="335.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="88.2922%" y="325" width="0.0776%" height="15" fill="rgb(243,45,22)" fg:x="255018" fg:w="224"/><text x="88.5852%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,042 instructions, 0.36%)</title><rect x="88.0364%" y="341" width="0.3608%" height="15" fill="rgb(239,2,46)" fg:x="254279" fg:w="1042"/><text x="88.3293%" y="351.50"></text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="88.4238%" y="309" width="0.0287%" height="15" fill="rgb(241,101,0)" fg:x="255398" fg:w="83"/><text x="88.7168%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="88.4238%" y="325" width="0.0405%" height="15" fill="rgb(244,34,31)" fg:x="255398" fg:w="117"/><text x="88.7168%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.4238%" y="341" width="0.0658%" height="15" fill="rgb(248,23,22)" fg:x="255398" fg:w="190"/><text x="88.7168%" y="351.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="88.4896%" y="309" width="0.1007%" height="15" fill="rgb(218,27,48)" fg:x="255588" fg:w="291"/><text x="88.7826%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (358 instructions, 0.12%)</title><rect x="88.4896%" y="325" width="0.1239%" height="15" fill="rgb(232,78,1)" fg:x="255588" fg:w="358"/><text x="88.7826%" y="335.50"></text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="88.6402%" y="277" width="0.0287%" height="15" fill="rgb(233,169,12)" fg:x="256023" fg:w="83"/><text x="88.9332%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="88.6402%" y="293" width="0.0405%" height="15" fill="rgb(225,222,54)" fg:x="256023" fg:w="117"/><text x="88.9332%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.6402%" y="309" width="0.0658%" height="15" fill="rgb(245,126,29)" fg:x="256023" fg:w="190"/><text x="88.9332%" y="319.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="88.7060%" y="277" width="0.1007%" height="15" fill="rgb(241,63,48)" fg:x="256213" fg:w="291"/><text x="88.9989%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (358 instructions, 0.12%)</title><rect x="88.7060%" y="293" width="0.1239%" height="15" fill="rgb(235,126,38)" fg:x="256213" fg:w="358"/><text x="88.9989%" y="303.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="88.8566%" y="261" width="0.0776%" height="15" fill="rgb(232,96,49)" fg:x="256648" fg:w="224"/><text x="89.1495%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="88.8566%" y="277" width="0.1007%" height="15" fill="rgb(211,146,40)" fg:x="256648" fg:w="291"/><text x="89.1495%" y="287.50"></text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="88.9840%" y="197" width="0.0287%" height="15" fill="rgb(247,93,44)" fg:x="257016" fg:w="83"/><text x="89.2770%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="88.9840%" y="213" width="0.0405%" height="15" fill="rgb(251,41,49)" fg:x="257016" fg:w="117"/><text x="89.2770%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.9840%" y="229" width="0.0658%" height="15" fill="rgb(218,155,12)" fg:x="257016" fg:w="190"/><text x="89.2770%" y="239.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="89.0498%" y="229" width="0.0776%" height="15" fill="rgb(221,161,30)" fg:x="257206" fg:w="224"/><text x="89.3427%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (486 instructions, 0.17%)</title><rect x="88.9840%" y="245" width="0.1683%" height="15" fill="rgb(221,179,11)" fg:x="257016" fg:w="486"/><text x="89.2770%" y="255.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="89.1789%" y="213" width="0.1007%" height="15" fill="rgb(224,170,48)" fg:x="257579" fg:w="291"/><text x="89.4719%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (358 instructions, 0.12%)</title><rect x="89.1789%" y="229" width="0.1239%" height="15" fill="rgb(223,117,5)" fg:x="257579" fg:w="358"/><text x="89.4719%" y="239.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="89.3295%" y="197" width="0.0776%" height="15" fill="rgb(209,52,20)" fg:x="258014" fg:w="224"/><text x="89.6225%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="89.3295%" y="213" width="0.1007%" height="15" fill="rgb(209,19,41)" fg:x="258014" fg:w="291"/><text x="89.6225%" y="223.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="89.4569%" y="181" width="0.1007%" height="15" fill="rgb(210,177,12)" fg:x="258382" fg:w="291"/><text x="89.7499%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (358 instructions, 0.12%)</title><rect x="89.4569%" y="197" width="0.1239%" height="15" fill="rgb(211,159,37)" fg:x="258382" fg:w="358"/><text x="89.7499%" y="207.50"></text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="89.6075%" y="117" width="0.0287%" height="15" fill="rgb(209,20,2)" fg:x="258817" fg:w="83"/><text x="89.9005%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="89.6075%" y="133" width="0.0405%" height="15" fill="rgb(244,3,46)" fg:x="258817" fg:w="117"/><text x="89.9005%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="89.6075%" y="149" width="0.0658%" height="15" fill="rgb(220,94,38)" fg:x="258817" fg:w="190"/><text x="89.9005%" y="159.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="89.6733%" y="149" width="0.1007%" height="15" fill="rgb(253,14,31)" fg:x="259007" fg:w="291"/><text x="89.9663%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (555 instructions, 0.19%)</title><rect x="89.6075%" y="165" width="0.1922%" height="15" fill="rgb(234,176,13)" fg:x="258817" fg:w="555"/><text x="89.9005%" y="175.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="89.8263%" y="133" width="0.0776%" height="15" fill="rgb(218,62,25)" fg:x="259449" fg:w="224"/><text x="90.1193%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="89.8263%" y="149" width="0.1007%" height="15" fill="rgb(216,124,40)" fg:x="259449" fg:w="291"/><text x="90.1193%" y="159.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="89.9537%" y="117" width="0.1007%" height="15" fill="rgb(228,170,12)" fg:x="259817" fg:w="291"/><text x="90.2467%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (358 instructions, 0.12%)</title><rect x="89.9537%" y="133" width="0.1239%" height="15" fill="rgb(231,226,5)" fg:x="259817" fg:w="358"/><text x="90.2467%" y="143.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="90.1044%" y="101" width="0.0776%" height="15" fill="rgb(237,122,22)" fg:x="260252" fg:w="224"/><text x="90.3973%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="90.1044%" y="117" width="0.1007%" height="15" fill="rgb(209,185,25)" fg:x="260252" fg:w="291"/><text x="90.3973%" y="127.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="90.2318%" y="69" width="0.0776%" height="15" fill="rgb(228,200,32)" fg:x="260620" fg:w="224"/><text x="90.5247%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="90.2318%" y="85" width="0.1007%" height="15" fill="rgb(217,140,10)" fg:x="260620" fg:w="291"/><text x="90.5247%" y="95.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="90.3592%" y="53" width="0.0415%" height="15" fill="rgb(253,17,24)" fg:x="260988" fg:w="120"/><text x="90.6521%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (182 instructions, 0.06%)</title><rect x="90.3592%" y="69" width="0.0630%" height="15" fill="rgb(212,61,6)" fg:x="260988" fg:w="182"/><text x="90.6521%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="90.4222%" y="37" width="0.0104%" height="15" fill="rgb(205,14,25)" fg:x="261170" fg:w="30"/><text x="90.7151%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (92 instructions, 0.03%)</title><rect x="90.4222%" y="53" width="0.0319%" height="15" fill="rgb(232,69,41)" fg:x="261170" fg:w="92"/><text x="90.7151%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (178 instructions, 0.06%)</title><rect x="90.4222%" y="69" width="0.0616%" height="15" fill="rgb(241,106,47)" fg:x="261170" fg:w="178"/><text x="90.7151%" y="79.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="90.5160%" y="53" width="0.0776%" height="15" fill="rgb(210,213,53)" fg:x="261441" fg:w="224"/><text x="90.8090%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="90.5160%" y="69" width="0.1007%" height="15" fill="rgb(253,175,27)" fg:x="261441" fg:w="291"/><text x="90.8090%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (821 instructions, 0.28%)</title><rect x="90.3592%" y="85" width="0.2842%" height="15" fill="rgb(211,171,24)" fg:x="260988" fg:w="821"/><text x="90.6521%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,279 instructions, 0.44%)</title><rect x="90.2318%" y="101" width="0.4428%" height="15" fill="rgb(229,80,7)" fg:x="260620" fg:w="1279"/><text x="90.5247%" y="111.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="90.7057%" y="85" width="0.0776%" height="15" fill="rgb(212,46,39)" fg:x="261989" fg:w="224"/><text x="90.9987%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="90.7057%" y="101" width="0.1007%" height="15" fill="rgb(240,80,45)" fg:x="261989" fg:w="291"/><text x="90.9987%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,737 instructions, 0.60%)</title><rect x="90.2318%" y="117" width="0.6014%" height="15" fill="rgb(253,177,40)" fg:x="260620" fg:w="1737"/><text x="90.5247%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,195 instructions, 0.76%)</title><rect x="90.1044%" y="133" width="0.7600%" height="15" fill="rgb(249,200,15)" fg:x="260252" fg:w="2195"/><text x="90.3973%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,720 instructions, 0.94%)</title><rect x="89.9537%" y="149" width="0.9417%" height="15" fill="rgb(217,78,26)" fg:x="259817" fg:w="2720"/><text x="90.2467%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,178 instructions, 1.10%)</title><rect x="89.8263%" y="165" width="1.1003%" height="15" fill="rgb(254,151,32)" fg:x="259449" fg:w="3178"/><text x="90.1193%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,900 instructions, 1.35%)</title><rect x="89.6075%" y="181" width="1.3503%" height="15" fill="rgb(226,165,27)" fg:x="258817" fg:w="3900"/><text x="89.9005%" y="191.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="90.9889%" y="165" width="0.0776%" height="15" fill="rgb(250,206,4)" fg:x="262807" fg:w="224"/><text x="91.2819%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="90.9889%" y="181" width="0.1007%" height="15" fill="rgb(231,229,27)" fg:x="262807" fg:w="291"/><text x="91.2819%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,358 instructions, 1.51%)</title><rect x="89.6075%" y="197" width="1.5088%" height="15" fill="rgb(239,217,8)" fg:x="258817" fg:w="4358"/><text x="89.9005%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,883 instructions, 1.69%)</title><rect x="89.4569%" y="213" width="1.6906%" height="15" fill="rgb(225,204,27)" fg:x="258382" fg:w="4883"/><text x="89.7499%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,341 instructions, 1.85%)</title><rect x="89.3295%" y="229" width="1.8492%" height="15" fill="rgb(230,56,32)" fg:x="258014" fg:w="5341"/><text x="89.6225%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,866 instructions, 2.03%)</title><rect x="89.1789%" y="245" width="2.0309%" height="15" fill="rgb(222,56,27)" fg:x="257579" fg:w="5866"/><text x="89.4719%" y="255.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,519 instructions, 2.26%)</title><rect x="88.9840%" y="261" width="2.2570%" height="15" fill="rgb(253,108,27)" fg:x="257016" fg:w="6519"/><text x="89.2770%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (83 instructions, 0.03%)</title><rect x="91.2721%" y="213" width="0.0287%" height="15" fill="rgb(212,87,36)" fg:x="263625" fg:w="83"/><text x="91.5651%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.04%)</title><rect x="91.2721%" y="229" width="0.0405%" height="15" fill="rgb(247,82,36)" fg:x="263625" fg:w="117"/><text x="91.5651%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="91.2721%" y="245" width="0.0658%" height="15" fill="rgb(222,143,9)" fg:x="263625" fg:w="190"/><text x="91.5651%" y="255.50"></text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="91.3379%" y="245" width="0.0776%" height="15" fill="rgb(238,162,48)" fg:x="263815" fg:w="224"/><text x="91.6309%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (488 instructions, 0.17%)</title><rect x="91.2721%" y="261" width="0.1690%" height="15" fill="rgb(221,59,43)" fg:x="263625" fg:w="488"/><text x="91.5651%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,174 instructions, 2.48%)</title><rect x="88.9840%" y="277" width="2.4838%" height="15" fill="rgb(205,166,41)" fg:x="257016" fg:w="7174"/><text x="89.2770%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,632 instructions, 2.64%)</title><rect x="88.8566%" y="293" width="2.6423%" height="15" fill="rgb(241,186,40)" fg:x="256648" fg:w="7632"/><text x="89.1495%" y="303.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,157 instructions, 2.82%)</title><rect x="88.7060%" y="309" width="2.8241%" height="15" fill="rgb(216,119,35)" fg:x="256213" fg:w="8157"/><text x="88.9989%" y="319.50">&lt;i..</text></g><g><title>memcpy (224 instructions, 0.08%)</title><rect x="91.5630%" y="293" width="0.0776%" height="15" fill="rgb(208,68,38)" fg:x="264465" fg:w="224"/><text x="91.8559%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (291 instructions, 0.10%)</title><rect x="91.5630%" y="309" width="0.1007%" height="15" fill="rgb(217,113,1)" fg:x="264465" fg:w="291"/><text x="91.8559%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,810 instructions, 3.05%)</title><rect x="88.6402%" y="325" width="3.0502%" height="15" fill="rgb(242,153,3)" fg:x="256023" fg:w="8810"/><text x="88.9332%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,335 instructions, 3.23%)</title><rect x="88.4896%" y="341" width="3.2320%" height="15" fill="rgb(229,76,35)" fg:x="255588" fg:w="9335"/><text x="88.7826%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,739 instructions, 3.72%)</title><rect x="88.0364%" y="357" width="3.7181%" height="15" fill="rgb(229,125,34)" fg:x="254279" fg:w="10739"/><text x="88.3293%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,829 instructions, 3.75%)</title><rect x="88.0364%" y="373" width="3.7492%" height="15" fill="rgb(238,179,36)" fg:x="254279" fg:w="10829"/><text x="88.3293%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8116%" y="69" width="0.0436%" height="15" fill="rgb(244,183,19)" fg:x="265183" fg:w="126"/><text x="92.1045%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (148 instructions, 0.05%)</title><rect x="91.8081%" y="85" width="0.0512%" height="15" fill="rgb(216,85,49)" fg:x="265173" fg:w="148"/><text x="92.1011%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8611%" y="85" width="0.0436%" height="15" fill="rgb(208,161,47)" fg:x="265326" fg:w="126"/><text x="92.1540%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (300 instructions, 0.10%)</title><rect x="91.8064%" y="101" width="0.1039%" height="15" fill="rgb(233,210,18)" fg:x="265168" fg:w="300"/><text x="92.0993%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9102%" y="101" width="0.0436%" height="15" fill="rgb(205,104,42)" fg:x="265468" fg:w="126"/><text x="92.2032%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (442 instructions, 0.15%)</title><rect x="91.8064%" y="117" width="0.1530%" height="15" fill="rgb(248,90,43)" fg:x="265168" fg:w="442"/><text x="92.0993%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="91.9611%" y="101" width="0.0218%" height="15" fill="rgb(206,198,11)" fg:x="265615" fg:w="63"/><text x="92.2541%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (167 instructions, 0.06%)</title><rect x="91.9611%" y="117" width="0.0578%" height="15" fill="rgb(239,165,27)" fg:x="265615" fg:w="167"/><text x="92.2541%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (635 instructions, 0.22%)</title><rect x="91.8046%" y="133" width="0.2198%" height="15" fill="rgb(246,44,32)" fg:x="265163" fg:w="635"/><text x="92.0976%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0245%" y="117" width="0.0190%" height="15" fill="rgb(252,65,42)" fg:x="265798" fg:w="55"/><text x="92.3175%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0435%" y="117" width="0.0218%" height="15" fill="rgb(246,197,18)" fg:x="265853" fg:w="63"/><text x="92.3365%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.0245%" y="133" width="0.0703%" height="15" fill="rgb(216,192,4)" fg:x="265798" fg:w="203"/><text x="92.3175%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (859 instructions, 0.30%)</title><rect x="91.8029%" y="149" width="0.2974%" height="15" fill="rgb(208,117,10)" fg:x="265158" fg:w="859"/><text x="92.0959%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1003%" y="133" width="0.0190%" height="15" fill="rgb(240,61,47)" fg:x="266017" fg:w="55"/><text x="92.3933%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1193%" y="133" width="0.0218%" height="15" fill="rgb(228,178,21)" fg:x="266072" fg:w="63"/><text x="92.4123%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.1003%" y="149" width="0.0703%" height="15" fill="rgb(219,96,54)" fg:x="266017" fg:w="203"/><text x="92.3933%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,083 instructions, 0.37%)</title><rect x="91.8012%" y="165" width="0.3750%" height="15" fill="rgb(250,177,24)" fg:x="265153" fg:w="1083"/><text x="92.0941%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1761%" y="149" width="0.0190%" height="15" fill="rgb(242,154,46)" fg:x="266236" fg:w="55"/><text x="92.4691%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1952%" y="149" width="0.0218%" height="15" fill="rgb(226,176,29)" fg:x="266291" fg:w="63"/><text x="92.4881%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.1761%" y="165" width="0.0703%" height="15" fill="rgb(226,29,2)" fg:x="266236" fg:w="203"/><text x="92.4691%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,307 instructions, 0.45%)</title><rect x="91.7994%" y="181" width="0.4525%" height="15" fill="rgb(237,104,14)" fg:x="265148" fg:w="1307"/><text x="92.0924%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2520%" y="165" width="0.0190%" height="15" fill="rgb(245,207,31)" fg:x="266455" fg:w="55"/><text x="92.5449%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.2710%" y="165" width="0.0218%" height="15" fill="rgb(229,211,45)" fg:x="266510" fg:w="63"/><text x="92.5640%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.2520%" y="181" width="0.0703%" height="15" fill="rgb(229,113,15)" fg:x="266455" fg:w="203"/><text x="92.5449%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,526 instructions, 0.53%)</title><rect x="91.7994%" y="197" width="0.5283%" height="15" fill="rgb(237,147,15)" fg:x="265148" fg:w="1526"/><text x="92.0924%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3295%" y="181" width="0.0190%" height="15" fill="rgb(244,120,12)" fg:x="266679" fg:w="55"/><text x="92.6225%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3485%" y="181" width="0.0218%" height="15" fill="rgb(205,120,12)" fg:x="266734" fg:w="63"/><text x="92.6415%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.3295%" y="197" width="0.0703%" height="15" fill="rgb(231,26,45)" fg:x="266679" fg:w="203"/><text x="92.6225%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,755 instructions, 0.61%)</title><rect x="91.7977%" y="213" width="0.6076%" height="15" fill="rgb(246,98,1)" fg:x="265143" fg:w="1755"/><text x="92.0907%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4053%" y="197" width="0.0190%" height="15" fill="rgb(207,68,45)" fg:x="266898" fg:w="55"/><text x="92.6983%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4244%" y="197" width="0.0218%" height="15" fill="rgb(231,27,38)" fg:x="266953" fg:w="63"/><text x="92.7173%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.4053%" y="213" width="0.0703%" height="15" fill="rgb(214,223,3)" fg:x="266898" fg:w="203"/><text x="92.6983%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,979 instructions, 0.69%)</title><rect x="91.7960%" y="229" width="0.6852%" height="15" fill="rgb(228,195,46)" fg:x="265138" fg:w="1979"/><text x="92.0889%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4811%" y="213" width="0.0190%" height="15" fill="rgb(231,100,42)" fg:x="267117" fg:w="55"/><text x="92.7741%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5002%" y="213" width="0.0218%" height="15" fill="rgb(236,53,4)" fg:x="267172" fg:w="63"/><text x="92.7932%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.4811%" y="229" width="0.0703%" height="15" fill="rgb(230,152,12)" fg:x="267117" fg:w="203"/><text x="92.7741%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,203 instructions, 0.76%)</title><rect x="91.7942%" y="245" width="0.7627%" height="15" fill="rgb(226,101,19)" fg:x="265133" fg:w="2203"/><text x="92.0872%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5570%" y="229" width="0.0190%" height="15" fill="rgb(250,149,32)" fg:x="267336" fg:w="55"/><text x="92.8499%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5760%" y="229" width="0.0218%" height="15" fill="rgb(232,178,12)" fg:x="267391" fg:w="63"/><text x="92.8690%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.5570%" y="245" width="0.0703%" height="15" fill="rgb(246,151,17)" fg:x="267336" fg:w="203"/><text x="92.8499%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,427 instructions, 0.84%)</title><rect x="91.7925%" y="261" width="0.8403%" height="15" fill="rgb(252,17,51)" fg:x="265128" fg:w="2427"/><text x="92.0855%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6328%" y="245" width="0.0190%" height="15" fill="rgb(250,207,23)" fg:x="267555" fg:w="55"/><text x="92.9258%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6518%" y="245" width="0.0218%" height="15" fill="rgb(205,27,5)" fg:x="267610" fg:w="63"/><text x="92.9448%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.6328%" y="261" width="0.0703%" height="15" fill="rgb(224,32,19)" fg:x="267555" fg:w="203"/><text x="92.9258%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,646 instructions, 0.92%)</title><rect x="91.7925%" y="277" width="0.9161%" height="15" fill="rgb(247,214,40)" fg:x="265128" fg:w="2646"/><text x="92.0855%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7103%" y="261" width="0.0190%" height="15" fill="rgb(239,199,17)" fg:x="267779" fg:w="55"/><text x="93.0033%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7294%" y="261" width="0.0218%" height="15" fill="rgb(251,159,9)" fg:x="267834" fg:w="63"/><text x="93.0224%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.7103%" y="277" width="0.0703%" height="15" fill="rgb(225,78,32)" fg:x="267779" fg:w="203"/><text x="93.0033%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,875 instructions, 1.00%)</title><rect x="91.7908%" y="293" width="0.9954%" height="15" fill="rgb(206,97,47)" fg:x="265123" fg:w="2875"/><text x="92.0838%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7862%" y="277" width="0.0190%" height="15" fill="rgb(227,107,4)" fg:x="267998" fg:w="55"/><text x="93.0791%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8052%" y="277" width="0.0218%" height="15" fill="rgb(241,146,50)" fg:x="268053" fg:w="63"/><text x="93.0982%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.7862%" y="293" width="0.0703%" height="15" fill="rgb(232,92,30)" fg:x="267998" fg:w="203"/><text x="93.0791%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,099 instructions, 1.07%)</title><rect x="91.7891%" y="309" width="1.0729%" height="15" fill="rgb(222,0,40)" fg:x="265118" fg:w="3099"/><text x="92.0820%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8620%" y="293" width="0.0190%" height="15" fill="rgb(219,54,33)" fg:x="268217" fg:w="55"/><text x="93.1550%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8810%" y="293" width="0.0218%" height="15" fill="rgb(226,209,28)" fg:x="268272" fg:w="63"/><text x="93.1740%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.8620%" y="309" width="0.0703%" height="15" fill="rgb(254,205,35)" fg:x="268217" fg:w="203"/><text x="93.1550%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,318 instructions, 1.15%)</title><rect x="91.7891%" y="325" width="1.1488%" height="15" fill="rgb(230,159,3)" fg:x="265118" fg:w="3318"/><text x="92.0820%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9395%" y="309" width="0.0190%" height="15" fill="rgb(232,190,24)" fg:x="268441" fg:w="55"/><text x="93.2325%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9586%" y="309" width="0.0218%" height="15" fill="rgb(217,227,44)" fg:x="268496" fg:w="63"/><text x="93.2516%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="92.9395%" y="325" width="0.0703%" height="15" fill="rgb(236,211,1)" fg:x="268441" fg:w="203"/><text x="93.2325%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,547 instructions, 1.23%)</title><rect x="91.7873%" y="341" width="1.2280%" height="15" fill="rgb(250,127,46)" fg:x="265113" fg:w="3547"/><text x="92.0803%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0154%" y="325" width="0.0190%" height="15" fill="rgb(229,213,6)" fg:x="268660" fg:w="55"/><text x="93.3083%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0344%" y="325" width="0.0218%" height="15" fill="rgb(237,15,36)" fg:x="268715" fg:w="63"/><text x="93.3274%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="93.0154%" y="341" width="0.0703%" height="15" fill="rgb(213,131,41)" fg:x="268660" fg:w="203"/><text x="93.3083%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,771 instructions, 1.31%)</title><rect x="91.7856%" y="357" width="1.3056%" height="15" fill="rgb(225,82,44)" fg:x="265108" fg:w="3771"/><text x="92.0786%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0912%" y="341" width="0.0190%" height="15" fill="rgb(249,42,11)" fg:x="268879" fg:w="55"/><text x="93.3842%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.1102%" y="341" width="0.0218%" height="15" fill="rgb(253,11,29)" fg:x="268934" fg:w="63"/><text x="93.4032%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (203 instructions, 0.07%)</title><rect x="93.0912%" y="357" width="0.0703%" height="15" fill="rgb(206,8,54)" fg:x="268879" fg:w="203"/><text x="93.3842%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,990 instructions, 1.38%)</title><rect x="91.7856%" y="373" width="1.3814%" height="15" fill="rgb(222,186,2)" fg:x="265108" fg:w="3990"/><text x="92.0786%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.1670%" y="357" width="0.0190%" height="15" fill="rgb(221,206,53)" fg:x="269098" fg:w="55"/><text x="93.4600%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (162 instructions, 0.06%)</title><rect x="93.1670%" y="373" width="0.0561%" height="15" fill="rgb(230,150,21)" fg:x="269098" fg:w="162"/><text x="93.4600%" y="383.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="93.2248%" y="357" width="0.0471%" height="15" fill="rgb(253,202,10)" fg:x="269265" fg:w="136"/><text x="93.5178%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::new (261 instructions, 0.09%)</title><rect x="93.2231%" y="373" width="0.0904%" height="15" fill="rgb(238,109,40)" fg:x="269260" fg:w="261"/><text x="93.5161%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.01%)</title><rect x="93.3135%" y="357" width="0.0135%" height="15" fill="rgb(247,120,22)" fg:x="269521" fg:w="39"/><text x="93.6064%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.3270%" y="357" width="0.0263%" height="15" fill="rgb(207,43,30)" fg:x="269560" fg:w="76"/><text x="93.6199%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.3550%" y="325" width="0.0183%" height="15" fill="rgb(213,211,24)" fg:x="269641" fg:w="53"/><text x="93.6480%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.13%)</title><rect x="93.3734%" y="325" width="0.1257%" height="15" fill="rgb(239,73,39)" fg:x="269694" fg:w="363"/><text x="93.6663%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.03%)</title><rect x="93.4990%" y="325" width="0.0253%" height="15" fill="rgb(245,182,19)" fg:x="270057" fg:w="73"/><text x="93.7920%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.3550%" y="341" width="0.2514%" height="15" fill="rgb(247,143,26)" fg:x="269641" fg:w="726"/><text x="93.6480%" y="351.50"></text></g><g><title>candid::types::internal::env_add (941 instructions, 0.33%)</title><rect x="93.3533%" y="357" width="0.3258%" height="15" fill="rgb(228,191,23)" fg:x="269636" fg:w="941"/><text x="93.6462%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6791%" y="357" width="0.0263%" height="15" fill="rgb(253,165,31)" fg:x="270577" fg:w="76"/><text x="93.9720%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.7054%" y="357" width="0.0263%" height="15" fill="rgb(234,138,20)" fg:x="270653" fg:w="76"/><text x="93.9983%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.7334%" y="325" width="0.0183%" height="15" fill="rgb(218,191,29)" fg:x="270734" fg:w="53"/><text x="94.0264%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.13%)</title><rect x="93.7518%" y="325" width="0.1257%" height="15" fill="rgb(221,157,19)" fg:x="270787" fg:w="363"/><text x="94.0447%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.03%)</title><rect x="93.8775%" y="325" width="0.0253%" height="15" fill="rgb(237,26,42)" fg:x="271150" fg:w="73"/><text x="94.1704%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.7334%" y="341" width="0.2514%" height="15" fill="rgb(220,163,24)" fg:x="270734" fg:w="726"/><text x="94.0264%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="93.9848%" y="341" width="0.2126%" height="15" fill="rgb(242,115,20)" fg:x="271460" fg:w="614"/><text x="94.2777%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="94.1974%" y="325" width="0.0280%" height="15" fill="rgb(210,206,9)" fg:x="272074" fg:w="81"/><text x="94.4903%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="94.1974%" y="341" width="0.0374%" height="15" fill="rgb(208,71,17)" fg:x="272074" fg:w="108"/><text x="94.4903%" y="351.50"></text></g><g><title>candid::types::internal::env_add (1,621 instructions, 0.56%)</title><rect x="93.7317%" y="357" width="0.5612%" height="15" fill="rgb(233,7,5)" fg:x="270729" fg:w="1621"/><text x="94.0247%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.2929%" y="309" width="0.0183%" height="15" fill="rgb(207,92,33)" fg:x="272350" fg:w="53"/><text x="94.5859%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="94.3113%" y="309" width="0.0530%" height="15" fill="rgb(218,87,9)" fg:x="272403" fg:w="153"/><text x="94.6042%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="94.2929%" y="325" width="0.0879%" height="15" fill="rgb(219,47,37)" fg:x="272350" fg:w="254"/><text x="94.5859%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.4546%" y="309" width="0.0183%" height="15" fill="rgb(221,152,34)" fg:x="272817" fg:w="53"/><text x="94.7476%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="94.4729%" y="309" width="0.0530%" height="15" fill="rgb(235,176,21)" fg:x="272870" fg:w="153"/><text x="94.7659%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="94.4546%" y="325" width="0.0879%" height="15" fill="rgb(232,212,21)" fg:x="272817" fg:w="254"/><text x="94.7476%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (934 instructions, 0.32%)</title><rect x="94.2929%" y="341" width="0.3234%" height="15" fill="rgb(245,82,39)" fg:x="272350" fg:w="934"/><text x="94.5859%" y="351.50"></text></g><g><title>candid::types::internal::env_id (1,211 instructions, 0.42%)</title><rect x="94.2929%" y="357" width="0.4193%" height="15" fill="rgb(241,52,51)" fg:x="272350" fg:w="1211"/><text x="94.5859%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.7122%" y="325" width="0.0263%" height="15" fill="rgb(219,91,24)" fg:x="273561" fg:w="76"/><text x="95.0052%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="94.7122%" y="341" width="0.0384%" height="15" fill="rgb(241,142,12)" fg:x="273561" fg:w="111"/><text x="95.0052%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.06%)</title><rect x="94.7122%" y="357" width="0.0620%" height="15" fill="rgb(230,27,9)" fg:x="273561" fg:w="179"/><text x="95.0052%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (79 instructions, 0.03%)</title><rect x="94.7825%" y="309" width="0.0274%" height="15" fill="rgb(249,181,32)" fg:x="273764" fg:w="79"/><text x="95.0754%" y="319.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.05%)</title><rect x="94.7825%" y="325" width="0.0530%" height="15" fill="rgb(230,107,3)" fg:x="273764" fg:w="153"/><text x="95.0754%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.8354%" y="325" width="0.0263%" height="15" fill="rgb(246,204,14)" fg:x="273917" fg:w="76"/><text x="95.1284%" y="335.50"></text></g><g><title>candid::types::internal::unroll (307 instructions, 0.11%)</title><rect x="94.7825%" y="341" width="0.1063%" height="15" fill="rgb(213,192,47)" fg:x="273764" fg:w="307"/><text x="95.0754%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.8888%" y="293" width="0.0183%" height="15" fill="rgb(240,44,36)" fg:x="274071" fg:w="53"/><text x="95.1817%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="94.9071%" y="293" width="0.0530%" height="15" fill="rgb(244,209,38)" fg:x="274124" fg:w="153"/><text x="95.2001%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="94.8888%" y="309" width="0.0879%" height="15" fill="rgb(219,34,37)" fg:x="274071" fg:w="254"/><text x="95.1817%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 0.16%)</title><rect x="94.8888%" y="325" width="0.1617%" height="15" fill="rgb(210,28,6)" fg:x="274071" fg:w="467"/><text x="95.1817%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.0504%" y="325" width="0.0263%" height="15" fill="rgb(244,110,52)" fg:x="274538" fg:w="76"/><text x="95.3434%" y="335.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="95.0768%" y="325" width="0.0471%" height="15" fill="rgb(254,124,47)" fg:x="274614" fg:w="136"/><text x="95.3697%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,042 instructions, 0.36%)</title><rect x="94.8888%" y="341" width="0.3608%" height="15" fill="rgb(254,110,13)" fg:x="274071" fg:w="1042"/><text x="95.1817%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.2495%" y="309" width="0.0263%" height="15" fill="rgb(252,57,21)" fg:x="275113" fg:w="76"/><text x="95.5425%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="95.2495%" y="325" width="0.0384%" height="15" fill="rgb(242,60,45)" fg:x="275113" fg:w="111"/><text x="95.5425%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (179 instructions, 0.06%)</title><rect x="95.2495%" y="341" width="0.0620%" height="15" fill="rgb(234,49,30)" fg:x="275113" fg:w="179"/><text x="95.5425%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="95.3115%" y="293" width="0.0183%" height="15" fill="rgb(218,98,6)" fg:x="275292" fg:w="53"/><text x="95.6045%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.03%)</title><rect x="95.3115%" y="309" width="0.0274%" height="15" fill="rgb(220,174,29)" fg:x="275292" fg:w="79"/><text x="95.6045%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.10%)</title><rect x="95.3115%" y="325" width="0.1011%" height="15" fill="rgb(236,163,23)" fg:x="275292" fg:w="292"/><text x="95.6045%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 0.15%)</title><rect x="95.3115%" y="341" width="0.1513%" height="15" fill="rgb(242,114,45)" fg:x="275292" fg:w="437"/><text x="95.6045%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.4628%" y="293" width="0.0263%" height="15" fill="rgb(232,10,53)" fg:x="275729" fg:w="76"/><text x="95.7558%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="95.4628%" y="309" width="0.0384%" height="15" fill="rgb(245,108,29)" fg:x="275729" fg:w="111"/><text x="95.7558%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.06%)</title><rect x="95.4628%" y="325" width="0.0609%" height="15" fill="rgb(240,89,53)" fg:x="275729" fg:w="176"/><text x="95.7558%" y="335.50"></text></g><g><title>leb128::write::signed (226 instructions, 0.08%)</title><rect x="95.4628%" y="341" width="0.0782%" height="15" fill="rgb(226,60,45)" fg:x="275729" fg:w="226"/><text x="95.7558%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.02%)</title><rect x="95.5410%" y="341" width="0.0173%" height="15" fill="rgb(230,41,44)" fg:x="275955" fg:w="50"/><text x="95.8340%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="95.5583%" y="309" width="0.0280%" height="15" fill="rgb(230,26,20)" fg:x="276005" fg:w="81"/><text x="95.8513%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="95.5583%" y="325" width="0.0374%" height="15" fill="rgb(237,170,32)" fg:x="276005" fg:w="108"/><text x="95.8513%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.03%)</title><rect x="95.5957%" y="325" width="0.0270%" height="15" fill="rgb(212,35,42)" fg:x="276113" fg:w="78"/><text x="95.8887%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.08%)</title><rect x="95.5583%" y="341" width="0.0755%" height="15" fill="rgb(227,31,34)" fg:x="276005" fg:w="218"/><text x="95.8513%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,697 instructions, 0.93%)</title><rect x="94.7742%" y="357" width="0.9338%" height="15" fill="rgb(216,19,18)" fg:x="273740" fg:w="2697"/><text x="95.0671%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.7117%" y="325" width="0.0263%" height="15" fill="rgb(211,133,42)" fg:x="276448" fg:w="76"/><text x="96.0047%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="95.7117%" y="341" width="0.0384%" height="15" fill="rgb(244,66,13)" fg:x="276448" fg:w="111"/><text x="96.0047%" y="351.50"></text></g><g><title>__rust_realloc (104 instructions, 0.04%)</title><rect x="95.7727%" y="325" width="0.0360%" height="15" fill="rgb(218,185,50)" fg:x="276624" fg:w="104"/><text x="96.0656%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.05%)</title><rect x="95.7727%" y="341" width="0.0481%" height="15" fill="rgb(219,149,13)" fg:x="276624" fg:w="139"/><text x="96.0656%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.13%)</title><rect x="95.7117%" y="357" width="0.1343%" height="15" fill="rgb(221,125,0)" fg:x="276448" fg:w="388"/><text x="96.0047%" y="367.50"></text></g><g><title>memcpy (291 instructions, 0.10%)</title><rect x="95.8461%" y="357" width="0.1007%" height="15" fill="rgb(247,126,27)" fg:x="276836" fg:w="291"/><text x="96.1390%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.0427%" y="325" width="0.0183%" height="15" fill="rgb(250,138,30)" fg:x="277404" fg:w="53"/><text x="96.3357%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (363 instructions, 0.13%)</title><rect x="96.0611%" y="325" width="0.1257%" height="15" fill="rgb(230,151,9)" fg:x="277457" fg:w="363"/><text x="96.3540%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (73 instructions, 0.03%)</title><rect x="96.1867%" y="325" width="0.0253%" height="15" fill="rgb(233,80,38)" fg:x="277820" fg:w="73"/><text x="96.4797%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="96.0427%" y="341" width="0.2514%" height="15" fill="rgb(232,68,43)" fg:x="277404" fg:w="726"/><text x="96.3357%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="96.2941%" y="341" width="0.2126%" height="15" fill="rgb(254,5,50)" fg:x="278130" fg:w="614"/><text x="96.5870%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,503 instructions, 0.52%)</title><rect x="96.0410%" y="357" width="0.5204%" height="15" fill="rgb(225,45,5)" fg:x="277399" fg:w="1503"/><text x="96.3339%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.5613%" y="309" width="0.0183%" height="15" fill="rgb(239,22,3)" fg:x="278902" fg:w="53"/><text x="96.8543%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="96.5797%" y="309" width="0.0530%" height="15" fill="rgb(243,129,0)" fg:x="278955" fg:w="153"/><text x="96.8727%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="96.5613%" y="325" width="0.0879%" height="15" fill="rgb(223,164,0)" fg:x="278902" fg:w="254"/><text x="96.8543%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 0.16%)</title><rect x="96.5613%" y="341" width="0.1617%" height="15" fill="rgb(221,46,29)" fg:x="278902" fg:w="467"/><text x="96.8543%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (560 instructions, 0.19%)</title><rect x="96.5613%" y="357" width="0.1939%" height="15" fill="rgb(205,97,47)" fg:x="278902" fg:w="560"/><text x="96.8543%" y="367.50"></text></g><g><title>__rust_realloc (104 instructions, 0.04%)</title><rect x="96.7590%" y="325" width="0.0360%" height="15" fill="rgb(249,14,8)" fg:x="279473" fg:w="104"/><text x="97.0520%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.05%)</title><rect x="96.7590%" y="341" width="0.0481%" height="15" fill="rgb(216,77,3)" fg:x="279473" fg:w="139"/><text x="97.0520%" y="351.50"></text></g><g><title>__rust_realloc (104 instructions, 0.04%)</title><rect x="96.8324%" y="325" width="0.0360%" height="15" fill="rgb(206,168,54)" fg:x="279685" fg:w="104"/><text x="97.1254%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 instructions, 0.05%)</title><rect x="96.8324%" y="341" width="0.0481%" height="15" fill="rgb(236,3,41)" fg:x="279685" fg:w="139"/><text x="97.1254%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (424 instructions, 0.15%)</title><rect x="96.7590%" y="357" width="0.1468%" height="15" fill="rgb(231,132,24)" fg:x="279473" fg:w="424"/><text x="97.0520%" y="367.50"></text></g><g><title>memcpy (3,938 instructions, 1.36%)</title><rect x="96.9058%" y="357" width="1.3634%" height="15" fill="rgb(227,221,40)" fg:x="279897" fg:w="3938"/><text x="97.1988%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (14,522 instructions, 5.03%)</title><rect x="93.3135%" y="373" width="5.0278%" height="15" fill="rgb(233,151,11)" fg:x="269521" fg:w="14522"/><text x="93.6064%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (88 instructions, 0.03%)</title><rect x="98.3413%" y="373" width="0.0305%" height="15" fill="rgb(247,81,35)" fg:x="284043" fg:w="88"/><text x="98.6342%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.04%)</title><rect x="98.3717%" y="373" width="0.0415%" height="15" fill="rgb(243,128,48)" fg:x="284131" fg:w="120"/><text x="98.6647%" y="383.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.01%)</title><rect x="98.4133%" y="357" width="0.0111%" height="15" fill="rgb(253,16,10)" fg:x="284251" fg:w="32"/><text x="98.7062%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="98.4244%" y="325" width="0.0409%" height="15" fill="rgb(228,67,27)" fg:x="284283" fg:w="118"/><text x="98.7173%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (153 instructions, 0.05%)</title><rect x="98.4244%" y="341" width="0.0530%" height="15" fill="rgb(231,105,25)" fg:x="284283" fg:w="153"/><text x="98.7173%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (218 instructions, 0.08%)</title><rect x="98.4244%" y="357" width="0.0755%" height="15" fill="rgb(213,166,47)" fg:x="284283" fg:w="218"/><text x="98.7173%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.4998%" y="357" width="0.0263%" height="15" fill="rgb(209,27,10)" fg:x="284501" fg:w="76"/><text x="98.7928%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5261%" y="357" width="0.0156%" height="15" fill="rgb(241,44,30)" fg:x="284577" fg:w="45"/><text x="98.8191%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5417%" y="357" width="0.0156%" height="15" fill="rgb(223,216,15)" fg:x="284622" fg:w="45"/><text x="98.8347%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="98.5573%" y="357" width="0.0190%" height="15" fill="rgb(227,14,7)" fg:x="284667" fg:w="55"/><text x="98.8503%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.5763%" y="309" width="0.0183%" height="15" fill="rgb(237,14,5)" fg:x="284722" fg:w="53"/><text x="98.8693%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="98.5947%" y="309" width="0.0530%" height="15" fill="rgb(232,14,36)" fg:x="284775" fg:w="153"/><text x="98.8877%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="98.5763%" y="325" width="0.0879%" height="15" fill="rgb(234,0,38)" fg:x="284722" fg:w="254"/><text x="98.8693%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 0.16%)</title><rect x="98.5763%" y="341" width="0.1617%" height="15" fill="rgb(207,170,14)" fg:x="284722" fg:w="467"/><text x="98.8693%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.7380%" y="309" width="0.0263%" height="15" fill="rgb(252,45,13)" fg:x="285189" fg:w="76"/><text x="99.0310%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="98.7380%" y="325" width="0.0384%" height="15" fill="rgb(213,142,7)" fg:x="285189" fg:w="111"/><text x="99.0310%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.06%)</title><rect x="98.7380%" y="341" width="0.0609%" height="15" fill="rgb(216,157,23)" fg:x="285189" fg:w="176"/><text x="99.0310%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.8568%" y="309" width="0.0183%" height="15" fill="rgb(212,145,33)" fg:x="285532" fg:w="53"/><text x="99.1498%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (153 instructions, 0.05%)</title><rect x="98.8751%" y="309" width="0.0530%" height="15" fill="rgb(233,26,13)" fg:x="285585" fg:w="153"/><text x="99.1681%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (254 instructions, 0.09%)</title><rect x="98.8568%" y="325" width="0.0879%" height="15" fill="rgb(219,196,19)" fg:x="285532" fg:w="254"/><text x="99.1498%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (467 instructions, 0.16%)</title><rect x="98.8568%" y="341" width="0.1617%" height="15" fill="rgb(246,56,21)" fg:x="285532" fg:w="467"/><text x="99.1498%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,439 instructions, 0.50%)</title><rect x="98.5763%" y="357" width="0.4982%" height="15" fill="rgb(222,28,53)" fg:x="284722" fg:w="1439"/><text x="98.8693%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="99.0746%" y="357" width="0.0156%" height="15" fill="rgb(224,5,27)" fg:x="286161" fg:w="45"/><text x="99.3675%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="99.0901%" y="357" width="0.0190%" height="15" fill="rgb(220,153,33)" fg:x="286206" fg:w="55"/><text x="99.3831%" y="367.50"></text></g><g><title>std::io::Write::write_all (34 instructions, 0.01%)</title><rect x="99.1092%" y="357" width="0.0118%" height="15" fill="rgb(226,58,19)" fg:x="286261" fg:w="34"/><text x="99.4021%" y="367.50"></text></g><g><title>std::io::Write::write_all (764 instructions, 0.26%)</title><rect x="99.1209%" y="357" width="0.2645%" height="15" fill="rgb(239,112,23)" fg:x="286295" fg:w="764"/><text x="99.4139%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (3,202 instructions, 1.11%)</title><rect x="98.4133%" y="373" width="1.1086%" height="15" fill="rgb(251,213,20)" fg:x="284251" fg:w="3202"/><text x="98.7062%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.5219%" y="373" width="0.0280%" height="15" fill="rgb(215,181,21)" fg:x="287453" fg:w="81"/><text x="99.8148%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.5499%" y="373" width="0.0426%" height="15" fill="rgb(240,8,35)" fg:x="287534" fg:w="123"/><text x="99.8429%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (113 instructions, 0.04%)</title><rect x="99.5963%" y="373" width="0.0391%" height="15" fill="rgb(232,203,3)" fg:x="287668" fg:w="113"/><text x="99.8893%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.6448%" y="373" width="0.0280%" height="15" fill="rgb(214,202,43)" fg:x="287808" fg:w="81"/><text x="99.9377%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.03%)</title><rect x="99.6728%" y="373" width="0.0346%" height="15" fill="rgb(254,35,11)" fg:x="287889" fg:w="100"/><text x="99.9658%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (88 instructions, 0.03%)</title><rect x="99.7074%" y="373" width="0.0305%" height="15" fill="rgb(239,173,13)" fg:x="287989" fg:w="88"/><text x="100.0004%" y="383.50"></text></g><g><title>certified_map::witness_3_::{{closure}} (288,307 instructions, 99.82%)</title><rect x="0.0727%" y="389" width="99.8175%" height="15" fill="rgb(220,141,0)" fg:x="210" fg:w="288307"/><text x="0.3657%" y="399.50">certified_map::witness_3_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.8944%" y="389" width="0.0280%" height="15" fill="rgb(210,98,12)" fg:x="288529" fg:w="81"/><text x="100.1874%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="99.9224%" y="389" width="0.0436%" height="15" fill="rgb(254,153,22)" fg:x="288610" fg:w="126"/><text x="100.2154%" y="399.50"></text></g><g><title>all (288,834 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(247,223,17)" fg:x="0" fg:w="288834"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (288,834 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(246,56,7)" fg:x="0" fg:w="288834"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>