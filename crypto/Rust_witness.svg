<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="390" onload="init(evt)" viewBox="0 0 1024 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="390" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="373.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="373.00"> </text><svg id="frames" x="10" width="1004" total_samples="220622"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="0.0000%" y="309" width="0.0372%" height="15" fill="rgb(208,33,48)" fg:x="0" fg:w="82"/><text x="0.2930%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.07%)</title><rect x="0.0372%" y="309" width="0.0721%" height="15" fill="rgb(208,195,44)" fg:x="82" fg:w="159"/><text x="0.3301%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="0.1092%" y="261" width="0.0372%" height="15" fill="rgb(226,13,52)" fg:x="241" fg:w="82"/><text x="0.4022%" y="271.50"></text></g><g><title>ic_cdk::api::call::arg_data_raw (1,134 instructions, 0.51%)</title><rect x="0.1092%" y="277" width="0.5140%" height="15" fill="rgb(217,219,45)" fg:x="241" fg:w="1134"/><text x="0.4022%" y="287.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.02%)</title><rect x="0.6232%" y="245" width="0.0231%" height="15" fill="rgb(223,45,25)" fg:x="1375" fg:w="51"/><text x="0.9162%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.20%)</title><rect x="0.6464%" y="245" width="0.1981%" height="15" fill="rgb(241,163,0)" fg:x="1426" fg:w="437"/><text x="0.9393%" y="255.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="0.8444%" y="245" width="0.0290%" height="15" fill="rgb(216,68,47)" fg:x="1863" fg:w="64"/><text x="1.1374%" y="255.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.03%)</title><rect x="0.8734%" y="245" width="0.0344%" height="15" fill="rgb(236,119,45)" fg:x="1927" fg:w="76"/><text x="1.1664%" y="255.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.03%)</title><rect x="0.9079%" y="245" width="0.0344%" height="15" fill="rgb(209,188,24)" fg:x="2003" fg:w="76"/><text x="1.2009%" y="255.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.03%)</title><rect x="0.9423%" y="245" width="0.0344%" height="15" fill="rgb(221,118,7)" fg:x="2079" fg:w="76"/><text x="1.2353%" y="255.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (76 instructions, 0.03%)</title><rect x="0.9768%" y="245" width="0.0344%" height="15" fill="rgb(213,148,43)" fg:x="2155" fg:w="76"/><text x="1.2698%" y="255.50"></text></g><g><title>binread::binary_template::write_start_struct (51 instructions, 0.02%)</title><rect x="1.0112%" y="245" width="0.0231%" height="15" fill="rgb(231,21,43)" fg:x="2231" fg:w="51"/><text x="1.3042%" y="255.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.04%)</title><rect x="1.0343%" y="245" width="0.0431%" height="15" fill="rgb(232,213,43)" fg:x="2282" fg:w="95"/><text x="1.3273%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.20%)</title><rect x="1.0774%" y="245" width="0.1981%" height="15" fill="rgb(239,145,50)" fg:x="2377" fg:w="437"/><text x="1.3704%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.04%)</title><rect x="1.2841%" y="213" width="0.0363%" height="15" fill="rgb(222,131,18)" fg:x="2833" fg:w="80"/><text x="1.5771%" y="223.50"></text></g><g><title>memcpy (67 instructions, 0.03%)</title><rect x="1.3204%" y="181" width="0.0304%" height="15" fill="rgb(243,181,13)" fg:x="2913" fg:w="67"/><text x="1.6133%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.04%)</title><rect x="1.3204%" y="197" width="0.0435%" height="15" fill="rgb(212,74,41)" fg:x="2913" fg:w="96"/><text x="1.6133%" y="207.50"></text></g><g><title>memcpy (35 instructions, 0.02%)</title><rect x="1.3689%" y="133" width="0.0159%" height="15" fill="rgb(237,143,34)" fg:x="3020" fg:w="35"/><text x="1.6618%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.03%)</title><rect x="1.3689%" y="149" width="0.0290%" height="15" fill="rgb(228,139,0)" fg:x="3020" fg:w="64"/><text x="1.6618%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.07%)</title><rect x="1.3639%" y="165" width="0.0653%" height="15" fill="rgb(227,214,11)" fg:x="3009" fg:w="144"/><text x="1.6568%" y="175.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.10%)</title><rect x="1.3639%" y="181" width="0.0952%" height="15" fill="rgb(228,118,39)" fg:x="3009" fg:w="210"/><text x="1.6568%" y="191.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.10%)</title><rect x="1.3639%" y="197" width="0.0997%" height="15" fill="rgb(207,117,22)" fg:x="3009" fg:w="220"/><text x="1.6568%" y="207.50"></text></g><g><title>core::fmt::write (449 instructions, 0.20%)</title><rect x="1.3204%" y="213" width="0.2035%" height="15" fill="rgb(225,91,8)" fg:x="2913" fg:w="449"/><text x="1.6133%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (665 instructions, 0.30%)</title><rect x="1.2841%" y="229" width="0.3014%" height="15" fill="rgb(230,219,48)" fg:x="2833" fg:w="665"/><text x="1.5771%" y="239.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="1.5855%" y="229" width="0.0290%" height="15" fill="rgb(244,0,23)" fg:x="3498" fg:w="64"/><text x="1.8785%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="1.6145%" y="229" width="0.0403%" height="15" fill="rgb(206,212,23)" fg:x="3562" fg:w="89"/><text x="1.9075%" y="239.50"></text></g><g><title>binread::binary_template::write_vec (929 instructions, 0.42%)</title><rect x="1.2841%" y="245" width="0.4211%" height="15" fill="rgb(254,62,10)" fg:x="2833" fg:w="929"/><text x="1.5771%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (27 instructions, 0.01%)</title><rect x="1.7052%" y="245" width="0.0122%" height="15" fill="rgb(236,58,8)" fg:x="3762" fg:w="27"/><text x="1.9981%" y="255.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.02%)</title><rect x="1.7174%" y="245" width="0.0209%" height="15" fill="rgb(232,212,17)" fg:x="3789" fg:w="46"/><text x="2.0104%" y="255.50"></text></g><g><title>candid::binary_parser::read_leb (95 instructions, 0.04%)</title><rect x="1.7383%" y="245" width="0.0431%" height="15" fill="rgb(206,132,9)" fg:x="3835" fg:w="95"/><text x="2.0312%" y="255.50"></text></g><g><title>core::str::pattern::StrSearcher::new (437 instructions, 0.20%)</title><rect x="1.7813%" y="229" width="0.1981%" height="15" fill="rgb(234,97,28)" fg:x="3930" fg:w="437"/><text x="2.0743%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="1.9880%" y="197" width="0.0372%" height="15" fill="rgb(254,144,9)" fg:x="4386" fg:w="82"/><text x="2.2810%" y="207.50"></text></g><g><title>memcpy (67 instructions, 0.03%)</title><rect x="2.0252%" y="165" width="0.0304%" height="15" fill="rgb(244,204,43)" fg:x="4468" fg:w="67"/><text x="2.3182%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.04%)</title><rect x="2.0252%" y="181" width="0.0435%" height="15" fill="rgb(248,177,16)" fg:x="4468" fg:w="96"/><text x="2.3182%" y="191.50"></text></g><g><title>memcpy (35 instructions, 0.02%)</title><rect x="2.0737%" y="117" width="0.0159%" height="15" fill="rgb(219,110,15)" fg:x="4575" fg:w="35"/><text x="2.3667%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.03%)</title><rect x="2.0737%" y="133" width="0.0290%" height="15" fill="rgb(212,203,25)" fg:x="4575" fg:w="64"/><text x="2.3667%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.07%)</title><rect x="2.0687%" y="149" width="0.0653%" height="15" fill="rgb(205,50,1)" fg:x="4564" fg:w="144"/><text x="2.3617%" y="159.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (210 instructions, 0.10%)</title><rect x="2.0687%" y="165" width="0.0952%" height="15" fill="rgb(222,152,41)" fg:x="4564" fg:w="210"/><text x="2.3617%" y="175.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (220 instructions, 0.10%)</title><rect x="2.0687%" y="181" width="0.0997%" height="15" fill="rgb(236,83,3)" fg:x="4564" fg:w="220"/><text x="2.3617%" y="191.50"></text></g><g><title>core::fmt::write (449 instructions, 0.20%)</title><rect x="2.0252%" y="197" width="0.2035%" height="15" fill="rgb(214,30,54)" fg:x="4468" fg:w="449"/><text x="2.3182%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (667 instructions, 0.30%)</title><rect x="1.9880%" y="213" width="0.3023%" height="15" fill="rgb(250,117,31)" fg:x="4386" fg:w="667"/><text x="2.2810%" y="223.50"></text></g><g><title>binread::binary_template::write_vec_named (64 instructions, 0.03%)</title><rect x="2.2903%" y="213" width="0.0290%" height="15" fill="rgb(228,77,14)" fg:x="5053" fg:w="64"/><text x="2.5833%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="2.3194%" y="213" width="0.0403%" height="15" fill="rgb(241,3,28)" fg:x="5117" fg:w="89"/><text x="2.6123%" y="223.50"></text></g><g><title>binread::binary_template::write_vec (931 instructions, 0.42%)</title><rect x="1.9880%" y="229" width="0.4220%" height="15" fill="rgb(221,175,52)" fg:x="4386" fg:w="931"/><text x="2.2810%" y="239.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,514 instructions, 0.69%)</title><rect x="1.7813%" y="245" width="0.6862%" height="15" fill="rgb(237,91,6)" fg:x="3930" fg:w="1514"/><text x="2.0743%" y="255.50"></text></g><g><title>binread::binary_template::write_end_struct (46 instructions, 0.02%)</title><rect x="2.4676%" y="245" width="0.0209%" height="15" fill="rgb(246,46,42)" fg:x="5444" fg:w="46"/><text x="2.7605%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="2.4988%" y="245" width="0.0372%" height="15" fill="rgb(235,199,0)" fg:x="5513" fg:w="82"/><text x="2.7918%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="2.5360%" y="245" width="0.0412%" height="15" fill="rgb(224,44,40)" fg:x="5595" fg:w="91"/><text x="2.8290%" y="255.50"></text></g><g><title>memcpy (392 instructions, 0.18%)</title><rect x="2.5795%" y="245" width="0.1777%" height="15" fill="rgb(209,24,35)" fg:x="5691" fg:w="392"/><text x="2.8725%" y="255.50"></text></g><g><title>memcpy (392 instructions, 0.18%)</title><rect x="2.7572%" y="245" width="0.1777%" height="15" fill="rgb(244,46,22)" fg:x="6083" fg:w="392"/><text x="3.0502%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="2.9349%" y="245" width="0.2284%" height="15" fill="rgb(235,99,8)" fg:x="6475" fg:w="504"/><text x="3.2279%" y="255.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,597 instructions, 2.99%)</title><rect x="0.6232%" y="261" width="2.9902%" height="15" fill="rgb(218,127,36)" fg:x="1375" fg:w="6597"/><text x="0.9162%" y="271.50">ca..</text></g><g><title>memcpy (408 instructions, 0.18%)</title><rect x="3.6134%" y="261" width="0.1849%" height="15" fill="rgb(238,47,46)" fg:x="7972" fg:w="408"/><text x="3.9064%" y="271.50"></text></g><g><title>memcpy (408 instructions, 0.18%)</title><rect x="3.7984%" y="261" width="0.1849%" height="15" fill="rgb(233,65,17)" fg:x="8380" fg:w="408"/><text x="4.0913%" y="271.50"></text></g><g><title>candid::de::IDLDeserialize::done (37 instructions, 0.02%)</title><rect x="3.9833%" y="261" width="0.0168%" height="15" fill="rgb(239,22,33)" fg:x="8788" fg:w="37"/><text x="4.2763%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="4.0037%" y="229" width="0.0403%" height="15" fill="rgb(243,66,43)" fg:x="8833" fg:w="89"/><text x="4.2966%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (62 instructions, 0.03%)</title><rect x="4.0762%" y="229" width="0.0281%" height="15" fill="rgb(235,210,28)" fg:x="8993" fg:w="62"/><text x="4.3692%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (293 instructions, 0.13%)</title><rect x="4.0037%" y="245" width="0.1328%" height="15" fill="rgb(205,191,50)" fg:x="8833" fg:w="293"/><text x="4.2966%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (357 instructions, 0.16%)</title><rect x="4.0001%" y="261" width="0.1618%" height="15" fill="rgb(251,217,19)" fg:x="8825" fg:w="357"/><text x="4.2930%" y="271.50"></text></g><g><title>candid::utils::decode_args_with_config_debug (7,949 instructions, 3.60%)</title><rect x="0.6232%" y="277" width="3.6030%" height="15" fill="rgb(205,174,37)" fg:x="1375" fg:w="7949"/><text x="0.9162%" y="287.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="4.2262%" y="277" width="0.0403%" height="15" fill="rgb(212,158,42)" fg:x="9324" fg:w="89"/><text x="4.5192%" y="287.50"></text></g><g><title>ic_cdk::api::call::arg_data (9,275 instructions, 4.20%)</title><rect x="0.1092%" y="293" width="4.2040%" height="15" fill="rgb(212,208,51)" fg:x="241" fg:w="9275"/><text x="0.4022%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="4.3133%" y="261" width="0.0372%" height="15" fill="rgb(225,198,20)" fg:x="9516" fg:w="82"/><text x="4.6062%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (117 instructions, 0.05%)</title><rect x="4.3133%" y="277" width="0.0530%" height="15" fill="rgb(247,41,44)" fg:x="9516" fg:w="117"/><text x="4.6062%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (200 instructions, 0.09%)</title><rect x="4.3133%" y="293" width="0.0907%" height="15" fill="rgb(228,33,41)" fg:x="9516" fg:w="200"/><text x="4.6062%" y="303.50"></text></g><g><title>memcmp (42 instructions, 0.02%)</title><rect x="4.4470%" y="197" width="0.0190%" height="15" fill="rgb(215,47,52)" fg:x="9811" fg:w="42"/><text x="4.7399%" y="207.50"></text></g><g><title>memcmp (42 instructions, 0.02%)</title><rect x="4.4660%" y="181" width="0.0190%" height="15" fill="rgb(248,106,37)" fg:x="9853" fg:w="42"/><text x="4.7590%" y="191.50"></text></g><g><title>memcmp (169 instructions, 0.08%)</title><rect x="4.4850%" y="165" width="0.0766%" height="15" fill="rgb(238,91,29)" fg:x="9895" fg:w="169"/><text x="4.7780%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="4.5616%" y="165" width="0.0372%" height="15" fill="rgb(226,111,40)" fg:x="10064" fg:w="82"/><text x="4.8546%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="4.5988%" y="149" width="0.0412%" height="15" fill="rgb(229,159,36)" fg:x="10146" fg:w="91"/><text x="4.8918%" y="159.50"></text></g><g><title>memcpy (344 instructions, 0.16%)</title><rect x="4.6401%" y="149" width="0.1559%" height="15" fill="rgb(221,109,4)" fg:x="10237" fg:w="344"/><text x="4.9330%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="4.7960%" y="149" width="0.0412%" height="15" fill="rgb(236,56,25)" fg:x="10581" fg:w="91"/><text x="5.0890%" y="159.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (843 instructions, 0.38%)</title><rect x="4.5988%" y="165" width="0.3821%" height="15" fill="rgb(244,113,23)" fg:x="10146" fg:w="843"/><text x="4.8918%" y="175.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (1,278 instructions, 0.58%)</title><rect x="4.4850%" y="181" width="0.5793%" height="15" fill="rgb(249,132,2)" fg:x="9895" fg:w="1278"/><text x="4.7780%" y="191.50"></text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="5.0643%" y="149" width="0.1088%" height="15" fill="rgb(205,185,21)" fg:x="11173" fg:w="240"/><text x="5.3573%" y="159.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="5.1731%" y="149" width="0.0997%" height="15" fill="rgb(245,130,2)" fg:x="11413" fg:w="220"/><text x="5.4661%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="5.2728%" y="149" width="0.2284%" height="15" fill="rgb(246,71,26)" fg:x="11633" fg:w="504"/><text x="5.5658%" y="159.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="5.0643%" y="165" width="0.4764%" height="15" fill="rgb(234,194,6)" fg:x="11173" fg:w="1051"/><text x="5.3573%" y="175.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="5.5407%" y="165" width="0.0594%" height="15" fill="rgb(206,24,32)" fg:x="12224" fg:w="131"/><text x="5.8337%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="5.6001%" y="165" width="0.2284%" height="15" fill="rgb(233,7,54)" fg:x="12355" fg:w="504"/><text x="5.8930%" y="175.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="5.8285%" y="165" width="0.0829%" height="15" fill="rgb(252,46,1)" fg:x="12859" fg:w="183"/><text x="6.1215%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="5.9115%" y="165" width="2.2604%" height="15" fill="rgb(216,113,53)" fg:x="13042" fg:w="4987"/><text x="6.2044%" y="175.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="5.0643%" y="181" width="3.2721%" height="15" fill="rgb(215,40,24)" fg:x="11173" fg:w="7219"/><text x="5.3573%" y="191.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="8.3364%" y="149" width="0.1088%" height="15" fill="rgb(233,222,8)" fg:x="18392" fg:w="240"/><text x="8.6294%" y="159.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="8.4452%" y="149" width="0.1011%" height="15" fill="rgb(248,73,28)" fg:x="18632" fg:w="223"/><text x="8.7382%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="8.5463%" y="149" width="0.2284%" height="15" fill="rgb(247,126,28)" fg:x="18855" fg:w="504"/><text x="8.8393%" y="159.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="8.3364%" y="165" width="0.4777%" height="15" fill="rgb(242,173,54)" fg:x="18392" fg:w="1054"/><text x="8.6294%" y="175.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="8.8142%" y="165" width="0.0594%" height="15" fill="rgb(244,186,22)" fg:x="19446" fg:w="131"/><text x="9.1071%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="8.8735%" y="165" width="0.2284%" height="15" fill="rgb(231,187,4)" fg:x="19577" fg:w="504"/><text x="9.1665%" y="175.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="9.1020%" y="165" width="0.0290%" height="15" fill="rgb(252,66,47)" fg:x="20081" fg:w="64"/><text x="9.3950%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="9.1310%" y="165" width="2.2604%" height="15" fill="rgb(240,228,28)" fg:x="20145" fg:w="4987"/><text x="9.4240%" y="175.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="11.3914%" y="165" width="2.2604%" height="15" fill="rgb(237,63,43)" fg:x="25132" fg:w="4987"/><text x="11.6844%" y="175.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="8.3364%" y="181" width="5.5212%" height="15" fill="rgb(214,1,44)" fg:x="18392" fg:w="12181"/><text x="8.6294%" y="191.50">ic_ce..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="13.8576%" y="133" width="0.1088%" height="15" fill="rgb(212,2,46)" fg:x="30573" fg:w="240"/><text x="14.1506%" y="143.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="13.9664%" y="133" width="0.0997%" height="15" fill="rgb(213,142,5)" fg:x="30813" fg:w="220"/><text x="14.2594%" y="143.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="14.0661%" y="133" width="0.2284%" height="15" fill="rgb(229,135,1)" fg:x="31033" fg:w="504"/><text x="14.3591%" y="143.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="13.8576%" y="149" width="0.4764%" height="15" fill="rgb(252,98,38)" fg:x="30573" fg:w="1051"/><text x="14.1506%" y="159.50"></text></g><g><title>memcpy (259 instructions, 0.12%)</title><rect x="14.3340%" y="149" width="0.1174%" height="15" fill="rgb(206,89,40)" fg:x="31624" fg:w="259"/><text x="14.6270%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="14.4514%" y="149" width="2.2604%" height="15" fill="rgb(219,73,36)" fg:x="31883" fg:w="4987"/><text x="14.7444%" y="159.50">s..</text></g><g><title>memcpy (140 instructions, 0.06%)</title><rect x="16.7118%" y="149" width="0.0635%" height="15" fill="rgb(207,168,32)" fg:x="36870" fg:w="140"/><text x="17.0048%" y="159.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="16.7753%" y="149" width="0.2284%" height="15" fill="rgb(215,113,21)" fg:x="37010" fg:w="504"/><text x="17.0683%" y="159.50"></text></g><g><title>memset (194 instructions, 0.09%)</title><rect x="17.0037%" y="149" width="0.0879%" height="15" fill="rgb(217,144,43)" fg:x="37514" fg:w="194"/><text x="17.2967%" y="159.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="17.0917%" y="149" width="2.2604%" height="15" fill="rgb(249,48,50)" fg:x="37708" fg:w="4987"/><text x="17.3846%" y="159.50">s..</text></g><g><title>ic_certified_map::hashtree::fork_hash (12,567 instructions, 5.70%)</title><rect x="13.8576%" y="165" width="5.6962%" height="15" fill="rgb(242,1,26)" fg:x="30573" fg:w="12567"/><text x="14.1506%" y="175.50">ic_cer..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="19.5538%" y="165" width="0.0412%" height="15" fill="rgb(231,167,42)" fg:x="43140" fg:w="91"/><text x="19.8468%" y="175.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,949 instructions, 5.87%)</title><rect x="13.8576%" y="181" width="5.8693%" height="15" fill="rgb(242,177,45)" fg:x="30573" fg:w="12949"/><text x="14.1506%" y="191.50">ic_cer..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (33,867 instructions, 15.35%)</title><rect x="4.4660%" y="197" width="15.3507%" height="15" fill="rgb(232,121,42)" fg:x="9853" fg:w="33867"/><text x="4.7590%" y="207.50">ic_certified_map::rb..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="19.8167%" y="165" width="0.1088%" height="15" fill="rgb(205,8,42)" fg:x="43720" fg:w="240"/><text x="20.1097%" y="175.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="19.9255%" y="165" width="0.0997%" height="15" fill="rgb(238,199,24)" fg:x="43960" fg:w="220"/><text x="20.2185%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="20.0252%" y="165" width="0.2284%" height="15" fill="rgb(228,112,2)" fg:x="44180" fg:w="504"/><text x="20.3182%" y="175.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="19.8167%" y="181" width="0.4764%" height="15" fill="rgb(215,115,33)" fg:x="43720" fg:w="1051"/><text x="20.1097%" y="191.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="20.2931%" y="181" width="0.0594%" height="15" fill="rgb(230,209,34)" fg:x="44771" fg:w="131"/><text x="20.5860%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="20.3525%" y="181" width="0.2284%" height="15" fill="rgb(246,76,12)" fg:x="44902" fg:w="504"/><text x="20.6454%" y="191.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="20.5809%" y="181" width="0.0829%" height="15" fill="rgb(240,110,9)" fg:x="45406" fg:w="183"/><text x="20.8739%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="20.6639%" y="181" width="2.2604%" height="15" fill="rgb(224,94,46)" fg:x="45589" fg:w="4987"/><text x="20.9568%" y="191.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="19.8167%" y="197" width="3.2721%" height="15" fill="rgb(247,150,22)" fg:x="43720" fg:w="7219"/><text x="20.1097%" y="207.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="23.0888%" y="165" width="0.1088%" height="15" fill="rgb(249,85,13)" fg:x="50939" fg:w="240"/><text x="23.3818%" y="175.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="23.1976%" y="165" width="0.1011%" height="15" fill="rgb(208,77,41)" fg:x="51179" fg:w="223"/><text x="23.4906%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="23.2987%" y="165" width="0.2284%" height="15" fill="rgb(240,42,44)" fg:x="51402" fg:w="504"/><text x="23.5916%" y="175.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="23.0888%" y="181" width="0.4777%" height="15" fill="rgb(222,10,51)" fg:x="50939" fg:w="1054"/><text x="23.3818%" y="191.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="23.5666%" y="181" width="0.0594%" height="15" fill="rgb(208,146,53)" fg:x="51993" fg:w="131"/><text x="23.8595%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="23.6259%" y="181" width="0.2284%" height="15" fill="rgb(236,162,23)" fg:x="52124" fg:w="504"/><text x="23.9189%" y="191.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="23.8544%" y="181" width="0.0290%" height="15" fill="rgb(218,66,21)" fg:x="52628" fg:w="64"/><text x="24.1473%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="23.8834%" y="181" width="2.2604%" height="15" fill="rgb(233,6,47)" fg:x="52692" fg:w="4987"/><text x="24.1764%" y="191.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="26.1438%" y="181" width="2.2604%" height="15" fill="rgb(236,59,51)" fg:x="57679" fg:w="4987"/><text x="26.4368%" y="191.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="23.0888%" y="197" width="5.5212%" height="15" fill="rgb(242,12,46)" fg:x="50939" fg:w="12181"/><text x="23.3818%" y="207.50">ic_ce..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="28.6100%" y="181" width="0.0412%" height="15" fill="rgb(243,142,19)" fg:x="63120" fg:w="91"/><text x="28.9030%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.16%)</title><rect x="28.6513%" y="181" width="0.1559%" height="15" fill="rgb(217,28,17)" fg:x="63211" fg:w="344"/><text x="28.9442%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="28.8072%" y="181" width="0.0412%" height="15" fill="rgb(228,2,27)" fg:x="63555" fg:w="91"/><text x="29.1002%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.38%)</title><rect x="28.6100%" y="197" width="0.3844%" height="15" fill="rgb(214,221,4)" fg:x="63120" fg:w="848"/><text x="28.9030%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (54,353 instructions, 24.64%)</title><rect x="4.4470%" y="213" width="24.6363%" height="15" fill="rgb(224,69,26)" fg:x="9811" fg:w="54353"/><text x="4.7399%" y="223.50">ic_certified_map::rbtree::RbTree&lt;..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="29.0832%" y="181" width="0.1088%" height="15" fill="rgb(219,70,4)" fg:x="64164" fg:w="240"/><text x="29.3762%" y="191.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="29.1920%" y="181" width="0.0997%" height="15" fill="rgb(218,157,39)" fg:x="64404" fg:w="220"/><text x="29.4850%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="29.2917%" y="181" width="0.2284%" height="15" fill="rgb(238,36,28)" fg:x="64624" fg:w="504"/><text x="29.5847%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="29.0832%" y="197" width="0.4764%" height="15" fill="rgb(232,29,0)" fg:x="64164" fg:w="1051"/><text x="29.3762%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="29.5596%" y="197" width="0.0594%" height="15" fill="rgb(243,138,46)" fg:x="65215" fg:w="131"/><text x="29.8526%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="29.6190%" y="197" width="0.2284%" height="15" fill="rgb(232,186,41)" fg:x="65346" fg:w="504"/><text x="29.9120%" y="207.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="29.8474%" y="197" width="0.0829%" height="15" fill="rgb(252,166,17)" fg:x="65850" fg:w="183"/><text x="30.1404%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="29.9304%" y="197" width="2.2604%" height="15" fill="rgb(228,179,12)" fg:x="66033" fg:w="4987"/><text x="30.2233%" y="207.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="29.0832%" y="213" width="3.2721%" height="15" fill="rgb(254,205,53)" fg:x="64164" fg:w="7219"/><text x="29.3762%" y="223.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="32.3553%" y="181" width="0.1088%" height="15" fill="rgb(224,163,47)" fg:x="71383" fg:w="240"/><text x="32.6483%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="32.4641%" y="181" width="0.1011%" height="15" fill="rgb(208,43,47)" fg:x="71623" fg:w="223"/><text x="32.7571%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="32.5652%" y="181" width="0.2284%" height="15" fill="rgb(224,198,38)" fg:x="71846" fg:w="504"/><text x="32.8582%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="32.3553%" y="197" width="0.4777%" height="15" fill="rgb(234,12,40)" fg:x="71383" fg:w="1054"/><text x="32.6483%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="32.8331%" y="197" width="0.0594%" height="15" fill="rgb(237,212,39)" fg:x="72437" fg:w="131"/><text x="33.1260%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="32.8925%" y="197" width="0.2284%" height="15" fill="rgb(253,2,33)" fg:x="72568" fg:w="504"/><text x="33.1854%" y="207.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="33.1209%" y="197" width="0.0290%" height="15" fill="rgb(251,29,16)" fg:x="73072" fg:w="64"/><text x="33.4139%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="33.1499%" y="197" width="2.2604%" height="15" fill="rgb(214,38,29)" fg:x="73136" fg:w="4987"/><text x="33.4429%" y="207.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="35.4103%" y="197" width="2.2604%" height="15" fill="rgb(226,226,29)" fg:x="78123" fg:w="4987"/><text x="35.7033%" y="207.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="32.3553%" y="213" width="5.5212%" height="15" fill="rgb(236,79,42)" fg:x="71383" fg:w="12181"/><text x="32.6483%" y="223.50">ic_ce..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="37.8765%" y="197" width="0.0412%" height="15" fill="rgb(222,12,36)" fg:x="83564" fg:w="91"/><text x="38.1695%" y="207.50"></text></g><g><title>memcpy (344 instructions, 0.16%)</title><rect x="37.9178%" y="197" width="0.1559%" height="15" fill="rgb(232,123,44)" fg:x="83655" fg:w="344"/><text x="38.2108%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="38.0737%" y="197" width="0.0412%" height="15" fill="rgb(234,93,50)" fg:x="83999" fg:w="91"/><text x="38.3667%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.38%)</title><rect x="37.8765%" y="213" width="0.3844%" height="15" fill="rgb(210,86,49)" fg:x="83564" fg:w="848"/><text x="38.1695%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (74,816 instructions, 33.91%)</title><rect x="4.4384%" y="229" width="33.9114%" height="15" fill="rgb(224,91,54)" fg:x="9792" fg:w="74816"/><text x="4.7313%" y="239.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="38.3498%" y="197" width="0.1088%" height="15" fill="rgb(239,169,9)" fg:x="84608" fg:w="240"/><text x="38.6427%" y="207.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="38.4585%" y="197" width="0.0997%" height="15" fill="rgb(238,29,17)" fg:x="84848" fg:w="220"/><text x="38.7515%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="38.5583%" y="197" width="0.2284%" height="15" fill="rgb(227,160,22)" fg:x="85068" fg:w="504"/><text x="38.8512%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="38.3498%" y="213" width="0.4764%" height="15" fill="rgb(231,129,52)" fg:x="84608" fg:w="1051"/><text x="38.6427%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="38.8261%" y="213" width="0.0594%" height="15" fill="rgb(241,184,9)" fg:x="85659" fg:w="131"/><text x="39.1191%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="38.8855%" y="213" width="0.2284%" height="15" fill="rgb(217,43,48)" fg:x="85790" fg:w="504"/><text x="39.1785%" y="223.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="39.1140%" y="213" width="0.0829%" height="15" fill="rgb(213,49,1)" fg:x="86294" fg:w="183"/><text x="39.4069%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="39.1969%" y="213" width="2.2604%" height="15" fill="rgb(223,79,39)" fg:x="86477" fg:w="4987"/><text x="39.4899%" y="223.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="38.3498%" y="229" width="3.2721%" height="15" fill="rgb(228,227,46)" fg:x="84608" fg:w="7219"/><text x="38.6427%" y="239.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="41.6219%" y="197" width="0.1088%" height="15" fill="rgb(245,89,41)" fg:x="91827" fg:w="240"/><text x="41.9148%" y="207.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="41.7307%" y="197" width="0.1011%" height="15" fill="rgb(253,83,21)" fg:x="92067" fg:w="223"/><text x="42.0236%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="41.8317%" y="197" width="0.2284%" height="15" fill="rgb(229,116,51)" fg:x="92290" fg:w="504"/><text x="42.1247%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="41.6219%" y="213" width="0.4777%" height="15" fill="rgb(246,67,26)" fg:x="91827" fg:w="1054"/><text x="41.9148%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="42.0996%" y="213" width="0.0594%" height="15" fill="rgb(250,117,20)" fg:x="92881" fg:w="131"/><text x="42.3926%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="42.1590%" y="213" width="0.2284%" height="15" fill="rgb(207,88,17)" fg:x="93012" fg:w="504"/><text x="42.4520%" y="223.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="42.3874%" y="213" width="0.0290%" height="15" fill="rgb(212,98,36)" fg:x="93516" fg:w="64"/><text x="42.6804%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="42.4164%" y="213" width="2.2604%" height="15" fill="rgb(221,72,6)" fg:x="93580" fg:w="4987"/><text x="42.7094%" y="223.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="44.6769%" y="213" width="2.2604%" height="15" fill="rgb(235,129,19)" fg:x="98567" fg:w="4987"/><text x="44.9698%" y="223.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="41.6219%" y="229" width="5.5212%" height="15" fill="rgb(237,200,6)" fg:x="91827" fg:w="12181"/><text x="41.9148%" y="239.50">ic_ce..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="47.1431%" y="181" width="0.1088%" height="15" fill="rgb(239,69,54)" fg:x="104008" fg:w="240"/><text x="47.4360%" y="191.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="47.2519%" y="181" width="0.0997%" height="15" fill="rgb(214,68,45)" fg:x="104248" fg:w="220"/><text x="47.5448%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="47.3516%" y="181" width="0.2284%" height="15" fill="rgb(254,160,8)" fg:x="104468" fg:w="504"/><text x="47.6445%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="47.1431%" y="197" width="0.4764%" height="15" fill="rgb(215,226,31)" fg:x="104008" fg:w="1051"/><text x="47.4360%" y="207.50"></text></g><g><title>memcpy (259 instructions, 0.12%)</title><rect x="47.6195%" y="197" width="0.1174%" height="15" fill="rgb(253,6,35)" fg:x="105059" fg:w="259"/><text x="47.9124%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="47.7369%" y="197" width="2.2604%" height="15" fill="rgb(219,96,42)" fg:x="105318" fg:w="4987"/><text x="48.0298%" y="207.50">s..</text></g><g><title>memcpy (140 instructions, 0.06%)</title><rect x="49.9973%" y="197" width="0.0635%" height="15" fill="rgb(207,170,13)" fg:x="110305" fg:w="140"/><text x="50.2902%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="50.0607%" y="197" width="0.2284%" height="15" fill="rgb(239,101,5)" fg:x="110445" fg:w="504"/><text x="50.3537%" y="207.50"></text></g><g><title>memset (194 instructions, 0.09%)</title><rect x="50.2892%" y="197" width="0.0879%" height="15" fill="rgb(228,183,34)" fg:x="110949" fg:w="194"/><text x="50.5822%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="50.3771%" y="197" width="2.2604%" height="15" fill="rgb(205,28,31)" fg:x="111143" fg:w="4987"/><text x="50.6701%" y="207.50">s..</text></g><g><title>ic_certified_map::hashtree::fork_hash (12,567 instructions, 5.70%)</title><rect x="47.1431%" y="213" width="5.6962%" height="15" fill="rgb(214,118,50)" fg:x="104008" fg:w="12567"/><text x="47.4360%" y="223.50">ic_cer..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="52.8392%" y="213" width="0.0412%" height="15" fill="rgb(213,108,51)" fg:x="116575" fg:w="91"/><text x="53.1322%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,949 instructions, 5.87%)</title><rect x="47.1431%" y="229" width="5.8693%" height="15" fill="rgb(238,56,37)" fg:x="104008" fg:w="12949"/><text x="47.4360%" y="239.50">ic_cer..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (107,382 instructions, 48.67%)</title><rect x="4.4297%" y="245" width="48.6724%" height="15" fill="rgb(214,136,28)" fg:x="9773" fg:w="107382"/><text x="4.7227%" y="255.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="53.1021%" y="213" width="0.1088%" height="15" fill="rgb(221,201,54)" fg:x="117155" fg:w="240"/><text x="53.3951%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="53.2109%" y="213" width="0.0997%" height="15" fill="rgb(228,216,39)" fg:x="117395" fg:w="220"/><text x="53.5039%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="53.3106%" y="213" width="0.2284%" height="15" fill="rgb(207,229,49)" fg:x="117615" fg:w="504"/><text x="53.6036%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="53.1021%" y="229" width="0.4764%" height="15" fill="rgb(224,23,43)" fg:x="117155" fg:w="1051"/><text x="53.3951%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="53.5785%" y="229" width="0.0594%" height="15" fill="rgb(247,97,18)" fg:x="118206" fg:w="131"/><text x="53.8715%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="53.6379%" y="229" width="0.2284%" height="15" fill="rgb(232,53,32)" fg:x="118337" fg:w="504"/><text x="53.9309%" y="239.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="53.8663%" y="229" width="0.0829%" height="15" fill="rgb(247,38,23)" fg:x="118841" fg:w="183"/><text x="54.1593%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="53.9493%" y="229" width="2.2604%" height="15" fill="rgb(228,101,52)" fg:x="119024" fg:w="4987"/><text x="54.2423%" y="239.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="53.1021%" y="245" width="3.2721%" height="15" fill="rgb(231,45,36)" fg:x="117155" fg:w="7219"/><text x="53.3951%" y="255.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="56.3743%" y="213" width="0.1088%" height="15" fill="rgb(221,183,50)" fg:x="124374" fg:w="240"/><text x="56.6672%" y="223.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="56.4830%" y="213" width="0.1011%" height="15" fill="rgb(251,132,12)" fg:x="124614" fg:w="223"/><text x="56.7760%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="56.5841%" y="213" width="0.2284%" height="15" fill="rgb(252,50,16)" fg:x="124837" fg:w="504"/><text x="56.8771%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="56.3743%" y="229" width="0.4777%" height="15" fill="rgb(224,60,15)" fg:x="124374" fg:w="1054"/><text x="56.6672%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="56.8520%" y="229" width="0.0594%" height="15" fill="rgb(254,2,34)" fg:x="125428" fg:w="131"/><text x="57.1450%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="56.9114%" y="229" width="0.2284%" height="15" fill="rgb(232,154,8)" fg:x="125559" fg:w="504"/><text x="57.2043%" y="239.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="57.1398%" y="229" width="0.0290%" height="15" fill="rgb(235,190,52)" fg:x="126063" fg:w="64"/><text x="57.4328%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="57.1688%" y="229" width="2.2604%" height="15" fill="rgb(213,218,38)" fg:x="126127" fg:w="4987"/><text x="57.4618%" y="239.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="59.4293%" y="229" width="2.2604%" height="15" fill="rgb(237,50,37)" fg:x="131114" fg:w="4987"/><text x="59.7222%" y="239.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="56.3743%" y="245" width="5.5212%" height="15" fill="rgb(235,51,35)" fg:x="124374" fg:w="12181"/><text x="56.6672%" y="255.50">ic_ce..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="61.8955%" y="229" width="0.0412%" height="15" fill="rgb(244,40,52)" fg:x="136555" fg:w="91"/><text x="62.1884%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.16%)</title><rect x="61.9367%" y="229" width="0.1559%" height="15" fill="rgb(217,225,45)" fg:x="136646" fg:w="344"/><text x="62.2297%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="62.0926%" y="229" width="0.0412%" height="15" fill="rgb(247,191,36)" fg:x="136990" fg:w="91"/><text x="62.3856%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.38%)</title><rect x="61.8955%" y="245" width="0.3844%" height="15" fill="rgb(251,144,31)" fg:x="136555" fg:w="848"/><text x="62.1884%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (127,845 instructions, 57.95%)</title><rect x="4.4211%" y="261" width="57.9475%" height="15" fill="rgb(227,155,41)" fg:x="9754" fg:w="127845"/><text x="4.7141%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="62.3687%" y="229" width="0.1088%" height="15" fill="rgb(236,121,36)" fg:x="137599" fg:w="240"/><text x="62.6616%" y="239.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="62.4775%" y="229" width="0.0997%" height="15" fill="rgb(221,128,28)" fg:x="137839" fg:w="220"/><text x="62.7704%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="62.5772%" y="229" width="0.2284%" height="15" fill="rgb(249,67,50)" fg:x="138059" fg:w="504"/><text x="62.8701%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="62.3687%" y="245" width="0.4764%" height="15" fill="rgb(241,126,38)" fg:x="137599" fg:w="1051"/><text x="62.6616%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="62.8450%" y="245" width="0.0594%" height="15" fill="rgb(239,33,14)" fg:x="138650" fg:w="131"/><text x="63.1380%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="62.9044%" y="245" width="0.2284%" height="15" fill="rgb(207,221,54)" fg:x="138781" fg:w="504"/><text x="63.1974%" y="255.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="63.1329%" y="245" width="0.0829%" height="15" fill="rgb(242,138,43)" fg:x="139285" fg:w="183"/><text x="63.4258%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="63.2158%" y="245" width="2.2604%" height="15" fill="rgb(231,118,19)" fg:x="139468" fg:w="4987"/><text x="63.5088%" y="255.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="62.3687%" y="261" width="3.2721%" height="15" fill="rgb(214,128,54)" fg:x="137599" fg:w="7219"/><text x="62.6616%" y="271.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="65.6408%" y="229" width="0.1088%" height="15" fill="rgb(236,136,6)" fg:x="144818" fg:w="240"/><text x="65.9337%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="65.7496%" y="229" width="0.1011%" height="15" fill="rgb(247,30,38)" fg:x="145058" fg:w="223"/><text x="66.0425%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="65.8506%" y="229" width="0.2284%" height="15" fill="rgb(249,189,40)" fg:x="145281" fg:w="504"/><text x="66.1436%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="65.6408%" y="245" width="0.4777%" height="15" fill="rgb(247,179,7)" fg:x="144818" fg:w="1054"/><text x="65.9337%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="66.1185%" y="245" width="0.0594%" height="15" fill="rgb(239,46,52)" fg:x="145872" fg:w="131"/><text x="66.4115%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="66.1779%" y="245" width="0.2284%" height="15" fill="rgb(225,28,52)" fg:x="146003" fg:w="504"/><text x="66.4709%" y="255.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="66.4063%" y="245" width="0.0290%" height="15" fill="rgb(217,208,44)" fg:x="146507" fg:w="64"/><text x="66.6993%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="66.4354%" y="245" width="2.2604%" height="15" fill="rgb(224,11,34)" fg:x="146571" fg:w="4987"/><text x="66.7283%" y="255.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="68.6958%" y="245" width="2.2604%" height="15" fill="rgb(205,134,17)" fg:x="151558" fg:w="4987"/><text x="68.9887%" y="255.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="65.6408%" y="261" width="5.5212%" height="15" fill="rgb(237,125,9)" fg:x="144818" fg:w="12181"/><text x="65.9337%" y="271.50">ic_ce..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="71.1620%" y="245" width="0.0412%" height="15" fill="rgb(208,139,47)" fg:x="156999" fg:w="91"/><text x="71.4550%" y="255.50"></text></g><g><title>memcpy (344 instructions, 0.16%)</title><rect x="71.2032%" y="245" width="0.1559%" height="15" fill="rgb(242,5,5)" fg:x="157090" fg:w="344"/><text x="71.4962%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="71.3592%" y="245" width="0.0412%" height="15" fill="rgb(218,78,2)" fg:x="157434" fg:w="91"/><text x="71.6521%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.38%)</title><rect x="71.1620%" y="261" width="0.3844%" height="15" fill="rgb(217,75,16)" fg:x="156999" fg:w="848"/><text x="71.4550%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (148,308 instructions, 67.22%)</title><rect x="4.4125%" y="277" width="67.2227%" height="15" fill="rgb(212,56,17)" fg:x="9735" fg:w="148308"/><text x="4.7055%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="71.6352%" y="245" width="0.1088%" height="15" fill="rgb(228,61,29)" fg:x="158043" fg:w="240"/><text x="71.9282%" y="255.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="71.7440%" y="245" width="0.0997%" height="15" fill="rgb(247,202,38)" fg:x="158283" fg:w="220"/><text x="72.0369%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="71.8437%" y="245" width="0.2284%" height="15" fill="rgb(211,216,43)" fg:x="158503" fg:w="504"/><text x="72.1367%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="71.6352%" y="261" width="0.4764%" height="15" fill="rgb(220,7,49)" fg:x="158043" fg:w="1051"/><text x="71.9282%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="72.1116%" y="261" width="0.0594%" height="15" fill="rgb(219,158,7)" fg:x="159094" fg:w="131"/><text x="72.4045%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="72.1710%" y="261" width="0.2284%" height="15" fill="rgb(206,127,9)" fg:x="159225" fg:w="504"/><text x="72.4639%" y="271.50"></text></g><g><title>memset (183 instructions, 0.08%)</title><rect x="72.3994%" y="261" width="0.0829%" height="15" fill="rgb(206,103,43)" fg:x="159729" fg:w="183"/><text x="72.6924%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="72.4823%" y="261" width="2.2604%" height="15" fill="rgb(240,108,41)" fg:x="159912" fg:w="4987"/><text x="72.7753%" y="271.50">s..</text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,219 instructions, 3.27%)</title><rect x="71.6352%" y="277" width="3.2721%" height="15" fill="rgb(252,212,6)" fg:x="158043" fg:w="7219"/><text x="71.9282%" y="287.50">&lt;a..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="74.9073%" y="245" width="0.1088%" height="15" fill="rgb(248,105,31)" fg:x="165262" fg:w="240"/><text x="75.2003%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.10%)</title><rect x="75.0161%" y="245" width="0.1011%" height="15" fill="rgb(241,123,4)" fg:x="165502" fg:w="223"/><text x="75.3091%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="75.1172%" y="245" width="0.2284%" height="15" fill="rgb(223,74,37)" fg:x="165725" fg:w="504"/><text x="75.4101%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,054 instructions, 0.48%)</title><rect x="74.9073%" y="261" width="0.4777%" height="15" fill="rgb(251,219,28)" fg:x="165262" fg:w="1054"/><text x="75.2003%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="75.3850%" y="261" width="0.0594%" height="15" fill="rgb(218,36,31)" fg:x="166316" fg:w="131"/><text x="75.6780%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="75.4444%" y="261" width="0.2284%" height="15" fill="rgb(229,40,15)" fg:x="166447" fg:w="504"/><text x="75.7374%" y="271.50"></text></g><g><title>memset (64 instructions, 0.03%)</title><rect x="75.6729%" y="261" width="0.0290%" height="15" fill="rgb(208,138,37)" fg:x="166951" fg:w="64"/><text x="75.9658%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="75.7019%" y="261" width="2.2604%" height="15" fill="rgb(208,40,52)" fg:x="167015" fg:w="4987"/><text x="75.9948%" y="271.50">s..</text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="77.9623%" y="261" width="2.2604%" height="15" fill="rgb(246,181,48)" fg:x="172002" fg:w="4987"/><text x="78.2553%" y="271.50">s..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,181 instructions, 5.52%)</title><rect x="74.9073%" y="277" width="5.5212%" height="15" fill="rgb(253,178,36)" fg:x="165262" fg:w="12181"/><text x="75.2003%" y="287.50">ic_ce..</text></g><g><title>memset (240 instructions, 0.11%)</title><rect x="80.4285%" y="229" width="0.1088%" height="15" fill="rgb(210,170,6)" fg:x="177443" fg:w="240"/><text x="80.7215%" y="239.50"></text></g><g><title>memcpy (220 instructions, 0.10%)</title><rect x="80.5373%" y="229" width="0.0997%" height="15" fill="rgb(243,62,22)" fg:x="177683" fg:w="220"/><text x="80.8303%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="80.6370%" y="229" width="0.2284%" height="15" fill="rgb(213,145,26)" fg:x="177903" fg:w="504"/><text x="80.9300%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,051 instructions, 0.48%)</title><rect x="80.4285%" y="245" width="0.4764%" height="15" fill="rgb(237,177,23)" fg:x="177443" fg:w="1051"/><text x="80.7215%" y="255.50"></text></g><g><title>memcpy (259 instructions, 0.12%)</title><rect x="80.9049%" y="245" width="0.1174%" height="15" fill="rgb(252,5,24)" fg:x="178494" fg:w="259"/><text x="81.1979%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="81.0223%" y="245" width="2.2604%" height="15" fill="rgb(230,108,54)" fg:x="178753" fg:w="4987"/><text x="81.3153%" y="255.50">s..</text></g><g><title>memcpy (140 instructions, 0.06%)</title><rect x="83.2827%" y="245" width="0.0635%" height="15" fill="rgb(252,192,41)" fg:x="183740" fg:w="140"/><text x="83.5757%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.23%)</title><rect x="83.3462%" y="245" width="0.2284%" height="15" fill="rgb(218,125,20)" fg:x="183880" fg:w="504"/><text x="83.6391%" y="255.50"></text></g><g><title>memset (194 instructions, 0.09%)</title><rect x="83.5746%" y="245" width="0.0879%" height="15" fill="rgb(230,223,15)" fg:x="184384" fg:w="194"/><text x="83.8676%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 2.26%)</title><rect x="83.6626%" y="245" width="2.2604%" height="15" fill="rgb(239,99,47)" fg:x="184578" fg:w="4987"/><text x="83.9555%" y="255.50">s..</text></g><g><title>ic_certified_map::hashtree::fork_hash (12,567 instructions, 5.70%)</title><rect x="80.4285%" y="261" width="5.6962%" height="15" fill="rgb(222,214,23)" fg:x="177443" fg:w="12567"/><text x="80.7215%" y="271.50">ic_cer..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="86.1247%" y="261" width="0.0412%" height="15" fill="rgb(250,98,43)" fg:x="190010" fg:w="91"/><text x="86.4177%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,949 instructions, 5.87%)</title><rect x="80.4285%" y="277" width="5.8693%" height="15" fill="rgb(226,140,11)" fg:x="177443" fg:w="12949"/><text x="80.7215%" y="287.50">ic_cer..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go (180,874 instructions, 81.98%)</title><rect x="4.4039%" y="293" width="81.9837%" height="15" fill="rgb(239,2,22)" fg:x="9716" fg:w="180874"/><text x="4.6969%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="86.3876%" y="197" width="0.0372%" height="15" fill="rgb(209,106,26)" fg:x="190590" fg:w="82"/><text x="86.6805%" y="207.50"></text></g><g><title>memcpy (211 instructions, 0.10%)</title><rect x="86.4247%" y="197" width="0.0956%" height="15" fill="rgb(209,135,11)" fg:x="190672" fg:w="211"/><text x="86.7177%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="86.5204%" y="197" width="0.0403%" height="15" fill="rgb(241,58,6)" fg:x="190883" fg:w="89"/><text x="86.8134%" y="207.50"></text></g><g><title>__rust_realloc (511 instructions, 0.23%)</title><rect x="86.3876%" y="213" width="0.2316%" height="15" fill="rgb(214,78,1)" fg:x="190590" fg:w="511"/><text x="86.6805%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (554 instructions, 0.25%)</title><rect x="86.3876%" y="229" width="0.2511%" height="15" fill="rgb(229,135,33)" fg:x="190590" fg:w="554"/><text x="86.6805%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (640 instructions, 0.29%)</title><rect x="86.3876%" y="245" width="0.2901%" height="15" fill="rgb(245,87,50)" fg:x="190590" fg:w="640"/><text x="86.6805%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.04%)</title><rect x="86.6777%" y="181" width="0.0412%" height="15" fill="rgb(222,222,8)" fg:x="191230" fg:w="91"/><text x="86.9706%" y="191.50"></text></g><g><title>memcpy (136 instructions, 0.06%)</title><rect x="86.7189%" y="181" width="0.0616%" height="15" fill="rgb(214,97,50)" fg:x="191321" fg:w="136"/><text x="87.0119%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="86.7806%" y="181" width="0.0403%" height="15" fill="rgb(244,161,51)" fg:x="191457" fg:w="89"/><text x="87.0735%" y="191.50"></text></g><g><title>__rust_realloc (445 instructions, 0.20%)</title><rect x="86.6777%" y="197" width="0.2017%" height="15" fill="rgb(225,17,4)" fg:x="191230" fg:w="445"/><text x="86.9706%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (488 instructions, 0.22%)</title><rect x="86.6777%" y="213" width="0.2212%" height="15" fill="rgb(238,10,13)" fg:x="191230" fg:w="488"/><text x="86.9706%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (574 instructions, 0.26%)</title><rect x="86.6777%" y="229" width="0.2602%" height="15" fill="rgb(239,169,14)" fg:x="191230" fg:w="574"/><text x="86.9706%" y="239.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="86.9378%" y="229" width="0.1414%" height="15" fill="rgb(213,105,25)" fg:x="191804" fg:w="312"/><text x="87.2308%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (973 instructions, 0.44%)</title><rect x="86.6777%" y="245" width="0.4410%" height="15" fill="rgb(233,4,17)" fg:x="191230" fg:w="973"/><text x="86.9706%" y="255.50"></text></g><g><title>__rust_realloc (109 instructions, 0.05%)</title><rect x="87.1631%" y="213" width="0.0494%" height="15" fill="rgb(212,5,35)" fg:x="192301" fg:w="109"/><text x="87.4561%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.07%)</title><rect x="87.1631%" y="229" width="0.0689%" height="15" fill="rgb(216,3,14)" fg:x="192301" fg:w="152"/><text x="87.4561%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.11%)</title><rect x="87.1631%" y="245" width="0.1079%" height="15" fill="rgb(240,105,33)" fg:x="192301" fg:w="238"/><text x="87.4561%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.11%)</title><rect x="87.2710%" y="213" width="0.1088%" height="15" fill="rgb(216,73,0)" fg:x="192539" fg:w="240"/><text x="87.5640%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (316 instructions, 0.14%)</title><rect x="87.2710%" y="229" width="0.1432%" height="15" fill="rgb(217,153,48)" fg:x="192539" fg:w="316"/><text x="87.5640%" y="239.50"></text></g><g><title>__rust_realloc (109 instructions, 0.05%)</title><rect x="87.4537%" y="165" width="0.0494%" height="15" fill="rgb(218,180,8)" fg:x="192942" fg:w="109"/><text x="87.7466%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.07%)</title><rect x="87.4537%" y="181" width="0.0689%" height="15" fill="rgb(252,168,2)" fg:x="192942" fg:w="152"/><text x="87.7466%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.11%)</title><rect x="87.4537%" y="197" width="0.1079%" height="15" fill="rgb(224,116,33)" fg:x="192942" fg:w="238"/><text x="87.7466%" y="207.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="87.5615%" y="197" width="0.1414%" height="15" fill="rgb(229,205,17)" fg:x="193180" fg:w="312"/><text x="87.8545%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (637 instructions, 0.29%)</title><rect x="87.4537%" y="213" width="0.2887%" height="15" fill="rgb(234,1,41)" fg:x="192942" fg:w="637"/><text x="87.7466%" y="223.50"></text></g><g><title>memcpy (240 instructions, 0.11%)</title><rect x="87.7818%" y="181" width="0.1088%" height="15" fill="rgb(244,185,8)" fg:x="193666" fg:w="240"/><text x="88.0748%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (316 instructions, 0.14%)</title><rect x="87.7818%" y="197" width="0.1432%" height="15" fill="rgb(248,51,21)" fg:x="193666" fg:w="316"/><text x="88.0748%" y="207.50"></text></g><g><title>__rust_realloc (109 instructions, 0.05%)</title><rect x="87.9645%" y="117" width="0.0494%" height="15" fill="rgb(248,157,31)" fg:x="194069" fg:w="109"/><text x="88.2575%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.07%)</title><rect x="87.9645%" y="133" width="0.0689%" height="15" fill="rgb(210,34,47)" fg:x="194069" fg:w="152"/><text x="88.2575%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.11%)</title><rect x="87.9645%" y="149" width="0.1079%" height="15" fill="rgb(227,139,53)" fg:x="194069" fg:w="238"/><text x="88.2575%" y="159.50"></text></g><g><title>memcpy (240 instructions, 0.11%)</title><rect x="88.0724%" y="149" width="0.1088%" height="15" fill="rgb(232,211,37)" fg:x="194307" fg:w="240"/><text x="88.3653%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (565 instructions, 0.26%)</title><rect x="87.9645%" y="165" width="0.2561%" height="15" fill="rgb(236,133,10)" fg:x="194069" fg:w="565"/><text x="88.2575%" y="175.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="88.2600%" y="133" width="0.1414%" height="15" fill="rgb(243,202,25)" fg:x="194721" fg:w="312"/><text x="88.5530%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="88.2600%" y="149" width="0.1759%" height="15" fill="rgb(224,59,9)" fg:x="194721" fg:w="388"/><text x="88.5530%" y="159.50"></text></g><g><title>memcpy (240 instructions, 0.11%)</title><rect x="88.4753%" y="117" width="0.1088%" height="15" fill="rgb(206,146,16)" fg:x="195196" fg:w="240"/><text x="88.7683%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (316 instructions, 0.14%)</title><rect x="88.4753%" y="133" width="0.1432%" height="15" fill="rgb(220,47,2)" fg:x="195196" fg:w="316"/><text x="88.7683%" y="143.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="88.6580%" y="101" width="0.1414%" height="15" fill="rgb(225,124,51)" fg:x="195599" fg:w="312"/><text x="88.9509%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="88.6580%" y="117" width="0.1759%" height="15" fill="rgb(241,220,50)" fg:x="195599" fg:w="388"/><text x="88.9509%" y="127.50"></text></g><g><title>__rust_realloc (109 instructions, 0.05%)</title><rect x="88.8733%" y="37" width="0.0494%" height="15" fill="rgb(232,168,5)" fg:x="196074" fg:w="109"/><text x="89.1662%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.07%)</title><rect x="88.8733%" y="53" width="0.0689%" height="15" fill="rgb(243,90,22)" fg:x="196074" fg:w="152"/><text x="89.1662%" y="63.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (238 instructions, 0.11%)</title><rect x="88.8733%" y="69" width="0.1079%" height="15" fill="rgb(223,153,32)" fg:x="196074" fg:w="238"/><text x="89.1662%" y="79.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="88.9812%" y="69" width="0.1414%" height="15" fill="rgb(243,124,20)" fg:x="196312" fg:w="312"/><text x="89.2741%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (637 instructions, 0.29%)</title><rect x="88.8733%" y="85" width="0.2887%" height="15" fill="rgb(246,168,39)" fg:x="196074" fg:w="637"/><text x="89.1662%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.06%)</title><rect x="89.2014%" y="53" width="0.0594%" height="15" fill="rgb(222,165,54)" fg:x="196798" fg:w="131"/><text x="89.4944%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (201 instructions, 0.09%)</title><rect x="89.2014%" y="69" width="0.0911%" height="15" fill="rgb(251,142,27)" fg:x="196798" fg:w="201"/><text x="89.4944%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.02%)</title><rect x="89.2925%" y="37" width="0.0159%" height="15" fill="rgb(207,168,50)" fg:x="196999" fg:w="35"/><text x="89.5855%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (105 instructions, 0.05%)</title><rect x="89.2925%" y="53" width="0.0476%" height="15" fill="rgb(250,139,25)" fg:x="196999" fg:w="105"/><text x="89.5855%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (192 instructions, 0.09%)</title><rect x="89.2925%" y="69" width="0.0870%" height="15" fill="rgb(214,194,48)" fg:x="196999" fg:w="192"/><text x="89.5855%" y="79.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="89.4267%" y="53" width="0.1414%" height="15" fill="rgb(227,138,47)" fg:x="197295" fg:w="312"/><text x="89.7197%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="89.4267%" y="69" width="0.1759%" height="15" fill="rgb(250,162,5)" fg:x="197295" fg:w="388"/><text x="89.7197%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (972 instructions, 0.44%)</title><rect x="89.2014%" y="85" width="0.4406%" height="15" fill="rgb(229,74,25)" fg:x="196798" fg:w="972"/><text x="89.4944%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,797 instructions, 0.81%)</title><rect x="88.8733%" y="101" width="0.8145%" height="15" fill="rgb(221,124,34)" fg:x="196074" fg:w="1797"/><text x="89.1662%" y="111.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="89.7336%" y="85" width="0.1414%" height="15" fill="rgb(225,94,25)" fg:x="197972" fg:w="312"/><text x="90.0265%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="89.7336%" y="101" width="0.1759%" height="15" fill="rgb(210,100,12)" fg:x="197972" fg:w="388"/><text x="90.0265%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,373 instructions, 1.08%)</title><rect x="88.8733%" y="117" width="1.0756%" height="15" fill="rgb(206,62,48)" fg:x="196074" fg:w="2373"/><text x="89.1662%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,949 instructions, 1.34%)</title><rect x="88.6580%" y="133" width="1.3367%" height="15" fill="rgb(222,181,9)" fg:x="195599" fg:w="2949"/><text x="88.9509%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,453 instructions, 1.57%)</title><rect x="88.4753%" y="149" width="1.5651%" height="15" fill="rgb(248,42,38)" fg:x="195196" fg:w="3453"/><text x="88.7683%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,029 instructions, 1.83%)</title><rect x="88.2600%" y="165" width="1.8262%" height="15" fill="rgb(213,40,6)" fg:x="194721" fg:w="4029"/><text x="88.5530%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,782 instructions, 2.17%)</title><rect x="87.9645%" y="181" width="2.1675%" height="15" fill="rgb(211,108,15)" fg:x="194069" fg:w="4782"/><text x="88.2575%" y="191.50">&lt;..</text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="90.1778%" y="165" width="0.1414%" height="15" fill="rgb(249,62,9)" fg:x="198952" fg:w="312"/><text x="90.4707%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="90.1778%" y="181" width="0.1759%" height="15" fill="rgb(233,26,54)" fg:x="198952" fg:w="388"/><text x="90.4707%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,358 instructions, 2.43%)</title><rect x="87.9645%" y="197" width="2.4286%" height="15" fill="rgb(210,175,26)" fg:x="194069" fg:w="5358"/><text x="88.2575%" y="207.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,862 instructions, 2.66%)</title><rect x="87.7818%" y="213" width="2.6570%" height="15" fill="rgb(210,43,33)" fg:x="193666" fg:w="5862"/><text x="88.0748%" y="223.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,687 instructions, 3.03%)</title><rect x="87.4537%" y="229" width="3.0310%" height="15" fill="rgb(224,46,17)" fg:x="192942" fg:w="6687"/><text x="87.7466%" y="239.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,191 instructions, 3.26%)</title><rect x="87.2710%" y="245" width="3.2594%" height="15" fill="rgb(254,24,38)" fg:x="192539" fg:w="7191"/><text x="87.5640%" y="255.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,252 instructions, 4.19%)</title><rect x="86.3876%" y="261" width="4.1936%" height="15" fill="rgb(248,32,0)" fg:x="190590" fg:w="9252"/><text x="86.6805%" y="271.50">&lt;ic_..</text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="90.6270%" y="245" width="0.1414%" height="15" fill="rgb(224,37,41)" fg:x="199943" fg:w="312"/><text x="90.9199%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (388 instructions, 0.18%)</title><rect x="90.6270%" y="261" width="0.1759%" height="15" fill="rgb(252,70,22)" fg:x="199943" fg:w="388"/><text x="90.9199%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,828 instructions, 4.45%)</title><rect x="86.3876%" y="277" width="4.4547%" height="15" fill="rgb(241,123,50)" fg:x="190590" fg:w="9828"/><text x="86.6805%" y="287.50">&lt;ic_..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,929 instructions, 4.50%)</title><rect x="86.3876%" y="293" width="4.5005%" height="15" fill="rgb(246,138,33)" fg:x="190590" fg:w="9929"/><text x="86.6805%" y="303.50">&lt;ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="90.9275%" y="69" width="0.0403%" height="15" fill="rgb(218,39,32)" fg:x="200606" fg:w="89"/><text x="91.2204%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (153 instructions, 0.07%)</title><rect x="90.9207%" y="85" width="0.0693%" height="15" fill="rgb(241,229,10)" fg:x="200591" fg:w="153"/><text x="91.2136%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="90.9936%" y="85" width="0.0403%" height="15" fill="rgb(212,160,10)" fg:x="200752" fg:w="89"/><text x="91.2866%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (315 instructions, 0.14%)</title><rect x="90.9170%" y="101" width="0.1428%" height="15" fill="rgb(227,48,51)" fg:x="200583" fg:w="315"/><text x="91.2100%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="91.0598%" y="85" width="0.0122%" height="15" fill="rgb(238,159,21)" fg:x="200898" fg:w="27"/><text x="91.3528%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.07%)</title><rect x="91.0598%" y="101" width="0.0653%" height="15" fill="rgb(216,1,10)" fg:x="200898" fg:w="144"/><text x="91.3528%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (516 instructions, 0.23%)</title><rect x="90.9170%" y="117" width="0.2339%" height="15" fill="rgb(209,228,25)" fg:x="200583" fg:w="516"/><text x="91.2100%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="91.1546%" y="101" width="0.0122%" height="15" fill="rgb(234,160,10)" fg:x="201107" fg:w="27"/><text x="91.4475%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.07%)</title><rect x="91.1546%" y="117" width="0.0653%" height="15" fill="rgb(212,66,25)" fg:x="201107" fg:w="144"/><text x="91.4475%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (733 instructions, 0.33%)</title><rect x="90.9134%" y="133" width="0.3322%" height="15" fill="rgb(254,121,18)" fg:x="200575" fg:w="733"/><text x="91.2064%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="91.2457%" y="117" width="0.0122%" height="15" fill="rgb(219,127,1)" fg:x="201308" fg:w="27"/><text x="91.5386%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.2579%" y="117" width="0.0304%" height="15" fill="rgb(219,224,42)" fg:x="201335" fg:w="67"/><text x="91.5509%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (189 instructions, 0.09%)</title><rect x="91.2457%" y="133" width="0.0857%" height="15" fill="rgb(253,130,22)" fg:x="201308" fg:w="189"/><text x="91.5386%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (987 instructions, 0.45%)</title><rect x="90.9098%" y="149" width="0.4474%" height="15" fill="rgb(253,39,28)" fg:x="200567" fg:w="987"/><text x="91.2028%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="91.3572%" y="133" width="0.0299%" height="15" fill="rgb(231,126,37)" fg:x="201554" fg:w="66"/><text x="91.6501%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.3871%" y="133" width="0.0304%" height="15" fill="rgb(251,145,14)" fg:x="201620" fg:w="67"/><text x="91.6800%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="91.3572%" y="149" width="0.1033%" height="15" fill="rgb(229,164,30)" fg:x="201554" fg:w="228"/><text x="91.6501%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,280 instructions, 0.58%)</title><rect x="90.9062%" y="165" width="0.5802%" height="15" fill="rgb(233,227,54)" fg:x="200559" fg:w="1280"/><text x="91.1991%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="91.4863%" y="149" width="0.0299%" height="15" fill="rgb(240,94,22)" fg:x="201839" fg:w="66"/><text x="91.7793%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.5163%" y="149" width="0.0304%" height="15" fill="rgb(217,56,16)" fg:x="201905" fg:w="67"/><text x="91.8092%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="91.4863%" y="165" width="0.1033%" height="15" fill="rgb(229,133,38)" fg:x="201839" fg:w="228"/><text x="91.7793%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,573 instructions, 0.71%)</title><rect x="90.9025%" y="181" width="0.7130%" height="15" fill="rgb(225,139,35)" fg:x="200551" fg:w="1573"/><text x="91.1955%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="91.6155%" y="165" width="0.0299%" height="15" fill="rgb(223,100,16)" fg:x="202124" fg:w="66"/><text x="91.9085%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.6454%" y="165" width="0.0304%" height="15" fill="rgb(207,43,50)" fg:x="202190" fg:w="67"/><text x="91.9384%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="91.6155%" y="181" width="0.1033%" height="15" fill="rgb(237,221,9)" fg:x="202124" fg:w="228"/><text x="91.9085%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,858 instructions, 0.84%)</title><rect x="90.9025%" y="197" width="0.8422%" height="15" fill="rgb(236,134,24)" fg:x="200551" fg:w="1858"/><text x="91.1955%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="91.7483%" y="181" width="0.0299%" height="15" fill="rgb(222,173,4)" fg:x="202417" fg:w="66"/><text x="92.0413%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.7782%" y="181" width="0.0304%" height="15" fill="rgb(234,144,52)" fg:x="202483" fg:w="67"/><text x="92.0712%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="91.7483%" y="197" width="0.1033%" height="15" fill="rgb(223,41,7)" fg:x="202417" fg:w="228"/><text x="92.0413%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,159 instructions, 0.98%)</title><rect x="90.8989%" y="213" width="0.9786%" height="15" fill="rgb(226,143,9)" fg:x="200543" fg:w="2159"/><text x="91.1919%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="91.8775%" y="197" width="0.0299%" height="15" fill="rgb(234,43,37)" fg:x="202702" fg:w="66"/><text x="92.1705%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="91.9074%" y="197" width="0.0304%" height="15" fill="rgb(224,188,11)" fg:x="202768" fg:w="67"/><text x="92.2004%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="91.8775%" y="213" width="0.1033%" height="15" fill="rgb(233,113,28)" fg:x="202702" fg:w="228"/><text x="92.1705%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,452 instructions, 1.11%)</title><rect x="90.8953%" y="229" width="1.1114%" height="15" fill="rgb(215,16,1)" fg:x="200535" fg:w="2452"/><text x="91.1883%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="92.0067%" y="213" width="0.0299%" height="15" fill="rgb(238,74,38)" fg:x="202987" fg:w="66"/><text x="92.2997%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="92.0366%" y="213" width="0.0304%" height="15" fill="rgb(221,66,35)" fg:x="203053" fg:w="67"/><text x="92.3296%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="92.0067%" y="229" width="0.1033%" height="15" fill="rgb(251,225,2)" fg:x="202987" fg:w="228"/><text x="92.2997%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,745 instructions, 1.24%)</title><rect x="90.8917%" y="245" width="1.2442%" height="15" fill="rgb(240,169,18)" fg:x="200527" fg:w="2745"/><text x="91.1846%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="92.1359%" y="229" width="0.0299%" height="15" fill="rgb(243,130,50)" fg:x="203272" fg:w="66"/><text x="92.4288%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="92.1658%" y="229" width="0.0304%" height="15" fill="rgb(228,75,13)" fg:x="203338" fg:w="67"/><text x="92.4588%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="92.1359%" y="245" width="0.1033%" height="15" fill="rgb(252,95,35)" fg:x="203272" fg:w="228"/><text x="92.4288%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,038 instructions, 1.38%)</title><rect x="90.8880%" y="261" width="1.3770%" height="15" fill="rgb(222,180,54)" fg:x="200519" fg:w="3038"/><text x="91.1810%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="92.2651%" y="245" width="0.0299%" height="15" fill="rgb(250,110,34)" fg:x="203557" fg:w="66"/><text x="92.5580%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="92.2950%" y="245" width="0.0304%" height="15" fill="rgb(208,100,21)" fg:x="203623" fg:w="67"/><text x="92.5879%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="92.2651%" y="261" width="0.1033%" height="15" fill="rgb(209,123,47)" fg:x="203557" fg:w="228"/><text x="92.5580%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,323 instructions, 1.51%)</title><rect x="90.8880%" y="277" width="1.5062%" height="15" fill="rgb(237,147,9)" fg:x="200519" fg:w="3323"/><text x="91.1810%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (66 instructions, 0.03%)</title><rect x="92.3979%" y="261" width="0.0299%" height="15" fill="rgb(228,206,23)" fg:x="203850" fg:w="66"/><text x="92.6908%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.03%)</title><rect x="92.4278%" y="261" width="0.0304%" height="15" fill="rgb(217,174,46)" fg:x="203916" fg:w="67"/><text x="92.7207%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (228 instructions, 0.10%)</title><rect x="92.3979%" y="277" width="0.1033%" height="15" fill="rgb(231,126,21)" fg:x="203850" fg:w="228"/><text x="92.6908%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,616 instructions, 1.64%)</title><rect x="90.8880%" y="293" width="1.6390%" height="15" fill="rgb(245,26,1)" fg:x="200519" fg:w="3616"/><text x="91.1810%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="92.5270%" y="293" width="0.0372%" height="15" fill="rgb(224,138,39)" fg:x="204135" fg:w="82"/><text x="92.8200%" y="303.50"></text></g><g><title>candid::ser::IDLBuilder::new (53 instructions, 0.02%)</title><rect x="92.5642%" y="293" width="0.0240%" height="15" fill="rgb(208,97,3)" fg:x="204217" fg:w="53"/><text x="92.8572%" y="303.50"></text></g><g><title>candid::types::internal::find_type (24 instructions, 0.01%)</title><rect x="92.5882%" y="261" width="0.0109%" height="15" fill="rgb(222,77,29)" fg:x="204270" fg:w="24"/><text x="92.8812%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (169 instructions, 0.08%)</title><rect x="92.5991%" y="261" width="0.0766%" height="15" fill="rgb(243,188,36)" fg:x="204294" fg:w="169"/><text x="92.8921%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="92.6757%" y="245" width="0.0372%" height="15" fill="rgb(218,214,3)" fg:x="204463" fg:w="82"/><text x="92.9687%" y="255.50"></text></g><g><title>candid::types::internal::env_add (166 instructions, 0.08%)</title><rect x="92.6757%" y="261" width="0.0752%" height="15" fill="rgb(211,183,45)" fg:x="204463" fg:w="166"/><text x="92.9687%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="92.7509%" y="261" width="0.0372%" height="15" fill="rgb(230,218,25)" fg:x="204629" fg:w="82"/><text x="93.0439%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="92.7881%" y="261" width="0.0372%" height="15" fill="rgb(233,86,6)" fg:x="204711" fg:w="82"/><text x="93.0811%" y="271.50"></text></g><g><title>memcmp (675 instructions, 0.31%)</title><rect x="92.8253%" y="245" width="0.3060%" height="15" fill="rgb(220,59,24)" fg:x="204793" fg:w="675"/><text x="93.1183%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="93.1312%" y="229" width="0.0403%" height="15" fill="rgb(227,60,1)" fg:x="205468" fg:w="89"/><text x="93.4242%" y="239.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 instructions, 0.07%)</title><rect x="93.1312%" y="245" width="0.0725%" height="15" fill="rgb(216,212,54)" fg:x="205468" fg:w="160"/><text x="93.4242%" y="255.50"></text></g><g><title>candid::types::internal::env_add (1,014 instructions, 0.46%)</title><rect x="92.8253%" y="261" width="0.4596%" height="15" fill="rgb(227,81,54)" fg:x="204793" fg:w="1014"/><text x="93.1183%" y="271.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.02%)</title><rect x="93.2849%" y="245" width="0.0154%" height="15" fill="rgb(206,204,43)" fg:x="205807" fg:w="34"/><text x="93.5779%" y="255.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.02%)</title><rect x="93.3003%" y="245" width="0.0154%" height="15" fill="rgb(219,29,26)" fg:x="205841" fg:w="34"/><text x="93.5933%" y="255.50"></text></g><g><title>candid::types::internal::env_id (327 instructions, 0.15%)</title><rect x="93.2849%" y="261" width="0.1482%" height="15" fill="rgb(252,40,36)" fg:x="205807" fg:w="327"/><text x="93.5779%" y="271.50"></text></g><g><title>candid::types::CandidType::ty (2,005 instructions, 0.91%)</title><rect x="92.5882%" y="277" width="0.9088%" height="15" fill="rgb(224,205,39)" fg:x="204270" fg:w="2005"/><text x="92.8812%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="93.4970%" y="245" width="0.0372%" height="15" fill="rgb(222,13,21)" fg:x="206275" fg:w="82"/><text x="93.7900%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="93.4970%" y="261" width="0.0558%" height="15" fill="rgb(243,139,6)" fg:x="206275" fg:w="123"/><text x="93.7900%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (210 instructions, 0.10%)</title><rect x="93.4970%" y="277" width="0.0952%" height="15" fill="rgb(237,101,11)" fg:x="206275" fg:w="210"/><text x="93.7900%" y="287.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.02%)</title><rect x="93.5922%" y="261" width="0.0172%" height="15" fill="rgb(254,49,28)" fg:x="206485" fg:w="38"/><text x="93.8852%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="93.6094%" y="261" width="0.0372%" height="15" fill="rgb(223,41,21)" fg:x="206523" fg:w="82"/><text x="93.9024%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="93.6466%" y="229" width="0.0372%" height="15" fill="rgb(225,103,29)" fg:x="206605" fg:w="82"/><text x="93.9396%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="93.6466%" y="245" width="0.0558%" height="15" fill="rgb(244,82,43)" fg:x="206605" fg:w="123"/><text x="93.9396%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (199 instructions, 0.09%)</title><rect x="93.6466%" y="261" width="0.0902%" height="15" fill="rgb(217,39,3)" fg:x="206605" fg:w="199"/><text x="93.9396%" y="271.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (34 instructions, 0.02%)</title><rect x="93.7368%" y="245" width="0.0154%" height="15" fill="rgb(239,128,25)" fg:x="206804" fg:w="34"/><text x="94.0298%" y="255.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.01%)</title><rect x="93.7522%" y="245" width="0.0141%" height="15" fill="rgb(210,192,37)" fg:x="206838" fg:w="31"/><text x="94.0452%" y="255.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (202 instructions, 0.09%)</title><rect x="93.7368%" y="261" width="0.0916%" height="15" fill="rgb(219,98,18)" fg:x="206804" fg:w="202"/><text x="94.0298%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="93.8284%" y="213" width="0.0372%" height="15" fill="rgb(224,228,38)" fg:x="207006" fg:w="82"/><text x="94.1213%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="93.8284%" y="229" width="0.0558%" height="15" fill="rgb(241,129,43)" fg:x="207006" fg:w="123"/><text x="94.1213%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.09%)</title><rect x="93.8284%" y="245" width="0.0934%" height="15" fill="rgb(223,8,51)" fg:x="207006" fg:w="206"/><text x="94.1213%" y="255.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.12%)</title><rect x="93.8284%" y="261" width="0.1178%" height="15" fill="rgb(233,76,24)" fg:x="207006" fg:w="260"/><text x="94.1213%" y="271.50"></text></g><g><title>candid::ser::TypeSerialize::encode (68 instructions, 0.03%)</title><rect x="93.9462%" y="261" width="0.0308%" height="15" fill="rgb(219,115,10)" fg:x="207266" fg:w="68"/><text x="94.2392%" y="271.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (1,126 instructions, 0.51%)</title><rect x="93.5922%" y="277" width="0.5104%" height="15" fill="rgb(222,137,12)" fg:x="206485" fg:w="1126"/><text x="93.8852%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="94.1089%" y="229" width="0.0372%" height="15" fill="rgb(216,192,16)" fg:x="207625" fg:w="82"/><text x="94.4019%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="94.1089%" y="245" width="0.0558%" height="15" fill="rgb(247,6,27)" fg:x="207625" fg:w="123"/><text x="94.4019%" y="255.50"></text></g><g><title>__rust_realloc (133 instructions, 0.06%)</title><rect x="94.2023%" y="229" width="0.0603%" height="15" fill="rgb(254,39,44)" fg:x="207831" fg:w="133"/><text x="94.4953%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.08%)</title><rect x="94.2023%" y="245" width="0.0798%" height="15" fill="rgb(251,116,35)" fg:x="207831" fg:w="176"/><text x="94.4953%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (468 instructions, 0.21%)</title><rect x="94.1089%" y="261" width="0.2121%" height="15" fill="rgb(208,61,44)" fg:x="207625" fg:w="468"/><text x="94.4019%" y="271.50"></text></g><g><title>memcpy (312 instructions, 0.14%)</title><rect x="94.3211%" y="261" width="0.1414%" height="15" fill="rgb(250,34,5)" fg:x="208093" fg:w="312"/><text x="94.6140%" y="271.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (873 instructions, 0.40%)</title><rect x="94.1089%" y="277" width="0.3957%" height="15" fill="rgb(241,40,15)" fg:x="207625" fg:w="873"/><text x="94.4019%" y="287.50"></text></g><g><title>memcmp (675 instructions, 0.31%)</title><rect x="94.5549%" y="245" width="0.3060%" height="15" fill="rgb(229,182,2)" fg:x="208609" fg:w="675"/><text x="94.8479%" y="255.50"></text></g><g><title>candid::types::internal::find_type (829 instructions, 0.38%)</title><rect x="94.5549%" y="261" width="0.3758%" height="15" fill="rgb(244,148,52)" fg:x="208609" fg:w="829"/><text x="94.8479%" y="271.50"></text></g><g><title>candid::types::CandidType::ty (873 instructions, 0.40%)</title><rect x="94.5549%" y="277" width="0.3957%" height="15" fill="rgb(225,211,4)" fg:x="208609" fg:w="873"/><text x="94.8479%" y="287.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.05%)</title><rect x="94.9506%" y="261" width="0.0503%" height="15" fill="rgb(208,222,47)" fg:x="209482" fg:w="111"/><text x="95.2436%" y="271.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (191 instructions, 0.09%)</title><rect x="94.9506%" y="277" width="0.0866%" height="15" fill="rgb(233,162,0)" fg:x="209482" fg:w="191"/><text x="95.2436%" y="287.50"></text></g><g><title>__rust_realloc (133 instructions, 0.06%)</title><rect x="95.0436%" y="229" width="0.0603%" height="15" fill="rgb(241,54,13)" fg:x="209687" fg:w="133"/><text x="95.3365%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 instructions, 0.08%)</title><rect x="95.0436%" y="245" width="0.0798%" height="15" fill="rgb(213,89,18)" fg:x="209687" fg:w="176"/><text x="95.3365%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (70 instructions, 0.03%)</title><rect x="95.1623%" y="213" width="0.0317%" height="15" fill="rgb(215,170,37)" fg:x="209949" fg:w="70"/><text x="95.4553%" y="223.50"></text></g><g><title>memcpy (328 instructions, 0.15%)</title><rect x="95.1940%" y="213" width="0.1487%" height="15" fill="rgb(216,133,15)" fg:x="210019" fg:w="328"/><text x="95.4870%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="95.3427%" y="213" width="0.0276%" height="15" fill="rgb(230,42,19)" fg:x="210347" fg:w="61"/><text x="95.6357%" y="223.50"></text></g><g><title>__rust_realloc (590 instructions, 0.27%)</title><rect x="95.1623%" y="229" width="0.2674%" height="15" fill="rgb(221,103,41)" fg:x="209949" fg:w="590"/><text x="95.4553%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (633 instructions, 0.29%)</title><rect x="95.1623%" y="245" width="0.2869%" height="15" fill="rgb(220,142,31)" fg:x="209949" fg:w="633"/><text x="95.4553%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (981 instructions, 0.44%)</title><rect x="95.0436%" y="261" width="0.4447%" height="15" fill="rgb(239,218,4)" fg:x="209687" fg:w="981"/><text x="95.3365%" y="271.50"></text></g><g><title>memcpy (3,056 instructions, 1.39%)</title><rect x="95.4882%" y="261" width="1.3852%" height="15" fill="rgb(232,16,4)" fg:x="210668" fg:w="3056"/><text x="95.7812%" y="271.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,172 instructions, 1.89%)</title><rect x="95.0436%" y="277" width="1.8910%" height="15" fill="rgb(226,213,25)" fg:x="209687" fg:w="4172"/><text x="95.3365%" y="287.50"></text></g><g><title>candid::ser::IDLBuilder::arg (9,692 instructions, 4.39%)</title><rect x="92.5882%" y="293" width="4.3930%" height="15" fill="rgb(235,135,19)" fg:x="204270" fg:w="9692"/><text x="92.8812%" y="303.50">cand..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (67 instructions, 0.03%)</title><rect x="96.9813%" y="293" width="0.0304%" height="15" fill="rgb(240,107,29)" fg:x="213962" fg:w="67"/><text x="97.2742%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.04%)</title><rect x="97.0116%" y="293" width="0.0376%" height="15" fill="rgb(206,164,44)" fg:x="214029" fg:w="83"/><text x="97.3046%" y="303.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.23%)</title><rect x="97.0493%" y="277" width="0.2348%" height="15" fill="rgb(210,23,48)" fg:x="214112" fg:w="518"/><text x="97.3422%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="97.2840%" y="229" width="0.0372%" height="15" fill="rgb(212,138,25)" fg:x="214630" fg:w="82"/><text x="97.5770%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="97.2840%" y="245" width="0.0558%" height="15" fill="rgb(224,152,3)" fg:x="214630" fg:w="123"/><text x="97.5770%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.09%)</title><rect x="97.2840%" y="261" width="0.0934%" height="15" fill="rgb(214,38,23)" fg:x="214630" fg:w="206"/><text x="97.5770%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="97.3774%" y="261" width="0.0372%" height="15" fill="rgb(215,161,10)" fg:x="214836" fg:w="82"/><text x="97.6704%" y="271.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.4146%" y="261" width="0.0231%" height="15" fill="rgb(240,185,7)" fg:x="214918" fg:w="51"/><text x="97.7076%" y="271.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.4377%" y="261" width="0.0231%" height="15" fill="rgb(244,104,25)" fg:x="214969" fg:w="51"/><text x="97.7307%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="97.4608%" y="261" width="0.0276%" height="15" fill="rgb(242,140,44)" fg:x="215020" fg:w="61"/><text x="97.7538%" y="271.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.05%)</title><rect x="97.4885%" y="245" width="0.0503%" height="15" fill="rgb(245,30,19)" fg:x="215081" fg:w="111"/><text x="97.7814%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.04%)</title><rect x="97.5388%" y="197" width="0.0372%" height="15" fill="rgb(219,208,35)" fg:x="215192" fg:w="82"/><text x="97.8317%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 instructions, 0.06%)</title><rect x="97.5388%" y="213" width="0.0558%" height="15" fill="rgb(235,200,7)" fg:x="215192" fg:w="123"/><text x="97.8317%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (206 instructions, 0.09%)</title><rect x="97.5388%" y="229" width="0.0934%" height="15" fill="rgb(220,193,10)" fg:x="215192" fg:w="206"/><text x="97.8317%" y="239.50"></text></g><g><title>leb128::write::signed (260 instructions, 0.12%)</title><rect x="97.5388%" y="245" width="0.1178%" height="15" fill="rgb(212,216,39)" fg:x="215192" fg:w="260"/><text x="97.8317%" y="255.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.05%)</title><rect x="97.7174%" y="245" width="0.0503%" height="15" fill="rgb(212,134,19)" fg:x="215586" fg:w="111"/><text x="98.0103%" y="255.50"></text></g><g><title>leb128::write::signed (43 instructions, 0.02%)</title><rect x="97.7677%" y="245" width="0.0195%" height="15" fill="rgb(230,57,24)" fg:x="215697" fg:w="43"/><text x="98.0606%" y="255.50"></text></g><g><title>candid::ser::TypeSerialize::encode (793 instructions, 0.36%)</title><rect x="97.4885%" y="261" width="0.3594%" height="15" fill="rgb(238,209,37)" fg:x="215081" fg:w="793"/><text x="97.7814%" y="271.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.8479%" y="261" width="0.0231%" height="15" fill="rgb(247,11,45)" fg:x="215874" fg:w="51"/><text x="98.1409%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (61 instructions, 0.03%)</title><rect x="97.8710%" y="261" width="0.0276%" height="15" fill="rgb(222,126,6)" fg:x="215925" fg:w="61"/><text x="98.1640%" y="271.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (1,828 instructions, 0.83%)</title><rect x="97.2840%" y="277" width="0.8286%" height="15" fill="rgb(245,77,24)" fg:x="214630" fg:w="1828"/><text x="97.5770%" y="287.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.24%)</title><rect x="98.1126%" y="277" width="0.2357%" height="15" fill="rgb(227,14,24)" fg:x="216458" fg:w="520"/><text x="98.4056%" y="287.50"></text></g><g><title>std::io::Write::write_all (1,060 instructions, 0.48%)</title><rect x="98.3483%" y="277" width="0.4805%" height="15" fill="rgb(211,112,42)" fg:x="216978" fg:w="1060"/><text x="98.6413%" y="287.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (4,003 instructions, 1.81%)</title><rect x="97.0493%" y="293" width="1.8144%" height="15" fill="rgb(230,103,42)" fg:x="214112" fg:w="4003"/><text x="97.3422%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="98.8637%" y="293" width="0.0403%" height="15" fill="rgb(228,125,42)" fg:x="218115" fg:w="89"/><text x="99.1566%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.04%)</title><rect x="98.9040%" y="293" width="0.0403%" height="15" fill="rgb(243,33,6)" fg:x="218204" fg:w="89"/><text x="99.1970%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="98.9507%" y="261" width="0.0122%" height="15" fill="rgb(231,2,40)" fg:x="218307" fg:w="27"/><text x="99.2437%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.06%)</title><rect x="98.9507%" y="277" width="0.0644%" height="15" fill="rgb(224,200,53)" fg:x="218307" fg:w="142"/><text x="99.2437%" y="287.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (293 instructions, 0.13%)</title><rect x="98.9443%" y="293" width="0.1328%" height="15" fill="rgb(215,116,36)" fg:x="218293" fg:w="293"/><text x="99.2373%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="99.1338%" y="277" width="0.0122%" height="15" fill="rgb(240,23,51)" fg:x="218711" fg:w="27"/><text x="99.4268%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (205 instructions, 0.09%)</title><rect x="99.0935%" y="293" width="0.0929%" height="15" fill="rgb(221,72,5)" fg:x="218622" fg:w="205"/><text x="99.3864%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (97 instructions, 0.04%)</title><rect x="99.1864%" y="293" width="0.0440%" height="15" fill="rgb(245,142,9)" fg:x="218827" fg:w="97"/><text x="99.4794%" y="303.50"></text></g><g><title>certified_map::__canister_method_witness::{{closure}} (219,874 instructions, 99.66%)</title><rect x="0.1092%" y="309" width="99.6610%" height="15" fill="rgb(207,34,16)" fg:x="241" fg:w="219874"/><text x="0.4022%" y="319.50">certified_map::__canister_method_witness::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="99.7774%" y="277" width="0.0122%" height="15" fill="rgb(252,101,12)" fg:x="220131" fg:w="27"/><text x="100.0704%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (27 instructions, 0.01%)</title><rect x="99.8418%" y="277" width="0.0122%" height="15" fill="rgb(239,89,37)" fg:x="220273" fg:w="27"/><text x="100.1348%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (278 instructions, 0.13%)</title><rect x="99.7774%" y="293" width="0.1260%" height="15" fill="rgb(252,227,37)" fg:x="220131" fg:w="278"/><text x="100.0704%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (396 instructions, 0.18%)</title><rect x="99.7770%" y="309" width="0.1795%" height="15" fill="rgb(212,164,17)" fg:x="220130" fg:w="396"/><text x="100.0700%" y="319.50"></text></g><g><title>all (220,622 instructions, 100%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(240,86,13)" fg:x="0" fg:w="220622"/><text x="0.2930%" y="351.50"></text></g><g><title>canister_update witness (220,622 instructions, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(233,183,32)" fg:x="0" fg:w="220622"/><text x="0.2930%" y="335.50">canister_update witness</text></g></svg></svg>