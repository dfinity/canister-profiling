<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="301339"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.04%)</title><rect x="0.0080%" y="389" width="0.0402%" height="15" fill="rgb(235,32,20)" fg:x="24" fg:w="121"/><text x="0.3009%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.03%)</title><rect x="0.0481%" y="389" width="0.0256%" height="15" fill="rgb(251,151,49)" fg:x="145" fg:w="77"/><text x="0.3411%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.0737%" y="357" width="0.0302%" height="15" fill="rgb(254,141,38)" fg:x="222" fg:w="91"/><text x="0.3666%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.1039%" y="341" width="0.0272%" height="15" fill="rgb(209,118,44)" fg:x="313" fg:w="82"/><text x="0.3968%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.1311%" y="341" width="0.1460%" height="15" fill="rgb(205,81,4)" fg:x="395" fg:w="440"/><text x="0.4241%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.2771%" y="341" width="0.0315%" height="15" fill="rgb(241,25,6)" fg:x="835" fg:w="95"/><text x="0.5701%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3086%" y="341" width="0.0199%" height="15" fill="rgb(212,179,29)" fg:x="930" fg:w="60"/><text x="0.6016%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3285%" y="341" width="0.0199%" height="15" fill="rgb(241,40,32)" fg:x="990" fg:w="60"/><text x="0.6215%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3484%" y="341" width="0.0199%" height="15" fill="rgb(223,35,2)" fg:x="1050" fg:w="60"/><text x="0.6414%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3684%" y="341" width="0.0199%" height="15" fill="rgb(221,125,54)" fg:x="1110" fg:w="60"/><text x="0.6613%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.3883%" y="341" width="0.0272%" height="15" fill="rgb(230,5,49)" fg:x="1170" fg:w="82"/><text x="0.6812%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.4155%" y="341" width="0.0232%" height="15" fill="rgb(221,157,7)" fg:x="1252" fg:w="70"/><text x="0.7084%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.4387%" y="341" width="0.1460%" height="15" fill="rgb(242,163,10)" fg:x="1322" fg:w="440"/><text x="0.7317%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.5910%" y="325" width="0.0302%" height="15" fill="rgb(232,30,2)" fg:x="1781" fg:w="91"/><text x="0.8840%" y="335.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="0.6212%" y="293" width="0.0222%" height="15" fill="rgb(245,102,40)" fg:x="1872" fg:w="67"/><text x="0.9142%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.03%)</title><rect x="0.6212%" y="309" width="0.0325%" height="15" fill="rgb(242,10,41)" fg:x="1872" fg:w="98"/><text x="0.9142%" y="319.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="0.6574%" y="245" width="0.0116%" height="15" fill="rgb(236,184,36)" fg:x="1981" fg:w="35"/><text x="0.9504%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.02%)</title><rect x="0.6574%" y="261" width="0.0219%" height="15" fill="rgb(247,147,48)" fg:x="1981" fg:w="66"/><text x="0.9504%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.05%)</title><rect x="0.6537%" y="277" width="0.0488%" height="15" fill="rgb(226,166,2)" fg:x="1970" fg:w="147"/><text x="0.9467%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.07%)</title><rect x="0.6537%" y="293" width="0.0704%" height="15" fill="rgb(251,196,7)" fg:x="1970" fg:w="212"/><text x="0.9467%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.07%)</title><rect x="0.6537%" y="309" width="0.0737%" height="15" fill="rgb(241,40,13)" fg:x="1970" fg:w="222"/><text x="0.9467%" y="319.50"></text></g><g><title>core::fmt::write (461 instructions, 0.15%)</title><rect x="0.6212%" y="325" width="0.1530%" height="15" fill="rgb(254,4,12)" fg:x="1872" fg:w="461"/><text x="0.9142%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 0.23%)</title><rect x="0.5910%" y="341" width="0.2313%" height="15" fill="rgb(244,139,49)" fg:x="1781" fg:w="697"/><text x="0.8840%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.8223%" y="341" width="0.0315%" height="15" fill="rgb(227,28,42)" fg:x="2478" fg:w="95"/><text x="1.1153%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="0.8539%" y="341" width="0.0209%" height="15" fill="rgb(231,135,32)" fg:x="2573" fg:w="63"/><text x="1.1468%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="0.8748%" y="341" width="0.0252%" height="15" fill="rgb(244,182,3)" fg:x="2636" fg:w="76"/><text x="1.1677%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.9000%" y="341" width="0.0232%" height="15" fill="rgb(247,46,19)" fg:x="2712" fg:w="70"/><text x="1.1930%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.9232%" y="325" width="0.1460%" height="15" fill="rgb(251,179,10)" fg:x="2782" fg:w="440"/><text x="1.2162%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.0755%" y="309" width="0.0302%" height="15" fill="rgb(229,222,18)" fg:x="3241" fg:w="91"/><text x="1.3685%" y="319.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="1.1057%" y="277" width="0.0222%" height="15" fill="rgb(251,107,20)" fg:x="3332" fg:w="67"/><text x="1.3987%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.03%)</title><rect x="1.1057%" y="293" width="0.0325%" height="15" fill="rgb(233,193,19)" fg:x="3332" fg:w="98"/><text x="1.3987%" y="303.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="1.1419%" y="229" width="0.0116%" height="15" fill="rgb(229,146,53)" fg:x="3441" fg:w="35"/><text x="1.4349%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.02%)</title><rect x="1.1419%" y="245" width="0.0219%" height="15" fill="rgb(244,52,11)" fg:x="3441" fg:w="66"/><text x="1.4349%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.05%)</title><rect x="1.1383%" y="261" width="0.0488%" height="15" fill="rgb(245,211,46)" fg:x="3430" fg:w="147"/><text x="1.4312%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.07%)</title><rect x="1.1383%" y="277" width="0.0704%" height="15" fill="rgb(213,8,31)" fg:x="3430" fg:w="212"/><text x="1.4312%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.07%)</title><rect x="1.1383%" y="293" width="0.0737%" height="15" fill="rgb(205,101,39)" fg:x="3430" fg:w="222"/><text x="1.4312%" y="303.50"></text></g><g><title>core::fmt::write (461 instructions, 0.15%)</title><rect x="1.1057%" y="309" width="0.1530%" height="15" fill="rgb(212,157,1)" fg:x="3332" fg:w="461"/><text x="1.3987%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 0.23%)</title><rect x="1.0755%" y="325" width="0.2313%" height="15" fill="rgb(232,30,46)" fg:x="3241" fg:w="697"/><text x="1.3685%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="1.3068%" y="325" width="0.0315%" height="15" fill="rgb(216,201,6)" fg:x="3938" fg:w="95"/><text x="1.5998%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="1.3384%" y="325" width="0.0209%" height="15" fill="rgb(209,18,6)" fg:x="4033" fg:w="63"/><text x="1.6313%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,503 instructions, 0.50%)</title><rect x="0.9232%" y="341" width="0.4988%" height="15" fill="rgb(219,138,3)" fg:x="2782" fg:w="1503"/><text x="1.2162%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="1.4220%" y="341" width="0.0252%" height="15" fill="rgb(210,91,46)" fg:x="4285" fg:w="76"/><text x="1.7150%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4661%" y="341" width="0.0302%" height="15" fill="rgb(241,80,44)" fg:x="4418" fg:w="91"/><text x="1.7591%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4963%" y="341" width="0.0302%" height="15" fill="rgb(236,205,36)" fg:x="4509" fg:w="91"/><text x="1.7893%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.5278%" y="341" width="0.1420%" height="15" fill="rgb(205,59,37)" fg:x="4604" fg:w="428"/><text x="1.8208%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.6699%" y="341" width="0.1420%" height="15" fill="rgb(239,166,39)" fg:x="5032" fg:w="428"/><text x="1.9628%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,118 instructions, 2.03%)</title><rect x="0.1039%" y="357" width="2.0303%" height="15" fill="rgb(239,146,40)" fg:x="313" fg:w="6118"/><text x="0.3968%" y="367.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="2.1341%" y="357" width="0.1261%" height="15" fill="rgb(231,11,52)" fg:x="6431" fg:w="380"/><text x="2.4271%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="2.2666%" y="309" width="0.0285%" height="15" fill="rgb(253,21,37)" fg:x="6830" fg:w="86"/><text x="2.5595%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="2.3067%" y="309" width="0.0372%" height="15" fill="rgb(224,87,39)" fg:x="6951" fg:w="112"/><text x="2.5997%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.09%)</title><rect x="2.2666%" y="325" width="0.0889%" height="15" fill="rgb(249,15,46)" fg:x="6830" fg:w="268"/><text x="2.5595%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (342 instructions, 0.11%)</title><rect x="2.2602%" y="341" width="0.1135%" height="15" fill="rgb(250,37,51)" fg:x="6811" fg:w="342"/><text x="2.5532%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (391 instructions, 0.13%)</title><rect x="2.2602%" y="357" width="0.1298%" height="15" fill="rgb(205,185,43)" fg:x="6811" fg:w="391"/><text x="2.5532%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="2.3900%" y="357" width="0.0209%" height="15" fill="rgb(206,65,41)" fg:x="7202" fg:w="63"/><text x="2.6830%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (8,191 instructions, 2.72%)</title><rect x="0.0737%" y="373" width="2.7182%" height="15" fill="rgb(236,159,32)" fg:x="222" fg:w="8191"/><text x="0.3666%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="2.7919%" y="341" width="0.0302%" height="15" fill="rgb(228,199,27)" fg:x="8413" fg:w="91"/><text x="3.0848%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 instructions, 0.04%)</title><rect x="2.7919%" y="357" width="0.0425%" height="15" fill="rgb(212,0,37)" fg:x="8413" fg:w="128"/><text x="3.0848%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.07%)</title><rect x="2.7919%" y="373" width="0.0687%" height="15" fill="rgb(248,50,11)" fg:x="8413" fg:w="207"/><text x="3.0848%" y="383.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.8921%" y="277" width="0.0139%" height="15" fill="rgb(231,164,25)" fg:x="8715" fg:w="42"/><text x="3.1851%" y="287.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9060%" y="261" width="0.0139%" height="15" fill="rgb(238,38,39)" fg:x="8757" fg:w="42"/><text x="3.1990%" y="271.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9200%" y="245" width="0.0139%" height="15" fill="rgb(210,15,50)" fg:x="8799" fg:w="42"/><text x="3.2129%" y="255.50"></text></g><g><title>memcmp (65 instructions, 0.02%)</title><rect x="2.9339%" y="229" width="0.0216%" height="15" fill="rgb(251,126,36)" fg:x="8841" fg:w="65"/><text x="3.2269%" y="239.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9555%" y="213" width="0.0139%" height="15" fill="rgb(243,59,26)" fg:x="8906" fg:w="42"/><text x="3.2484%" y="223.50"></text></g><g><title>memcmp (169 instructions, 0.06%)</title><rect x="2.9694%" y="197" width="0.0561%" height="15" fill="rgb(215,24,30)" fg:x="8948" fg:w="169"/><text x="3.2624%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0255%" y="197" width="0.0302%" height="15" fill="rgb(253,50,51)" fg:x="9117" fg:w="91"/><text x="3.3185%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0557%" y="181" width="0.0302%" height="15" fill="rgb(252,2,16)" fg:x="9208" fg:w="91"/><text x="3.3487%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="3.0859%" y="181" width="0.1142%" height="15" fill="rgb(209,123,36)" fg:x="9299" fg:w="344"/><text x="3.3789%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.2001%" y="181" width="0.0302%" height="15" fill="rgb(245,60,15)" fg:x="9643" fg:w="91"/><text x="3.4930%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (838 instructions, 0.28%)</title><rect x="3.0557%" y="197" width="0.2781%" height="15" fill="rgb(246,4,13)" fg:x="9208" fg:w="838"/><text x="3.3487%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,286 instructions, 0.43%)</title><rect x="2.9694%" y="213" width="0.4268%" height="15" fill="rgb(210,223,46)" fg:x="8948" fg:w="1286"/><text x="3.2624%" y="223.50"></text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="3.3962%" y="197" width="0.0796%" height="15" fill="rgb(248,1,9)" fg:x="10234" fg:w="240"/><text x="3.6891%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.4758%" y="197" width="0.1673%" height="15" fill="rgb(254,2,34)" fg:x="10474" fg:w="504"/><text x="3.7688%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="3.6431%" y="197" width="0.0435%" height="15" fill="rgb(239,176,1)" fg:x="10978" fg:w="131"/><text x="3.9360%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.6865%" y="197" width="0.1673%" height="15" fill="rgb(250,25,32)" fg:x="11109" fg:w="504"/><text x="3.9795%" y="207.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="3.8538%" y="181" width="0.0607%" height="15" fill="rgb(225,28,39)" fg:x="11613" fg:w="183"/><text x="4.1468%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="3.9145%" y="181" width="1.6549%" height="15" fill="rgb(230,166,37)" fg:x="11796" fg:w="4987"/><text x="4.2075%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="3.8538%" y="197" width="1.8162%" height="15" fill="rgb(246,220,4)" fg:x="11613" fg:w="5473"/><text x="4.1468%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="3.3962%" y="213" width="2.3415%" height="15" fill="rgb(219,119,33)" fg:x="10234" fg:w="7056"/><text x="3.6891%" y="223.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="5.7377%" y="197" width="0.0796%" height="15" fill="rgb(221,207,38)" fg:x="17290" fg:w="240"/><text x="6.0307%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="5.8174%" y="197" width="0.1673%" height="15" fill="rgb(214,153,5)" fg:x="17530" fg:w="504"/><text x="6.1103%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="5.9846%" y="197" width="0.0435%" height="15" fill="rgb(223,50,16)" fg:x="18034" fg:w="131"/><text x="6.2776%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.0281%" y="197" width="0.1673%" height="15" fill="rgb(209,207,12)" fg:x="18165" fg:w="504"/><text x="6.3211%" y="207.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="6.1953%" y="181" width="0.0212%" height="15" fill="rgb(207,3,46)" fg:x="18669" fg:w="64"/><text x="6.4883%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="6.2166%" y="181" width="1.6549%" height="15" fill="rgb(232,45,53)" fg:x="18733" fg:w="4987"/><text x="6.5096%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="7.8715%" y="181" width="1.6549%" height="15" fill="rgb(206,140,15)" fg:x="23720" fg:w="4987"/><text x="8.1645%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="6.1953%" y="197" width="3.4446%" height="15" fill="rgb(245,66,17)" fg:x="18669" fg:w="10380"/><text x="6.4883%" y="207.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="5.7377%" y="213" width="3.9879%" height="15" fill="rgb(221,25,37)" fg:x="17290" fg:w="12017"/><text x="6.0307%" y="223.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="9.7256%" y="181" width="0.0796%" height="15" fill="rgb(215,99,47)" fg:x="29307" fg:w="240"/><text x="10.0186%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="9.8052%" y="181" width="0.1673%" height="15" fill="rgb(219,154,44)" fg:x="29547" fg:w="504"/><text x="10.0982%" y="191.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="9.9725%" y="181" width="0.0859%" height="15" fill="rgb(210,197,36)" fg:x="30051" fg:w="259"/><text x="10.2655%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="10.0584%" y="181" width="1.6549%" height="15" fill="rgb(217,137,10)" fg:x="30310" fg:w="4987"/><text x="10.3514%" y="191.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="11.7134%" y="181" width="0.0465%" height="15" fill="rgb(240,216,26)" fg:x="35297" fg:w="140"/><text x="12.0064%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="11.7598%" y="181" width="0.1673%" height="15" fill="rgb(242,76,17)" fg:x="35437" fg:w="504"/><text x="12.0528%" y="191.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="11.9271%" y="165" width="0.0644%" height="15" fill="rgb(243,142,51)" fg:x="35941" fg:w="194"/><text x="12.2201%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="11.9915%" y="165" width="1.6549%" height="15" fill="rgb(233,109,46)" fg:x="36135" fg:w="4987"/><text x="12.2844%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="11.9271%" y="181" width="1.8199%" height="15" fill="rgb(252,45,32)" fg:x="35941" fg:w="5484"/><text x="12.2201%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="9.7256%" y="197" width="4.1180%" height="15" fill="rgb(210,69,52)" fg:x="29307" fg:w="12409"/><text x="10.0186%" y="207.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="13.8435%" y="197" width="0.0302%" height="15" fill="rgb(242,30,2)" fg:x="41716" fg:w="91"/><text x="14.1365%" y="207.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="13.8737%" y="197" width="0.1142%" height="15" fill="rgb(246,137,1)" fg:x="41807" fg:w="344"/><text x="14.1667%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.38%)</title><rect x="9.7256%" y="213" width="4.3755%" height="15" fill="rgb(221,205,25)" fg:x="29307" fg:w="13185"/><text x="10.0186%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,791 instructions, 11.21%)</title><rect x="2.9555%" y="229" width="11.2136%" height="15" fill="rgb(224,44,43)" fg:x="8906" fg:w="33791"/><text x="3.2484%" y="239.50">ic_certified_m..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="14.1691%" y="213" width="0.0796%" height="15" fill="rgb(209,81,13)" fg:x="42697" fg:w="240"/><text x="14.4621%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.2487%" y="213" width="0.1673%" height="15" fill="rgb(227,88,4)" fg:x="42937" fg:w="504"/><text x="14.5417%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="14.4160%" y="213" width="0.0435%" height="15" fill="rgb(228,118,49)" fg:x="43441" fg:w="131"/><text x="14.7090%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.4595%" y="213" width="0.1673%" height="15" fill="rgb(225,215,27)" fg:x="43572" fg:w="504"/><text x="14.7524%" y="223.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="14.6267%" y="197" width="0.0607%" height="15" fill="rgb(235,226,1)" fg:x="44076" fg:w="183"/><text x="14.9197%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="14.6874%" y="197" width="1.6549%" height="15" fill="rgb(205,107,17)" fg:x="44259" fg:w="4987"/><text x="14.9804%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="14.6267%" y="213" width="1.8162%" height="15" fill="rgb(247,85,8)" fg:x="44076" fg:w="5473"/><text x="14.9197%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="14.1691%" y="229" width="2.3415%" height="15" fill="rgb(230,220,20)" fg:x="42697" fg:w="7056"/><text x="14.4621%" y="239.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="16.5106%" y="213" width="0.0796%" height="15" fill="rgb(237,22,6)" fg:x="49753" fg:w="240"/><text x="16.8036%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.5903%" y="213" width="0.1673%" height="15" fill="rgb(253,39,1)" fg:x="49993" fg:w="504"/><text x="16.8833%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="16.7575%" y="213" width="0.0435%" height="15" fill="rgb(251,206,50)" fg:x="50497" fg:w="131"/><text x="17.0505%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.8010%" y="213" width="0.1673%" height="15" fill="rgb(239,162,11)" fg:x="50628" fg:w="504"/><text x="17.0940%" y="223.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="16.9683%" y="197" width="0.0212%" height="15" fill="rgb(234,164,6)" fg:x="51132" fg:w="64"/><text x="17.2612%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="16.9895%" y="197" width="1.6549%" height="15" fill="rgb(238,112,10)" fg:x="51196" fg:w="4987"/><text x="17.2825%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="18.6445%" y="197" width="1.6549%" height="15" fill="rgb(232,78,29)" fg:x="56183" fg:w="4987"/><text x="18.9374%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="16.9683%" y="213" width="3.4446%" height="15" fill="rgb(232,20,13)" fg:x="51132" fg:w="10380"/><text x="17.2612%" y="223.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="16.5106%" y="229" width="3.9879%" height="15" fill="rgb(222,175,9)" fg:x="49753" fg:w="12017"/><text x="16.8036%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.4985%" y="213" width="0.0302%" height="15" fill="rgb(233,61,14)" fg:x="61770" fg:w="91"/><text x="20.7915%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="20.5287%" y="213" width="0.1142%" height="15" fill="rgb(224,152,29)" fg:x="61861" fg:w="344"/><text x="20.8217%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.6429%" y="213" width="0.0302%" height="15" fill="rgb(232,26,6)" fg:x="62205" fg:w="91"/><text x="20.9358%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="20.4985%" y="229" width="0.2814%" height="15" fill="rgb(210,116,11)" fg:x="61770" fg:w="848"/><text x="20.7915%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (53,981 instructions, 17.91%)</title><rect x="2.9339%" y="245" width="17.9137%" height="15" fill="rgb(238,213,15)" fg:x="8841" fg:w="53981"/><text x="3.2269%" y="255.50">ic_certified_map::rbtre..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="20.8476%" y="229" width="0.0796%" height="15" fill="rgb(236,177,32)" fg:x="62822" fg:w="240"/><text x="21.1406%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="20.9273%" y="229" width="0.1673%" height="15" fill="rgb(230,36,43)" fg:x="63062" fg:w="504"/><text x="21.2202%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="21.0945%" y="229" width="0.0435%" height="15" fill="rgb(212,76,23)" fg:x="63566" fg:w="131"/><text x="21.3875%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.1380%" y="229" width="0.1673%" height="15" fill="rgb(225,168,24)" fg:x="63697" fg:w="504"/><text x="21.4310%" y="239.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="21.3052%" y="213" width="0.0607%" height="15" fill="rgb(206,40,44)" fg:x="64201" fg:w="183"/><text x="21.5982%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="21.3660%" y="213" width="1.6549%" height="15" fill="rgb(251,213,6)" fg:x="64384" fg:w="4987"/><text x="21.6589%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="21.3052%" y="229" width="1.8162%" height="15" fill="rgb(220,7,47)" fg:x="64201" fg:w="5473"/><text x="21.5982%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="20.8476%" y="245" width="2.3415%" height="15" fill="rgb(254,130,53)" fg:x="62822" fg:w="7056"/><text x="21.1406%" y="255.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="23.1892%" y="229" width="0.0796%" height="15" fill="rgb(240,2,46)" fg:x="69878" fg:w="240"/><text x="23.4821%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.2688%" y="229" width="0.1673%" height="15" fill="rgb(252,144,40)" fg:x="70118" fg:w="504"/><text x="23.5618%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="23.4361%" y="229" width="0.0435%" height="15" fill="rgb(226,23,10)" fg:x="70622" fg:w="131"/><text x="23.7290%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.4795%" y="229" width="0.1673%" height="15" fill="rgb(212,204,35)" fg:x="70753" fg:w="504"/><text x="23.7725%" y="239.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="23.6468%" y="213" width="0.0212%" height="15" fill="rgb(218,201,15)" fg:x="71257" fg:w="64"/><text x="23.9398%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="23.6680%" y="213" width="1.6549%" height="15" fill="rgb(224,197,5)" fg:x="71321" fg:w="4987"/><text x="23.9610%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="25.3230%" y="213" width="1.6549%" height="15" fill="rgb(224,185,18)" fg:x="76308" fg:w="4987"/><text x="25.6159%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="23.6468%" y="229" width="3.4446%" height="15" fill="rgb(251,71,45)" fg:x="71257" fg:w="10380"/><text x="23.9398%" y="239.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="23.1892%" y="245" width="3.9879%" height="15" fill="rgb(216,74,24)" fg:x="69878" fg:w="12017"/><text x="23.4821%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.1770%" y="229" width="0.0302%" height="15" fill="rgb(250,36,51)" fg:x="81895" fg:w="91"/><text x="27.4700%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="27.2072%" y="229" width="0.1142%" height="15" fill="rgb(209,224,28)" fg:x="81986" fg:w="344"/><text x="27.5002%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.3214%" y="229" width="0.0302%" height="15" fill="rgb(228,5,10)" fg:x="82330" fg:w="91"/><text x="27.6144%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="27.1770%" y="245" width="0.2814%" height="15" fill="rgb(250,57,40)" fg:x="81895" fg:w="848"/><text x="27.4700%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (74,148 instructions, 24.61%)</title><rect x="2.9200%" y="261" width="24.6062%" height="15" fill="rgb(228,194,41)" fg:x="8799" fg:w="74148"/><text x="3.2129%" y="271.50">ic_certified_map::rbtree::RbTree&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="27.5261%" y="245" width="0.0796%" height="15" fill="rgb(206,68,23)" fg:x="82947" fg:w="240"/><text x="27.8191%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.6058%" y="245" width="0.1673%" height="15" fill="rgb(230,33,29)" fg:x="83187" fg:w="504"/><text x="27.8988%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="27.7730%" y="245" width="0.0435%" height="15" fill="rgb(210,39,32)" fg:x="83691" fg:w="131"/><text x="28.0660%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.8165%" y="245" width="0.1673%" height="15" fill="rgb(236,89,23)" fg:x="83822" fg:w="504"/><text x="28.1095%" y="255.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="27.9838%" y="229" width="0.0607%" height="15" fill="rgb(218,52,52)" fg:x="84326" fg:w="183"/><text x="28.2767%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="28.0445%" y="229" width="1.6549%" height="15" fill="rgb(235,154,5)" fg:x="84509" fg:w="4987"/><text x="28.3375%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="27.9838%" y="245" width="1.8162%" height="15" fill="rgb(223,168,9)" fg:x="84326" fg:w="5473"/><text x="28.2767%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="27.5261%" y="261" width="2.3415%" height="15" fill="rgb(220,8,33)" fg:x="82947" fg:w="7056"/><text x="27.8191%" y="271.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="29.8677%" y="245" width="0.0796%" height="15" fill="rgb(216,176,3)" fg:x="90003" fg:w="240"/><text x="30.1607%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="29.9473%" y="245" width="0.1673%" height="15" fill="rgb(254,150,22)" fg:x="90243" fg:w="504"/><text x="30.2403%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="30.1146%" y="245" width="0.0435%" height="15" fill="rgb(231,61,53)" fg:x="90747" fg:w="131"/><text x="30.4076%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.1581%" y="245" width="0.1673%" height="15" fill="rgb(249,177,41)" fg:x="90878" fg:w="504"/><text x="30.4510%" y="255.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="30.3253%" y="229" width="0.0212%" height="15" fill="rgb(221,122,7)" fg:x="91382" fg:w="64"/><text x="30.6183%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="30.3466%" y="229" width="1.6549%" height="15" fill="rgb(215,115,7)" fg:x="91446" fg:w="4987"/><text x="30.6395%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="32.0015%" y="229" width="1.6549%" height="15" fill="rgb(218,108,33)" fg:x="96433" fg:w="4987"/><text x="32.2945%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="30.3253%" y="245" width="3.4446%" height="15" fill="rgb(221,205,39)" fg:x="91382" fg:w="10380"/><text x="30.6183%" y="255.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="29.8677%" y="261" width="3.9879%" height="15" fill="rgb(220,171,18)" fg:x="90003" fg:w="12017"/><text x="30.1607%" y="271.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="33.8556%" y="229" width="0.0796%" height="15" fill="rgb(236,188,29)" fg:x="102020" fg:w="240"/><text x="34.1485%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="33.9352%" y="229" width="0.1673%" height="15" fill="rgb(239,29,5)" fg:x="102260" fg:w="504"/><text x="34.2282%" y="239.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="34.1025%" y="229" width="0.0859%" height="15" fill="rgb(236,114,44)" fg:x="102764" fg:w="259"/><text x="34.3954%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="34.1884%" y="229" width="1.6549%" height="15" fill="rgb(239,214,48)" fg:x="103023" fg:w="4987"/><text x="34.4814%" y="239.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="35.8434%" y="229" width="0.0465%" height="15" fill="rgb(241,56,8)" fg:x="108010" fg:w="140"/><text x="36.1363%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="35.8898%" y="229" width="0.1673%" height="15" fill="rgb(228,201,0)" fg:x="108150" fg:w="504"/><text x="36.1828%" y="239.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="36.0571%" y="213" width="0.0644%" height="15" fill="rgb(226,219,34)" fg:x="108654" fg:w="194"/><text x="36.3500%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="36.1214%" y="213" width="1.6549%" height="15" fill="rgb(209,204,54)" fg:x="108848" fg:w="4987"/><text x="36.4144%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="36.0571%" y="229" width="1.8199%" height="15" fill="rgb(251,160,17)" fg:x="108654" fg:w="5484"/><text x="36.3500%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="33.8556%" y="245" width="4.1180%" height="15" fill="rgb(235,15,25)" fg:x="102020" fg:w="12409"/><text x="34.1485%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="37.9735%" y="245" width="0.0302%" height="15" fill="rgb(216,209,28)" fg:x="114429" fg:w="91"/><text x="38.2665%" y="255.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="38.0037%" y="245" width="0.1142%" height="15" fill="rgb(248,123,21)" fg:x="114520" fg:w="344"/><text x="38.2967%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.38%)</title><rect x="33.8556%" y="261" width="4.3755%" height="15" fill="rgb(226,138,44)" fg:x="102020" fg:w="13185"/><text x="34.1485%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (106,653 instructions, 35.39%)</title><rect x="2.9060%" y="277" width="35.3930%" height="15" fill="rgb(211,104,54)" fg:x="8757" fg:w="106653"/><text x="3.1990%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="38.2991%" y="261" width="0.0796%" height="15" fill="rgb(241,198,15)" fg:x="115410" fg:w="240"/><text x="38.5920%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.3787%" y="261" width="0.1673%" height="15" fill="rgb(227,155,54)" fg:x="115650" fg:w="504"/><text x="38.6717%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="38.5460%" y="261" width="0.0435%" height="15" fill="rgb(225,131,31)" fg:x="116154" fg:w="131"/><text x="38.8389%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.5894%" y="261" width="0.1673%" height="15" fill="rgb(242,40,17)" fg:x="116285" fg:w="504"/><text x="38.8824%" y="271.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="38.7567%" y="245" width="0.0607%" height="15" fill="rgb(254,57,35)" fg:x="116789" fg:w="183"/><text x="39.0497%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="38.8174%" y="245" width="1.6549%" height="15" fill="rgb(240,64,32)" fg:x="116972" fg:w="4987"/><text x="39.1104%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="38.7567%" y="261" width="1.8162%" height="15" fill="rgb(251,136,26)" fg:x="116789" fg:w="5473"/><text x="39.0497%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="38.2991%" y="277" width="2.3415%" height="15" fill="rgb(208,60,54)" fg:x="115410" fg:w="7056"/><text x="38.5920%" y="287.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="40.6406%" y="261" width="0.0796%" height="15" fill="rgb(220,13,12)" fg:x="122466" fg:w="240"/><text x="40.9336%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.7203%" y="261" width="0.1673%" height="15" fill="rgb(213,149,1)" fg:x="122706" fg:w="504"/><text x="41.0132%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="40.8875%" y="261" width="0.0435%" height="15" fill="rgb(212,191,39)" fg:x="123210" fg:w="131"/><text x="41.1805%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.9310%" y="261" width="0.1673%" height="15" fill="rgb(215,221,42)" fg:x="123341" fg:w="504"/><text x="41.2239%" y="271.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="41.0982%" y="245" width="0.0212%" height="15" fill="rgb(244,79,23)" fg:x="123845" fg:w="64"/><text x="41.3912%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="41.1195%" y="245" width="1.6549%" height="15" fill="rgb(247,17,29)" fg:x="123909" fg:w="4987"/><text x="41.4124%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="42.7744%" y="245" width="1.6549%" height="15" fill="rgb(251,221,21)" fg:x="128896" fg:w="4987"/><text x="43.0674%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="41.0982%" y="261" width="3.4446%" height="15" fill="rgb(207,202,34)" fg:x="123845" fg:w="10380"/><text x="41.3912%" y="271.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="40.6406%" y="277" width="3.9879%" height="15" fill="rgb(217,4,34)" fg:x="122466" fg:w="12017"/><text x="40.9336%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.6285%" y="261" width="0.0302%" height="15" fill="rgb(253,17,16)" fg:x="134483" fg:w="91"/><text x="44.9214%" y="271.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="44.6587%" y="261" width="0.1142%" height="15" fill="rgb(223,91,48)" fg:x="134574" fg:w="344"/><text x="44.9516%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.7728%" y="261" width="0.0302%" height="15" fill="rgb(244,191,22)" fg:x="134918" fg:w="91"/><text x="45.0658%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="44.6285%" y="277" width="0.2814%" height="15" fill="rgb(211,107,14)" fg:x="134483" fg:w="848"/><text x="44.9214%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (126,820 instructions, 42.09%)</title><rect x="2.8921%" y="293" width="42.0855%" height="15" fill="rgb(232,81,23)" fg:x="8715" fg:w="126820"/><text x="3.1851%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_wi..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="44.9776%" y="277" width="0.0796%" height="15" fill="rgb(237,126,14)" fg:x="135535" fg:w="240"/><text x="45.2706%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.0572%" y="277" width="0.1673%" height="15" fill="rgb(230,65,39)" fg:x="135775" fg:w="504"/><text x="45.3502%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="45.2245%" y="277" width="0.0435%" height="15" fill="rgb(208,106,41)" fg:x="136279" fg:w="131"/><text x="45.5175%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.2680%" y="277" width="0.1673%" height="15" fill="rgb(206,125,25)" fg:x="136410" fg:w="504"/><text x="45.5609%" y="287.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="45.4352%" y="261" width="0.0607%" height="15" fill="rgb(250,24,29)" fg:x="136914" fg:w="183"/><text x="45.7282%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="45.4959%" y="261" width="1.6549%" height="15" fill="rgb(226,49,32)" fg:x="137097" fg:w="4987"/><text x="45.7889%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="45.4352%" y="277" width="1.8162%" height="15" fill="rgb(217,110,16)" fg:x="136914" fg:w="5473"/><text x="45.7282%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="44.9776%" y="293" width="2.3415%" height="15" fill="rgb(252,16,53)" fg:x="135535" fg:w="7056"/><text x="45.2706%" y="303.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="47.3191%" y="277" width="0.0796%" height="15" fill="rgb(238,163,11)" fg:x="142591" fg:w="240"/><text x="47.6121%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.3988%" y="277" width="0.1673%" height="15" fill="rgb(206,210,1)" fg:x="142831" fg:w="504"/><text x="47.6917%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="47.5660%" y="277" width="0.0435%" height="15" fill="rgb(229,8,25)" fg:x="143335" fg:w="131"/><text x="47.8590%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.6095%" y="277" width="0.1673%" height="15" fill="rgb(247,155,23)" fg:x="143466" fg:w="504"/><text x="47.9025%" y="287.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="47.7768%" y="261" width="0.0212%" height="15" fill="rgb(207,26,7)" fg:x="143970" fg:w="64"/><text x="48.0697%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="47.7980%" y="261" width="1.6549%" height="15" fill="rgb(215,179,12)" fg:x="144034" fg:w="4987"/><text x="48.0910%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="49.4529%" y="261" width="1.6549%" height="15" fill="rgb(238,208,11)" fg:x="149021" fg:w="4987"/><text x="49.7459%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="47.7768%" y="277" width="3.4446%" height="15" fill="rgb(238,102,42)" fg:x="143970" fg:w="10380"/><text x="48.0697%" y="287.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="47.3191%" y="293" width="3.9879%" height="15" fill="rgb(239,35,9)" fg:x="142591" fg:w="12017"/><text x="47.6121%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.3070%" y="277" width="0.0302%" height="15" fill="rgb(244,182,30)" fg:x="154608" fg:w="91"/><text x="51.6000%" y="287.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="51.3372%" y="277" width="0.1142%" height="15" fill="rgb(232,181,23)" fg:x="154699" fg:w="344"/><text x="51.6302%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.4514%" y="277" width="0.0302%" height="15" fill="rgb(242,154,29)" fg:x="155043" fg:w="91"/><text x="51.7443%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="51.3070%" y="293" width="0.2814%" height="15" fill="rgb(219,23,2)" fg:x="154608" fg:w="848"/><text x="51.6000%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (146,964 instructions, 48.77%)</title><rect x="2.8858%" y="309" width="48.7703%" height="15" fill="rgb(234,94,43)" fg:x="8696" fg:w="146964"/><text x="3.1788%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go:..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="51.6561%" y="293" width="0.0796%" height="15" fill="rgb(223,55,45)" fg:x="155660" fg:w="240"/><text x="51.9491%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.7358%" y="293" width="0.1673%" height="15" fill="rgb(241,215,54)" fg:x="155900" fg:w="504"/><text x="52.0287%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="51.9030%" y="293" width="0.0435%" height="15" fill="rgb(247,63,53)" fg:x="156404" fg:w="131"/><text x="52.1960%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.9465%" y="293" width="0.1673%" height="15" fill="rgb(220,166,7)" fg:x="156535" fg:w="504"/><text x="52.2394%" y="303.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="52.1137%" y="277" width="0.0607%" height="15" fill="rgb(248,53,45)" fg:x="157039" fg:w="183"/><text x="52.4067%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="52.1745%" y="277" width="1.6549%" height="15" fill="rgb(224,207,20)" fg:x="157222" fg:w="4987"/><text x="52.4674%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="52.1137%" y="293" width="1.8162%" height="15" fill="rgb(244,185,11)" fg:x="157039" fg:w="5473"/><text x="52.4067%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="51.6561%" y="309" width="2.3415%" height="15" fill="rgb(230,13,42)" fg:x="155660" fg:w="7056"/><text x="51.9491%" y="319.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="53.9977%" y="293" width="0.0796%" height="15" fill="rgb(243,191,18)" fg:x="162716" fg:w="240"/><text x="54.2906%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.0773%" y="293" width="0.1673%" height="15" fill="rgb(249,135,15)" fg:x="162956" fg:w="504"/><text x="54.3703%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="54.2446%" y="293" width="0.0435%" height="15" fill="rgb(229,26,35)" fg:x="163460" fg:w="131"/><text x="54.5375%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.2880%" y="293" width="0.1673%" height="15" fill="rgb(216,191,16)" fg:x="163591" fg:w="504"/><text x="54.5810%" y="303.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="54.4553%" y="277" width="0.0212%" height="15" fill="rgb(242,18,7)" fg:x="164095" fg:w="64"/><text x="54.7483%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="54.4765%" y="277" width="1.6549%" height="15" fill="rgb(205,128,17)" fg:x="164159" fg:w="4987"/><text x="54.7695%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="56.1315%" y="277" width="1.6549%" height="15" fill="rgb(229,199,44)" fg:x="169146" fg:w="4987"/><text x="56.4244%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="54.4553%" y="293" width="3.4446%" height="15" fill="rgb(234,222,3)" fg:x="164095" fg:w="10380"/><text x="54.7483%" y="303.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="53.9977%" y="309" width="3.9879%" height="15" fill="rgb(220,170,20)" fg:x="162716" fg:w="12017"/><text x="54.2906%" y="319.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="57.9855%" y="277" width="0.0796%" height="15" fill="rgb(207,138,8)" fg:x="174733" fg:w="240"/><text x="58.2785%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="58.0652%" y="277" width="0.1673%" height="15" fill="rgb(244,130,36)" fg:x="174973" fg:w="504"/><text x="58.3581%" y="287.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="58.2324%" y="277" width="0.0859%" height="15" fill="rgb(207,197,52)" fg:x="175477" fg:w="259"/><text x="58.5254%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="58.3184%" y="277" width="1.6549%" height="15" fill="rgb(206,9,21)" fg:x="175736" fg:w="4987"/><text x="58.6113%" y="287.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="59.9733%" y="277" width="0.0465%" height="15" fill="rgb(250,15,47)" fg:x="180723" fg:w="140"/><text x="60.2663%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="60.0198%" y="277" width="0.1673%" height="15" fill="rgb(235,202,14)" fg:x="180863" fg:w="504"/><text x="60.3127%" y="287.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="60.1870%" y="261" width="0.0644%" height="15" fill="rgb(211,180,47)" fg:x="181367" fg:w="194"/><text x="60.4800%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="60.2514%" y="261" width="1.6549%" height="15" fill="rgb(209,61,11)" fg:x="181561" fg:w="4987"/><text x="60.5444%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="60.1870%" y="277" width="1.8199%" height="15" fill="rgb(243,197,29)" fg:x="181367" fg:w="5484"/><text x="60.4800%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="57.9855%" y="293" width="4.1180%" height="15" fill="rgb(216,185,16)" fg:x="174733" fg:w="12409"/><text x="58.2785%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="62.1035%" y="293" width="0.0302%" height="15" fill="rgb(248,5,15)" fg:x="187142" fg:w="91"/><text x="62.3964%" y="303.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="62.1337%" y="293" width="0.1142%" height="15" fill="rgb(240,39,41)" fg:x="187233" fg:w="344"/><text x="62.4266%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.38%)</title><rect x="57.9855%" y="309" width="4.3755%" height="15" fill="rgb(224,220,43)" fg:x="174733" fg:w="13185"/><text x="58.2785%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (179,446 instructions, 59.55%)</title><rect x="2.8795%" y="325" width="59.5495%" height="15" fill="rgb(215,21,24)" fg:x="8677" fg:w="179446"/><text x="3.1724%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="62.4290%" y="309" width="0.0796%" height="15" fill="rgb(220,102,8)" fg:x="188123" fg:w="240"/><text x="62.7220%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.5087%" y="309" width="0.1673%" height="15" fill="rgb(225,185,10)" fg:x="188363" fg:w="504"/><text x="62.8016%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="62.6759%" y="309" width="0.0435%" height="15" fill="rgb(212,108,24)" fg:x="188867" fg:w="131"/><text x="62.9689%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.7194%" y="309" width="0.1673%" height="15" fill="rgb(237,27,0)" fg:x="188998" fg:w="504"/><text x="63.0124%" y="319.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="62.8866%" y="293" width="0.0607%" height="15" fill="rgb(212,106,38)" fg:x="189502" fg:w="183"/><text x="63.1796%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="62.9474%" y="293" width="1.6549%" height="15" fill="rgb(210,125,30)" fg:x="189685" fg:w="4987"/><text x="63.2403%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="62.8866%" y="309" width="1.8162%" height="15" fill="rgb(215,219,1)" fg:x="189502" fg:w="5473"/><text x="63.1796%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="62.4290%" y="325" width="2.3415%" height="15" fill="rgb(223,10,12)" fg:x="188123" fg:w="7056"/><text x="62.7220%" y="335.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="64.7706%" y="309" width="0.0796%" height="15" fill="rgb(245,40,34)" fg:x="195179" fg:w="240"/><text x="65.0635%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="64.8502%" y="309" width="0.1673%" height="15" fill="rgb(211,185,19)" fg:x="195419" fg:w="504"/><text x="65.1432%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="65.0175%" y="309" width="0.0435%" height="15" fill="rgb(243,190,43)" fg:x="195923" fg:w="131"/><text x="65.3104%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.0609%" y="309" width="0.1673%" height="15" fill="rgb(232,208,29)" fg:x="196054" fg:w="504"/><text x="65.3539%" y="319.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="65.2282%" y="293" width="0.0212%" height="15" fill="rgb(234,134,27)" fg:x="196558" fg:w="64"/><text x="65.5212%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="65.2494%" y="293" width="1.6549%" height="15" fill="rgb(225,41,29)" fg:x="196622" fg:w="4987"/><text x="65.5424%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="66.9044%" y="293" width="1.6549%" height="15" fill="rgb(241,214,44)" fg:x="201609" fg:w="4987"/><text x="67.1974%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="65.2282%" y="309" width="3.4446%" height="15" fill="rgb(205,219,41)" fg:x="196558" fg:w="10380"/><text x="65.5212%" y="319.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="64.7706%" y="325" width="3.9879%" height="15" fill="rgb(226,15,26)" fg:x="195179" fg:w="12017"/><text x="65.0635%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.7584%" y="309" width="0.0302%" height="15" fill="rgb(210,83,41)" fg:x="207196" fg:w="91"/><text x="69.0514%" y="319.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="68.7886%" y="309" width="0.1142%" height="15" fill="rgb(247,9,39)" fg:x="207287" fg:w="344"/><text x="69.0816%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.9028%" y="309" width="0.0302%" height="15" fill="rgb(209,37,30)" fg:x="207631" fg:w="91"/><text x="69.1958%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="68.7584%" y="325" width="0.2814%" height="15" fill="rgb(248,170,46)" fg:x="207196" fg:w="848"/><text x="69.0514%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (199,590 instructions, 66.23%)</title><rect x="2.8732%" y="341" width="66.2344%" height="15" fill="rgb(237,129,44)" fg:x="8658" fg:w="199590"/><text x="3.1661%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="69.1075%" y="325" width="0.0796%" height="15" fill="rgb(225,117,51)" fg:x="208248" fg:w="240"/><text x="69.4005%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.1872%" y="325" width="0.1673%" height="15" fill="rgb(212,165,2)" fg:x="208488" fg:w="504"/><text x="69.4802%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="69.3544%" y="325" width="0.0435%" height="15" fill="rgb(213,53,45)" fg:x="208992" fg:w="131"/><text x="69.6474%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.3979%" y="325" width="0.1673%" height="15" fill="rgb(220,148,3)" fg:x="209123" fg:w="504"/><text x="69.6909%" y="335.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="69.5652%" y="309" width="0.0607%" height="15" fill="rgb(228,37,29)" fg:x="209627" fg:w="183"/><text x="69.8581%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="69.6259%" y="309" width="1.6549%" height="15" fill="rgb(209,76,29)" fg:x="209810" fg:w="4987"/><text x="69.9189%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="69.5652%" y="325" width="1.8162%" height="15" fill="rgb(215,90,5)" fg:x="209627" fg:w="5473"/><text x="69.8581%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="69.1075%" y="341" width="2.3415%" height="15" fill="rgb(227,207,32)" fg:x="208248" fg:w="7056"/><text x="69.4005%" y="351.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="71.4491%" y="325" width="0.0796%" height="15" fill="rgb(251,218,44)" fg:x="215304" fg:w="240"/><text x="71.7421%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.5287%" y="325" width="0.1673%" height="15" fill="rgb(211,44,16)" fg:x="215544" fg:w="504"/><text x="71.8217%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="71.6960%" y="325" width="0.0435%" height="15" fill="rgb(242,170,37)" fg:x="216048" fg:w="131"/><text x="71.9890%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.7395%" y="325" width="0.1673%" height="15" fill="rgb(205,181,22)" fg:x="216179" fg:w="504"/><text x="72.0324%" y="335.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="71.9067%" y="309" width="0.0212%" height="15" fill="rgb(228,130,19)" fg:x="216683" fg:w="64"/><text x="72.1997%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="71.9280%" y="309" width="1.6549%" height="15" fill="rgb(228,9,15)" fg:x="216747" fg:w="4987"/><text x="72.2209%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="73.5829%" y="309" width="1.6549%" height="15" fill="rgb(219,66,48)" fg:x="221734" fg:w="4987"/><text x="73.8759%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="71.9067%" y="325" width="3.4446%" height="15" fill="rgb(234,203,10)" fg:x="216683" fg:w="10380"/><text x="72.1997%" y="335.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="71.4491%" y="341" width="3.9879%" height="15" fill="rgb(219,209,1)" fg:x="215304" fg:w="12017"/><text x="71.7421%" y="351.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="75.4370%" y="309" width="0.0796%" height="15" fill="rgb(206,167,9)" fg:x="227321" fg:w="240"/><text x="75.7299%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="75.5166%" y="309" width="0.1673%" height="15" fill="rgb(210,11,39)" fg:x="227561" fg:w="504"/><text x="75.8096%" y="319.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="75.6839%" y="309" width="0.0859%" height="15" fill="rgb(251,90,47)" fg:x="228065" fg:w="259"/><text x="75.9768%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="75.7698%" y="309" width="1.6549%" height="15" fill="rgb(237,7,4)" fg:x="228324" fg:w="4987"/><text x="76.0628%" y="319.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="77.4248%" y="309" width="0.0465%" height="15" fill="rgb(232,205,47)" fg:x="233311" fg:w="140"/><text x="77.7177%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="77.4712%" y="309" width="0.1673%" height="15" fill="rgb(215,86,48)" fg:x="233451" fg:w="504"/><text x="77.7642%" y="319.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="77.6385%" y="293" width="0.0644%" height="15" fill="rgb(232,14,47)" fg:x="233955" fg:w="194"/><text x="77.9314%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="77.7029%" y="293" width="1.6549%" height="15" fill="rgb(240,28,46)" fg:x="234149" fg:w="4987"/><text x="77.9958%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="77.6385%" y="309" width="1.8199%" height="15" fill="rgb(224,85,5)" fg:x="233955" fg:w="5484"/><text x="77.9314%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="75.4370%" y="325" width="4.1180%" height="15" fill="rgb(219,34,25)" fg:x="227321" fg:w="12409"/><text x="75.7299%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="79.5549%" y="325" width="0.0302%" height="15" fill="rgb(247,137,45)" fg:x="239730" fg:w="91"/><text x="79.8479%" y="335.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="79.5851%" y="325" width="0.1142%" height="15" fill="rgb(237,121,47)" fg:x="239821" fg:w="344"/><text x="79.8781%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.38%)</title><rect x="75.4370%" y="341" width="4.3755%" height="15" fill="rgb(247,148,27)" fg:x="227321" fg:w="13185"/><text x="75.7299%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (232,072 instructions, 77.01%)</title><rect x="2.8669%" y="357" width="77.0136%" height="15" fill="rgb(220,44,0)" fg:x="8639" fg:w="232072"/><text x="3.1598%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="79.8805%" y="341" width="0.0796%" height="15" fill="rgb(236,61,29)" fg:x="240711" fg:w="240"/><text x="80.1734%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="79.9601%" y="341" width="0.1673%" height="15" fill="rgb(244,180,35)" fg:x="240951" fg:w="504"/><text x="80.2531%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="80.1274%" y="341" width="0.0435%" height="15" fill="rgb(242,14,54)" fg:x="241455" fg:w="131"/><text x="80.4203%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.1708%" y="341" width="0.1673%" height="15" fill="rgb(206,24,45)" fg:x="241586" fg:w="504"/><text x="80.4638%" y="351.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="80.3381%" y="325" width="0.0607%" height="15" fill="rgb(215,211,6)" fg:x="242090" fg:w="183"/><text x="80.6311%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="80.3988%" y="325" width="1.6549%" height="15" fill="rgb(207,56,2)" fg:x="242273" fg:w="4987"/><text x="80.6918%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="80.3381%" y="341" width="1.8162%" height="15" fill="rgb(220,135,9)" fg:x="242090" fg:w="5473"/><text x="80.6311%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="79.8805%" y="357" width="2.3415%" height="15" fill="rgb(214,145,52)" fg:x="240711" fg:w="7056"/><text x="80.1734%" y="367.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="82.2220%" y="341" width="0.0796%" height="15" fill="rgb(241,83,53)" fg:x="247767" fg:w="240"/><text x="82.5150%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.3017%" y="341" width="0.1673%" height="15" fill="rgb(222,66,13)" fg:x="248007" fg:w="504"/><text x="82.5946%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="82.4689%" y="341" width="0.0435%" height="15" fill="rgb(239,164,54)" fg:x="248511" fg:w="131"/><text x="82.7619%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.5124%" y="341" width="0.1673%" height="15" fill="rgb(216,189,13)" fg:x="248642" fg:w="504"/><text x="82.8054%" y="351.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="82.6796%" y="325" width="0.0212%" height="15" fill="rgb(228,212,51)" fg:x="249146" fg:w="64"/><text x="82.9726%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="82.7009%" y="325" width="1.6549%" height="15" fill="rgb(207,190,21)" fg:x="249210" fg:w="4987"/><text x="82.9938%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="84.3558%" y="325" width="1.6549%" height="15" fill="rgb(245,28,35)" fg:x="254197" fg:w="4987"/><text x="84.6488%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="82.6796%" y="341" width="3.4446%" height="15" fill="rgb(239,23,40)" fg:x="249146" fg:w="10380"/><text x="82.9726%" y="351.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="82.2220%" y="357" width="3.9879%" height="15" fill="rgb(242,10,51)" fg:x="247767" fg:w="12017"/><text x="82.5150%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.2099%" y="341" width="0.0302%" height="15" fill="rgb(207,186,5)" fg:x="259784" fg:w="91"/><text x="86.5029%" y="351.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="86.2401%" y="341" width="0.1142%" height="15" fill="rgb(242,21,16)" fg:x="259875" fg:w="344"/><text x="86.5331%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.3542%" y="341" width="0.0302%" height="15" fill="rgb(237,0,53)" fg:x="260219" fg:w="91"/><text x="86.6472%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="86.2099%" y="357" width="0.2814%" height="15" fill="rgb(215,8,52)" fg:x="259784" fg:w="848"/><text x="86.5029%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (252,216 instructions, 83.70%)</title><rect x="2.8606%" y="373" width="83.6984%" height="15" fill="rgb(248,62,44)" fg:x="8620" fg:w="252216"/><text x="3.1535%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.5590%" y="277" width="0.0302%" height="15" fill="rgb(224,83,15)" fg:x="260836" fg:w="91"/><text x="86.8520%" y="287.50"></text></g><g><title>memcpy (211 instructions, 0.07%)</title><rect x="86.5892%" y="277" width="0.0700%" height="15" fill="rgb(249,100,46)" fg:x="260927" fg:w="211"/><text x="86.8822%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="86.6592%" y="277" width="0.0285%" height="15" fill="rgb(213,35,48)" fg:x="261138" fg:w="86"/><text x="86.9522%" y="287.50"></text></g><g><title>__rust_realloc (494 instructions, 0.16%)</title><rect x="86.5590%" y="293" width="0.1639%" height="15" fill="rgb(251,2,13)" fg:x="260836" fg:w="494"/><text x="86.8520%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (539 instructions, 0.18%)</title><rect x="86.5590%" y="309" width="0.1789%" height="15" fill="rgb(212,132,21)" fg:x="260836" fg:w="539"/><text x="86.8520%" y="319.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="86.7671%" y="293" width="0.0285%" height="15" fill="rgb(247,17,21)" fg:x="261463" fg:w="86"/><text x="87.0600%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="86.7671%" y="309" width="0.0435%" height="15" fill="rgb(220,177,38)" fg:x="261463" fg:w="131"/><text x="87.0600%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (846 instructions, 0.28%)</title><rect x="86.5590%" y="325" width="0.2807%" height="15" fill="rgb(233,219,21)" fg:x="260836" fg:w="846"/><text x="86.8520%" y="335.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="86.8397%" y="325" width="0.0796%" height="15" fill="rgb(246,17,7)" fg:x="261682" fg:w="240"/><text x="87.1327%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,183 instructions, 0.39%)</title><rect x="86.5590%" y="341" width="0.3926%" height="15" fill="rgb(212,4,22)" fg:x="260836" fg:w="1183"/><text x="86.8520%" y="351.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="86.9811%" y="309" width="0.0285%" height="15" fill="rgb(243,85,21)" fg:x="262108" fg:w="86"/><text x="87.2741%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="86.9811%" y="325" width="0.0435%" height="15" fill="rgb(232,218,2)" fg:x="262108" fg:w="131"/><text x="87.2741%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="86.9811%" y="341" width="0.0727%" height="15" fill="rgb(253,168,47)" fg:x="262108" fg:w="219"/><text x="87.2741%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.0538%" y="309" width="0.1035%" height="15" fill="rgb(238,101,25)" fg:x="262327" fg:w="312"/><text x="87.3468%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.0538%" y="325" width="0.1291%" height="15" fill="rgb(251,86,12)" fg:x="262327" fg:w="389"/><text x="87.3468%" y="335.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="87.2124%" y="277" width="0.0285%" height="15" fill="rgb(241,112,44)" fg:x="262805" fg:w="86"/><text x="87.5054%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="87.2124%" y="293" width="0.0435%" height="15" fill="rgb(224,28,25)" fg:x="262805" fg:w="131"/><text x="87.5054%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.2124%" y="309" width="0.0727%" height="15" fill="rgb(209,201,1)" fg:x="262805" fg:w="219"/><text x="87.5054%" y="319.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.2851%" y="277" width="0.1035%" height="15" fill="rgb(231,30,22)" fg:x="263024" fg:w="312"/><text x="87.5781%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.2851%" y="293" width="0.1291%" height="15" fill="rgb(247,96,31)" fg:x="263024" fg:w="389"/><text x="87.5781%" y="303.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.4437%" y="261" width="0.0796%" height="15" fill="rgb(251,100,12)" fg:x="263502" fg:w="240"/><text x="87.7367%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="87.4437%" y="277" width="0.1052%" height="15" fill="rgb(224,174,7)" fg:x="263502" fg:w="317"/><text x="87.7367%" y="287.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="87.5784%" y="197" width="0.0285%" height="15" fill="rgb(231,168,19)" fg:x="263908" fg:w="86"/><text x="87.8714%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="87.5784%" y="213" width="0.0435%" height="15" fill="rgb(226,85,5)" fg:x="263908" fg:w="131"/><text x="87.8714%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.5784%" y="229" width="0.0727%" height="15" fill="rgb(210,215,5)" fg:x="263908" fg:w="219"/><text x="87.8714%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.6511%" y="229" width="0.0796%" height="15" fill="rgb(233,70,8)" fg:x="264127" fg:w="240"/><text x="87.9441%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (545 instructions, 0.18%)</title><rect x="87.5784%" y="245" width="0.1809%" height="15" fill="rgb(229,109,53)" fg:x="263908" fg:w="545"/><text x="87.8714%" y="255.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.7888%" y="213" width="0.1035%" height="15" fill="rgb(213,125,35)" fg:x="264542" fg:w="312"/><text x="88.0818%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.7888%" y="229" width="0.1291%" height="15" fill="rgb(215,12,48)" fg:x="264542" fg:w="389"/><text x="88.0818%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.9475%" y="197" width="0.0796%" height="15" fill="rgb(207,12,38)" fg:x="265020" fg:w="240"/><text x="88.2404%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="87.9475%" y="213" width="0.1052%" height="15" fill="rgb(216,229,2)" fg:x="265020" fg:w="317"/><text x="88.2404%" y="223.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.0822%" y="181" width="0.1035%" height="15" fill="rgb(229,209,31)" fg:x="265426" fg:w="312"/><text x="88.3752%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.0822%" y="197" width="0.1291%" height="15" fill="rgb(239,57,22)" fg:x="265426" fg:w="389"/><text x="88.3752%" y="207.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="88.2408%" y="117" width="0.0285%" height="15" fill="rgb(239,119,54)" fg:x="265904" fg:w="86"/><text x="88.5338%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="88.2408%" y="133" width="0.0435%" height="15" fill="rgb(231,80,45)" fg:x="265904" fg:w="131"/><text x="88.5338%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="88.2408%" y="149" width="0.0727%" height="15" fill="rgb(219,138,19)" fg:x="265904" fg:w="219"/><text x="88.5338%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.3135%" y="149" width="0.1035%" height="15" fill="rgb(216,53,26)" fg:x="266123" fg:w="312"/><text x="88.6065%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (619 instructions, 0.21%)</title><rect x="88.2408%" y="165" width="0.2054%" height="15" fill="rgb(224,30,16)" fg:x="265904" fg:w="619"/><text x="88.5338%" y="175.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.4758%" y="133" width="0.0796%" height="15" fill="rgb(224,151,24)" fg:x="266612" fg:w="240"/><text x="88.7687%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.4758%" y="149" width="0.1052%" height="15" fill="rgb(236,75,7)" fg:x="266612" fg:w="317"/><text x="88.7687%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.6105%" y="117" width="0.1035%" height="15" fill="rgb(248,106,42)" fg:x="267018" fg:w="312"/><text x="88.9035%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.6105%" y="133" width="0.1291%" height="15" fill="rgb(222,217,11)" fg:x="267018" fg:w="389"/><text x="88.9035%" y="143.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.7691%" y="101" width="0.0796%" height="15" fill="rgb(234,143,31)" fg:x="267496" fg:w="240"/><text x="89.0621%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.7691%" y="117" width="0.1052%" height="15" fill="rgb(237,148,28)" fg:x="267496" fg:w="317"/><text x="89.0621%" y="127.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.9039%" y="69" width="0.0796%" height="15" fill="rgb(241,151,6)" fg:x="267902" fg:w="240"/><text x="89.1968%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.9039%" y="85" width="0.1052%" height="15" fill="rgb(226,55,18)" fg:x="267902" fg:w="317"/><text x="89.1968%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="89.0386%" y="53" width="0.0435%" height="15" fill="rgb(226,196,6)" fg:x="268308" fg:w="131"/><text x="89.3316%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (202 instructions, 0.07%)</title><rect x="89.0386%" y="69" width="0.0670%" height="15" fill="rgb(251,228,11)" fg:x="268308" fg:w="202"/><text x="89.3316%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="89.1056%" y="37" width="0.0116%" height="15" fill="rgb(219,197,15)" fg:x="268510" fg:w="35"/><text x="89.3986%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (106 instructions, 0.04%)</title><rect x="89.1056%" y="53" width="0.0352%" height="15" fill="rgb(243,105,44)" fg:x="268510" fg:w="106"/><text x="89.3986%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (204 instructions, 0.07%)</title><rect x="89.1056%" y="69" width="0.0677%" height="15" fill="rgb(205,183,40)" fg:x="268510" fg:w="204"/><text x="89.3986%" y="79.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.2095%" y="53" width="0.0796%" height="15" fill="rgb(232,138,46)" fg:x="268823" fg:w="240"/><text x="89.5025%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.2095%" y="69" width="0.1052%" height="15" fill="rgb(234,161,14)" fg:x="268823" fg:w="317"/><text x="89.5025%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (921 instructions, 0.31%)</title><rect x="89.0386%" y="85" width="0.3056%" height="15" fill="rgb(238,211,18)" fg:x="268308" fg:w="921"/><text x="89.3316%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,433 instructions, 0.48%)</title><rect x="88.9039%" y="101" width="0.4755%" height="15" fill="rgb(217,130,2)" fg:x="267902" fg:w="1433"/><text x="89.1968%" y="111.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.4146%" y="85" width="0.0796%" height="15" fill="rgb(251,17,29)" fg:x="269441" fg:w="240"/><text x="89.7075%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.4146%" y="101" width="0.1052%" height="15" fill="rgb(243,18,0)" fg:x="269441" fg:w="317"/><text x="89.7075%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,945 instructions, 0.65%)</title><rect x="88.9039%" y="117" width="0.6455%" height="15" fill="rgb(227,220,45)" fg:x="267902" fg:w="1945"/><text x="89.1968%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,457 instructions, 0.82%)</title><rect x="88.7691%" y="133" width="0.8154%" height="15" fill="rgb(212,34,2)" fg:x="267496" fg:w="2457"/><text x="89.0621%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,041 instructions, 1.01%)</title><rect x="88.6105%" y="149" width="1.0092%" height="15" fill="rgb(236,23,8)" fg:x="267018" fg:w="3041"/><text x="88.9035%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,553 instructions, 1.18%)</title><rect x="88.4758%" y="165" width="1.1791%" height="15" fill="rgb(210,113,39)" fg:x="266612" fg:w="3553"/><text x="88.7687%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,367 instructions, 1.45%)</title><rect x="88.2408%" y="181" width="1.4492%" height="15" fill="rgb(243,123,48)" fg:x="265904" fg:w="4367"/><text x="88.5338%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.7252%" y="165" width="0.0796%" height="15" fill="rgb(223,175,36)" fg:x="270377" fg:w="240"/><text x="90.0182%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.7252%" y="181" width="0.1052%" height="15" fill="rgb(226,100,30)" fg:x="270377" fg:w="317"/><text x="90.0182%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,879 instructions, 1.62%)</title><rect x="88.2408%" y="197" width="1.6191%" height="15" fill="rgb(221,225,39)" fg:x="265904" fg:w="4879"/><text x="88.5338%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,463 instructions, 1.81%)</title><rect x="88.0822%" y="213" width="1.8129%" height="15" fill="rgb(224,222,42)" fg:x="265426" fg:w="5463"/><text x="88.3752%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,975 instructions, 1.98%)</title><rect x="87.9475%" y="229" width="1.9828%" height="15" fill="rgb(221,53,1)" fg:x="265020" fg:w="5975"/><text x="88.2404%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,559 instructions, 2.18%)</title><rect x="87.7888%" y="245" width="2.1766%" height="15" fill="rgb(216,187,48)" fg:x="264542" fg:w="6559"/><text x="88.0818%" y="255.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,299 instructions, 2.42%)</title><rect x="87.5784%" y="261" width="2.4222%" height="15" fill="rgb(220,108,2)" fg:x="263908" fg:w="7299"/><text x="87.8714%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="90.0358%" y="213" width="0.0285%" height="15" fill="rgb(216,13,42)" fg:x="271313" fg:w="86"/><text x="90.3288%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="90.0358%" y="229" width="0.0435%" height="15" fill="rgb(205,14,29)" fg:x="271313" fg:w="131"/><text x="90.3288%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="90.0358%" y="245" width="0.0727%" height="15" fill="rgb(217,168,30)" fg:x="271313" fg:w="219"/><text x="90.3288%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.1085%" y="245" width="0.0796%" height="15" fill="rgb(246,173,54)" fg:x="271532" fg:w="240"/><text x="90.4015%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (547 instructions, 0.18%)</title><rect x="90.0358%" y="261" width="0.1815%" height="15" fill="rgb(227,177,11)" fg:x="271313" fg:w="547"/><text x="90.3288%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,041 instructions, 2.67%)</title><rect x="87.5784%" y="277" width="2.6684%" height="15" fill="rgb(223,215,51)" fg:x="263908" fg:w="8041"/><text x="87.8714%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,553 instructions, 2.84%)</title><rect x="87.4437%" y="293" width="2.8383%" height="15" fill="rgb(253,4,17)" fg:x="263502" fg:w="8553"/><text x="87.7367%" y="303.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,137 instructions, 3.03%)</title><rect x="87.2851%" y="309" width="3.0321%" height="15" fill="rgb(206,150,43)" fg:x="263024" fg:w="9137"/><text x="87.5781%" y="319.50">&lt;i..</text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.3554%" y="293" width="0.0796%" height="15" fill="rgb(241,100,52)" fg:x="272276" fg:w="240"/><text x="90.6483%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="90.3554%" y="309" width="0.1052%" height="15" fill="rgb(234,120,21)" fg:x="272276" fg:w="317"/><text x="90.6483%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,877 instructions, 3.28%)</title><rect x="87.2124%" y="325" width="3.2777%" height="15" fill="rgb(231,60,11)" fg:x="262805" fg:w="9877"/><text x="87.5054%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,461 instructions, 3.47%)</title><rect x="87.0538%" y="341" width="3.4715%" height="15" fill="rgb(247,77,50)" fg:x="262327" fg:w="10461"/><text x="87.3468%" y="351.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,067 instructions, 4.00%)</title><rect x="86.5590%" y="357" width="4.0045%" height="15" fill="rgb(251,199,54)" fg:x="260836" fg:w="12067"/><text x="86.8520%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,173 instructions, 4.04%)</title><rect x="86.5590%" y="373" width="4.0396%" height="15" fill="rgb(212,120,38)" fg:x="260836" fg:w="12173"/><text x="86.8520%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.6331%" y="69" width="0.0448%" height="15" fill="rgb(250,161,37)" fg:x="273113" fg:w="135"/><text x="90.9261%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (171 instructions, 0.06%)</title><rect x="90.6288%" y="85" width="0.0567%" height="15" fill="rgb(232,158,45)" fg:x="273100" fg:w="171"/><text x="90.9218%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.6879%" y="85" width="0.0448%" height="15" fill="rgb(233,114,2)" fg:x="273278" fg:w="135"/><text x="90.9809%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (351 instructions, 0.12%)</title><rect x="90.6265%" y="101" width="0.1165%" height="15" fill="rgb(248,139,0)" fg:x="273093" fg:w="351"/><text x="90.9195%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.7430%" y="101" width="0.0448%" height="15" fill="rgb(222,164,18)" fg:x="273444" fg:w="135"/><text x="91.0360%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (517 instructions, 0.17%)</title><rect x="90.6265%" y="117" width="0.1716%" height="15" fill="rgb(221,140,42)" fg:x="273093" fg:w="517"/><text x="90.9195%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.8004%" y="101" width="0.0222%" height="15" fill="rgb(209,186,11)" fg:x="273617" fg:w="67"/><text x="91.0934%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (184 instructions, 0.06%)</title><rect x="90.8004%" y="117" width="0.0611%" height="15" fill="rgb(254,212,38)" fg:x="273617" fg:w="184"/><text x="91.0934%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (746 instructions, 0.25%)</title><rect x="90.6242%" y="133" width="0.2476%" height="15" fill="rgb(219,156,31)" fg:x="273086" fg:w="746"/><text x="90.9171%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="90.8717%" y="117" width="0.0206%" height="15" fill="rgb(222,148,42)" fg:x="273832" fg:w="62"/><text x="91.1647%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.8923%" y="117" width="0.0222%" height="15" fill="rgb(225,65,5)" fg:x="273894" fg:w="67"/><text x="91.1853%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="90.8717%" y="133" width="0.0767%" height="15" fill="rgb(235,28,12)" fg:x="273832" fg:w="231"/><text x="91.1647%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,015 instructions, 0.34%)</title><rect x="90.6219%" y="149" width="0.3368%" height="15" fill="rgb(245,58,4)" fg:x="273079" fg:w="1015"/><text x="90.9148%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="90.9587%" y="133" width="0.0206%" height="15" fill="rgb(235,118,5)" fg:x="274094" fg:w="62"/><text x="91.2517%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.9793%" y="133" width="0.0222%" height="15" fill="rgb(253,196,3)" fg:x="274156" fg:w="67"/><text x="91.2722%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="90.9587%" y="149" width="0.0767%" height="15" fill="rgb(238,90,28)" fg:x="274094" fg:w="231"/><text x="91.2517%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,284 instructions, 0.43%)</title><rect x="90.6195%" y="165" width="0.4261%" height="15" fill="rgb(254,227,4)" fg:x="273072" fg:w="1284"/><text x="90.9125%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.0456%" y="149" width="0.0206%" height="15" fill="rgb(237,114,35)" fg:x="274356" fg:w="62"/><text x="91.3386%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.0662%" y="149" width="0.0222%" height="15" fill="rgb(221,147,29)" fg:x="274418" fg:w="67"/><text x="91.3592%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.0456%" y="165" width="0.0767%" height="15" fill="rgb(216,201,17)" fg:x="274356" fg:w="231"/><text x="91.3386%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,553 instructions, 0.52%)</title><rect x="90.6172%" y="181" width="0.5154%" height="15" fill="rgb(251,46,50)" fg:x="273065" fg:w="1553"/><text x="90.9102%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.1326%" y="165" width="0.0206%" height="15" fill="rgb(216,143,48)" fg:x="274618" fg:w="62"/><text x="91.4255%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.1532%" y="165" width="0.0222%" height="15" fill="rgb(224,62,51)" fg:x="274680" fg:w="67"/><text x="91.4461%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.1326%" y="181" width="0.0767%" height="15" fill="rgb(232,152,20)" fg:x="274618" fg:w="231"/><text x="91.4255%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,815 instructions, 0.60%)</title><rect x="90.6172%" y="197" width="0.6023%" height="15" fill="rgb(233,194,7)" fg:x="273065" fg:w="1815"/><text x="90.9102%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.2218%" y="181" width="0.0206%" height="15" fill="rgb(207,33,22)" fg:x="274887" fg:w="62"/><text x="91.5148%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.2424%" y="181" width="0.0222%" height="15" fill="rgb(226,54,34)" fg:x="274949" fg:w="67"/><text x="91.5354%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.2218%" y="197" width="0.0767%" height="15" fill="rgb(227,161,47)" fg:x="274887" fg:w="231"/><text x="91.5148%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,091 instructions, 0.69%)</title><rect x="90.6149%" y="213" width="0.6939%" height="15" fill="rgb(218,58,37)" fg:x="273058" fg:w="2091"/><text x="90.9079%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.3088%" y="197" width="0.0206%" height="15" fill="rgb(208,173,18)" fg:x="275149" fg:w="62"/><text x="91.6018%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.3294%" y="197" width="0.0222%" height="15" fill="rgb(230,159,11)" fg:x="275211" fg:w="67"/><text x="91.6223%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.3088%" y="213" width="0.0767%" height="15" fill="rgb(238,90,51)" fg:x="275149" fg:w="231"/><text x="91.6018%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,360 instructions, 0.78%)</title><rect x="90.6126%" y="229" width="0.7832%" height="15" fill="rgb(225,97,36)" fg:x="273051" fg:w="2360"/><text x="90.9055%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.3957%" y="213" width="0.0206%" height="15" fill="rgb(211,205,42)" fg:x="275411" fg:w="62"/><text x="91.6887%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.4163%" y="213" width="0.0222%" height="15" fill="rgb(219,152,7)" fg:x="275473" fg:w="67"/><text x="91.7093%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.3957%" y="229" width="0.0767%" height="15" fill="rgb(222,79,10)" fg:x="275411" fg:w="231"/><text x="91.6887%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,629 instructions, 0.87%)</title><rect x="90.6102%" y="245" width="0.8724%" height="15" fill="rgb(242,13,11)" fg:x="273044" fg:w="2629"/><text x="90.9032%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.4827%" y="229" width="0.0206%" height="15" fill="rgb(231,143,41)" fg:x="275673" fg:w="62"/><text x="91.7757%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.5033%" y="229" width="0.0222%" height="15" fill="rgb(222,147,19)" fg:x="275735" fg:w="67"/><text x="91.7962%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.4827%" y="245" width="0.0767%" height="15" fill="rgb(235,5,39)" fg:x="275673" fg:w="231"/><text x="91.7757%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,898 instructions, 0.96%)</title><rect x="90.6079%" y="261" width="0.9617%" height="15" fill="rgb(246,155,51)" fg:x="273037" fg:w="2898"/><text x="90.9009%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.5696%" y="245" width="0.0206%" height="15" fill="rgb(218,157,4)" fg:x="275935" fg:w="62"/><text x="91.8626%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.5902%" y="245" width="0.0222%" height="15" fill="rgb(226,184,4)" fg:x="275997" fg:w="67"/><text x="91.8832%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.5696%" y="261" width="0.0767%" height="15" fill="rgb(210,103,26)" fg:x="275935" fg:w="231"/><text x="91.8626%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,160 instructions, 1.05%)</title><rect x="90.6079%" y="277" width="1.0487%" height="15" fill="rgb(228,23,31)" fg:x="273037" fg:w="3160"/><text x="90.9009%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.6589%" y="261" width="0.0206%" height="15" fill="rgb(205,176,34)" fg:x="276204" fg:w="62"/><text x="91.9519%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.6795%" y="261" width="0.0222%" height="15" fill="rgb(246,213,37)" fg:x="276266" fg:w="67"/><text x="91.9724%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.6589%" y="277" width="0.0767%" height="15" fill="rgb(213,52,45)" fg:x="276204" fg:w="231"/><text x="91.9519%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,436 instructions, 1.14%)</title><rect x="90.6056%" y="293" width="1.1402%" height="15" fill="rgb(249,9,52)" fg:x="273030" fg:w="3436"/><text x="90.8986%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.7458%" y="277" width="0.0206%" height="15" fill="rgb(205,97,16)" fg:x="276466" fg:w="62"/><text x="92.0388%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.7664%" y="277" width="0.0222%" height="15" fill="rgb(214,11,46)" fg:x="276528" fg:w="67"/><text x="92.0594%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.7458%" y="293" width="0.0767%" height="15" fill="rgb(221,66,18)" fg:x="276466" fg:w="231"/><text x="92.0388%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,705 instructions, 1.23%)</title><rect x="90.6033%" y="309" width="1.2295%" height="15" fill="rgb(213,49,1)" fg:x="273023" fg:w="3705"/><text x="90.8962%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.8328%" y="293" width="0.0206%" height="15" fill="rgb(232,75,51)" fg:x="276728" fg:w="62"/><text x="92.1258%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.8534%" y="293" width="0.0222%" height="15" fill="rgb(208,218,40)" fg:x="276790" fg:w="67"/><text x="92.1463%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.8328%" y="309" width="0.0767%" height="15" fill="rgb(206,144,50)" fg:x="276728" fg:w="231"/><text x="92.1258%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,967 instructions, 1.32%)</title><rect x="90.6033%" y="325" width="1.3165%" height="15" fill="rgb(216,9,51)" fg:x="273023" fg:w="3967"/><text x="90.8962%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.9221%" y="309" width="0.0206%" height="15" fill="rgb(226,6,53)" fg:x="276997" fg:w="62"/><text x="92.2150%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.9426%" y="309" width="0.0222%" height="15" fill="rgb(216,9,50)" fg:x="277059" fg:w="67"/><text x="92.2356%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.9221%" y="325" width="0.0767%" height="15" fill="rgb(214,101,31)" fg:x="276997" fg:w="231"/><text x="92.2150%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,243 instructions, 1.41%)</title><rect x="90.6010%" y="341" width="1.4080%" height="15" fill="rgb(247,85,17)" fg:x="273016" fg:w="4243"/><text x="90.8939%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="92.0090%" y="325" width="0.0206%" height="15" fill="rgb(248,138,25)" fg:x="277259" fg:w="62"/><text x="92.3020%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="92.0296%" y="325" width="0.0222%" height="15" fill="rgb(225,146,20)" fg:x="277321" fg:w="67"/><text x="92.3225%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="92.0090%" y="341" width="0.0767%" height="15" fill="rgb(224,184,17)" fg:x="277259" fg:w="231"/><text x="92.3020%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,512 instructions, 1.50%)</title><rect x="90.5986%" y="357" width="1.4973%" height="15" fill="rgb(231,10,20)" fg:x="273009" fg:w="4512"/><text x="90.8916%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="92.0959%" y="341" width="0.0206%" height="15" fill="rgb(210,93,37)" fg:x="277521" fg:w="62"/><text x="92.3889%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="92.1165%" y="341" width="0.0222%" height="15" fill="rgb(226,84,42)" fg:x="277583" fg:w="67"/><text x="92.4095%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="92.0959%" y="357" width="0.0767%" height="15" fill="rgb(253,192,7)" fg:x="277521" fg:w="231"/><text x="92.3889%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,774 instructions, 1.58%)</title><rect x="90.5986%" y="373" width="1.5843%" height="15" fill="rgb(214,107,27)" fg:x="273009" fg:w="4774"/><text x="90.8916%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="92.1829%" y="357" width="0.0206%" height="15" fill="rgb(238,146,21)" fg:x="277783" fg:w="62"/><text x="92.4759%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.06%)</title><rect x="92.1829%" y="373" width="0.0604%" height="15" fill="rgb(209,136,30)" fg:x="277783" fg:w="182"/><text x="92.4759%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (107 instructions, 0.04%)</title><rect x="92.2433%" y="373" width="0.0355%" height="15" fill="rgb(226,60,22)" fg:x="277965" fg:w="107"/><text x="92.5363%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.02%)</title><rect x="92.2788%" y="341" width="0.0209%" height="15" fill="rgb(243,92,26)" fg:x="278072" fg:w="63"/><text x="92.5718%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.2997%" y="341" width="0.0275%" height="15" fill="rgb(211,85,33)" fg:x="278135" fg:w="83"/><text x="92.5927%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.3319%" y="309" width="0.0196%" height="15" fill="rgb(243,187,44)" fg:x="278232" fg:w="59"/><text x="92.6249%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="92.3515%" y="309" width="0.1251%" height="15" fill="rgb(251,172,23)" fg:x="278291" fg:w="377"/><text x="92.6444%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.4766%" y="309" width="0.0259%" height="15" fill="rgb(254,162,50)" fg:x="278668" fg:w="78"/><text x="92.7695%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.3319%" y="325" width="0.2545%" height="15" fill="rgb(239,14,53)" fg:x="278232" fg:w="767"/><text x="92.6249%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,009 instructions, 0.33%)</title><rect x="92.3272%" y="341" width="0.3348%" height="15" fill="rgb(242,208,8)" fg:x="278218" fg:w="1009"/><text x="92.6202%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.6621%" y="341" width="0.0275%" height="15" fill="rgb(225,61,41)" fg:x="279227" fg:w="83"/><text x="92.9551%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.6896%" y="341" width="0.0275%" height="15" fill="rgb(219,154,6)" fg:x="279310" fg:w="83"/><text x="92.9826%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.7218%" y="309" width="0.0196%" height="15" fill="rgb(227,223,44)" fg:x="279407" fg:w="59"/><text x="93.0148%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="92.7414%" y="309" width="0.1251%" height="15" fill="rgb(220,188,6)" fg:x="279466" fg:w="377"/><text x="93.0344%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.8665%" y="309" width="0.0259%" height="15" fill="rgb(216,65,22)" fg:x="279843" fg:w="78"/><text x="93.1595%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.7218%" y="325" width="0.2545%" height="15" fill="rgb(236,66,46)" fg:x="279407" fg:w="767"/><text x="93.0148%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="92.9763%" y="325" width="0.2240%" height="15" fill="rgb(211,150,52)" fg:x="280174" fg:w="675"/><text x="93.2693%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="93.2003%" y="309" width="0.0285%" height="15" fill="rgb(253,89,19)" fg:x="280849" fg:w="86"/><text x="93.4933%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.04%)</title><rect x="93.2003%" y="325" width="0.0402%" height="15" fill="rgb(245,4,1)" fg:x="280849" fg:w="121"/><text x="93.4933%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,772 instructions, 0.59%)</title><rect x="92.7172%" y="341" width="0.5880%" height="15" fill="rgb(230,109,16)" fg:x="279393" fg:w="1772"/><text x="93.0101%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.3052%" y="293" width="0.0196%" height="15" fill="rgb(213,7,47)" fg:x="281165" fg:w="59"/><text x="93.5982%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.3248%" y="293" width="0.0544%" height="15" fill="rgb(242,148,14)" fg:x="281224" fg:w="164"/><text x="93.6178%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.3052%" y="309" width="0.0949%" height="15" fill="rgb(238,51,34)" fg:x="281165" fg:w="286"/><text x="93.5982%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.4735%" y="293" width="0.0196%" height="15" fill="rgb(222,49,22)" fg:x="281672" fg:w="59"/><text x="93.7664%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.4930%" y="293" width="0.0544%" height="15" fill="rgb(237,102,50)" fg:x="281731" fg:w="164"/><text x="93.7860%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.4735%" y="309" width="0.0949%" height="15" fill="rgb(237,195,8)" fg:x="281672" fg:w="286"/><text x="93.7664%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,014 instructions, 0.34%)</title><rect x="93.3052%" y="325" width="0.3365%" height="15" fill="rgb(245,60,18)" fg:x="281165" fg:w="1014"/><text x="93.5982%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,344 instructions, 0.45%)</title><rect x="93.3052%" y="341" width="0.4460%" height="15" fill="rgb(253,74,32)" fg:x="281165" fg:w="1344"/><text x="93.5982%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,588 instructions, 1.52%)</title><rect x="92.2788%" y="357" width="1.5225%" height="15" fill="rgb(240,91,39)" fg:x="278072" fg:w="4588"/><text x="92.5718%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.8013%" y="325" width="0.0275%" height="15" fill="rgb(221,162,34)" fg:x="282660" fg:w="83"/><text x="94.0943%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="93.8013%" y="341" width="0.0418%" height="15" fill="rgb(223,32,2)" fg:x="282660" fg:w="126"/><text x="94.0943%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.07%)</title><rect x="93.8013%" y="357" width="0.0690%" height="15" fill="rgb(245,220,46)" fg:x="282660" fg:w="208"/><text x="94.0943%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="93.8803%" y="309" width="0.0272%" height="15" fill="rgb(216,38,33)" fg:x="282898" fg:w="82"/><text x="94.1733%" y="319.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.06%)</title><rect x="93.8803%" y="325" width="0.0564%" height="15" fill="rgb(210,123,14)" fg:x="282898" fg:w="170"/><text x="94.1733%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.9367%" y="325" width="0.0275%" height="15" fill="rgb(214,38,47)" fg:x="283068" fg:w="83"/><text x="94.2297%" y="335.50"></text></g><g><title>candid::types::internal::unroll (348 instructions, 0.12%)</title><rect x="93.8803%" y="341" width="0.1155%" height="15" fill="rgb(244,180,16)" fg:x="282898" fg:w="348"/><text x="94.1733%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.9958%" y="293" width="0.0196%" height="15" fill="rgb(252,21,32)" fg:x="283246" fg:w="59"/><text x="94.2888%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="94.0154%" y="293" width="0.0544%" height="15" fill="rgb(245,218,31)" fg:x="283305" fg:w="164"/><text x="94.3083%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.9958%" y="309" width="0.0949%" height="15" fill="rgb(247,81,18)" fg:x="283246" fg:w="286"/><text x="94.2888%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="93.9958%" y="325" width="0.1682%" height="15" fill="rgb(220,151,1)" fg:x="283246" fg:w="507"/><text x="94.2888%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.1640%" y="325" width="0.0275%" height="15" fill="rgb(211,157,11)" fg:x="283753" fg:w="83"/><text x="94.4570%" y="335.50"></text></g><g><title>memset (152 instructions, 0.05%)</title><rect x="94.1916%" y="325" width="0.0504%" height="15" fill="rgb(239,46,30)" fg:x="283836" fg:w="152"/><text x="94.4846%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 0.36%)</title><rect x="93.9958%" y="341" width="0.3577%" height="15" fill="rgb(236,144,43)" fg:x="283246" fg:w="1078"/><text x="94.2888%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.3535%" y="309" width="0.0275%" height="15" fill="rgb(206,71,45)" fg:x="284324" fg:w="83"/><text x="94.6465%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.3535%" y="325" width="0.0418%" height="15" fill="rgb(240,85,31)" fg:x="284324" fg:w="126"/><text x="94.6465%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.07%)</title><rect x="94.3535%" y="341" width="0.0690%" height="15" fill="rgb(221,43,52)" fg:x="284324" fg:w="208"/><text x="94.6465%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.4226%" y="293" width="0.0196%" height="15" fill="rgb(243,106,22)" fg:x="284532" fg:w="59"/><text x="94.7155%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.03%)</title><rect x="94.4226%" y="309" width="0.0312%" height="15" fill="rgb(209,138,38)" fg:x="284532" fg:w="94"/><text x="94.7155%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.10%)</title><rect x="94.4226%" y="325" width="0.1045%" height="15" fill="rgb(216,63,40)" fg:x="284532" fg:w="315"/><text x="94.7155%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.16%)</title><rect x="94.4226%" y="341" width="0.1616%" height="15" fill="rgb(206,115,21)" fg:x="284532" fg:w="487"/><text x="94.7155%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.5842%" y="293" width="0.0275%" height="15" fill="rgb(235,53,44)" fg:x="285019" fg:w="83"/><text x="94.8771%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.5842%" y="309" width="0.0418%" height="15" fill="rgb(244,160,14)" fg:x="285019" fg:w="126"/><text x="94.8771%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.07%)</title><rect x="94.5842%" y="325" width="0.0680%" height="15" fill="rgb(223,16,19)" fg:x="285019" fg:w="205"/><text x="94.8771%" y="335.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.09%)</title><rect x="94.5842%" y="341" width="0.0876%" height="15" fill="rgb(242,63,42)" fg:x="285019" fg:w="264"/><text x="94.8771%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.02%)</title><rect x="94.6718%" y="341" width="0.0206%" height="15" fill="rgb(209,66,49)" fg:x="285283" fg:w="62"/><text x="94.9648%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="94.6924%" y="309" width="0.0285%" height="15" fill="rgb(207,126,46)" fg:x="285345" fg:w="86"/><text x="94.9853%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.04%)</title><rect x="94.6924%" y="325" width="0.0402%" height="15" fill="rgb(218,160,41)" fg:x="285345" fg:w="121"/><text x="94.9853%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.03%)</title><rect x="94.7325%" y="325" width="0.0279%" height="15" fill="rgb(234,125,46)" fg:x="285466" fg:w="84"/><text x="95.0255%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.08%)</title><rect x="94.6924%" y="341" width="0.0830%" height="15" fill="rgb(205,66,36)" fg:x="285345" fg:w="250"/><text x="94.9853%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,997 instructions, 0.99%)</title><rect x="93.8704%" y="357" width="0.9946%" height="15" fill="rgb(220,135,16)" fg:x="282868" fg:w="2997"/><text x="94.1633%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.8692%" y="309" width="0.0275%" height="15" fill="rgb(214,217,54)" fg:x="285878" fg:w="83"/><text x="95.1622%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.8692%" y="325" width="0.0418%" height="15" fill="rgb(206,30,9)" fg:x="285878" fg:w="126"/><text x="95.1622%" y="335.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="94.9373%" y="309" width="0.0365%" height="15" fill="rgb(207,196,5)" fg:x="286083" fg:w="110"/><text x="95.2302%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="94.9373%" y="325" width="0.0514%" height="15" fill="rgb(227,116,12)" fg:x="286083" fg:w="155"/><text x="95.2302%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 instructions, 0.15%)</title><rect x="94.8692%" y="341" width="0.1487%" height="15" fill="rgb(235,227,13)" fg:x="285878" fg:w="448"/><text x="95.1622%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="95.0179%" y="341" width="0.1035%" height="15" fill="rgb(238,212,29)" fg:x="286326" fg:w="312"/><text x="95.3109%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (853 instructions, 0.28%)</title><rect x="94.8692%" y="357" width="0.2831%" height="15" fill="rgb(230,152,17)" fg:x="285878" fg:w="853"/><text x="95.1622%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.1978%" y="309" width="0.0196%" height="15" fill="rgb(220,197,1)" fg:x="286868" fg:w="59"/><text x="95.4907%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="95.2173%" y="309" width="0.1251%" height="15" fill="rgb(229,227,40)" fg:x="286927" fg:w="377"/><text x="95.5103%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="95.3425%" y="309" width="0.0259%" height="15" fill="rgb(227,179,16)" fg:x="287304" fg:w="78"/><text x="95.6354%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="95.1978%" y="325" width="0.2545%" height="15" fill="rgb(246,116,44)" fg:x="286868" fg:w="767"/><text x="95.4907%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="95.4523%" y="325" width="0.2240%" height="15" fill="rgb(205,191,4)" fg:x="287635" fg:w="675"/><text x="95.7453%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,640 instructions, 0.54%)</title><rect x="95.1931%" y="341" width="0.5442%" height="15" fill="rgb(245,69,19)" fg:x="286854" fg:w="1640"/><text x="95.4861%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,684 instructions, 0.56%)</title><rect x="95.1931%" y="357" width="0.5588%" height="15" fill="rgb(230,29,26)" fg:x="286854" fg:w="1684"/><text x="95.4861%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.7520%" y="309" width="0.0196%" height="15" fill="rgb(239,192,26)" fg:x="288538" fg:w="59"/><text x="96.0449%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="95.7715%" y="309" width="0.0544%" height="15" fill="rgb(219,92,16)" fg:x="288597" fg:w="164"/><text x="96.0645%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="95.7520%" y="325" width="0.0949%" height="15" fill="rgb(246,147,43)" fg:x="288538" fg:w="286"/><text x="96.0449%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="95.7520%" y="341" width="0.1682%" height="15" fill="rgb(222,147,11)" fg:x="288538" fg:w="507"/><text x="96.0449%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (610 instructions, 0.20%)</title><rect x="95.7520%" y="357" width="0.2024%" height="15" fill="rgb(243,71,8)" fg:x="288538" fg:w="610"/><text x="96.0449%" y="367.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="95.9587%" y="309" width="0.0365%" height="15" fill="rgb(250,36,12)" fg:x="289161" fg:w="110"/><text x="96.2517%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="95.9587%" y="325" width="0.0514%" height="15" fill="rgb(207,168,14)" fg:x="289161" fg:w="155"/><text x="96.2517%" y="335.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="96.0393%" y="309" width="0.0365%" height="15" fill="rgb(254,210,51)" fg:x="289404" fg:w="110"/><text x="96.3323%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="96.0393%" y="325" width="0.0514%" height="15" fill="rgb(236,152,38)" fg:x="289404" fg:w="155"/><text x="96.3323%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (486 instructions, 0.16%)</title><rect x="95.9587%" y="341" width="0.1613%" height="15" fill="rgb(240,164,36)" fg:x="289161" fg:w="486"/><text x="96.2517%" y="351.50"></text></g><g><title>memcpy (4,124 instructions, 1.37%)</title><rect x="96.1200%" y="341" width="1.3686%" height="15" fill="rgb(210,171,36)" fg:x="289647" fg:w="4124"/><text x="96.4130%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,745 instructions, 1.57%)</title><rect x="95.9587%" y="357" width="1.5746%" height="15" fill="rgb(254,156,34)" fg:x="289161" fg:w="4745"/><text x="96.2517%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (15,945 instructions, 5.29%)</title><rect x="92.2788%" y="373" width="5.2914%" height="15" fill="rgb(216,204,23)" fg:x="278072" fg:w="15945"/><text x="92.5718%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (96 instructions, 0.03%)</title><rect x="97.5702%" y="373" width="0.0319%" height="15" fill="rgb(230,75,38)" fg:x="294017" fg:w="96"/><text x="97.8631%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.04%)</title><rect x="97.6020%" y="373" width="0.0431%" height="15" fill="rgb(248,197,25)" fg:x="294113" fg:w="130"/><text x="97.8950%" y="383.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.17%)</title><rect x="97.6452%" y="357" width="0.1719%" height="15" fill="rgb(234,121,26)" fg:x="294243" fg:w="518"/><text x="97.9381%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.04%)</title><rect x="97.8171%" y="309" width="0.0402%" height="15" fill="rgb(220,41,36)" fg:x="294761" fg:w="121"/><text x="98.1100%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.05%)</title><rect x="97.8171%" y="325" width="0.0544%" height="15" fill="rgb(227,33,32)" fg:x="294761" fg:w="164"/><text x="98.1100%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.08%)</title><rect x="97.8171%" y="341" width="0.0806%" height="15" fill="rgb(208,214,54)" fg:x="294761" fg:w="243"/><text x="98.1100%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="97.8977%" y="341" width="0.0275%" height="15" fill="rgb(205,37,38)" fg:x="295004" fg:w="83"/><text x="98.1907%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9253%" y="341" width="0.0169%" height="15" fill="rgb(252,2,0)" fg:x="295087" fg:w="51"/><text x="98.2182%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9422%" y="341" width="0.0169%" height="15" fill="rgb(212,171,10)" fg:x="295138" fg:w="51"/><text x="98.2352%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="97.9591%" y="341" width="0.0199%" height="15" fill="rgb(239,35,46)" fg:x="295189" fg:w="60"/><text x="98.2521%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="97.9790%" y="293" width="0.0196%" height="15" fill="rgb(209,34,42)" fg:x="295249" fg:w="59"/><text x="98.2720%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="97.9986%" y="293" width="0.0544%" height="15" fill="rgb(237,9,4)" fg:x="295308" fg:w="164"/><text x="98.2916%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="97.9790%" y="309" width="0.0949%" height="15" fill="rgb(254,55,38)" fg:x="295249" fg:w="286"/><text x="98.2720%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="97.9790%" y="325" width="0.1682%" height="15" fill="rgb(222,95,29)" fg:x="295249" fg:w="507"/><text x="98.2720%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="98.1473%" y="293" width="0.0275%" height="15" fill="rgb(241,218,37)" fg:x="295756" fg:w="83"/><text x="98.4402%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="98.1473%" y="309" width="0.0418%" height="15" fill="rgb(225,89,28)" fg:x="295756" fg:w="126"/><text x="98.4402%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.07%)</title><rect x="98.1473%" y="325" width="0.0680%" height="15" fill="rgb(231,17,25)" fg:x="295756" fg:w="205"/><text x="98.4402%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="98.2780%" y="293" width="0.0196%" height="15" fill="rgb(206,216,48)" fg:x="296150" fg:w="59"/><text x="98.5710%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="98.2976%" y="293" width="0.0544%" height="15" fill="rgb(247,190,28)" fg:x="296209" fg:w="164"/><text x="98.5906%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="98.2780%" y="309" width="0.0949%" height="15" fill="rgb(216,196,12)" fg:x="296150" fg:w="286"/><text x="98.5710%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="98.2780%" y="325" width="0.1682%" height="15" fill="rgb(232,114,19)" fg:x="296150" fg:w="507"/><text x="98.5710%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,588 instructions, 0.53%)</title><rect x="97.9790%" y="341" width="0.5270%" height="15" fill="rgb(240,60,14)" fg:x="295249" fg:w="1588"/><text x="98.2720%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.5060%" y="341" width="0.0169%" height="15" fill="rgb(250,108,9)" fg:x="296837" fg:w="51"/><text x="98.7990%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.5229%" y="341" width="0.0199%" height="15" fill="rgb(227,228,21)" fg:x="296888" fg:w="60"/><text x="98.8159%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,591 instructions, 0.86%)</title><rect x="97.8171%" y="357" width="0.8598%" height="15" fill="rgb(254,16,52)" fg:x="294761" fg:w="2591"/><text x="98.1100%" y="367.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.17%)</title><rect x="98.6769%" y="357" width="0.1726%" height="15" fill="rgb(222,58,2)" fg:x="297352" fg:w="520"/><text x="98.9699%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,250 instructions, 0.41%)</title><rect x="98.8495%" y="357" width="0.4148%" height="15" fill="rgb(253,68,14)" fg:x="297872" fg:w="1250"/><text x="99.1424%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (4,972 instructions, 1.65%)</title><rect x="97.6452%" y="373" width="1.6500%" height="15" fill="rgb(226,96,17)" fg:x="294243" fg:w="4972"/><text x="97.9381%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.2951%" y="373" width="0.0285%" height="15" fill="rgb(227,199,2)" fg:x="299215" fg:w="86"/><text x="99.5881%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.04%)</title><rect x="99.3237%" y="373" width="0.0438%" height="15" fill="rgb(228,227,48)" fg:x="299301" fg:w="132"/><text x="99.6167%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.3718%" y="373" width="0.0408%" height="15" fill="rgb(249,183,0)" fg:x="299446" fg:w="123"/><text x="99.6648%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.4232%" y="373" width="0.0285%" height="15" fill="rgb(250,89,38)" fg:x="299601" fg:w="86"/><text x="99.7162%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (109 instructions, 0.04%)</title><rect x="99.4518%" y="373" width="0.0362%" height="15" fill="rgb(240,227,8)" fg:x="299687" fg:w="109"/><text x="99.7447%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (96 instructions, 0.03%)</title><rect x="99.4880%" y="373" width="0.0319%" height="15" fill="rgb(242,197,35)" fg:x="299796" fg:w="96"/><text x="99.7809%" y="383.50"></text></g><g><title>certified_map::__canister_method_witness::{{closure}} (300,737 instructions, 99.80%)</title><rect x="0.0737%" y="389" width="99.8002%" height="15" fill="rgb(224,37,41)" fg:x="222" fg:w="300737"/><text x="0.3666%" y="399.50">certified_map::__canister_method_witness::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.8789%" y="389" width="0.0285%" height="15" fill="rgb(236,127,7)" fg:x="300974" fg:w="86"/><text x="100.1718%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="99.9074%" y="389" width="0.0448%" height="15" fill="rgb(230,62,52)" fg:x="301060" fg:w="135"/><text x="100.2004%" y="399.50"></text></g><g><title>all (301,339 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(235,114,23)" fg:x="0" fg:w="301339"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (301,339 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(211,55,40)" fg:x="0" fg:w="301339"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>