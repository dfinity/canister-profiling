<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="301445"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.04%)</title><rect x="0.0080%" y="389" width="0.0401%" height="15" fill="rgb(251,27,52)" fg:x="24" fg:w="121"/><text x="0.3009%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (77 instructions, 0.03%)</title><rect x="0.0481%" y="389" width="0.0255%" height="15" fill="rgb(221,76,2)" fg:x="145" fg:w="77"/><text x="0.3411%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.0736%" y="357" width="0.0302%" height="15" fill="rgb(242,94,41)" fg:x="222" fg:w="91"/><text x="0.3666%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.1038%" y="341" width="0.0272%" height="15" fill="rgb(245,9,8)" fg:x="313" fg:w="82"/><text x="0.3968%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.1310%" y="341" width="0.1460%" height="15" fill="rgb(236,139,26)" fg:x="395" fg:w="440"/><text x="0.4240%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.2770%" y="341" width="0.0315%" height="15" fill="rgb(249,11,18)" fg:x="835" fg:w="95"/><text x="0.5700%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3085%" y="341" width="0.0199%" height="15" fill="rgb(206,175,35)" fg:x="930" fg:w="60"/><text x="0.6015%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3284%" y="341" width="0.0199%" height="15" fill="rgb(231,3,46)" fg:x="990" fg:w="60"/><text x="0.6214%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3483%" y="341" width="0.0199%" height="15" fill="rgb(243,27,8)" fg:x="1050" fg:w="60"/><text x="0.6413%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3682%" y="341" width="0.0199%" height="15" fill="rgb(223,53,13)" fg:x="1110" fg:w="60"/><text x="0.6612%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.3881%" y="341" width="0.0272%" height="15" fill="rgb(248,68,15)" fg:x="1170" fg:w="82"/><text x="0.6811%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.4153%" y="341" width="0.0232%" height="15" fill="rgb(216,61,26)" fg:x="1252" fg:w="70"/><text x="0.7083%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.4386%" y="341" width="0.1460%" height="15" fill="rgb(213,201,24)" fg:x="1322" fg:w="440"/><text x="0.7315%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.5908%" y="325" width="0.0302%" height="15" fill="rgb(214,20,17)" fg:x="1781" fg:w="91"/><text x="0.8838%" y="335.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="0.6210%" y="293" width="0.0222%" height="15" fill="rgb(206,21,46)" fg:x="1872" fg:w="67"/><text x="0.9140%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.03%)</title><rect x="0.6210%" y="309" width="0.0325%" height="15" fill="rgb(234,222,24)" fg:x="1872" fg:w="98"/><text x="0.9140%" y="319.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="0.6572%" y="245" width="0.0116%" height="15" fill="rgb(221,25,26)" fg:x="1981" fg:w="35"/><text x="0.9501%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.02%)</title><rect x="0.6572%" y="261" width="0.0219%" height="15" fill="rgb(241,148,26)" fg:x="1981" fg:w="66"/><text x="0.9501%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.05%)</title><rect x="0.6535%" y="277" width="0.0488%" height="15" fill="rgb(248,119,35)" fg:x="1970" fg:w="147"/><text x="0.9465%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.07%)</title><rect x="0.6535%" y="293" width="0.0703%" height="15" fill="rgb(239,126,23)" fg:x="1970" fg:w="212"/><text x="0.9465%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.07%)</title><rect x="0.6535%" y="309" width="0.0736%" height="15" fill="rgb(247,120,25)" fg:x="1970" fg:w="222"/><text x="0.9465%" y="319.50"></text></g><g><title>core::fmt::write (461 instructions, 0.15%)</title><rect x="0.6210%" y="325" width="0.1529%" height="15" fill="rgb(220,93,32)" fg:x="1872" fg:w="461"/><text x="0.9140%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 0.23%)</title><rect x="0.5908%" y="341" width="0.2312%" height="15" fill="rgb(236,46,26)" fg:x="1781" fg:w="697"/><text x="0.8838%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.8220%" y="341" width="0.0315%" height="15" fill="rgb(229,20,45)" fg:x="2478" fg:w="95"/><text x="1.1150%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="0.8536%" y="341" width="0.0209%" height="15" fill="rgb(225,168,41)" fg:x="2573" fg:w="63"/><text x="1.1465%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="0.8745%" y="341" width="0.0252%" height="15" fill="rgb(253,123,20)" fg:x="2636" fg:w="76"/><text x="1.1674%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.8997%" y="341" width="0.0232%" height="15" fill="rgb(244,17,29)" fg:x="2712" fg:w="70"/><text x="1.1926%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (440 instructions, 0.15%)</title><rect x="0.9229%" y="325" width="0.1460%" height="15" fill="rgb(242,196,24)" fg:x="2782" fg:w="440"/><text x="1.2159%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.0752%" y="309" width="0.0302%" height="15" fill="rgb(210,113,45)" fg:x="3241" fg:w="91"/><text x="1.3681%" y="319.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="1.1053%" y="277" width="0.0222%" height="15" fill="rgb(205,129,3)" fg:x="3332" fg:w="67"/><text x="1.3983%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (98 instructions, 0.03%)</title><rect x="1.1053%" y="293" width="0.0325%" height="15" fill="rgb(232,74,10)" fg:x="3332" fg:w="98"/><text x="1.3983%" y="303.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="1.1415%" y="229" width="0.0116%" height="15" fill="rgb(251,63,43)" fg:x="3441" fg:w="35"/><text x="1.4345%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (66 instructions, 0.02%)</title><rect x="1.1415%" y="245" width="0.0219%" height="15" fill="rgb(228,215,15)" fg:x="3441" fg:w="66"/><text x="1.4345%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (147 instructions, 0.05%)</title><rect x="1.1379%" y="261" width="0.0488%" height="15" fill="rgb(233,179,38)" fg:x="3430" fg:w="147"/><text x="1.4308%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (212 instructions, 0.07%)</title><rect x="1.1379%" y="277" width="0.0703%" height="15" fill="rgb(227,187,9)" fg:x="3430" fg:w="212"/><text x="1.4308%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (222 instructions, 0.07%)</title><rect x="1.1379%" y="293" width="0.0736%" height="15" fill="rgb(231,89,27)" fg:x="3430" fg:w="222"/><text x="1.4308%" y="303.50"></text></g><g><title>core::fmt::write (461 instructions, 0.15%)</title><rect x="1.1053%" y="309" width="0.1529%" height="15" fill="rgb(225,117,1)" fg:x="3332" fg:w="461"/><text x="1.3983%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (697 instructions, 0.23%)</title><rect x="1.0752%" y="325" width="0.2312%" height="15" fill="rgb(239,120,49)" fg:x="3241" fg:w="697"/><text x="1.3681%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="1.3064%" y="325" width="0.0315%" height="15" fill="rgb(236,137,37)" fg:x="3938" fg:w="95"/><text x="1.5993%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="1.3379%" y="325" width="0.0209%" height="15" fill="rgb(239,73,42)" fg:x="4033" fg:w="63"/><text x="1.6309%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,503 instructions, 0.50%)</title><rect x="0.9229%" y="341" width="0.4986%" height="15" fill="rgb(207,169,6)" fg:x="2782" fg:w="1503"/><text x="1.2159%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="1.4215%" y="341" width="0.0252%" height="15" fill="rgb(228,171,10)" fg:x="4285" fg:w="76"/><text x="1.7145%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4656%" y="341" width="0.0302%" height="15" fill="rgb(217,228,47)" fg:x="4418" fg:w="91"/><text x="1.7586%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4958%" y="341" width="0.0302%" height="15" fill="rgb(227,116,17)" fg:x="4509" fg:w="91"/><text x="1.7888%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.5273%" y="341" width="0.1420%" height="15" fill="rgb(245,128,36)" fg:x="4604" fg:w="428"/><text x="1.8203%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.6693%" y="341" width="0.1420%" height="15" fill="rgb(221,139,3)" fg:x="5032" fg:w="428"/><text x="1.9623%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,119 instructions, 2.03%)</title><rect x="0.1038%" y="357" width="2.0299%" height="15" fill="rgb(207,59,54)" fg:x="313" fg:w="6119"/><text x="0.3968%" y="367.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="2.1337%" y="357" width="0.1261%" height="15" fill="rgb(231,129,12)" fg:x="6432" fg:w="380"/><text x="2.4267%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="2.2661%" y="309" width="0.0285%" height="15" fill="rgb(235,49,17)" fg:x="6831" fg:w="86"/><text x="2.5591%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="2.3062%" y="309" width="0.0372%" height="15" fill="rgb(229,175,11)" fg:x="6952" fg:w="112"/><text x="2.5992%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (268 instructions, 0.09%)</title><rect x="2.2661%" y="325" width="0.0889%" height="15" fill="rgb(206,187,30)" fg:x="6831" fg:w="268"/><text x="2.5591%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (342 instructions, 0.11%)</title><rect x="2.2598%" y="341" width="0.1135%" height="15" fill="rgb(214,39,19)" fg:x="6812" fg:w="342"/><text x="2.5528%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (391 instructions, 0.13%)</title><rect x="2.2598%" y="357" width="0.1297%" height="15" fill="rgb(243,92,46)" fg:x="6812" fg:w="391"/><text x="2.5528%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="2.3895%" y="357" width="0.0209%" height="15" fill="rgb(240,125,36)" fg:x="7203" fg:w="63"/><text x="2.6825%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (8,192 instructions, 2.72%)</title><rect x="0.0736%" y="373" width="2.7176%" height="15" fill="rgb(217,193,45)" fg:x="222" fg:w="8192"/><text x="0.3666%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="2.7912%" y="341" width="0.0302%" height="15" fill="rgb(230,127,16)" fg:x="8414" fg:w="91"/><text x="3.0842%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 instructions, 0.04%)</title><rect x="2.7912%" y="357" width="0.0425%" height="15" fill="rgb(208,161,0)" fg:x="8414" fg:w="128"/><text x="3.0842%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (207 instructions, 0.07%)</title><rect x="2.7912%" y="373" width="0.0687%" height="15" fill="rgb(251,69,39)" fg:x="8414" fg:w="207"/><text x="3.0842%" y="383.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.8914%" y="277" width="0.0139%" height="15" fill="rgb(229,86,22)" fg:x="8716" fg:w="42"/><text x="3.1844%" y="287.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9053%" y="261" width="0.0139%" height="15" fill="rgb(223,67,43)" fg:x="8758" fg:w="42"/><text x="3.1983%" y="271.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9193%" y="245" width="0.0139%" height="15" fill="rgb(254,80,31)" fg:x="8800" fg:w="42"/><text x="3.2122%" y="255.50"></text></g><g><title>memcmp (65 instructions, 0.02%)</title><rect x="2.9332%" y="229" width="0.0216%" height="15" fill="rgb(225,149,52)" fg:x="8842" fg:w="65"/><text x="3.2262%" y="239.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9548%" y="213" width="0.0139%" height="15" fill="rgb(214,169,18)" fg:x="8907" fg:w="42"/><text x="3.2477%" y="223.50"></text></g><g><title>memcmp (169 instructions, 0.06%)</title><rect x="2.9687%" y="197" width="0.0561%" height="15" fill="rgb(236,224,43)" fg:x="8949" fg:w="169"/><text x="3.2617%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0248%" y="197" width="0.0302%" height="15" fill="rgb(251,125,34)" fg:x="9118" fg:w="91"/><text x="3.3177%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0550%" y="181" width="0.0302%" height="15" fill="rgb(224,39,44)" fg:x="9209" fg:w="91"/><text x="3.3479%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="3.0851%" y="181" width="0.1141%" height="15" fill="rgb(206,111,46)" fg:x="9300" fg:w="344"/><text x="3.3781%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.1993%" y="181" width="0.0302%" height="15" fill="rgb(227,147,50)" fg:x="9644" fg:w="91"/><text x="3.4922%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (838 instructions, 0.28%)</title><rect x="3.0550%" y="197" width="0.2780%" height="15" fill="rgb(239,144,36)" fg:x="9209" fg:w="838"/><text x="3.3479%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,286 instructions, 0.43%)</title><rect x="2.9687%" y="213" width="0.4266%" height="15" fill="rgb(216,17,19)" fg:x="8949" fg:w="1286"/><text x="3.2617%" y="223.50"></text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="3.3953%" y="197" width="0.0796%" height="15" fill="rgb(211,192,29)" fg:x="10235" fg:w="240"/><text x="3.6883%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.4749%" y="197" width="0.1672%" height="15" fill="rgb(238,195,20)" fg:x="10475" fg:w="504"/><text x="3.7679%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="3.6421%" y="197" width="0.0435%" height="15" fill="rgb(213,210,42)" fg:x="10979" fg:w="131"/><text x="3.9351%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.6856%" y="197" width="0.1672%" height="15" fill="rgb(244,4,49)" fg:x="11110" fg:w="504"/><text x="3.9785%" y="207.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="3.8528%" y="181" width="0.0607%" height="15" fill="rgb(254,106,42)" fg:x="11614" fg:w="183"/><text x="4.1457%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="3.9135%" y="181" width="1.6544%" height="15" fill="rgb(222,182,12)" fg:x="11797" fg:w="4987"/><text x="4.2065%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="3.8528%" y="197" width="1.8156%" height="15" fill="rgb(228,160,15)" fg:x="11614" fg:w="5473"/><text x="4.1457%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="3.3953%" y="213" width="2.3407%" height="15" fill="rgb(243,149,43)" fg:x="10235" fg:w="7056"/><text x="3.6883%" y="223.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="5.7360%" y="197" width="0.0796%" height="15" fill="rgb(245,150,32)" fg:x="17291" fg:w="240"/><text x="6.0290%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="5.8157%" y="197" width="0.1672%" height="15" fill="rgb(205,43,19)" fg:x="17531" fg:w="504"/><text x="6.1086%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="5.9828%" y="197" width="0.0435%" height="15" fill="rgb(249,189,35)" fg:x="18035" fg:w="131"/><text x="6.2758%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.0263%" y="197" width="0.1672%" height="15" fill="rgb(223,9,0)" fg:x="18166" fg:w="504"/><text x="6.3193%" y="207.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="6.1935%" y="181" width="0.0212%" height="15" fill="rgb(213,142,45)" fg:x="18670" fg:w="64"/><text x="6.4865%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="6.2147%" y="181" width="1.6544%" height="15" fill="rgb(208,148,2)" fg:x="18734" fg:w="4987"/><text x="6.5077%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="7.8691%" y="181" width="1.6544%" height="15" fill="rgb(207,191,42)" fg:x="23721" fg:w="4987"/><text x="8.1621%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="6.1935%" y="197" width="3.4434%" height="15" fill="rgb(215,218,38)" fg:x="18670" fg:w="10380"/><text x="6.4865%" y="207.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="5.7360%" y="213" width="3.9865%" height="15" fill="rgb(223,195,24)" fg:x="17291" fg:w="12017"/><text x="6.0290%" y="223.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="9.7225%" y="181" width="0.0796%" height="15" fill="rgb(254,60,30)" fg:x="29308" fg:w="240"/><text x="10.0155%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="9.8021%" y="181" width="0.1672%" height="15" fill="rgb(223,2,9)" fg:x="29548" fg:w="504"/><text x="10.0951%" y="191.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="9.9693%" y="181" width="0.0859%" height="15" fill="rgb(253,134,46)" fg:x="30052" fg:w="259"/><text x="10.2623%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="10.0552%" y="181" width="1.6544%" height="15" fill="rgb(206,209,20)" fg:x="30311" fg:w="4987"/><text x="10.3482%" y="191.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="11.7096%" y="181" width="0.0464%" height="15" fill="rgb(253,104,42)" fg:x="35298" fg:w="140"/><text x="12.0026%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="11.7560%" y="181" width="0.1672%" height="15" fill="rgb(223,47,23)" fg:x="35438" fg:w="504"/><text x="12.0490%" y="191.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="11.9232%" y="165" width="0.0644%" height="15" fill="rgb(247,148,44)" fg:x="35942" fg:w="194"/><text x="12.2162%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="11.9876%" y="165" width="1.6544%" height="15" fill="rgb(221,224,16)" fg:x="36136" fg:w="4987"/><text x="12.2806%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="11.9232%" y="181" width="1.8192%" height="15" fill="rgb(252,103,29)" fg:x="35942" fg:w="5484"/><text x="12.2162%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="9.7225%" y="197" width="4.1165%" height="15" fill="rgb(244,185,34)" fg:x="29308" fg:w="12409"/><text x="10.0155%" y="207.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="13.8390%" y="197" width="0.0302%" height="15" fill="rgb(218,18,50)" fg:x="41717" fg:w="91"/><text x="14.1320%" y="207.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="13.8692%" y="197" width="0.1141%" height="15" fill="rgb(234,105,8)" fg:x="41808" fg:w="344"/><text x="14.1622%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.37%)</title><rect x="9.7225%" y="213" width="4.3739%" height="15" fill="rgb(249,51,19)" fg:x="29308" fg:w="13185"/><text x="10.0155%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,791 instructions, 11.21%)</title><rect x="2.9548%" y="229" width="11.2097%" height="15" fill="rgb(233,132,7)" fg:x="8907" fg:w="33791"/><text x="3.2477%" y="239.50">ic_certified_m..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="14.1644%" y="213" width="0.0796%" height="15" fill="rgb(229,181,43)" fg:x="42698" fg:w="240"/><text x="14.4574%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.2441%" y="213" width="0.1672%" height="15" fill="rgb(223,20,7)" fg:x="42938" fg:w="504"/><text x="14.5370%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="14.4113%" y="213" width="0.0435%" height="15" fill="rgb(245,13,34)" fg:x="43442" fg:w="131"/><text x="14.7042%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.4547%" y="213" width="0.1672%" height="15" fill="rgb(242,0,53)" fg:x="43573" fg:w="504"/><text x="14.7477%" y="223.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="14.6219%" y="197" width="0.0607%" height="15" fill="rgb(233,115,19)" fg:x="44077" fg:w="183"/><text x="14.9149%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="14.6826%" y="197" width="1.6544%" height="15" fill="rgb(216,170,26)" fg:x="44260" fg:w="4987"/><text x="14.9756%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="14.6219%" y="213" width="1.8156%" height="15" fill="rgb(233,13,0)" fg:x="44077" fg:w="5473"/><text x="14.9149%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="14.1644%" y="229" width="2.3407%" height="15" fill="rgb(228,79,21)" fg:x="42698" fg:w="7056"/><text x="14.4574%" y="239.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="16.5052%" y="213" width="0.0796%" height="15" fill="rgb(244,17,41)" fg:x="49754" fg:w="240"/><text x="16.7981%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.5848%" y="213" width="0.1672%" height="15" fill="rgb(253,152,11)" fg:x="49994" fg:w="504"/><text x="16.8778%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="16.7520%" y="213" width="0.0435%" height="15" fill="rgb(254,94,47)" fg:x="50498" fg:w="131"/><text x="17.0449%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.7954%" y="213" width="0.1672%" height="15" fill="rgb(239,66,43)" fg:x="50629" fg:w="504"/><text x="17.0884%" y="223.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="16.9626%" y="197" width="0.0212%" height="15" fill="rgb(251,25,22)" fg:x="51133" fg:w="64"/><text x="17.2556%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="16.9839%" y="197" width="1.6544%" height="15" fill="rgb(227,65,46)" fg:x="51197" fg:w="4987"/><text x="17.2768%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="18.6382%" y="197" width="1.6544%" height="15" fill="rgb(240,180,32)" fg:x="56184" fg:w="4987"/><text x="18.9312%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="16.9626%" y="213" width="3.4434%" height="15" fill="rgb(242,11,35)" fg:x="51133" fg:w="10380"/><text x="17.2556%" y="223.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="16.5052%" y="229" width="3.9865%" height="15" fill="rgb(221,41,49)" fg:x="49754" fg:w="12017"/><text x="16.7981%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.4916%" y="213" width="0.0302%" height="15" fill="rgb(253,80,52)" fg:x="61771" fg:w="91"/><text x="20.7846%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="20.5218%" y="213" width="0.1141%" height="15" fill="rgb(232,152,28)" fg:x="61862" fg:w="344"/><text x="20.8148%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.6359%" y="213" width="0.0302%" height="15" fill="rgb(219,110,12)" fg:x="62206" fg:w="91"/><text x="20.9289%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="20.4916%" y="229" width="0.2813%" height="15" fill="rgb(218,98,43)" fg:x="61771" fg:w="848"/><text x="20.7846%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (53,981 instructions, 17.91%)</title><rect x="2.9332%" y="245" width="17.9074%" height="15" fill="rgb(253,96,49)" fg:x="8842" fg:w="53981"/><text x="3.2262%" y="255.50">ic_certified_map::rbtre..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="20.8406%" y="229" width="0.0796%" height="15" fill="rgb(238,132,17)" fg:x="62823" fg:w="240"/><text x="21.1336%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="20.9202%" y="229" width="0.1672%" height="15" fill="rgb(208,82,25)" fg:x="63063" fg:w="504"/><text x="21.2132%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="21.0874%" y="229" width="0.0435%" height="15" fill="rgb(237,77,13)" fg:x="63567" fg:w="131"/><text x="21.3804%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.1309%" y="229" width="0.1672%" height="15" fill="rgb(230,6,11)" fg:x="63698" fg:w="504"/><text x="21.4239%" y="239.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="21.2981%" y="213" width="0.0607%" height="15" fill="rgb(207,29,48)" fg:x="64202" fg:w="183"/><text x="21.5910%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="21.3588%" y="213" width="1.6544%" height="15" fill="rgb(247,105,22)" fg:x="64385" fg:w="4987"/><text x="21.6518%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="21.2981%" y="229" width="1.8156%" height="15" fill="rgb(223,114,44)" fg:x="64202" fg:w="5473"/><text x="21.5910%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="20.8406%" y="245" width="2.3407%" height="15" fill="rgb(242,3,46)" fg:x="62823" fg:w="7056"/><text x="21.1336%" y="255.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="23.1813%" y="229" width="0.0796%" height="15" fill="rgb(243,197,8)" fg:x="69879" fg:w="240"/><text x="23.4743%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.2610%" y="229" width="0.1672%" height="15" fill="rgb(238,171,27)" fg:x="70119" fg:w="504"/><text x="23.5539%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="23.4282%" y="229" width="0.0435%" height="15" fill="rgb(254,144,27)" fg:x="70623" fg:w="131"/><text x="23.7211%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.4716%" y="229" width="0.1672%" height="15" fill="rgb(216,203,36)" fg:x="70754" fg:w="504"/><text x="23.7646%" y="239.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="23.6388%" y="213" width="0.0212%" height="15" fill="rgb(247,27,26)" fg:x="71258" fg:w="64"/><text x="23.9318%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="23.6600%" y="213" width="1.6544%" height="15" fill="rgb(234,180,24)" fg:x="71322" fg:w="4987"/><text x="23.9530%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="25.3144%" y="213" width="1.6544%" height="15" fill="rgb(221,50,43)" fg:x="76309" fg:w="4987"/><text x="25.6074%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="23.6388%" y="229" width="3.4434%" height="15" fill="rgb(236,50,6)" fg:x="71258" fg:w="10380"/><text x="23.9318%" y="239.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="23.1813%" y="245" width="3.9865%" height="15" fill="rgb(245,172,32)" fg:x="69879" fg:w="12017"/><text x="23.4743%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.1678%" y="229" width="0.0302%" height="15" fill="rgb(207,54,46)" fg:x="81896" fg:w="91"/><text x="27.4608%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="27.1980%" y="229" width="0.1141%" height="15" fill="rgb(218,67,44)" fg:x="81987" fg:w="344"/><text x="27.4910%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.3121%" y="229" width="0.0302%" height="15" fill="rgb(208,152,22)" fg:x="82331" fg:w="91"/><text x="27.6051%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="27.1678%" y="245" width="0.2813%" height="15" fill="rgb(243,177,0)" fg:x="81896" fg:w="848"/><text x="27.4608%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (74,148 instructions, 24.60%)</title><rect x="2.9193%" y="261" width="24.5975%" height="15" fill="rgb(212,75,12)" fg:x="8800" fg:w="74148"/><text x="3.2122%" y="271.50">ic_certified_map::rbtree::RbTree&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="27.5168%" y="245" width="0.0796%" height="15" fill="rgb(212,129,29)" fg:x="82948" fg:w="240"/><text x="27.8098%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.5964%" y="245" width="0.1672%" height="15" fill="rgb(241,229,35)" fg:x="83188" fg:w="504"/><text x="27.8894%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="27.7636%" y="245" width="0.0435%" height="15" fill="rgb(232,49,32)" fg:x="83692" fg:w="131"/><text x="28.0566%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.8071%" y="245" width="0.1672%" height="15" fill="rgb(243,119,48)" fg:x="83823" fg:w="504"/><text x="28.1000%" y="255.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="27.9743%" y="229" width="0.0607%" height="15" fill="rgb(212,205,30)" fg:x="84327" fg:w="183"/><text x="28.2672%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="28.0350%" y="229" width="1.6544%" height="15" fill="rgb(218,175,42)" fg:x="84510" fg:w="4987"/><text x="28.3279%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="27.9743%" y="245" width="1.8156%" height="15" fill="rgb(230,156,27)" fg:x="84327" fg:w="5473"/><text x="28.2672%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="27.5168%" y="261" width="2.3407%" height="15" fill="rgb(254,32,43)" fg:x="82948" fg:w="7056"/><text x="27.8098%" y="271.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="29.8575%" y="245" width="0.0796%" height="15" fill="rgb(246,89,34)" fg:x="90004" fg:w="240"/><text x="30.1505%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="29.9371%" y="245" width="0.1672%" height="15" fill="rgb(247,162,17)" fg:x="90244" fg:w="504"/><text x="30.2301%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="30.1043%" y="245" width="0.0435%" height="15" fill="rgb(219,71,37)" fg:x="90748" fg:w="131"/><text x="30.3973%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.1478%" y="245" width="0.1672%" height="15" fill="rgb(210,184,7)" fg:x="90879" fg:w="504"/><text x="30.4408%" y="255.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="30.3150%" y="229" width="0.0212%" height="15" fill="rgb(245,16,32)" fg:x="91383" fg:w="64"/><text x="30.6080%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="30.3362%" y="229" width="1.6544%" height="15" fill="rgb(209,62,7)" fg:x="91447" fg:w="4987"/><text x="30.6292%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="31.9906%" y="229" width="1.6544%" height="15" fill="rgb(215,16,15)" fg:x="96434" fg:w="4987"/><text x="32.2835%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="30.3150%" y="245" width="3.4434%" height="15" fill="rgb(223,60,14)" fg:x="91383" fg:w="10380"/><text x="30.6080%" y="255.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="29.8575%" y="261" width="3.9865%" height="15" fill="rgb(244,134,12)" fg:x="90004" fg:w="12017"/><text x="30.1505%" y="271.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="33.8440%" y="229" width="0.0796%" height="15" fill="rgb(224,3,41)" fg:x="102021" fg:w="240"/><text x="34.1370%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="33.9236%" y="229" width="0.1672%" height="15" fill="rgb(213,84,2)" fg:x="102261" fg:w="504"/><text x="34.2166%" y="239.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="34.0908%" y="229" width="0.0859%" height="15" fill="rgb(213,216,27)" fg:x="102765" fg:w="259"/><text x="34.3838%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="34.1767%" y="229" width="1.6544%" height="15" fill="rgb(218,76,35)" fg:x="103024" fg:w="4987"/><text x="34.4697%" y="239.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="35.8311%" y="229" width="0.0464%" height="15" fill="rgb(253,89,24)" fg:x="108011" fg:w="140"/><text x="36.1240%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="35.8775%" y="229" width="0.1672%" height="15" fill="rgb(217,188,40)" fg:x="108151" fg:w="504"/><text x="36.1705%" y="239.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="36.0447%" y="213" width="0.0644%" height="15" fill="rgb(237,79,38)" fg:x="108655" fg:w="194"/><text x="36.3377%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="36.1091%" y="213" width="1.6544%" height="15" fill="rgb(215,116,13)" fg:x="108849" fg:w="4987"/><text x="36.4020%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="36.0447%" y="229" width="1.8192%" height="15" fill="rgb(249,66,35)" fg:x="108655" fg:w="5484"/><text x="36.3377%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="33.8440%" y="245" width="4.1165%" height="15" fill="rgb(253,86,18)" fg:x="102021" fg:w="12409"/><text x="34.1370%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="37.9605%" y="245" width="0.0302%" height="15" fill="rgb(209,175,36)" fg:x="114430" fg:w="91"/><text x="38.2535%" y="255.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="37.9907%" y="245" width="0.1141%" height="15" fill="rgb(253,149,3)" fg:x="114521" fg:w="344"/><text x="38.2836%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.37%)</title><rect x="33.8440%" y="261" width="4.3739%" height="15" fill="rgb(242,124,49)" fg:x="102021" fg:w="13185"/><text x="34.1370%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (106,653 instructions, 35.38%)</title><rect x="2.9053%" y="277" width="35.3806%" height="15" fill="rgb(219,171,24)" fg:x="8758" fg:w="106653"/><text x="3.1983%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="38.2859%" y="261" width="0.0796%" height="15" fill="rgb(216,121,30)" fg:x="115411" fg:w="240"/><text x="38.5789%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.3655%" y="261" width="0.1672%" height="15" fill="rgb(234,165,21)" fg:x="115651" fg:w="504"/><text x="38.6585%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="38.5327%" y="261" width="0.0435%" height="15" fill="rgb(234,103,40)" fg:x="116155" fg:w="131"/><text x="38.8257%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.5762%" y="261" width="0.1672%" height="15" fill="rgb(250,137,24)" fg:x="116286" fg:w="504"/><text x="38.8692%" y="271.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="38.7434%" y="245" width="0.0607%" height="15" fill="rgb(253,22,21)" fg:x="116790" fg:w="183"/><text x="39.0364%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="38.8041%" y="245" width="1.6544%" height="15" fill="rgb(243,22,5)" fg:x="116973" fg:w="4987"/><text x="39.0971%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="38.7434%" y="261" width="1.8156%" height="15" fill="rgb(212,56,7)" fg:x="116790" fg:w="5473"/><text x="39.0364%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="38.2859%" y="277" width="2.3407%" height="15" fill="rgb(223,190,49)" fg:x="115411" fg:w="7056"/><text x="38.5789%" y="287.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="40.6266%" y="261" width="0.0796%" height="15" fill="rgb(221,110,35)" fg:x="122467" fg:w="240"/><text x="40.9196%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.7063%" y="261" width="0.1672%" height="15" fill="rgb(212,113,34)" fg:x="122707" fg:w="504"/><text x="40.9992%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="40.8735%" y="261" width="0.0435%" height="15" fill="rgb(216,125,47)" fg:x="123211" fg:w="131"/><text x="41.1664%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.9169%" y="261" width="0.1672%" height="15" fill="rgb(251,112,19)" fg:x="123342" fg:w="504"/><text x="41.2099%" y="271.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="41.0841%" y="245" width="0.0212%" height="15" fill="rgb(254,200,41)" fg:x="123846" fg:w="64"/><text x="41.3771%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="41.1053%" y="245" width="1.6544%" height="15" fill="rgb(225,17,42)" fg:x="123910" fg:w="4987"/><text x="41.3983%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="42.7597%" y="245" width="1.6544%" height="15" fill="rgb(208,105,35)" fg:x="128897" fg:w="4987"/><text x="43.0527%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="41.0841%" y="261" width="3.4434%" height="15" fill="rgb(210,125,51)" fg:x="123846" fg:w="10380"/><text x="41.3771%" y="271.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="40.6266%" y="277" width="3.9865%" height="15" fill="rgb(227,213,18)" fg:x="122467" fg:w="12017"/><text x="40.9196%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.6131%" y="261" width="0.0302%" height="15" fill="rgb(221,174,32)" fg:x="134484" fg:w="91"/><text x="44.9061%" y="271.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="44.6433%" y="261" width="0.1141%" height="15" fill="rgb(234,23,1)" fg:x="134575" fg:w="344"/><text x="44.9363%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.7574%" y="261" width="0.0302%" height="15" fill="rgb(209,65,17)" fg:x="134919" fg:w="91"/><text x="45.0504%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="44.6131%" y="277" width="0.2813%" height="15" fill="rgb(206,224,31)" fg:x="134484" fg:w="848"/><text x="44.9061%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (126,820 instructions, 42.07%)</title><rect x="2.8914%" y="293" width="42.0707%" height="15" fill="rgb(230,20,38)" fg:x="8716" fg:w="126820"/><text x="3.1844%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_wi..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="44.9621%" y="277" width="0.0796%" height="15" fill="rgb(211,9,41)" fg:x="135536" fg:w="240"/><text x="45.2551%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.0417%" y="277" width="0.1672%" height="15" fill="rgb(233,214,4)" fg:x="135776" fg:w="504"/><text x="45.3347%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="45.2089%" y="277" width="0.0435%" height="15" fill="rgb(225,60,54)" fg:x="136280" fg:w="131"/><text x="45.5019%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.2524%" y="277" width="0.1672%" height="15" fill="rgb(206,228,35)" fg:x="136411" fg:w="504"/><text x="45.5453%" y="287.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="45.4196%" y="261" width="0.0607%" height="15" fill="rgb(212,178,50)" fg:x="136915" fg:w="183"/><text x="45.7125%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="45.4803%" y="261" width="1.6544%" height="15" fill="rgb(206,192,33)" fg:x="137098" fg:w="4987"/><text x="45.7732%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="45.4196%" y="277" width="1.8156%" height="15" fill="rgb(238,210,1)" fg:x="136915" fg:w="5473"/><text x="45.7125%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="44.9621%" y="293" width="2.3407%" height="15" fill="rgb(205,65,52)" fg:x="135536" fg:w="7056"/><text x="45.2551%" y="303.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="47.3028%" y="277" width="0.0796%" height="15" fill="rgb(237,204,51)" fg:x="142592" fg:w="240"/><text x="47.5958%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.3824%" y="277" width="0.1672%" height="15" fill="rgb(213,119,51)" fg:x="142832" fg:w="504"/><text x="47.6754%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="47.5496%" y="277" width="0.0435%" height="15" fill="rgb(244,156,37)" fg:x="143336" fg:w="131"/><text x="47.8426%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.5931%" y="277" width="0.1672%" height="15" fill="rgb(249,96,18)" fg:x="143467" fg:w="504"/><text x="47.8861%" y="287.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="47.7603%" y="261" width="0.0212%" height="15" fill="rgb(231,65,11)" fg:x="143971" fg:w="64"/><text x="48.0533%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="47.7815%" y="261" width="1.6544%" height="15" fill="rgb(240,187,2)" fg:x="144035" fg:w="4987"/><text x="48.0745%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="49.4359%" y="261" width="1.6544%" height="15" fill="rgb(242,121,39)" fg:x="149022" fg:w="4987"/><text x="49.7289%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="47.7603%" y="277" width="3.4434%" height="15" fill="rgb(233,205,18)" fg:x="143971" fg:w="10380"/><text x="48.0533%" y="287.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="47.3028%" y="293" width="3.9865%" height="15" fill="rgb(219,67,33)" fg:x="142592" fg:w="12017"/><text x="47.5958%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.2893%" y="277" width="0.0302%" height="15" fill="rgb(227,84,12)" fg:x="154609" fg:w="91"/><text x="51.5823%" y="287.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="51.3195%" y="277" width="0.1141%" height="15" fill="rgb(227,42,52)" fg:x="154700" fg:w="344"/><text x="51.6124%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.4336%" y="277" width="0.0302%" height="15" fill="rgb(231,27,28)" fg:x="155044" fg:w="91"/><text x="51.7266%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="51.2893%" y="293" width="0.2813%" height="15" fill="rgb(238,42,2)" fg:x="154609" fg:w="848"/><text x="51.5823%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (146,964 instructions, 48.75%)</title><rect x="2.8851%" y="309" width="48.7532%" height="15" fill="rgb(215,15,9)" fg:x="8697" fg:w="146964"/><text x="3.1781%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go:..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="51.6383%" y="293" width="0.0796%" height="15" fill="rgb(205,195,15)" fg:x="155661" fg:w="240"/><text x="51.9312%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.7179%" y="293" width="0.1672%" height="15" fill="rgb(233,143,2)" fg:x="155901" fg:w="504"/><text x="52.0109%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="51.8851%" y="293" width="0.0435%" height="15" fill="rgb(207,108,8)" fg:x="156405" fg:w="131"/><text x="52.1781%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.9285%" y="293" width="0.1672%" height="15" fill="rgb(214,53,21)" fg:x="156536" fg:w="504"/><text x="52.2215%" y="303.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="52.0957%" y="277" width="0.0607%" height="15" fill="rgb(238,212,36)" fg:x="157040" fg:w="183"/><text x="52.3887%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="52.1564%" y="277" width="1.6544%" height="15" fill="rgb(218,151,47)" fg:x="157223" fg:w="4987"/><text x="52.4494%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="52.0957%" y="293" width="1.8156%" height="15" fill="rgb(245,160,3)" fg:x="157040" fg:w="5473"/><text x="52.3887%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="51.6383%" y="309" width="2.3407%" height="15" fill="rgb(238,106,19)" fg:x="155661" fg:w="7056"/><text x="51.9312%" y="319.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="53.9790%" y="293" width="0.0796%" height="15" fill="rgb(207,206,9)" fg:x="162717" fg:w="240"/><text x="54.2720%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.0586%" y="293" width="0.1672%" height="15" fill="rgb(254,40,10)" fg:x="162957" fg:w="504"/><text x="54.3516%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="54.2258%" y="293" width="0.0435%" height="15" fill="rgb(245,81,8)" fg:x="163461" fg:w="131"/><text x="54.5188%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.2693%" y="293" width="0.1672%" height="15" fill="rgb(214,119,17)" fg:x="163592" fg:w="504"/><text x="54.5622%" y="303.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="54.4365%" y="277" width="0.0212%" height="15" fill="rgb(245,100,39)" fg:x="164096" fg:w="64"/><text x="54.7294%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="54.4577%" y="277" width="1.6544%" height="15" fill="rgb(243,105,16)" fg:x="164160" fg:w="4987"/><text x="54.7507%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="56.1121%" y="277" width="1.6544%" height="15" fill="rgb(214,53,2)" fg:x="169147" fg:w="4987"/><text x="56.4050%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="54.4365%" y="293" width="3.4434%" height="15" fill="rgb(251,54,50)" fg:x="164096" fg:w="10380"/><text x="54.7294%" y="303.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="53.9790%" y="309" width="3.9865%" height="15" fill="rgb(244,121,37)" fg:x="162717" fg:w="12017"/><text x="54.2720%" y="319.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="57.9655%" y="277" width="0.0796%" height="15" fill="rgb(236,158,39)" fg:x="174734" fg:w="240"/><text x="58.2584%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="58.0451%" y="277" width="0.1672%" height="15" fill="rgb(226,25,37)" fg:x="174974" fg:w="504"/><text x="58.3381%" y="287.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="58.2123%" y="277" width="0.0859%" height="15" fill="rgb(222,71,46)" fg:x="175478" fg:w="259"/><text x="58.5052%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="58.2982%" y="277" width="1.6544%" height="15" fill="rgb(209,27,29)" fg:x="175737" fg:w="4987"/><text x="58.5912%" y="287.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="59.9526%" y="277" width="0.0464%" height="15" fill="rgb(210,196,17)" fg:x="180724" fg:w="140"/><text x="60.2455%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="59.9990%" y="277" width="0.1672%" height="15" fill="rgb(236,76,23)" fg:x="180864" fg:w="504"/><text x="60.2920%" y="287.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="60.1662%" y="261" width="0.0644%" height="15" fill="rgb(214,33,32)" fg:x="181368" fg:w="194"/><text x="60.4592%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="60.2306%" y="261" width="1.6544%" height="15" fill="rgb(243,16,26)" fg:x="181562" fg:w="4987"/><text x="60.5235%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="60.1662%" y="277" width="1.8192%" height="15" fill="rgb(241,30,48)" fg:x="181368" fg:w="5484"/><text x="60.4592%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="57.9655%" y="293" width="4.1165%" height="15" fill="rgb(241,106,1)" fg:x="174734" fg:w="12409"/><text x="58.2584%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="62.0820%" y="293" width="0.0302%" height="15" fill="rgb(230,62,29)" fg:x="187143" fg:w="91"/><text x="62.3749%" y="303.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="62.1122%" y="293" width="0.1141%" height="15" fill="rgb(207,166,53)" fg:x="187234" fg:w="344"/><text x="62.4051%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.37%)</title><rect x="57.9655%" y="309" width="4.3739%" height="15" fill="rgb(244,54,13)" fg:x="174734" fg:w="13185"/><text x="58.2584%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (179,446 instructions, 59.53%)</title><rect x="2.8788%" y="325" width="59.5286%" height="15" fill="rgb(205,144,19)" fg:x="8678" fg:w="179446"/><text x="3.1718%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="62.4074%" y="309" width="0.0796%" height="15" fill="rgb(225,165,45)" fg:x="188124" fg:w="240"/><text x="62.7004%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.4870%" y="309" width="0.1672%" height="15" fill="rgb(220,140,6)" fg:x="188364" fg:w="504"/><text x="62.7800%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="62.6542%" y="309" width="0.0435%" height="15" fill="rgb(234,69,14)" fg:x="188868" fg:w="131"/><text x="62.9472%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.6977%" y="309" width="0.1672%" height="15" fill="rgb(243,24,33)" fg:x="188999" fg:w="504"/><text x="62.9906%" y="319.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="62.8649%" y="293" width="0.0607%" height="15" fill="rgb(253,100,43)" fg:x="189503" fg:w="183"/><text x="63.1578%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="62.9256%" y="293" width="1.6544%" height="15" fill="rgb(221,168,15)" fg:x="189686" fg:w="4987"/><text x="63.2185%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="62.8649%" y="309" width="1.8156%" height="15" fill="rgb(237,15,11)" fg:x="189503" fg:w="5473"/><text x="63.1578%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="62.4074%" y="325" width="2.3407%" height="15" fill="rgb(229,207,40)" fg:x="188124" fg:w="7056"/><text x="62.7004%" y="335.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="64.7481%" y="309" width="0.0796%" height="15" fill="rgb(246,125,48)" fg:x="195180" fg:w="240"/><text x="65.0411%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="64.8277%" y="309" width="0.1672%" height="15" fill="rgb(231,65,10)" fg:x="195420" fg:w="504"/><text x="65.1207%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="64.9949%" y="309" width="0.0435%" height="15" fill="rgb(222,152,40)" fg:x="195924" fg:w="131"/><text x="65.2879%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.0384%" y="309" width="0.1672%" height="15" fill="rgb(214,12,30)" fg:x="196055" fg:w="504"/><text x="65.3314%" y="319.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="65.2056%" y="293" width="0.0212%" height="15" fill="rgb(239,80,41)" fg:x="196559" fg:w="64"/><text x="65.4986%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="65.2268%" y="293" width="1.6544%" height="15" fill="rgb(206,175,27)" fg:x="196623" fg:w="4987"/><text x="65.5198%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="66.8812%" y="293" width="1.6544%" height="15" fill="rgb(222,43,39)" fg:x="201610" fg:w="4987"/><text x="67.1742%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="65.2056%" y="309" width="3.4434%" height="15" fill="rgb(243,47,50)" fg:x="196559" fg:w="10380"/><text x="65.4986%" y="319.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="64.7481%" y="325" width="3.9865%" height="15" fill="rgb(243,61,21)" fg:x="195180" fg:w="12017"/><text x="65.0411%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.7346%" y="309" width="0.0302%" height="15" fill="rgb(208,172,5)" fg:x="207197" fg:w="91"/><text x="69.0276%" y="319.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="68.7648%" y="309" width="0.1141%" height="15" fill="rgb(219,24,25)" fg:x="207288" fg:w="344"/><text x="69.0578%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.8789%" y="309" width="0.0302%" height="15" fill="rgb(235,42,41)" fg:x="207632" fg:w="91"/><text x="69.1719%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="68.7346%" y="325" width="0.2813%" height="15" fill="rgb(226,190,24)" fg:x="207197" fg:w="848"/><text x="69.0276%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (199,590 instructions, 66.21%)</title><rect x="2.8725%" y="341" width="66.2111%" height="15" fill="rgb(216,55,27)" fg:x="8659" fg:w="199590"/><text x="3.1655%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="69.0836%" y="325" width="0.0796%" height="15" fill="rgb(231,77,14)" fg:x="208249" fg:w="240"/><text x="69.3765%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.1632%" y="325" width="0.1672%" height="15" fill="rgb(208,108,34)" fg:x="208489" fg:w="504"/><text x="69.4562%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="69.3304%" y="325" width="0.0435%" height="15" fill="rgb(228,183,52)" fg:x="208993" fg:w="131"/><text x="69.6234%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.3738%" y="325" width="0.1672%" height="15" fill="rgb(224,152,1)" fg:x="209124" fg:w="504"/><text x="69.6668%" y="335.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="69.5410%" y="309" width="0.0607%" height="15" fill="rgb(246,115,8)" fg:x="209628" fg:w="183"/><text x="69.8340%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="69.6018%" y="309" width="1.6544%" height="15" fill="rgb(211,76,13)" fg:x="209811" fg:w="4987"/><text x="69.8947%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="69.5410%" y="325" width="1.8156%" height="15" fill="rgb(233,214,49)" fg:x="209628" fg:w="5473"/><text x="69.8340%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="69.0836%" y="341" width="2.3407%" height="15" fill="rgb(223,44,51)" fg:x="208249" fg:w="7056"/><text x="69.3765%" y="351.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="71.4243%" y="325" width="0.0796%" height="15" fill="rgb(225,111,51)" fg:x="215305" fg:w="240"/><text x="71.7173%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.5039%" y="325" width="0.1672%" height="15" fill="rgb(231,185,26)" fg:x="215545" fg:w="504"/><text x="71.7969%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="71.6711%" y="325" width="0.0435%" height="15" fill="rgb(233,111,30)" fg:x="216049" fg:w="131"/><text x="71.9641%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.7146%" y="325" width="0.1672%" height="15" fill="rgb(250,1,47)" fg:x="216180" fg:w="504"/><text x="72.0075%" y="335.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="71.8818%" y="309" width="0.0212%" height="15" fill="rgb(254,210,3)" fg:x="216684" fg:w="64"/><text x="72.1747%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="71.9030%" y="309" width="1.6544%" height="15" fill="rgb(234,14,22)" fg:x="216748" fg:w="4987"/><text x="72.1960%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="73.5574%" y="309" width="1.6544%" height="15" fill="rgb(221,117,4)" fg:x="221735" fg:w="4987"/><text x="73.8503%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="71.8818%" y="325" width="3.4434%" height="15" fill="rgb(251,147,27)" fg:x="216684" fg:w="10380"/><text x="72.1747%" y="335.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="71.4243%" y="341" width="3.9865%" height="15" fill="rgb(226,52,11)" fg:x="215305" fg:w="12017"/><text x="71.7173%" y="351.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="75.4108%" y="309" width="0.0796%" height="15" fill="rgb(229,222,5)" fg:x="227322" fg:w="240"/><text x="75.7037%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="75.4904%" y="309" width="0.1672%" height="15" fill="rgb(232,76,2)" fg:x="227562" fg:w="504"/><text x="75.7834%" y="319.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="75.6576%" y="309" width="0.0859%" height="15" fill="rgb(242,108,2)" fg:x="228066" fg:w="259"/><text x="75.9506%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="75.7435%" y="309" width="1.6544%" height="15" fill="rgb(213,165,6)" fg:x="228325" fg:w="4987"/><text x="76.0365%" y="319.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="77.3979%" y="309" width="0.0464%" height="15" fill="rgb(222,24,42)" fg:x="233312" fg:w="140"/><text x="77.6908%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="77.4443%" y="309" width="0.1672%" height="15" fill="rgb(242,170,24)" fg:x="233452" fg:w="504"/><text x="77.7373%" y="319.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="77.6115%" y="293" width="0.0644%" height="15" fill="rgb(209,110,40)" fg:x="233956" fg:w="194"/><text x="77.9045%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="77.6759%" y="293" width="1.6544%" height="15" fill="rgb(233,146,36)" fg:x="234150" fg:w="4987"/><text x="77.9688%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,484 instructions, 1.82%)</title><rect x="77.6115%" y="309" width="1.8192%" height="15" fill="rgb(229,33,32)" fg:x="233956" fg:w="5484"/><text x="77.9045%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,409 instructions, 4.12%)</title><rect x="75.4108%" y="325" width="4.1165%" height="15" fill="rgb(225,55,34)" fg:x="227322" fg:w="12409"/><text x="75.7037%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="79.5273%" y="325" width="0.0302%" height="15" fill="rgb(217,32,50)" fg:x="239731" fg:w="91"/><text x="79.8202%" y="335.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="79.5575%" y="325" width="0.1141%" height="15" fill="rgb(206,110,53)" fg:x="239822" fg:w="344"/><text x="79.8504%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,185 instructions, 4.37%)</title><rect x="75.4108%" y="341" width="4.3739%" height="15" fill="rgb(247,25,10)" fg:x="227322" fg:w="13185"/><text x="75.7037%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (232,072 instructions, 76.99%)</title><rect x="2.8662%" y="357" width="76.9865%" height="15" fill="rgb(226,67,48)" fg:x="8640" fg:w="232072"/><text x="3.1592%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="79.8527%" y="341" width="0.0796%" height="15" fill="rgb(239,73,28)" fg:x="240712" fg:w="240"/><text x="80.1457%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="79.9323%" y="341" width="0.1672%" height="15" fill="rgb(234,200,41)" fg:x="240952" fg:w="504"/><text x="80.2253%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="80.0995%" y="341" width="0.0435%" height="15" fill="rgb(233,76,35)" fg:x="241456" fg:w="131"/><text x="80.3925%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.1430%" y="341" width="0.1672%" height="15" fill="rgb(238,166,31)" fg:x="241587" fg:w="504"/><text x="80.4359%" y="351.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="80.3102%" y="325" width="0.0607%" height="15" fill="rgb(219,218,51)" fg:x="242091" fg:w="183"/><text x="80.6031%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="80.3709%" y="325" width="1.6544%" height="15" fill="rgb(221,82,53)" fg:x="242274" fg:w="4987"/><text x="80.6638%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,473 instructions, 1.82%)</title><rect x="80.3102%" y="341" width="1.8156%" height="15" fill="rgb(218,179,13)" fg:x="242091" fg:w="5473"/><text x="80.6031%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,056 instructions, 2.34%)</title><rect x="79.8527%" y="357" width="2.3407%" height="15" fill="rgb(210,53,38)" fg:x="240712" fg:w="7056"/><text x="80.1457%" y="367.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="82.1934%" y="341" width="0.0796%" height="15" fill="rgb(214,167,31)" fg:x="247768" fg:w="240"/><text x="82.4864%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.2731%" y="341" width="0.1672%" height="15" fill="rgb(223,26,5)" fg:x="248008" fg:w="504"/><text x="82.5660%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="82.4402%" y="341" width="0.0435%" height="15" fill="rgb(218,95,23)" fg:x="248512" fg:w="131"/><text x="82.7332%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.4837%" y="341" width="0.1672%" height="15" fill="rgb(248,205,45)" fg:x="248643" fg:w="504"/><text x="82.7767%" y="351.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="82.6509%" y="325" width="0.0212%" height="15" fill="rgb(211,76,6)" fg:x="249147" fg:w="64"/><text x="82.9439%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="82.6721%" y="325" width="1.6544%" height="15" fill="rgb(250,176,29)" fg:x="249211" fg:w="4987"/><text x="82.9651%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.65%)</title><rect x="84.3265%" y="325" width="1.6544%" height="15" fill="rgb(240,107,31)" fg:x="254198" fg:w="4987"/><text x="84.6195%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,380 instructions, 3.44%)</title><rect x="82.6509%" y="341" width="3.4434%" height="15" fill="rgb(229,215,17)" fg:x="249147" fg:w="10380"/><text x="82.9439%" y="351.50">&lt;d..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,017 instructions, 3.99%)</title><rect x="82.1934%" y="357" width="3.9865%" height="15" fill="rgb(240,79,8)" fg:x="247768" fg:w="12017"/><text x="82.4864%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.1799%" y="341" width="0.0302%" height="15" fill="rgb(243,110,48)" fg:x="259785" fg:w="91"/><text x="86.4729%" y="351.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="86.2101%" y="341" width="0.1141%" height="15" fill="rgb(236,201,9)" fg:x="259876" fg:w="344"/><text x="86.5031%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.3242%" y="341" width="0.0302%" height="15" fill="rgb(220,87,26)" fg:x="260220" fg:w="91"/><text x="86.6172%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="86.1799%" y="357" width="0.2813%" height="15" fill="rgb(212,118,27)" fg:x="259785" fg:w="848"/><text x="86.4729%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (252,216 instructions, 83.67%)</title><rect x="2.8599%" y="373" width="83.6690%" height="15" fill="rgb(244,178,50)" fg:x="8621" fg:w="252216"/><text x="3.1529%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.5289%" y="277" width="0.0302%" height="15" fill="rgb(215,204,7)" fg:x="260837" fg:w="91"/><text x="86.8219%" y="287.50"></text></g><g><title>memcpy (211 instructions, 0.07%)</title><rect x="86.5591%" y="277" width="0.0700%" height="15" fill="rgb(214,122,43)" fg:x="260928" fg:w="211"/><text x="86.8520%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="86.6291%" y="277" width="0.0285%" height="15" fill="rgb(251,178,26)" fg:x="261139" fg:w="86"/><text x="86.9220%" y="287.50"></text></g><g><title>__rust_realloc (494 instructions, 0.16%)</title><rect x="86.5289%" y="293" width="0.1639%" height="15" fill="rgb(210,7,35)" fg:x="260837" fg:w="494"/><text x="86.8219%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (539 instructions, 0.18%)</title><rect x="86.5289%" y="309" width="0.1788%" height="15" fill="rgb(227,164,54)" fg:x="260837" fg:w="539"/><text x="86.8219%" y="319.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="86.7369%" y="293" width="0.0285%" height="15" fill="rgb(205,18,34)" fg:x="261464" fg:w="86"/><text x="87.0299%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="86.7369%" y="309" width="0.0435%" height="15" fill="rgb(239,50,19)" fg:x="261464" fg:w="131"/><text x="87.0299%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (846 instructions, 0.28%)</title><rect x="86.5289%" y="325" width="0.2806%" height="15" fill="rgb(224,85,6)" fg:x="260837" fg:w="846"/><text x="86.8219%" y="335.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="86.8095%" y="325" width="0.0796%" height="15" fill="rgb(252,167,34)" fg:x="261683" fg:w="240"/><text x="87.1025%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,183 instructions, 0.39%)</title><rect x="86.5289%" y="341" width="0.3924%" height="15" fill="rgb(243,180,35)" fg:x="260837" fg:w="1183"/><text x="86.8219%" y="351.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="86.9509%" y="309" width="0.0285%" height="15" fill="rgb(213,214,53)" fg:x="262109" fg:w="86"/><text x="87.2438%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="86.9509%" y="325" width="0.0435%" height="15" fill="rgb(244,39,37)" fg:x="262109" fg:w="131"/><text x="87.2438%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="86.9509%" y="341" width="0.0727%" height="15" fill="rgb(215,141,14)" fg:x="262109" fg:w="219"/><text x="87.2438%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.0235%" y="309" width="0.1035%" height="15" fill="rgb(210,2,42)" fg:x="262328" fg:w="312"/><text x="87.3165%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.0235%" y="325" width="0.1290%" height="15" fill="rgb(252,189,47)" fg:x="262328" fg:w="389"/><text x="87.3165%" y="335.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="87.1821%" y="277" width="0.0285%" height="15" fill="rgb(222,154,47)" fg:x="262806" fg:w="86"/><text x="87.4750%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="87.1821%" y="293" width="0.0435%" height="15" fill="rgb(228,20,37)" fg:x="262806" fg:w="131"/><text x="87.4750%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.1821%" y="309" width="0.0727%" height="15" fill="rgb(236,17,4)" fg:x="262806" fg:w="219"/><text x="87.4750%" y="319.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.2547%" y="277" width="0.1035%" height="15" fill="rgb(222,211,31)" fg:x="263025" fg:w="312"/><text x="87.5477%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.2547%" y="293" width="0.1290%" height="15" fill="rgb(218,134,25)" fg:x="263025" fg:w="389"/><text x="87.5477%" y="303.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.4133%" y="261" width="0.0796%" height="15" fill="rgb(218,97,43)" fg:x="263503" fg:w="240"/><text x="87.7063%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="87.4133%" y="277" width="0.1052%" height="15" fill="rgb(234,163,32)" fg:x="263503" fg:w="317"/><text x="87.7063%" y="287.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="87.5480%" y="197" width="0.0285%" height="15" fill="rgb(251,171,42)" fg:x="263909" fg:w="86"/><text x="87.8409%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="87.5480%" y="213" width="0.0435%" height="15" fill="rgb(223,104,12)" fg:x="263909" fg:w="131"/><text x="87.8409%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.5480%" y="229" width="0.0727%" height="15" fill="rgb(225,29,49)" fg:x="263909" fg:w="219"/><text x="87.8409%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.6206%" y="229" width="0.0796%" height="15" fill="rgb(253,77,7)" fg:x="264128" fg:w="240"/><text x="87.9136%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (545 instructions, 0.18%)</title><rect x="87.5480%" y="245" width="0.1808%" height="15" fill="rgb(213,81,26)" fg:x="263909" fg:w="545"/><text x="87.8409%" y="255.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.7583%" y="213" width="0.1035%" height="15" fill="rgb(246,126,6)" fg:x="264543" fg:w="312"/><text x="88.0513%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.7583%" y="229" width="0.1290%" height="15" fill="rgb(232,186,21)" fg:x="264543" fg:w="389"/><text x="88.0513%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.9169%" y="197" width="0.0796%" height="15" fill="rgb(215,126,18)" fg:x="265021" fg:w="240"/><text x="88.2098%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="87.9169%" y="213" width="0.1052%" height="15" fill="rgb(210,47,5)" fg:x="265021" fg:w="317"/><text x="88.2098%" y="223.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.0516%" y="181" width="0.1035%" height="15" fill="rgb(240,70,6)" fg:x="265427" fg:w="312"/><text x="88.3445%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.0516%" y="197" width="0.1290%" height="15" fill="rgb(230,99,49)" fg:x="265427" fg:w="389"/><text x="88.3445%" y="207.50"></text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="88.2101%" y="117" width="0.0285%" height="15" fill="rgb(212,57,36)" fg:x="265905" fg:w="86"/><text x="88.5031%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="88.2101%" y="133" width="0.0435%" height="15" fill="rgb(243,14,50)" fg:x="265905" fg:w="131"/><text x="88.5031%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="88.2101%" y="149" width="0.0727%" height="15" fill="rgb(240,2,53)" fg:x="265905" fg:w="219"/><text x="88.5031%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.2828%" y="149" width="0.1035%" height="15" fill="rgb(208,47,53)" fg:x="266124" fg:w="312"/><text x="88.5757%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (619 instructions, 0.21%)</title><rect x="88.2101%" y="165" width="0.2053%" height="15" fill="rgb(235,186,39)" fg:x="265905" fg:w="619"/><text x="88.5031%" y="175.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.4450%" y="133" width="0.0796%" height="15" fill="rgb(212,35,47)" fg:x="266613" fg:w="240"/><text x="88.7380%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.4450%" y="149" width="0.1052%" height="15" fill="rgb(248,59,37)" fg:x="266613" fg:w="317"/><text x="88.7380%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.5797%" y="117" width="0.1035%" height="15" fill="rgb(223,186,16)" fg:x="267019" fg:w="312"/><text x="88.8726%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.5797%" y="133" width="0.1290%" height="15" fill="rgb(215,106,35)" fg:x="267019" fg:w="389"/><text x="88.8726%" y="143.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.7382%" y="101" width="0.0796%" height="15" fill="rgb(217,141,29)" fg:x="267497" fg:w="240"/><text x="89.0312%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.7382%" y="117" width="0.1052%" height="15" fill="rgb(221,227,46)" fg:x="267497" fg:w="317"/><text x="89.0312%" y="127.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.8729%" y="69" width="0.0796%" height="15" fill="rgb(212,36,41)" fg:x="267903" fg:w="240"/><text x="89.1659%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="88.8729%" y="85" width="0.1052%" height="15" fill="rgb(222,35,11)" fg:x="267903" fg:w="317"/><text x="89.1659%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="89.0076%" y="53" width="0.0435%" height="15" fill="rgb(232,165,33)" fg:x="268309" fg:w="131"/><text x="89.3006%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (202 instructions, 0.07%)</title><rect x="89.0076%" y="69" width="0.0670%" height="15" fill="rgb(211,38,20)" fg:x="268309" fg:w="202"/><text x="89.3006%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="89.0746%" y="37" width="0.0116%" height="15" fill="rgb(230,7,36)" fg:x="268511" fg:w="35"/><text x="89.3676%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (106 instructions, 0.04%)</title><rect x="89.0746%" y="53" width="0.0352%" height="15" fill="rgb(213,128,35)" fg:x="268511" fg:w="106"/><text x="89.3676%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (204 instructions, 0.07%)</title><rect x="89.0746%" y="69" width="0.0677%" height="15" fill="rgb(218,11,14)" fg:x="268511" fg:w="204"/><text x="89.3676%" y="79.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.1785%" y="53" width="0.0796%" height="15" fill="rgb(249,105,7)" fg:x="268824" fg:w="240"/><text x="89.4714%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.1785%" y="69" width="0.1052%" height="15" fill="rgb(226,125,21)" fg:x="268824" fg:w="317"/><text x="89.4714%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (921 instructions, 0.31%)</title><rect x="89.0076%" y="85" width="0.3055%" height="15" fill="rgb(239,90,47)" fg:x="268309" fg:w="921"/><text x="89.3006%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,433 instructions, 0.48%)</title><rect x="88.8729%" y="101" width="0.4754%" height="15" fill="rgb(226,19,1)" fg:x="267903" fg:w="1433"/><text x="89.1659%" y="111.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.3835%" y="85" width="0.0796%" height="15" fill="rgb(205,117,40)" fg:x="269442" fg:w="240"/><text x="89.6764%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.3835%" y="101" width="0.1052%" height="15" fill="rgb(234,6,54)" fg:x="269442" fg:w="317"/><text x="89.6764%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,945 instructions, 0.65%)</title><rect x="88.8729%" y="117" width="0.6452%" height="15" fill="rgb(239,73,32)" fg:x="267903" fg:w="1945"/><text x="89.1659%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,457 instructions, 0.82%)</title><rect x="88.7382%" y="133" width="0.8151%" height="15" fill="rgb(226,197,12)" fg:x="267497" fg:w="2457"/><text x="89.0312%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,041 instructions, 1.01%)</title><rect x="88.5797%" y="149" width="1.0088%" height="15" fill="rgb(226,53,42)" fg:x="267019" fg:w="3041"/><text x="88.8726%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,553 instructions, 1.18%)</title><rect x="88.4450%" y="165" width="1.1787%" height="15" fill="rgb(234,99,30)" fg:x="266613" fg:w="3553"/><text x="88.7380%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,367 instructions, 1.45%)</title><rect x="88.2101%" y="181" width="1.4487%" height="15" fill="rgb(237,175,49)" fg:x="265905" fg:w="4367"/><text x="88.5031%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.6940%" y="165" width="0.0796%" height="15" fill="rgb(228,75,42)" fg:x="270378" fg:w="240"/><text x="89.9869%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.6940%" y="181" width="0.1052%" height="15" fill="rgb(223,162,48)" fg:x="270378" fg:w="317"/><text x="89.9869%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,879 instructions, 1.62%)</title><rect x="88.2101%" y="197" width="1.6185%" height="15" fill="rgb(221,192,29)" fg:x="265905" fg:w="4879"/><text x="88.5031%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,463 instructions, 1.81%)</title><rect x="88.0516%" y="213" width="1.8123%" height="15" fill="rgb(249,150,41)" fg:x="265427" fg:w="5463"/><text x="88.3445%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,975 instructions, 1.98%)</title><rect x="87.9169%" y="229" width="1.9821%" height="15" fill="rgb(243,107,34)" fg:x="265021" fg:w="5975"/><text x="88.2098%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,559 instructions, 2.18%)</title><rect x="87.7583%" y="245" width="2.1759%" height="15" fill="rgb(214,227,11)" fg:x="264543" fg:w="6559"/><text x="88.0513%" y="255.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,299 instructions, 2.42%)</title><rect x="87.5480%" y="261" width="2.4213%" height="15" fill="rgb(209,37,13)" fg:x="263909" fg:w="7299"/><text x="87.8409%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (86 instructions, 0.03%)</title><rect x="90.0045%" y="213" width="0.0285%" height="15" fill="rgb(249,124,20)" fg:x="271314" fg:w="86"/><text x="90.2974%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (131 instructions, 0.04%)</title><rect x="90.0045%" y="229" width="0.0435%" height="15" fill="rgb(228,28,2)" fg:x="271314" fg:w="131"/><text x="90.2974%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="90.0045%" y="245" width="0.0727%" height="15" fill="rgb(244,55,1)" fg:x="271314" fg:w="219"/><text x="90.2974%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.0771%" y="245" width="0.0796%" height="15" fill="rgb(216,26,19)" fg:x="271533" fg:w="240"/><text x="90.3701%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (547 instructions, 0.18%)</title><rect x="90.0045%" y="261" width="0.1815%" height="15" fill="rgb(209,162,10)" fg:x="271314" fg:w="547"/><text x="90.2974%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,041 instructions, 2.67%)</title><rect x="87.5480%" y="277" width="2.6675%" height="15" fill="rgb(235,168,42)" fg:x="263909" fg:w="8041"/><text x="87.8409%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,553 instructions, 2.84%)</title><rect x="87.4133%" y="293" width="2.8373%" height="15" fill="rgb(240,24,14)" fg:x="263503" fg:w="8553"/><text x="87.7063%" y="303.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,137 instructions, 3.03%)</title><rect x="87.2547%" y="309" width="3.0311%" height="15" fill="rgb(224,107,11)" fg:x="263025" fg:w="9137"/><text x="87.5477%" y="319.50">&lt;i..</text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.3239%" y="293" width="0.0796%" height="15" fill="rgb(226,48,4)" fg:x="272277" fg:w="240"/><text x="90.6169%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="90.3239%" y="309" width="0.1052%" height="15" fill="rgb(254,31,21)" fg:x="272277" fg:w="317"/><text x="90.6169%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,877 instructions, 3.28%)</title><rect x="87.1821%" y="325" width="3.2766%" height="15" fill="rgb(205,156,19)" fg:x="262806" fg:w="9877"/><text x="87.4750%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,461 instructions, 3.47%)</title><rect x="87.0235%" y="341" width="3.4703%" height="15" fill="rgb(216,73,31)" fg:x="262328" fg:w="10461"/><text x="87.3165%" y="351.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,067 instructions, 4.00%)</title><rect x="86.5289%" y="357" width="4.0031%" height="15" fill="rgb(237,88,35)" fg:x="260837" fg:w="12067"/><text x="86.8219%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,173 instructions, 4.04%)</title><rect x="86.5289%" y="373" width="4.0382%" height="15" fill="rgb(254,79,48)" fg:x="260837" fg:w="12173"/><text x="86.8219%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.6016%" y="69" width="0.0448%" height="15" fill="rgb(211,66,36)" fg:x="273114" fg:w="135"/><text x="90.8946%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (171 instructions, 0.06%)</title><rect x="90.5973%" y="85" width="0.0567%" height="15" fill="rgb(222,13,1)" fg:x="273101" fg:w="171"/><text x="90.8903%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.6563%" y="85" width="0.0448%" height="15" fill="rgb(221,216,41)" fg:x="273279" fg:w="135"/><text x="90.9493%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (351 instructions, 0.12%)</title><rect x="90.5950%" y="101" width="0.1164%" height="15" fill="rgb(220,10,17)" fg:x="273094" fg:w="351"/><text x="90.8879%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="90.7114%" y="101" width="0.0448%" height="15" fill="rgb(242,43,35)" fg:x="273445" fg:w="135"/><text x="91.0044%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (517 instructions, 0.17%)</title><rect x="90.5950%" y="117" width="0.1715%" height="15" fill="rgb(216,182,18)" fg:x="273094" fg:w="517"/><text x="90.8879%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.7688%" y="101" width="0.0222%" height="15" fill="rgb(246,217,36)" fg:x="273618" fg:w="67"/><text x="91.0618%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (184 instructions, 0.06%)</title><rect x="90.7688%" y="117" width="0.0610%" height="15" fill="rgb(208,107,8)" fg:x="273618" fg:w="184"/><text x="91.0618%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (746 instructions, 0.25%)</title><rect x="90.5926%" y="133" width="0.2475%" height="15" fill="rgb(208,189,15)" fg:x="273087" fg:w="746"/><text x="90.8856%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="90.8401%" y="117" width="0.0206%" height="15" fill="rgb(211,70,9)" fg:x="273833" fg:w="62"/><text x="91.1331%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.8607%" y="117" width="0.0222%" height="15" fill="rgb(217,95,34)" fg:x="273895" fg:w="67"/><text x="91.1537%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="90.8401%" y="133" width="0.0766%" height="15" fill="rgb(240,223,2)" fg:x="273833" fg:w="231"/><text x="91.1331%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,015 instructions, 0.34%)</title><rect x="90.5903%" y="149" width="0.3367%" height="15" fill="rgb(231,18,6)" fg:x="273080" fg:w="1015"/><text x="90.8833%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="90.9270%" y="133" width="0.0206%" height="15" fill="rgb(254,44,46)" fg:x="274095" fg:w="62"/><text x="91.2200%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="90.9476%" y="133" width="0.0222%" height="15" fill="rgb(223,222,46)" fg:x="274157" fg:w="67"/><text x="91.2406%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="90.9270%" y="149" width="0.0766%" height="15" fill="rgb(229,163,13)" fg:x="274095" fg:w="231"/><text x="91.2200%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,284 instructions, 0.43%)</title><rect x="90.5880%" y="165" width="0.4259%" height="15" fill="rgb(220,208,13)" fg:x="273073" fg:w="1284"/><text x="90.8810%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.0139%" y="149" width="0.0206%" height="15" fill="rgb(244,28,53)" fg:x="274357" fg:w="62"/><text x="91.3069%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.0345%" y="149" width="0.0222%" height="15" fill="rgb(243,138,0)" fg:x="274419" fg:w="67"/><text x="91.3275%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.0139%" y="165" width="0.0766%" height="15" fill="rgb(209,90,49)" fg:x="274357" fg:w="231"/><text x="91.3069%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,553 instructions, 0.52%)</title><rect x="90.5857%" y="181" width="0.5152%" height="15" fill="rgb(247,114,18)" fg:x="273066" fg:w="1553"/><text x="90.8786%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.1009%" y="165" width="0.0206%" height="15" fill="rgb(221,14,46)" fg:x="274619" fg:w="62"/><text x="91.3938%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.1214%" y="165" width="0.0222%" height="15" fill="rgb(215,29,23)" fg:x="274681" fg:w="67"/><text x="91.4144%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.1009%" y="181" width="0.0766%" height="15" fill="rgb(241,37,25)" fg:x="274619" fg:w="231"/><text x="91.3938%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,815 instructions, 0.60%)</title><rect x="90.5857%" y="197" width="0.6021%" height="15" fill="rgb(225,17,22)" fg:x="273066" fg:w="1815"/><text x="90.8786%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.1901%" y="181" width="0.0206%" height="15" fill="rgb(241,182,7)" fg:x="274888" fg:w="62"/><text x="91.4831%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.2107%" y="181" width="0.0222%" height="15" fill="rgb(248,125,10)" fg:x="274950" fg:w="67"/><text x="91.5036%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.1901%" y="197" width="0.0766%" height="15" fill="rgb(250,3,37)" fg:x="274888" fg:w="231"/><text x="91.4831%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,091 instructions, 0.69%)</title><rect x="90.5834%" y="213" width="0.6937%" height="15" fill="rgb(237,102,7)" fg:x="273059" fg:w="2091"/><text x="90.8763%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.2770%" y="197" width="0.0206%" height="15" fill="rgb(235,5,5)" fg:x="275150" fg:w="62"/><text x="91.5700%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.2976%" y="197" width="0.0222%" height="15" fill="rgb(249,147,38)" fg:x="275212" fg:w="67"/><text x="91.5906%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.2770%" y="213" width="0.0766%" height="15" fill="rgb(221,25,18)" fg:x="275150" fg:w="231"/><text x="91.5700%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,360 instructions, 0.78%)</title><rect x="90.5810%" y="229" width="0.7829%" height="15" fill="rgb(211,88,9)" fg:x="273052" fg:w="2360"/><text x="90.8740%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.3639%" y="213" width="0.0206%" height="15" fill="rgb(219,62,54)" fg:x="275412" fg:w="62"/><text x="91.6569%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.3845%" y="213" width="0.0222%" height="15" fill="rgb(243,133,46)" fg:x="275474" fg:w="67"/><text x="91.6775%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.3639%" y="229" width="0.0766%" height="15" fill="rgb(214,168,53)" fg:x="275412" fg:w="231"/><text x="91.6569%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,629 instructions, 0.87%)</title><rect x="90.5787%" y="245" width="0.8721%" height="15" fill="rgb(250,58,7)" fg:x="273045" fg:w="2629"/><text x="90.8717%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.4508%" y="229" width="0.0206%" height="15" fill="rgb(249,131,5)" fg:x="275674" fg:w="62"/><text x="91.7438%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.4714%" y="229" width="0.0222%" height="15" fill="rgb(234,40,44)" fg:x="275736" fg:w="67"/><text x="91.7644%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.4508%" y="245" width="0.0766%" height="15" fill="rgb(225,188,42)" fg:x="275674" fg:w="231"/><text x="91.7438%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,898 instructions, 0.96%)</title><rect x="90.5764%" y="261" width="0.9614%" height="15" fill="rgb(218,201,51)" fg:x="273038" fg:w="2898"/><text x="90.8694%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.5378%" y="245" width="0.0206%" height="15" fill="rgb(214,209,38)" fg:x="275936" fg:w="62"/><text x="91.8307%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.5583%" y="245" width="0.0222%" height="15" fill="rgb(217,0,20)" fg:x="275998" fg:w="67"/><text x="91.8513%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.5378%" y="261" width="0.0766%" height="15" fill="rgb(248,183,46)" fg:x="275936" fg:w="231"/><text x="91.8307%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,160 instructions, 1.05%)</title><rect x="90.5764%" y="277" width="1.0483%" height="15" fill="rgb(208,99,41)" fg:x="273038" fg:w="3160"/><text x="90.8694%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.6270%" y="261" width="0.0206%" height="15" fill="rgb(210,189,49)" fg:x="276205" fg:w="62"/><text x="91.9200%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.6476%" y="261" width="0.0222%" height="15" fill="rgb(239,191,42)" fg:x="276267" fg:w="67"/><text x="91.9405%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.6270%" y="277" width="0.0766%" height="15" fill="rgb(240,138,26)" fg:x="276205" fg:w="231"/><text x="91.9200%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,436 instructions, 1.14%)</title><rect x="90.5741%" y="293" width="1.1398%" height="15" fill="rgb(234,45,22)" fg:x="273031" fg:w="3436"/><text x="90.8670%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.7139%" y="277" width="0.0206%" height="15" fill="rgb(228,43,35)" fg:x="276467" fg:w="62"/><text x="92.0069%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.7345%" y="277" width="0.0222%" height="15" fill="rgb(215,201,54)" fg:x="276529" fg:w="67"/><text x="92.0274%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.7139%" y="293" width="0.0766%" height="15" fill="rgb(209,60,31)" fg:x="276467" fg:w="231"/><text x="92.0069%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,705 instructions, 1.23%)</title><rect x="90.5717%" y="309" width="1.2291%" height="15" fill="rgb(232,66,12)" fg:x="273024" fg:w="3705"/><text x="90.8647%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.8008%" y="293" width="0.0206%" height="15" fill="rgb(244,78,24)" fg:x="276729" fg:w="62"/><text x="92.0938%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.8214%" y="293" width="0.0222%" height="15" fill="rgb(249,65,27)" fg:x="276791" fg:w="67"/><text x="92.1144%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.8008%" y="309" width="0.0766%" height="15" fill="rgb(208,218,19)" fg:x="276729" fg:w="231"/><text x="92.0938%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,967 instructions, 1.32%)</title><rect x="90.5717%" y="325" width="1.3160%" height="15" fill="rgb(212,181,38)" fg:x="273024" fg:w="3967"/><text x="90.8647%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.8901%" y="309" width="0.0206%" height="15" fill="rgb(207,118,40)" fg:x="276998" fg:w="62"/><text x="92.1830%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.9106%" y="309" width="0.0222%" height="15" fill="rgb(207,126,20)" fg:x="277060" fg:w="67"/><text x="92.2036%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.8901%" y="325" width="0.0766%" height="15" fill="rgb(232,15,46)" fg:x="276998" fg:w="231"/><text x="92.1830%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,243 instructions, 1.41%)</title><rect x="90.5694%" y="341" width="1.4076%" height="15" fill="rgb(254,33,30)" fg:x="273017" fg:w="4243"/><text x="90.8624%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="91.9770%" y="325" width="0.0206%" height="15" fill="rgb(233,92,20)" fg:x="277260" fg:w="62"/><text x="92.2699%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="91.9975%" y="325" width="0.0222%" height="15" fill="rgb(225,195,54)" fg:x="277322" fg:w="67"/><text x="92.2905%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="91.9770%" y="341" width="0.0766%" height="15" fill="rgb(208,196,7)" fg:x="277260" fg:w="231"/><text x="92.2699%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,512 instructions, 1.50%)</title><rect x="90.5671%" y="357" width="1.4968%" height="15" fill="rgb(253,19,35)" fg:x="273010" fg:w="4512"/><text x="90.8601%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="92.0639%" y="341" width="0.0206%" height="15" fill="rgb(228,180,1)" fg:x="277522" fg:w="62"/><text x="92.3569%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (67 instructions, 0.02%)</title><rect x="92.0845%" y="341" width="0.0222%" height="15" fill="rgb(248,35,18)" fg:x="277584" fg:w="67"/><text x="92.3774%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="92.0639%" y="357" width="0.0766%" height="15" fill="rgb(220,34,8)" fg:x="277522" fg:w="231"/><text x="92.3569%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,774 instructions, 1.58%)</title><rect x="90.5671%" y="373" width="1.5837%" height="15" fill="rgb(219,223,17)" fg:x="273010" fg:w="4774"/><text x="90.8601%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (62 instructions, 0.02%)</title><rect x="92.1508%" y="357" width="0.0206%" height="15" fill="rgb(223,183,15)" fg:x="277784" fg:w="62"/><text x="92.4438%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (182 instructions, 0.06%)</title><rect x="92.1508%" y="373" width="0.0604%" height="15" fill="rgb(253,184,45)" fg:x="277784" fg:w="182"/><text x="92.4438%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (107 instructions, 0.04%)</title><rect x="92.2112%" y="373" width="0.0355%" height="15" fill="rgb(207,97,29)" fg:x="277966" fg:w="107"/><text x="92.5042%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 instructions, 0.02%)</title><rect x="92.2467%" y="341" width="0.0209%" height="15" fill="rgb(250,170,27)" fg:x="278073" fg:w="63"/><text x="92.5396%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.2676%" y="341" width="0.0275%" height="15" fill="rgb(206,178,17)" fg:x="278136" fg:w="83"/><text x="92.5605%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.2998%" y="309" width="0.0196%" height="15" fill="rgb(213,92,46)" fg:x="278233" fg:w="59"/><text x="92.5927%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="92.3193%" y="309" width="0.1251%" height="15" fill="rgb(223,114,30)" fg:x="278292" fg:w="377"/><text x="92.6123%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.4444%" y="309" width="0.0259%" height="15" fill="rgb(207,228,9)" fg:x="278669" fg:w="78"/><text x="92.7374%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.2998%" y="325" width="0.2544%" height="15" fill="rgb(205,70,25)" fg:x="278233" fg:w="767"/><text x="92.5927%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,009 instructions, 0.33%)</title><rect x="92.2951%" y="341" width="0.3347%" height="15" fill="rgb(252,45,30)" fg:x="278219" fg:w="1009"/><text x="92.5881%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.6298%" y="341" width="0.0275%" height="15" fill="rgb(219,185,54)" fg:x="279228" fg:w="83"/><text x="92.9228%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.6574%" y="341" width="0.0275%" height="15" fill="rgb(219,208,54)" fg:x="279311" fg:w="83"/><text x="92.9503%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.6895%" y="309" width="0.0196%" height="15" fill="rgb(207,164,54)" fg:x="279408" fg:w="59"/><text x="92.9825%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="92.7091%" y="309" width="0.1251%" height="15" fill="rgb(240,155,22)" fg:x="279467" fg:w="377"/><text x="93.0021%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.8342%" y="309" width="0.0259%" height="15" fill="rgb(217,127,14)" fg:x="279844" fg:w="78"/><text x="93.1272%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.6895%" y="325" width="0.2544%" height="15" fill="rgb(232,179,42)" fg:x="279408" fg:w="767"/><text x="92.9825%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="92.9440%" y="325" width="0.2239%" height="15" fill="rgb(247,55,45)" fg:x="280175" fg:w="675"/><text x="93.2370%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="93.1679%" y="309" width="0.0285%" height="15" fill="rgb(217,11,18)" fg:x="280850" fg:w="86"/><text x="93.4609%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.04%)</title><rect x="93.1679%" y="325" width="0.0401%" height="15" fill="rgb(227,127,4)" fg:x="280850" fg:w="121"/><text x="93.4609%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,772 instructions, 0.59%)</title><rect x="92.6849%" y="341" width="0.5878%" height="15" fill="rgb(217,97,45)" fg:x="279394" fg:w="1772"/><text x="92.9779%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.2727%" y="293" width="0.0196%" height="15" fill="rgb(250,135,20)" fg:x="281166" fg:w="59"/><text x="93.5657%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.2923%" y="293" width="0.0544%" height="15" fill="rgb(224,213,26)" fg:x="281225" fg:w="164"/><text x="93.5853%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.2727%" y="309" width="0.0949%" height="15" fill="rgb(237,86,25)" fg:x="281166" fg:w="286"/><text x="93.5657%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.4409%" y="293" width="0.0196%" height="15" fill="rgb(251,105,18)" fg:x="281673" fg:w="59"/><text x="93.7339%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.4605%" y="293" width="0.0544%" height="15" fill="rgb(246,124,25)" fg:x="281732" fg:w="164"/><text x="93.7535%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.4409%" y="309" width="0.0949%" height="15" fill="rgb(210,90,3)" fg:x="281673" fg:w="286"/><text x="93.7339%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,014 instructions, 0.34%)</title><rect x="93.2727%" y="325" width="0.3364%" height="15" fill="rgb(249,40,31)" fg:x="281166" fg:w="1014"/><text x="93.5657%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,344 instructions, 0.45%)</title><rect x="93.2727%" y="341" width="0.4459%" height="15" fill="rgb(231,228,1)" fg:x="281166" fg:w="1344"/><text x="93.5657%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,588 instructions, 1.52%)</title><rect x="92.2467%" y="357" width="1.5220%" height="15" fill="rgb(242,25,49)" fg:x="278073" fg:w="4588"/><text x="92.5396%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.7687%" y="325" width="0.0275%" height="15" fill="rgb(224,142,22)" fg:x="282661" fg:w="83"/><text x="94.0616%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="93.7687%" y="341" width="0.0418%" height="15" fill="rgb(228,106,29)" fg:x="282661" fg:w="126"/><text x="94.0616%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.07%)</title><rect x="93.7687%" y="357" width="0.0690%" height="15" fill="rgb(207,2,15)" fg:x="282661" fg:w="208"/><text x="94.0616%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="93.8476%" y="309" width="0.0272%" height="15" fill="rgb(231,43,37)" fg:x="282899" fg:w="82"/><text x="94.1406%" y="319.50"></text></g><g><title>candid::types::internal::unroll (170 instructions, 0.06%)</title><rect x="93.8476%" y="325" width="0.0564%" height="15" fill="rgb(245,193,12)" fg:x="282899" fg:w="170"/><text x="94.1406%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.9040%" y="325" width="0.0275%" height="15" fill="rgb(246,9,49)" fg:x="283069" fg:w="83"/><text x="94.1970%" y="335.50"></text></g><g><title>candid::types::internal::unroll (348 instructions, 0.12%)</title><rect x="93.8476%" y="341" width="0.1154%" height="15" fill="rgb(218,50,36)" fg:x="282899" fg:w="348"/><text x="94.1406%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.9631%" y="293" width="0.0196%" height="15" fill="rgb(225,206,16)" fg:x="283247" fg:w="59"/><text x="94.2560%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.9827%" y="293" width="0.0544%" height="15" fill="rgb(242,52,5)" fg:x="283306" fg:w="164"/><text x="94.2756%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="93.9631%" y="309" width="0.0949%" height="15" fill="rgb(217,158,11)" fg:x="283247" fg:w="286"/><text x="94.2560%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="93.9631%" y="325" width="0.1682%" height="15" fill="rgb(242,144,22)" fg:x="283247" fg:w="507"/><text x="94.2560%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.1313%" y="325" width="0.0275%" height="15" fill="rgb(236,191,3)" fg:x="283754" fg:w="83"/><text x="94.4242%" y="335.50"></text></g><g><title>memset (152 instructions, 0.05%)</title><rect x="94.1588%" y="325" width="0.0504%" height="15" fill="rgb(241,22,19)" fg:x="283837" fg:w="152"/><text x="94.4518%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,078 instructions, 0.36%)</title><rect x="93.9631%" y="341" width="0.3576%" height="15" fill="rgb(205,217,44)" fg:x="283247" fg:w="1078"/><text x="94.2560%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.3207%" y="309" width="0.0275%" height="15" fill="rgb(231,53,3)" fg:x="284325" fg:w="83"/><text x="94.6137%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.3207%" y="325" width="0.0418%" height="15" fill="rgb(207,13,22)" fg:x="284325" fg:w="126"/><text x="94.6137%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (208 instructions, 0.07%)</title><rect x="94.3207%" y="341" width="0.0690%" height="15" fill="rgb(234,62,29)" fg:x="284325" fg:w="208"/><text x="94.6137%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.3897%" y="293" width="0.0196%" height="15" fill="rgb(226,175,44)" fg:x="284533" fg:w="59"/><text x="94.6827%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (94 instructions, 0.03%)</title><rect x="94.3897%" y="309" width="0.0312%" height="15" fill="rgb(239,177,6)" fg:x="284533" fg:w="94"/><text x="94.6827%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (315 instructions, 0.10%)</title><rect x="94.3897%" y="325" width="0.1045%" height="15" fill="rgb(249,125,15)" fg:x="284533" fg:w="315"/><text x="94.6827%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (487 instructions, 0.16%)</title><rect x="94.3897%" y="341" width="0.1616%" height="15" fill="rgb(210,201,5)" fg:x="284533" fg:w="487"/><text x="94.6827%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.5512%" y="293" width="0.0275%" height="15" fill="rgb(210,14,6)" fg:x="285020" fg:w="83"/><text x="94.8442%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.5512%" y="309" width="0.0418%" height="15" fill="rgb(239,141,15)" fg:x="285020" fg:w="126"/><text x="94.8442%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.07%)</title><rect x="94.5512%" y="325" width="0.0680%" height="15" fill="rgb(235,75,9)" fg:x="285020" fg:w="205"/><text x="94.8442%" y="335.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.09%)</title><rect x="94.5512%" y="341" width="0.0876%" height="15" fill="rgb(246,122,37)" fg:x="285020" fg:w="264"/><text x="94.8442%" y="351.50"></text></g><g><title>leb128::write::signed (50 instructions, 0.02%)</title><rect x="94.6388%" y="325" width="0.0166%" height="15" fill="rgb(235,75,52)" fg:x="285284" fg:w="50"/><text x="94.9318%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (111 instructions, 0.04%)</title><rect x="94.6388%" y="341" width="0.0368%" height="15" fill="rgb(235,179,12)" fg:x="285284" fg:w="111"/><text x="94.9318%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="94.6756%" y="309" width="0.0285%" height="15" fill="rgb(223,20,9)" fg:x="285395" fg:w="86"/><text x="94.9686%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (121 instructions, 0.04%)</title><rect x="94.6756%" y="325" width="0.0401%" height="15" fill="rgb(223,75,22)" fg:x="285395" fg:w="121"/><text x="94.9686%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (84 instructions, 0.03%)</title><rect x="94.7158%" y="325" width="0.0279%" height="15" fill="rgb(248,148,18)" fg:x="285516" fg:w="84"/><text x="95.0088%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (250 instructions, 0.08%)</title><rect x="94.6756%" y="341" width="0.0829%" height="15" fill="rgb(225,103,8)" fg:x="285395" fg:w="250"/><text x="94.9686%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,046 instructions, 1.01%)</title><rect x="93.8377%" y="357" width="1.0105%" height="15" fill="rgb(237,168,17)" fg:x="282869" fg:w="3046"/><text x="94.1307%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.8525%" y="309" width="0.0275%" height="15" fill="rgb(215,192,38)" fg:x="285928" fg:w="83"/><text x="95.1454%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.8525%" y="325" width="0.0418%" height="15" fill="rgb(237,69,28)" fg:x="285928" fg:w="126"/><text x="95.1454%" y="335.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="94.9205%" y="309" width="0.0365%" height="15" fill="rgb(254,167,32)" fg:x="286133" fg:w="110"/><text x="95.2134%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="94.9205%" y="325" width="0.0514%" height="15" fill="rgb(250,81,30)" fg:x="286133" fg:w="155"/><text x="95.2134%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (448 instructions, 0.15%)</title><rect x="94.8525%" y="341" width="0.1486%" height="15" fill="rgb(240,68,52)" fg:x="285928" fg:w="448"/><text x="95.1454%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="95.0011%" y="341" width="0.1035%" height="15" fill="rgb(205,97,42)" fg:x="286376" fg:w="312"/><text x="95.2940%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (853 instructions, 0.28%)</title><rect x="94.8525%" y="357" width="0.2830%" height="15" fill="rgb(217,10,22)" fg:x="285928" fg:w="853"/><text x="95.1454%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.1809%" y="309" width="0.0196%" height="15" fill="rgb(216,21,26)" fg:x="286918" fg:w="59"/><text x="95.4738%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.13%)</title><rect x="95.2005%" y="309" width="0.1251%" height="15" fill="rgb(239,0,36)" fg:x="286977" fg:w="377"/><text x="95.4934%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="95.3255%" y="309" width="0.0259%" height="15" fill="rgb(216,162,28)" fg:x="287354" fg:w="78"/><text x="95.6185%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="95.1809%" y="325" width="0.2544%" height="15" fill="rgb(246,22,39)" fg:x="286918" fg:w="767"/><text x="95.4738%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="95.4353%" y="325" width="0.2239%" height="15" fill="rgb(222,84,49)" fg:x="287685" fg:w="675"/><text x="95.7283%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,640 instructions, 0.54%)</title><rect x="95.1762%" y="341" width="0.5440%" height="15" fill="rgb(250,38,34)" fg:x="286904" fg:w="1640"/><text x="95.4692%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,684 instructions, 0.56%)</title><rect x="95.1762%" y="357" width="0.5586%" height="15" fill="rgb(236,0,38)" fg:x="286904" fg:w="1684"/><text x="95.4692%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.7349%" y="309" width="0.0196%" height="15" fill="rgb(237,205,54)" fg:x="288588" fg:w="59"/><text x="96.0278%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="95.7544%" y="309" width="0.0544%" height="15" fill="rgb(221,80,35)" fg:x="288647" fg:w="164"/><text x="96.0474%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="95.7349%" y="325" width="0.0949%" height="15" fill="rgb(237,204,22)" fg:x="288588" fg:w="286"/><text x="96.0278%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="95.7349%" y="341" width="0.1682%" height="15" fill="rgb(213,108,15)" fg:x="288588" fg:w="507"/><text x="96.0278%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (610 instructions, 0.20%)</title><rect x="95.7349%" y="357" width="0.2024%" height="15" fill="rgb(251,187,9)" fg:x="288588" fg:w="610"/><text x="96.0278%" y="367.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="95.9415%" y="309" width="0.0365%" height="15" fill="rgb(250,61,9)" fg:x="289211" fg:w="110"/><text x="96.2345%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="95.9415%" y="325" width="0.0514%" height="15" fill="rgb(230,131,33)" fg:x="289211" fg:w="155"/><text x="96.2345%" y="335.50"></text></g><g><title>__rust_realloc (110 instructions, 0.04%)</title><rect x="96.0222%" y="309" width="0.0365%" height="15" fill="rgb(239,117,11)" fg:x="289454" fg:w="110"/><text x="96.3151%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (155 instructions, 0.05%)</title><rect x="96.0222%" y="325" width="0.0514%" height="15" fill="rgb(222,112,44)" fg:x="289454" fg:w="155"/><text x="96.3151%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (486 instructions, 0.16%)</title><rect x="95.9415%" y="341" width="0.1612%" height="15" fill="rgb(251,33,25)" fg:x="289211" fg:w="486"/><text x="96.2345%" y="351.50"></text></g><g><title>memcpy (4,124 instructions, 1.37%)</title><rect x="96.1028%" y="341" width="1.3681%" height="15" fill="rgb(208,171,34)" fg:x="289697" fg:w="4124"/><text x="96.3957%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,745 instructions, 1.57%)</title><rect x="95.9415%" y="357" width="1.5741%" height="15" fill="rgb(250,166,54)" fg:x="289211" fg:w="4745"/><text x="96.2345%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (15,994 instructions, 5.31%)</title><rect x="92.2467%" y="373" width="5.3058%" height="15" fill="rgb(212,148,2)" fg:x="278073" fg:w="15994"/><text x="92.5396%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (96 instructions, 0.03%)</title><rect x="97.5525%" y="373" width="0.0318%" height="15" fill="rgb(224,92,39)" fg:x="294067" fg:w="96"/><text x="97.8454%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (130 instructions, 0.04%)</title><rect x="97.5843%" y="373" width="0.0431%" height="15" fill="rgb(250,28,16)" fg:x="294163" fg:w="130"/><text x="97.8773%" y="383.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.17%)</title><rect x="97.6274%" y="357" width="0.1718%" height="15" fill="rgb(227,128,26)" fg:x="294293" fg:w="518"/><text x="97.9204%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (121 instructions, 0.04%)</title><rect x="97.7993%" y="309" width="0.0401%" height="15" fill="rgb(248,66,7)" fg:x="294811" fg:w="121"/><text x="98.0922%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.05%)</title><rect x="97.7993%" y="325" width="0.0544%" height="15" fill="rgb(215,124,51)" fg:x="294811" fg:w="164"/><text x="98.0922%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (243 instructions, 0.08%)</title><rect x="97.7993%" y="341" width="0.0806%" height="15" fill="rgb(207,91,1)" fg:x="294811" fg:w="243"/><text x="98.0922%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="97.8799%" y="341" width="0.0275%" height="15" fill="rgb(217,207,38)" fg:x="295054" fg:w="83"/><text x="98.1728%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9074%" y="341" width="0.0169%" height="15" fill="rgb(240,118,9)" fg:x="295137" fg:w="51"/><text x="98.2004%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9243%" y="341" width="0.0169%" height="15" fill="rgb(224,147,4)" fg:x="295188" fg:w="51"/><text x="98.2173%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="97.9412%" y="341" width="0.0199%" height="15" fill="rgb(205,105,13)" fg:x="295239" fg:w="60"/><text x="98.2342%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="97.9612%" y="293" width="0.0196%" height="15" fill="rgb(251,78,39)" fg:x="295299" fg:w="59"/><text x="98.2541%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="97.9807%" y="293" width="0.0544%" height="15" fill="rgb(225,60,44)" fg:x="295358" fg:w="164"/><text x="98.2737%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="97.9612%" y="309" width="0.0949%" height="15" fill="rgb(221,228,40)" fg:x="295299" fg:w="286"/><text x="98.2541%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="97.9612%" y="325" width="0.1682%" height="15" fill="rgb(215,104,30)" fg:x="295299" fg:w="507"/><text x="98.2541%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="98.1293%" y="277" width="0.0275%" height="15" fill="rgb(206,183,3)" fg:x="295806" fg:w="83"/><text x="98.4223%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="98.1293%" y="293" width="0.0418%" height="15" fill="rgb(236,199,25)" fg:x="295806" fg:w="126"/><text x="98.4223%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (205 instructions, 0.07%)</title><rect x="98.1293%" y="309" width="0.0680%" height="15" fill="rgb(230,107,29)" fg:x="295806" fg:w="205"/><text x="98.4223%" y="319.50"></text></g><g><title>leb128::write::signed (264 instructions, 0.09%)</title><rect x="98.1293%" y="325" width="0.0876%" height="15" fill="rgb(216,12,37)" fg:x="295806" fg:w="264"/><text x="98.4223%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="98.2693%" y="293" width="0.0196%" height="15" fill="rgb(238,165,28)" fg:x="296228" fg:w="59"/><text x="98.5623%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="98.2889%" y="293" width="0.0544%" height="15" fill="rgb(226,173,5)" fg:x="296287" fg:w="164"/><text x="98.5819%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (286 instructions, 0.09%)</title><rect x="98.2693%" y="309" width="0.0949%" height="15" fill="rgb(229,9,37)" fg:x="296228" fg:w="286"/><text x="98.5623%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (507 instructions, 0.17%)</title><rect x="98.2693%" y="325" width="0.1682%" height="15" fill="rgb(252,194,43)" fg:x="296228" fg:w="507"/><text x="98.5623%" y="335.50"></text></g><g><title>leb128::write::signed (50 instructions, 0.02%)</title><rect x="98.4375%" y="325" width="0.0166%" height="15" fill="rgb(215,58,45)" fg:x="296735" fg:w="50"/><text x="98.7305%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,644 instructions, 0.55%)</title><rect x="97.9612%" y="341" width="0.5454%" height="15" fill="rgb(218,34,51)" fg:x="295299" fg:w="1644"/><text x="98.2541%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.5065%" y="341" width="0.0169%" height="15" fill="rgb(230,104,27)" fg:x="296943" fg:w="51"/><text x="98.7995%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.5234%" y="341" width="0.0199%" height="15" fill="rgb(250,9,6)" fg:x="296994" fg:w="60"/><text x="98.8164%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,647 instructions, 0.88%)</title><rect x="97.7993%" y="357" width="0.8781%" height="15" fill="rgb(245,10,16)" fg:x="294811" fg:w="2647"/><text x="98.0922%" y="367.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.17%)</title><rect x="98.6774%" y="357" width="0.1725%" height="15" fill="rgb(227,182,27)" fg:x="297458" fg:w="520"/><text x="98.9703%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,250 instructions, 0.41%)</title><rect x="98.8499%" y="357" width="0.4147%" height="15" fill="rgb(225,91,37)" fg:x="297978" fg:w="1250"/><text x="99.1428%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (5,028 instructions, 1.67%)</title><rect x="97.6274%" y="373" width="1.6680%" height="15" fill="rgb(240,16,41)" fg:x="294293" fg:w="5028"/><text x="97.9204%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.2954%" y="373" width="0.0285%" height="15" fill="rgb(214,108,54)" fg:x="299321" fg:w="86"/><text x="99.5884%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (132 instructions, 0.04%)</title><rect x="99.3239%" y="373" width="0.0438%" height="15" fill="rgb(253,65,28)" fg:x="299407" fg:w="132"/><text x="99.6169%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.3720%" y="373" width="0.0408%" height="15" fill="rgb(246,105,4)" fg:x="299552" fg:w="123"/><text x="99.6650%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.4234%" y="373" width="0.0285%" height="15" fill="rgb(223,163,37)" fg:x="299707" fg:w="86"/><text x="99.7164%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (109 instructions, 0.04%)</title><rect x="99.4520%" y="373" width="0.0362%" height="15" fill="rgb(206,202,31)" fg:x="299793" fg:w="109"/><text x="99.7449%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (96 instructions, 0.03%)</title><rect x="99.4881%" y="373" width="0.0318%" height="15" fill="rgb(241,202,54)" fg:x="299902" fg:w="96"/><text x="99.7811%" y="383.50"></text></g><g><title>certified_map::witness_6_::{{closure}} (300,843 instructions, 99.80%)</title><rect x="0.0736%" y="389" width="99.8003%" height="15" fill="rgb(220,22,45)" fg:x="222" fg:w="300843"/><text x="0.3666%" y="399.50">certified_map::witness_6_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (86 instructions, 0.03%)</title><rect x="99.8789%" y="389" width="0.0285%" height="15" fill="rgb(234,215,40)" fg:x="301080" fg:w="86"/><text x="100.1719%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (135 instructions, 0.04%)</title><rect x="99.9074%" y="389" width="0.0448%" height="15" fill="rgb(220,3,5)" fg:x="301166" fg:w="135"/><text x="100.2004%" y="399.50"></text></g><g><title>all (301,445 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(210,8,15)" fg:x="0" fg:w="301445"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (301,445 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(218,113,45)" fg:x="0" fg:w="301445"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>