<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="298204"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0080%" y="389" width="0.0275%" height="15" fill="rgb(221,157,7)" fg:x="24" fg:w="82"/><text x="0.3010%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.05%)</title><rect x="0.0355%" y="389" width="0.0533%" height="15" fill="rgb(242,163,10)" fg:x="106" fg:w="159"/><text x="0.3285%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0889%" y="357" width="0.0275%" height="15" fill="rgb(232,30,2)" fg:x="265" fg:w="82"/><text x="0.3818%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.1164%" y="341" width="0.0275%" height="15" fill="rgb(245,102,40)" fg:x="347" fg:w="82"/><text x="0.4093%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.1439%" y="341" width="0.1486%" height="15" fill="rgb(242,10,41)" fg:x="429" fg:w="443"/><text x="0.4368%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.2924%" y="341" width="0.0319%" height="15" fill="rgb(236,184,36)" fg:x="872" fg:w="95"/><text x="0.5854%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3243%" y="341" width="0.0201%" height="15" fill="rgb(247,147,48)" fg:x="967" fg:w="60"/><text x="0.6172%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3444%" y="341" width="0.0201%" height="15" fill="rgb(226,166,2)" fg:x="1027" fg:w="60"/><text x="0.6374%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3645%" y="341" width="0.0201%" height="15" fill="rgb(251,196,7)" fg:x="1087" fg:w="60"/><text x="0.6575%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3846%" y="341" width="0.0201%" height="15" fill="rgb(241,40,13)" fg:x="1147" fg:w="60"/><text x="0.6776%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.4048%" y="341" width="0.0275%" height="15" fill="rgb(254,4,12)" fg:x="1207" fg:w="82"/><text x="0.6977%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.4323%" y="341" width="0.0235%" height="15" fill="rgb(244,139,49)" fg:x="1289" fg:w="70"/><text x="0.7252%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.4557%" y="341" width="0.1486%" height="15" fill="rgb(227,28,42)" fg:x="1359" fg:w="443"/><text x="0.7487%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.03%)</title><rect x="0.6107%" y="325" width="0.0268%" height="15" fill="rgb(231,135,32)" fg:x="1821" fg:w="80"/><text x="0.9036%" y="335.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="0.6375%" y="293" width="0.0225%" height="15" fill="rgb(244,182,3)" fg:x="1901" fg:w="67"/><text x="0.9305%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.03%)</title><rect x="0.6375%" y="309" width="0.0322%" height="15" fill="rgb(247,46,19)" fg:x="1901" fg:w="96"/><text x="0.9305%" y="319.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="0.6734%" y="245" width="0.0117%" height="15" fill="rgb(251,179,10)" fg:x="2008" fg:w="35"/><text x="0.9663%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.02%)</title><rect x="0.6734%" y="261" width="0.0215%" height="15" fill="rgb(229,222,18)" fg:x="2008" fg:w="64"/><text x="0.9663%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="0.6697%" y="277" width="0.0483%" height="15" fill="rgb(251,107,20)" fg:x="1997" fg:w="144"/><text x="0.9626%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="0.6697%" y="293" width="0.0701%" height="15" fill="rgb(233,193,19)" fg:x="1997" fg:w="209"/><text x="0.9626%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="0.6697%" y="309" width="0.0734%" height="15" fill="rgb(229,146,53)" fg:x="1997" fg:w="219"/><text x="0.9626%" y="319.50"></text></g><g><title>core::fmt::write (457 instructions, 0.15%)</title><rect x="0.6375%" y="325" width="0.1533%" height="15" fill="rgb(244,52,11)" fg:x="1901" fg:w="457"/><text x="0.9305%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (675 instructions, 0.23%)</title><rect x="0.6107%" y="341" width="0.2264%" height="15" fill="rgb(245,211,46)" fg:x="1821" fg:w="675"/><text x="0.9036%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.8370%" y="341" width="0.0319%" height="15" fill="rgb(213,8,31)" fg:x="2496" fg:w="95"/><text x="1.1300%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="0.8689%" y="341" width="0.0298%" height="15" fill="rgb(205,101,39)" fg:x="2591" fg:w="89"/><text x="1.1618%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="0.8987%" y="341" width="0.0255%" height="15" fill="rgb(212,157,1)" fg:x="2680" fg:w="76"/><text x="1.1917%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.9242%" y="341" width="0.0235%" height="15" fill="rgb(232,30,46)" fg:x="2756" fg:w="70"/><text x="1.2172%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.9477%" y="325" width="0.1486%" height="15" fill="rgb(216,201,6)" fg:x="2826" fg:w="443"/><text x="1.2406%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.1026%" y="309" width="0.0275%" height="15" fill="rgb(209,18,6)" fg:x="3288" fg:w="82"/><text x="1.3956%" y="319.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="1.1301%" y="277" width="0.0225%" height="15" fill="rgb(219,138,3)" fg:x="3370" fg:w="67"/><text x="1.4231%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.03%)</title><rect x="1.1301%" y="293" width="0.0322%" height="15" fill="rgb(210,91,46)" fg:x="3370" fg:w="96"/><text x="1.4231%" y="303.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="1.1660%" y="229" width="0.0117%" height="15" fill="rgb(241,80,44)" fg:x="3477" fg:w="35"/><text x="1.4589%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.02%)</title><rect x="1.1660%" y="245" width="0.0215%" height="15" fill="rgb(236,205,36)" fg:x="3477" fg:w="64"/><text x="1.4589%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="1.1623%" y="261" width="0.0483%" height="15" fill="rgb(205,59,37)" fg:x="3466" fg:w="144"/><text x="1.4553%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="1.1623%" y="277" width="0.0701%" height="15" fill="rgb(239,166,39)" fg:x="3466" fg:w="209"/><text x="1.4553%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="1.1623%" y="293" width="0.0734%" height="15" fill="rgb(239,146,40)" fg:x="3466" fg:w="219"/><text x="1.4553%" y="303.50"></text></g><g><title>core::fmt::write (457 instructions, 0.15%)</title><rect x="1.1301%" y="309" width="0.1533%" height="15" fill="rgb(231,11,52)" fg:x="3370" fg:w="457"/><text x="1.4231%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (677 instructions, 0.23%)</title><rect x="1.1026%" y="325" width="0.2270%" height="15" fill="rgb(253,21,37)" fg:x="3288" fg:w="677"/><text x="1.3956%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="1.3296%" y="325" width="0.0319%" height="15" fill="rgb(224,87,39)" fg:x="3965" fg:w="95"/><text x="1.6226%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="1.3615%" y="325" width="0.0298%" height="15" fill="rgb(249,15,46)" fg:x="4060" fg:w="89"/><text x="1.6545%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,512 instructions, 0.51%)</title><rect x="0.9477%" y="341" width="0.5070%" height="15" fill="rgb(250,37,51)" fg:x="2826" fg:w="1512"/><text x="1.2406%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="1.4547%" y="341" width="0.0255%" height="15" fill="rgb(205,185,43)" fg:x="4338" fg:w="76"/><text x="1.7477%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.4973%" y="341" width="0.0275%" height="15" fill="rgb(206,65,41)" fg:x="4465" fg:w="82"/><text x="1.7903%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.5248%" y="341" width="0.0305%" height="15" fill="rgb(236,159,32)" fg:x="4547" fg:w="91"/><text x="1.8178%" y="351.50"></text></g><g><title>memcpy (392 instructions, 0.13%)</title><rect x="1.5567%" y="341" width="0.1315%" height="15" fill="rgb(228,199,27)" fg:x="4642" fg:w="392"/><text x="1.8496%" y="351.50"></text></g><g><title>memcpy (392 instructions, 0.13%)</title><rect x="1.6881%" y="341" width="0.1315%" height="15" fill="rgb(212,0,37)" fg:x="5034" fg:w="392"/><text x="1.9811%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="1.8196%" y="341" width="0.1690%" height="15" fill="rgb(248,50,11)" fg:x="5426" fg:w="504"/><text x="2.1125%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,629 instructions, 2.22%)</title><rect x="0.1164%" y="357" width="2.2230%" height="15" fill="rgb(231,164,25)" fg:x="347" fg:w="6629"/><text x="0.4093%" y="367.50">c..</text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="2.3393%" y="357" width="0.1154%" height="15" fill="rgb(238,38,39)" fg:x="6976" fg:w="344"/><text x="2.6323%" y="367.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.01%)</title><rect x="2.4547%" y="357" width="0.0144%" height="15" fill="rgb(210,15,50)" fg:x="7320" fg:w="43"/><text x="2.7477%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="2.4715%" y="325" width="0.0298%" height="15" fill="rgb(251,126,36)" fg:x="7370" fg:w="89"/><text x="2.7644%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="2.5161%" y="325" width="0.0211%" height="15" fill="rgb(243,59,26)" fg:x="7503" fg:w="63"/><text x="2.8090%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (240 instructions, 0.08%)</title><rect x="2.4715%" y="341" width="0.0805%" height="15" fill="rgb(215,24,30)" fg:x="7370" fg:w="240"/><text x="2.7644%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (305 instructions, 0.10%)</title><rect x="2.4691%" y="357" width="0.1023%" height="15" fill="rgb(253,50,51)" fg:x="7363" fg:w="305"/><text x="2.7621%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="2.5714%" y="357" width="0.0298%" height="15" fill="rgb(252,2,16)" fg:x="7668" fg:w="89"/><text x="2.8644%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (8,775 instructions, 2.94%)</title><rect x="0.0889%" y="373" width="2.9426%" height="15" fill="rgb(209,123,36)" fg:x="265" fg:w="8775"/><text x="0.3818%" y="383.50">ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="3.0315%" y="341" width="0.0275%" height="15" fill="rgb(245,60,15)" fg:x="9040" fg:w="82"/><text x="3.3245%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (119 instructions, 0.04%)</title><rect x="3.0315%" y="357" width="0.0399%" height="15" fill="rgb(246,4,13)" fg:x="9040" fg:w="119"/><text x="3.3245%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (201 instructions, 0.07%)</title><rect x="3.0315%" y="373" width="0.0674%" height="15" fill="rgb(210,223,46)" fg:x="9040" fg:w="201"/><text x="3.3245%" y="383.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.1307%" y="277" width="0.0141%" height="15" fill="rgb(248,1,9)" fg:x="9336" fg:w="42"/><text x="3.4237%" y="287.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.1448%" y="261" width="0.0141%" height="15" fill="rgb(254,2,34)" fg:x="9378" fg:w="42"/><text x="3.4378%" y="271.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.1589%" y="245" width="0.0141%" height="15" fill="rgb(239,176,1)" fg:x="9420" fg:w="42"/><text x="3.4519%" y="255.50"></text></g><g><title>memcmp (65 instructions, 0.02%)</title><rect x="3.1730%" y="229" width="0.0218%" height="15" fill="rgb(250,25,32)" fg:x="9462" fg:w="65"/><text x="3.4660%" y="239.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.1948%" y="213" width="0.0141%" height="15" fill="rgb(225,28,39)" fg:x="9527" fg:w="42"/><text x="3.4878%" y="223.50"></text></g><g><title>memcmp (169 instructions, 0.06%)</title><rect x="3.2089%" y="197" width="0.0567%" height="15" fill="rgb(230,166,37)" fg:x="9569" fg:w="169"/><text x="3.5018%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="3.2655%" y="197" width="0.0275%" height="15" fill="rgb(246,220,4)" fg:x="9738" fg:w="82"/><text x="3.5585%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.2930%" y="181" width="0.0305%" height="15" fill="rgb(219,119,33)" fg:x="9820" fg:w="91"/><text x="3.5860%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="3.3236%" y="181" width="0.1154%" height="15" fill="rgb(221,207,38)" fg:x="9911" fg:w="344"/><text x="3.6165%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.4389%" y="181" width="0.0305%" height="15" fill="rgb(214,153,5)" fg:x="10255" fg:w="91"/><text x="3.7319%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (843 instructions, 0.28%)</title><rect x="3.2930%" y="197" width="0.2827%" height="15" fill="rgb(223,50,16)" fg:x="9820" fg:w="843"/><text x="3.5860%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,284 instructions, 0.43%)</title><rect x="3.2089%" y="213" width="0.4306%" height="15" fill="rgb(209,207,12)" fg:x="9569" fg:w="1284"/><text x="3.5018%" y="223.50"></text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="3.6395%" y="181" width="0.0805%" height="15" fill="rgb(207,3,46)" fg:x="10853" fg:w="240"/><text x="3.9324%" y="191.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="3.7199%" y="181" width="0.0738%" height="15" fill="rgb(232,45,53)" fg:x="11093" fg:w="220"/><text x="4.0129%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.7937%" y="181" width="0.1690%" height="15" fill="rgb(206,140,15)" fg:x="11313" fg:w="504"/><text x="4.0867%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="3.6395%" y="197" width="0.3538%" height="15" fill="rgb(245,66,17)" fg:x="10853" fg:w="1055"/><text x="3.9324%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="3.9932%" y="197" width="0.0439%" height="15" fill="rgb(221,25,37)" fg:x="11908" fg:w="131"/><text x="4.2862%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="4.0372%" y="197" width="0.1690%" height="15" fill="rgb(215,99,47)" fg:x="12039" fg:w="504"/><text x="4.3301%" y="207.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="4.2062%" y="197" width="0.0614%" height="15" fill="rgb(219,154,44)" fg:x="12543" fg:w="183"/><text x="4.4991%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="4.2675%" y="197" width="1.6723%" height="15" fill="rgb(210,197,36)" fg:x="12726" fg:w="4987"/><text x="4.5605%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="3.6395%" y="213" width="2.4249%" height="15" fill="rgb(217,137,10)" fg:x="10853" fg:w="7231"/><text x="3.9324%" y="223.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="6.0643%" y="181" width="0.0805%" height="15" fill="rgb(240,216,26)" fg:x="18084" fg:w="240"/><text x="6.3573%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="6.1448%" y="181" width="0.0748%" height="15" fill="rgb(242,76,17)" fg:x="18324" fg:w="223"/><text x="6.4378%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.2196%" y="181" width="0.1690%" height="15" fill="rgb(243,142,51)" fg:x="18547" fg:w="504"/><text x="6.5125%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="6.0643%" y="197" width="0.3548%" height="15" fill="rgb(233,109,46)" fg:x="18084" fg:w="1058"/><text x="6.3573%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="6.4191%" y="197" width="0.0439%" height="15" fill="rgb(252,45,32)" fg:x="19142" fg:w="131"/><text x="6.7121%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.4630%" y="197" width="0.1690%" height="15" fill="rgb(210,69,52)" fg:x="19273" fg:w="504"/><text x="6.7560%" y="207.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="6.6320%" y="197" width="0.0215%" height="15" fill="rgb(242,30,2)" fg:x="19777" fg:w="64"/><text x="6.9250%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="6.6535%" y="197" width="1.6723%" height="15" fill="rgb(246,137,1)" fg:x="19841" fg:w="4987"/><text x="6.9465%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="8.3258%" y="197" width="1.6723%" height="15" fill="rgb(221,205,25)" fg:x="24828" fg:w="4987"/><text x="8.6188%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="6.0643%" y="213" width="4.0878%" height="15" fill="rgb(224,44,43)" fg:x="18084" fg:w="12190"/><text x="6.3573%" y="223.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="10.1521%" y="165" width="0.0805%" height="15" fill="rgb(209,81,13)" fg:x="30274" fg:w="240"/><text x="10.4451%" y="175.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="10.2326%" y="165" width="0.0738%" height="15" fill="rgb(227,88,4)" fg:x="30514" fg:w="220"/><text x="10.5256%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="10.3064%" y="165" width="0.1690%" height="15" fill="rgb(228,118,49)" fg:x="30734" fg:w="504"/><text x="10.5993%" y="175.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="10.1521%" y="181" width="0.3538%" height="15" fill="rgb(225,215,27)" fg:x="30274" fg:w="1055"/><text x="10.4451%" y="191.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="10.5059%" y="181" width="0.0869%" height="15" fill="rgb(235,226,1)" fg:x="31329" fg:w="259"/><text x="10.7989%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="10.5927%" y="181" width="1.6723%" height="15" fill="rgb(205,107,17)" fg:x="31588" fg:w="4987"/><text x="10.8857%" y="191.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="12.2651%" y="181" width="0.0469%" height="15" fill="rgb(247,85,8)" fg:x="36575" fg:w="140"/><text x="12.5581%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="12.3120%" y="181" width="0.1690%" height="15" fill="rgb(230,220,20)" fg:x="36715" fg:w="504"/><text x="12.6050%" y="191.50"></text></g><g><title>memset (194 instructions, 0.07%)</title><rect x="12.4811%" y="181" width="0.0651%" height="15" fill="rgb(237,22,6)" fg:x="37219" fg:w="194"/><text x="12.7740%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="12.5461%" y="181" width="1.6723%" height="15" fill="rgb(253,39,1)" fg:x="37413" fg:w="4987"/><text x="12.8391%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.22%)</title><rect x="10.1521%" y="197" width="4.2189%" height="15" fill="rgb(251,206,50)" fg:x="30274" fg:w="12581"/><text x="10.4451%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="14.3710%" y="197" width="0.0305%" height="15" fill="rgb(239,162,11)" fg:x="42855" fg:w="91"/><text x="14.6640%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.35%)</title><rect x="10.1521%" y="213" width="4.3460%" height="15" fill="rgb(234,164,6)" fg:x="30274" fg:w="12960"/><text x="10.4451%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,912 instructions, 11.37%)</title><rect x="3.1948%" y="229" width="11.3721%" height="15" fill="rgb(238,112,10)" fg:x="9527" fg:w="33912"/><text x="3.4878%" y="239.50">ic_certified_m..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="14.5669%" y="197" width="0.0805%" height="15" fill="rgb(232,78,29)" fg:x="43439" fg:w="240"/><text x="14.8598%" y="207.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="14.6474%" y="197" width="0.0738%" height="15" fill="rgb(232,20,13)" fg:x="43679" fg:w="220"/><text x="14.9403%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.7211%" y="197" width="0.1690%" height="15" fill="rgb(222,175,9)" fg:x="43899" fg:w="504"/><text x="15.0141%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="14.5669%" y="213" width="0.3538%" height="15" fill="rgb(233,61,14)" fg:x="43439" fg:w="1055"/><text x="14.8598%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="14.9207%" y="213" width="0.0439%" height="15" fill="rgb(224,152,29)" fg:x="44494" fg:w="131"/><text x="15.2136%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.9646%" y="213" width="0.1690%" height="15" fill="rgb(232,26,6)" fg:x="44625" fg:w="504"/><text x="15.2576%" y="223.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="15.1336%" y="213" width="0.0614%" height="15" fill="rgb(210,116,11)" fg:x="45129" fg:w="183"/><text x="15.4266%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="15.1950%" y="213" width="1.6723%" height="15" fill="rgb(238,213,15)" fg:x="45312" fg:w="4987"/><text x="15.4879%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="14.5669%" y="229" width="2.4249%" height="15" fill="rgb(236,177,32)" fg:x="43439" fg:w="7231"/><text x="14.8598%" y="239.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="16.9917%" y="197" width="0.0805%" height="15" fill="rgb(230,36,43)" fg:x="50670" fg:w="240"/><text x="17.2847%" y="207.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="17.0722%" y="197" width="0.0748%" height="15" fill="rgb(212,76,23)" fg:x="50910" fg:w="223"/><text x="17.3652%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="17.1470%" y="197" width="0.1690%" height="15" fill="rgb(225,168,24)" fg:x="51133" fg:w="504"/><text x="17.4400%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="16.9917%" y="213" width="0.3548%" height="15" fill="rgb(206,40,44)" fg:x="50670" fg:w="1058"/><text x="17.2847%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="17.3465%" y="213" width="0.0439%" height="15" fill="rgb(251,213,6)" fg:x="51728" fg:w="131"/><text x="17.6395%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="17.3904%" y="213" width="0.1690%" height="15" fill="rgb(220,7,47)" fg:x="51859" fg:w="504"/><text x="17.6834%" y="223.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="17.5595%" y="213" width="0.0215%" height="15" fill="rgb(254,130,53)" fg:x="52363" fg:w="64"/><text x="17.8524%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="17.5809%" y="213" width="1.6723%" height="15" fill="rgb(240,2,46)" fg:x="52427" fg:w="4987"/><text x="17.8739%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="19.2533%" y="213" width="1.6723%" height="15" fill="rgb(252,144,40)" fg:x="57414" fg:w="4987"/><text x="19.5462%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="16.9917%" y="229" width="4.0878%" height="15" fill="rgb(226,23,10)" fg:x="50670" fg:w="12190"/><text x="17.2847%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="21.0795%" y="213" width="0.0305%" height="15" fill="rgb(212,204,35)" fg:x="62860" fg:w="91"/><text x="21.3725%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="21.1100%" y="213" width="0.1154%" height="15" fill="rgb(218,201,15)" fg:x="62951" fg:w="344"/><text x="21.4030%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="21.2254%" y="213" width="0.0305%" height="15" fill="rgb(224,197,5)" fg:x="63295" fg:w="91"/><text x="21.5184%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="21.0795%" y="229" width="0.2844%" height="15" fill="rgb(224,185,18)" fg:x="62860" fg:w="848"/><text x="21.3725%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (54,450 instructions, 18.26%)</title><rect x="3.1730%" y="245" width="18.2593%" height="15" fill="rgb(251,71,45)" fg:x="9462" fg:w="54450"/><text x="3.4660%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="21.4323%" y="213" width="0.0805%" height="15" fill="rgb(216,74,24)" fg:x="63912" fg:w="240"/><text x="21.7253%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="21.5128%" y="213" width="0.0738%" height="15" fill="rgb(250,36,51)" fg:x="64152" fg:w="220"/><text x="21.8058%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.5866%" y="213" width="0.1690%" height="15" fill="rgb(209,224,28)" fg:x="64372" fg:w="504"/><text x="21.8795%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="21.4323%" y="229" width="0.3538%" height="15" fill="rgb(228,5,10)" fg:x="63912" fg:w="1055"/><text x="21.7253%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="21.7861%" y="229" width="0.0439%" height="15" fill="rgb(250,57,40)" fg:x="64967" fg:w="131"/><text x="22.0791%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.8300%" y="229" width="0.1690%" height="15" fill="rgb(228,194,41)" fg:x="65098" fg:w="504"/><text x="22.1230%" y="239.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="21.9990%" y="229" width="0.0614%" height="15" fill="rgb(206,68,23)" fg:x="65602" fg:w="183"/><text x="22.2920%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="22.0604%" y="229" width="1.6723%" height="15" fill="rgb(230,33,29)" fg:x="65785" fg:w="4987"/><text x="22.3534%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="21.4323%" y="245" width="2.4249%" height="15" fill="rgb(210,39,32)" fg:x="63912" fg:w="7231"/><text x="21.7253%" y="255.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="23.8572%" y="213" width="0.0805%" height="15" fill="rgb(236,89,23)" fg:x="71143" fg:w="240"/><text x="24.1501%" y="223.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="23.9376%" y="213" width="0.0748%" height="15" fill="rgb(218,52,52)" fg:x="71383" fg:w="223"/><text x="24.2306%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="24.0124%" y="213" width="0.1690%" height="15" fill="rgb(235,154,5)" fg:x="71606" fg:w="504"/><text x="24.3054%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="23.8572%" y="229" width="0.3548%" height="15" fill="rgb(223,168,9)" fg:x="71143" fg:w="1058"/><text x="24.1501%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="24.2119%" y="229" width="0.0439%" height="15" fill="rgb(220,8,33)" fg:x="72201" fg:w="131"/><text x="24.5049%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="24.2559%" y="229" width="0.1690%" height="15" fill="rgb(216,176,3)" fg:x="72332" fg:w="504"/><text x="24.5488%" y="239.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="24.4249%" y="229" width="0.0215%" height="15" fill="rgb(254,150,22)" fg:x="72836" fg:w="64"/><text x="24.7179%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="24.4464%" y="229" width="1.6723%" height="15" fill="rgb(231,61,53)" fg:x="72900" fg:w="4987"/><text x="24.7393%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="26.1187%" y="229" width="1.6723%" height="15" fill="rgb(249,177,41)" fg:x="77887" fg:w="4987"/><text x="26.4117%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="23.8572%" y="245" width="4.0878%" height="15" fill="rgb(221,122,7)" fg:x="71143" fg:w="12190"/><text x="24.1501%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.9450%" y="229" width="0.0305%" height="15" fill="rgb(215,115,7)" fg:x="83333" fg:w="91"/><text x="28.2379%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="27.9755%" y="229" width="0.1154%" height="15" fill="rgb(218,108,33)" fg:x="83424" fg:w="344"/><text x="28.2684%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="28.0908%" y="229" width="0.0305%" height="15" fill="rgb(221,205,39)" fg:x="83768" fg:w="91"/><text x="28.3838%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="27.9450%" y="245" width="0.2844%" height="15" fill="rgb(220,171,18)" fg:x="83333" fg:w="848"/><text x="28.2379%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (74,965 instructions, 25.14%)</title><rect x="3.1589%" y="261" width="25.1388%" height="15" fill="rgb(236,188,29)" fg:x="9420" fg:w="74965"/><text x="3.4519%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="28.2977%" y="229" width="0.0805%" height="15" fill="rgb(239,29,5)" fg:x="84385" fg:w="240"/><text x="28.5907%" y="239.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="28.3782%" y="229" width="0.0738%" height="15" fill="rgb(236,114,44)" fg:x="84625" fg:w="220"/><text x="28.6712%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="28.4520%" y="229" width="0.1690%" height="15" fill="rgb(239,214,48)" fg:x="84845" fg:w="504"/><text x="28.7450%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="28.2977%" y="245" width="0.3538%" height="15" fill="rgb(241,56,8)" fg:x="84385" fg:w="1055"/><text x="28.5907%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="28.6515%" y="245" width="0.0439%" height="15" fill="rgb(228,201,0)" fg:x="85440" fg:w="131"/><text x="28.9445%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="28.6955%" y="245" width="0.1690%" height="15" fill="rgb(226,219,34)" fg:x="85571" fg:w="504"/><text x="28.9884%" y="255.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="28.8645%" y="245" width="0.0614%" height="15" fill="rgb(209,204,54)" fg:x="86075" fg:w="183"/><text x="29.1574%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="28.9258%" y="245" width="1.6723%" height="15" fill="rgb(251,160,17)" fg:x="86258" fg:w="4987"/><text x="29.2188%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="28.2977%" y="261" width="2.4249%" height="15" fill="rgb(235,15,25)" fg:x="84385" fg:w="7231"/><text x="28.5907%" y="271.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="30.7226%" y="229" width="0.0805%" height="15" fill="rgb(216,209,28)" fg:x="91616" fg:w="240"/><text x="31.0156%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="30.8031%" y="229" width="0.0748%" height="15" fill="rgb(248,123,21)" fg:x="91856" fg:w="223"/><text x="31.0960%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.8779%" y="229" width="0.1690%" height="15" fill="rgb(226,138,44)" fg:x="92079" fg:w="504"/><text x="31.1708%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="30.7226%" y="245" width="0.3548%" height="15" fill="rgb(211,104,54)" fg:x="91616" fg:w="1058"/><text x="31.0156%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="31.0774%" y="245" width="0.0439%" height="15" fill="rgb(241,198,15)" fg:x="92674" fg:w="131"/><text x="31.3704%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="31.1213%" y="245" width="0.1690%" height="15" fill="rgb(227,155,54)" fg:x="92805" fg:w="504"/><text x="31.4143%" y="255.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="31.2903%" y="245" width="0.0215%" height="15" fill="rgb(225,131,31)" fg:x="93309" fg:w="64"/><text x="31.5833%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="31.3118%" y="245" width="1.6723%" height="15" fill="rgb(242,40,17)" fg:x="93373" fg:w="4987"/><text x="31.6048%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="32.9841%" y="245" width="1.6723%" height="15" fill="rgb(254,57,35)" fg:x="98360" fg:w="4987"/><text x="33.2771%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="30.7226%" y="261" width="4.0878%" height="15" fill="rgb(240,64,32)" fg:x="91616" fg:w="12190"/><text x="31.0156%" y="271.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="34.8104%" y="213" width="0.0805%" height="15" fill="rgb(251,136,26)" fg:x="103806" fg:w="240"/><text x="35.1034%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="34.8909%" y="213" width="0.0738%" height="15" fill="rgb(208,60,54)" fg:x="104046" fg:w="220"/><text x="35.1838%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="34.9647%" y="213" width="0.1690%" height="15" fill="rgb(220,13,12)" fg:x="104266" fg:w="504"/><text x="35.2576%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="34.8104%" y="229" width="0.3538%" height="15" fill="rgb(213,149,1)" fg:x="103806" fg:w="1055"/><text x="35.1034%" y="239.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="35.1642%" y="229" width="0.0869%" height="15" fill="rgb(212,191,39)" fg:x="104861" fg:w="259"/><text x="35.4572%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="35.2510%" y="229" width="1.6723%" height="15" fill="rgb(215,221,42)" fg:x="105120" fg:w="4987"/><text x="35.5440%" y="239.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="36.9234%" y="229" width="0.0469%" height="15" fill="rgb(244,79,23)" fg:x="110107" fg:w="140"/><text x="37.2164%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="36.9703%" y="229" width="0.1690%" height="15" fill="rgb(247,17,29)" fg:x="110247" fg:w="504"/><text x="37.2633%" y="239.50"></text></g><g><title>memset (194 instructions, 0.07%)</title><rect x="37.1393%" y="229" width="0.0651%" height="15" fill="rgb(251,221,21)" fg:x="110751" fg:w="194"/><text x="37.4323%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="37.2044%" y="229" width="1.6723%" height="15" fill="rgb(207,202,34)" fg:x="110945" fg:w="4987"/><text x="37.4974%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.22%)</title><rect x="34.8104%" y="245" width="4.2189%" height="15" fill="rgb(217,4,34)" fg:x="103806" fg:w="12581"/><text x="35.1034%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="39.0293%" y="245" width="0.0305%" height="15" fill="rgb(253,17,16)" fg:x="116387" fg:w="91"/><text x="39.3223%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.35%)</title><rect x="34.8104%" y="261" width="4.3460%" height="15" fill="rgb(223,91,48)" fg:x="103806" fg:w="12960"/><text x="35.1034%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (107,593 instructions, 36.08%)</title><rect x="3.1448%" y="277" width="36.0803%" height="15" fill="rgb(244,191,22)" fg:x="9378" fg:w="107593"/><text x="3.4378%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="39.2252%" y="245" width="0.0805%" height="15" fill="rgb(211,107,14)" fg:x="116971" fg:w="240"/><text x="39.5181%" y="255.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="39.3056%" y="245" width="0.0738%" height="15" fill="rgb(232,81,23)" fg:x="117211" fg:w="220"/><text x="39.5986%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="39.3794%" y="245" width="0.1690%" height="15" fill="rgb(237,126,14)" fg:x="117431" fg:w="504"/><text x="39.6724%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="39.2252%" y="261" width="0.3538%" height="15" fill="rgb(230,65,39)" fg:x="116971" fg:w="1055"/><text x="39.5181%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="39.5789%" y="261" width="0.0439%" height="15" fill="rgb(208,106,41)" fg:x="118026" fg:w="131"/><text x="39.8719%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="39.6229%" y="261" width="0.1690%" height="15" fill="rgb(206,125,25)" fg:x="118157" fg:w="504"/><text x="39.9158%" y="271.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="39.7919%" y="261" width="0.0614%" height="15" fill="rgb(250,24,29)" fg:x="118661" fg:w="183"/><text x="40.0849%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="39.8533%" y="261" width="1.6723%" height="15" fill="rgb(226,49,32)" fg:x="118844" fg:w="4987"/><text x="40.1462%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="39.2252%" y="277" width="2.4249%" height="15" fill="rgb(217,110,16)" fg:x="116971" fg:w="7231"/><text x="39.5181%" y="287.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="41.6500%" y="245" width="0.0805%" height="15" fill="rgb(252,16,53)" fg:x="124202" fg:w="240"/><text x="41.9430%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="41.7305%" y="245" width="0.0748%" height="15" fill="rgb(238,163,11)" fg:x="124442" fg:w="223"/><text x="42.0235%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="41.8053%" y="245" width="0.1690%" height="15" fill="rgb(206,210,1)" fg:x="124665" fg:w="504"/><text x="42.0982%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="41.6500%" y="261" width="0.3548%" height="15" fill="rgb(229,8,25)" fg:x="124202" fg:w="1058"/><text x="41.9430%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="42.0048%" y="261" width="0.0439%" height="15" fill="rgb(247,155,23)" fg:x="125260" fg:w="131"/><text x="42.2978%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="42.0487%" y="261" width="0.1690%" height="15" fill="rgb(207,26,7)" fg:x="125391" fg:w="504"/><text x="42.3417%" y="271.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="42.2177%" y="261" width="0.0215%" height="15" fill="rgb(215,179,12)" fg:x="125895" fg:w="64"/><text x="42.5107%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="42.2392%" y="261" width="1.6723%" height="15" fill="rgb(238,208,11)" fg:x="125959" fg:w="4987"/><text x="42.5322%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="43.9116%" y="261" width="1.6723%" height="15" fill="rgb(238,102,42)" fg:x="130946" fg:w="4987"/><text x="44.2045%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="41.6500%" y="277" width="4.0878%" height="15" fill="rgb(239,35,9)" fg:x="124202" fg:w="12190"/><text x="41.9430%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="45.7378%" y="261" width="0.0305%" height="15" fill="rgb(244,182,30)" fg:x="136392" fg:w="91"/><text x="46.0308%" y="271.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="45.7683%" y="261" width="0.1154%" height="15" fill="rgb(232,181,23)" fg:x="136483" fg:w="344"/><text x="46.0613%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="45.8837%" y="261" width="0.0305%" height="15" fill="rgb(242,154,29)" fg:x="136827" fg:w="91"/><text x="46.1767%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="45.7378%" y="277" width="0.2844%" height="15" fill="rgb(219,23,2)" fg:x="136392" fg:w="848"/><text x="46.0308%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (128,108 instructions, 42.96%)</title><rect x="3.1307%" y="293" width="42.9599%" height="15" fill="rgb(234,94,43)" fg:x="9336" fg:w="128108"/><text x="3.4237%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="46.0906%" y="261" width="0.0805%" height="15" fill="rgb(223,55,45)" fg:x="137444" fg:w="240"/><text x="46.3836%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="46.1711%" y="261" width="0.0738%" height="15" fill="rgb(241,215,54)" fg:x="137684" fg:w="220"/><text x="46.4640%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="46.2449%" y="261" width="0.1690%" height="15" fill="rgb(247,63,53)" fg:x="137904" fg:w="504"/><text x="46.5378%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="46.0906%" y="277" width="0.3538%" height="15" fill="rgb(220,166,7)" fg:x="137444" fg:w="1055"/><text x="46.3836%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="46.4444%" y="277" width="0.0439%" height="15" fill="rgb(248,53,45)" fg:x="138499" fg:w="131"/><text x="46.7373%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="46.4883%" y="277" width="0.1690%" height="15" fill="rgb(224,207,20)" fg:x="138630" fg:w="504"/><text x="46.7813%" y="287.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="46.6573%" y="277" width="0.0614%" height="15" fill="rgb(244,185,11)" fg:x="139134" fg:w="183"/><text x="46.9503%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="46.7187%" y="277" width="1.6723%" height="15" fill="rgb(230,13,42)" fg:x="139317" fg:w="4987"/><text x="47.0117%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="46.0906%" y="293" width="2.4249%" height="15" fill="rgb(243,191,18)" fg:x="137444" fg:w="7231"/><text x="46.3836%" y="303.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="48.5154%" y="261" width="0.0805%" height="15" fill="rgb(249,135,15)" fg:x="144675" fg:w="240"/><text x="48.8084%" y="271.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="48.5959%" y="261" width="0.0748%" height="15" fill="rgb(229,26,35)" fg:x="144915" fg:w="223"/><text x="48.8889%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="48.6707%" y="261" width="0.1690%" height="15" fill="rgb(216,191,16)" fg:x="145138" fg:w="504"/><text x="48.9637%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="48.5154%" y="277" width="0.3548%" height="15" fill="rgb(242,18,7)" fg:x="144675" fg:w="1058"/><text x="48.8084%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="48.8702%" y="277" width="0.0439%" height="15" fill="rgb(205,128,17)" fg:x="145733" fg:w="131"/><text x="49.1632%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="48.9142%" y="277" width="0.1690%" height="15" fill="rgb(229,199,44)" fg:x="145864" fg:w="504"/><text x="49.2071%" y="287.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="49.0832%" y="277" width="0.0215%" height="15" fill="rgb(234,222,3)" fg:x="146368" fg:w="64"/><text x="49.3761%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="49.1046%" y="277" width="1.6723%" height="15" fill="rgb(220,170,20)" fg:x="146432" fg:w="4987"/><text x="49.3976%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="50.7770%" y="277" width="1.6723%" height="15" fill="rgb(207,138,8)" fg:x="151419" fg:w="4987"/><text x="51.0700%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="48.5154%" y="293" width="4.0878%" height="15" fill="rgb(244,130,36)" fg:x="144675" fg:w="12190"/><text x="48.8084%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="52.6033%" y="277" width="0.0305%" height="15" fill="rgb(207,197,52)" fg:x="156865" fg:w="91"/><text x="52.8962%" y="287.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="52.6338%" y="277" width="0.1154%" height="15" fill="rgb(206,9,21)" fg:x="156956" fg:w="344"/><text x="52.9267%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="52.7491%" y="277" width="0.0305%" height="15" fill="rgb(250,15,47)" fg:x="157300" fg:w="91"/><text x="53.0421%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="52.6033%" y="293" width="0.2844%" height="15" fill="rgb(235,202,14)" fg:x="156865" fg:w="848"/><text x="52.8962%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (148,600 instructions, 49.83%)</title><rect x="3.1244%" y="309" width="49.8317%" height="15" fill="rgb(211,180,47)" fg:x="9317" fg:w="148600"/><text x="3.4173%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="52.9560%" y="277" width="0.0805%" height="15" fill="rgb(209,61,11)" fg:x="157917" fg:w="240"/><text x="53.2490%" y="287.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="53.0365%" y="277" width="0.0738%" height="15" fill="rgb(243,197,29)" fg:x="158157" fg:w="220"/><text x="53.3295%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="53.1103%" y="277" width="0.1690%" height="15" fill="rgb(216,185,16)" fg:x="158377" fg:w="504"/><text x="53.4033%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="52.9560%" y="293" width="0.3538%" height="15" fill="rgb(248,5,15)" fg:x="157917" fg:w="1055"/><text x="53.2490%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="53.3098%" y="293" width="0.0439%" height="15" fill="rgb(240,39,41)" fg:x="158972" fg:w="131"/><text x="53.6028%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="53.3537%" y="293" width="0.1690%" height="15" fill="rgb(224,220,43)" fg:x="159103" fg:w="504"/><text x="53.6467%" y="303.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="53.5228%" y="293" width="0.0614%" height="15" fill="rgb(215,21,24)" fg:x="159607" fg:w="183"/><text x="53.8157%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="53.5841%" y="293" width="1.6723%" height="15" fill="rgb(220,102,8)" fg:x="159790" fg:w="4987"/><text x="53.8771%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="52.9560%" y="309" width="2.4249%" height="15" fill="rgb(225,185,10)" fg:x="157917" fg:w="7231"/><text x="53.2490%" y="319.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="55.3809%" y="277" width="0.0805%" height="15" fill="rgb(212,108,24)" fg:x="165148" fg:w="240"/><text x="55.6738%" y="287.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="55.4614%" y="277" width="0.0748%" height="15" fill="rgb(237,27,0)" fg:x="165388" fg:w="223"/><text x="55.7543%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="55.5361%" y="277" width="0.1690%" height="15" fill="rgb(212,106,38)" fg:x="165611" fg:w="504"/><text x="55.8291%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="55.3809%" y="293" width="0.3548%" height="15" fill="rgb(210,125,30)" fg:x="165148" fg:w="1058"/><text x="55.6738%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="55.7357%" y="293" width="0.0439%" height="15" fill="rgb(215,219,1)" fg:x="166206" fg:w="131"/><text x="56.0286%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="55.7796%" y="293" width="0.1690%" height="15" fill="rgb(223,10,12)" fg:x="166337" fg:w="504"/><text x="56.0726%" y="303.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="55.9486%" y="293" width="0.0215%" height="15" fill="rgb(245,40,34)" fg:x="166841" fg:w="64"/><text x="56.2416%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="55.9701%" y="293" width="1.6723%" height="15" fill="rgb(211,185,19)" fg:x="166905" fg:w="4987"/><text x="56.2630%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="57.6424%" y="293" width="1.6723%" height="15" fill="rgb(243,190,43)" fg:x="171892" fg:w="4987"/><text x="57.9354%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="55.3809%" y="309" width="4.0878%" height="15" fill="rgb(232,208,29)" fg:x="165148" fg:w="12190"/><text x="55.6738%" y="319.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="59.4687%" y="261" width="0.0805%" height="15" fill="rgb(234,134,27)" fg:x="177338" fg:w="240"/><text x="59.7617%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="59.5492%" y="261" width="0.0738%" height="15" fill="rgb(225,41,29)" fg:x="177578" fg:w="220"/><text x="59.8421%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="59.6229%" y="261" width="0.1690%" height="15" fill="rgb(241,214,44)" fg:x="177798" fg:w="504"/><text x="59.9159%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="59.4687%" y="277" width="0.3538%" height="15" fill="rgb(205,219,41)" fg:x="177338" fg:w="1055"/><text x="59.7617%" y="287.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="59.8225%" y="277" width="0.0869%" height="15" fill="rgb(226,15,26)" fg:x="178393" fg:w="259"/><text x="60.1154%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="59.9093%" y="277" width="1.6723%" height="15" fill="rgb(210,83,41)" fg:x="178652" fg:w="4987"/><text x="60.2023%" y="287.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="61.5817%" y="277" width="0.0469%" height="15" fill="rgb(247,9,39)" fg:x="183639" fg:w="140"/><text x="61.8746%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="61.6286%" y="277" width="0.1690%" height="15" fill="rgb(209,37,30)" fg:x="183779" fg:w="504"/><text x="61.9216%" y="287.50"></text></g><g><title>memset (194 instructions, 0.07%)</title><rect x="61.7976%" y="277" width="0.0651%" height="15" fill="rgb(248,170,46)" fg:x="184283" fg:w="194"/><text x="62.0906%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="61.8627%" y="277" width="1.6723%" height="15" fill="rgb(237,129,44)" fg:x="184477" fg:w="4987"/><text x="62.1557%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.22%)</title><rect x="59.4687%" y="293" width="4.2189%" height="15" fill="rgb(225,117,51)" fg:x="177338" fg:w="12581"/><text x="59.7617%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="63.6876%" y="293" width="0.0305%" height="15" fill="rgb(212,165,2)" fg:x="189919" fg:w="91"/><text x="63.9806%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.35%)</title><rect x="59.4687%" y="309" width="4.3460%" height="15" fill="rgb(213,53,45)" fg:x="177338" fg:w="12960"/><text x="59.7617%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (181,205 instructions, 60.77%)</title><rect x="3.1180%" y="325" width="60.7654%" height="15" fill="rgb(220,148,3)" fg:x="9298" fg:w="181205"/><text x="3.4110%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="63.8834%" y="293" width="0.0805%" height="15" fill="rgb(228,37,29)" fg:x="190503" fg:w="240"/><text x="64.1764%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="63.9639%" y="293" width="0.0738%" height="15" fill="rgb(209,76,29)" fg:x="190743" fg:w="220"/><text x="64.2569%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="64.0377%" y="293" width="0.1690%" height="15" fill="rgb(215,90,5)" fg:x="190963" fg:w="504"/><text x="64.3307%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="63.8834%" y="309" width="0.3538%" height="15" fill="rgb(227,207,32)" fg:x="190503" fg:w="1055"/><text x="64.1764%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="64.2372%" y="309" width="0.0439%" height="15" fill="rgb(251,218,44)" fg:x="191558" fg:w="131"/><text x="64.5302%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="64.2812%" y="309" width="0.1690%" height="15" fill="rgb(211,44,16)" fg:x="191689" fg:w="504"/><text x="64.5741%" y="319.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="64.4502%" y="309" width="0.0614%" height="15" fill="rgb(242,170,37)" fg:x="192193" fg:w="183"/><text x="64.7431%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="64.5115%" y="309" width="1.6723%" height="15" fill="rgb(205,181,22)" fg:x="192376" fg:w="4987"/><text x="64.8045%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="63.8834%" y="325" width="2.4249%" height="15" fill="rgb(228,130,19)" fg:x="190503" fg:w="7231"/><text x="64.1764%" y="335.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="66.3083%" y="293" width="0.0805%" height="15" fill="rgb(228,9,15)" fg:x="197734" fg:w="240"/><text x="66.6013%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="66.3888%" y="293" width="0.0748%" height="15" fill="rgb(219,66,48)" fg:x="197974" fg:w="223"/><text x="66.6817%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="66.4636%" y="293" width="0.1690%" height="15" fill="rgb(234,203,10)" fg:x="198197" fg:w="504"/><text x="66.7565%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="66.3083%" y="309" width="0.3548%" height="15" fill="rgb(219,209,1)" fg:x="197734" fg:w="1058"/><text x="66.6013%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="66.6631%" y="309" width="0.0439%" height="15" fill="rgb(206,167,9)" fg:x="198792" fg:w="131"/><text x="66.9561%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="66.7070%" y="309" width="0.1690%" height="15" fill="rgb(210,11,39)" fg:x="198923" fg:w="504"/><text x="67.0000%" y="319.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="66.8760%" y="309" width="0.0215%" height="15" fill="rgb(251,90,47)" fg:x="199427" fg:w="64"/><text x="67.1690%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="66.8975%" y="309" width="1.6723%" height="15" fill="rgb(237,7,4)" fg:x="199491" fg:w="4987"/><text x="67.1905%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="68.5698%" y="309" width="1.6723%" height="15" fill="rgb(232,205,47)" fg:x="204478" fg:w="4987"/><text x="68.8628%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="66.3083%" y="325" width="4.0878%" height="15" fill="rgb(215,86,48)" fg:x="197734" fg:w="12190"/><text x="66.6013%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="70.3961%" y="309" width="0.0305%" height="15" fill="rgb(232,14,47)" fg:x="209924" fg:w="91"/><text x="70.6891%" y="319.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="70.4266%" y="309" width="0.1154%" height="15" fill="rgb(240,28,46)" fg:x="210015" fg:w="344"/><text x="70.7196%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="70.5420%" y="309" width="0.0305%" height="15" fill="rgb(224,85,5)" fg:x="210359" fg:w="91"/><text x="70.8349%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="70.3961%" y="325" width="0.2844%" height="15" fill="rgb(219,34,25)" fg:x="209924" fg:w="848"/><text x="70.6891%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (201,697 instructions, 67.64%)</title><rect x="3.1116%" y="341" width="67.6373%" height="15" fill="rgb(247,137,45)" fg:x="9279" fg:w="201697"/><text x="3.4046%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="70.7489%" y="309" width="0.0805%" height="15" fill="rgb(237,121,47)" fg:x="210976" fg:w="240"/><text x="71.0419%" y="319.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="70.8294%" y="309" width="0.0738%" height="15" fill="rgb(247,148,27)" fg:x="211216" fg:w="220"/><text x="71.1223%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="70.9031%" y="309" width="0.1690%" height="15" fill="rgb(220,44,0)" fg:x="211436" fg:w="504"/><text x="71.1961%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="70.7489%" y="325" width="0.3538%" height="15" fill="rgb(236,61,29)" fg:x="210976" fg:w="1055"/><text x="71.0419%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="71.1027%" y="325" width="0.0439%" height="15" fill="rgb(244,180,35)" fg:x="212031" fg:w="131"/><text x="71.3956%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.1466%" y="325" width="0.1690%" height="15" fill="rgb(242,14,54)" fg:x="212162" fg:w="504"/><text x="71.4396%" y="335.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="71.3156%" y="325" width="0.0614%" height="15" fill="rgb(206,24,45)" fg:x="212666" fg:w="183"/><text x="71.6086%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="71.3770%" y="325" width="1.6723%" height="15" fill="rgb(215,211,6)" fg:x="212849" fg:w="4987"/><text x="71.6699%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="70.7489%" y="341" width="2.4249%" height="15" fill="rgb(207,56,2)" fg:x="210976" fg:w="7231"/><text x="71.0419%" y="351.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="73.1737%" y="309" width="0.0805%" height="15" fill="rgb(220,135,9)" fg:x="218207" fg:w="240"/><text x="73.4667%" y="319.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="73.2542%" y="309" width="0.0748%" height="15" fill="rgb(214,145,52)" fg:x="218447" fg:w="223"/><text x="73.5472%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="73.3290%" y="309" width="0.1690%" height="15" fill="rgb(241,83,53)" fg:x="218670" fg:w="504"/><text x="73.6220%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="73.1737%" y="325" width="0.3548%" height="15" fill="rgb(222,66,13)" fg:x="218207" fg:w="1058"/><text x="73.4667%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="73.5285%" y="325" width="0.0439%" height="15" fill="rgb(239,164,54)" fg:x="219265" fg:w="131"/><text x="73.8215%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="73.5725%" y="325" width="0.1690%" height="15" fill="rgb(216,189,13)" fg:x="219396" fg:w="504"/><text x="73.8654%" y="335.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="73.7415%" y="325" width="0.0215%" height="15" fill="rgb(228,212,51)" fg:x="219900" fg:w="64"/><text x="74.0344%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="73.7629%" y="325" width="1.6723%" height="15" fill="rgb(207,190,21)" fg:x="219964" fg:w="4987"/><text x="74.0559%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="75.4353%" y="325" width="1.6723%" height="15" fill="rgb(245,28,35)" fg:x="224951" fg:w="4987"/><text x="75.7282%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="73.1737%" y="341" width="4.0878%" height="15" fill="rgb(239,23,40)" fg:x="218207" fg:w="12190"/><text x="73.4667%" y="351.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="77.2615%" y="293" width="0.0805%" height="15" fill="rgb(242,10,51)" fg:x="230397" fg:w="240"/><text x="77.5545%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="77.3420%" y="293" width="0.0738%" height="15" fill="rgb(207,186,5)" fg:x="230637" fg:w="220"/><text x="77.6350%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="77.4158%" y="293" width="0.1690%" height="15" fill="rgb(242,21,16)" fg:x="230857" fg:w="504"/><text x="77.7088%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="77.2615%" y="309" width="0.3538%" height="15" fill="rgb(237,0,53)" fg:x="230397" fg:w="1055"/><text x="77.5545%" y="319.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="77.6153%" y="309" width="0.0869%" height="15" fill="rgb(215,8,52)" fg:x="231452" fg:w="259"/><text x="77.9083%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="77.7022%" y="309" width="1.6723%" height="15" fill="rgb(248,62,44)" fg:x="231711" fg:w="4987"/><text x="77.9951%" y="319.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="79.3745%" y="309" width="0.0469%" height="15" fill="rgb(224,83,15)" fg:x="236698" fg:w="140"/><text x="79.6675%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="79.4215%" y="309" width="0.1690%" height="15" fill="rgb(249,100,46)" fg:x="236838" fg:w="504"/><text x="79.7144%" y="319.50"></text></g><g><title>memset (194 instructions, 0.07%)</title><rect x="79.5905%" y="309" width="0.0651%" height="15" fill="rgb(213,35,48)" fg:x="237342" fg:w="194"/><text x="79.8835%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="79.6555%" y="309" width="1.6723%" height="15" fill="rgb(251,2,13)" fg:x="237536" fg:w="4987"/><text x="79.9485%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.22%)</title><rect x="77.2615%" y="325" width="4.2189%" height="15" fill="rgb(212,132,21)" fg:x="230397" fg:w="12581"/><text x="77.5545%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="81.4805%" y="325" width="0.0305%" height="15" fill="rgb(247,17,21)" fg:x="242978" fg:w="91"/><text x="81.7734%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.35%)</title><rect x="77.2615%" y="341" width="4.3460%" height="15" fill="rgb(220,177,38)" fg:x="230397" fg:w="12960"/><text x="77.5545%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (234,302 instructions, 78.57%)</title><rect x="3.1053%" y="357" width="78.5710%" height="15" fill="rgb(233,219,21)" fg:x="9260" fg:w="234302"/><text x="3.3982%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="81.6763%" y="325" width="0.0805%" height="15" fill="rgb(246,17,7)" fg:x="243562" fg:w="240"/><text x="81.9693%" y="335.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="81.7568%" y="325" width="0.0738%" height="15" fill="rgb(212,4,22)" fg:x="243802" fg:w="220"/><text x="82.0498%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="81.8306%" y="325" width="0.1690%" height="15" fill="rgb(243,85,21)" fg:x="244022" fg:w="504"/><text x="82.1235%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="81.6763%" y="341" width="0.3538%" height="15" fill="rgb(232,218,2)" fg:x="243562" fg:w="1055"/><text x="81.9693%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="82.0301%" y="341" width="0.0439%" height="15" fill="rgb(253,168,47)" fg:x="244617" fg:w="131"/><text x="82.3231%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.0740%" y="341" width="0.1690%" height="15" fill="rgb(238,101,25)" fg:x="244748" fg:w="504"/><text x="82.3670%" y="351.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="82.2430%" y="341" width="0.0614%" height="15" fill="rgb(251,86,12)" fg:x="245252" fg:w="183"/><text x="82.5360%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="82.3044%" y="341" width="1.6723%" height="15" fill="rgb(241,112,44)" fg:x="245435" fg:w="4987"/><text x="82.5974%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.42%)</title><rect x="81.6763%" y="357" width="2.4249%" height="15" fill="rgb(224,28,25)" fg:x="243562" fg:w="7231"/><text x="81.9693%" y="367.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="84.1012%" y="325" width="0.0805%" height="15" fill="rgb(209,201,1)" fg:x="250793" fg:w="240"/><text x="84.3941%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="84.1816%" y="325" width="0.0748%" height="15" fill="rgb(231,30,22)" fg:x="251033" fg:w="223"/><text x="84.4746%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="84.2564%" y="325" width="0.1690%" height="15" fill="rgb(247,96,31)" fg:x="251256" fg:w="504"/><text x="84.5494%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="84.1012%" y="341" width="0.3548%" height="15" fill="rgb(251,100,12)" fg:x="250793" fg:w="1058"/><text x="84.3941%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="84.4559%" y="341" width="0.0439%" height="15" fill="rgb(224,174,7)" fg:x="251851" fg:w="131"/><text x="84.7489%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="84.4999%" y="341" width="0.1690%" height="15" fill="rgb(231,168,19)" fg:x="251982" fg:w="504"/><text x="84.7928%" y="351.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="84.6689%" y="341" width="0.0215%" height="15" fill="rgb(226,85,5)" fg:x="252486" fg:w="64"/><text x="84.9619%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="84.6903%" y="341" width="1.6723%" height="15" fill="rgb(210,215,5)" fg:x="252550" fg:w="4987"/><text x="84.9833%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.67%)</title><rect x="86.3627%" y="341" width="1.6723%" height="15" fill="rgb(233,70,8)" fg:x="257537" fg:w="4987"/><text x="86.6557%" y="351.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.09%)</title><rect x="84.1012%" y="357" width="4.0878%" height="15" fill="rgb(229,109,53)" fg:x="250793" fg:w="12190"/><text x="84.3941%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="88.1890%" y="341" width="0.0305%" height="15" fill="rgb(213,125,35)" fg:x="262983" fg:w="91"/><text x="88.4819%" y="351.50"></text></g><g><title>memcpy (344 instructions, 0.12%)</title><rect x="88.2195%" y="341" width="0.1154%" height="15" fill="rgb(215,12,48)" fg:x="263074" fg:w="344"/><text x="88.5124%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="88.3348%" y="341" width="0.0305%" height="15" fill="rgb(207,12,38)" fg:x="263418" fg:w="91"/><text x="88.6278%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="88.1890%" y="357" width="0.2844%" height="15" fill="rgb(216,229,2)" fg:x="262983" fg:w="848"/><text x="88.4819%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (254,794 instructions, 85.44%)</title><rect x="3.0989%" y="373" width="85.4429%" height="15" fill="rgb(229,209,31)" fg:x="9241" fg:w="254794"/><text x="3.3919%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.5417%" y="277" width="0.0275%" height="15" fill="rgb(239,57,22)" fg:x="264035" fg:w="82"/><text x="88.8347%" y="287.50"></text></g><g><title>memcpy (211 instructions, 0.07%)</title><rect x="88.5692%" y="277" width="0.0708%" height="15" fill="rgb(239,119,54)" fg:x="264117" fg:w="211"/><text x="88.8622%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="88.6400%" y="277" width="0.0298%" height="15" fill="rgb(231,80,45)" fg:x="264328" fg:w="89"/><text x="88.9330%" y="287.50"></text></g><g><title>__rust_realloc (494 instructions, 0.17%)</title><rect x="88.5417%" y="293" width="0.1657%" height="15" fill="rgb(219,138,19)" fg:x="264035" fg:w="494"/><text x="88.8347%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (542 instructions, 0.18%)</title><rect x="88.5417%" y="309" width="0.1818%" height="15" fill="rgb(216,53,26)" fg:x="264035" fg:w="542"/><text x="88.8347%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="88.7527%" y="277" width="0.0305%" height="15" fill="rgb(224,30,16)" fg:x="264664" fg:w="91"/><text x="89.0456%" y="287.50"></text></g><g><title>memcpy (136 instructions, 0.05%)</title><rect x="88.7832%" y="277" width="0.0456%" height="15" fill="rgb(224,151,24)" fg:x="264755" fg:w="136"/><text x="89.0762%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="88.8288%" y="277" width="0.0298%" height="15" fill="rgb(236,75,7)" fg:x="264891" fg:w="89"/><text x="89.1218%" y="287.50"></text></g><g><title>__rust_realloc (428 instructions, 0.14%)</title><rect x="88.7527%" y="293" width="0.1435%" height="15" fill="rgb(248,106,42)" fg:x="264664" fg:w="428"/><text x="89.0456%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (476 instructions, 0.16%)</title><rect x="88.7527%" y="309" width="0.1596%" height="15" fill="rgb(222,217,11)" fg:x="264664" fg:w="476"/><text x="89.0456%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,192 instructions, 0.40%)</title><rect x="88.5417%" y="325" width="0.3997%" height="15" fill="rgb(234,143,31)" fg:x="264035" fg:w="1192"/><text x="88.8347%" y="335.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.9415%" y="325" width="0.0805%" height="15" fill="rgb(237,148,28)" fg:x="265227" fg:w="240"/><text x="89.2344%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,529 instructions, 0.51%)</title><rect x="88.5417%" y="341" width="0.5127%" height="15" fill="rgb(241,151,6)" fg:x="264035" fg:w="1529"/><text x="88.8347%" y="351.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="89.0843%" y="309" width="0.0315%" height="15" fill="rgb(226,55,18)" fg:x="265653" fg:w="94"/><text x="89.3773%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="89.0843%" y="325" width="0.0476%" height="15" fill="rgb(226,196,6)" fg:x="265653" fg:w="142"/><text x="89.3773%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="89.0843%" y="341" width="0.0768%" height="15" fill="rgb(251,228,11)" fg:x="265653" fg:w="229"/><text x="89.3773%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="89.1611%" y="309" width="0.1046%" height="15" fill="rgb(219,197,15)" fg:x="265882" fg:w="312"/><text x="89.4541%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="89.1611%" y="325" width="0.1304%" height="15" fill="rgb(243,105,44)" fg:x="265882" fg:w="389"/><text x="89.4541%" y="335.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="89.3214%" y="277" width="0.0315%" height="15" fill="rgb(205,183,40)" fg:x="266360" fg:w="94"/><text x="89.6144%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="89.3214%" y="293" width="0.0476%" height="15" fill="rgb(232,138,46)" fg:x="266360" fg:w="142"/><text x="89.6144%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="89.3214%" y="309" width="0.0768%" height="15" fill="rgb(234,161,14)" fg:x="266360" fg:w="229"/><text x="89.6144%" y="319.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="89.3982%" y="277" width="0.1046%" height="15" fill="rgb(238,211,18)" fg:x="266589" fg:w="312"/><text x="89.6912%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="89.3982%" y="293" width="0.1304%" height="15" fill="rgb(217,130,2)" fg:x="266589" fg:w="389"/><text x="89.6912%" y="303.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.5585%" y="261" width="0.0805%" height="15" fill="rgb(251,17,29)" fg:x="267067" fg:w="240"/><text x="89.8515%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="89.5585%" y="277" width="0.1063%" height="15" fill="rgb(243,18,0)" fg:x="267067" fg:w="317"/><text x="89.8515%" y="287.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="89.6946%" y="197" width="0.0315%" height="15" fill="rgb(227,220,45)" fg:x="267473" fg:w="94"/><text x="89.9876%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="89.6946%" y="213" width="0.0476%" height="15" fill="rgb(212,34,2)" fg:x="267473" fg:w="142"/><text x="89.9876%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="89.6946%" y="229" width="0.0768%" height="15" fill="rgb(236,23,8)" fg:x="267473" fg:w="229"/><text x="89.9876%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.7714%" y="229" width="0.0805%" height="15" fill="rgb(210,113,39)" fg:x="267702" fg:w="240"/><text x="90.0644%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (555 instructions, 0.19%)</title><rect x="89.6946%" y="245" width="0.1861%" height="15" fill="rgb(243,123,48)" fg:x="267473" fg:w="555"/><text x="89.9876%" y="255.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="89.9106%" y="213" width="0.1046%" height="15" fill="rgb(223,175,36)" fg:x="268117" fg:w="312"/><text x="90.2036%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="89.9106%" y="229" width="0.1304%" height="15" fill="rgb(226,100,30)" fg:x="268117" fg:w="389"/><text x="90.2036%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.0709%" y="197" width="0.0805%" height="15" fill="rgb(221,225,39)" fg:x="268595" fg:w="240"/><text x="90.3639%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="90.0709%" y="213" width="0.1063%" height="15" fill="rgb(224,222,42)" fg:x="268595" fg:w="317"/><text x="90.3639%" y="223.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="90.2070%" y="181" width="0.1046%" height="15" fill="rgb(221,53,1)" fg:x="269001" fg:w="312"/><text x="90.5000%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="90.2070%" y="197" width="0.1304%" height="15" fill="rgb(216,187,48)" fg:x="269001" fg:w="389"/><text x="90.5000%" y="207.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="90.3673%" y="117" width="0.0315%" height="15" fill="rgb(220,108,2)" fg:x="269479" fg:w="94"/><text x="90.6603%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="90.3673%" y="133" width="0.0476%" height="15" fill="rgb(216,13,42)" fg:x="269479" fg:w="142"/><text x="90.6603%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="90.3673%" y="149" width="0.0768%" height="15" fill="rgb(205,14,29)" fg:x="269479" fg:w="229"/><text x="90.6603%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="90.4441%" y="149" width="0.1046%" height="15" fill="rgb(217,168,30)" fg:x="269708" fg:w="312"/><text x="90.7371%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (629 instructions, 0.21%)</title><rect x="90.3673%" y="165" width="0.2109%" height="15" fill="rgb(246,173,54)" fg:x="269479" fg:w="629"/><text x="90.6603%" y="175.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.6081%" y="133" width="0.0805%" height="15" fill="rgb(227,177,11)" fg:x="270197" fg:w="240"/><text x="90.9011%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="90.6081%" y="149" width="0.1063%" height="15" fill="rgb(223,215,51)" fg:x="270197" fg:w="317"/><text x="90.9011%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="90.7443%" y="117" width="0.1046%" height="15" fill="rgb(253,4,17)" fg:x="270603" fg:w="312"/><text x="91.0372%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="90.7443%" y="133" width="0.1304%" height="15" fill="rgb(206,150,43)" fg:x="270603" fg:w="389"/><text x="91.0372%" y="143.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.9045%" y="101" width="0.0805%" height="15" fill="rgb(241,100,52)" fg:x="271081" fg:w="240"/><text x="91.1975%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="90.9045%" y="117" width="0.1063%" height="15" fill="rgb(234,120,21)" fg:x="271081" fg:w="317"/><text x="91.1975%" y="127.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="91.0407%" y="69" width="0.0805%" height="15" fill="rgb(231,60,11)" fg:x="271487" fg:w="240"/><text x="91.3337%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="91.0407%" y="85" width="0.1063%" height="15" fill="rgb(247,77,50)" fg:x="271487" fg:w="317"/><text x="91.3337%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="91.1768%" y="53" width="0.0439%" height="15" fill="rgb(251,199,54)" fg:x="271893" fg:w="131"/><text x="91.4698%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (202 instructions, 0.07%)</title><rect x="91.1768%" y="69" width="0.0677%" height="15" fill="rgb(212,120,38)" fg:x="271893" fg:w="202"/><text x="91.4698%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="91.2446%" y="37" width="0.0117%" height="15" fill="rgb(250,161,37)" fg:x="272095" fg:w="35"/><text x="91.5376%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (106 instructions, 0.04%)</title><rect x="91.2446%" y="53" width="0.0355%" height="15" fill="rgb(232,158,45)" fg:x="272095" fg:w="106"/><text x="91.5376%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (199 instructions, 0.07%)</title><rect x="91.2446%" y="69" width="0.0667%" height="15" fill="rgb(233,114,2)" fg:x="272095" fg:w="199"/><text x="91.5376%" y="79.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="91.3479%" y="53" width="0.0805%" height="15" fill="rgb(248,139,0)" fg:x="272403" fg:w="240"/><text x="91.6408%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="91.3479%" y="69" width="0.1063%" height="15" fill="rgb(222,164,18)" fg:x="272403" fg:w="317"/><text x="91.6408%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (916 instructions, 0.31%)</title><rect x="91.1768%" y="85" width="0.3072%" height="15" fill="rgb(221,140,42)" fg:x="271893" fg:w="916"/><text x="91.4698%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,428 instructions, 0.48%)</title><rect x="91.0407%" y="101" width="0.4789%" height="15" fill="rgb(209,186,11)" fg:x="271487" fg:w="1428"/><text x="91.3337%" y="111.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="91.5551%" y="85" width="0.0805%" height="15" fill="rgb(254,212,38)" fg:x="273021" fg:w="240"/><text x="91.8481%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="91.5551%" y="101" width="0.1063%" height="15" fill="rgb(219,156,31)" fg:x="273021" fg:w="317"/><text x="91.8481%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,940 instructions, 0.65%)</title><rect x="91.0407%" y="117" width="0.6506%" height="15" fill="rgb(222,148,42)" fg:x="271487" fg:w="1940"/><text x="91.3337%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,452 instructions, 0.82%)</title><rect x="90.9045%" y="133" width="0.8223%" height="15" fill="rgb(225,65,5)" fg:x="271081" fg:w="2452"/><text x="91.1975%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,036 instructions, 1.02%)</title><rect x="90.7443%" y="149" width="1.0181%" height="15" fill="rgb(235,28,12)" fg:x="270603" fg:w="3036"/><text x="91.0372%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,548 instructions, 1.19%)</title><rect x="90.6081%" y="165" width="1.1898%" height="15" fill="rgb(245,58,4)" fg:x="270197" fg:w="3548"/><text x="90.9011%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,372 instructions, 1.47%)</title><rect x="90.3673%" y="181" width="1.4661%" height="15" fill="rgb(235,118,5)" fg:x="269479" fg:w="4372"/><text x="90.6603%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="91.8690%" y="165" width="0.0805%" height="15" fill="rgb(253,196,3)" fg:x="273957" fg:w="240"/><text x="92.1620%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="91.8690%" y="181" width="0.1063%" height="15" fill="rgb(238,90,28)" fg:x="273957" fg:w="317"/><text x="92.1620%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,884 instructions, 1.64%)</title><rect x="90.3673%" y="197" width="1.6378%" height="15" fill="rgb(254,227,4)" fg:x="269479" fg:w="4884"/><text x="90.6603%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,468 instructions, 1.83%)</title><rect x="90.2070%" y="213" width="1.8336%" height="15" fill="rgb(237,114,35)" fg:x="269001" fg:w="5468"/><text x="90.5000%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,980 instructions, 2.01%)</title><rect x="90.0709%" y="229" width="2.0053%" height="15" fill="rgb(221,147,29)" fg:x="268595" fg:w="5980"/><text x="90.3639%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,564 instructions, 2.20%)</title><rect x="89.9106%" y="245" width="2.2012%" height="15" fill="rgb(216,201,17)" fg:x="268117" fg:w="6564"/><text x="90.2036%" y="255.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,314 instructions, 2.45%)</title><rect x="89.6946%" y="261" width="2.4527%" height="15" fill="rgb(251,46,50)" fg:x="267473" fg:w="7314"/><text x="89.9876%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="92.1829%" y="213" width="0.0315%" height="15" fill="rgb(216,143,48)" fg:x="274893" fg:w="94"/><text x="92.4758%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="92.1829%" y="229" width="0.0476%" height="15" fill="rgb(224,62,51)" fg:x="274893" fg:w="142"/><text x="92.4758%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="92.1829%" y="245" width="0.0768%" height="15" fill="rgb(232,152,20)" fg:x="274893" fg:w="229"/><text x="92.4758%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="92.2597%" y="245" width="0.0805%" height="15" fill="rgb(233,194,7)" fg:x="275122" fg:w="240"/><text x="92.5526%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (557 instructions, 0.19%)</title><rect x="92.1829%" y="261" width="0.1868%" height="15" fill="rgb(207,33,22)" fg:x="274893" fg:w="557"/><text x="92.4758%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,066 instructions, 2.70%)</title><rect x="89.6946%" y="277" width="2.7049%" height="15" fill="rgb(226,54,34)" fg:x="267473" fg:w="8066"/><text x="89.9876%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,578 instructions, 2.88%)</title><rect x="89.5585%" y="293" width="2.8766%" height="15" fill="rgb(227,161,47)" fg:x="267067" fg:w="8578"/><text x="89.8515%" y="303.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,162 instructions, 3.07%)</title><rect x="89.3982%" y="309" width="3.0724%" height="15" fill="rgb(218,58,37)" fg:x="266589" fg:w="9162"/><text x="89.6912%" y="319.50">&lt;i..</text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="92.5092%" y="293" width="0.0805%" height="15" fill="rgb(208,173,18)" fg:x="275866" fg:w="240"/><text x="92.8021%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.11%)</title><rect x="92.5092%" y="309" width="0.1063%" height="15" fill="rgb(230,159,11)" fg:x="275866" fg:w="317"/><text x="92.8021%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,912 instructions, 3.32%)</title><rect x="89.3214%" y="325" width="3.3239%" height="15" fill="rgb(238,90,51)" fg:x="266360" fg:w="9912"/><text x="89.6144%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,496 instructions, 3.52%)</title><rect x="89.1611%" y="341" width="3.5197%" height="15" fill="rgb(225,97,36)" fg:x="265882" fg:w="10496"/><text x="89.4541%" y="351.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,458 instructions, 4.18%)</title><rect x="88.5417%" y="357" width="4.1777%" height="15" fill="rgb(211,205,42)" fg:x="264035" fg:w="12458"/><text x="88.8347%" y="367.50">&lt;ic_..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,564 instructions, 4.21%)</title><rect x="88.5417%" y="373" width="4.2132%" height="15" fill="rgb(219,152,7)" fg:x="264035" fg:w="12564"/><text x="88.8347%" y="383.50">&lt;ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="92.7905%" y="69" width="0.0298%" height="15" fill="rgb(222,79,10)" fg:x="276705" fg:w="89"/><text x="93.0835%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (127 instructions, 0.04%)</title><rect x="92.7855%" y="85" width="0.0426%" height="15" fill="rgb(242,13,11)" fg:x="276690" fg:w="127"/><text x="93.0784%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="92.8304%" y="85" width="0.0298%" height="15" fill="rgb(231,143,41)" fg:x="276824" fg:w="89"/><text x="93.1234%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (261 instructions, 0.09%)</title><rect x="92.7831%" y="101" width="0.0875%" height="15" fill="rgb(222,147,19)" fg:x="276683" fg:w="261"/><text x="93.0761%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="92.8707%" y="101" width="0.0483%" height="15" fill="rgb(235,5,39)" fg:x="276944" fg:w="144"/><text x="93.1636%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (436 instructions, 0.15%)</title><rect x="92.7831%" y="117" width="0.1462%" height="15" fill="rgb(246,155,51)" fg:x="276683" fg:w="436"/><text x="93.0761%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="92.9317%" y="117" width="0.0483%" height="15" fill="rgb(218,157,4)" fg:x="277126" fg:w="144"/><text x="93.2247%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (625 instructions, 0.21%)</title><rect x="92.7808%" y="133" width="0.2096%" height="15" fill="rgb(226,184,4)" fg:x="276676" fg:w="625"/><text x="93.0737%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.9994%" y="117" width="0.0228%" height="15" fill="rgb(210,103,26)" fg:x="277328" fg:w="68"/><text x="93.2924%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.06%)</title><rect x="92.9904%" y="133" width="0.0641%" height="15" fill="rgb(228,23,31)" fg:x="277301" fg:w="191"/><text x="93.2833%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (854 instructions, 0.29%)</title><rect x="92.7784%" y="149" width="0.2864%" height="15" fill="rgb(205,176,34)" fg:x="276669" fg:w="854"/><text x="93.0714%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.0648%" y="133" width="0.0231%" height="15" fill="rgb(246,213,37)" fg:x="277523" fg:w="69"/><text x="93.3578%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.0880%" y="133" width="0.0228%" height="15" fill="rgb(213,52,45)" fg:x="277592" fg:w="68"/><text x="93.3809%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.0648%" y="149" width="0.0781%" height="15" fill="rgb(249,9,52)" fg:x="277523" fg:w="233"/><text x="93.3578%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,125 instructions, 0.38%)</title><rect x="92.7761%" y="165" width="0.3773%" height="15" fill="rgb(205,97,16)" fg:x="276662" fg:w="1125"/><text x="93.0691%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.1533%" y="149" width="0.0231%" height="15" fill="rgb(214,11,46)" fg:x="277787" fg:w="69"/><text x="93.4463%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.1765%" y="149" width="0.0228%" height="15" fill="rgb(221,66,18)" fg:x="277856" fg:w="68"/><text x="93.4695%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.1533%" y="165" width="0.0781%" height="15" fill="rgb(213,49,1)" fg:x="277787" fg:w="233"/><text x="93.4463%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,396 instructions, 0.47%)</title><rect x="92.7737%" y="181" width="0.4681%" height="15" fill="rgb(232,75,51)" fg:x="276655" fg:w="1396"/><text x="93.0667%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.2419%" y="165" width="0.0231%" height="15" fill="rgb(208,218,40)" fg:x="278051" fg:w="69"/><text x="93.5348%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.2650%" y="165" width="0.0228%" height="15" fill="rgb(206,144,50)" fg:x="278120" fg:w="68"/><text x="93.5580%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.2419%" y="181" width="0.0781%" height="15" fill="rgb(216,9,51)" fg:x="278051" fg:w="233"/><text x="93.5348%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,660 instructions, 0.56%)</title><rect x="92.7737%" y="197" width="0.5567%" height="15" fill="rgb(226,6,53)" fg:x="276655" fg:w="1660"/><text x="93.0667%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.3328%" y="181" width="0.0231%" height="15" fill="rgb(216,9,50)" fg:x="278322" fg:w="69"/><text x="93.6257%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.3559%" y="181" width="0.0228%" height="15" fill="rgb(214,101,31)" fg:x="278391" fg:w="68"/><text x="93.6489%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.3328%" y="197" width="0.0781%" height="15" fill="rgb(247,85,17)" fg:x="278322" fg:w="233"/><text x="93.6257%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,938 instructions, 0.65%)</title><rect x="92.7714%" y="213" width="0.6499%" height="15" fill="rgb(248,138,25)" fg:x="276648" fg:w="1938"/><text x="93.0644%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.4213%" y="197" width="0.0231%" height="15" fill="rgb(225,146,20)" fg:x="278586" fg:w="69"/><text x="93.7143%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.4444%" y="197" width="0.0228%" height="15" fill="rgb(224,184,17)" fg:x="278655" fg:w="68"/><text x="93.7374%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.4213%" y="213" width="0.0781%" height="15" fill="rgb(231,10,20)" fg:x="278586" fg:w="233"/><text x="93.7143%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,209 instructions, 0.74%)</title><rect x="92.7690%" y="229" width="0.7408%" height="15" fill="rgb(210,93,37)" fg:x="276641" fg:w="2209"/><text x="93.0620%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.5098%" y="213" width="0.0231%" height="15" fill="rgb(226,84,42)" fg:x="278850" fg:w="69"/><text x="93.8028%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.5330%" y="213" width="0.0228%" height="15" fill="rgb(253,192,7)" fg:x="278919" fg:w="68"/><text x="93.8259%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.5098%" y="229" width="0.0781%" height="15" fill="rgb(214,107,27)" fg:x="278850" fg:w="233"/><text x="93.8028%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,480 instructions, 0.83%)</title><rect x="92.7667%" y="245" width="0.8316%" height="15" fill="rgb(238,146,21)" fg:x="276634" fg:w="2480"/><text x="93.0597%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.5983%" y="229" width="0.0231%" height="15" fill="rgb(209,136,30)" fg:x="279114" fg:w="69"/><text x="93.8913%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.6215%" y="229" width="0.0228%" height="15" fill="rgb(226,60,22)" fg:x="279183" fg:w="68"/><text x="93.9144%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.5983%" y="245" width="0.0781%" height="15" fill="rgb(243,92,26)" fg:x="279114" fg:w="233"/><text x="93.8913%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,751 instructions, 0.92%)</title><rect x="92.7643%" y="261" width="0.9225%" height="15" fill="rgb(211,85,33)" fg:x="276627" fg:w="2751"/><text x="93.0573%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.6869%" y="245" width="0.0231%" height="15" fill="rgb(243,187,44)" fg:x="279378" fg:w="69"/><text x="93.9798%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.7100%" y="245" width="0.0228%" height="15" fill="rgb(251,172,23)" fg:x="279447" fg:w="68"/><text x="94.0030%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.6869%" y="261" width="0.0781%" height="15" fill="rgb(254,162,50)" fg:x="279378" fg:w="233"/><text x="93.9798%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,015 instructions, 1.01%)</title><rect x="92.7643%" y="277" width="1.0111%" height="15" fill="rgb(239,14,53)" fg:x="276627" fg:w="3015"/><text x="93.0573%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.7777%" y="261" width="0.0231%" height="15" fill="rgb(242,208,8)" fg:x="279649" fg:w="69"/><text x="94.0707%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.8009%" y="261" width="0.0228%" height="15" fill="rgb(225,61,41)" fg:x="279718" fg:w="68"/><text x="94.0939%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.7777%" y="277" width="0.0781%" height="15" fill="rgb(219,154,6)" fg:x="279649" fg:w="233"/><text x="94.0707%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,293 instructions, 1.10%)</title><rect x="92.7620%" y="293" width="1.1043%" height="15" fill="rgb(227,223,44)" fg:x="276620" fg:w="3293"/><text x="93.0550%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.8663%" y="277" width="0.0231%" height="15" fill="rgb(220,188,6)" fg:x="279913" fg:w="69"/><text x="94.1592%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.8894%" y="277" width="0.0228%" height="15" fill="rgb(216,65,22)" fg:x="279982" fg:w="68"/><text x="94.1824%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.8663%" y="293" width="0.0781%" height="15" fill="rgb(236,66,46)" fg:x="279913" fg:w="233"/><text x="94.1592%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,564 instructions, 1.20%)</title><rect x="92.7597%" y="309" width="1.1952%" height="15" fill="rgb(211,150,52)" fg:x="276613" fg:w="3564"/><text x="93.0526%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="93.9548%" y="293" width="0.0231%" height="15" fill="rgb(253,89,19)" fg:x="280177" fg:w="69"/><text x="94.2478%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="93.9779%" y="293" width="0.0228%" height="15" fill="rgb(245,4,1)" fg:x="280246" fg:w="68"/><text x="94.2709%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="93.9548%" y="309" width="0.0781%" height="15" fill="rgb(230,109,16)" fg:x="280177" fg:w="233"/><text x="94.2478%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,828 instructions, 1.28%)</title><rect x="92.7597%" y="325" width="1.2837%" height="15" fill="rgb(213,7,47)" fg:x="276613" fg:w="3828"/><text x="93.0526%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="94.0457%" y="309" width="0.0231%" height="15" fill="rgb(242,148,14)" fg:x="280448" fg:w="69"/><text x="94.3387%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="94.0688%" y="309" width="0.0228%" height="15" fill="rgb(238,51,34)" fg:x="280517" fg:w="68"/><text x="94.3618%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="94.0457%" y="325" width="0.0781%" height="15" fill="rgb(222,49,22)" fg:x="280448" fg:w="233"/><text x="94.3387%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,106 instructions, 1.38%)</title><rect x="92.7573%" y="341" width="1.3769%" height="15" fill="rgb(237,102,50)" fg:x="276606" fg:w="4106"/><text x="93.0503%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="94.1342%" y="325" width="0.0231%" height="15" fill="rgb(237,195,8)" fg:x="280712" fg:w="69"/><text x="94.4272%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="94.1574%" y="325" width="0.0228%" height="15" fill="rgb(245,60,18)" fg:x="280781" fg:w="68"/><text x="94.4503%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="94.1342%" y="341" width="0.0781%" height="15" fill="rgb(253,74,32)" fg:x="280712" fg:w="233"/><text x="94.4272%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,377 instructions, 1.47%)</title><rect x="92.7550%" y="357" width="1.4678%" height="15" fill="rgb(240,91,39)" fg:x="276599" fg:w="4377"/><text x="93.0479%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="94.2227%" y="341" width="0.0231%" height="15" fill="rgb(221,162,34)" fg:x="280976" fg:w="69"/><text x="94.5157%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="94.2459%" y="341" width="0.0228%" height="15" fill="rgb(223,32,2)" fg:x="281045" fg:w="68"/><text x="94.5389%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="94.2227%" y="357" width="0.0781%" height="15" fill="rgb(245,220,46)" fg:x="280976" fg:w="233"/><text x="94.5157%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,641 instructions, 1.56%)</title><rect x="92.7550%" y="373" width="1.5563%" height="15" fill="rgb(216,38,33)" fg:x="276599" fg:w="4641"/><text x="93.0479%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.3113%" y="373" width="0.0275%" height="15" fill="rgb(210,123,14)" fg:x="281240" fg:w="82"/><text x="94.6042%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (54 instructions, 0.02%)</title><rect x="94.3388%" y="373" width="0.0181%" height="15" fill="rgb(214,38,47)" fg:x="281322" fg:w="54"/><text x="94.6317%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (174 instructions, 0.06%)</title><rect x="94.3646%" y="341" width="0.0583%" height="15" fill="rgb(244,180,16)" fg:x="281399" fg:w="174"/><text x="94.6576%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.4229%" y="325" width="0.0275%" height="15" fill="rgb(252,21,32)" fg:x="281573" fg:w="82"/><text x="94.7159%" y="335.50"></text></g><g><title>candid::types::internal::env_add (165 instructions, 0.06%)</title><rect x="94.4229%" y="341" width="0.0553%" height="15" fill="rgb(245,218,31)" fg:x="281573" fg:w="165"/><text x="94.7159%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.4783%" y="341" width="0.0275%" height="15" fill="rgb(247,81,18)" fg:x="281738" fg:w="82"/><text x="94.7712%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.5058%" y="341" width="0.0275%" height="15" fill="rgb(220,151,1)" fg:x="281820" fg:w="82"/><text x="94.7987%" y="351.50"></text></g><g><title>memcmp (675 instructions, 0.23%)</title><rect x="94.5333%" y="325" width="0.2264%" height="15" fill="rgb(211,157,11)" fg:x="281902" fg:w="675"/><text x="94.8262%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="94.7596%" y="309" width="0.0298%" height="15" fill="rgb(239,46,30)" fg:x="282577" fg:w="89"/><text x="95.0526%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.04%)</title><rect x="94.7596%" y="325" width="0.0446%" height="15" fill="rgb(236,144,43)" fg:x="282577" fg:w="133"/><text x="95.0526%" y="335.50"></text></g><g><title>candid::types::internal::env_add (980 instructions, 0.33%)</title><rect x="94.5333%" y="341" width="0.3286%" height="15" fill="rgb(206,71,45)" fg:x="281902" fg:w="980"/><text x="94.8262%" y="351.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.01%)</title><rect x="94.8619%" y="325" width="0.0148%" height="15" fill="rgb(240,85,31)" fg:x="282882" fg:w="44"/><text x="95.1549%" y="335.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (44 instructions, 0.01%)</title><rect x="94.8767%" y="325" width="0.0148%" height="15" fill="rgb(221,43,52)" fg:x="282926" fg:w="44"/><text x="95.1696%" y="335.50"></text></g><g><title>candid::types::internal::env_id (341 instructions, 0.11%)</title><rect x="94.8619%" y="341" width="0.1144%" height="15" fill="rgb(243,106,22)" fg:x="282882" fg:w="341"/><text x="95.1549%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,998 instructions, 0.67%)</title><rect x="94.3569%" y="357" width="0.6700%" height="15" fill="rgb(209,138,38)" fg:x="281376" fg:w="1998"/><text x="94.6499%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="95.0269%" y="325" width="0.0275%" height="15" fill="rgb(216,63,40)" fg:x="283374" fg:w="82"/><text x="95.3199%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="95.0269%" y="341" width="0.0436%" height="15" fill="rgb(206,115,21)" fg:x="283374" fg:w="130"/><text x="95.3199%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (215 instructions, 0.07%)</title><rect x="95.0269%" y="357" width="0.0721%" height="15" fill="rgb(235,53,44)" fg:x="283374" fg:w="215"/><text x="95.3199%" y="367.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.01%)</title><rect x="95.0990%" y="341" width="0.0127%" height="15" fill="rgb(244,160,14)" fg:x="283589" fg:w="38"/><text x="95.3920%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="95.1117%" y="341" width="0.0275%" height="15" fill="rgb(223,16,19)" fg:x="283627" fg:w="82"/><text x="95.4047%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="95.1392%" y="309" width="0.0275%" height="15" fill="rgb(242,63,42)" fg:x="283709" fg:w="82"/><text x="95.4322%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="95.1392%" y="325" width="0.0436%" height="15" fill="rgb(209,66,49)" fg:x="283709" fg:w="130"/><text x="95.4322%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.07%)</title><rect x="95.1392%" y="341" width="0.0721%" height="15" fill="rgb(207,126,46)" fg:x="283709" fg:w="215"/><text x="95.4322%" y="351.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (31 instructions, 0.01%)</title><rect x="95.2113%" y="325" width="0.0104%" height="15" fill="rgb(218,160,41)" fg:x="283924" fg:w="31"/><text x="95.5043%" y="335.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.01%)</title><rect x="95.2217%" y="325" width="0.0104%" height="15" fill="rgb(234,125,46)" fg:x="283955" fg:w="31"/><text x="95.5147%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (203 instructions, 0.07%)</title><rect x="95.2113%" y="341" width="0.0681%" height="15" fill="rgb(205,66,36)" fg:x="283924" fg:w="203"/><text x="95.5043%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="95.2794%" y="293" width="0.0275%" height="15" fill="rgb(220,135,16)" fg:x="284127" fg:w="82"/><text x="95.5724%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="95.2794%" y="309" width="0.0436%" height="15" fill="rgb(214,217,54)" fg:x="284127" fg:w="130"/><text x="95.5724%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.07%)</title><rect x="95.2794%" y="325" width="0.0711%" height="15" fill="rgb(206,30,9)" fg:x="284127" fg:w="212"/><text x="95.5724%" y="335.50"></text></g><g><title>leb128::write::signed (271 instructions, 0.09%)</title><rect x="95.2794%" y="341" width="0.0909%" height="15" fill="rgb(207,196,5)" fg:x="284127" fg:w="271"/><text x="95.5724%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.02%)</title><rect x="95.3703%" y="341" width="0.0221%" height="15" fill="rgb(227,116,12)" fg:x="284398" fg:w="66"/><text x="95.6633%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (1,159 instructions, 0.39%)</title><rect x="95.0990%" y="357" width="0.3887%" height="15" fill="rgb(235,227,13)" fg:x="283589" fg:w="1159"/><text x="95.3920%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="95.4920%" y="309" width="0.0275%" height="15" fill="rgb(238,212,29)" fg:x="284761" fg:w="82"/><text x="95.7850%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="95.4920%" y="325" width="0.0436%" height="15" fill="rgb(230,152,17)" fg:x="284761" fg:w="130"/><text x="95.7850%" y="335.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="95.5631%" y="309" width="0.0396%" height="15" fill="rgb(220,197,1)" fg:x="284973" fg:w="118"/><text x="95.8561%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.06%)</title><rect x="95.5631%" y="325" width="0.0557%" height="15" fill="rgb(229,227,40)" fg:x="284973" fg:w="166"/><text x="95.8561%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (465 instructions, 0.16%)</title><rect x="95.4920%" y="341" width="0.1559%" height="15" fill="rgb(227,179,16)" fg:x="284761" fg:w="465"/><text x="95.7850%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="95.6479%" y="341" width="0.1046%" height="15" fill="rgb(246,116,44)" fg:x="285226" fg:w="312"/><text x="95.9409%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (870 instructions, 0.29%)</title><rect x="95.4920%" y="357" width="0.2917%" height="15" fill="rgb(205,191,4)" fg:x="284761" fg:w="870"/><text x="95.7850%" y="367.50"></text></g><g><title>memcmp (675 instructions, 0.23%)</title><rect x="95.8250%" y="325" width="0.2264%" height="15" fill="rgb(245,69,19)" fg:x="285754" fg:w="675"/><text x="96.1180%" y="335.50"></text></g><g><title>candid::types::internal::find_type (822 instructions, 0.28%)</title><rect x="95.8250%" y="341" width="0.2757%" height="15" fill="rgb(230,29,26)" fg:x="285754" fg:w="822"/><text x="96.1180%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (866 instructions, 0.29%)</title><rect x="95.8250%" y="357" width="0.2904%" height="15" fill="rgb(239,192,26)" fg:x="285754" fg:w="866"/><text x="96.1180%" y="367.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.04%)</title><rect x="96.1154%" y="341" width="0.0372%" height="15" fill="rgb(219,92,16)" fg:x="286620" fg:w="111"/><text x="96.4084%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (193 instructions, 0.06%)</title><rect x="96.1154%" y="357" width="0.0647%" height="15" fill="rgb(246,147,43)" fg:x="286620" fg:w="193"/><text x="96.4084%" y="367.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="96.1845%" y="309" width="0.0396%" height="15" fill="rgb(222,147,11)" fg:x="286826" fg:w="118"/><text x="96.4775%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.06%)</title><rect x="96.1845%" y="325" width="0.0557%" height="15" fill="rgb(243,71,8)" fg:x="286826" fg:w="166"/><text x="96.4775%" y="335.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="96.2693%" y="309" width="0.0396%" height="15" fill="rgb(250,36,12)" fg:x="287079" fg:w="118"/><text x="96.5623%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.06%)</title><rect x="96.2693%" y="325" width="0.0557%" height="15" fill="rgb(207,168,14)" fg:x="287079" fg:w="166"/><text x="96.5623%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (506 instructions, 0.17%)</title><rect x="96.1845%" y="341" width="0.1697%" height="15" fill="rgb(254,210,51)" fg:x="286826" fg:w="506"/><text x="96.4775%" y="351.50"></text></g><g><title>memcpy (4,124 instructions, 1.38%)</title><rect x="96.3542%" y="341" width="1.3829%" height="15" fill="rgb(236,152,38)" fg:x="287332" fg:w="4124"/><text x="96.6471%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,765 instructions, 1.60%)</title><rect x="96.1845%" y="357" width="1.5979%" height="15" fill="rgb(240,164,36)" fg:x="286826" fg:w="4765"/><text x="96.4775%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (10,326 instructions, 3.46%)</title><rect x="94.3569%" y="373" width="3.4627%" height="15" fill="rgb(210,171,36)" fg:x="281376" fg:w="10326"/><text x="94.6499%" y="383.50">can..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.03%)</title><rect x="97.8196%" y="373" width="0.0329%" height="15" fill="rgb(254,156,34)" fg:x="291702" fg:w="98"/><text x="98.1126%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.03%)</title><rect x="97.8525%" y="373" width="0.0278%" height="15" fill="rgb(216,204,23)" fg:x="291800" fg:w="83"/><text x="98.1454%" y="383.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.17%)</title><rect x="97.8803%" y="357" width="0.1737%" height="15" fill="rgb(230,75,38)" fg:x="291883" fg:w="518"/><text x="98.1733%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (116 instructions, 0.04%)</title><rect x="98.0540%" y="309" width="0.0389%" height="15" fill="rgb(248,197,25)" fg:x="292401" fg:w="116"/><text x="98.3470%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (164 instructions, 0.05%)</title><rect x="98.0540%" y="325" width="0.0550%" height="15" fill="rgb(234,121,26)" fg:x="292401" fg:w="164"/><text x="98.3470%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (246 instructions, 0.08%)</title><rect x="98.0540%" y="341" width="0.0825%" height="15" fill="rgb(220,41,36)" fg:x="292401" fg:w="246"/><text x="98.3470%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="98.1365%" y="341" width="0.0275%" height="15" fill="rgb(227,33,32)" fg:x="292647" fg:w="82"/><text x="98.4295%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.1640%" y="341" width="0.0171%" height="15" fill="rgb(208,214,54)" fg:x="292729" fg:w="51"/><text x="98.4570%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.1811%" y="341" width="0.0171%" height="15" fill="rgb(205,37,38)" fg:x="292780" fg:w="51"/><text x="98.4741%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.1982%" y="341" width="0.0201%" height="15" fill="rgb(252,2,0)" fg:x="292831" fg:w="60"/><text x="98.4912%" y="351.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.04%)</title><rect x="98.2183%" y="325" width="0.0372%" height="15" fill="rgb(212,171,10)" fg:x="292891" fg:w="111"/><text x="98.5113%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="98.2556%" y="293" width="0.0275%" height="15" fill="rgb(239,35,46)" fg:x="293002" fg:w="82"/><text x="98.5485%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="98.2556%" y="309" width="0.0436%" height="15" fill="rgb(209,34,42)" fg:x="293002" fg:w="130"/><text x="98.5485%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.07%)</title><rect x="98.2556%" y="325" width="0.0711%" height="15" fill="rgb(237,9,4)" fg:x="293002" fg:w="212"/><text x="98.5485%" y="335.50"></text></g><g><title>&lt;candid::types::internal::Type as core::cmp::Ord&gt;::cmp (111 instructions, 0.04%)</title><rect x="98.3827%" y="325" width="0.0372%" height="15" fill="rgb(254,55,38)" fg:x="293381" fg:w="111"/><text x="98.6756%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (759 instructions, 0.25%)</title><rect x="98.2183%" y="341" width="0.2545%" height="15" fill="rgb(222,95,29)" fg:x="292891" fg:w="759"/><text x="98.5113%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.4729%" y="341" width="0.0171%" height="15" fill="rgb(241,218,37)" fg:x="293650" fg:w="51"/><text x="98.7658%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.4900%" y="341" width="0.0201%" height="15" fill="rgb(225,89,28)" fg:x="293701" fg:w="60"/><text x="98.7829%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (1,768 instructions, 0.59%)</title><rect x="98.0540%" y="357" width="0.5929%" height="15" fill="rgb(231,17,25)" fg:x="292401" fg:w="1768"/><text x="98.3470%" y="367.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.17%)</title><rect x="98.6469%" y="357" width="0.1744%" height="15" fill="rgb(206,216,48)" fg:x="294169" fg:w="520"/><text x="98.9399%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,250 instructions, 0.42%)</title><rect x="98.8213%" y="357" width="0.4192%" height="15" fill="rgb(247,190,28)" fg:x="294689" fg:w="1250"/><text x="99.1142%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (4,153 instructions, 1.39%)</title><rect x="97.8803%" y="373" width="1.3927%" height="15" fill="rgb(216,196,12)" fg:x="291883" fg:w="4153"/><text x="98.1733%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="99.2730%" y="373" width="0.0298%" height="15" fill="rgb(232,114,19)" fg:x="296036" fg:w="89"/><text x="99.5659%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="99.3028%" y="373" width="0.0298%" height="15" fill="rgb(240,60,14)" fg:x="296125" fg:w="89"/><text x="99.5958%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (142 instructions, 0.05%)</title><rect x="99.3370%" y="357" width="0.0476%" height="15" fill="rgb(250,108,9)" fg:x="296227" fg:w="142"/><text x="99.6300%" y="367.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V,A&gt; as core::ops::drop::Drop&gt;::drop (239 instructions, 0.08%)</title><rect x="99.3327%" y="373" width="0.0801%" height="15" fill="rgb(227,228,21)" fg:x="296214" fg:w="239"/><text x="99.6256%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="99.4239%" y="373" width="0.0298%" height="15" fill="rgb(254,16,52)" fg:x="296486" fg:w="89"/><text x="99.7169%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (178 instructions, 0.06%)</title><rect x="99.4537%" y="373" width="0.0597%" height="15" fill="rgb(222,58,2)" fg:x="296575" fg:w="178"/><text x="99.7467%" y="383.50"></text></g><g><title>certified_map::__canister_method_witness::{{closure}} (297,502 instructions, 99.76%)</title><rect x="0.0889%" y="389" width="99.7646%" height="15" fill="rgb(253,68,14)" fg:x="265" fg:w="297502"/><text x="0.3818%" y="399.50">certified_map::__canister_method_witness::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (278 instructions, 0.09%)</title><rect x="99.8585%" y="389" width="0.0932%" height="15" fill="rgb(226,96,17)" fg:x="297782" fg:w="278"/><text x="100.1515%" y="399.50"></text></g><g><title>all (298,204 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(227,199,2)" fg:x="0" fg:w="298204"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (298,204 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(228,227,48)" fg:x="0" fg:w="298204"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>