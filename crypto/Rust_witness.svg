<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="288311"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.04%)</title><rect x="0.0066%" y="389" width="0.0392%" height="15" fill="rgb(237,177,4)" fg:x="19" fg:w="113"/><text x="0.2996%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.02%)</title><rect x="0.0458%" y="389" width="0.0246%" height="15" fill="rgb(248,163,50)" fg:x="132" fg:w="71"/><text x="0.3388%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0704%" y="357" width="0.0284%" height="15" fill="rgb(246,67,42)" fg:x="203" fg:w="82"/><text x="0.3634%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.02%)</title><rect x="0.0989%" y="341" width="0.0246%" height="15" fill="rgb(228,136,45)" fg:x="285" fg:w="71"/><text x="0.3918%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.14%)</title><rect x="0.1235%" y="341" width="0.1394%" height="15" fill="rgb(218,93,4)" fg:x="356" fg:w="402"/><text x="0.4164%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.03%)</title><rect x="0.2629%" y="341" width="0.0288%" height="15" fill="rgb(209,82,29)" fg:x="758" fg:w="83"/><text x="0.5559%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.2917%" y="341" width="0.0187%" height="15" fill="rgb(213,219,38)" fg:x="841" fg:w="54"/><text x="0.5847%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3104%" y="341" width="0.0187%" height="15" fill="rgb(233,212,17)" fg:x="895" fg:w="54"/><text x="0.6034%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3292%" y="341" width="0.0187%" height="15" fill="rgb(225,65,3)" fg:x="949" fg:w="54"/><text x="0.6221%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3479%" y="341" width="0.0187%" height="15" fill="rgb(226,25,1)" fg:x="1003" fg:w="54"/><text x="0.6409%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (71 instructions, 0.02%)</title><rect x="0.3666%" y="341" width="0.0246%" height="15" fill="rgb(229,83,27)" fg:x="1057" fg:w="71"/><text x="0.6596%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.3912%" y="341" width="0.0225%" height="15" fill="rgb(245,80,47)" fg:x="1128" fg:w="65"/><text x="0.6842%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.14%)</title><rect x="0.4138%" y="341" width="0.1394%" height="15" fill="rgb(213,79,27)" fg:x="1193" fg:w="402"/><text x="0.7068%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.5588%" y="325" width="0.0284%" height="15" fill="rgb(232,38,28)" fg:x="1611" fg:w="82"/><text x="0.8517%" y="335.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="0.5872%" y="293" width="0.0208%" height="15" fill="rgb(253,63,39)" fg:x="1693" fg:w="60"/><text x="0.8802%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="0.5872%" y="309" width="0.0295%" height="15" fill="rgb(222,204,17)" fg:x="1693" fg:w="85"/><text x="0.8802%" y="319.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="0.6198%" y="245" width="0.0104%" height="15" fill="rgb(254,135,49)" fg:x="1787" fg:w="30"/><text x="0.9128%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="0.6198%" y="261" width="0.0191%" height="15" fill="rgb(226,203,24)" fg:x="1787" fg:w="55"/><text x="0.9128%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.04%)</title><rect x="0.6167%" y="277" width="0.0395%" height="15" fill="rgb(225,2,17)" fg:x="1778" fg:w="114"/><text x="0.9097%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.06%)</title><rect x="0.6167%" y="293" width="0.0579%" height="15" fill="rgb(234,135,43)" fg:x="1778" fg:w="167"/><text x="0.9097%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.06%)</title><rect x="0.6167%" y="309" width="0.0597%" height="15" fill="rgb(224,14,46)" fg:x="1778" fg:w="172"/><text x="0.9097%" y="319.50"></text></g><g><title>core::fmt::write (368 instructions, 0.13%)</title><rect x="0.5872%" y="325" width="0.1276%" height="15" fill="rgb(206,42,0)" fg:x="1693" fg:w="368"/><text x="0.8802%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 0.20%)</title><rect x="0.5588%" y="341" width="0.1981%" height="15" fill="rgb(244,38,23)" fg:x="1611" fg:w="571"/><text x="0.8517%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.03%)</title><rect x="0.7568%" y="341" width="0.0288%" height="15" fill="rgb(230,25,21)" fg:x="2182" fg:w="83"/><text x="1.0498%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="0.7856%" y="341" width="0.0194%" height="15" fill="rgb(252,217,28)" fg:x="2265" fg:w="56"/><text x="1.0786%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.02%)</title><rect x="0.8050%" y="341" width="0.0225%" height="15" fill="rgb(251,4,49)" fg:x="2321" fg:w="65"/><text x="1.0980%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.8276%" y="341" width="0.0225%" height="15" fill="rgb(217,126,31)" fg:x="2386" fg:w="65"/><text x="1.1205%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (402 instructions, 0.14%)</title><rect x="0.8501%" y="325" width="0.1394%" height="15" fill="rgb(242,181,33)" fg:x="2451" fg:w="402"/><text x="1.1431%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.9951%" y="309" width="0.0284%" height="15" fill="rgb(241,108,6)" fg:x="2869" fg:w="82"/><text x="1.2881%" y="319.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="1.0235%" y="277" width="0.0208%" height="15" fill="rgb(238,87,39)" fg:x="2951" fg:w="60"/><text x="1.3165%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="1.0235%" y="293" width="0.0295%" height="15" fill="rgb(244,101,49)" fg:x="2951" fg:w="85"/><text x="1.3165%" y="303.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="1.0562%" y="229" width="0.0104%" height="15" fill="rgb(211,43,42)" fg:x="3045" fg:w="30"/><text x="1.3491%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="1.0562%" y="245" width="0.0191%" height="15" fill="rgb(210,93,2)" fg:x="3045" fg:w="55"/><text x="1.3491%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (114 instructions, 0.04%)</title><rect x="1.0530%" y="261" width="0.0395%" height="15" fill="rgb(242,149,32)" fg:x="3036" fg:w="114"/><text x="1.3460%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (167 instructions, 0.06%)</title><rect x="1.0530%" y="277" width="0.0579%" height="15" fill="rgb(228,1,6)" fg:x="3036" fg:w="167"/><text x="1.3460%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (172 instructions, 0.06%)</title><rect x="1.0530%" y="293" width="0.0597%" height="15" fill="rgb(221,0,20)" fg:x="3036" fg:w="172"/><text x="1.3460%" y="303.50"></text></g><g><title>core::fmt::write (368 instructions, 0.13%)</title><rect x="1.0235%" y="309" width="0.1276%" height="15" fill="rgb(230,39,32)" fg:x="2951" fg:w="368"/><text x="1.3165%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (571 instructions, 0.20%)</title><rect x="0.9951%" y="325" width="0.1981%" height="15" fill="rgb(240,89,38)" fg:x="2869" fg:w="571"/><text x="1.2881%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (83 instructions, 0.03%)</title><rect x="1.1932%" y="325" width="0.0288%" height="15" fill="rgb(208,221,23)" fg:x="3440" fg:w="83"/><text x="1.4861%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="1.2219%" y="325" width="0.0194%" height="15" fill="rgb(220,145,29)" fg:x="3523" fg:w="56"/><text x="1.5149%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,287 instructions, 0.45%)</title><rect x="0.8501%" y="341" width="0.4464%" height="15" fill="rgb(219,146,23)" fg:x="2451" fg:w="1287"/><text x="1.1431%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (65 instructions, 0.02%)</title><rect x="1.2965%" y="341" width="0.0225%" height="15" fill="rgb(244,114,49)" fg:x="3738" fg:w="65"/><text x="1.5895%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3357%" y="341" width="0.0284%" height="15" fill="rgb(221,17,10)" fg:x="3851" fg:w="82"/><text x="1.6287%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3642%" y="341" width="0.0284%" height="15" fill="rgb(228,133,21)" fg:x="3933" fg:w="82"/><text x="1.6571%" y="351.50"></text></g><g><title>memcpy (399 instructions, 0.14%)</title><rect x="1.3933%" y="341" width="0.1384%" height="15" fill="rgb(218,81,30)" fg:x="4017" fg:w="399"/><text x="1.6863%" y="351.50"></text></g><g><title>memcpy (399 instructions, 0.14%)</title><rect x="1.5317%" y="341" width="0.1384%" height="15" fill="rgb(240,29,36)" fg:x="4416" fg:w="399"/><text x="1.8246%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,346 instructions, 1.85%)</title><rect x="0.0989%" y="357" width="1.8542%" height="15" fill="rgb(246,0,36)" fg:x="285" fg:w="5346"/><text x="0.3918%" y="367.50"></text></g><g><title>memcpy (354 instructions, 0.12%)</title><rect x="1.9531%" y="357" width="0.1228%" height="15" fill="rgb(217,79,8)" fg:x="5631" fg:w="354"/><text x="2.2461%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="2.0811%" y="309" width="0.0281%" height="15" fill="rgb(229,124,44)" fg:x="6000" fg:w="81"/><text x="2.3741%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.04%)</title><rect x="2.1185%" y="309" width="0.0350%" height="15" fill="rgb(210,187,22)" fg:x="6108" fg:w="101"/><text x="2.4115%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.08%)</title><rect x="2.0811%" y="325" width="0.0819%" height="15" fill="rgb(212,115,40)" fg:x="6000" fg:w="236"/><text x="2.3741%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (288 instructions, 0.10%)</title><rect x="2.0759%" y="341" width="0.0999%" height="15" fill="rgb(210,2,54)" fg:x="5985" fg:w="288"/><text x="2.3689%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (325 instructions, 0.11%)</title><rect x="2.0759%" y="357" width="0.1127%" height="15" fill="rgb(227,168,43)" fg:x="5985" fg:w="325"/><text x="2.3689%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="2.1886%" y="357" width="0.0194%" height="15" fill="rgb(249,92,8)" fg:x="6310" fg:w="56"/><text x="2.4816%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (6,293 instructions, 2.18%)</title><rect x="0.0704%" y="373" width="2.1827%" height="15" fill="rgb(239,111,35)" fg:x="203" fg:w="6293"/><text x="0.3634%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.2531%" y="341" width="0.0284%" height="15" fill="rgb(230,126,13)" fg:x="6496" fg:w="82"/><text x="2.5461%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="2.2531%" y="357" width="0.0385%" height="15" fill="rgb(243,116,33)" fg:x="6496" fg:w="111"/><text x="2.5461%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (178 instructions, 0.06%)</title><rect x="2.2531%" y="373" width="0.0617%" height="15" fill="rgb(246,103,21)" fg:x="6496" fg:w="178"/><text x="2.5461%" y="383.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3426%" y="277" width="0.0128%" height="15" fill="rgb(237,53,26)" fg:x="6754" fg:w="37"/><text x="2.6356%" y="287.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3554%" y="261" width="0.0128%" height="15" fill="rgb(213,121,15)" fg:x="6791" fg:w="37"/><text x="2.6484%" y="271.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3683%" y="245" width="0.0128%" height="15" fill="rgb(251,83,35)" fg:x="6828" fg:w="37"/><text x="2.6612%" y="255.50"></text></g><g><title>memcmp (58 instructions, 0.02%)</title><rect x="2.3811%" y="229" width="0.0201%" height="15" fill="rgb(222,79,8)" fg:x="6865" fg:w="58"/><text x="2.6741%" y="239.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.4012%" y="213" width="0.0128%" height="15" fill="rgb(217,74,36)" fg:x="6923" fg:w="37"/><text x="2.6942%" y="223.50"></text></g><g><title>memcmp (152 instructions, 0.05%)</title><rect x="2.4141%" y="197" width="0.0527%" height="15" fill="rgb(221,14,30)" fg:x="6960" fg:w="152"/><text x="2.7070%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4668%" y="197" width="0.0284%" height="15" fill="rgb(216,221,5)" fg:x="7112" fg:w="82"/><text x="2.7597%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4952%" y="181" width="0.0284%" height="15" fill="rgb(236,118,16)" fg:x="7194" fg:w="82"/><text x="2.7882%" y="191.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="2.5237%" y="181" width="0.1110%" height="15" fill="rgb(243,91,43)" fg:x="7276" fg:w="320"/><text x="2.8166%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.6347%" y="181" width="0.0284%" height="15" fill="rgb(231,110,7)" fg:x="7596" fg:w="82"/><text x="2.9276%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (772 instructions, 0.27%)</title><rect x="2.4952%" y="197" width="0.2678%" height="15" fill="rgb(217,80,6)" fg:x="7194" fg:w="772"/><text x="2.7882%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,174 instructions, 0.41%)</title><rect x="2.4141%" y="213" width="0.4072%" height="15" fill="rgb(251,116,7)" fg:x="6960" fg:w="1174"/><text x="2.7070%" y="223.50"></text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="2.8213%" y="197" width="0.0756%" height="15" fill="rgb(236,70,22)" fg:x="8134" fg:w="218"/><text x="3.1142%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="2.8969%" y="197" width="0.1630%" height="15" fill="rgb(245,13,10)" fg:x="8352" fg:w="470"/><text x="3.1898%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="3.0599%" y="197" width="0.0416%" height="15" fill="rgb(233,146,34)" fg:x="8822" fg:w="120"/><text x="3.3529%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="3.1015%" y="197" width="0.1630%" height="15" fill="rgb(241,196,34)" fg:x="8942" fg:w="470"/><text x="3.3945%" y="207.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="3.2645%" y="181" width="0.0576%" height="15" fill="rgb(207,150,20)" fg:x="9412" fg:w="166"/><text x="3.5575%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="3.3221%" y="181" width="1.7290%" height="15" fill="rgb(251,27,52)" fg:x="9578" fg:w="4985"/><text x="3.6151%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="3.2645%" y="197" width="1.8865%" height="15" fill="rgb(221,76,2)" fg:x="9412" fg:w="5439"/><text x="3.5575%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="2.8213%" y="213" width="2.3915%" height="15" fill="rgb(242,94,41)" fg:x="8134" fg:w="6895"/><text x="3.1142%" y="223.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="5.2128%" y="197" width="0.0756%" height="15" fill="rgb(245,9,8)" fg:x="15029" fg:w="218"/><text x="5.5057%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.2884%" y="197" width="0.1630%" height="15" fill="rgb(236,139,26)" fg:x="15247" fg:w="470"/><text x="5.5814%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="5.4514%" y="197" width="0.0416%" height="15" fill="rgb(249,11,18)" fg:x="15717" fg:w="120"/><text x="5.7444%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.4930%" y="197" width="0.1630%" height="15" fill="rgb(206,175,35)" fg:x="15837" fg:w="470"/><text x="5.7860%" y="207.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="5.6560%" y="181" width="0.0194%" height="15" fill="rgb(231,3,46)" fg:x="16307" fg:w="56"/><text x="5.9490%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="5.6755%" y="181" width="1.7290%" height="15" fill="rgb(243,27,8)" fg:x="16363" fg:w="4985"/><text x="5.9684%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="7.4045%" y="181" width="1.7290%" height="15" fill="rgb(223,53,13)" fg:x="21348" fg:w="4985"/><text x="7.6975%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="5.6560%" y="197" width="3.5899%" height="15" fill="rgb(248,68,15)" fg:x="16307" fg:w="10350"/><text x="5.9490%" y="207.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="5.2128%" y="213" width="4.1133%" height="15" fill="rgb(216,61,26)" fg:x="15029" fg:w="11859"/><text x="5.5057%" y="223.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="9.3260%" y="181" width="0.0756%" height="15" fill="rgb(213,201,24)" fg:x="26888" fg:w="218"/><text x="9.6190%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="9.4017%" y="181" width="0.1630%" height="15" fill="rgb(214,20,17)" fg:x="27106" fg:w="470"/><text x="9.6946%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="9.5647%" y="181" width="0.0832%" height="15" fill="rgb(206,21,46)" fg:x="27576" fg:w="240"/><text x="9.8576%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="9.6479%" y="181" width="1.7290%" height="15" fill="rgb(234,222,24)" fg:x="27816" fg:w="4985"/><text x="9.9409%" y="191.50"></text></g><g><title>memcpy (129 instructions, 0.04%)</title><rect x="11.3770%" y="181" width="0.0447%" height="15" fill="rgb(221,25,26)" fg:x="32801" fg:w="129"/><text x="11.6699%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="11.4217%" y="181" width="0.1630%" height="15" fill="rgb(241,148,26)" fg:x="32930" fg:w="470"/><text x="11.7147%" y="191.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="11.5847%" y="165" width="0.0610%" height="15" fill="rgb(248,119,35)" fg:x="33400" fg:w="176"/><text x="11.8777%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="11.6458%" y="165" width="1.7290%" height="15" fill="rgb(239,126,23)" fg:x="33576" fg:w="4985"/><text x="11.9387%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="11.5847%" y="181" width="1.8900%" height="15" fill="rgb(247,120,25)" fg:x="33400" fg:w="5449"/><text x="11.8777%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,215 instructions, 4.24%)</title><rect x="9.3260%" y="197" width="4.2367%" height="15" fill="rgb(220,93,32)" fg:x="26888" fg:w="12215"/><text x="9.6190%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="13.5628%" y="197" width="0.0284%" height="15" fill="rgb(236,46,26)" fg:x="39103" fg:w="82"/><text x="13.8558%" y="207.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="13.5912%" y="197" width="0.1110%" height="15" fill="rgb(229,20,45)" fg:x="39185" fg:w="320"/><text x="13.8842%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,921 instructions, 4.48%)</title><rect x="9.3260%" y="213" width="4.4816%" height="15" fill="rgb(225,168,41)" fg:x="26888" fg:w="12921"/><text x="9.6190%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,063 instructions, 11.47%)</title><rect x="2.4012%" y="229" width="11.4678%" height="15" fill="rgb(253,123,20)" fg:x="6923" fg:w="33063"/><text x="2.6942%" y="239.50">ic_certified_m..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="13.8691%" y="213" width="0.0756%" height="15" fill="rgb(244,17,29)" fg:x="39986" fg:w="218"/><text x="14.1620%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="13.9447%" y="213" width="0.1630%" height="15" fill="rgb(242,196,24)" fg:x="40204" fg:w="470"/><text x="14.2376%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="14.1077%" y="213" width="0.0416%" height="15" fill="rgb(210,113,45)" fg:x="40674" fg:w="120"/><text x="14.4007%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="14.1493%" y="213" width="0.1630%" height="15" fill="rgb(205,129,3)" fg:x="40794" fg:w="470"/><text x="14.4423%" y="223.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="14.3123%" y="197" width="0.0576%" height="15" fill="rgb(232,74,10)" fg:x="41264" fg:w="166"/><text x="14.6053%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="14.3699%" y="197" width="1.7290%" height="15" fill="rgb(251,63,43)" fg:x="41430" fg:w="4985"/><text x="14.6629%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="14.3123%" y="213" width="1.8865%" height="15" fill="rgb(228,215,15)" fg:x="41264" fg:w="5439"/><text x="14.6053%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="13.8691%" y="229" width="2.3915%" height="15" fill="rgb(233,179,38)" fg:x="39986" fg:w="6895"/><text x="14.1620%" y="239.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="16.2606%" y="213" width="0.0756%" height="15" fill="rgb(227,187,9)" fg:x="46881" fg:w="218"/><text x="16.5535%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.3362%" y="213" width="0.1630%" height="15" fill="rgb(231,89,27)" fg:x="47099" fg:w="470"/><text x="16.6291%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="16.4992%" y="213" width="0.0416%" height="15" fill="rgb(225,117,1)" fg:x="47569" fg:w="120"/><text x="16.7922%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.5408%" y="213" width="0.1630%" height="15" fill="rgb(239,120,49)" fg:x="47689" fg:w="470"/><text x="16.8338%" y="223.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="16.7038%" y="197" width="0.0194%" height="15" fill="rgb(236,137,37)" fg:x="48159" fg:w="56"/><text x="16.9968%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="16.7233%" y="197" width="1.7290%" height="15" fill="rgb(239,73,42)" fg:x="48215" fg:w="4985"/><text x="17.0162%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="18.4523%" y="197" width="1.7290%" height="15" fill="rgb(207,169,6)" fg:x="53200" fg:w="4985"/><text x="18.7453%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="16.7038%" y="213" width="3.5899%" height="15" fill="rgb(228,171,10)" fg:x="48159" fg:w="10350"/><text x="16.9968%" y="223.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="16.2606%" y="229" width="4.1133%" height="15" fill="rgb(217,228,47)" fg:x="46881" fg:w="11859"/><text x="16.5535%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.3738%" y="213" width="0.0284%" height="15" fill="rgb(227,116,17)" fg:x="58740" fg:w="82"/><text x="20.6668%" y="223.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="20.4023%" y="213" width="0.1110%" height="15" fill="rgb(245,128,36)" fg:x="58822" fg:w="320"/><text x="20.6952%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.5133%" y="213" width="0.0284%" height="15" fill="rgb(221,139,3)" fg:x="59142" fg:w="82"/><text x="20.8062%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="20.3738%" y="229" width="0.2705%" height="15" fill="rgb(207,59,54)" fg:x="58740" fg:w="780"/><text x="20.6668%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (52,831 instructions, 18.32%)</title><rect x="2.3811%" y="245" width="18.3243%" height="15" fill="rgb(231,129,12)" fg:x="6865" fg:w="52831"/><text x="2.6741%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="20.7054%" y="229" width="0.0756%" height="15" fill="rgb(235,49,17)" fg:x="59696" fg:w="218"/><text x="20.9984%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.7810%" y="229" width="0.1630%" height="15" fill="rgb(229,175,11)" fg:x="59914" fg:w="470"/><text x="21.0740%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="20.9441%" y="229" width="0.0416%" height="15" fill="rgb(206,187,30)" fg:x="60384" fg:w="120"/><text x="21.2370%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.9857%" y="229" width="0.1630%" height="15" fill="rgb(214,39,19)" fg:x="60504" fg:w="470"/><text x="21.2786%" y="239.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="21.1487%" y="213" width="0.0576%" height="15" fill="rgb(243,92,46)" fg:x="60974" fg:w="166"/><text x="21.4417%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="21.2063%" y="213" width="1.7290%" height="15" fill="rgb(240,125,36)" fg:x="61140" fg:w="4985"/><text x="21.4992%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="21.1487%" y="229" width="1.8865%" height="15" fill="rgb(217,193,45)" fg:x="60974" fg:w="5439"/><text x="21.4417%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="20.7054%" y="245" width="2.3915%" height="15" fill="rgb(230,127,16)" fg:x="59696" fg:w="6895"/><text x="20.9984%" y="255.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="23.0969%" y="229" width="0.0756%" height="15" fill="rgb(208,161,0)" fg:x="66591" fg:w="218"/><text x="23.3899%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.1725%" y="229" width="0.1630%" height="15" fill="rgb(251,69,39)" fg:x="66809" fg:w="470"/><text x="23.4655%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="23.3356%" y="229" width="0.0416%" height="15" fill="rgb(229,86,22)" fg:x="67279" fg:w="120"/><text x="23.6285%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.3772%" y="229" width="0.1630%" height="15" fill="rgb(223,67,43)" fg:x="67399" fg:w="470"/><text x="23.6702%" y="239.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="23.5402%" y="213" width="0.0194%" height="15" fill="rgb(254,80,31)" fg:x="67869" fg:w="56"/><text x="23.8332%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="23.5596%" y="213" width="1.7290%" height="15" fill="rgb(225,149,52)" fg:x="67925" fg:w="4985"/><text x="23.8526%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="25.2887%" y="213" width="1.7290%" height="15" fill="rgb(214,169,18)" fg:x="72910" fg:w="4985"/><text x="25.5816%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="23.5402%" y="229" width="3.5899%" height="15" fill="rgb(236,224,43)" fg:x="67869" fg:w="10350"/><text x="23.8332%" y="239.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="23.0969%" y="245" width="4.1133%" height="15" fill="rgb(251,125,34)" fg:x="66591" fg:w="11859"/><text x="23.3899%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.2102%" y="229" width="0.0284%" height="15" fill="rgb(224,39,44)" fg:x="78450" fg:w="82"/><text x="27.5032%" y="239.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="27.2386%" y="229" width="0.1110%" height="15" fill="rgb(206,111,46)" fg:x="78532" fg:w="320"/><text x="27.5316%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.3496%" y="229" width="0.0284%" height="15" fill="rgb(227,147,50)" fg:x="78852" fg:w="82"/><text x="27.6426%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="27.2102%" y="245" width="0.2705%" height="15" fill="rgb(239,144,36)" fg:x="78450" fg:w="780"/><text x="27.5032%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (72,578 instructions, 25.17%)</title><rect x="2.3683%" y="261" width="25.1735%" height="15" fill="rgb(216,17,19)" fg:x="6828" fg:w="72578"/><text x="2.6612%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="27.5418%" y="245" width="0.0756%" height="15" fill="rgb(211,192,29)" fg:x="79406" fg:w="218"/><text x="27.8348%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.6174%" y="245" width="0.1630%" height="15" fill="rgb(238,195,20)" fg:x="79624" fg:w="470"/><text x="27.9104%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="27.7804%" y="245" width="0.0416%" height="15" fill="rgb(213,210,42)" fg:x="80094" fg:w="120"/><text x="28.0734%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.8220%" y="245" width="0.1630%" height="15" fill="rgb(244,4,49)" fg:x="80214" fg:w="470"/><text x="28.1150%" y="255.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="27.9851%" y="229" width="0.0576%" height="15" fill="rgb(254,106,42)" fg:x="80684" fg:w="166"/><text x="28.2780%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="28.0426%" y="229" width="1.7290%" height="15" fill="rgb(222,182,12)" fg:x="80850" fg:w="4985"/><text x="28.3356%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="27.9851%" y="245" width="1.8865%" height="15" fill="rgb(228,160,15)" fg:x="80684" fg:w="5439"/><text x="28.2780%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="27.5418%" y="261" width="2.3915%" height="15" fill="rgb(243,149,43)" fg:x="79406" fg:w="6895"/><text x="27.8348%" y="271.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="29.9333%" y="245" width="0.0756%" height="15" fill="rgb(245,150,32)" fg:x="86301" fg:w="218"/><text x="30.2263%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.0089%" y="245" width="0.1630%" height="15" fill="rgb(205,43,19)" fg:x="86519" fg:w="470"/><text x="30.3019%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="30.1719%" y="245" width="0.0416%" height="15" fill="rgb(249,189,35)" fg:x="86989" fg:w="120"/><text x="30.4649%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.2136%" y="245" width="0.1630%" height="15" fill="rgb(223,9,0)" fg:x="87109" fg:w="470"/><text x="30.5065%" y="255.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="30.3766%" y="229" width="0.0194%" height="15" fill="rgb(213,142,45)" fg:x="87579" fg:w="56"/><text x="30.6695%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="30.3960%" y="229" width="1.7290%" height="15" fill="rgb(208,148,2)" fg:x="87635" fg:w="4985"/><text x="30.6890%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="32.1250%" y="229" width="1.7290%" height="15" fill="rgb(207,191,42)" fg:x="92620" fg:w="4985"/><text x="32.4180%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="30.3766%" y="245" width="3.5899%" height="15" fill="rgb(215,218,38)" fg:x="87579" fg:w="10350"/><text x="30.6695%" y="255.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="29.9333%" y="261" width="4.1133%" height="15" fill="rgb(223,195,24)" fg:x="86301" fg:w="11859"/><text x="30.2263%" y="271.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="34.0466%" y="229" width="0.0756%" height="15" fill="rgb(254,60,30)" fg:x="98160" fg:w="218"/><text x="34.3395%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="34.1222%" y="229" width="0.1630%" height="15" fill="rgb(223,2,9)" fg:x="98378" fg:w="470"/><text x="34.4151%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="34.2852%" y="229" width="0.0832%" height="15" fill="rgb(253,134,46)" fg:x="98848" fg:w="240"/><text x="34.5782%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="34.3684%" y="229" width="1.7290%" height="15" fill="rgb(206,209,20)" fg:x="99088" fg:w="4985"/><text x="34.6614%" y="239.50"></text></g><g><title>memcpy (129 instructions, 0.04%)</title><rect x="36.0975%" y="229" width="0.0447%" height="15" fill="rgb(253,104,42)" fg:x="104073" fg:w="129"/><text x="36.3904%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="36.1422%" y="229" width="0.1630%" height="15" fill="rgb(223,47,23)" fg:x="104202" fg:w="470"/><text x="36.4352%" y="239.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="36.3052%" y="213" width="0.0610%" height="15" fill="rgb(247,148,44)" fg:x="104672" fg:w="176"/><text x="36.5982%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="36.3663%" y="213" width="1.7290%" height="15" fill="rgb(221,224,16)" fg:x="104848" fg:w="4985"/><text x="36.6593%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="36.3052%" y="229" width="1.8900%" height="15" fill="rgb(252,103,29)" fg:x="104672" fg:w="5449"/><text x="36.5982%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,215 instructions, 4.24%)</title><rect x="34.0466%" y="245" width="4.2367%" height="15" fill="rgb(244,185,34)" fg:x="98160" fg:w="12215"/><text x="34.3395%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="38.2833%" y="245" width="0.0284%" height="15" fill="rgb(218,18,50)" fg:x="110375" fg:w="82"/><text x="38.5763%" y="255.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="38.3118%" y="245" width="0.1110%" height="15" fill="rgb(234,105,8)" fg:x="110457" fg:w="320"/><text x="38.6047%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,921 instructions, 4.48%)</title><rect x="34.0466%" y="261" width="4.4816%" height="15" fill="rgb(249,51,19)" fg:x="98160" fg:w="12921"/><text x="34.3395%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (104,467 instructions, 36.23%)</title><rect x="2.3554%" y="277" width="36.2341%" height="15" fill="rgb(233,132,7)" fg:x="6791" fg:w="104467"/><text x="2.6484%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="38.5896%" y="261" width="0.0756%" height="15" fill="rgb(229,181,43)" fg:x="111258" fg:w="218"/><text x="38.8825%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.6652%" y="261" width="0.1630%" height="15" fill="rgb(223,20,7)" fg:x="111476" fg:w="470"/><text x="38.9582%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="38.8282%" y="261" width="0.0416%" height="15" fill="rgb(245,13,34)" fg:x="111946" fg:w="120"/><text x="39.1212%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.8698%" y="261" width="0.1630%" height="15" fill="rgb(242,0,53)" fg:x="112066" fg:w="470"/><text x="39.1628%" y="271.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="39.0328%" y="245" width="0.0576%" height="15" fill="rgb(233,115,19)" fg:x="112536" fg:w="166"/><text x="39.3258%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="39.0904%" y="245" width="1.7290%" height="15" fill="rgb(216,170,26)" fg:x="112702" fg:w="4985"/><text x="39.3834%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="39.0328%" y="261" width="1.8865%" height="15" fill="rgb(233,13,0)" fg:x="112536" fg:w="5439"/><text x="39.3258%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="38.5896%" y="277" width="2.3915%" height="15" fill="rgb(228,79,21)" fg:x="111258" fg:w="6895"/><text x="38.8825%" y="287.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="40.9811%" y="261" width="0.0756%" height="15" fill="rgb(244,17,41)" fg:x="118153" fg:w="218"/><text x="41.2741%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.0567%" y="261" width="0.1630%" height="15" fill="rgb(253,152,11)" fg:x="118371" fg:w="470"/><text x="41.3497%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="41.2197%" y="261" width="0.0416%" height="15" fill="rgb(254,94,47)" fg:x="118841" fg:w="120"/><text x="41.5127%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.2613%" y="261" width="0.1630%" height="15" fill="rgb(239,66,43)" fg:x="118961" fg:w="470"/><text x="41.5543%" y="271.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="41.4244%" y="245" width="0.0194%" height="15" fill="rgb(251,25,22)" fg:x="119431" fg:w="56"/><text x="41.7173%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="41.4438%" y="245" width="1.7290%" height="15" fill="rgb(227,65,46)" fg:x="119487" fg:w="4985"/><text x="41.7368%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="43.1728%" y="245" width="1.7290%" height="15" fill="rgb(240,180,32)" fg:x="124472" fg:w="4985"/><text x="43.4658%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="41.4244%" y="261" width="3.5899%" height="15" fill="rgb(242,11,35)" fg:x="119431" fg:w="10350"/><text x="41.7173%" y="271.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="40.9811%" y="277" width="4.1133%" height="15" fill="rgb(221,41,49)" fg:x="118153" fg:w="11859"/><text x="41.2741%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.0944%" y="261" width="0.0284%" height="15" fill="rgb(253,80,52)" fg:x="130012" fg:w="82"/><text x="45.3873%" y="271.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="45.1228%" y="261" width="0.1110%" height="15" fill="rgb(232,152,28)" fg:x="130094" fg:w="320"/><text x="45.4158%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.2338%" y="261" width="0.0284%" height="15" fill="rgb(219,110,12)" fg:x="130414" fg:w="82"/><text x="45.5268%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="45.0944%" y="277" width="0.2705%" height="15" fill="rgb(218,98,43)" fg:x="130012" fg:w="780"/><text x="45.3873%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (124,214 instructions, 43.08%)</title><rect x="2.3426%" y="293" width="43.0833%" height="15" fill="rgb(253,96,49)" fg:x="6754" fg:w="124214"/><text x="2.6356%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="45.4259%" y="277" width="0.0756%" height="15" fill="rgb(238,132,17)" fg:x="130968" fg:w="218"/><text x="45.7189%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.5016%" y="277" width="0.1630%" height="15" fill="rgb(208,82,25)" fg:x="131186" fg:w="470"/><text x="45.7945%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="45.6646%" y="277" width="0.0416%" height="15" fill="rgb(237,77,13)" fg:x="131656" fg:w="120"/><text x="45.9575%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.7062%" y="277" width="0.1630%" height="15" fill="rgb(230,6,11)" fg:x="131776" fg:w="470"/><text x="45.9992%" y="287.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="45.8692%" y="261" width="0.0576%" height="15" fill="rgb(207,29,48)" fg:x="132246" fg:w="166"/><text x="46.1622%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="45.9268%" y="261" width="1.7290%" height="15" fill="rgb(247,105,22)" fg:x="132412" fg:w="4985"/><text x="46.2198%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="45.8692%" y="277" width="1.8865%" height="15" fill="rgb(223,114,44)" fg:x="132246" fg:w="5439"/><text x="46.1622%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="45.4259%" y="293" width="2.3915%" height="15" fill="rgb(242,3,46)" fg:x="130968" fg:w="6895"/><text x="45.7189%" y="303.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="47.8175%" y="277" width="0.0756%" height="15" fill="rgb(243,197,8)" fg:x="137863" fg:w="218"/><text x="48.1104%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="47.8931%" y="277" width="0.1630%" height="15" fill="rgb(238,171,27)" fg:x="138081" fg:w="470"/><text x="48.1860%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="48.0561%" y="277" width="0.0416%" height="15" fill="rgb(254,144,27)" fg:x="138551" fg:w="120"/><text x="48.3491%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="48.0977%" y="277" width="0.1630%" height="15" fill="rgb(216,203,36)" fg:x="138671" fg:w="470"/><text x="48.3907%" y="287.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="48.2607%" y="261" width="0.0194%" height="15" fill="rgb(247,27,26)" fg:x="139141" fg:w="56"/><text x="48.5537%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="48.2802%" y="261" width="1.7290%" height="15" fill="rgb(234,180,24)" fg:x="139197" fg:w="4985"/><text x="48.5731%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="50.0092%" y="261" width="1.7290%" height="15" fill="rgb(221,50,43)" fg:x="144182" fg:w="4985"/><text x="50.3022%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="48.2607%" y="277" width="3.5899%" height="15" fill="rgb(236,50,6)" fg:x="139141" fg:w="10350"/><text x="48.5537%" y="287.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="47.8175%" y="293" width="4.1133%" height="15" fill="rgb(245,172,32)" fg:x="137863" fg:w="11859"/><text x="48.1104%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="51.9307%" y="277" width="0.0284%" height="15" fill="rgb(207,54,46)" fg:x="149722" fg:w="82"/><text x="52.2237%" y="287.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="51.9592%" y="277" width="0.1110%" height="15" fill="rgb(218,67,44)" fg:x="149804" fg:w="320"/><text x="52.2521%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="52.0702%" y="277" width="0.0284%" height="15" fill="rgb(208,152,22)" fg:x="150124" fg:w="82"/><text x="52.3631%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="51.9307%" y="293" width="0.2705%" height="15" fill="rgb(243,177,0)" fg:x="149722" fg:w="780"/><text x="52.2237%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (143,940 instructions, 49.93%)</title><rect x="2.3371%" y="309" width="49.9253%" height="15" fill="rgb(212,75,12)" fg:x="6738" fg:w="143940"/><text x="2.6300%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="52.2623%" y="293" width="0.0756%" height="15" fill="rgb(212,129,29)" fg:x="150678" fg:w="218"/><text x="52.5553%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.3379%" y="293" width="0.1630%" height="15" fill="rgb(241,229,35)" fg:x="150896" fg:w="470"/><text x="52.6309%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="52.5009%" y="293" width="0.0416%" height="15" fill="rgb(232,49,32)" fg:x="151366" fg:w="120"/><text x="52.7939%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.5426%" y="293" width="0.1630%" height="15" fill="rgb(243,119,48)" fg:x="151486" fg:w="470"/><text x="52.8355%" y="303.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="52.7056%" y="277" width="0.0576%" height="15" fill="rgb(212,205,30)" fg:x="151956" fg:w="166"/><text x="52.9986%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="52.7632%" y="277" width="1.7290%" height="15" fill="rgb(218,175,42)" fg:x="152122" fg:w="4985"/><text x="53.0561%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="52.7056%" y="293" width="1.8865%" height="15" fill="rgb(230,156,27)" fg:x="151956" fg:w="5439"/><text x="52.9986%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="52.2623%" y="309" width="2.3915%" height="15" fill="rgb(254,32,43)" fg:x="150678" fg:w="6895"/><text x="52.5553%" y="319.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="54.6538%" y="293" width="0.0756%" height="15" fill="rgb(246,89,34)" fg:x="157573" fg:w="218"/><text x="54.9468%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.7294%" y="293" width="0.1630%" height="15" fill="rgb(247,162,17)" fg:x="157791" fg:w="470"/><text x="55.0224%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="54.8925%" y="293" width="0.0416%" height="15" fill="rgb(219,71,37)" fg:x="158261" fg:w="120"/><text x="55.1854%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.9341%" y="293" width="0.1630%" height="15" fill="rgb(210,184,7)" fg:x="158381" fg:w="470"/><text x="55.2271%" y="303.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="55.0971%" y="277" width="0.0194%" height="15" fill="rgb(245,16,32)" fg:x="158851" fg:w="56"/><text x="55.3901%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="55.1165%" y="277" width="1.7290%" height="15" fill="rgb(209,62,7)" fg:x="158907" fg:w="4985"/><text x="55.4095%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="56.8456%" y="277" width="1.7290%" height="15" fill="rgb(215,16,15)" fg:x="163892" fg:w="4985"/><text x="57.1385%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="55.0971%" y="293" width="3.5899%" height="15" fill="rgb(223,60,14)" fg:x="158851" fg:w="10350"/><text x="55.3901%" y="303.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="54.6538%" y="309" width="4.1133%" height="15" fill="rgb(244,134,12)" fg:x="157573" fg:w="11859"/><text x="54.9468%" y="319.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="58.7671%" y="277" width="0.0756%" height="15" fill="rgb(224,3,41)" fg:x="169432" fg:w="218"/><text x="59.0601%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="58.8427%" y="277" width="0.1630%" height="15" fill="rgb(213,84,2)" fg:x="169650" fg:w="470"/><text x="59.1357%" y="287.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="59.0057%" y="277" width="0.0832%" height="15" fill="rgb(213,216,27)" fg:x="170120" fg:w="240"/><text x="59.2987%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="59.0890%" y="277" width="1.7290%" height="15" fill="rgb(218,76,35)" fg:x="170360" fg:w="4985"/><text x="59.3819%" y="287.50"></text></g><g><title>memcpy (129 instructions, 0.04%)</title><rect x="60.8180%" y="277" width="0.0447%" height="15" fill="rgb(253,89,24)" fg:x="175345" fg:w="129"/><text x="61.1110%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="60.8627%" y="277" width="0.1630%" height="15" fill="rgb(217,188,40)" fg:x="175474" fg:w="470"/><text x="61.1557%" y="287.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="61.0258%" y="261" width="0.0610%" height="15" fill="rgb(237,79,38)" fg:x="175944" fg:w="176"/><text x="61.3187%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="61.0868%" y="261" width="1.7290%" height="15" fill="rgb(215,116,13)" fg:x="176120" fg:w="4985"/><text x="61.3798%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="61.0258%" y="277" width="1.8900%" height="15" fill="rgb(249,66,35)" fg:x="175944" fg:w="5449"/><text x="61.3187%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,215 instructions, 4.24%)</title><rect x="58.7671%" y="293" width="4.2367%" height="15" fill="rgb(253,86,18)" fg:x="169432" fg:w="12215"/><text x="59.0601%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="63.0038%" y="293" width="0.0284%" height="15" fill="rgb(209,175,36)" fg:x="181647" fg:w="82"/><text x="63.2968%" y="303.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="63.0323%" y="293" width="0.1110%" height="15" fill="rgb(253,149,3)" fg:x="181729" fg:w="320"/><text x="63.3252%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,921 instructions, 4.48%)</title><rect x="58.7671%" y="309" width="4.4816%" height="15" fill="rgb(242,124,49)" fg:x="169432" fg:w="12921"/><text x="59.0601%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (175,808 instructions, 60.98%)</title><rect x="2.3315%" y="325" width="60.9786%" height="15" fill="rgb(219,171,24)" fg:x="6722" fg:w="175808"/><text x="2.6245%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="63.3101%" y="309" width="0.0756%" height="15" fill="rgb(216,121,30)" fg:x="182530" fg:w="218"/><text x="63.6031%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.3857%" y="309" width="0.1630%" height="15" fill="rgb(234,165,21)" fg:x="182748" fg:w="470"/><text x="63.6787%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="63.5487%" y="309" width="0.0416%" height="15" fill="rgb(234,103,40)" fg:x="183218" fg:w="120"/><text x="63.8417%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.5904%" y="309" width="0.1630%" height="15" fill="rgb(250,137,24)" fg:x="183338" fg:w="470"/><text x="63.8833%" y="319.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="63.7534%" y="293" width="0.0576%" height="15" fill="rgb(253,22,21)" fg:x="183808" fg:w="166"/><text x="64.0463%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="63.8110%" y="293" width="1.7290%" height="15" fill="rgb(243,22,5)" fg:x="183974" fg:w="4985"/><text x="64.1039%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="63.7534%" y="309" width="1.8865%" height="15" fill="rgb(212,56,7)" fg:x="183808" fg:w="5439"/><text x="64.0463%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="63.3101%" y="325" width="2.3915%" height="15" fill="rgb(223,190,49)" fg:x="182530" fg:w="6895"/><text x="63.6031%" y="335.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="65.7016%" y="309" width="0.0756%" height="15" fill="rgb(221,110,35)" fg:x="189425" fg:w="218"/><text x="65.9946%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="65.7772%" y="309" width="0.1630%" height="15" fill="rgb(212,113,34)" fg:x="189643" fg:w="470"/><text x="66.0702%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="65.9403%" y="309" width="0.0416%" height="15" fill="rgb(216,125,47)" fg:x="190113" fg:w="120"/><text x="66.2332%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="65.9819%" y="309" width="0.1630%" height="15" fill="rgb(251,112,19)" fg:x="190233" fg:w="470"/><text x="66.2748%" y="319.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="66.1449%" y="293" width="0.0194%" height="15" fill="rgb(254,200,41)" fg:x="190703" fg:w="56"/><text x="66.4379%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="66.1643%" y="293" width="1.7290%" height="15" fill="rgb(225,17,42)" fg:x="190759" fg:w="4985"/><text x="66.4573%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="67.8934%" y="293" width="1.7290%" height="15" fill="rgb(208,105,35)" fg:x="195744" fg:w="4985"/><text x="68.1863%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="66.1449%" y="309" width="3.5899%" height="15" fill="rgb(210,125,51)" fg:x="190703" fg:w="10350"/><text x="66.4379%" y="319.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="65.7016%" y="325" width="4.1133%" height="15" fill="rgb(227,213,18)" fg:x="189425" fg:w="11859"/><text x="65.9946%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.8149%" y="309" width="0.0284%" height="15" fill="rgb(221,174,32)" fg:x="201284" fg:w="82"/><text x="70.1079%" y="319.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="69.8433%" y="309" width="0.1110%" height="15" fill="rgb(234,23,1)" fg:x="201366" fg:w="320"/><text x="70.1363%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.9543%" y="309" width="0.0284%" height="15" fill="rgb(209,65,17)" fg:x="201686" fg:w="82"/><text x="70.2473%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="69.8149%" y="325" width="0.2705%" height="15" fill="rgb(206,224,31)" fg:x="201284" fg:w="780"/><text x="70.1079%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (195,534 instructions, 67.82%)</title><rect x="2.3260%" y="341" width="67.8205%" height="15" fill="rgb(230,20,38)" fg:x="6706" fg:w="195534"/><text x="2.6189%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="70.1465%" y="325" width="0.0756%" height="15" fill="rgb(211,9,41)" fg:x="202240" fg:w="218"/><text x="70.4394%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.2221%" y="325" width="0.1630%" height="15" fill="rgb(233,214,4)" fg:x="202458" fg:w="470"/><text x="70.5151%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="70.3851%" y="325" width="0.0416%" height="15" fill="rgb(225,60,54)" fg:x="202928" fg:w="120"/><text x="70.6781%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.4267%" y="325" width="0.1630%" height="15" fill="rgb(206,228,35)" fg:x="203048" fg:w="470"/><text x="70.7197%" y="335.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="70.5897%" y="309" width="0.0576%" height="15" fill="rgb(212,178,50)" fg:x="203518" fg:w="166"/><text x="70.8827%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="70.6473%" y="309" width="1.7290%" height="15" fill="rgb(206,192,33)" fg:x="203684" fg:w="4985"/><text x="70.9403%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="70.5897%" y="325" width="1.8865%" height="15" fill="rgb(238,210,1)" fg:x="203518" fg:w="5439"/><text x="70.8827%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="70.1465%" y="341" width="2.3915%" height="15" fill="rgb(205,65,52)" fg:x="202240" fg:w="6895"/><text x="70.4394%" y="351.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="72.5380%" y="325" width="0.0756%" height="15" fill="rgb(237,204,51)" fg:x="209135" fg:w="218"/><text x="72.8310%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.6136%" y="325" width="0.1630%" height="15" fill="rgb(213,119,51)" fg:x="209353" fg:w="470"/><text x="72.9066%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="72.7766%" y="325" width="0.0416%" height="15" fill="rgb(244,156,37)" fg:x="209823" fg:w="120"/><text x="73.0696%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.8182%" y="325" width="0.1630%" height="15" fill="rgb(249,96,18)" fg:x="209943" fg:w="470"/><text x="73.1112%" y="335.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="72.9813%" y="309" width="0.0194%" height="15" fill="rgb(231,65,11)" fg:x="210413" fg:w="56"/><text x="73.2742%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="73.0007%" y="309" width="1.7290%" height="15" fill="rgb(240,187,2)" fg:x="210469" fg:w="4985"/><text x="73.2937%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="74.7297%" y="309" width="1.7290%" height="15" fill="rgb(242,121,39)" fg:x="215454" fg:w="4985"/><text x="75.0227%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="72.9813%" y="325" width="3.5899%" height="15" fill="rgb(233,205,18)" fg:x="210413" fg:w="10350"/><text x="73.2742%" y="335.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="72.5380%" y="341" width="4.1133%" height="15" fill="rgb(219,67,33)" fg:x="209135" fg:w="11859"/><text x="72.8310%" y="351.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="76.6513%" y="309" width="0.0756%" height="15" fill="rgb(227,84,12)" fg:x="220994" fg:w="218"/><text x="76.9442%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="76.7269%" y="309" width="0.1630%" height="15" fill="rgb(227,42,52)" fg:x="221212" fg:w="470"/><text x="77.0198%" y="319.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="76.8899%" y="309" width="0.0832%" height="15" fill="rgb(231,27,28)" fg:x="221682" fg:w="240"/><text x="77.1829%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="76.9731%" y="309" width="1.7290%" height="15" fill="rgb(238,42,2)" fg:x="221922" fg:w="4985"/><text x="77.2661%" y="319.50"></text></g><g><title>memcpy (129 instructions, 0.04%)</title><rect x="78.7022%" y="309" width="0.0447%" height="15" fill="rgb(215,15,9)" fg:x="226907" fg:w="129"/><text x="78.9951%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="78.7469%" y="309" width="0.1630%" height="15" fill="rgb(205,195,15)" fg:x="227036" fg:w="470"/><text x="79.0399%" y="319.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="78.9099%" y="293" width="0.0610%" height="15" fill="rgb(233,143,2)" fg:x="227506" fg:w="176"/><text x="79.2029%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="78.9710%" y="293" width="1.7290%" height="15" fill="rgb(207,108,8)" fg:x="227682" fg:w="4985"/><text x="79.2639%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="78.9099%" y="309" width="1.8900%" height="15" fill="rgb(214,53,21)" fg:x="227506" fg:w="5449"/><text x="79.2029%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,215 instructions, 4.24%)</title><rect x="76.6513%" y="325" width="4.2367%" height="15" fill="rgb(238,212,36)" fg:x="220994" fg:w="12215"/><text x="76.9442%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="80.8880%" y="325" width="0.0284%" height="15" fill="rgb(218,151,47)" fg:x="233209" fg:w="82"/><text x="81.1810%" y="335.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="80.9164%" y="325" width="0.1110%" height="15" fill="rgb(245,160,3)" fg:x="233291" fg:w="320"/><text x="81.2094%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,921 instructions, 4.48%)</title><rect x="76.6513%" y="341" width="4.4816%" height="15" fill="rgb(238,106,19)" fg:x="220994" fg:w="12921"/><text x="76.9442%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (227,402 instructions, 78.87%)</title><rect x="2.3204%" y="357" width="78.8739%" height="15" fill="rgb(207,206,9)" fg:x="6690" fg:w="227402"/><text x="2.6134%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="81.1943%" y="341" width="0.0756%" height="15" fill="rgb(254,40,10)" fg:x="234092" fg:w="218"/><text x="81.4872%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.2699%" y="341" width="0.1630%" height="15" fill="rgb(245,81,8)" fg:x="234310" fg:w="470"/><text x="81.5628%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="81.4329%" y="341" width="0.0416%" height="15" fill="rgb(214,119,17)" fg:x="234780" fg:w="120"/><text x="81.7259%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.4745%" y="341" width="0.1630%" height="15" fill="rgb(245,100,39)" fg:x="234900" fg:w="470"/><text x="81.7675%" y="351.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="81.6375%" y="325" width="0.0576%" height="15" fill="rgb(243,105,16)" fg:x="235370" fg:w="166"/><text x="81.9305%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="81.6951%" y="325" width="1.7290%" height="15" fill="rgb(214,53,2)" fg:x="235536" fg:w="4985"/><text x="81.9881%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="81.6375%" y="341" width="1.8865%" height="15" fill="rgb(251,54,50)" fg:x="235370" fg:w="5439"/><text x="81.9305%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="81.1943%" y="357" width="2.3915%" height="15" fill="rgb(244,121,37)" fg:x="234092" fg:w="6895"/><text x="81.4872%" y="367.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="83.5858%" y="341" width="0.0756%" height="15" fill="rgb(236,158,39)" fg:x="240987" fg:w="218"/><text x="83.8787%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.6614%" y="341" width="0.1630%" height="15" fill="rgb(226,25,37)" fg:x="241205" fg:w="470"/><text x="83.9544%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="83.8244%" y="341" width="0.0416%" height="15" fill="rgb(222,71,46)" fg:x="241675" fg:w="120"/><text x="84.1174%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.8660%" y="341" width="0.1630%" height="15" fill="rgb(209,27,29)" fg:x="241795" fg:w="470"/><text x="84.1590%" y="351.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="84.0291%" y="325" width="0.0194%" height="15" fill="rgb(210,196,17)" fg:x="242265" fg:w="56"/><text x="84.3220%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="84.0485%" y="325" width="1.7290%" height="15" fill="rgb(236,76,23)" fg:x="242321" fg:w="4985"/><text x="84.3414%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="85.7775%" y="325" width="1.7290%" height="15" fill="rgb(214,33,32)" fg:x="247306" fg:w="4985"/><text x="86.0705%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="84.0291%" y="341" width="3.5899%" height="15" fill="rgb(243,16,26)" fg:x="242265" fg:w="10350"/><text x="84.3220%" y="351.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="83.5858%" y="357" width="4.1133%" height="15" fill="rgb(241,30,48)" fg:x="240987" fg:w="11859"/><text x="83.8787%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.6990%" y="341" width="0.0284%" height="15" fill="rgb(241,106,1)" fg:x="252846" fg:w="82"/><text x="87.9920%" y="351.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="87.7275%" y="341" width="0.1110%" height="15" fill="rgb(230,62,29)" fg:x="252928" fg:w="320"/><text x="88.0205%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.8385%" y="341" width="0.0284%" height="15" fill="rgb(207,166,53)" fg:x="253248" fg:w="82"/><text x="88.1314%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="87.6990%" y="357" width="0.2705%" height="15" fill="rgb(244,54,13)" fg:x="252846" fg:w="780"/><text x="87.9920%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (247,128 instructions, 85.72%)</title><rect x="2.3149%" y="373" width="85.7158%" height="15" fill="rgb(205,144,19)" fg:x="6674" fg:w="247128"/><text x="2.6078%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.0306%" y="277" width="0.0284%" height="15" fill="rgb(225,165,45)" fg:x="253802" fg:w="82"/><text x="88.3236%" y="287.50"></text></g><g><title>memcpy (195 instructions, 0.07%)</title><rect x="88.0591%" y="277" width="0.0676%" height="15" fill="rgb(220,140,6)" fg:x="253884" fg:w="195"/><text x="88.3520%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="88.1267%" y="277" width="0.0281%" height="15" fill="rgb(234,69,14)" fg:x="254079" fg:w="81"/><text x="88.4197%" y="287.50"></text></g><g><title>__rust_realloc (444 instructions, 0.15%)</title><rect x="88.0306%" y="293" width="0.1540%" height="15" fill="rgb(243,24,33)" fg:x="253802" fg:w="444"/><text x="88.3236%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.17%)</title><rect x="88.0306%" y="309" width="0.1661%" height="15" fill="rgb(253,100,43)" fg:x="253802" fg:w="479"/><text x="88.3236%" y="319.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.2228%" y="293" width="0.0277%" height="15" fill="rgb(221,168,15)" fg:x="254356" fg:w="80"/><text x="88.5158%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.2228%" y="309" width="0.0399%" height="15" fill="rgb(237,15,11)" fg:x="254356" fg:w="115"/><text x="88.5158%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (744 instructions, 0.26%)</title><rect x="88.0306%" y="325" width="0.2581%" height="15" fill="rgb(229,207,40)" fg:x="253802" fg:w="744"/><text x="88.3236%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.2887%" y="325" width="0.0773%" height="15" fill="rgb(246,125,48)" fg:x="254546" fg:w="223"/><text x="88.5817%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,046 instructions, 0.36%)</title><rect x="88.0306%" y="341" width="0.3628%" height="15" fill="rgb(231,65,10)" fg:x="253802" fg:w="1046"/><text x="88.3236%" y="351.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.4201%" y="309" width="0.0277%" height="15" fill="rgb(222,152,40)" fg:x="254925" fg:w="80"/><text x="88.7131%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.4201%" y="325" width="0.0399%" height="15" fill="rgb(214,12,30)" fg:x="254925" fg:w="115"/><text x="88.7131%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.4201%" y="341" width="0.0659%" height="15" fill="rgb(239,80,41)" fg:x="254925" fg:w="190"/><text x="88.7131%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.4860%" y="309" width="0.1020%" height="15" fill="rgb(206,175,27)" fg:x="255115" fg:w="294"/><text x="88.7790%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.4860%" y="325" width="0.1252%" height="15" fill="rgb(222,43,39)" fg:x="255115" fg:w="361"/><text x="88.7790%" y="335.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.6380%" y="277" width="0.0277%" height="15" fill="rgb(243,47,50)" fg:x="255553" fg:w="80"/><text x="88.9309%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.6380%" y="293" width="0.0399%" height="15" fill="rgb(243,61,21)" fg:x="255553" fg:w="115"/><text x="88.9309%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.6380%" y="309" width="0.0659%" height="15" fill="rgb(208,172,5)" fg:x="255553" fg:w="190"/><text x="88.9309%" y="319.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.7039%" y="277" width="0.1020%" height="15" fill="rgb(219,24,25)" fg:x="255743" fg:w="294"/><text x="88.9968%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.7039%" y="293" width="0.1252%" height="15" fill="rgb(235,42,41)" fg:x="255743" fg:w="361"/><text x="88.9968%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.8558%" y="261" width="0.0773%" height="15" fill="rgb(226,190,24)" fg:x="256181" fg:w="223"/><text x="89.1488%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="88.8558%" y="277" width="0.1006%" height="15" fill="rgb(216,55,27)" fg:x="256181" fg:w="290"/><text x="89.1488%" y="287.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.9831%" y="197" width="0.0277%" height="15" fill="rgb(231,77,14)" fg:x="256548" fg:w="80"/><text x="89.2760%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.9831%" y="213" width="0.0399%" height="15" fill="rgb(208,108,34)" fg:x="256548" fg:w="115"/><text x="89.2760%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="88.9831%" y="229" width="0.0659%" height="15" fill="rgb(228,183,52)" fg:x="256548" fg:w="190"/><text x="89.2760%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.0490%" y="229" width="0.0773%" height="15" fill="rgb(224,152,1)" fg:x="256738" fg:w="223"/><text x="89.3419%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (485 instructions, 0.17%)</title><rect x="88.9831%" y="245" width="0.1682%" height="15" fill="rgb(246,115,8)" fg:x="256548" fg:w="485"/><text x="89.2760%" y="255.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.1780%" y="213" width="0.1020%" height="15" fill="rgb(211,76,13)" fg:x="257110" fg:w="294"/><text x="89.4710%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.1780%" y="229" width="0.1252%" height="15" fill="rgb(233,214,49)" fg:x="257110" fg:w="361"/><text x="89.4710%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.3299%" y="197" width="0.0773%" height="15" fill="rgb(223,44,51)" fg:x="257548" fg:w="223"/><text x="89.6229%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.3299%" y="213" width="0.1006%" height="15" fill="rgb(225,111,51)" fg:x="257548" fg:w="290"/><text x="89.6229%" y="223.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.4572%" y="181" width="0.1020%" height="15" fill="rgb(231,185,26)" fg:x="257915" fg:w="294"/><text x="89.7502%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.4572%" y="197" width="0.1252%" height="15" fill="rgb(233,111,30)" fg:x="257915" fg:w="361"/><text x="89.7502%" y="207.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.6091%" y="117" width="0.0277%" height="15" fill="rgb(250,1,47)" fg:x="258353" fg:w="80"/><text x="89.9021%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.6091%" y="133" width="0.0399%" height="15" fill="rgb(254,210,3)" fg:x="258353" fg:w="115"/><text x="89.9021%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="89.6091%" y="149" width="0.0659%" height="15" fill="rgb(234,14,22)" fg:x="258353" fg:w="190"/><text x="89.9021%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.6750%" y="149" width="0.1020%" height="15" fill="rgb(221,117,4)" fg:x="258543" fg:w="294"/><text x="89.9680%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (558 instructions, 0.19%)</title><rect x="89.6091%" y="165" width="0.1935%" height="15" fill="rgb(251,147,27)" fg:x="258353" fg:w="558"/><text x="89.9021%" y="175.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.8294%" y="133" width="0.0773%" height="15" fill="rgb(226,52,11)" fg:x="258988" fg:w="223"/><text x="90.1224%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.8294%" y="149" width="0.1006%" height="15" fill="rgb(229,222,5)" fg:x="258988" fg:w="290"/><text x="90.1224%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.9567%" y="117" width="0.1020%" height="15" fill="rgb(232,76,2)" fg:x="259355" fg:w="294"/><text x="90.2496%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.9567%" y="133" width="0.1252%" height="15" fill="rgb(242,108,2)" fg:x="259355" fg:w="361"/><text x="90.2496%" y="143.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.1086%" y="101" width="0.0773%" height="15" fill="rgb(213,165,6)" fg:x="259793" fg:w="223"/><text x="90.4016%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.1086%" y="117" width="0.1006%" height="15" fill="rgb(222,24,42)" fg:x="259793" fg:w="290"/><text x="90.4016%" y="127.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.2359%" y="69" width="0.0773%" height="15" fill="rgb(242,170,24)" fg:x="260160" fg:w="223"/><text x="90.5289%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.2359%" y="85" width="0.1006%" height="15" fill="rgb(209,110,40)" fg:x="260160" fg:w="290"/><text x="90.5289%" y="95.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="90.3632%" y="53" width="0.0416%" height="15" fill="rgb(233,146,36)" fg:x="260527" fg:w="120"/><text x="90.6562%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (182 instructions, 0.06%)</title><rect x="90.3632%" y="69" width="0.0631%" height="15" fill="rgb(229,33,32)" fg:x="260527" fg:w="182"/><text x="90.6562%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="90.4263%" y="37" width="0.0104%" height="15" fill="rgb(225,55,34)" fg:x="260709" fg:w="30"/><text x="90.7193%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (92 instructions, 0.03%)</title><rect x="90.4263%" y="53" width="0.0319%" height="15" fill="rgb(217,32,50)" fg:x="260709" fg:w="92"/><text x="90.7193%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (178 instructions, 0.06%)</title><rect x="90.4263%" y="69" width="0.0617%" height="15" fill="rgb(206,110,53)" fg:x="260709" fg:w="178"/><text x="90.7193%" y="79.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.5200%" y="53" width="0.0773%" height="15" fill="rgb(247,25,10)" fg:x="260979" fg:w="223"/><text x="90.8129%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.5200%" y="69" width="0.1006%" height="15" fill="rgb(226,67,48)" fg:x="260979" fg:w="290"/><text x="90.8129%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (819 instructions, 0.28%)</title><rect x="90.3632%" y="85" width="0.2841%" height="15" fill="rgb(239,73,28)" fg:x="260527" fg:w="819"/><text x="90.6562%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,275 instructions, 0.44%)</title><rect x="90.2359%" y="101" width="0.4422%" height="15" fill="rgb(234,200,41)" fg:x="260160" fg:w="1275"/><text x="90.5289%" y="111.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.7090%" y="85" width="0.0773%" height="15" fill="rgb(233,76,35)" fg:x="261524" fg:w="223"/><text x="91.0020%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.7090%" y="101" width="0.1006%" height="15" fill="rgb(238,166,31)" fg:x="261524" fg:w="290"/><text x="91.0020%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,731 instructions, 0.60%)</title><rect x="90.2359%" y="117" width="0.6004%" height="15" fill="rgb(219,218,51)" fg:x="260160" fg:w="1731"/><text x="90.5289%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,187 instructions, 0.76%)</title><rect x="90.1086%" y="133" width="0.7586%" height="15" fill="rgb(221,82,53)" fg:x="259793" fg:w="2187"/><text x="90.4016%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,714 instructions, 0.94%)</title><rect x="89.9567%" y="149" width="0.9413%" height="15" fill="rgb(218,179,13)" fg:x="259355" fg:w="2714"/><text x="90.2496%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,170 instructions, 1.10%)</title><rect x="89.8294%" y="165" width="1.0995%" height="15" fill="rgb(210,53,38)" fg:x="258988" fg:w="3170"/><text x="90.1224%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,894 instructions, 1.35%)</title><rect x="89.6091%" y="181" width="1.3506%" height="15" fill="rgb(214,167,31)" fg:x="258353" fg:w="3894"/><text x="89.9021%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.9906%" y="165" width="0.0773%" height="15" fill="rgb(223,26,5)" fg:x="262336" fg:w="223"/><text x="91.2836%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.9906%" y="181" width="0.1006%" height="15" fill="rgb(218,95,23)" fg:x="262336" fg:w="290"/><text x="91.2836%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,350 instructions, 1.51%)</title><rect x="89.6091%" y="197" width="1.5088%" height="15" fill="rgb(248,205,45)" fg:x="258353" fg:w="4350"/><text x="89.9021%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,877 instructions, 1.69%)</title><rect x="89.4572%" y="213" width="1.6916%" height="15" fill="rgb(211,76,6)" fg:x="257915" fg:w="4877"/><text x="89.7502%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,333 instructions, 1.85%)</title><rect x="89.3299%" y="229" width="1.8497%" height="15" fill="rgb(250,176,29)" fg:x="257548" fg:w="5333"/><text x="89.6229%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,860 instructions, 2.03%)</title><rect x="89.1780%" y="245" width="2.0325%" height="15" fill="rgb(240,107,31)" fg:x="257110" fg:w="5860"/><text x="89.4710%" y="255.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,511 instructions, 2.26%)</title><rect x="88.9831%" y="261" width="2.2583%" height="15" fill="rgb(229,215,17)" fg:x="256548" fg:w="6511"/><text x="89.2760%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="91.2723%" y="213" width="0.0277%" height="15" fill="rgb(240,79,8)" fg:x="263148" fg:w="80"/><text x="91.5652%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="91.2723%" y="229" width="0.0399%" height="15" fill="rgb(243,110,48)" fg:x="263148" fg:w="115"/><text x="91.5652%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (190 instructions, 0.07%)</title><rect x="91.2723%" y="245" width="0.0659%" height="15" fill="rgb(236,201,9)" fg:x="263148" fg:w="190"/><text x="91.5652%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.3382%" y="245" width="0.0773%" height="15" fill="rgb(220,87,26)" fg:x="263338" fg:w="223"/><text x="91.6311%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (487 instructions, 0.17%)</title><rect x="91.2723%" y="261" width="0.1689%" height="15" fill="rgb(212,118,27)" fg:x="263148" fg:w="487"/><text x="91.5652%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,164 instructions, 2.48%)</title><rect x="88.9831%" y="277" width="2.4848%" height="15" fill="rgb(244,178,50)" fg:x="256548" fg:w="7164"/><text x="89.2760%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,620 instructions, 2.64%)</title><rect x="88.8558%" y="293" width="2.6430%" height="15" fill="rgb(215,204,7)" fg:x="256181" fg:w="7620"/><text x="89.1488%" y="303.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,147 instructions, 2.83%)</title><rect x="88.7039%" y="309" width="2.8258%" height="15" fill="rgb(214,122,43)" fg:x="255743" fg:w="8147"/><text x="88.9968%" y="319.50">&lt;i..</text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.5622%" y="293" width="0.0773%" height="15" fill="rgb(251,178,26)" fg:x="263984" fg:w="223"/><text x="91.8552%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.5622%" y="309" width="0.1006%" height="15" fill="rgb(210,7,35)" fg:x="263984" fg:w="290"/><text x="91.8552%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,798 instructions, 3.05%)</title><rect x="88.6380%" y="325" width="3.0516%" height="15" fill="rgb(227,164,54)" fg:x="255553" fg:w="8798"/><text x="88.9309%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,325 instructions, 3.23%)</title><rect x="88.4860%" y="341" width="3.2344%" height="15" fill="rgb(205,18,34)" fg:x="255115" fg:w="9325"/><text x="88.7790%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,732 instructions, 3.72%)</title><rect x="88.0306%" y="357" width="3.7224%" height="15" fill="rgb(239,50,19)" fg:x="253802" fg:w="10732"/><text x="88.3236%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,821 instructions, 3.75%)</title><rect x="88.0306%" y="373" width="3.7532%" height="15" fill="rgb(224,85,6)" fg:x="253802" fg:w="10821"/><text x="88.3236%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8099%" y="69" width="0.0437%" height="15" fill="rgb(252,167,34)" fg:x="264698" fg:w="126"/><text x="92.1029%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (148 instructions, 0.05%)</title><rect x="91.8064%" y="85" width="0.0513%" height="15" fill="rgb(243,180,35)" fg:x="264688" fg:w="148"/><text x="92.0994%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8595%" y="85" width="0.0437%" height="15" fill="rgb(213,214,53)" fg:x="264841" fg:w="126"/><text x="92.1525%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (300 instructions, 0.10%)</title><rect x="91.8047%" y="101" width="0.1041%" height="15" fill="rgb(244,39,37)" fg:x="264683" fg:w="300"/><text x="92.0977%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9087%" y="101" width="0.0437%" height="15" fill="rgb(215,141,14)" fg:x="264983" fg:w="126"/><text x="92.2017%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (442 instructions, 0.15%)</title><rect x="91.8047%" y="117" width="0.1533%" height="15" fill="rgb(210,2,42)" fg:x="264683" fg:w="442"/><text x="92.0977%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="91.9597%" y="101" width="0.0219%" height="15" fill="rgb(252,189,47)" fg:x="265130" fg:w="63"/><text x="92.2527%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.06%)</title><rect x="91.9597%" y="117" width="0.0576%" height="15" fill="rgb(222,154,47)" fg:x="265130" fg:w="166"/><text x="92.2527%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (634 instructions, 0.22%)</title><rect x="91.8029%" y="133" width="0.2199%" height="15" fill="rgb(228,20,37)" fg:x="264678" fg:w="634"/><text x="92.0959%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0229%" y="117" width="0.0191%" height="15" fill="rgb(236,17,4)" fg:x="265312" fg:w="55"/><text x="92.3158%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0419%" y="117" width="0.0219%" height="15" fill="rgb(222,211,31)" fg:x="265367" fg:w="63"/><text x="92.3349%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.0229%" y="133" width="0.0701%" height="15" fill="rgb(218,134,25)" fg:x="265312" fg:w="202"/><text x="92.3158%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (857 instructions, 0.30%)</title><rect x="91.8012%" y="149" width="0.2972%" height="15" fill="rgb(218,97,43)" fg:x="264673" fg:w="857"/><text x="92.0942%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0985%" y="133" width="0.0191%" height="15" fill="rgb(234,163,32)" fg:x="265530" fg:w="55"/><text x="92.3914%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1175%" y="133" width="0.0219%" height="15" fill="rgb(251,171,42)" fg:x="265585" fg:w="63"/><text x="92.4105%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.0985%" y="149" width="0.0701%" height="15" fill="rgb(223,104,12)" fg:x="265530" fg:w="202"/><text x="92.3914%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,080 instructions, 0.37%)</title><rect x="91.7995%" y="165" width="0.3746%" height="15" fill="rgb(225,29,49)" fg:x="264668" fg:w="1080"/><text x="92.0924%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1741%" y="149" width="0.0191%" height="15" fill="rgb(253,77,7)" fg:x="265748" fg:w="55"/><text x="92.4670%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1932%" y="149" width="0.0219%" height="15" fill="rgb(213,81,26)" fg:x="265803" fg:w="63"/><text x="92.4861%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.1741%" y="165" width="0.0701%" height="15" fill="rgb(246,126,6)" fg:x="265748" fg:w="202"/><text x="92.4670%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,303 instructions, 0.45%)</title><rect x="91.7977%" y="181" width="0.4519%" height="15" fill="rgb(232,186,21)" fg:x="264663" fg:w="1303"/><text x="92.0907%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2497%" y="165" width="0.0191%" height="15" fill="rgb(215,126,18)" fg:x="265966" fg:w="55"/><text x="92.5427%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.2688%" y="165" width="0.0219%" height="15" fill="rgb(210,47,5)" fg:x="266021" fg:w="63"/><text x="92.5617%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2497%" y="181" width="0.0701%" height="15" fill="rgb(240,70,6)" fg:x="265966" fg:w="202"/><text x="92.5427%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,521 instructions, 0.53%)</title><rect x="91.7977%" y="197" width="0.5276%" height="15" fill="rgb(230,99,49)" fg:x="264663" fg:w="1521"/><text x="92.0907%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3270%" y="181" width="0.0191%" height="15" fill="rgb(212,57,36)" fg:x="266189" fg:w="55"/><text x="92.6200%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3461%" y="181" width="0.0219%" height="15" fill="rgb(243,14,50)" fg:x="266244" fg:w="63"/><text x="92.6391%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.3270%" y="197" width="0.0701%" height="15" fill="rgb(240,2,53)" fg:x="266189" fg:w="202"/><text x="92.6200%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,749 instructions, 0.61%)</title><rect x="91.7960%" y="213" width="0.6066%" height="15" fill="rgb(208,47,53)" fg:x="264658" fg:w="1749"/><text x="92.0890%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4026%" y="197" width="0.0191%" height="15" fill="rgb(235,186,39)" fg:x="266407" fg:w="55"/><text x="92.6956%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4217%" y="197" width="0.0219%" height="15" fill="rgb(212,35,47)" fg:x="266462" fg:w="63"/><text x="92.7147%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.4026%" y="213" width="0.0701%" height="15" fill="rgb(248,59,37)" fg:x="266407" fg:w="202"/><text x="92.6956%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,972 instructions, 0.68%)</title><rect x="91.7943%" y="229" width="0.6840%" height="15" fill="rgb(223,186,16)" fg:x="264653" fg:w="1972"/><text x="92.0872%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4783%" y="213" width="0.0191%" height="15" fill="rgb(215,106,35)" fg:x="266625" fg:w="55"/><text x="92.7712%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4973%" y="213" width="0.0219%" height="15" fill="rgb(217,141,29)" fg:x="266680" fg:w="63"/><text x="92.7903%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.4783%" y="229" width="0.0701%" height="15" fill="rgb(221,227,46)" fg:x="266625" fg:w="202"/><text x="92.7712%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,195 instructions, 0.76%)</title><rect x="91.7925%" y="245" width="0.7613%" height="15" fill="rgb(212,36,41)" fg:x="264648" fg:w="2195"/><text x="92.0855%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5539%" y="229" width="0.0191%" height="15" fill="rgb(222,35,11)" fg:x="266843" fg:w="55"/><text x="92.8468%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5730%" y="229" width="0.0219%" height="15" fill="rgb(232,165,33)" fg:x="266898" fg:w="63"/><text x="92.8659%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5539%" y="245" width="0.0701%" height="15" fill="rgb(211,38,20)" fg:x="266843" fg:w="202"/><text x="92.8468%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,418 instructions, 0.84%)</title><rect x="91.7908%" y="261" width="0.8387%" height="15" fill="rgb(230,7,36)" fg:x="264643" fg:w="2418"/><text x="92.0838%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6295%" y="245" width="0.0191%" height="15" fill="rgb(213,128,35)" fg:x="267061" fg:w="55"/><text x="92.9225%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6486%" y="245" width="0.0219%" height="15" fill="rgb(218,11,14)" fg:x="267116" fg:w="63"/><text x="92.9415%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.6295%" y="261" width="0.0701%" height="15" fill="rgb(249,105,7)" fg:x="267061" fg:w="202"/><text x="92.9225%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,636 instructions, 0.91%)</title><rect x="91.7908%" y="277" width="0.9143%" height="15" fill="rgb(226,125,21)" fg:x="264643" fg:w="2636"/><text x="92.0838%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7068%" y="261" width="0.0191%" height="15" fill="rgb(239,90,47)" fg:x="267284" fg:w="55"/><text x="92.9998%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7259%" y="261" width="0.0219%" height="15" fill="rgb(226,19,1)" fg:x="267339" fg:w="63"/><text x="93.0189%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.7068%" y="277" width="0.0701%" height="15" fill="rgb(205,117,40)" fg:x="267284" fg:w="202"/><text x="92.9998%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,864 instructions, 0.99%)</title><rect x="91.7891%" y="293" width="0.9934%" height="15" fill="rgb(234,6,54)" fg:x="264638" fg:w="2864"/><text x="92.0820%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7824%" y="277" width="0.0191%" height="15" fill="rgb(239,73,32)" fg:x="267502" fg:w="55"/><text x="93.0754%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8015%" y="277" width="0.0219%" height="15" fill="rgb(226,197,12)" fg:x="267557" fg:w="63"/><text x="93.0945%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.7824%" y="293" width="0.0701%" height="15" fill="rgb(226,53,42)" fg:x="267502" fg:w="202"/><text x="93.0754%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,087 instructions, 1.07%)</title><rect x="91.7873%" y="309" width="1.0707%" height="15" fill="rgb(234,99,30)" fg:x="264633" fg:w="3087"/><text x="92.0803%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8581%" y="293" width="0.0191%" height="15" fill="rgb(237,175,49)" fg:x="267720" fg:w="55"/><text x="93.1510%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8771%" y="293" width="0.0219%" height="15" fill="rgb(228,75,42)" fg:x="267775" fg:w="63"/><text x="93.1701%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.8581%" y="309" width="0.0701%" height="15" fill="rgb(223,162,48)" fg:x="267720" fg:w="202"/><text x="93.1510%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,305 instructions, 1.15%)</title><rect x="91.7873%" y="325" width="1.1463%" height="15" fill="rgb(221,192,29)" fg:x="264633" fg:w="3305"/><text x="92.0803%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9354%" y="309" width="0.0191%" height="15" fill="rgb(249,150,41)" fg:x="267943" fg:w="55"/><text x="93.2284%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9545%" y="309" width="0.0219%" height="15" fill="rgb(243,107,34)" fg:x="267998" fg:w="63"/><text x="93.2475%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.9354%" y="325" width="0.0701%" height="15" fill="rgb(214,227,11)" fg:x="267943" fg:w="202"/><text x="93.2284%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,533 instructions, 1.23%)</title><rect x="91.7856%" y="341" width="1.2254%" height="15" fill="rgb(209,37,13)" fg:x="264628" fg:w="3533"/><text x="92.0786%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0110%" y="325" width="0.0191%" height="15" fill="rgb(249,124,20)" fg:x="268161" fg:w="55"/><text x="93.3040%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0301%" y="325" width="0.0219%" height="15" fill="rgb(228,28,2)" fg:x="268216" fg:w="63"/><text x="93.3231%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0110%" y="341" width="0.0701%" height="15" fill="rgb(244,55,1)" fg:x="268161" fg:w="202"/><text x="93.3040%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,756 instructions, 1.30%)</title><rect x="91.7839%" y="357" width="1.3028%" height="15" fill="rgb(216,26,19)" fg:x="264623" fg:w="3756"/><text x="92.0768%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0866%" y="341" width="0.0191%" height="15" fill="rgb(209,162,10)" fg:x="268379" fg:w="55"/><text x="93.3796%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.1057%" y="341" width="0.0219%" height="15" fill="rgb(235,168,42)" fg:x="268434" fg:w="63"/><text x="93.3987%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0866%" y="357" width="0.0701%" height="15" fill="rgb(240,24,14)" fg:x="268379" fg:w="202"/><text x="93.3796%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,974 instructions, 1.38%)</title><rect x="91.7839%" y="373" width="1.3784%" height="15" fill="rgb(224,107,11)" fg:x="264623" fg:w="3974"/><text x="92.0768%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.1622%" y="357" width="0.0191%" height="15" fill="rgb(226,48,4)" fg:x="268597" fg:w="55"/><text x="93.4552%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (159 instructions, 0.06%)</title><rect x="93.1622%" y="373" width="0.0551%" height="15" fill="rgb(254,31,21)" fg:x="268597" fg:w="159"/><text x="93.4552%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.03%)</title><rect x="93.2174%" y="373" width="0.0326%" height="15" fill="rgb(205,156,19)" fg:x="268756" fg:w="94"/><text x="93.5104%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.02%)</title><rect x="93.2500%" y="341" width="0.0173%" height="15" fill="rgb(216,73,31)" fg:x="268850" fg:w="50"/><text x="93.5430%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.2673%" y="341" width="0.0264%" height="15" fill="rgb(237,88,35)" fg:x="268900" fg:w="76"/><text x="93.5603%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.2979%" y="309" width="0.0184%" height="15" fill="rgb(254,79,48)" fg:x="268988" fg:w="53"/><text x="93.5908%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.3162%" y="309" width="0.1263%" height="15" fill="rgb(211,66,36)" fg:x="269041" fg:w="364"/><text x="93.6092%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.4425%" y="309" width="0.0250%" height="15" fill="rgb(222,13,1)" fg:x="269405" fg:w="72"/><text x="93.7355%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.2979%" y="325" width="0.2518%" height="15" fill="rgb(221,216,41)" fg:x="268988" fg:w="726"/><text x="93.5908%" y="335.50"></text></g><g><title>candid::types::internal::env_add (946 instructions, 0.33%)</title><rect x="93.2937%" y="341" width="0.3281%" height="15" fill="rgb(220,10,17)" fg:x="268976" fg:w="946"/><text x="93.5867%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6218%" y="341" width="0.0264%" height="15" fill="rgb(242,43,35)" fg:x="269922" fg:w="76"/><text x="93.9148%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6482%" y="341" width="0.0264%" height="15" fill="rgb(216,182,18)" fg:x="269998" fg:w="76"/><text x="93.9411%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.6787%" y="309" width="0.0184%" height="15" fill="rgb(246,217,36)" fg:x="270086" fg:w="53"/><text x="93.9717%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.6971%" y="309" width="0.1263%" height="15" fill="rgb(208,107,8)" fg:x="270139" fg:w="364"/><text x="93.9901%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.8233%" y="309" width="0.0250%" height="15" fill="rgb(208,189,15)" fg:x="270503" fg:w="72"/><text x="94.1163%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.6787%" y="325" width="0.2518%" height="15" fill="rgb(211,70,9)" fg:x="270086" fg:w="726"/><text x="93.9717%" y="335.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="93.9305%" y="325" width="0.2130%" height="15" fill="rgb(217,95,34)" fg:x="270812" fg:w="614"/><text x="94.2235%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="94.1435%" y="309" width="0.0281%" height="15" fill="rgb(240,223,2)" fg:x="271426" fg:w="81"/><text x="94.4364%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="94.1435%" y="325" width="0.0375%" height="15" fill="rgb(231,18,6)" fg:x="271426" fg:w="108"/><text x="94.4364%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,627 instructions, 0.56%)</title><rect x="93.6745%" y="341" width="0.5643%" height="15" fill="rgb(254,44,46)" fg:x="270074" fg:w="1627"/><text x="93.9675%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.2389%" y="293" width="0.0184%" height="15" fill="rgb(223,222,46)" fg:x="271701" fg:w="53"/><text x="94.5318%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.2572%" y="293" width="0.0534%" height="15" fill="rgb(229,163,13)" fg:x="271754" fg:w="154"/><text x="94.5502%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.2389%" y="309" width="0.0884%" height="15" fill="rgb(220,208,13)" fg:x="271701" fg:w="255"/><text x="94.5318%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.4012%" y="293" width="0.0184%" height="15" fill="rgb(244,28,53)" fg:x="272169" fg:w="53"/><text x="94.6942%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.4196%" y="293" width="0.0534%" height="15" fill="rgb(243,138,0)" fg:x="272222" fg:w="154"/><text x="94.7125%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.4012%" y="309" width="0.0884%" height="15" fill="rgb(209,90,49)" fg:x="272169" fg:w="255"/><text x="94.6942%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (936 instructions, 0.32%)</title><rect x="94.2389%" y="325" width="0.3246%" height="15" fill="rgb(247,114,18)" fg:x="271701" fg:w="936"/><text x="94.5318%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,243 instructions, 0.43%)</title><rect x="94.2389%" y="341" width="0.4311%" height="15" fill="rgb(221,14,46)" fg:x="271701" fg:w="1243"/><text x="94.5318%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,208 instructions, 1.46%)</title><rect x="93.2500%" y="357" width="1.4595%" height="15" fill="rgb(215,29,23)" fg:x="268850" fg:w="4208"/><text x="93.5430%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.7095%" y="325" width="0.0264%" height="15" fill="rgb(241,37,25)" fg:x="273058" fg:w="76"/><text x="95.0025%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="94.7095%" y="341" width="0.0382%" height="15" fill="rgb(225,17,22)" fg:x="273058" fg:w="110"/><text x="95.0025%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.06%)</title><rect x="94.7095%" y="357" width="0.0624%" height="15" fill="rgb(241,182,7)" fg:x="273058" fg:w="180"/><text x="95.0025%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.03%)</title><rect x="94.7803%" y="309" width="0.0271%" height="15" fill="rgb(248,125,10)" fg:x="273262" fg:w="78"/><text x="95.0733%" y="319.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.05%)</title><rect x="94.7803%" y="325" width="0.0531%" height="15" fill="rgb(250,3,37)" fg:x="273262" fg:w="153"/><text x="95.0733%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.8334%" y="325" width="0.0264%" height="15" fill="rgb(237,102,7)" fg:x="273415" fg:w="76"/><text x="95.1263%" y="335.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.11%)</title><rect x="94.7803%" y="341" width="0.1068%" height="15" fill="rgb(235,5,5)" fg:x="273262" fg:w="308"/><text x="95.0733%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.8871%" y="293" width="0.0184%" height="15" fill="rgb(249,147,38)" fg:x="273570" fg:w="53"/><text x="95.1801%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.9055%" y="293" width="0.0534%" height="15" fill="rgb(221,25,18)" fg:x="273623" fg:w="154"/><text x="95.1985%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.8871%" y="309" width="0.0884%" height="15" fill="rgb(211,88,9)" fg:x="273570" fg:w="255"/><text x="95.1801%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="94.8871%" y="325" width="0.1623%" height="15" fill="rgb(219,62,54)" fg:x="273570" fg:w="468"/><text x="95.1801%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.0494%" y="325" width="0.0264%" height="15" fill="rgb(243,133,46)" fg:x="274038" fg:w="76"/><text x="95.3424%" y="335.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="95.0758%" y="325" width="0.0472%" height="15" fill="rgb(214,168,53)" fg:x="274114" fg:w="136"/><text x="95.3688%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (983 instructions, 0.34%)</title><rect x="94.8871%" y="341" width="0.3410%" height="15" fill="rgb(250,58,7)" fg:x="273570" fg:w="983"/><text x="95.1801%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.2281%" y="309" width="0.0264%" height="15" fill="rgb(249,131,5)" fg:x="274553" fg:w="76"/><text x="95.5210%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.2281%" y="325" width="0.0382%" height="15" fill="rgb(234,40,44)" fg:x="274553" fg:w="110"/><text x="95.5210%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (180 instructions, 0.06%)</title><rect x="95.2281%" y="341" width="0.0624%" height="15" fill="rgb(225,188,42)" fg:x="274553" fg:w="180"/><text x="95.5210%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="95.2905%" y="293" width="0.0184%" height="15" fill="rgb(218,201,51)" fg:x="274733" fg:w="53"/><text x="95.5835%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.03%)</title><rect x="95.2905%" y="309" width="0.0274%" height="15" fill="rgb(214,209,38)" fg:x="274733" fg:w="79"/><text x="95.5835%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.10%)</title><rect x="95.2905%" y="325" width="0.1013%" height="15" fill="rgb(217,0,20)" fg:x="274733" fg:w="292"/><text x="95.5835%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (434 instructions, 0.15%)</title><rect x="95.2905%" y="341" width="0.1505%" height="15" fill="rgb(248,183,46)" fg:x="274733" fg:w="434"/><text x="95.5835%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.4410%" y="293" width="0.0264%" height="15" fill="rgb(208,99,41)" fg:x="275167" fg:w="76"/><text x="95.7340%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.4410%" y="309" width="0.0382%" height="15" fill="rgb(210,189,49)" fg:x="275167" fg:w="110"/><text x="95.7340%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.06%)</title><rect x="95.4410%" y="325" width="0.0614%" height="15" fill="rgb(239,191,42)" fg:x="275167" fg:w="177"/><text x="95.7340%" y="335.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.08%)</title><rect x="95.4410%" y="341" width="0.0794%" height="15" fill="rgb(240,138,26)" fg:x="275167" fg:w="229"/><text x="95.7340%" y="351.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.02%)</title><rect x="95.5205%" y="325" width="0.0163%" height="15" fill="rgb(234,45,22)" fg:x="275396" fg:w="47"/><text x="95.8134%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (95 instructions, 0.03%)</title><rect x="95.5205%" y="341" width="0.0330%" height="15" fill="rgb(228,43,35)" fg:x="275396" fg:w="95"/><text x="95.8134%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="95.5534%" y="309" width="0.0281%" height="15" fill="rgb(215,201,54)" fg:x="275491" fg:w="81"/><text x="95.8464%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="95.5534%" y="325" width="0.0375%" height="15" fill="rgb(209,60,31)" fg:x="275491" fg:w="108"/><text x="95.8464%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.03%)</title><rect x="95.5909%" y="325" width="0.0271%" height="15" fill="rgb(232,66,12)" fg:x="275599" fg:w="78"/><text x="95.8838%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.08%)</title><rect x="95.5534%" y="341" width="0.0756%" height="15" fill="rgb(244,78,24)" fg:x="275491" fg:w="218"/><text x="95.8464%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,684 instructions, 0.93%)</title><rect x="94.7720%" y="357" width="0.9309%" height="15" fill="rgb(249,65,27)" fg:x="273238" fg:w="2684"/><text x="95.0649%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.7067%" y="309" width="0.0264%" height="15" fill="rgb(208,218,19)" fg:x="275933" fg:w="76"/><text x="95.9997%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.7067%" y="325" width="0.0382%" height="15" fill="rgb(212,181,38)" fg:x="275933" fg:w="110"/><text x="95.9997%" y="335.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="95.7681%" y="309" width="0.0350%" height="15" fill="rgb(207,118,40)" fg:x="276110" fg:w="101"/><text x="96.0611%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="95.7681%" y="325" width="0.0472%" height="15" fill="rgb(207,126,20)" fg:x="276110" fg:w="136"/><text x="96.0611%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (388 instructions, 0.13%)</title><rect x="95.7067%" y="341" width="0.1346%" height="15" fill="rgb(232,15,46)" fg:x="275933" fg:w="388"/><text x="95.9997%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="95.8413%" y="341" width="0.1020%" height="15" fill="rgb(254,33,30)" fg:x="276321" fg:w="294"/><text x="96.1343%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (759 instructions, 0.26%)</title><rect x="95.7067%" y="357" width="0.2633%" height="15" fill="rgb(233,92,20)" fg:x="275933" fg:w="759"/><text x="95.9997%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.0067%" y="309" width="0.0184%" height="15" fill="rgb(225,195,54)" fg:x="276798" fg:w="53"/><text x="96.2997%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="96.0251%" y="309" width="0.1263%" height="15" fill="rgb(208,196,7)" fg:x="276851" fg:w="364"/><text x="96.3181%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="96.1514%" y="309" width="0.0250%" height="15" fill="rgb(253,19,35)" fg:x="277215" fg:w="72"/><text x="96.4443%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="96.0067%" y="325" width="0.2518%" height="15" fill="rgb(228,180,1)" fg:x="276798" fg:w="726"/><text x="96.2997%" y="335.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="96.2586%" y="325" width="0.2130%" height="15" fill="rgb(248,35,18)" fg:x="277524" fg:w="614"/><text x="96.5515%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,512 instructions, 0.52%)</title><rect x="96.0026%" y="341" width="0.5244%" height="15" fill="rgb(220,34,8)" fg:x="276786" fg:w="1512"/><text x="96.2955%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,546 instructions, 0.54%)</title><rect x="96.0026%" y="357" width="0.5362%" height="15" fill="rgb(219,223,17)" fg:x="276786" fg:w="1546"/><text x="96.2955%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.5388%" y="309" width="0.0184%" height="15" fill="rgb(223,183,15)" fg:x="278332" fg:w="53"/><text x="96.8318%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="96.5572%" y="309" width="0.0534%" height="15" fill="rgb(253,184,45)" fg:x="278385" fg:w="154"/><text x="96.8502%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="96.5388%" y="325" width="0.0884%" height="15" fill="rgb(207,97,29)" fg:x="278332" fg:w="255"/><text x="96.8318%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="96.5388%" y="341" width="0.1623%" height="15" fill="rgb(250,170,27)" fg:x="278332" fg:w="468"/><text x="96.8318%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (559 instructions, 0.19%)</title><rect x="96.5388%" y="357" width="0.1939%" height="15" fill="rgb(206,178,17)" fg:x="278332" fg:w="559"/><text x="96.8318%" y="367.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.7365%" y="309" width="0.0350%" height="15" fill="rgb(213,92,46)" fg:x="278902" fg:w="101"/><text x="97.0295%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.7365%" y="325" width="0.0472%" height="15" fill="rgb(223,114,30)" fg:x="278902" fg:w="136"/><text x="97.0295%" y="335.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.8097%" y="309" width="0.0350%" height="15" fill="rgb(207,228,9)" fg:x="279113" fg:w="101"/><text x="97.1027%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.8097%" y="325" width="0.0472%" height="15" fill="rgb(205,70,25)" fg:x="279113" fg:w="136"/><text x="97.1027%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (422 instructions, 0.15%)</title><rect x="96.7365%" y="341" width="0.1464%" height="15" fill="rgb(252,45,30)" fg:x="278902" fg:w="422"/><text x="97.0295%" y="351.50"></text></g><g><title>memcpy (3,941 instructions, 1.37%)</title><rect x="96.8829%" y="341" width="1.3669%" height="15" fill="rgb(219,185,54)" fg:x="279324" fg:w="3941"/><text x="97.1758%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,479 instructions, 1.55%)</title><rect x="96.7365%" y="357" width="1.5535%" height="15" fill="rgb(219,208,54)" fg:x="278902" fg:w="4479"/><text x="97.0295%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (14,617 instructions, 5.07%)</title><rect x="93.2500%" y="373" width="5.0699%" height="15" fill="rgb(207,164,54)" fg:x="268850" fg:w="14617"/><text x="93.5430%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="98.3199%" y="373" width="0.0302%" height="15" fill="rgb(240,155,22)" fg:x="283467" fg:w="87"/><text x="98.6128%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.04%)</title><rect x="98.3500%" y="373" width="0.0416%" height="15" fill="rgb(217,127,14)" fg:x="283554" fg:w="120"/><text x="98.6430%" y="383.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.01%)</title><rect x="98.3917%" y="357" width="0.0111%" height="15" fill="rgb(232,179,42)" fg:x="283674" fg:w="32"/><text x="98.6846%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (113 instructions, 0.04%)</title><rect x="98.4028%" y="309" width="0.0392%" height="15" fill="rgb(247,55,45)" fg:x="283706" fg:w="113"/><text x="98.6957%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (147 instructions, 0.05%)</title><rect x="98.4028%" y="325" width="0.0510%" height="15" fill="rgb(217,11,18)" fg:x="283706" fg:w="147"/><text x="98.6957%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (214 instructions, 0.07%)</title><rect x="98.4028%" y="341" width="0.0742%" height="15" fill="rgb(227,127,4)" fg:x="283706" fg:w="214"/><text x="98.6957%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.4770%" y="341" width="0.0264%" height="15" fill="rgb(217,97,45)" fg:x="283920" fg:w="76"/><text x="98.7700%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5034%" y="341" width="0.0156%" height="15" fill="rgb(250,135,20)" fg:x="283996" fg:w="45"/><text x="98.7963%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5190%" y="341" width="0.0156%" height="15" fill="rgb(224,213,26)" fg:x="284041" fg:w="45"/><text x="98.8119%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="98.5346%" y="341" width="0.0191%" height="15" fill="rgb(237,86,25)" fg:x="284086" fg:w="55"/><text x="98.8275%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.5536%" y="293" width="0.0184%" height="15" fill="rgb(251,105,18)" fg:x="284141" fg:w="53"/><text x="98.8466%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.5720%" y="293" width="0.0534%" height="15" fill="rgb(246,124,25)" fg:x="284194" fg:w="154"/><text x="98.8650%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="98.5536%" y="309" width="0.0884%" height="15" fill="rgb(210,90,3)" fg:x="284141" fg:w="255"/><text x="98.8466%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="98.5536%" y="325" width="0.1623%" height="15" fill="rgb(249,40,31)" fg:x="284141" fg:w="468"/><text x="98.8466%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.7160%" y="277" width="0.0264%" height="15" fill="rgb(231,228,1)" fg:x="284609" fg:w="76"/><text x="99.0089%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="98.7160%" y="293" width="0.0382%" height="15" fill="rgb(242,25,49)" fg:x="284609" fg:w="110"/><text x="99.0089%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (177 instructions, 0.06%)</title><rect x="98.7160%" y="309" width="0.0614%" height="15" fill="rgb(224,142,22)" fg:x="284609" fg:w="177"/><text x="99.0089%" y="319.50"></text></g><g><title>leb128::write::signed (229 instructions, 0.08%)</title><rect x="98.7160%" y="325" width="0.0794%" height="15" fill="rgb(228,106,29)" fg:x="284609" fg:w="229"/><text x="99.0089%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.8429%" y="293" width="0.0184%" height="15" fill="rgb(207,2,15)" fg:x="284975" fg:w="53"/><text x="99.1359%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.8613%" y="293" width="0.0534%" height="15" fill="rgb(231,43,37)" fg:x="285028" fg:w="154"/><text x="99.1543%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="98.8429%" y="309" width="0.0884%" height="15" fill="rgb(245,193,12)" fg:x="284975" fg:w="255"/><text x="99.1359%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="98.8429%" y="325" width="0.1623%" height="15" fill="rgb(246,9,49)" fg:x="284975" fg:w="468"/><text x="99.1359%" y="335.50"></text></g><g><title>leb128::write::signed (47 instructions, 0.02%)</title><rect x="99.0052%" y="325" width="0.0163%" height="15" fill="rgb(218,50,36)" fg:x="285443" fg:w="47"/><text x="99.2982%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,486 instructions, 0.52%)</title><rect x="98.5536%" y="341" width="0.5154%" height="15" fill="rgb(225,206,16)" fg:x="284141" fg:w="1486"/><text x="98.8466%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="99.0691%" y="341" width="0.0156%" height="15" fill="rgb(242,52,5)" fg:x="285627" fg:w="45"/><text x="99.3620%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="99.0847%" y="341" width="0.0191%" height="15" fill="rgb(217,158,11)" fg:x="285672" fg:w="55"/><text x="99.3776%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,361 instructions, 0.82%)</title><rect x="98.4028%" y="357" width="0.8189%" height="15" fill="rgb(242,144,22)" fg:x="283706" fg:w="2361"/><text x="98.6957%" y="367.50"></text></g><g><title>std::io::Write::write_all (34 instructions, 0.01%)</title><rect x="99.2217%" y="357" width="0.0118%" height="15" fill="rgb(236,191,3)" fg:x="286067" fg:w="34"/><text x="99.5146%" y="367.50"></text></g><g><title>std::io::Write::write_all (764 instructions, 0.26%)</title><rect x="99.2335%" y="357" width="0.2650%" height="15" fill="rgb(241,22,19)" fg:x="286101" fg:w="764"/><text x="99.5264%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (3,259 instructions, 1.13%)</title><rect x="98.3917%" y="373" width="1.1304%" height="15" fill="rgb(205,217,44)" fg:x="283674" fg:w="3259"/><text x="98.6846%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.5220%" y="373" width="0.0281%" height="15" fill="rgb(231,53,3)" fg:x="286933" fg:w="81"/><text x="99.8150%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.5501%" y="373" width="0.0427%" height="15" fill="rgb(207,13,22)" fg:x="287014" fg:w="123"/><text x="99.8431%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="99.5966%" y="373" width="0.0388%" height="15" fill="rgb(234,62,29)" fg:x="287148" fg:w="112"/><text x="99.8896%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.6445%" y="373" width="0.0281%" height="15" fill="rgb(226,175,44)" fg:x="287286" fg:w="81"/><text x="99.9374%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.03%)</title><rect x="99.6726%" y="373" width="0.0347%" height="15" fill="rgb(239,177,6)" fg:x="287367" fg:w="100"/><text x="99.9655%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="99.7073%" y="373" width="0.0302%" height="15" fill="rgb(249,125,15)" fg:x="287467" fg:w="87"/><text x="100.0002%" y="383.50"></text></g><g><title>certified_map::witness_6_::{{closure}} (287,791 instructions, 99.82%)</title><rect x="0.0704%" y="389" width="99.8196%" height="15" fill="rgb(210,201,5)" fg:x="203" fg:w="287791"/><text x="0.3634%" y="399.50">certified_map::witness_6_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.8942%" y="389" width="0.0281%" height="15" fill="rgb(210,14,6)" fg:x="288006" fg:w="81"/><text x="100.1872%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="99.9223%" y="389" width="0.0437%" height="15" fill="rgb(239,141,15)" fg:x="288087" fg:w="126"/><text x="100.2153%" y="399.50"></text></g><g><title>all (288,311 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(235,75,9)" fg:x="0" fg:w="288311"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (288,311 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(246,122,37)" fg:x="0" fg:w="288311"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>