<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="288414"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="0.0066%" y="389" width="0.0409%" height="15" fill="rgb(240,160,41)" fg:x="19" fg:w="118"/><text x="0.2996%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.02%)</title><rect x="0.0475%" y="389" width="0.0246%" height="15" fill="rgb(243,215,41)" fg:x="137" fg:w="71"/><text x="0.3405%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0721%" y="357" width="0.0284%" height="15" fill="rgb(214,208,31)" fg:x="208" fg:w="82"/><text x="0.3651%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.1005%" y="341" width="0.0239%" height="15" fill="rgb(247,57,22)" fg:x="290" fg:w="69"/><text x="0.3935%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.1245%" y="341" width="0.1408%" height="15" fill="rgb(228,73,52)" fg:x="359" fg:w="406"/><text x="0.4174%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.2652%" y="341" width="0.0284%" height="15" fill="rgb(252,60,9)" fg:x="765" fg:w="82"/><text x="0.5582%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.2937%" y="341" width="0.0187%" height="15" fill="rgb(233,9,51)" fg:x="847" fg:w="54"/><text x="0.5866%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3124%" y="341" width="0.0187%" height="15" fill="rgb(223,67,14)" fg:x="901" fg:w="54"/><text x="0.6054%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3311%" y="341" width="0.0187%" height="15" fill="rgb(222,86,2)" fg:x="955" fg:w="54"/><text x="0.6241%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3498%" y="341" width="0.0187%" height="15" fill="rgb(243,58,54)" fg:x="1009" fg:w="54"/><text x="0.6428%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.3686%" y="341" width="0.0239%" height="15" fill="rgb(210,200,39)" fg:x="1063" fg:w="69"/><text x="0.6615%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.3925%" y="341" width="0.0225%" height="15" fill="rgb(238,135,9)" fg:x="1132" fg:w="65"/><text x="0.6855%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.4150%" y="341" width="0.1408%" height="15" fill="rgb(232,179,7)" fg:x="1197" fg:w="406"/><text x="0.7080%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.5613%" y="325" width="0.0284%" height="15" fill="rgb(245,65,41)" fg:x="1619" fg:w="82"/><text x="0.8543%" y="335.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="0.5898%" y="293" width="0.0208%" height="15" fill="rgb(227,43,8)" fg:x="1701" fg:w="60"/><text x="0.8827%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="0.5898%" y="309" width="0.0295%" height="15" fill="rgb(235,91,14)" fg:x="1701" fg:w="85"/><text x="0.8827%" y="319.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="0.6224%" y="245" width="0.0104%" height="15" fill="rgb(235,219,31)" fg:x="1795" fg:w="30"/><text x="0.9153%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="0.6224%" y="261" width="0.0191%" height="15" fill="rgb(227,121,25)" fg:x="1795" fg:w="55"/><text x="0.9153%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="0.6192%" y="277" width="0.0409%" height="15" fill="rgb(254,129,24)" fg:x="1786" fg:w="118"/><text x="0.9122%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="0.6192%" y="293" width="0.0593%" height="15" fill="rgb(226,144,49)" fg:x="1786" fg:w="171"/><text x="0.9122%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="0.6192%" y="309" width="0.0610%" height="15" fill="rgb(214,187,32)" fg:x="1786" fg:w="176"/><text x="0.9122%" y="319.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="0.5898%" y="325" width="0.1290%" height="15" fill="rgb(243,129,46)" fg:x="1701" fg:w="372"/><text x="0.8827%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="0.5613%" y="341" width="0.2063%" height="15" fill="rgb(221,185,35)" fg:x="1619" fg:w="595"/><text x="0.8543%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.7676%" y="341" width="0.0284%" height="15" fill="rgb(205,0,32)" fg:x="2214" fg:w="82"/><text x="1.0606%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="0.7961%" y="341" width="0.0194%" height="15" fill="rgb(229,179,12)" fg:x="2296" fg:w="56"/><text x="1.0890%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="0.8155%" y="341" width="0.0218%" height="15" fill="rgb(252,107,19)" fg:x="2352" fg:w="63"/><text x="1.1085%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.8373%" y="341" width="0.0225%" height="15" fill="rgb(220,95,27)" fg:x="2415" fg:w="65"/><text x="1.1303%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.8599%" y="325" width="0.1408%" height="15" fill="rgb(240,113,40)" fg:x="2480" fg:w="406"/><text x="1.1528%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.0062%" y="309" width="0.0284%" height="15" fill="rgb(208,4,43)" fg:x="2902" fg:w="82"/><text x="1.2992%" y="319.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="1.0346%" y="277" width="0.0208%" height="15" fill="rgb(247,189,30)" fg:x="2984" fg:w="60"/><text x="1.3276%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="1.0346%" y="293" width="0.0295%" height="15" fill="rgb(231,157,17)" fg:x="2984" fg:w="85"/><text x="1.3276%" y="303.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="1.0672%" y="229" width="0.0104%" height="15" fill="rgb(224,139,6)" fg:x="3078" fg:w="30"/><text x="1.3602%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="1.0672%" y="245" width="0.0191%" height="15" fill="rgb(223,83,16)" fg:x="3078" fg:w="55"/><text x="1.3602%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="1.0641%" y="261" width="0.0409%" height="15" fill="rgb(232,211,20)" fg:x="3069" fg:w="118"/><text x="1.3571%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="1.0641%" y="277" width="0.0593%" height="15" fill="rgb(225,203,35)" fg:x="3069" fg:w="171"/><text x="1.3571%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="1.0641%" y="293" width="0.0610%" height="15" fill="rgb(215,211,44)" fg:x="3069" fg:w="176"/><text x="1.3571%" y="303.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="1.0346%" y="309" width="0.1290%" height="15" fill="rgb(248,213,26)" fg:x="2984" fg:w="372"/><text x="1.3276%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="1.0062%" y="325" width="0.2063%" height="15" fill="rgb(214,23,52)" fg:x="2902" fg:w="595"/><text x="1.2992%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="1.2125%" y="325" width="0.0284%" height="15" fill="rgb(225,173,50)" fg:x="3497" fg:w="82"/><text x="1.5055%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="1.2409%" y="325" width="0.0194%" height="15" fill="rgb(206,150,22)" fg:x="3579" fg:w="56"/><text x="1.5339%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,314 instructions, 0.46%)</title><rect x="0.8599%" y="341" width="0.4556%" height="15" fill="rgb(239,64,23)" fg:x="2480" fg:w="1314"/><text x="1.1528%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="1.3155%" y="341" width="0.0218%" height="15" fill="rgb(242,50,38)" fg:x="3794" fg:w="63"/><text x="1.6084%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3540%" y="341" width="0.0284%" height="15" fill="rgb(217,91,15)" fg:x="3905" fg:w="82"/><text x="1.6469%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3824%" y="341" width="0.0284%" height="15" fill="rgb(230,172,6)" fg:x="3987" fg:w="82"/><text x="1.6754%" y="351.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="1.4115%" y="341" width="0.1318%" height="15" fill="rgb(221,98,26)" fg:x="4071" fg:w="380"/><text x="1.7045%" y="351.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="1.5433%" y="341" width="0.1318%" height="15" fill="rgb(227,210,45)" fg:x="4451" fg:w="380"/><text x="1.8362%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,340 instructions, 1.85%)</title><rect x="0.1005%" y="357" width="1.8515%" height="15" fill="rgb(206,8,30)" fg:x="290" fg:w="5340"/><text x="0.3935%" y="367.50"></text></g><g><title>memcpy (335 instructions, 0.12%)</title><rect x="1.9521%" y="357" width="0.1162%" height="15" fill="rgb(241,219,17)" fg:x="5630" fg:w="335"/><text x="2.2450%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="2.0724%" y="309" width="0.0281%" height="15" fill="rgb(247,121,29)" fg:x="5977" fg:w="81"/><text x="2.3653%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.04%)</title><rect x="2.1098%" y="309" width="0.0350%" height="15" fill="rgb(219,169,49)" fg:x="6085" fg:w="101"/><text x="2.4028%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.08%)</title><rect x="2.0724%" y="325" width="0.0818%" height="15" fill="rgb(253,49,49)" fg:x="5977" fg:w="236"/><text x="2.3653%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (287 instructions, 0.10%)</title><rect x="2.0682%" y="341" width="0.0995%" height="15" fill="rgb(217,178,3)" fg:x="5965" fg:w="287"/><text x="2.3612%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (322 instructions, 0.11%)</title><rect x="2.0682%" y="357" width="0.1116%" height="15" fill="rgb(234,73,37)" fg:x="5965" fg:w="322"/><text x="2.3612%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="2.1799%" y="357" width="0.0194%" height="15" fill="rgb(250,98,22)" fg:x="6287" fg:w="56"/><text x="2.4728%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (6,273 instructions, 2.17%)</title><rect x="0.0721%" y="373" width="2.1750%" height="15" fill="rgb(220,108,37)" fg:x="208" fg:w="6273"/><text x="0.3651%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.2471%" y="341" width="0.0284%" height="15" fill="rgb(225,168,10)" fg:x="6481" fg:w="82"/><text x="2.5401%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="2.2471%" y="357" width="0.0385%" height="15" fill="rgb(247,215,21)" fg:x="6481" fg:w="111"/><text x="2.5401%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.06%)</title><rect x="2.2471%" y="373" width="0.0610%" height="15" fill="rgb(253,189,31)" fg:x="6481" fg:w="176"/><text x="2.5401%" y="383.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3359%" y="277" width="0.0128%" height="15" fill="rgb(241,54,22)" fg:x="6737" fg:w="37"/><text x="2.6288%" y="287.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3487%" y="261" width="0.0128%" height="15" fill="rgb(211,87,4)" fg:x="6774" fg:w="37"/><text x="2.6417%" y="271.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3615%" y="245" width="0.0128%" height="15" fill="rgb(245,112,24)" fg:x="6811" fg:w="37"/><text x="2.6545%" y="255.50"></text></g><g><title>memcmp (58 instructions, 0.02%)</title><rect x="2.3744%" y="229" width="0.0201%" height="15" fill="rgb(235,190,41)" fg:x="6848" fg:w="58"/><text x="2.6673%" y="239.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3945%" y="213" width="0.0128%" height="15" fill="rgb(214,89,8)" fg:x="6906" fg:w="37"/><text x="2.6874%" y="223.50"></text></g><g><title>memcmp (152 instructions, 0.05%)</title><rect x="2.4073%" y="197" width="0.0527%" height="15" fill="rgb(249,155,35)" fg:x="6943" fg:w="152"/><text x="2.7003%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4600%" y="197" width="0.0284%" height="15" fill="rgb(249,88,26)" fg:x="7095" fg:w="82"/><text x="2.7530%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4884%" y="181" width="0.0284%" height="15" fill="rgb(232,56,8)" fg:x="7177" fg:w="82"/><text x="2.7814%" y="191.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="2.5169%" y="181" width="0.1110%" height="15" fill="rgb(240,95,3)" fg:x="7259" fg:w="320"/><text x="2.8098%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.6278%" y="181" width="0.0284%" height="15" fill="rgb(222,44,28)" fg:x="7579" fg:w="82"/><text x="2.9208%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (772 instructions, 0.27%)</title><rect x="2.4884%" y="197" width="0.2677%" height="15" fill="rgb(234,16,30)" fg:x="7177" fg:w="772"/><text x="2.7814%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,174 instructions, 0.41%)</title><rect x="2.4073%" y="213" width="0.4071%" height="15" fill="rgb(223,26,17)" fg:x="6943" fg:w="1174"/><text x="2.7003%" y="223.50"></text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="2.8144%" y="197" width="0.0756%" height="15" fill="rgb(239,187,47)" fg:x="8117" fg:w="218"/><text x="3.1073%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="2.8899%" y="197" width="0.1630%" height="15" fill="rgb(247,102,50)" fg:x="8335" fg:w="470"/><text x="3.1829%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="3.0529%" y="197" width="0.0416%" height="15" fill="rgb(231,216,22)" fg:x="8805" fg:w="120"/><text x="3.3459%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="3.0945%" y="197" width="0.1630%" height="15" fill="rgb(216,201,26)" fg:x="8925" fg:w="470"/><text x="3.3875%" y="207.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="3.2575%" y="181" width="0.0576%" height="15" fill="rgb(214,186,23)" fg:x="9395" fg:w="166"/><text x="3.5504%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="3.3150%" y="181" width="1.7284%" height="15" fill="rgb(235,184,4)" fg:x="9561" fg:w="4985"/><text x="3.6080%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="3.2575%" y="197" width="1.8858%" height="15" fill="rgb(244,46,17)" fg:x="9395" fg:w="5439"/><text x="3.5504%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="2.8144%" y="213" width="2.3907%" height="15" fill="rgb(248,74,46)" fg:x="8117" fg:w="6895"/><text x="3.1073%" y="223.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="5.2050%" y="197" width="0.0756%" height="15" fill="rgb(243,79,5)" fg:x="15012" fg:w="218"/><text x="5.4980%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.2806%" y="197" width="0.1630%" height="15" fill="rgb(213,148,1)" fg:x="15230" fg:w="470"/><text x="5.5736%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="5.4436%" y="197" width="0.0416%" height="15" fill="rgb(221,30,0)" fg:x="15700" fg:w="120"/><text x="5.7365%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.4852%" y="197" width="0.1630%" height="15" fill="rgb(207,85,29)" fg:x="15820" fg:w="470"/><text x="5.7781%" y="207.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="5.6481%" y="181" width="0.0194%" height="15" fill="rgb(239,31,46)" fg:x="16290" fg:w="56"/><text x="5.9411%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="5.6675%" y="181" width="1.7284%" height="15" fill="rgb(219,6,1)" fg:x="16346" fg:w="4985"/><text x="5.9605%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="7.3960%" y="181" width="1.7284%" height="15" fill="rgb(229,90,29)" fg:x="21331" fg:w="4985"/><text x="7.6889%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="5.6481%" y="197" width="3.5886%" height="15" fill="rgb(242,201,42)" fg:x="16290" fg:w="10350"/><text x="5.9411%" y="207.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="5.2050%" y="213" width="4.1118%" height="15" fill="rgb(243,80,54)" fg:x="15012" fg:w="11859"/><text x="5.4980%" y="223.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="9.3168%" y="181" width="0.0756%" height="15" fill="rgb(223,166,15)" fg:x="26871" fg:w="218"/><text x="9.6098%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="9.3924%" y="181" width="0.1630%" height="15" fill="rgb(238,78,27)" fg:x="27089" fg:w="470"/><text x="9.6854%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="9.5554%" y="181" width="0.0832%" height="15" fill="rgb(235,28,43)" fg:x="27559" fg:w="240"/><text x="9.8483%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="9.6386%" y="181" width="1.7284%" height="15" fill="rgb(240,210,28)" fg:x="27799" fg:w="4985"/><text x="9.9315%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="11.3670%" y="181" width="0.0621%" height="15" fill="rgb(253,6,46)" fg:x="32784" fg:w="179"/><text x="11.6600%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="11.4291%" y="181" width="0.1630%" height="15" fill="rgb(250,159,47)" fg:x="32963" fg:w="470"/><text x="11.7220%" y="191.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="11.5920%" y="165" width="0.0610%" height="15" fill="rgb(216,139,2)" fg:x="33433" fg:w="176"/><text x="11.8850%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="11.6530%" y="165" width="1.7284%" height="15" fill="rgb(221,124,44)" fg:x="33609" fg:w="4985"/><text x="11.9460%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="11.5920%" y="181" width="1.8893%" height="15" fill="rgb(205,37,22)" fg:x="33433" fg:w="5449"/><text x="11.8850%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="9.3168%" y="197" width="4.2526%" height="15" fill="rgb(250,55,8)" fg:x="26871" fg:w="12265"/><text x="9.6098%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="13.5694%" y="197" width="0.0284%" height="15" fill="rgb(215,83,48)" fg:x="39136" fg:w="82"/><text x="13.8624%" y="207.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="13.5978%" y="197" width="0.1110%" height="15" fill="rgb(253,2,32)" fg:x="39218" fg:w="320"/><text x="13.8908%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="9.3168%" y="213" width="4.5078%" height="15" fill="rgb(236,67,28)" fg:x="26871" fg:w="13001"/><text x="9.6098%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,143 instructions, 11.49%)</title><rect x="2.3945%" y="229" width="11.4915%" height="15" fill="rgb(252,55,15)" fg:x="6906" fg:w="33143"/><text x="2.6874%" y="239.50">ic_certified_m..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="13.8859%" y="213" width="0.0756%" height="15" fill="rgb(243,173,17)" fg:x="40049" fg:w="218"/><text x="14.1789%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="13.9615%" y="213" width="0.1630%" height="15" fill="rgb(215,212,13)" fg:x="40267" fg:w="470"/><text x="14.2545%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="14.1245%" y="213" width="0.0416%" height="15" fill="rgb(253,176,6)" fg:x="40737" fg:w="120"/><text x="14.4175%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="14.1661%" y="213" width="0.1630%" height="15" fill="rgb(236,105,26)" fg:x="40857" fg:w="470"/><text x="14.4591%" y="223.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="14.3291%" y="197" width="0.0576%" height="15" fill="rgb(239,226,32)" fg:x="41327" fg:w="166"/><text x="14.6220%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="14.3866%" y="197" width="1.7284%" height="15" fill="rgb(236,104,51)" fg:x="41493" fg:w="4985"/><text x="14.6796%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="14.3291%" y="213" width="1.8858%" height="15" fill="rgb(220,172,33)" fg:x="41327" fg:w="5439"/><text x="14.6220%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="13.8859%" y="229" width="2.3907%" height="15" fill="rgb(224,182,25)" fg:x="40049" fg:w="6895"/><text x="14.1789%" y="239.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="16.2766%" y="213" width="0.0756%" height="15" fill="rgb(236,184,24)" fg:x="46944" fg:w="218"/><text x="16.5696%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.3522%" y="213" width="0.1630%" height="15" fill="rgb(241,221,14)" fg:x="47162" fg:w="470"/><text x="16.6452%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="16.5151%" y="213" width="0.0416%" height="15" fill="rgb(227,146,5)" fg:x="47632" fg:w="120"/><text x="16.8081%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.5568%" y="213" width="0.1630%" height="15" fill="rgb(214,15,23)" fg:x="47752" fg:w="470"/><text x="16.8497%" y="223.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="16.7197%" y="197" width="0.0194%" height="15" fill="rgb(233,157,31)" fg:x="48222" fg:w="56"/><text x="17.0127%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="16.7391%" y="197" width="1.7284%" height="15" fill="rgb(211,27,52)" fg:x="48278" fg:w="4985"/><text x="17.0321%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="18.4676%" y="197" width="1.7284%" height="15" fill="rgb(212,223,15)" fg:x="53263" fg:w="4985"/><text x="18.7605%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="16.7197%" y="213" width="3.5886%" height="15" fill="rgb(254,211,0)" fg:x="48222" fg:w="10350"/><text x="17.0127%" y="223.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="16.2766%" y="229" width="4.1118%" height="15" fill="rgb(205,43,38)" fg:x="46944" fg:w="11859"/><text x="16.5696%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.3884%" y="213" width="0.0284%" height="15" fill="rgb(242,206,46)" fg:x="58803" fg:w="82"/><text x="20.6814%" y="223.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="20.4168%" y="213" width="0.1110%" height="15" fill="rgb(220,221,12)" fg:x="58885" fg:w="320"/><text x="20.7098%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.5278%" y="213" width="0.0284%" height="15" fill="rgb(217,156,35)" fg:x="59205" fg:w="82"/><text x="20.8208%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="20.3884%" y="229" width="0.2704%" height="15" fill="rgb(207,181,49)" fg:x="58803" fg:w="780"/><text x="20.6814%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (52,911 instructions, 18.35%)</title><rect x="2.3744%" y="245" width="18.3455%" height="15" fill="rgb(235,103,47)" fg:x="6848" fg:w="52911"/><text x="2.6673%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="20.7199%" y="229" width="0.0756%" height="15" fill="rgb(222,63,28)" fg:x="59759" fg:w="218"/><text x="21.0128%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.7955%" y="229" width="0.1630%" height="15" fill="rgb(244,137,21)" fg:x="59977" fg:w="470"/><text x="21.0884%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="20.9584%" y="229" width="0.0416%" height="15" fill="rgb(228,35,27)" fg:x="60447" fg:w="120"/><text x="21.2514%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="21.0000%" y="229" width="0.1630%" height="15" fill="rgb(226,191,41)" fg:x="60567" fg:w="470"/><text x="21.2930%" y="239.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="21.1630%" y="213" width="0.0576%" height="15" fill="rgb(210,154,3)" fg:x="61037" fg:w="166"/><text x="21.4559%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="21.2205%" y="213" width="1.7284%" height="15" fill="rgb(216,60,49)" fg:x="61203" fg:w="4985"/><text x="21.5135%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="21.1630%" y="229" width="1.8858%" height="15" fill="rgb(226,17,20)" fg:x="61037" fg:w="5439"/><text x="21.4559%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="20.7199%" y="245" width="2.3907%" height="15" fill="rgb(206,115,35)" fg:x="59759" fg:w="6895"/><text x="21.0128%" y="255.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="23.1105%" y="229" width="0.0756%" height="15" fill="rgb(227,88,1)" fg:x="66654" fg:w="218"/><text x="23.4035%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.1861%" y="229" width="0.1630%" height="15" fill="rgb(230,222,24)" fg:x="66872" fg:w="470"/><text x="23.4791%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="23.3491%" y="229" width="0.0416%" height="15" fill="rgb(214,124,32)" fg:x="67342" fg:w="120"/><text x="23.6420%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.3907%" y="229" width="0.1630%" height="15" fill="rgb(240,41,36)" fg:x="67462" fg:w="470"/><text x="23.6837%" y="239.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="23.5536%" y="213" width="0.0194%" height="15" fill="rgb(221,17,52)" fg:x="67932" fg:w="56"/><text x="23.8466%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="23.5731%" y="213" width="1.7284%" height="15" fill="rgb(252,70,16)" fg:x="67988" fg:w="4985"/><text x="23.8660%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="25.3015%" y="213" width="1.7284%" height="15" fill="rgb(250,177,4)" fg:x="72973" fg:w="4985"/><text x="25.5944%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="23.5536%" y="229" width="3.5886%" height="15" fill="rgb(240,188,47)" fg:x="67932" fg:w="10350"/><text x="23.8466%" y="239.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="23.1105%" y="245" width="4.1118%" height="15" fill="rgb(215,92,12)" fg:x="66654" fg:w="11859"/><text x="23.4035%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.2223%" y="229" width="0.0284%" height="15" fill="rgb(242,110,29)" fg:x="78513" fg:w="82"/><text x="27.5153%" y="239.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="27.2508%" y="229" width="0.1110%" height="15" fill="rgb(208,211,26)" fg:x="78595" fg:w="320"/><text x="27.5437%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.3617%" y="229" width="0.0284%" height="15" fill="rgb(244,147,6)" fg:x="78915" fg:w="82"/><text x="27.6547%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="27.2223%" y="245" width="0.2704%" height="15" fill="rgb(211,130,42)" fg:x="78513" fg:w="780"/><text x="27.5153%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (72,658 instructions, 25.19%)</title><rect x="2.3615%" y="261" width="25.1923%" height="15" fill="rgb(220,63,1)" fg:x="6811" fg:w="72658"/><text x="2.6545%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="27.5538%" y="245" width="0.0756%" height="15" fill="rgb(241,212,30)" fg:x="79469" fg:w="218"/><text x="27.8468%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.6294%" y="245" width="0.1630%" height="15" fill="rgb(233,153,17)" fg:x="79687" fg:w="470"/><text x="27.9223%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="27.7923%" y="245" width="0.0416%" height="15" fill="rgb(236,3,10)" fg:x="80157" fg:w="120"/><text x="28.0853%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.8339%" y="245" width="0.1630%" height="15" fill="rgb(232,41,21)" fg:x="80277" fg:w="470"/><text x="28.1269%" y="255.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="27.9969%" y="229" width="0.0576%" height="15" fill="rgb(206,63,51)" fg:x="80747" fg:w="166"/><text x="28.2899%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="28.0545%" y="229" width="1.7284%" height="15" fill="rgb(250,214,3)" fg:x="80913" fg:w="4985"/><text x="28.3474%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="27.9969%" y="245" width="1.8858%" height="15" fill="rgb(254,89,27)" fg:x="80747" fg:w="5439"/><text x="28.2899%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="27.5538%" y="261" width="2.3907%" height="15" fill="rgb(249,41,14)" fg:x="79469" fg:w="6895"/><text x="27.8468%" y="271.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="29.9445%" y="245" width="0.0756%" height="15" fill="rgb(221,196,51)" fg:x="86364" fg:w="218"/><text x="30.2374%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.0200%" y="245" width="0.1630%" height="15" fill="rgb(214,116,26)" fg:x="86582" fg:w="470"/><text x="30.3130%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="30.1830%" y="245" width="0.0416%" height="15" fill="rgb(236,67,7)" fg:x="87052" fg:w="120"/><text x="30.4760%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.2246%" y="245" width="0.1630%" height="15" fill="rgb(253,179,32)" fg:x="87172" fg:w="470"/><text x="30.5176%" y="255.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="30.3876%" y="229" width="0.0194%" height="15" fill="rgb(218,33,15)" fg:x="87642" fg:w="56"/><text x="30.6805%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="30.4070%" y="229" width="1.7284%" height="15" fill="rgb(217,202,41)" fg:x="87698" fg:w="4985"/><text x="30.7000%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="32.1354%" y="229" width="1.7284%" height="15" fill="rgb(234,133,5)" fg:x="92683" fg:w="4985"/><text x="32.4284%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="30.3876%" y="245" width="3.5886%" height="15" fill="rgb(240,47,40)" fg:x="87642" fg:w="10350"/><text x="30.6805%" y="255.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="29.9445%" y="261" width="4.1118%" height="15" fill="rgb(234,166,26)" fg:x="86364" fg:w="11859"/><text x="30.2374%" y="271.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="34.0563%" y="229" width="0.0756%" height="15" fill="rgb(244,125,51)" fg:x="98223" fg:w="218"/><text x="34.3492%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="34.1318%" y="229" width="0.1630%" height="15" fill="rgb(229,171,11)" fg:x="98441" fg:w="470"/><text x="34.4248%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="34.2948%" y="229" width="0.0832%" height="15" fill="rgb(224,38,45)" fg:x="98911" fg:w="240"/><text x="34.5878%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="34.3780%" y="229" width="1.7284%" height="15" fill="rgb(237,27,7)" fg:x="99151" fg:w="4985"/><text x="34.6710%" y="239.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="36.1064%" y="229" width="0.0621%" height="15" fill="rgb(216,52,7)" fg:x="104136" fg:w="179"/><text x="36.3994%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="36.1685%" y="229" width="0.1630%" height="15" fill="rgb(243,11,11)" fg:x="104315" fg:w="470"/><text x="36.4615%" y="239.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="36.3315%" y="213" width="0.0610%" height="15" fill="rgb(253,167,20)" fg:x="104785" fg:w="176"/><text x="36.6244%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="36.3925%" y="213" width="1.7284%" height="15" fill="rgb(215,207,5)" fg:x="104961" fg:w="4985"/><text x="36.6854%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="36.3315%" y="229" width="1.8893%" height="15" fill="rgb(252,127,31)" fg:x="104785" fg:w="5449"/><text x="36.6244%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="34.0563%" y="245" width="4.2526%" height="15" fill="rgb(209,106,27)" fg:x="98223" fg:w="12265"/><text x="34.3492%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="38.3088%" y="245" width="0.0284%" height="15" fill="rgb(214,220,18)" fg:x="110488" fg:w="82"/><text x="38.6018%" y="255.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="38.3373%" y="245" width="0.1110%" height="15" fill="rgb(237,89,12)" fg:x="110570" fg:w="320"/><text x="38.6302%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="34.0563%" y="261" width="4.5078%" height="15" fill="rgb(209,167,36)" fg:x="98223" fg:w="13001"/><text x="34.3492%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (104,627 instructions, 36.28%)</title><rect x="2.3487%" y="277" width="36.2767%" height="15" fill="rgb(243,45,22)" fg:x="6774" fg:w="104627"/><text x="2.6417%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="38.6254%" y="261" width="0.0756%" height="15" fill="rgb(239,2,46)" fg:x="111401" fg:w="218"/><text x="38.9183%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.7010%" y="261" width="0.1630%" height="15" fill="rgb(241,101,0)" fg:x="111619" fg:w="470"/><text x="38.9939%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="38.8639%" y="261" width="0.0416%" height="15" fill="rgb(244,34,31)" fg:x="112089" fg:w="120"/><text x="39.1569%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.9055%" y="261" width="0.1630%" height="15" fill="rgb(248,23,22)" fg:x="112209" fg:w="470"/><text x="39.1985%" y="271.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="39.0685%" y="245" width="0.0576%" height="15" fill="rgb(218,27,48)" fg:x="112679" fg:w="166"/><text x="39.3615%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="39.1260%" y="245" width="1.7284%" height="15" fill="rgb(232,78,1)" fg:x="112845" fg:w="4985"/><text x="39.4190%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="39.0685%" y="261" width="1.8858%" height="15" fill="rgb(233,169,12)" fg:x="112679" fg:w="5439"/><text x="39.3615%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="38.6254%" y="277" width="2.3907%" height="15" fill="rgb(225,222,54)" fg:x="111401" fg:w="6895"/><text x="38.9183%" y="287.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="41.0160%" y="261" width="0.0756%" height="15" fill="rgb(245,126,29)" fg:x="118296" fg:w="218"/><text x="41.3090%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.0916%" y="261" width="0.1630%" height="15" fill="rgb(241,63,48)" fg:x="118514" fg:w="470"/><text x="41.3846%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="41.2546%" y="261" width="0.0416%" height="15" fill="rgb(235,126,38)" fg:x="118984" fg:w="120"/><text x="41.5476%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.2962%" y="261" width="0.1630%" height="15" fill="rgb(232,96,49)" fg:x="119104" fg:w="470"/><text x="41.5892%" y="271.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="41.4592%" y="245" width="0.0194%" height="15" fill="rgb(211,146,40)" fg:x="119574" fg:w="56"/><text x="41.7521%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="41.4786%" y="245" width="1.7284%" height="15" fill="rgb(247,93,44)" fg:x="119630" fg:w="4985"/><text x="41.7715%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="43.2070%" y="245" width="1.7284%" height="15" fill="rgb(251,41,49)" fg:x="124615" fg:w="4985"/><text x="43.5000%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="41.4592%" y="261" width="3.5886%" height="15" fill="rgb(218,155,12)" fg:x="119574" fg:w="10350"/><text x="41.7521%" y="271.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="41.0160%" y="277" width="4.1118%" height="15" fill="rgb(221,161,30)" fg:x="118296" fg:w="11859"/><text x="41.3090%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.1278%" y="261" width="0.0284%" height="15" fill="rgb(221,179,11)" fg:x="130155" fg:w="82"/><text x="45.4208%" y="271.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="45.1563%" y="261" width="0.1110%" height="15" fill="rgb(224,170,48)" fg:x="130237" fg:w="320"/><text x="45.4492%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.2672%" y="261" width="0.0284%" height="15" fill="rgb(223,117,5)" fg:x="130557" fg:w="82"/><text x="45.5602%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="45.1278%" y="277" width="0.2704%" height="15" fill="rgb(209,52,20)" fg:x="130155" fg:w="780"/><text x="45.4208%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (124,374 instructions, 43.12%)</title><rect x="2.3359%" y="293" width="43.1234%" height="15" fill="rgb(209,19,41)" fg:x="6737" fg:w="124374"/><text x="2.6288%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="45.4593%" y="277" width="0.0756%" height="15" fill="rgb(210,177,12)" fg:x="131111" fg:w="218"/><text x="45.7523%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.5349%" y="277" width="0.1630%" height="15" fill="rgb(211,159,37)" fg:x="131329" fg:w="470"/><text x="45.8279%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="45.6979%" y="277" width="0.0416%" height="15" fill="rgb(209,20,2)" fg:x="131799" fg:w="120"/><text x="45.9908%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.7395%" y="277" width="0.1630%" height="15" fill="rgb(244,3,46)" fg:x="131919" fg:w="470"/><text x="46.0324%" y="287.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="45.9024%" y="261" width="0.0576%" height="15" fill="rgb(220,94,38)" fg:x="132389" fg:w="166"/><text x="46.1954%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="45.9600%" y="261" width="1.7284%" height="15" fill="rgb(253,14,31)" fg:x="132555" fg:w="4985"/><text x="46.2529%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="45.9024%" y="277" width="1.8858%" height="15" fill="rgb(234,176,13)" fg:x="132389" fg:w="5439"/><text x="46.1954%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="45.4593%" y="293" width="2.3907%" height="15" fill="rgb(218,62,25)" fg:x="131111" fg:w="6895"/><text x="45.7523%" y="303.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="47.8500%" y="277" width="0.0756%" height="15" fill="rgb(216,124,40)" fg:x="138006" fg:w="218"/><text x="48.1429%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="47.9256%" y="277" width="0.1630%" height="15" fill="rgb(228,170,12)" fg:x="138224" fg:w="470"/><text x="48.2185%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="48.0885%" y="277" width="0.0416%" height="15" fill="rgb(231,226,5)" fg:x="138694" fg:w="120"/><text x="48.3815%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="48.1301%" y="277" width="0.1630%" height="15" fill="rgb(237,122,22)" fg:x="138814" fg:w="470"/><text x="48.4231%" y="287.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="48.2931%" y="261" width="0.0194%" height="15" fill="rgb(209,185,25)" fg:x="139284" fg:w="56"/><text x="48.5860%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="48.3125%" y="261" width="1.7284%" height="15" fill="rgb(228,200,32)" fg:x="139340" fg:w="4985"/><text x="48.6055%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="50.0409%" y="261" width="1.7284%" height="15" fill="rgb(217,140,10)" fg:x="144325" fg:w="4985"/><text x="50.3339%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="48.2931%" y="277" width="3.5886%" height="15" fill="rgb(253,17,24)" fg:x="139284" fg:w="10350"/><text x="48.5860%" y="287.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="47.8500%" y="293" width="4.1118%" height="15" fill="rgb(212,61,6)" fg:x="138006" fg:w="11859"/><text x="48.1429%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="51.9618%" y="277" width="0.0284%" height="15" fill="rgb(205,14,25)" fg:x="149865" fg:w="82"/><text x="52.2547%" y="287.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="51.9902%" y="277" width="0.1110%" height="15" fill="rgb(232,69,41)" fg:x="149947" fg:w="320"/><text x="52.2832%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="52.1011%" y="277" width="0.0284%" height="15" fill="rgb(241,106,47)" fg:x="150267" fg:w="82"/><text x="52.3941%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="51.9618%" y="293" width="0.2704%" height="15" fill="rgb(210,213,53)" fg:x="149865" fg:w="780"/><text x="52.2547%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (144,100 instructions, 49.96%)</title><rect x="2.3303%" y="309" width="49.9629%" height="15" fill="rgb(253,175,27)" fg:x="6721" fg:w="144100"/><text x="2.6233%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="52.2932%" y="293" width="0.0756%" height="15" fill="rgb(211,171,24)" fg:x="150821" fg:w="218"/><text x="52.5862%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.3688%" y="293" width="0.1630%" height="15" fill="rgb(229,80,7)" fg:x="151039" fg:w="470"/><text x="52.6618%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="52.5318%" y="293" width="0.0416%" height="15" fill="rgb(212,46,39)" fg:x="151509" fg:w="120"/><text x="52.8247%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.5734%" y="293" width="0.1630%" height="15" fill="rgb(240,80,45)" fg:x="151629" fg:w="470"/><text x="52.8664%" y="303.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="52.7363%" y="277" width="0.0576%" height="15" fill="rgb(253,177,40)" fg:x="152099" fg:w="166"/><text x="53.0293%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="52.7939%" y="277" width="1.7284%" height="15" fill="rgb(249,200,15)" fg:x="152265" fg:w="4985"/><text x="53.0869%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="52.7363%" y="293" width="1.8858%" height="15" fill="rgb(217,78,26)" fg:x="152099" fg:w="5439"/><text x="53.0293%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="52.2932%" y="309" width="2.3907%" height="15" fill="rgb(254,151,32)" fg:x="150821" fg:w="6895"/><text x="52.5862%" y="319.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="54.6839%" y="293" width="0.0756%" height="15" fill="rgb(226,165,27)" fg:x="157716" fg:w="218"/><text x="54.9769%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.7595%" y="293" width="0.1630%" height="15" fill="rgb(250,206,4)" fg:x="157934" fg:w="470"/><text x="55.0524%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="54.9224%" y="293" width="0.0416%" height="15" fill="rgb(231,229,27)" fg:x="158404" fg:w="120"/><text x="55.2154%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.9640%" y="293" width="0.1630%" height="15" fill="rgb(239,217,8)" fg:x="158524" fg:w="470"/><text x="55.2570%" y="303.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="55.1270%" y="277" width="0.0194%" height="15" fill="rgb(225,204,27)" fg:x="158994" fg:w="56"/><text x="55.4200%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="55.1464%" y="277" width="1.7284%" height="15" fill="rgb(230,56,32)" fg:x="159050" fg:w="4985"/><text x="55.4394%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="56.8748%" y="277" width="1.7284%" height="15" fill="rgb(222,56,27)" fg:x="164035" fg:w="4985"/><text x="57.1678%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="55.1270%" y="293" width="3.5886%" height="15" fill="rgb(253,108,27)" fg:x="158994" fg:w="10350"/><text x="55.4200%" y="303.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="54.6839%" y="309" width="4.1118%" height="15" fill="rgb(212,87,36)" fg:x="157716" fg:w="11859"/><text x="54.9769%" y="319.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="58.7957%" y="277" width="0.0756%" height="15" fill="rgb(247,82,36)" fg:x="169575" fg:w="218"/><text x="59.0887%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="58.8713%" y="277" width="0.1630%" height="15" fill="rgb(222,143,9)" fg:x="169793" fg:w="470"/><text x="59.1642%" y="287.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="59.0342%" y="277" width="0.0832%" height="15" fill="rgb(238,162,48)" fg:x="170263" fg:w="240"/><text x="59.3272%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="59.1174%" y="277" width="1.7284%" height="15" fill="rgb(221,59,43)" fg:x="170503" fg:w="4985"/><text x="59.4104%" y="287.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="60.8459%" y="277" width="0.0621%" height="15" fill="rgb(205,166,41)" fg:x="175488" fg:w="179"/><text x="61.1388%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="60.9079%" y="277" width="0.1630%" height="15" fill="rgb(241,186,40)" fg:x="175667" fg:w="470"/><text x="61.2009%" y="287.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="61.0709%" y="261" width="0.0610%" height="15" fill="rgb(216,119,35)" fg:x="176137" fg:w="176"/><text x="61.3639%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="61.1319%" y="261" width="1.7284%" height="15" fill="rgb(208,68,38)" fg:x="176313" fg:w="4985"/><text x="61.4249%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="61.0709%" y="277" width="1.8893%" height="15" fill="rgb(217,113,1)" fg:x="176137" fg:w="5449"/><text x="61.3639%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="58.7957%" y="293" width="4.2526%" height="15" fill="rgb(242,153,3)" fg:x="169575" fg:w="12265"/><text x="59.0887%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="63.0483%" y="293" width="0.0284%" height="15" fill="rgb(229,76,35)" fg:x="181840" fg:w="82"/><text x="63.3412%" y="303.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="63.0767%" y="293" width="0.1110%" height="15" fill="rgb(229,125,34)" fg:x="181922" fg:w="320"/><text x="63.3697%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="58.7957%" y="309" width="4.5078%" height="15" fill="rgb(238,179,36)" fg:x="169575" fg:w="13001"/><text x="59.0887%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (176,048 instructions, 61.04%)</title><rect x="2.3248%" y="325" width="61.0400%" height="15" fill="rgb(244,183,19)" fg:x="6705" fg:w="176048"/><text x="2.6178%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="63.3648%" y="309" width="0.0756%" height="15" fill="rgb(216,85,49)" fg:x="182753" fg:w="218"/><text x="63.6578%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.4404%" y="309" width="0.1630%" height="15" fill="rgb(208,161,47)" fg:x="182971" fg:w="470"/><text x="63.7334%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="63.6034%" y="309" width="0.0416%" height="15" fill="rgb(233,210,18)" fg:x="183441" fg:w="120"/><text x="63.8963%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.6450%" y="309" width="0.1630%" height="15" fill="rgb(205,104,42)" fg:x="183561" fg:w="470"/><text x="63.9379%" y="319.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="63.8079%" y="293" width="0.0576%" height="15" fill="rgb(248,90,43)" fg:x="184031" fg:w="166"/><text x="64.1009%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="63.8655%" y="293" width="1.7284%" height="15" fill="rgb(206,198,11)" fg:x="184197" fg:w="4985"/><text x="64.1585%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="63.8079%" y="309" width="1.8858%" height="15" fill="rgb(239,165,27)" fg:x="184031" fg:w="5439"/><text x="64.1009%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="63.3648%" y="325" width="2.3907%" height="15" fill="rgb(246,44,32)" fg:x="182753" fg:w="6895"/><text x="63.6578%" y="335.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="65.7555%" y="309" width="0.0756%" height="15" fill="rgb(252,65,42)" fg:x="189648" fg:w="218"/><text x="66.0484%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="65.8311%" y="309" width="0.1630%" height="15" fill="rgb(246,197,18)" fg:x="189866" fg:w="470"/><text x="66.1240%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="65.9940%" y="309" width="0.0416%" height="15" fill="rgb(216,192,4)" fg:x="190336" fg:w="120"/><text x="66.2870%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="66.0356%" y="309" width="0.1630%" height="15" fill="rgb(208,117,10)" fg:x="190456" fg:w="470"/><text x="66.3286%" y="319.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="66.1986%" y="293" width="0.0194%" height="15" fill="rgb(240,61,47)" fg:x="190926" fg:w="56"/><text x="66.4916%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="66.2180%" y="293" width="1.7284%" height="15" fill="rgb(228,178,21)" fg:x="190982" fg:w="4985"/><text x="66.5110%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="67.9464%" y="293" width="1.7284%" height="15" fill="rgb(219,96,54)" fg:x="195967" fg:w="4985"/><text x="68.2394%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="66.1986%" y="309" width="3.5886%" height="15" fill="rgb(250,177,24)" fg:x="190926" fg:w="10350"/><text x="66.4916%" y="319.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="65.7555%" y="325" width="4.1118%" height="15" fill="rgb(242,154,46)" fg:x="189648" fg:w="11859"/><text x="66.0484%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.8673%" y="309" width="0.0284%" height="15" fill="rgb(226,176,29)" fg:x="201507" fg:w="82"/><text x="70.1602%" y="319.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="69.8957%" y="309" width="0.1110%" height="15" fill="rgb(226,29,2)" fg:x="201589" fg:w="320"/><text x="70.1887%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="70.0067%" y="309" width="0.0284%" height="15" fill="rgb(237,104,14)" fg:x="201909" fg:w="82"/><text x="70.2996%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="69.8673%" y="325" width="0.2704%" height="15" fill="rgb(245,207,31)" fg:x="201507" fg:w="780"/><text x="70.1602%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (195,774 instructions, 67.88%)</title><rect x="2.3192%" y="341" width="67.8795%" height="15" fill="rgb(229,211,45)" fg:x="6689" fg:w="195774"/><text x="2.6122%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="70.1987%" y="325" width="0.0756%" height="15" fill="rgb(229,113,15)" fg:x="202463" fg:w="218"/><text x="70.4917%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.2743%" y="325" width="0.1630%" height="15" fill="rgb(237,147,15)" fg:x="202681" fg:w="470"/><text x="70.5673%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="70.4373%" y="325" width="0.0416%" height="15" fill="rgb(244,120,12)" fg:x="203151" fg:w="120"/><text x="70.7303%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.4789%" y="325" width="0.1630%" height="15" fill="rgb(205,120,12)" fg:x="203271" fg:w="470"/><text x="70.7719%" y="335.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="70.6419%" y="309" width="0.0576%" height="15" fill="rgb(231,26,45)" fg:x="203741" fg:w="166"/><text x="70.9348%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="70.6994%" y="309" width="1.7284%" height="15" fill="rgb(246,98,1)" fg:x="203907" fg:w="4985"/><text x="70.9924%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="70.6419%" y="325" width="1.8858%" height="15" fill="rgb(207,68,45)" fg:x="203741" fg:w="5439"/><text x="70.9348%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="70.1987%" y="341" width="2.3907%" height="15" fill="rgb(231,27,38)" fg:x="202463" fg:w="6895"/><text x="70.4917%" y="351.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="72.5894%" y="325" width="0.0756%" height="15" fill="rgb(214,223,3)" fg:x="209358" fg:w="218"/><text x="72.8824%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.6650%" y="325" width="0.1630%" height="15" fill="rgb(228,195,46)" fg:x="209576" fg:w="470"/><text x="72.9580%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="72.8279%" y="325" width="0.0416%" height="15" fill="rgb(231,100,42)" fg:x="210046" fg:w="120"/><text x="73.1209%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.8696%" y="325" width="0.1630%" height="15" fill="rgb(236,53,4)" fg:x="210166" fg:w="470"/><text x="73.1625%" y="335.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="73.0325%" y="309" width="0.0194%" height="15" fill="rgb(230,152,12)" fg:x="210636" fg:w="56"/><text x="73.3255%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="73.0519%" y="309" width="1.7284%" height="15" fill="rgb(226,101,19)" fg:x="210692" fg:w="4985"/><text x="73.3449%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="74.7804%" y="309" width="1.7284%" height="15" fill="rgb(250,149,32)" fg:x="215677" fg:w="4985"/><text x="75.0733%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="73.0325%" y="325" width="3.5886%" height="15" fill="rgb(232,178,12)" fg:x="210636" fg:w="10350"/><text x="73.3255%" y="335.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="72.5894%" y="341" width="4.1118%" height="15" fill="rgb(246,151,17)" fg:x="209358" fg:w="11859"/><text x="72.8824%" y="351.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="76.7012%" y="309" width="0.0756%" height="15" fill="rgb(252,17,51)" fg:x="221217" fg:w="218"/><text x="76.9942%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="76.7768%" y="309" width="0.1630%" height="15" fill="rgb(250,207,23)" fg:x="221435" fg:w="470"/><text x="77.0698%" y="319.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="76.9397%" y="309" width="0.0832%" height="15" fill="rgb(205,27,5)" fg:x="221905" fg:w="240"/><text x="77.2327%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="77.0230%" y="309" width="1.7284%" height="15" fill="rgb(224,32,19)" fg:x="222145" fg:w="4985"/><text x="77.3159%" y="319.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="78.7514%" y="309" width="0.0621%" height="15" fill="rgb(247,214,40)" fg:x="227130" fg:w="179"/><text x="79.0443%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="78.8134%" y="309" width="0.1630%" height="15" fill="rgb(239,199,17)" fg:x="227309" fg:w="470"/><text x="79.1064%" y="319.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="78.9764%" y="293" width="0.0610%" height="15" fill="rgb(251,159,9)" fg:x="227779" fg:w="176"/><text x="79.2694%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="79.0374%" y="293" width="1.7284%" height="15" fill="rgb(225,78,32)" fg:x="227955" fg:w="4985"/><text x="79.3304%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="78.9764%" y="309" width="1.8893%" height="15" fill="rgb(206,97,47)" fg:x="227779" fg:w="5449"/><text x="79.2694%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="76.7012%" y="325" width="4.2526%" height="15" fill="rgb(227,107,4)" fg:x="221217" fg:w="12265"/><text x="76.9942%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="80.9538%" y="325" width="0.0284%" height="15" fill="rgb(241,146,50)" fg:x="233482" fg:w="82"/><text x="81.2467%" y="335.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="80.9822%" y="325" width="0.1110%" height="15" fill="rgb(232,92,30)" fg:x="233564" fg:w="320"/><text x="81.2752%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="76.7012%" y="341" width="4.5078%" height="15" fill="rgb(222,0,40)" fg:x="221217" fg:w="13001"/><text x="76.9942%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (227,722 instructions, 78.96%)</title><rect x="2.3137%" y="357" width="78.9566%" height="15" fill="rgb(219,54,33)" fg:x="6673" fg:w="227722"/><text x="2.6067%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="81.2703%" y="341" width="0.0756%" height="15" fill="rgb(226,209,28)" fg:x="234395" fg:w="218"/><text x="81.5633%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.3459%" y="341" width="0.1630%" height="15" fill="rgb(254,205,35)" fg:x="234613" fg:w="470"/><text x="81.6389%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="81.5089%" y="341" width="0.0416%" height="15" fill="rgb(230,159,3)" fg:x="235083" fg:w="120"/><text x="81.8018%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.5505%" y="341" width="0.1630%" height="15" fill="rgb(232,190,24)" fg:x="235203" fg:w="470"/><text x="81.8434%" y="351.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="81.7134%" y="325" width="0.0576%" height="15" fill="rgb(217,227,44)" fg:x="235673" fg:w="166"/><text x="82.0064%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="81.7710%" y="325" width="1.7284%" height="15" fill="rgb(236,211,1)" fg:x="235839" fg:w="4985"/><text x="82.0640%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="81.7134%" y="341" width="1.8858%" height="15" fill="rgb(250,127,46)" fg:x="235673" fg:w="5439"/><text x="82.0064%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="81.2703%" y="357" width="2.3907%" height="15" fill="rgb(229,213,6)" fg:x="234395" fg:w="6895"/><text x="81.5633%" y="367.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="83.6610%" y="341" width="0.0756%" height="15" fill="rgb(237,15,36)" fg:x="241290" fg:w="218"/><text x="83.9540%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.7366%" y="341" width="0.1630%" height="15" fill="rgb(213,131,41)" fg:x="241508" fg:w="470"/><text x="84.0295%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="83.8995%" y="341" width="0.0416%" height="15" fill="rgb(225,82,44)" fg:x="241978" fg:w="120"/><text x="84.1925%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.9411%" y="341" width="0.1630%" height="15" fill="rgb(249,42,11)" fg:x="242098" fg:w="470"/><text x="84.2341%" y="351.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="84.1041%" y="325" width="0.0194%" height="15" fill="rgb(253,11,29)" fg:x="242568" fg:w="56"/><text x="84.3971%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="84.1235%" y="325" width="1.7284%" height="15" fill="rgb(206,8,54)" fg:x="242624" fg:w="4985"/><text x="84.4165%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="85.8519%" y="325" width="1.7284%" height="15" fill="rgb(222,186,2)" fg:x="247609" fg:w="4985"/><text x="86.1449%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="84.1041%" y="341" width="3.5886%" height="15" fill="rgb(221,206,53)" fg:x="242568" fg:w="10350"/><text x="84.3971%" y="351.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="83.6610%" y="357" width="4.1118%" height="15" fill="rgb(230,150,21)" fg:x="241290" fg:w="11859"/><text x="83.9540%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.7728%" y="341" width="0.0284%" height="15" fill="rgb(253,202,10)" fg:x="253149" fg:w="82"/><text x="88.0658%" y="351.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="87.8012%" y="341" width="0.1110%" height="15" fill="rgb(238,109,40)" fg:x="253231" fg:w="320"/><text x="88.0942%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.9122%" y="341" width="0.0284%" height="15" fill="rgb(247,120,22)" fg:x="253551" fg:w="82"/><text x="88.2051%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="87.7728%" y="357" width="0.2704%" height="15" fill="rgb(207,43,30)" fg:x="253149" fg:w="780"/><text x="88.0658%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (247,448 instructions, 85.80%)</title><rect x="2.3081%" y="373" width="85.7961%" height="15" fill="rgb(213,211,24)" fg:x="6657" fg:w="247448"/><text x="2.6011%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.1043%" y="277" width="0.0284%" height="15" fill="rgb(239,73,39)" fg:x="254105" fg:w="82"/><text x="88.3972%" y="287.50"></text></g><g><title>memcpy (195 instructions, 0.07%)</title><rect x="88.1327%" y="277" width="0.0676%" height="15" fill="rgb(245,182,19)" fg:x="254187" fg:w="195"/><text x="88.4257%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="88.2003%" y="277" width="0.0281%" height="15" fill="rgb(247,143,26)" fg:x="254382" fg:w="81"/><text x="88.4933%" y="287.50"></text></g><g><title>__rust_realloc (444 instructions, 0.15%)</title><rect x="88.1043%" y="293" width="0.1539%" height="15" fill="rgb(228,191,23)" fg:x="254105" fg:w="444"/><text x="88.3972%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.17%)</title><rect x="88.1043%" y="309" width="0.1661%" height="15" fill="rgb(253,165,31)" fg:x="254105" fg:w="479"/><text x="88.3972%" y="319.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.2956%" y="293" width="0.0277%" height="15" fill="rgb(234,138,20)" fg:x="254657" fg:w="80"/><text x="88.5886%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.2956%" y="309" width="0.0399%" height="15" fill="rgb(218,191,29)" fg:x="254657" fg:w="115"/><text x="88.5886%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (740 instructions, 0.26%)</title><rect x="88.1043%" y="325" width="0.2566%" height="15" fill="rgb(221,157,19)" fg:x="254105" fg:w="740"/><text x="88.3972%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.3608%" y="325" width="0.0773%" height="15" fill="rgb(237,26,42)" fg:x="254845" fg:w="223"/><text x="88.6538%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,042 instructions, 0.36%)</title><rect x="88.1043%" y="341" width="0.3613%" height="15" fill="rgb(220,163,24)" fg:x="254105" fg:w="1042"/><text x="88.3972%" y="351.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.4922%" y="309" width="0.0277%" height="15" fill="rgb(242,115,20)" fg:x="255224" fg:w="80"/><text x="88.7852%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.4922%" y="325" width="0.0399%" height="15" fill="rgb(210,206,9)" fg:x="255224" fg:w="115"/><text x="88.7852%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.4922%" y="341" width="0.0652%" height="15" fill="rgb(208,71,17)" fg:x="255224" fg:w="188"/><text x="88.7852%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.5574%" y="309" width="0.1019%" height="15" fill="rgb(233,7,5)" fg:x="255412" fg:w="294"/><text x="88.8504%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.5574%" y="325" width="0.1252%" height="15" fill="rgb(207,92,33)" fg:x="255412" fg:w="361"/><text x="88.8504%" y="335.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.7093%" y="277" width="0.0277%" height="15" fill="rgb(218,87,9)" fg:x="255850" fg:w="80"/><text x="89.0023%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.7093%" y="293" width="0.0399%" height="15" fill="rgb(219,47,37)" fg:x="255850" fg:w="115"/><text x="89.0023%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.7093%" y="309" width="0.0652%" height="15" fill="rgb(221,152,34)" fg:x="255850" fg:w="188"/><text x="89.0023%" y="319.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.7745%" y="277" width="0.1019%" height="15" fill="rgb(235,176,21)" fg:x="256038" fg:w="294"/><text x="89.0674%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.7745%" y="293" width="0.1252%" height="15" fill="rgb(232,212,21)" fg:x="256038" fg:w="361"/><text x="89.0674%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.9263%" y="261" width="0.0773%" height="15" fill="rgb(245,82,39)" fg:x="256476" fg:w="223"/><text x="89.2193%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="88.9263%" y="277" width="0.1005%" height="15" fill="rgb(241,52,51)" fg:x="256476" fg:w="290"/><text x="89.2193%" y="287.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.0536%" y="197" width="0.0277%" height="15" fill="rgb(219,91,24)" fg:x="256843" fg:w="80"/><text x="89.3466%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.0536%" y="213" width="0.0399%" height="15" fill="rgb(241,142,12)" fg:x="256843" fg:w="115"/><text x="89.3466%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.0536%" y="229" width="0.0652%" height="15" fill="rgb(230,27,9)" fg:x="256843" fg:w="188"/><text x="89.3466%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.1188%" y="229" width="0.0773%" height="15" fill="rgb(249,181,32)" fg:x="257031" fg:w="223"/><text x="89.4117%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (483 instructions, 0.17%)</title><rect x="89.0536%" y="245" width="0.1675%" height="15" fill="rgb(230,107,3)" fg:x="256843" fg:w="483"/><text x="89.3466%" y="255.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.2477%" y="213" width="0.1019%" height="15" fill="rgb(246,204,14)" fg:x="257403" fg:w="294"/><text x="89.5407%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.2477%" y="229" width="0.1252%" height="15" fill="rgb(213,192,47)" fg:x="257403" fg:w="361"/><text x="89.5407%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.3996%" y="197" width="0.0773%" height="15" fill="rgb(240,44,36)" fg:x="257841" fg:w="223"/><text x="89.6926%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.3996%" y="213" width="0.1005%" height="15" fill="rgb(244,209,38)" fg:x="257841" fg:w="290"/><text x="89.6926%" y="223.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.5269%" y="181" width="0.1019%" height="15" fill="rgb(219,34,37)" fg:x="258208" fg:w="294"/><text x="89.8198%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.5269%" y="197" width="0.1252%" height="15" fill="rgb(210,28,6)" fg:x="258208" fg:w="361"/><text x="89.8198%" y="207.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.6787%" y="117" width="0.0277%" height="15" fill="rgb(244,110,52)" fg:x="258646" fg:w="80"/><text x="89.9717%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.6787%" y="133" width="0.0399%" height="15" fill="rgb(254,124,47)" fg:x="258646" fg:w="115"/><text x="89.9717%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.6787%" y="149" width="0.0652%" height="15" fill="rgb(254,110,13)" fg:x="258646" fg:w="188"/><text x="89.9717%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.7439%" y="149" width="0.1019%" height="15" fill="rgb(252,57,21)" fg:x="258834" fg:w="294"/><text x="90.0369%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (556 instructions, 0.19%)</title><rect x="89.6787%" y="165" width="0.1928%" height="15" fill="rgb(242,60,45)" fg:x="258646" fg:w="556"/><text x="89.9717%" y="175.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.8982%" y="133" width="0.0773%" height="15" fill="rgb(234,49,30)" fg:x="259279" fg:w="223"/><text x="90.1912%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.8982%" y="149" width="0.1005%" height="15" fill="rgb(218,98,6)" fg:x="259279" fg:w="290"/><text x="90.1912%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="90.0254%" y="117" width="0.1019%" height="15" fill="rgb(220,174,29)" fg:x="259646" fg:w="294"/><text x="90.3184%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="90.0254%" y="133" width="0.1252%" height="15" fill="rgb(236,163,23)" fg:x="259646" fg:w="361"/><text x="90.3184%" y="143.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.1773%" y="101" width="0.0773%" height="15" fill="rgb(242,114,45)" fg:x="260084" fg:w="223"/><text x="90.4703%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.1773%" y="117" width="0.1005%" height="15" fill="rgb(232,10,53)" fg:x="260084" fg:w="290"/><text x="90.4703%" y="127.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.3046%" y="69" width="0.0773%" height="15" fill="rgb(245,108,29)" fg:x="260451" fg:w="223"/><text x="90.5975%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.3046%" y="85" width="0.1005%" height="15" fill="rgb(240,89,53)" fg:x="260451" fg:w="290"/><text x="90.5975%" y="95.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="90.4318%" y="53" width="0.0416%" height="15" fill="rgb(226,60,45)" fg:x="260818" fg:w="120"/><text x="90.7248%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (182 instructions, 0.06%)</title><rect x="90.4318%" y="69" width="0.0631%" height="15" fill="rgb(230,41,44)" fg:x="260818" fg:w="182"/><text x="90.7248%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="90.4949%" y="37" width="0.0104%" height="15" fill="rgb(230,26,20)" fg:x="261000" fg:w="30"/><text x="90.7879%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (92 instructions, 0.03%)</title><rect x="90.4949%" y="53" width="0.0319%" height="15" fill="rgb(237,170,32)" fg:x="261000" fg:w="92"/><text x="90.7879%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (178 instructions, 0.06%)</title><rect x="90.4949%" y="69" width="0.0617%" height="15" fill="rgb(212,35,42)" fg:x="261000" fg:w="178"/><text x="90.7879%" y="79.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.5885%" y="53" width="0.0773%" height="15" fill="rgb(227,31,34)" fg:x="261270" fg:w="223"/><text x="90.8815%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.5885%" y="69" width="0.1005%" height="15" fill="rgb(216,19,18)" fg:x="261270" fg:w="290"/><text x="90.8815%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (819 instructions, 0.28%)</title><rect x="90.4318%" y="85" width="0.2840%" height="15" fill="rgb(211,133,42)" fg:x="260818" fg:w="819"/><text x="90.7248%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,275 instructions, 0.44%)</title><rect x="90.3046%" y="101" width="0.4421%" height="15" fill="rgb(244,66,13)" fg:x="260451" fg:w="1275"/><text x="90.5975%" y="111.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.7775%" y="85" width="0.0773%" height="15" fill="rgb(218,185,50)" fg:x="261815" fg:w="223"/><text x="91.0705%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.7775%" y="101" width="0.1005%" height="15" fill="rgb(219,149,13)" fg:x="261815" fg:w="290"/><text x="91.0705%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,731 instructions, 0.60%)</title><rect x="90.3046%" y="117" width="0.6002%" height="15" fill="rgb(221,125,0)" fg:x="260451" fg:w="1731"/><text x="90.5975%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,187 instructions, 0.76%)</title><rect x="90.1773%" y="133" width="0.7583%" height="15" fill="rgb(247,126,27)" fg:x="260084" fg:w="2187"/><text x="90.4703%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,714 instructions, 0.94%)</title><rect x="90.0254%" y="149" width="0.9410%" height="15" fill="rgb(250,138,30)" fg:x="259646" fg:w="2714"/><text x="90.3184%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,170 instructions, 1.10%)</title><rect x="89.8982%" y="165" width="1.0991%" height="15" fill="rgb(230,151,9)" fg:x="259279" fg:w="3170"/><text x="90.1912%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,892 instructions, 1.35%)</title><rect x="89.6787%" y="181" width="1.3494%" height="15" fill="rgb(233,80,38)" fg:x="258646" fg:w="3892"/><text x="89.9717%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.0590%" y="165" width="0.0773%" height="15" fill="rgb(232,68,43)" fg:x="262627" fg:w="223"/><text x="91.3520%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.0590%" y="181" width="0.1005%" height="15" fill="rgb(254,5,50)" fg:x="262627" fg:w="290"/><text x="91.3520%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,348 instructions, 1.51%)</title><rect x="89.6787%" y="197" width="1.5076%" height="15" fill="rgb(225,45,5)" fg:x="258646" fg:w="4348"/><text x="89.9717%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,875 instructions, 1.69%)</title><rect x="89.5269%" y="213" width="1.6903%" height="15" fill="rgb(239,22,3)" fg:x="258208" fg:w="4875"/><text x="89.8198%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,331 instructions, 1.85%)</title><rect x="89.3996%" y="229" width="1.8484%" height="15" fill="rgb(243,129,0)" fg:x="257841" fg:w="5331"/><text x="89.6926%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,858 instructions, 2.03%)</title><rect x="89.2477%" y="245" width="2.0311%" height="15" fill="rgb(223,164,0)" fg:x="257403" fg:w="5858"/><text x="89.5407%" y="255.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,507 instructions, 2.26%)</title><rect x="89.0536%" y="261" width="2.2561%" height="15" fill="rgb(221,46,29)" fg:x="256843" fg:w="6507"/><text x="89.3466%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="91.3406%" y="213" width="0.0277%" height="15" fill="rgb(205,97,47)" fg:x="263439" fg:w="80"/><text x="91.6335%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="91.3406%" y="229" width="0.0399%" height="15" fill="rgb(249,14,8)" fg:x="263439" fg:w="115"/><text x="91.6335%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="91.3406%" y="245" width="0.0652%" height="15" fill="rgb(216,77,3)" fg:x="263439" fg:w="188"/><text x="91.6335%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.4058%" y="245" width="0.0773%" height="15" fill="rgb(206,168,54)" fg:x="263627" fg:w="223"/><text x="91.6987%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (485 instructions, 0.17%)</title><rect x="91.3406%" y="261" width="0.1682%" height="15" fill="rgb(236,3,41)" fg:x="263439" fg:w="485"/><text x="91.6335%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,158 instructions, 2.48%)</title><rect x="89.0536%" y="277" width="2.4818%" height="15" fill="rgb(231,132,24)" fg:x="256843" fg:w="7158"/><text x="89.3466%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,614 instructions, 2.64%)</title><rect x="88.9263%" y="293" width="2.6400%" height="15" fill="rgb(227,221,40)" fg:x="256476" fg:w="7614"/><text x="89.2193%" y="303.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,141 instructions, 2.82%)</title><rect x="88.7745%" y="309" width="2.8227%" height="15" fill="rgb(233,151,11)" fg:x="256038" fg:w="8141"/><text x="89.0674%" y="319.50">&lt;i..</text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.6297%" y="293" width="0.0773%" height="15" fill="rgb(247,81,35)" fg:x="264273" fg:w="223"/><text x="91.9227%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.6297%" y="309" width="0.1005%" height="15" fill="rgb(243,128,48)" fg:x="264273" fg:w="290"/><text x="91.9227%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,790 instructions, 3.05%)</title><rect x="88.7093%" y="325" width="3.0477%" height="15" fill="rgb(253,16,10)" fg:x="255850" fg:w="8790"/><text x="89.0023%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,317 instructions, 3.23%)</title><rect x="88.5574%" y="341" width="3.2304%" height="15" fill="rgb(228,67,27)" fg:x="255412" fg:w="9317"/><text x="88.8504%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,718 instructions, 3.72%)</title><rect x="88.1043%" y="357" width="3.7162%" height="15" fill="rgb(231,105,25)" fg:x="254105" fg:w="10718"/><text x="88.3972%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,807 instructions, 3.75%)</title><rect x="88.1043%" y="373" width="3.7470%" height="15" fill="rgb(213,166,47)" fg:x="254105" fg:w="10807"/><text x="88.3972%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8773%" y="69" width="0.0437%" height="15" fill="rgb(209,27,10)" fg:x="264987" fg:w="126"/><text x="92.1703%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (148 instructions, 0.05%)</title><rect x="91.8738%" y="85" width="0.0513%" height="15" fill="rgb(241,44,30)" fg:x="264977" fg:w="148"/><text x="92.1668%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9269%" y="85" width="0.0437%" height="15" fill="rgb(223,216,15)" fg:x="265130" fg:w="126"/><text x="92.2199%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (300 instructions, 0.10%)</title><rect x="91.8721%" y="101" width="0.1040%" height="15" fill="rgb(227,14,7)" fg:x="264972" fg:w="300"/><text x="92.1651%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9761%" y="101" width="0.0437%" height="15" fill="rgb(237,14,5)" fg:x="265272" fg:w="126"/><text x="92.2691%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (442 instructions, 0.15%)</title><rect x="91.8721%" y="117" width="0.1533%" height="15" fill="rgb(232,14,36)" fg:x="264972" fg:w="442"/><text x="92.1651%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0271%" y="101" width="0.0218%" height="15" fill="rgb(234,0,38)" fg:x="265419" fg:w="63"/><text x="92.3201%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.06%)</title><rect x="92.0271%" y="117" width="0.0576%" height="15" fill="rgb(207,170,14)" fg:x="265419" fg:w="166"/><text x="92.3201%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (634 instructions, 0.22%)</title><rect x="91.8704%" y="133" width="0.2198%" height="15" fill="rgb(252,45,13)" fg:x="264967" fg:w="634"/><text x="92.1633%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0902%" y="117" width="0.0191%" height="15" fill="rgb(213,142,7)" fg:x="265601" fg:w="55"/><text x="92.3832%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1093%" y="117" width="0.0218%" height="15" fill="rgb(216,157,23)" fg:x="265656" fg:w="63"/><text x="92.4022%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.0902%" y="133" width="0.0700%" height="15" fill="rgb(212,145,33)" fg:x="265601" fg:w="202"/><text x="92.3832%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (857 instructions, 0.30%)</title><rect x="91.8686%" y="149" width="0.2971%" height="15" fill="rgb(233,26,13)" fg:x="264962" fg:w="857"/><text x="92.1616%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1658%" y="133" width="0.0191%" height="15" fill="rgb(219,196,19)" fg:x="265819" fg:w="55"/><text x="92.4587%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1848%" y="133" width="0.0218%" height="15" fill="rgb(246,56,21)" fg:x="265874" fg:w="63"/><text x="92.4778%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.1658%" y="149" width="0.0700%" height="15" fill="rgb(222,28,53)" fg:x="265819" fg:w="202"/><text x="92.4587%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,080 instructions, 0.37%)</title><rect x="91.8669%" y="165" width="0.3745%" height="15" fill="rgb(224,5,27)" fg:x="264957" fg:w="1080"/><text x="92.1599%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2414%" y="149" width="0.0191%" height="15" fill="rgb(220,153,33)" fg:x="266037" fg:w="55"/><text x="92.5343%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.2604%" y="149" width="0.0218%" height="15" fill="rgb(226,58,19)" fg:x="266092" fg:w="63"/><text x="92.5534%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2414%" y="165" width="0.0700%" height="15" fill="rgb(239,112,23)" fg:x="266037" fg:w="202"/><text x="92.5343%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,303 instructions, 0.45%)</title><rect x="91.8652%" y="181" width="0.4518%" height="15" fill="rgb(251,213,20)" fg:x="264952" fg:w="1303"/><text x="92.1581%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3169%" y="165" width="0.0191%" height="15" fill="rgb(215,181,21)" fg:x="266255" fg:w="55"/><text x="92.6099%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3360%" y="165" width="0.0218%" height="15" fill="rgb(240,8,35)" fg:x="266310" fg:w="63"/><text x="92.6290%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.3169%" y="181" width="0.0700%" height="15" fill="rgb(232,203,3)" fg:x="266255" fg:w="202"/><text x="92.6099%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,521 instructions, 0.53%)</title><rect x="91.8652%" y="197" width="0.5274%" height="15" fill="rgb(214,202,43)" fg:x="264952" fg:w="1521"/><text x="92.1581%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3943%" y="181" width="0.0191%" height="15" fill="rgb(254,35,11)" fg:x="266478" fg:w="55"/><text x="92.6872%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4133%" y="181" width="0.0218%" height="15" fill="rgb(239,173,13)" fg:x="266533" fg:w="63"/><text x="92.7063%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.3943%" y="197" width="0.0700%" height="15" fill="rgb(220,141,0)" fg:x="266478" fg:w="202"/><text x="92.6872%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,749 instructions, 0.61%)</title><rect x="91.8634%" y="213" width="0.6064%" height="15" fill="rgb(210,98,12)" fg:x="264947" fg:w="1749"/><text x="92.1564%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4699%" y="197" width="0.0191%" height="15" fill="rgb(254,153,22)" fg:x="266696" fg:w="55"/><text x="92.7628%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4889%" y="197" width="0.0218%" height="15" fill="rgb(247,223,17)" fg:x="266751" fg:w="63"/><text x="92.7819%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.4699%" y="213" width="0.0700%" height="15" fill="rgb(246,56,7)" fg:x="266696" fg:w="202"/><text x="92.7628%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,972 instructions, 0.68%)</title><rect x="91.8617%" y="229" width="0.6837%" height="15" fill="rgb(240,226,12)" fg:x="264942" fg:w="1972"/><text x="92.1547%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5454%" y="213" width="0.0191%" height="15" fill="rgb(205,87,46)" fg:x="266914" fg:w="55"/><text x="92.8384%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5645%" y="213" width="0.0218%" height="15" fill="rgb(245,214,51)" fg:x="266969" fg:w="63"/><text x="92.8575%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5454%" y="229" width="0.0700%" height="15" fill="rgb(223,172,33)" fg:x="266914" fg:w="202"/><text x="92.8384%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,195 instructions, 0.76%)</title><rect x="91.8600%" y="245" width="0.7611%" height="15" fill="rgb(227,203,34)" fg:x="264937" fg:w="2195"/><text x="92.1529%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6210%" y="229" width="0.0191%" height="15" fill="rgb(248,143,44)" fg:x="267132" fg:w="55"/><text x="92.9140%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6401%" y="229" width="0.0218%" height="15" fill="rgb(226,162,5)" fg:x="267187" fg:w="63"/><text x="92.9331%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.6210%" y="245" width="0.0700%" height="15" fill="rgb(211,143,1)" fg:x="267132" fg:w="202"/><text x="92.9140%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,418 instructions, 0.84%)</title><rect x="91.8582%" y="261" width="0.8384%" height="15" fill="rgb(224,96,15)" fg:x="264932" fg:w="2418"/><text x="92.1512%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6966%" y="245" width="0.0191%" height="15" fill="rgb(222,4,38)" fg:x="267350" fg:w="55"/><text x="92.9896%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7157%" y="245" width="0.0218%" height="15" fill="rgb(253,228,15)" fg:x="267405" fg:w="63"/><text x="93.0086%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.6966%" y="261" width="0.0700%" height="15" fill="rgb(242,194,12)" fg:x="267350" fg:w="202"/><text x="92.9896%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,636 instructions, 0.91%)</title><rect x="91.8582%" y="277" width="0.9140%" height="15" fill="rgb(214,177,31)" fg:x="264932" fg:w="2636"/><text x="92.1512%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7739%" y="261" width="0.0191%" height="15" fill="rgb(226,58,51)" fg:x="267573" fg:w="55"/><text x="93.0669%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7930%" y="261" width="0.0218%" height="15" fill="rgb(250,119,16)" fg:x="267628" fg:w="63"/><text x="93.0860%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.7739%" y="277" width="0.0700%" height="15" fill="rgb(223,128,53)" fg:x="267573" fg:w="202"/><text x="93.0669%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,864 instructions, 0.99%)</title><rect x="91.8565%" y="293" width="0.9930%" height="15" fill="rgb(251,199,15)" fg:x="264927" fg:w="2864"/><text x="92.1495%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8495%" y="277" width="0.0191%" height="15" fill="rgb(235,168,42)" fg:x="267791" fg:w="55"/><text x="93.1425%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8686%" y="277" width="0.0218%" height="15" fill="rgb(250,210,17)" fg:x="267846" fg:w="63"/><text x="93.1616%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.8495%" y="293" width="0.0700%" height="15" fill="rgb(226,36,41)" fg:x="267791" fg:w="202"/><text x="93.1425%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,087 instructions, 1.07%)</title><rect x="91.8548%" y="309" width="1.0703%" height="15" fill="rgb(225,87,10)" fg:x="264922" fg:w="3087"/><text x="92.1477%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9251%" y="293" width="0.0191%" height="15" fill="rgb(228,83,9)" fg:x="268009" fg:w="55"/><text x="93.2181%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9442%" y="293" width="0.0218%" height="15" fill="rgb(225,16,36)" fg:x="268064" fg:w="63"/><text x="93.2371%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.9251%" y="309" width="0.0700%" height="15" fill="rgb(242,198,13)" fg:x="268009" fg:w="202"/><text x="93.2181%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,305 instructions, 1.15%)</title><rect x="91.8548%" y="325" width="1.1459%" height="15" fill="rgb(239,25,51)" fg:x="264922" fg:w="3305"/><text x="92.1477%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0024%" y="309" width="0.0191%" height="15" fill="rgb(239,28,37)" fg:x="268232" fg:w="55"/><text x="93.2954%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0215%" y="309" width="0.0218%" height="15" fill="rgb(234,70,17)" fg:x="268287" fg:w="63"/><text x="93.3145%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0024%" y="325" width="0.0700%" height="15" fill="rgb(231,215,53)" fg:x="268232" fg:w="202"/><text x="93.2954%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,533 instructions, 1.22%)</title><rect x="91.8530%" y="341" width="1.2250%" height="15" fill="rgb(218,140,42)" fg:x="264917" fg:w="3533"/><text x="92.1460%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0780%" y="325" width="0.0191%" height="15" fill="rgb(233,227,45)" fg:x="268450" fg:w="55"/><text x="93.3710%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0971%" y="325" width="0.0218%" height="15" fill="rgb(225,189,21)" fg:x="268505" fg:w="63"/><text x="93.3900%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0780%" y="341" width="0.0700%" height="15" fill="rgb(237,176,54)" fg:x="268450" fg:w="202"/><text x="93.3710%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,756 instructions, 1.30%)</title><rect x="91.8513%" y="357" width="1.3023%" height="15" fill="rgb(215,131,46)" fg:x="264912" fg:w="3756"/><text x="92.1443%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.1536%" y="341" width="0.0191%" height="15" fill="rgb(218,95,20)" fg:x="268668" fg:w="55"/><text x="93.4466%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.1727%" y="341" width="0.0218%" height="15" fill="rgb(208,198,12)" fg:x="268723" fg:w="63"/><text x="93.4656%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.1536%" y="357" width="0.0700%" height="15" fill="rgb(239,107,50)" fg:x="268668" fg:w="202"/><text x="93.4466%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,974 instructions, 1.38%)</title><rect x="91.8513%" y="373" width="1.3779%" height="15" fill="rgb(240,217,37)" fg:x="264912" fg:w="3974"/><text x="92.1443%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.2292%" y="357" width="0.0191%" height="15" fill="rgb(242,197,49)" fg:x="268886" fg:w="55"/><text x="93.5221%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.06%)</title><rect x="93.2292%" y="373" width="0.0565%" height="15" fill="rgb(219,171,17)" fg:x="268886" fg:w="163"/><text x="93.5221%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (89 instructions, 0.03%)</title><rect x="93.2857%" y="373" width="0.0309%" height="15" fill="rgb(209,81,40)" fg:x="269049" fg:w="89"/><text x="93.5787%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.01%)</title><rect x="93.3166%" y="357" width="0.0135%" height="15" fill="rgb(237,156,30)" fg:x="269138" fg:w="39"/><text x="93.6095%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.3301%" y="357" width="0.0264%" height="15" fill="rgb(212,127,16)" fg:x="269177" fg:w="76"/><text x="93.6230%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.3582%" y="325" width="0.0184%" height="15" fill="rgb(226,66,32)" fg:x="269258" fg:w="53"/><text x="93.6511%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.3765%" y="325" width="0.1262%" height="15" fill="rgb(245,22,46)" fg:x="269311" fg:w="364"/><text x="93.6695%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.5027%" y="325" width="0.0250%" height="15" fill="rgb(210,112,21)" fg:x="269675" fg:w="72"/><text x="93.7957%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.3582%" y="341" width="0.2517%" height="15" fill="rgb(207,118,39)" fg:x="269258" fg:w="726"/><text x="93.6511%" y="351.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 0.32%)</title><rect x="93.3564%" y="357" width="0.3242%" height="15" fill="rgb(205,206,35)" fg:x="269253" fg:w="935"/><text x="93.6494%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6806%" y="357" width="0.0264%" height="15" fill="rgb(222,120,2)" fg:x="270188" fg:w="76"/><text x="93.9736%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.7070%" y="357" width="0.0264%" height="15" fill="rgb(205,38,18)" fg:x="270264" fg:w="76"/><text x="93.9999%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.7350%" y="325" width="0.0184%" height="15" fill="rgb(226,61,2)" fg:x="270345" fg:w="53"/><text x="94.0280%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.7534%" y="325" width="0.1262%" height="15" fill="rgb(242,161,23)" fg:x="270398" fg:w="364"/><text x="94.0464%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.8796%" y="325" width="0.0250%" height="15" fill="rgb(213,13,52)" fg:x="270762" fg:w="72"/><text x="94.1726%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.7350%" y="341" width="0.2517%" height="15" fill="rgb(246,209,47)" fg:x="270345" fg:w="726"/><text x="94.0280%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="93.9868%" y="341" width="0.2129%" height="15" fill="rgb(214,41,3)" fg:x="271071" fg:w="614"/><text x="94.2797%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="94.1997%" y="325" width="0.0281%" height="15" fill="rgb(236,119,38)" fg:x="271685" fg:w="81"/><text x="94.4926%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="94.1997%" y="341" width="0.0374%" height="15" fill="rgb(218,50,11)" fg:x="271685" fg:w="108"/><text x="94.4926%" y="351.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 0.56%)</title><rect x="93.7333%" y="357" width="0.5624%" height="15" fill="rgb(228,38,11)" fg:x="270340" fg:w="1622"/><text x="94.0263%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.2957%" y="309" width="0.0184%" height="15" fill="rgb(212,13,9)" fg:x="271962" fg:w="53"/><text x="94.5887%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.3141%" y="309" width="0.0534%" height="15" fill="rgb(208,211,9)" fg:x="272015" fg:w="154"/><text x="94.6070%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.2957%" y="325" width="0.0895%" height="15" fill="rgb(239,39,32)" fg:x="271962" fg:w="258"/><text x="94.5887%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.4597%" y="309" width="0.0184%" height="15" fill="rgb(254,179,26)" fg:x="272435" fg:w="53"/><text x="94.7527%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.4781%" y="309" width="0.0534%" height="15" fill="rgb(249,165,28)" fg:x="272488" fg:w="154"/><text x="94.7710%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.4597%" y="325" width="0.0895%" height="15" fill="rgb(225,59,50)" fg:x="272435" fg:w="258"/><text x="94.7527%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (946 instructions, 0.33%)</title><rect x="94.2957%" y="341" width="0.3280%" height="15" fill="rgb(209,122,5)" fg:x="271962" fg:w="946"/><text x="94.5887%" y="351.50"></text></g><g><title>candid::types::internal::env_id (1,219 instructions, 0.42%)</title><rect x="94.2957%" y="357" width="0.4227%" height="15" fill="rgb(214,65,34)" fg:x="271962" fg:w="1219"/><text x="94.5887%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.7184%" y="325" width="0.0264%" height="15" fill="rgb(249,183,32)" fg:x="273181" fg:w="76"/><text x="95.0113%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="94.7184%" y="341" width="0.0381%" height="15" fill="rgb(218,122,24)" fg:x="273181" fg:w="110"/><text x="95.0113%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="94.7184%" y="357" width="0.0617%" height="15" fill="rgb(224,109,18)" fg:x="273181" fg:w="178"/><text x="95.0113%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.03%)</title><rect x="94.7884%" y="309" width="0.0270%" height="15" fill="rgb(210,68,50)" fg:x="273383" fg:w="78"/><text x="95.0814%" y="319.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.05%)</title><rect x="94.7884%" y="325" width="0.0530%" height="15" fill="rgb(212,184,34)" fg:x="273383" fg:w="153"/><text x="95.0814%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.8414%" y="325" width="0.0264%" height="15" fill="rgb(238,105,48)" fg:x="273536" fg:w="76"/><text x="95.1344%" y="335.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.11%)</title><rect x="94.7884%" y="341" width="0.1068%" height="15" fill="rgb(222,134,54)" fg:x="273383" fg:w="308"/><text x="95.0814%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.8952%" y="293" width="0.0184%" height="15" fill="rgb(246,24,43)" fg:x="273691" fg:w="53"/><text x="95.1882%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.9136%" y="293" width="0.0534%" height="15" fill="rgb(227,169,22)" fg:x="273744" fg:w="154"/><text x="95.2065%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.8952%" y="309" width="0.0895%" height="15" fill="rgb(253,152,4)" fg:x="273691" fg:w="258"/><text x="95.1882%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="94.8952%" y="325" width="0.1640%" height="15" fill="rgb(219,158,36)" fg:x="273691" fg:w="473"/><text x="95.1882%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.0592%" y="325" width="0.0264%" height="15" fill="rgb(251,128,40)" fg:x="274164" fg:w="76"/><text x="95.3522%" y="335.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="95.0855%" y="325" width="0.0472%" height="15" fill="rgb(254,101,39)" fg:x="274240" fg:w="136"/><text x="95.3785%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 0.34%)</title><rect x="94.8952%" y="341" width="0.3429%" height="15" fill="rgb(221,168,40)" fg:x="273691" fg:w="989"/><text x="95.1882%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.2381%" y="309" width="0.0264%" height="15" fill="rgb(221,14,27)" fg:x="274680" fg:w="76"/><text x="95.5311%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.2381%" y="325" width="0.0381%" height="15" fill="rgb(207,36,43)" fg:x="274680" fg:w="110"/><text x="95.5311%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="95.2381%" y="341" width="0.0617%" height="15" fill="rgb(240,172,53)" fg:x="274680" fg:w="178"/><text x="95.5311%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="95.2998%" y="293" width="0.0184%" height="15" fill="rgb(241,138,43)" fg:x="274858" fg:w="53"/><text x="95.5928%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.03%)</title><rect x="95.2998%" y="309" width="0.0270%" height="15" fill="rgb(227,78,19)" fg:x="274858" fg:w="78"/><text x="95.5928%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.10%)</title><rect x="95.2998%" y="325" width="0.1016%" height="15" fill="rgb(215,127,44)" fg:x="274858" fg:w="293"/><text x="95.5928%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.15%)</title><rect x="95.2998%" y="341" width="0.1519%" height="15" fill="rgb(227,13,10)" fg:x="274858" fg:w="438"/><text x="95.5928%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.4517%" y="293" width="0.0264%" height="15" fill="rgb(249,177,6)" fg:x="275296" fg:w="76"/><text x="95.7446%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.4517%" y="309" width="0.0381%" height="15" fill="rgb(215,154,26)" fg:x="275296" fg:w="110"/><text x="95.7446%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="95.4517%" y="325" width="0.0607%" height="15" fill="rgb(250,168,20)" fg:x="275296" fg:w="175"/><text x="95.7446%" y="335.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.08%)</title><rect x="95.4517%" y="341" width="0.0787%" height="15" fill="rgb(222,53,38)" fg:x="275296" fg:w="227"/><text x="95.7446%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.02%)</title><rect x="95.5304%" y="341" width="0.0194%" height="15" fill="rgb(245,154,5)" fg:x="275523" fg:w="56"/><text x="95.8234%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="95.5498%" y="309" width="0.0281%" height="15" fill="rgb(214,89,50)" fg:x="275579" fg:w="81"/><text x="95.8428%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="95.5498%" y="325" width="0.0374%" height="15" fill="rgb(232,73,14)" fg:x="275579" fg:w="108"/><text x="95.8428%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.03%)</title><rect x="95.5872%" y="325" width="0.0270%" height="15" fill="rgb(230,101,20)" fg:x="275687" fg:w="78"/><text x="95.8802%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.08%)</title><rect x="95.5498%" y="341" width="0.0756%" height="15" fill="rgb(208,56,28)" fg:x="275579" fg:w="218"/><text x="95.8428%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 0.92%)</title><rect x="94.7801%" y="357" width="0.9195%" height="15" fill="rgb(247,205,22)" fg:x="273359" fg:w="2652"/><text x="95.0730%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.7034%" y="325" width="0.0264%" height="15" fill="rgb(252,109,51)" fg:x="276022" fg:w="76"/><text x="95.9964%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.7034%" y="341" width="0.0381%" height="15" fill="rgb(220,40,24)" fg:x="276022" fg:w="110"/><text x="95.9964%" y="351.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="95.7641%" y="325" width="0.0350%" height="15" fill="rgb(251,108,7)" fg:x="276197" fg:w="101"/><text x="96.0570%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="95.7641%" y="341" width="0.0472%" height="15" fill="rgb(238,102,51)" fg:x="276197" fg:w="136"/><text x="96.0570%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.13%)</title><rect x="95.7034%" y="357" width="0.1331%" height="15" fill="rgb(219,149,34)" fg:x="276022" fg:w="384"/><text x="95.9964%" y="367.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="95.8365%" y="357" width="0.1019%" height="15" fill="rgb(239,70,0)" fg:x="276406" fg:w="294"/><text x="96.1295%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.0342%" y="325" width="0.0184%" height="15" fill="rgb(246,214,23)" fg:x="276976" fg:w="53"/><text x="96.3271%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="96.0525%" y="325" width="0.1262%" height="15" fill="rgb(239,221,51)" fg:x="277029" fg:w="364"/><text x="96.3455%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="96.1788%" y="325" width="0.0250%" height="15" fill="rgb(254,62,14)" fg:x="277393" fg:w="72"/><text x="96.4717%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="96.0342%" y="341" width="0.2517%" height="15" fill="rgb(253,57,33)" fg:x="276976" fg:w="726"/><text x="96.3271%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="96.2859%" y="341" width="0.2129%" height="15" fill="rgb(229,34,6)" fg:x="277702" fg:w="614"/><text x="96.5789%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,503 instructions, 0.52%)</title><rect x="96.0324%" y="357" width="0.5211%" height="15" fill="rgb(235,191,23)" fg:x="276971" fg:w="1503"/><text x="96.3254%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.5536%" y="309" width="0.0184%" height="15" fill="rgb(217,207,27)" fg:x="278474" fg:w="53"/><text x="96.8465%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="96.5719%" y="309" width="0.0534%" height="15" fill="rgb(232,41,44)" fg:x="278527" fg:w="154"/><text x="96.8649%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="96.5536%" y="325" width="0.0895%" height="15" fill="rgb(221,188,19)" fg:x="278474" fg:w="258"/><text x="96.8465%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="96.5536%" y="341" width="0.1640%" height="15" fill="rgb(245,180,45)" fg:x="278474" fg:w="473"/><text x="96.8465%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (566 instructions, 0.20%)</title><rect x="96.5536%" y="357" width="0.1962%" height="15" fill="rgb(250,220,42)" fg:x="278474" fg:w="566"/><text x="96.8465%" y="367.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.7536%" y="325" width="0.0350%" height="15" fill="rgb(234,16,34)" fg:x="279051" fg:w="101"/><text x="97.0466%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.7536%" y="341" width="0.0472%" height="15" fill="rgb(233,217,23)" fg:x="279051" fg:w="136"/><text x="97.0466%" y="351.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.8261%" y="325" width="0.0350%" height="15" fill="rgb(209,22,46)" fg:x="279260" fg:w="101"/><text x="97.1191%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.8261%" y="341" width="0.0472%" height="15" fill="rgb(213,101,18)" fg:x="279260" fg:w="136"/><text x="97.1191%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (418 instructions, 0.14%)</title><rect x="96.7536%" y="357" width="0.1449%" height="15" fill="rgb(215,179,52)" fg:x="279051" fg:w="418"/><text x="97.0466%" y="367.50"></text></g><g><title>memcpy (3,941 instructions, 1.37%)</title><rect x="96.8986%" y="357" width="1.3664%" height="15" fill="rgb(223,50,25)" fg:x="279469" fg:w="3941"/><text x="97.1915%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (14,479 instructions, 5.02%)</title><rect x="93.3166%" y="373" width="5.0202%" height="15" fill="rgb(224,51,44)" fg:x="269138" fg:w="14479"/><text x="93.6095%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="98.3368%" y="373" width="0.0302%" height="15" fill="rgb(224,13,54)" fg:x="283617" fg:w="87"/><text x="98.6297%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.04%)</title><rect x="98.3669%" y="373" width="0.0416%" height="15" fill="rgb(219,58,47)" fg:x="283704" fg:w="120"/><text x="98.6599%" y="383.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.01%)</title><rect x="98.4085%" y="357" width="0.0111%" height="15" fill="rgb(246,124,34)" fg:x="283824" fg:w="32"/><text x="98.7015%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="98.4196%" y="325" width="0.0409%" height="15" fill="rgb(245,109,25)" fg:x="283856" fg:w="118"/><text x="98.7126%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.05%)</title><rect x="98.4196%" y="341" width="0.0527%" height="15" fill="rgb(235,48,23)" fg:x="283856" fg:w="152"/><text x="98.7126%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.08%)</title><rect x="98.4196%" y="357" width="0.0752%" height="15" fill="rgb(229,203,36)" fg:x="283856" fg:w="217"/><text x="98.7126%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.4949%" y="357" width="0.0264%" height="15" fill="rgb(234,180,9)" fg:x="284073" fg:w="76"/><text x="98.7878%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5212%" y="357" width="0.0156%" height="15" fill="rgb(228,98,45)" fg:x="284149" fg:w="45"/><text x="98.8142%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5368%" y="357" width="0.0156%" height="15" fill="rgb(240,24,36)" fg:x="284194" fg:w="45"/><text x="98.8298%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="98.5524%" y="357" width="0.0191%" height="15" fill="rgb(227,154,19)" fg:x="284239" fg:w="55"/><text x="98.8454%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.5715%" y="309" width="0.0184%" height="15" fill="rgb(231,2,48)" fg:x="284294" fg:w="53"/><text x="98.8645%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.5899%" y="309" width="0.0534%" height="15" fill="rgb(219,216,0)" fg:x="284347" fg:w="154"/><text x="98.8828%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="98.5715%" y="325" width="0.0895%" height="15" fill="rgb(251,88,0)" fg:x="284294" fg:w="258"/><text x="98.8645%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="98.5715%" y="341" width="0.1640%" height="15" fill="rgb(242,45,45)" fg:x="284294" fg:w="473"/><text x="98.8645%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.7355%" y="309" width="0.0264%" height="15" fill="rgb(218,149,45)" fg:x="284767" fg:w="76"/><text x="99.0285%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="98.7355%" y="325" width="0.0381%" height="15" fill="rgb(247,194,10)" fg:x="284767" fg:w="110"/><text x="99.0285%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="98.7355%" y="341" width="0.0607%" height="15" fill="rgb(234,33,37)" fg:x="284767" fg:w="175"/><text x="99.0285%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.8562%" y="309" width="0.0184%" height="15" fill="rgb(218,61,13)" fg:x="285115" fg:w="53"/><text x="99.1491%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.8745%" y="309" width="0.0534%" height="15" fill="rgb(210,80,52)" fg:x="285168" fg:w="154"/><text x="99.1675%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="98.8562%" y="325" width="0.0895%" height="15" fill="rgb(218,203,27)" fg:x="285115" fg:w="258"/><text x="99.1491%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="98.8562%" y="341" width="0.1640%" height="15" fill="rgb(209,126,33)" fg:x="285115" fg:w="473"/><text x="99.1491%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,462 instructions, 0.51%)</title><rect x="98.5715%" y="357" width="0.5069%" height="15" fill="rgb(234,173,41)" fg:x="284294" fg:w="1462"/><text x="98.8645%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="99.0784%" y="357" width="0.0156%" height="15" fill="rgb(228,166,9)" fg:x="285756" fg:w="45"/><text x="99.3714%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="99.0940%" y="357" width="0.0191%" height="15" fill="rgb(208,124,43)" fg:x="285801" fg:w="55"/><text x="99.3870%" y="367.50"></text></g><g><title>std::io::Write::write_all (34 instructions, 0.01%)</title><rect x="99.1131%" y="357" width="0.0118%" height="15" fill="rgb(212,154,38)" fg:x="285856" fg:w="34"/><text x="99.4060%" y="367.50"></text></g><g><title>std::io::Write::write_all (764 instructions, 0.26%)</title><rect x="99.1249%" y="357" width="0.2649%" height="15" fill="rgb(246,179,35)" fg:x="285890" fg:w="764"/><text x="99.4178%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (3,212 instructions, 1.11%)</title><rect x="98.4085%" y="373" width="1.1137%" height="15" fill="rgb(251,3,50)" fg:x="283824" fg:w="3212"/><text x="98.7015%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.5222%" y="373" width="0.0281%" height="15" fill="rgb(219,96,8)" fg:x="287036" fg:w="81"/><text x="99.8152%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.5503%" y="373" width="0.0426%" height="15" fill="rgb(251,216,33)" fg:x="287117" fg:w="123"/><text x="99.8433%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="99.5968%" y="373" width="0.0388%" height="15" fill="rgb(243,145,29)" fg:x="287251" fg:w="112"/><text x="99.8897%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.6450%" y="373" width="0.0281%" height="15" fill="rgb(210,75,20)" fg:x="287390" fg:w="81"/><text x="99.9379%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.03%)</title><rect x="99.6730%" y="373" width="0.0347%" height="15" fill="rgb(235,56,8)" fg:x="287471" fg:w="100"/><text x="99.9660%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="99.7077%" y="373" width="0.0302%" height="15" fill="rgb(226,175,49)" fg:x="287571" fg:w="87"/><text x="100.0007%" y="383.50"></text></g><g><title>certified_map::witness_3_::{{closure}} (287,889 instructions, 99.82%)</title><rect x="0.0721%" y="389" width="99.8180%" height="15" fill="rgb(242,204,23)" fg:x="208" fg:w="287889"/><text x="0.3651%" y="399.50">certified_map::witness_3_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.8942%" y="389" width="0.0281%" height="15" fill="rgb(225,104,24)" fg:x="288109" fg:w="81"/><text x="100.1872%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="99.9223%" y="389" width="0.0437%" height="15" fill="rgb(253,34,1)" fg:x="288190" fg:w="126"/><text x="100.2153%" y="399.50"></text></g><g><title>all (288,414 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(233,199,23)" fg:x="0" fg:w="288414"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (288,414 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(247,7,51)" fg:x="0" fg:w="288414"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>