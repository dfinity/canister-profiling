<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="304778"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.04%)</title><rect x="0.0079%" y="389" width="0.0377%" height="15" fill="rgb(220,7,47)" fg:x="24" fg:w="115"/><text x="0.3008%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (80 instructions, 0.03%)</title><rect x="0.0456%" y="389" width="0.0262%" height="15" fill="rgb(254,130,53)" fg:x="139" fg:w="80"/><text x="0.3386%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.0719%" y="357" width="0.0299%" height="15" fill="rgb(240,2,46)" fg:x="219" fg:w="91"/><text x="0.3648%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.1017%" y="341" width="0.0269%" height="15" fill="rgb(252,144,40)" fg:x="310" fg:w="82"/><text x="0.3947%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.1286%" y="341" width="0.1454%" height="15" fill="rgb(226,23,10)" fg:x="392" fg:w="443"/><text x="0.4216%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.2740%" y="341" width="0.0312%" height="15" fill="rgb(212,204,35)" fg:x="835" fg:w="95"/><text x="0.5669%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3051%" y="341" width="0.0197%" height="15" fill="rgb(218,201,15)" fg:x="930" fg:w="60"/><text x="0.5981%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3248%" y="341" width="0.0197%" height="15" fill="rgb(224,197,5)" fg:x="990" fg:w="60"/><text x="0.6178%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3445%" y="341" width="0.0197%" height="15" fill="rgb(224,185,18)" fg:x="1050" fg:w="60"/><text x="0.6375%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3642%" y="341" width="0.0197%" height="15" fill="rgb(251,71,45)" fg:x="1110" fg:w="60"/><text x="0.6572%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.3839%" y="341" width="0.0269%" height="15" fill="rgb(216,74,24)" fg:x="1170" fg:w="82"/><text x="0.6769%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.4108%" y="341" width="0.0230%" height="15" fill="rgb(250,36,51)" fg:x="1252" fg:w="70"/><text x="0.7038%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.4338%" y="341" width="0.1454%" height="15" fill="rgb(209,224,28)" fg:x="1322" fg:w="443"/><text x="0.7267%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.5853%" y="325" width="0.0299%" height="15" fill="rgb(228,5,10)" fg:x="1784" fg:w="91"/><text x="0.8783%" y="335.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="0.6152%" y="293" width="0.0220%" height="15" fill="rgb(250,57,40)" fg:x="1875" fg:w="67"/><text x="0.9082%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.03%)</title><rect x="0.6152%" y="309" width="0.0315%" height="15" fill="rgb(228,194,41)" fg:x="1875" fg:w="96"/><text x="0.9082%" y="319.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="0.6503%" y="245" width="0.0115%" height="15" fill="rgb(206,68,23)" fg:x="1982" fg:w="35"/><text x="0.9433%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.02%)</title><rect x="0.6503%" y="261" width="0.0210%" height="15" fill="rgb(230,33,29)" fg:x="1982" fg:w="64"/><text x="0.9433%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="0.6467%" y="277" width="0.0472%" height="15" fill="rgb(210,39,32)" fg:x="1971" fg:w="144"/><text x="0.9397%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="0.6467%" y="293" width="0.0686%" height="15" fill="rgb(236,89,23)" fg:x="1971" fg:w="209"/><text x="0.9397%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="0.6467%" y="309" width="0.0719%" height="15" fill="rgb(218,52,52)" fg:x="1971" fg:w="219"/><text x="0.9397%" y="319.50"></text></g><g><title>core::fmt::write (457 instructions, 0.15%)</title><rect x="0.6152%" y="325" width="0.1499%" height="15" fill="rgb(235,154,5)" fg:x="1875" fg:w="457"/><text x="0.9082%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 0.23%)</title><rect x="0.5853%" y="341" width="0.2251%" height="15" fill="rgb(223,168,9)" fg:x="1784" fg:w="686"/><text x="0.8783%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.8104%" y="341" width="0.0312%" height="15" fill="rgb(220,8,33)" fg:x="2470" fg:w="95"/><text x="1.1034%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="0.8416%" y="341" width="0.0207%" height="15" fill="rgb(216,176,3)" fg:x="2565" fg:w="63"/><text x="1.1346%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.02%)</title><rect x="0.8623%" y="341" width="0.0249%" height="15" fill="rgb(254,150,22)" fg:x="2628" fg:w="76"/><text x="1.1552%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.8872%" y="341" width="0.0230%" height="15" fill="rgb(231,61,53)" fg:x="2704" fg:w="70"/><text x="1.1802%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.9102%" y="325" width="0.1454%" height="15" fill="rgb(249,177,41)" fg:x="2774" fg:w="443"/><text x="1.2031%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.0618%" y="309" width="0.0299%" height="15" fill="rgb(221,122,7)" fg:x="3236" fg:w="91"/><text x="1.3547%" y="319.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="1.0916%" y="277" width="0.0220%" height="15" fill="rgb(215,115,7)" fg:x="3327" fg:w="67"/><text x="1.3846%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96 instructions, 0.03%)</title><rect x="1.0916%" y="293" width="0.0315%" height="15" fill="rgb(218,108,33)" fg:x="3327" fg:w="96"/><text x="1.3846%" y="303.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="1.1267%" y="229" width="0.0115%" height="15" fill="rgb(221,205,39)" fg:x="3434" fg:w="35"/><text x="1.4197%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (64 instructions, 0.02%)</title><rect x="1.1267%" y="245" width="0.0210%" height="15" fill="rgb(220,171,18)" fg:x="3434" fg:w="64"/><text x="1.4197%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="1.1231%" y="261" width="0.0472%" height="15" fill="rgb(236,188,29)" fg:x="3423" fg:w="144"/><text x="1.4161%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="1.1231%" y="277" width="0.0686%" height="15" fill="rgb(239,29,5)" fg:x="3423" fg:w="209"/><text x="1.4161%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="1.1231%" y="293" width="0.0719%" height="15" fill="rgb(236,114,44)" fg:x="3423" fg:w="219"/><text x="1.4161%" y="303.50"></text></g><g><title>core::fmt::write (457 instructions, 0.15%)</title><rect x="1.0916%" y="309" width="0.1499%" height="15" fill="rgb(239,214,48)" fg:x="3327" fg:w="457"/><text x="1.3846%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (686 instructions, 0.23%)</title><rect x="1.0618%" y="325" width="0.2251%" height="15" fill="rgb(241,56,8)" fg:x="3236" fg:w="686"/><text x="1.3547%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="1.2868%" y="325" width="0.0312%" height="15" fill="rgb(228,201,0)" fg:x="3922" fg:w="95"/><text x="1.5798%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="1.3180%" y="325" width="0.0207%" height="15" fill="rgb(226,219,34)" fg:x="4017" fg:w="63"/><text x="1.6110%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,493 instructions, 0.49%)</title><rect x="0.9102%" y="341" width="0.4899%" height="15" fill="rgb(209,204,54)" fg:x="2774" fg:w="1493"/><text x="1.2031%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.02%)</title><rect x="1.4000%" y="341" width="0.0249%" height="15" fill="rgb(251,160,17)" fg:x="4267" fg:w="76"/><text x="1.6930%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4420%" y="341" width="0.0299%" height="15" fill="rgb(235,15,25)" fg:x="4395" fg:w="91"/><text x="1.7350%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4719%" y="341" width="0.0299%" height="15" fill="rgb(216,209,28)" fg:x="4486" fg:w="91"/><text x="1.7649%" y="351.50"></text></g><g><title>memcpy (392 instructions, 0.13%)</title><rect x="1.5031%" y="341" width="0.1286%" height="15" fill="rgb(248,123,21)" fg:x="4581" fg:w="392"/><text x="1.7960%" y="351.50"></text></g><g><title>memcpy (392 instructions, 0.13%)</title><rect x="1.6317%" y="341" width="0.1286%" height="15" fill="rgb(226,138,44)" fg:x="4973" fg:w="392"/><text x="1.9246%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="1.7603%" y="341" width="0.1654%" height="15" fill="rgb(211,104,54)" fg:x="5365" fg:w="504"/><text x="2.0533%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new_with_config (6,598 instructions, 2.16%)</title><rect x="0.1017%" y="357" width="2.1649%" height="15" fill="rgb(241,198,15)" fg:x="310" fg:w="6598"/><text x="0.3947%" y="367.50">c..</text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="2.2666%" y="357" width="0.1129%" height="15" fill="rgb(227,155,54)" fg:x="6908" fg:w="344"/><text x="2.5595%" y="367.50"></text></g><g><title>candid::de::IDLDeserialize::done (43 instructions, 0.01%)</title><rect x="2.3794%" y="357" width="0.0141%" height="15" fill="rgb(225,131,31)" fg:x="7252" fg:w="43"/><text x="2.6724%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="2.3958%" y="325" width="0.0292%" height="15" fill="rgb(242,40,17)" fg:x="7302" fg:w="89"/><text x="2.6888%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.04%)</title><rect x="2.4395%" y="325" width="0.0387%" height="15" fill="rgb(254,57,35)" fg:x="7435" fg:w="118"/><text x="2.7324%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (295 instructions, 0.10%)</title><rect x="2.3958%" y="341" width="0.0968%" height="15" fill="rgb(240,64,32)" fg:x="7302" fg:w="295"/><text x="2.6888%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::IDLDeserialize&gt; (360 instructions, 0.12%)</title><rect x="2.3935%" y="357" width="0.1181%" height="15" fill="rgb(251,136,26)" fg:x="7295" fg:w="360"/><text x="2.6865%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="2.5117%" y="357" width="0.0207%" height="15" fill="rgb(208,60,54)" fg:x="7655" fg:w="63"/><text x="2.8046%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (8,782 instructions, 2.88%)</title><rect x="0.0719%" y="373" width="2.8814%" height="15" fill="rgb(220,13,12)" fg:x="219" fg:w="8782"/><text x="0.3648%" y="383.50">ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="2.9533%" y="341" width="0.0299%" height="15" fill="rgb(213,149,1)" fg:x="9001" fg:w="91"/><text x="3.2463%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 instructions, 0.04%)</title><rect x="2.9533%" y="357" width="0.0420%" height="15" fill="rgb(212,191,39)" fg:x="9001" fg:w="128"/><text x="3.2463%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (210 instructions, 0.07%)</title><rect x="2.9533%" y="373" width="0.0689%" height="15" fill="rgb(215,221,42)" fg:x="9001" fg:w="210"/><text x="3.2463%" y="383.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.0534%" y="277" width="0.0138%" height="15" fill="rgb(244,79,23)" fg:x="9306" fg:w="42"/><text x="3.3463%" y="287.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.0672%" y="261" width="0.0138%" height="15" fill="rgb(247,17,29)" fg:x="9348" fg:w="42"/><text x="3.3601%" y="271.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.0809%" y="245" width="0.0138%" height="15" fill="rgb(251,221,21)" fg:x="9390" fg:w="42"/><text x="3.3739%" y="255.50"></text></g><g><title>memcmp (65 instructions, 0.02%)</title><rect x="3.0947%" y="229" width="0.0213%" height="15" fill="rgb(207,202,34)" fg:x="9432" fg:w="65"/><text x="3.3877%" y="239.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="3.1160%" y="213" width="0.0138%" height="15" fill="rgb(217,4,34)" fg:x="9497" fg:w="42"/><text x="3.4090%" y="223.50"></text></g><g><title>memcmp (169 instructions, 0.06%)</title><rect x="3.1298%" y="197" width="0.0555%" height="15" fill="rgb(253,17,16)" fg:x="9539" fg:w="169"/><text x="3.4228%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.1853%" y="197" width="0.0299%" height="15" fill="rgb(223,91,48)" fg:x="9708" fg:w="91"/><text x="3.4782%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.2151%" y="181" width="0.0299%" height="15" fill="rgb(244,191,22)" fg:x="9799" fg:w="91"/><text x="3.5081%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="3.2450%" y="181" width="0.1129%" height="15" fill="rgb(211,107,14)" fg:x="9890" fg:w="344"/><text x="3.5380%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.3579%" y="181" width="0.0299%" height="15" fill="rgb(232,81,23)" fg:x="10234" fg:w="91"/><text x="3.6508%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (843 instructions, 0.28%)</title><rect x="3.2151%" y="197" width="0.2766%" height="15" fill="rgb(237,126,14)" fg:x="9799" fg:w="843"/><text x="3.5081%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,293 instructions, 0.42%)</title><rect x="3.1298%" y="213" width="0.4242%" height="15" fill="rgb(230,65,39)" fg:x="9539" fg:w="1293"/><text x="3.4228%" y="223.50"></text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="3.5541%" y="181" width="0.0787%" height="15" fill="rgb(208,106,41)" fg:x="10832" fg:w="240"/><text x="3.8470%" y="191.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="3.6328%" y="181" width="0.0722%" height="15" fill="rgb(206,125,25)" fg:x="11072" fg:w="220"/><text x="3.9258%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.7050%" y="181" width="0.1654%" height="15" fill="rgb(250,24,29)" fg:x="11292" fg:w="504"/><text x="3.9980%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="3.5541%" y="197" width="0.3462%" height="15" fill="rgb(226,49,32)" fg:x="10832" fg:w="1055"/><text x="3.8470%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="3.9002%" y="197" width="0.0430%" height="15" fill="rgb(217,110,16)" fg:x="11887" fg:w="131"/><text x="4.1932%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.9432%" y="197" width="0.1654%" height="15" fill="rgb(252,16,53)" fg:x="12018" fg:w="504"/><text x="4.2362%" y="207.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="4.1086%" y="197" width="0.0600%" height="15" fill="rgb(238,163,11)" fg:x="12522" fg:w="183"/><text x="4.4015%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="4.1686%" y="197" width="1.6363%" height="15" fill="rgb(206,210,1)" fg:x="12705" fg:w="4987"/><text x="4.4616%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="3.5541%" y="213" width="2.3725%" height="15" fill="rgb(229,8,25)" fg:x="10832" fg:w="7231"/><text x="3.8470%" y="223.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="5.9266%" y="181" width="0.0787%" height="15" fill="rgb(247,155,23)" fg:x="18063" fg:w="240"/><text x="6.2196%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="6.0054%" y="181" width="0.0732%" height="15" fill="rgb(207,26,7)" fg:x="18303" fg:w="223"/><text x="6.2983%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.0785%" y="181" width="0.1654%" height="15" fill="rgb(215,179,12)" fg:x="18526" fg:w="504"/><text x="6.3715%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="5.9266%" y="197" width="0.3471%" height="15" fill="rgb(238,208,11)" fg:x="18063" fg:w="1058"/><text x="6.2196%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="6.2737%" y="197" width="0.0430%" height="15" fill="rgb(238,102,42)" fg:x="19121" fg:w="131"/><text x="6.5667%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.3167%" y="197" width="0.1654%" height="15" fill="rgb(239,35,9)" fg:x="19252" fg:w="504"/><text x="6.6097%" y="207.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="6.4821%" y="197" width="0.0210%" height="15" fill="rgb(244,182,30)" fg:x="19756" fg:w="64"/><text x="6.7751%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="6.5031%" y="197" width="1.6363%" height="15" fill="rgb(232,181,23)" fg:x="19820" fg:w="4987"/><text x="6.7961%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="8.1394%" y="197" width="1.6363%" height="15" fill="rgb(242,154,29)" fg:x="24807" fg:w="4987"/><text x="8.4323%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="5.9266%" y="213" width="3.9996%" height="15" fill="rgb(219,23,2)" fg:x="18063" fg:w="12190"/><text x="6.2196%" y="223.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="9.9262%" y="165" width="0.0787%" height="15" fill="rgb(234,94,43)" fg:x="30253" fg:w="240"/><text x="10.2192%" y="175.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="10.0050%" y="165" width="0.0722%" height="15" fill="rgb(223,55,45)" fg:x="30493" fg:w="220"/><text x="10.2980%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="10.0772%" y="165" width="0.1654%" height="15" fill="rgb(241,215,54)" fg:x="30713" fg:w="504"/><text x="10.3701%" y="175.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="9.9262%" y="181" width="0.3462%" height="15" fill="rgb(247,63,53)" fg:x="30253" fg:w="1055"/><text x="10.2192%" y="191.50"></text></g><g><title>memcpy (259 instructions, 0.08%)</title><rect x="10.2724%" y="181" width="0.0850%" height="15" fill="rgb(220,166,7)" fg:x="31308" fg:w="259"/><text x="10.5654%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="10.3574%" y="181" width="1.6363%" height="15" fill="rgb(248,53,45)" fg:x="31567" fg:w="4987"/><text x="10.6503%" y="191.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="11.9936%" y="181" width="0.0459%" height="15" fill="rgb(224,207,20)" fg:x="36554" fg:w="140"/><text x="12.2866%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="12.0396%" y="181" width="0.1654%" height="15" fill="rgb(244,185,11)" fg:x="36694" fg:w="504"/><text x="12.3326%" y="191.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="12.2049%" y="181" width="0.0637%" height="15" fill="rgb(230,13,42)" fg:x="37198" fg:w="194"/><text x="12.4979%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="12.2686%" y="181" width="1.6363%" height="15" fill="rgb(243,191,18)" fg:x="37392" fg:w="4987"/><text x="12.5616%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.13%)</title><rect x="9.9262%" y="197" width="4.1279%" height="15" fill="rgb(249,135,15)" fg:x="30253" fg:w="12581"/><text x="10.2192%" y="207.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="14.0542%" y="197" width="0.0299%" height="15" fill="rgb(229,26,35)" fg:x="42834" fg:w="91"/><text x="14.3471%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.25%)</title><rect x="9.9262%" y="213" width="4.2523%" height="15" fill="rgb(216,191,16)" fg:x="30253" fg:w="12960"/><text x="10.2192%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,921 instructions, 11.13%)</title><rect x="3.1160%" y="229" width="11.1297%" height="15" fill="rgb(242,18,7)" fg:x="9497" fg:w="33921"/><text x="3.4090%" y="239.50">ic_certified_m..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="14.2458%" y="197" width="0.0787%" height="15" fill="rgb(205,128,17)" fg:x="43418" fg:w="240"/><text x="14.5387%" y="207.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="14.3245%" y="197" width="0.0722%" height="15" fill="rgb(229,199,44)" fg:x="43658" fg:w="220"/><text x="14.6175%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.3967%" y="197" width="0.1654%" height="15" fill="rgb(234,222,3)" fg:x="43878" fg:w="504"/><text x="14.6897%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="14.2458%" y="213" width="0.3462%" height="15" fill="rgb(220,170,20)" fg:x="43418" fg:w="1055"/><text x="14.5387%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="14.5919%" y="213" width="0.0430%" height="15" fill="rgb(207,138,8)" fg:x="44473" fg:w="131"/><text x="14.8849%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.6349%" y="213" width="0.1654%" height="15" fill="rgb(244,130,36)" fg:x="44604" fg:w="504"/><text x="14.9279%" y="223.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="14.8003%" y="213" width="0.0600%" height="15" fill="rgb(207,197,52)" fg:x="45108" fg:w="183"/><text x="15.0932%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="14.8603%" y="213" width="1.6363%" height="15" fill="rgb(206,9,21)" fg:x="45291" fg:w="4987"/><text x="15.1533%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="14.2458%" y="229" width="2.3725%" height="15" fill="rgb(250,15,47)" fg:x="43418" fg:w="7231"/><text x="14.5387%" y="239.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="16.6183%" y="197" width="0.0787%" height="15" fill="rgb(235,202,14)" fg:x="50649" fg:w="240"/><text x="16.9113%" y="207.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="16.6971%" y="197" width="0.0732%" height="15" fill="rgb(211,180,47)" fg:x="50889" fg:w="223"/><text x="16.9900%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.7702%" y="197" width="0.1654%" height="15" fill="rgb(209,61,11)" fg:x="51112" fg:w="504"/><text x="17.0632%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="16.6183%" y="213" width="0.3471%" height="15" fill="rgb(243,197,29)" fg:x="50649" fg:w="1058"/><text x="16.9113%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="16.9655%" y="213" width="0.0430%" height="15" fill="rgb(216,185,16)" fg:x="51707" fg:w="131"/><text x="17.2584%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="17.0084%" y="213" width="0.1654%" height="15" fill="rgb(248,5,15)" fg:x="51838" fg:w="504"/><text x="17.3014%" y="223.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="17.1738%" y="213" width="0.0210%" height="15" fill="rgb(240,39,41)" fg:x="52342" fg:w="64"/><text x="17.4668%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="17.1948%" y="213" width="1.6363%" height="15" fill="rgb(224,220,43)" fg:x="52406" fg:w="4987"/><text x="17.4878%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="18.8311%" y="213" width="1.6363%" height="15" fill="rgb(215,21,24)" fg:x="57393" fg:w="4987"/><text x="19.1241%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="16.6183%" y="229" width="3.9996%" height="15" fill="rgb(220,102,8)" fg:x="50649" fg:w="12190"/><text x="16.9113%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.6180%" y="213" width="0.0299%" height="15" fill="rgb(225,185,10)" fg:x="62839" fg:w="91"/><text x="20.9109%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="20.6478%" y="213" width="0.1129%" height="15" fill="rgb(212,108,24)" fg:x="62930" fg:w="344"/><text x="20.9408%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.7607%" y="213" width="0.0299%" height="15" fill="rgb(237,27,0)" fg:x="63274" fg:w="91"/><text x="21.0537%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="20.6180%" y="229" width="0.2782%" height="15" fill="rgb(212,106,38)" fg:x="62839" fg:w="848"/><text x="20.9109%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (54,459 instructions, 17.87%)</title><rect x="3.0947%" y="245" width="17.8684%" height="15" fill="rgb(210,125,30)" fg:x="9432" fg:w="54459"/><text x="3.3877%" y="255.50">ic_certified_map::rbtre..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="20.9631%" y="213" width="0.0787%" height="15" fill="rgb(215,219,1)" fg:x="63891" fg:w="240"/><text x="21.2561%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="21.0419%" y="213" width="0.0722%" height="15" fill="rgb(223,10,12)" fg:x="64131" fg:w="220"/><text x="21.3348%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.1141%" y="213" width="0.1654%" height="15" fill="rgb(245,40,34)" fg:x="64351" fg:w="504"/><text x="21.4070%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="20.9631%" y="229" width="0.3462%" height="15" fill="rgb(211,185,19)" fg:x="63891" fg:w="1055"/><text x="21.2561%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="21.3093%" y="229" width="0.0430%" height="15" fill="rgb(243,190,43)" fg:x="64946" fg:w="131"/><text x="21.6022%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.3523%" y="229" width="0.1654%" height="15" fill="rgb(232,208,29)" fg:x="65077" fg:w="504"/><text x="21.6452%" y="239.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="21.5176%" y="229" width="0.0600%" height="15" fill="rgb(234,134,27)" fg:x="65581" fg:w="183"/><text x="21.8106%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="21.5777%" y="229" width="1.6363%" height="15" fill="rgb(225,41,29)" fg:x="65764" fg:w="4987"/><text x="21.8706%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="20.9631%" y="245" width="2.3725%" height="15" fill="rgb(241,214,44)" fg:x="63891" fg:w="7231"/><text x="21.2561%" y="255.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="23.3357%" y="213" width="0.0787%" height="15" fill="rgb(205,219,41)" fg:x="71122" fg:w="240"/><text x="23.6286%" y="223.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="23.4144%" y="213" width="0.0732%" height="15" fill="rgb(226,15,26)" fg:x="71362" fg:w="223"/><text x="23.7074%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.4876%" y="213" width="0.1654%" height="15" fill="rgb(210,83,41)" fg:x="71585" fg:w="504"/><text x="23.7806%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="23.3357%" y="229" width="0.3471%" height="15" fill="rgb(247,9,39)" fg:x="71122" fg:w="1058"/><text x="23.6286%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="23.6828%" y="229" width="0.0430%" height="15" fill="rgb(209,37,30)" fg:x="72180" fg:w="131"/><text x="23.9758%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.7258%" y="229" width="0.1654%" height="15" fill="rgb(248,170,46)" fg:x="72311" fg:w="504"/><text x="24.0188%" y="239.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="23.8912%" y="229" width="0.0210%" height="15" fill="rgb(237,129,44)" fg:x="72815" fg:w="64"/><text x="24.1841%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="23.9122%" y="229" width="1.6363%" height="15" fill="rgb(225,117,51)" fg:x="72879" fg:w="4987"/><text x="24.2051%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="25.5484%" y="229" width="1.6363%" height="15" fill="rgb(212,165,2)" fg:x="77866" fg:w="4987"/><text x="25.8414%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="23.3357%" y="245" width="3.9996%" height="15" fill="rgb(213,53,45)" fg:x="71122" fg:w="12190"/><text x="23.6286%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.3353%" y="229" width="0.0299%" height="15" fill="rgb(220,148,3)" fg:x="83312" fg:w="91"/><text x="27.6283%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="27.3652%" y="229" width="0.1129%" height="15" fill="rgb(228,37,29)" fg:x="83403" fg:w="344"/><text x="27.6581%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.4780%" y="229" width="0.0299%" height="15" fill="rgb(209,76,29)" fg:x="83747" fg:w="91"/><text x="27.7710%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="27.3353%" y="245" width="0.2782%" height="15" fill="rgb(215,90,5)" fg:x="83312" fg:w="848"/><text x="27.6283%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (74,974 instructions, 24.60%)</title><rect x="3.0809%" y="261" width="24.5995%" height="15" fill="rgb(227,207,32)" fg:x="9390" fg:w="74974"/><text x="3.3739%" y="271.50">ic_certified_map::rbtree::RbTree&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="27.6805%" y="229" width="0.0787%" height="15" fill="rgb(251,218,44)" fg:x="84364" fg:w="240"/><text x="27.9734%" y="239.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="27.7592%" y="229" width="0.0722%" height="15" fill="rgb(211,44,16)" fg:x="84604" fg:w="220"/><text x="28.0522%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.8314%" y="229" width="0.1654%" height="15" fill="rgb(242,170,37)" fg:x="84824" fg:w="504"/><text x="28.1244%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="27.6805%" y="245" width="0.3462%" height="15" fill="rgb(205,181,22)" fg:x="84364" fg:w="1055"/><text x="27.9734%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="28.0266%" y="245" width="0.0430%" height="15" fill="rgb(228,130,19)" fg:x="85419" fg:w="131"/><text x="28.3196%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="28.0696%" y="245" width="0.1654%" height="15" fill="rgb(228,9,15)" fg:x="85550" fg:w="504"/><text x="28.3626%" y="255.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="28.2350%" y="245" width="0.0600%" height="15" fill="rgb(219,66,48)" fg:x="86054" fg:w="183"/><text x="28.5279%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="28.2950%" y="245" width="1.6363%" height="15" fill="rgb(234,203,10)" fg:x="86237" fg:w="4987"/><text x="28.5880%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="27.6805%" y="261" width="2.3725%" height="15" fill="rgb(219,209,1)" fg:x="84364" fg:w="7231"/><text x="27.9734%" y="271.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="30.0530%" y="229" width="0.0787%" height="15" fill="rgb(206,167,9)" fg:x="91595" fg:w="240"/><text x="30.3460%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="30.1318%" y="229" width="0.0732%" height="15" fill="rgb(210,11,39)" fg:x="91835" fg:w="223"/><text x="30.4247%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.2049%" y="229" width="0.1654%" height="15" fill="rgb(251,90,47)" fg:x="92058" fg:w="504"/><text x="30.4979%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="30.0530%" y="245" width="0.3471%" height="15" fill="rgb(237,7,4)" fg:x="91595" fg:w="1058"/><text x="30.3460%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="30.4002%" y="245" width="0.0430%" height="15" fill="rgb(232,205,47)" fg:x="92653" fg:w="131"/><text x="30.6931%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.4431%" y="245" width="0.1654%" height="15" fill="rgb(215,86,48)" fg:x="92784" fg:w="504"/><text x="30.7361%" y="255.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="30.6085%" y="245" width="0.0210%" height="15" fill="rgb(232,14,47)" fg:x="93288" fg:w="64"/><text x="30.9015%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="30.6295%" y="245" width="1.6363%" height="15" fill="rgb(240,28,46)" fg:x="93352" fg:w="4987"/><text x="30.9225%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="32.2658%" y="245" width="1.6363%" height="15" fill="rgb(224,85,5)" fg:x="98339" fg:w="4987"/><text x="32.5587%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="30.0530%" y="261" width="3.9996%" height="15" fill="rgb(219,34,25)" fg:x="91595" fg:w="12190"/><text x="30.3460%" y="271.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="34.0527%" y="213" width="0.0787%" height="15" fill="rgb(247,137,45)" fg:x="103785" fg:w="240"/><text x="34.3456%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="34.1314%" y="213" width="0.0722%" height="15" fill="rgb(237,121,47)" fg:x="104025" fg:w="220"/><text x="34.4244%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="34.2036%" y="213" width="0.1654%" height="15" fill="rgb(247,148,27)" fg:x="104245" fg:w="504"/><text x="34.4966%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="34.0527%" y="229" width="0.3462%" height="15" fill="rgb(220,44,0)" fg:x="103785" fg:w="1055"/><text x="34.3456%" y="239.50"></text></g><g><title>memcpy (259 instructions, 0.08%)</title><rect x="34.3988%" y="229" width="0.0850%" height="15" fill="rgb(236,61,29)" fg:x="104840" fg:w="259"/><text x="34.6918%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="34.4838%" y="229" width="1.6363%" height="15" fill="rgb(244,180,35)" fg:x="105099" fg:w="4987"/><text x="34.7768%" y="239.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="36.1201%" y="229" width="0.0459%" height="15" fill="rgb(242,14,54)" fg:x="110086" fg:w="140"/><text x="36.4130%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="36.1660%" y="229" width="0.1654%" height="15" fill="rgb(206,24,45)" fg:x="110226" fg:w="504"/><text x="36.4590%" y="239.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="36.3314%" y="229" width="0.0637%" height="15" fill="rgb(215,211,6)" fg:x="110730" fg:w="194"/><text x="36.6243%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="36.3950%" y="229" width="1.6363%" height="15" fill="rgb(207,56,2)" fg:x="110924" fg:w="4987"/><text x="36.6880%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.13%)</title><rect x="34.0527%" y="245" width="4.1279%" height="15" fill="rgb(220,135,9)" fg:x="103785" fg:w="12581"/><text x="34.3456%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="38.1806%" y="245" width="0.0299%" height="15" fill="rgb(214,145,52)" fg:x="116366" fg:w="91"/><text x="38.4735%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.25%)</title><rect x="34.0527%" y="261" width="4.2523%" height="15" fill="rgb(241,83,53)" fg:x="103785" fg:w="12960"/><text x="34.3456%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (107,602 instructions, 35.31%)</title><rect x="3.0672%" y="277" width="35.3050%" height="15" fill="rgb(222,66,13)" fg:x="9348" fg:w="107602"/><text x="3.3601%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="38.3722%" y="245" width="0.0787%" height="15" fill="rgb(239,164,54)" fg:x="116950" fg:w="240"/><text x="38.6652%" y="255.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="38.4509%" y="245" width="0.0722%" height="15" fill="rgb(216,189,13)" fg:x="117190" fg:w="220"/><text x="38.7439%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.5231%" y="245" width="0.1654%" height="15" fill="rgb(228,212,51)" fg:x="117410" fg:w="504"/><text x="38.8161%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="38.3722%" y="261" width="0.3462%" height="15" fill="rgb(207,190,21)" fg:x="116950" fg:w="1055"/><text x="38.6652%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="38.7183%" y="261" width="0.0430%" height="15" fill="rgb(245,28,35)" fg:x="118005" fg:w="131"/><text x="39.0113%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.7613%" y="261" width="0.1654%" height="15" fill="rgb(239,23,40)" fg:x="118136" fg:w="504"/><text x="39.0543%" y="271.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="38.9267%" y="261" width="0.0600%" height="15" fill="rgb(242,10,51)" fg:x="118640" fg:w="183"/><text x="39.2197%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="38.9867%" y="261" width="1.6363%" height="15" fill="rgb(207,186,5)" fg:x="118823" fg:w="4987"/><text x="39.2797%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="38.3722%" y="277" width="2.3725%" height="15" fill="rgb(242,21,16)" fg:x="116950" fg:w="7231"/><text x="38.6652%" y="287.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="40.7447%" y="245" width="0.0787%" height="15" fill="rgb(237,0,53)" fg:x="124181" fg:w="240"/><text x="41.0377%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="40.8235%" y="245" width="0.0732%" height="15" fill="rgb(215,8,52)" fg:x="124421" fg:w="223"/><text x="41.1165%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.8967%" y="245" width="0.1654%" height="15" fill="rgb(248,62,44)" fg:x="124644" fg:w="504"/><text x="41.1896%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="40.7447%" y="261" width="0.3471%" height="15" fill="rgb(224,83,15)" fg:x="124181" fg:w="1058"/><text x="41.0377%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="41.0919%" y="261" width="0.0430%" height="15" fill="rgb(249,100,46)" fg:x="125239" fg:w="131"/><text x="41.3848%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="41.1349%" y="261" width="0.1654%" height="15" fill="rgb(213,35,48)" fg:x="125370" fg:w="504"/><text x="41.4278%" y="271.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="41.3002%" y="261" width="0.0210%" height="15" fill="rgb(251,2,13)" fg:x="125874" fg:w="64"/><text x="41.5932%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="41.3212%" y="261" width="1.6363%" height="15" fill="rgb(212,132,21)" fg:x="125938" fg:w="4987"/><text x="41.6142%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="42.9575%" y="261" width="1.6363%" height="15" fill="rgb(247,17,21)" fg:x="130925" fg:w="4987"/><text x="43.2505%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="40.7447%" y="277" width="3.9996%" height="15" fill="rgb(220,177,38)" fg:x="124181" fg:w="12190"/><text x="41.0377%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.7444%" y="261" width="0.0299%" height="15" fill="rgb(233,219,21)" fg:x="136371" fg:w="91"/><text x="45.0373%" y="271.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="44.7742%" y="261" width="0.1129%" height="15" fill="rgb(246,17,7)" fg:x="136462" fg:w="344"/><text x="45.0672%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.8871%" y="261" width="0.0299%" height="15" fill="rgb(212,4,22)" fg:x="136806" fg:w="91"/><text x="45.1801%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="44.7444%" y="277" width="0.2782%" height="15" fill="rgb(243,85,21)" fg:x="136371" fg:w="848"/><text x="45.0373%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (128,117 instructions, 42.04%)</title><rect x="3.0534%" y="293" width="42.0362%" height="15" fill="rgb(232,218,2)" fg:x="9306" fg:w="128117"/><text x="3.3463%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_wi..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="45.0895%" y="261" width="0.0787%" height="15" fill="rgb(253,168,47)" fg:x="137423" fg:w="240"/><text x="45.3825%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="45.1683%" y="261" width="0.0722%" height="15" fill="rgb(238,101,25)" fg:x="137663" fg:w="220"/><text x="45.4613%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.2405%" y="261" width="0.1654%" height="15" fill="rgb(251,86,12)" fg:x="137883" fg:w="504"/><text x="45.5334%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="45.0895%" y="277" width="0.3462%" height="15" fill="rgb(241,112,44)" fg:x="137423" fg:w="1055"/><text x="45.3825%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="45.4357%" y="277" width="0.0430%" height="15" fill="rgb(224,28,25)" fg:x="138478" fg:w="131"/><text x="45.7287%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.4787%" y="277" width="0.1654%" height="15" fill="rgb(209,201,1)" fg:x="138609" fg:w="504"/><text x="45.7716%" y="287.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="45.6440%" y="277" width="0.0600%" height="15" fill="rgb(231,30,22)" fg:x="139113" fg:w="183"/><text x="45.9370%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="45.7041%" y="277" width="1.6363%" height="15" fill="rgb(247,96,31)" fg:x="139296" fg:w="4987"/><text x="45.9971%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="45.0895%" y="293" width="2.3725%" height="15" fill="rgb(251,100,12)" fg:x="137423" fg:w="7231"/><text x="45.3825%" y="303.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="47.4621%" y="261" width="0.0787%" height="15" fill="rgb(224,174,7)" fg:x="144654" fg:w="240"/><text x="47.7551%" y="271.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="47.5408%" y="261" width="0.0732%" height="15" fill="rgb(231,168,19)" fg:x="144894" fg:w="223"/><text x="47.8338%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.6140%" y="261" width="0.1654%" height="15" fill="rgb(226,85,5)" fg:x="145117" fg:w="504"/><text x="47.9070%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="47.4621%" y="277" width="0.3471%" height="15" fill="rgb(210,215,5)" fg:x="144654" fg:w="1058"/><text x="47.7551%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="47.8092%" y="277" width="0.0430%" height="15" fill="rgb(233,70,8)" fg:x="145712" fg:w="131"/><text x="48.1022%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.8522%" y="277" width="0.1654%" height="15" fill="rgb(229,109,53)" fg:x="145843" fg:w="504"/><text x="48.1452%" y="287.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="48.0176%" y="277" width="0.0210%" height="15" fill="rgb(213,125,35)" fg:x="146347" fg:w="64"/><text x="48.3105%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="48.0386%" y="277" width="1.6363%" height="15" fill="rgb(215,12,48)" fg:x="146411" fg:w="4987"/><text x="48.3315%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="49.6748%" y="277" width="1.6363%" height="15" fill="rgb(207,12,38)" fg:x="151398" fg:w="4987"/><text x="49.9678%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="47.4621%" y="293" width="3.9996%" height="15" fill="rgb(216,229,2)" fg:x="144654" fg:w="12190"/><text x="47.7551%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.4617%" y="277" width="0.0299%" height="15" fill="rgb(229,209,31)" fg:x="156844" fg:w="91"/><text x="51.7547%" y="287.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="51.4916%" y="277" width="0.1129%" height="15" fill="rgb(239,57,22)" fg:x="156935" fg:w="344"/><text x="51.7845%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.6044%" y="277" width="0.0299%" height="15" fill="rgb(239,119,54)" fg:x="157279" fg:w="91"/><text x="51.8974%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="51.4617%" y="293" width="0.2782%" height="15" fill="rgb(231,80,45)" fg:x="156844" fg:w="848"/><text x="51.7547%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (148,609 instructions, 48.76%)</title><rect x="3.0471%" y="309" width="48.7598%" height="15" fill="rgb(219,138,19)" fg:x="9287" fg:w="148609"/><text x="3.3401%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go:..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="51.8069%" y="277" width="0.0787%" height="15" fill="rgb(216,53,26)" fg:x="157896" fg:w="240"/><text x="52.0999%" y="287.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="51.8856%" y="277" width="0.0722%" height="15" fill="rgb(224,30,16)" fg:x="158136" fg:w="220"/><text x="52.1786%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.9578%" y="277" width="0.1654%" height="15" fill="rgb(224,151,24)" fg:x="158356" fg:w="504"/><text x="52.2508%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="51.8069%" y="293" width="0.3462%" height="15" fill="rgb(236,75,7)" fg:x="157896" fg:w="1055"/><text x="52.0999%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="52.1530%" y="293" width="0.0430%" height="15" fill="rgb(248,106,42)" fg:x="158951" fg:w="131"/><text x="52.4460%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="52.1960%" y="293" width="0.1654%" height="15" fill="rgb(222,217,11)" fg:x="159082" fg:w="504"/><text x="52.4890%" y="303.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="52.3614%" y="293" width="0.0600%" height="15" fill="rgb(234,143,31)" fg:x="159586" fg:w="183"/><text x="52.6544%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="52.4214%" y="293" width="1.6363%" height="15" fill="rgb(237,148,28)" fg:x="159769" fg:w="4987"/><text x="52.7144%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="51.8069%" y="309" width="2.3725%" height="15" fill="rgb(241,151,6)" fg:x="157896" fg:w="7231"/><text x="52.0999%" y="319.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="54.1794%" y="277" width="0.0787%" height="15" fill="rgb(226,55,18)" fg:x="165127" fg:w="240"/><text x="54.4724%" y="287.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="54.2582%" y="277" width="0.0732%" height="15" fill="rgb(226,196,6)" fg:x="165367" fg:w="223"/><text x="54.5512%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.3313%" y="277" width="0.1654%" height="15" fill="rgb(251,228,11)" fg:x="165590" fg:w="504"/><text x="54.6243%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="54.1794%" y="293" width="0.3471%" height="15" fill="rgb(219,197,15)" fg:x="165127" fg:w="1058"/><text x="54.4724%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="54.5266%" y="293" width="0.0430%" height="15" fill="rgb(243,105,44)" fg:x="166185" fg:w="131"/><text x="54.8195%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.5696%" y="293" width="0.1654%" height="15" fill="rgb(205,183,40)" fg:x="166316" fg:w="504"/><text x="54.8625%" y="303.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="54.7349%" y="293" width="0.0210%" height="15" fill="rgb(232,138,46)" fg:x="166820" fg:w="64"/><text x="55.0279%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="54.7559%" y="293" width="1.6363%" height="15" fill="rgb(234,161,14)" fg:x="166884" fg:w="4987"/><text x="55.0489%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="56.3922%" y="293" width="1.6363%" height="15" fill="rgb(238,211,18)" fg:x="171871" fg:w="4987"/><text x="56.6852%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="54.1794%" y="309" width="3.9996%" height="15" fill="rgb(217,130,2)" fg:x="165127" fg:w="12190"/><text x="54.4724%" y="319.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="58.1791%" y="261" width="0.0787%" height="15" fill="rgb(251,17,29)" fg:x="177317" fg:w="240"/><text x="58.4720%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="58.2578%" y="261" width="0.0722%" height="15" fill="rgb(243,18,0)" fg:x="177557" fg:w="220"/><text x="58.5508%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="58.3300%" y="261" width="0.1654%" height="15" fill="rgb(227,220,45)" fg:x="177777" fg:w="504"/><text x="58.6230%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="58.1791%" y="277" width="0.3462%" height="15" fill="rgb(212,34,2)" fg:x="177317" fg:w="1055"/><text x="58.4720%" y="287.50"></text></g><g><title>memcpy (259 instructions, 0.08%)</title><rect x="58.5252%" y="277" width="0.0850%" height="15" fill="rgb(236,23,8)" fg:x="178372" fg:w="259"/><text x="58.8182%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="58.6102%" y="277" width="1.6363%" height="15" fill="rgb(210,113,39)" fg:x="178631" fg:w="4987"/><text x="58.9032%" y="287.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="60.2465%" y="277" width="0.0459%" height="15" fill="rgb(243,123,48)" fg:x="183618" fg:w="140"/><text x="60.5394%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="60.2924%" y="277" width="0.1654%" height="15" fill="rgb(223,175,36)" fg:x="183758" fg:w="504"/><text x="60.5854%" y="287.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="60.4578%" y="277" width="0.0637%" height="15" fill="rgb(226,100,30)" fg:x="184262" fg:w="194"/><text x="60.7507%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="60.5214%" y="277" width="1.6363%" height="15" fill="rgb(221,225,39)" fg:x="184456" fg:w="4987"/><text x="60.8144%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.13%)</title><rect x="58.1791%" y="293" width="4.1279%" height="15" fill="rgb(224,222,42)" fg:x="177317" fg:w="12581"/><text x="58.4720%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="62.3070%" y="293" width="0.0299%" height="15" fill="rgb(221,53,1)" fg:x="189898" fg:w="91"/><text x="62.6000%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.25%)</title><rect x="58.1791%" y="309" width="4.2523%" height="15" fill="rgb(216,187,48)" fg:x="177317" fg:w="12960"/><text x="58.4720%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (181,214 instructions, 59.46%)</title><rect x="3.0409%" y="325" width="59.4577%" height="15" fill="rgb(220,108,2)" fg:x="9268" fg:w="181214"/><text x="3.3339%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="62.4986%" y="293" width="0.0787%" height="15" fill="rgb(216,13,42)" fg:x="190482" fg:w="240"/><text x="62.7916%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="62.5774%" y="293" width="0.0722%" height="15" fill="rgb(205,14,29)" fg:x="190722" fg:w="220"/><text x="62.8703%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.6495%" y="293" width="0.1654%" height="15" fill="rgb(217,168,30)" fg:x="190942" fg:w="504"/><text x="62.9425%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="62.4986%" y="309" width="0.3462%" height="15" fill="rgb(246,173,54)" fg:x="190482" fg:w="1055"/><text x="62.7916%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="62.8448%" y="309" width="0.0430%" height="15" fill="rgb(227,177,11)" fg:x="191537" fg:w="131"/><text x="63.1377%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.8877%" y="309" width="0.1654%" height="15" fill="rgb(223,215,51)" fg:x="191668" fg:w="504"/><text x="63.1807%" y="319.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="63.0531%" y="309" width="0.0600%" height="15" fill="rgb(253,4,17)" fg:x="192172" fg:w="183"/><text x="63.3461%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="63.1132%" y="309" width="1.6363%" height="15" fill="rgb(206,150,43)" fg:x="192355" fg:w="4987"/><text x="63.4061%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="62.4986%" y="325" width="2.3725%" height="15" fill="rgb(241,100,52)" fg:x="190482" fg:w="7231"/><text x="62.7916%" y="335.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="64.8712%" y="293" width="0.0787%" height="15" fill="rgb(234,120,21)" fg:x="197713" fg:w="240"/><text x="65.1641%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="64.9499%" y="293" width="0.0732%" height="15" fill="rgb(231,60,11)" fg:x="197953" fg:w="223"/><text x="65.2429%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.0231%" y="293" width="0.1654%" height="15" fill="rgb(247,77,50)" fg:x="198176" fg:w="504"/><text x="65.3160%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="64.8712%" y="309" width="0.3471%" height="15" fill="rgb(251,199,54)" fg:x="197713" fg:w="1058"/><text x="65.1641%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="65.2183%" y="309" width="0.0430%" height="15" fill="rgb(212,120,38)" fg:x="198771" fg:w="131"/><text x="65.5113%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.2613%" y="309" width="0.1654%" height="15" fill="rgb(250,161,37)" fg:x="198902" fg:w="504"/><text x="65.5542%" y="319.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="65.4266%" y="309" width="0.0210%" height="15" fill="rgb(232,158,45)" fg:x="199406" fg:w="64"/><text x="65.7196%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="65.4476%" y="309" width="1.6363%" height="15" fill="rgb(233,114,2)" fg:x="199470" fg:w="4987"/><text x="65.7406%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="67.0839%" y="309" width="1.6363%" height="15" fill="rgb(248,139,0)" fg:x="204457" fg:w="4987"/><text x="67.3769%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="64.8712%" y="325" width="3.9996%" height="15" fill="rgb(222,164,18)" fg:x="197713" fg:w="12190"/><text x="65.1641%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.8708%" y="309" width="0.0299%" height="15" fill="rgb(221,140,42)" fg:x="209903" fg:w="91"/><text x="69.1638%" y="319.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="68.9006%" y="309" width="0.1129%" height="15" fill="rgb(209,186,11)" fg:x="209994" fg:w="344"/><text x="69.1936%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="69.0135%" y="309" width="0.0299%" height="15" fill="rgb(254,212,38)" fg:x="210338" fg:w="91"/><text x="69.3065%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="68.8708%" y="325" width="0.2782%" height="15" fill="rgb(219,156,31)" fg:x="209903" fg:w="848"/><text x="69.1638%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (201,706 instructions, 66.18%)</title><rect x="3.0347%" y="341" width="66.1813%" height="15" fill="rgb(222,148,42)" fg:x="9249" fg:w="201706"/><text x="3.3276%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="69.2160%" y="309" width="0.0787%" height="15" fill="rgb(225,65,5)" fg:x="210955" fg:w="240"/><text x="69.5089%" y="319.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="69.2947%" y="309" width="0.0722%" height="15" fill="rgb(235,28,12)" fg:x="211195" fg:w="220"/><text x="69.5877%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.3669%" y="309" width="0.1654%" height="15" fill="rgb(245,58,4)" fg:x="211415" fg:w="504"/><text x="69.6599%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="69.2160%" y="325" width="0.3462%" height="15" fill="rgb(235,118,5)" fg:x="210955" fg:w="1055"/><text x="69.5089%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="69.5621%" y="325" width="0.0430%" height="15" fill="rgb(253,196,3)" fg:x="212010" fg:w="131"/><text x="69.8551%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.6051%" y="325" width="0.1654%" height="15" fill="rgb(238,90,28)" fg:x="212141" fg:w="504"/><text x="69.8981%" y="335.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="69.7705%" y="325" width="0.0600%" height="15" fill="rgb(254,227,4)" fg:x="212645" fg:w="183"/><text x="70.0634%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="69.8305%" y="325" width="1.6363%" height="15" fill="rgb(237,114,35)" fg:x="212828" fg:w="4987"/><text x="70.1235%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="69.2160%" y="341" width="2.3725%" height="15" fill="rgb(221,147,29)" fg:x="210955" fg:w="7231"/><text x="69.5089%" y="351.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="71.5885%" y="309" width="0.0787%" height="15" fill="rgb(216,201,17)" fg:x="218186" fg:w="240"/><text x="71.8815%" y="319.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="71.6672%" y="309" width="0.0732%" height="15" fill="rgb(251,46,50)" fg:x="218426" fg:w="223"/><text x="71.9602%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.7404%" y="309" width="0.1654%" height="15" fill="rgb(216,143,48)" fg:x="218649" fg:w="504"/><text x="72.0334%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="71.5885%" y="325" width="0.3471%" height="15" fill="rgb(224,62,51)" fg:x="218186" fg:w="1058"/><text x="71.8815%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="71.9356%" y="325" width="0.0430%" height="15" fill="rgb(232,152,20)" fg:x="219244" fg:w="131"/><text x="72.2286%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.9786%" y="325" width="0.1654%" height="15" fill="rgb(233,194,7)" fg:x="219375" fg:w="504"/><text x="72.2716%" y="335.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="72.1440%" y="325" width="0.0210%" height="15" fill="rgb(207,33,22)" fg:x="219879" fg:w="64"/><text x="72.4370%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="72.1650%" y="325" width="1.6363%" height="15" fill="rgb(226,54,34)" fg:x="219943" fg:w="4987"/><text x="72.4580%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="73.8013%" y="325" width="1.6363%" height="15" fill="rgb(227,161,47)" fg:x="224930" fg:w="4987"/><text x="74.0942%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="71.5885%" y="341" width="3.9996%" height="15" fill="rgb(218,58,37)" fg:x="218186" fg:w="12190"/><text x="71.8815%" y="351.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="75.5881%" y="293" width="0.0787%" height="15" fill="rgb(208,173,18)" fg:x="230376" fg:w="240"/><text x="75.8811%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="75.6669%" y="293" width="0.0722%" height="15" fill="rgb(230,159,11)" fg:x="230616" fg:w="220"/><text x="75.9598%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="75.7391%" y="293" width="0.1654%" height="15" fill="rgb(238,90,51)" fg:x="230836" fg:w="504"/><text x="76.0320%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="75.5881%" y="309" width="0.3462%" height="15" fill="rgb(225,97,36)" fg:x="230376" fg:w="1055"/><text x="75.8811%" y="319.50"></text></g><g><title>memcpy (259 instructions, 0.08%)</title><rect x="75.9343%" y="309" width="0.0850%" height="15" fill="rgb(211,205,42)" fg:x="231431" fg:w="259"/><text x="76.2273%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="76.0193%" y="309" width="1.6363%" height="15" fill="rgb(219,152,7)" fg:x="231690" fg:w="4987"/><text x="76.3122%" y="319.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="77.6555%" y="309" width="0.0459%" height="15" fill="rgb(222,79,10)" fg:x="236677" fg:w="140"/><text x="77.9485%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="77.7015%" y="309" width="0.1654%" height="15" fill="rgb(242,13,11)" fg:x="236817" fg:w="504"/><text x="77.9944%" y="319.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="77.8668%" y="309" width="0.0637%" height="15" fill="rgb(231,143,41)" fg:x="237321" fg:w="194"/><text x="78.1598%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="77.9305%" y="309" width="1.6363%" height="15" fill="rgb(222,147,19)" fg:x="237515" fg:w="4987"/><text x="78.2235%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.13%)</title><rect x="75.5881%" y="325" width="4.1279%" height="15" fill="rgb(235,5,39)" fg:x="230376" fg:w="12581"/><text x="75.8811%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="79.7161%" y="325" width="0.0299%" height="15" fill="rgb(246,155,51)" fg:x="242957" fg:w="91"/><text x="80.0090%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.25%)</title><rect x="75.5881%" y="341" width="4.2523%" height="15" fill="rgb(218,157,4)" fg:x="230376" fg:w="12960"/><text x="75.8811%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (234,311 instructions, 76.88%)</title><rect x="3.0284%" y="357" width="76.8792%" height="15" fill="rgb(226,184,4)" fg:x="9230" fg:w="234311"/><text x="3.3214%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="79.9077%" y="325" width="0.0787%" height="15" fill="rgb(210,103,26)" fg:x="243541" fg:w="240"/><text x="80.2006%" y="335.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="79.9864%" y="325" width="0.0722%" height="15" fill="rgb(228,23,31)" fg:x="243781" fg:w="220"/><text x="80.2794%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.0586%" y="325" width="0.1654%" height="15" fill="rgb(205,176,34)" fg:x="244001" fg:w="504"/><text x="80.3516%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="79.9077%" y="341" width="0.3462%" height="15" fill="rgb(246,213,37)" fg:x="243541" fg:w="1055"/><text x="80.2006%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="80.2538%" y="341" width="0.0430%" height="15" fill="rgb(213,52,45)" fg:x="244596" fg:w="131"/><text x="80.5468%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.2968%" y="341" width="0.1654%" height="15" fill="rgb(249,9,52)" fg:x="244727" fg:w="504"/><text x="80.5898%" y="351.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="80.4622%" y="341" width="0.0600%" height="15" fill="rgb(205,97,16)" fg:x="245231" fg:w="183"/><text x="80.7551%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="80.5222%" y="341" width="1.6363%" height="15" fill="rgb(214,11,46)" fg:x="245414" fg:w="4987"/><text x="80.8152%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.37%)</title><rect x="79.9077%" y="357" width="2.3725%" height="15" fill="rgb(221,66,18)" fg:x="243541" fg:w="7231"/><text x="80.2006%" y="367.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="82.2802%" y="325" width="0.0787%" height="15" fill="rgb(213,49,1)" fg:x="250772" fg:w="240"/><text x="82.5732%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="82.3590%" y="325" width="0.0732%" height="15" fill="rgb(232,75,51)" fg:x="251012" fg:w="223"/><text x="82.6519%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.4321%" y="325" width="0.1654%" height="15" fill="rgb(208,218,40)" fg:x="251235" fg:w="504"/><text x="82.7251%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="82.2802%" y="341" width="0.3471%" height="15" fill="rgb(206,144,50)" fg:x="250772" fg:w="1058"/><text x="82.5732%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="82.6274%" y="341" width="0.0430%" height="15" fill="rgb(216,9,51)" fg:x="251830" fg:w="131"/><text x="82.9203%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.6703%" y="341" width="0.1654%" height="15" fill="rgb(226,6,53)" fg:x="251961" fg:w="504"/><text x="82.9633%" y="351.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="82.8357%" y="341" width="0.0210%" height="15" fill="rgb(216,9,50)" fg:x="252465" fg:w="64"/><text x="83.1287%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="82.8567%" y="341" width="1.6363%" height="15" fill="rgb(214,101,31)" fg:x="252529" fg:w="4987"/><text x="83.1497%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="84.4930%" y="341" width="1.6363%" height="15" fill="rgb(247,85,17)" fg:x="257516" fg:w="4987"/><text x="84.7859%" y="351.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.00%)</title><rect x="82.2802%" y="357" width="3.9996%" height="15" fill="rgb(248,138,25)" fg:x="250772" fg:w="12190"/><text x="82.5732%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.2798%" y="341" width="0.0299%" height="15" fill="rgb(225,146,20)" fg:x="262962" fg:w="91"/><text x="86.5728%" y="351.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="86.3097%" y="341" width="0.1129%" height="15" fill="rgb(224,184,17)" fg:x="263053" fg:w="344"/><text x="86.6027%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.4226%" y="341" width="0.0299%" height="15" fill="rgb(231,10,20)" fg:x="263397" fg:w="91"/><text x="86.7155%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="86.2798%" y="357" width="0.2782%" height="15" fill="rgb(210,93,37)" fg:x="262962" fg:w="848"/><text x="86.5728%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (254,803 instructions, 83.60%)</title><rect x="3.0222%" y="373" width="83.6028%" height="15" fill="rgb(226,84,42)" fg:x="9211" fg:w="254803"/><text x="3.3152%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.6250%" y="277" width="0.0299%" height="15" fill="rgb(253,192,7)" fg:x="264014" fg:w="91"/><text x="86.9180%" y="287.50"></text></g><g><title>memcpy (211 instructions, 0.07%)</title><rect x="86.6549%" y="277" width="0.0692%" height="15" fill="rgb(214,107,27)" fg:x="264105" fg:w="211"/><text x="86.9478%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="86.7241%" y="277" width="0.0292%" height="15" fill="rgb(238,146,21)" fg:x="264316" fg:w="89"/><text x="87.0171%" y="287.50"></text></g><g><title>__rust_realloc (503 instructions, 0.17%)</title><rect x="86.6250%" y="293" width="0.1650%" height="15" fill="rgb(209,136,30)" fg:x="264014" fg:w="503"/><text x="86.9180%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (551 instructions, 0.18%)</title><rect x="86.6250%" y="309" width="0.1808%" height="15" fill="rgb(226,60,22)" fg:x="264014" fg:w="551"/><text x="86.9180%" y="319.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="86.8344%" y="293" width="0.0308%" height="15" fill="rgb(243,92,26)" fg:x="264652" fg:w="94"/><text x="87.1273%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="86.8344%" y="309" width="0.0466%" height="15" fill="rgb(211,85,33)" fg:x="264652" fg:w="142"/><text x="87.1273%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (867 instructions, 0.28%)</title><rect x="86.6250%" y="325" width="0.2845%" height="15" fill="rgb(243,187,44)" fg:x="264014" fg:w="867"/><text x="86.9180%" y="335.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="86.9095%" y="325" width="0.0787%" height="15" fill="rgb(251,172,23)" fg:x="264881" fg:w="240"/><text x="87.2025%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,204 instructions, 0.40%)</title><rect x="86.6250%" y="341" width="0.3950%" height="15" fill="rgb(254,162,50)" fg:x="264014" fg:w="1204"/><text x="86.9180%" y="351.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="87.0493%" y="309" width="0.0308%" height="15" fill="rgb(239,14,53)" fg:x="265307" fg:w="94"/><text x="87.3422%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="87.0493%" y="325" width="0.0466%" height="15" fill="rgb(242,208,8)" fg:x="265307" fg:w="142"/><text x="87.3422%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="87.0493%" y="341" width="0.0751%" height="15" fill="rgb(225,61,41)" fg:x="265307" fg:w="229"/><text x="87.3422%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.1244%" y="309" width="0.1024%" height="15" fill="rgb(219,154,6)" fg:x="265536" fg:w="312"/><text x="87.4174%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.1244%" y="325" width="0.1276%" height="15" fill="rgb(227,223,44)" fg:x="265536" fg:w="389"/><text x="87.4174%" y="335.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="87.2812%" y="277" width="0.0308%" height="15" fill="rgb(220,188,6)" fg:x="266014" fg:w="94"/><text x="87.5742%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="87.2812%" y="293" width="0.0466%" height="15" fill="rgb(216,65,22)" fg:x="266014" fg:w="142"/><text x="87.5742%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="87.2812%" y="309" width="0.0751%" height="15" fill="rgb(236,66,46)" fg:x="266014" fg:w="229"/><text x="87.5742%" y="319.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.3564%" y="277" width="0.1024%" height="15" fill="rgb(211,150,52)" fg:x="266243" fg:w="312"/><text x="87.6493%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.3564%" y="293" width="0.1276%" height="15" fill="rgb(253,89,19)" fg:x="266243" fg:w="389"/><text x="87.6493%" y="303.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.5132%" y="261" width="0.0787%" height="15" fill="rgb(245,4,1)" fg:x="266721" fg:w="240"/><text x="87.8062%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="87.5132%" y="277" width="0.1040%" height="15" fill="rgb(230,109,16)" fg:x="266721" fg:w="317"/><text x="87.8062%" y="287.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="87.6464%" y="197" width="0.0308%" height="15" fill="rgb(213,7,47)" fg:x="267127" fg:w="94"/><text x="87.9394%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="87.6464%" y="213" width="0.0466%" height="15" fill="rgb(242,148,14)" fg:x="267127" fg:w="142"/><text x="87.9394%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="87.6464%" y="229" width="0.0751%" height="15" fill="rgb(238,51,34)" fg:x="267127" fg:w="229"/><text x="87.9394%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.7216%" y="229" width="0.0787%" height="15" fill="rgb(222,49,22)" fg:x="267356" fg:w="240"/><text x="88.0145%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (555 instructions, 0.18%)</title><rect x="87.6464%" y="245" width="0.1821%" height="15" fill="rgb(237,102,50)" fg:x="267127" fg:w="555"/><text x="87.9394%" y="255.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.8577%" y="213" width="0.1024%" height="15" fill="rgb(237,195,8)" fg:x="267771" fg:w="312"/><text x="88.1507%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.8577%" y="229" width="0.1276%" height="15" fill="rgb(245,60,18)" fg:x="267771" fg:w="389"/><text x="88.1507%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.0146%" y="197" width="0.0787%" height="15" fill="rgb(253,74,32)" fg:x="268249" fg:w="240"/><text x="88.3075%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.0146%" y="213" width="0.1040%" height="15" fill="rgb(240,91,39)" fg:x="268249" fg:w="317"/><text x="88.3075%" y="223.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.1478%" y="181" width="0.1024%" height="15" fill="rgb(221,162,34)" fg:x="268655" fg:w="312"/><text x="88.4407%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.1478%" y="197" width="0.1276%" height="15" fill="rgb(223,32,2)" fg:x="268655" fg:w="389"/><text x="88.4407%" y="207.50"></text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="88.3046%" y="117" width="0.0308%" height="15" fill="rgb(245,220,46)" fg:x="269133" fg:w="94"/><text x="88.5976%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="88.3046%" y="133" width="0.0466%" height="15" fill="rgb(216,38,33)" fg:x="269133" fg:w="142"/><text x="88.5976%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="88.3046%" y="149" width="0.0751%" height="15" fill="rgb(210,123,14)" fg:x="269133" fg:w="229"/><text x="88.5976%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.3797%" y="149" width="0.1024%" height="15" fill="rgb(214,38,47)" fg:x="269362" fg:w="312"/><text x="88.6727%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (629 instructions, 0.21%)</title><rect x="88.3046%" y="165" width="0.2064%" height="15" fill="rgb(244,180,16)" fg:x="269133" fg:w="629"/><text x="88.5976%" y="175.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.5402%" y="133" width="0.0787%" height="15" fill="rgb(252,21,32)" fg:x="269851" fg:w="240"/><text x="88.8332%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.5402%" y="149" width="0.1040%" height="15" fill="rgb(245,218,31)" fg:x="269851" fg:w="317"/><text x="88.8332%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.6734%" y="117" width="0.1024%" height="15" fill="rgb(247,81,18)" fg:x="270257" fg:w="312"/><text x="88.9664%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.6734%" y="133" width="0.1276%" height="15" fill="rgb(220,151,1)" fg:x="270257" fg:w="389"/><text x="88.9664%" y="143.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.8302%" y="101" width="0.0787%" height="15" fill="rgb(211,157,11)" fg:x="270735" fg:w="240"/><text x="89.1232%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.8302%" y="117" width="0.1040%" height="15" fill="rgb(239,46,30)" fg:x="270735" fg:w="317"/><text x="89.1232%" y="127.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.9634%" y="69" width="0.0787%" height="15" fill="rgb(236,144,43)" fg:x="271141" fg:w="240"/><text x="89.2564%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.9634%" y="85" width="0.1040%" height="15" fill="rgb(206,71,45)" fg:x="271141" fg:w="317"/><text x="89.2564%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="89.0967%" y="53" width="0.0430%" height="15" fill="rgb(240,85,31)" fg:x="271547" fg:w="131"/><text x="89.3896%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (202 instructions, 0.07%)</title><rect x="89.0967%" y="69" width="0.0663%" height="15" fill="rgb(221,43,52)" fg:x="271547" fg:w="202"/><text x="89.3896%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="89.1629%" y="37" width="0.0115%" height="15" fill="rgb(243,106,22)" fg:x="271749" fg:w="35"/><text x="89.4559%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (106 instructions, 0.03%)</title><rect x="89.1629%" y="53" width="0.0348%" height="15" fill="rgb(209,138,38)" fg:x="271749" fg:w="106"/><text x="89.4559%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (199 instructions, 0.07%)</title><rect x="89.1629%" y="69" width="0.0653%" height="15" fill="rgb(216,63,40)" fg:x="271749" fg:w="199"/><text x="89.4559%" y="79.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.2640%" y="53" width="0.0787%" height="15" fill="rgb(206,115,21)" fg:x="272057" fg:w="240"/><text x="89.5570%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.2640%" y="69" width="0.1040%" height="15" fill="rgb(235,53,44)" fg:x="272057" fg:w="317"/><text x="89.5570%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (916 instructions, 0.30%)</title><rect x="89.0967%" y="85" width="0.3005%" height="15" fill="rgb(244,160,14)" fg:x="271547" fg:w="916"/><text x="89.3896%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,428 instructions, 0.47%)</title><rect x="88.9634%" y="101" width="0.4685%" height="15" fill="rgb(223,16,19)" fg:x="271141" fg:w="1428"/><text x="89.2564%" y="111.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.4668%" y="85" width="0.0787%" height="15" fill="rgb(242,63,42)" fg:x="272675" fg:w="240"/><text x="89.7597%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.4668%" y="101" width="0.1040%" height="15" fill="rgb(209,66,49)" fg:x="272675" fg:w="317"/><text x="89.7597%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,940 instructions, 0.64%)</title><rect x="88.9634%" y="117" width="0.6365%" height="15" fill="rgb(207,126,46)" fg:x="271141" fg:w="1940"/><text x="89.2564%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,452 instructions, 0.80%)</title><rect x="88.8302%" y="133" width="0.8045%" height="15" fill="rgb(218,160,41)" fg:x="270735" fg:w="2452"/><text x="89.1232%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,036 instructions, 1.00%)</title><rect x="88.6734%" y="149" width="0.9961%" height="15" fill="rgb(234,125,46)" fg:x="270257" fg:w="3036"/><text x="88.9664%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,548 instructions, 1.16%)</title><rect x="88.5402%" y="165" width="1.1641%" height="15" fill="rgb(205,66,36)" fg:x="269851" fg:w="3548"/><text x="88.8332%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,372 instructions, 1.43%)</title><rect x="88.3046%" y="181" width="1.4345%" height="15" fill="rgb(220,135,16)" fg:x="269133" fg:w="4372"/><text x="88.5976%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.7739%" y="165" width="0.0787%" height="15" fill="rgb(214,217,54)" fg:x="273611" fg:w="240"/><text x="90.0668%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.7739%" y="181" width="0.1040%" height="15" fill="rgb(206,30,9)" fg:x="273611" fg:w="317"/><text x="90.0668%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,884 instructions, 1.60%)</title><rect x="88.3046%" y="197" width="1.6025%" height="15" fill="rgb(207,196,5)" fg:x="269133" fg:w="4884"/><text x="88.5976%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,468 instructions, 1.79%)</title><rect x="88.1478%" y="213" width="1.7941%" height="15" fill="rgb(227,116,12)" fg:x="268655" fg:w="5468"/><text x="88.4407%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,980 instructions, 1.96%)</title><rect x="88.0146%" y="229" width="1.9621%" height="15" fill="rgb(235,227,13)" fg:x="268249" fg:w="5980"/><text x="88.3075%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,564 instructions, 2.15%)</title><rect x="87.8577%" y="245" width="2.1537%" height="15" fill="rgb(238,212,29)" fg:x="267771" fg:w="6564"/><text x="88.1507%" y="255.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,314 instructions, 2.40%)</title><rect x="87.6464%" y="261" width="2.3998%" height="15" fill="rgb(230,152,17)" fg:x="267127" fg:w="7314"/><text x="87.9394%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (94 instructions, 0.03%)</title><rect x="90.0810%" y="213" width="0.0308%" height="15" fill="rgb(220,197,1)" fg:x="274547" fg:w="94"/><text x="90.3739%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (142 instructions, 0.05%)</title><rect x="90.0810%" y="229" width="0.0466%" height="15" fill="rgb(229,227,40)" fg:x="274547" fg:w="142"/><text x="90.3739%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (229 instructions, 0.08%)</title><rect x="90.0810%" y="245" width="0.0751%" height="15" fill="rgb(227,179,16)" fg:x="274547" fg:w="229"/><text x="90.3739%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.1561%" y="245" width="0.0787%" height="15" fill="rgb(246,116,44)" fg:x="274776" fg:w="240"/><text x="90.4491%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (557 instructions, 0.18%)</title><rect x="90.0810%" y="261" width="0.1828%" height="15" fill="rgb(205,191,4)" fg:x="274547" fg:w="557"/><text x="90.3739%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,066 instructions, 2.65%)</title><rect x="87.6464%" y="277" width="2.6465%" height="15" fill="rgb(245,69,19)" fg:x="267127" fg:w="8066"/><text x="87.9394%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,578 instructions, 2.81%)</title><rect x="87.5132%" y="293" width="2.8145%" height="15" fill="rgb(230,29,26)" fg:x="266721" fg:w="8578"/><text x="87.8062%" y="303.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,162 instructions, 3.01%)</title><rect x="87.3564%" y="309" width="3.0061%" height="15" fill="rgb(239,192,26)" fg:x="266243" fg:w="9162"/><text x="87.6493%" y="319.50">&lt;i..</text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.4002%" y="293" width="0.0787%" height="15" fill="rgb(219,92,16)" fg:x="275520" fg:w="240"/><text x="90.6932%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="90.4002%" y="309" width="0.1040%" height="15" fill="rgb(246,147,43)" fg:x="275520" fg:w="317"/><text x="90.6932%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,912 instructions, 3.25%)</title><rect x="87.2812%" y="325" width="3.2522%" height="15" fill="rgb(222,147,11)" fg:x="266014" fg:w="9912"/><text x="87.5742%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,496 instructions, 3.44%)</title><rect x="87.1244%" y="341" width="3.4438%" height="15" fill="rgb(243,71,8)" fg:x="265536" fg:w="10496"/><text x="87.4174%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,133 instructions, 3.98%)</title><rect x="86.6250%" y="357" width="3.9809%" height="15" fill="rgb(250,36,12)" fg:x="264014" fg:w="12133"/><text x="86.9180%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,239 instructions, 4.02%)</title><rect x="86.6250%" y="373" width="4.0157%" height="15" fill="rgb(207,168,14)" fg:x="264014" fg:w="12239"/><text x="86.9180%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.6755%" y="69" width="0.0472%" height="15" fill="rgb(254,210,51)" fg:x="276359" fg:w="144"/><text x="90.9685%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (182 instructions, 0.06%)</title><rect x="90.6706%" y="85" width="0.0597%" height="15" fill="rgb(236,152,38)" fg:x="276344" fg:w="182"/><text x="90.9636%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.7326%" y="85" width="0.0472%" height="15" fill="rgb(240,164,36)" fg:x="276533" fg:w="144"/><text x="91.0256%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (371 instructions, 0.12%)</title><rect x="90.6683%" y="101" width="0.1217%" height="15" fill="rgb(210,171,36)" fg:x="276337" fg:w="371"/><text x="90.9613%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.7900%" y="101" width="0.0472%" height="15" fill="rgb(254,156,34)" fg:x="276708" fg:w="144"/><text x="91.0830%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (546 instructions, 0.18%)</title><rect x="90.6683%" y="117" width="0.1791%" height="15" fill="rgb(216,204,23)" fg:x="276337" fg:w="546"/><text x="90.9613%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="90.8586%" y="101" width="0.0223%" height="15" fill="rgb(230,75,38)" fg:x="276917" fg:w="68"/><text x="91.1516%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.06%)</title><rect x="90.8497%" y="117" width="0.0627%" height="15" fill="rgb(248,197,25)" fg:x="276890" fg:w="191"/><text x="91.1427%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (782 instructions, 0.26%)</title><rect x="90.6660%" y="133" width="0.2566%" height="15" fill="rgb(234,121,26)" fg:x="276330" fg:w="782"/><text x="90.9590%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="90.9226%" y="117" width="0.0226%" height="15" fill="rgb(220,41,36)" fg:x="277112" fg:w="69"/><text x="91.2155%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="90.9452%" y="117" width="0.0223%" height="15" fill="rgb(227,33,32)" fg:x="277181" fg:w="68"/><text x="91.2382%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="90.9226%" y="133" width="0.0764%" height="15" fill="rgb(208,214,54)" fg:x="277112" fg:w="233"/><text x="91.2155%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,053 instructions, 0.35%)</title><rect x="90.6637%" y="149" width="0.3455%" height="15" fill="rgb(205,37,38)" fg:x="276323" fg:w="1053"/><text x="90.9567%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.0092%" y="133" width="0.0226%" height="15" fill="rgb(252,2,0)" fg:x="277376" fg:w="69"/><text x="91.3022%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.0318%" y="133" width="0.0223%" height="15" fill="rgb(212,171,10)" fg:x="277445" fg:w="68"/><text x="91.3248%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.0092%" y="149" width="0.0764%" height="15" fill="rgb(239,35,46)" fg:x="277376" fg:w="233"/><text x="91.3022%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,324 instructions, 0.43%)</title><rect x="90.6614%" y="165" width="0.4344%" height="15" fill="rgb(209,34,42)" fg:x="276316" fg:w="1324"/><text x="90.9544%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.0958%" y="149" width="0.0226%" height="15" fill="rgb(237,9,4)" fg:x="277640" fg:w="69"/><text x="91.3888%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.1185%" y="149" width="0.0223%" height="15" fill="rgb(254,55,38)" fg:x="277709" fg:w="68"/><text x="91.4114%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.0958%" y="165" width="0.0764%" height="15" fill="rgb(222,95,29)" fg:x="277640" fg:w="233"/><text x="91.3888%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,595 instructions, 0.52%)</title><rect x="90.6591%" y="181" width="0.5233%" height="15" fill="rgb(241,218,37)" fg:x="276309" fg:w="1595"/><text x="90.9521%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.1824%" y="165" width="0.0226%" height="15" fill="rgb(225,89,28)" fg:x="277904" fg:w="69"/><text x="91.4754%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.2051%" y="165" width="0.0223%" height="15" fill="rgb(231,17,25)" fg:x="277973" fg:w="68"/><text x="91.4980%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.1824%" y="181" width="0.0764%" height="15" fill="rgb(206,216,48)" fg:x="277904" fg:w="233"/><text x="91.4754%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,859 instructions, 0.61%)</title><rect x="90.6591%" y="197" width="0.6100%" height="15" fill="rgb(247,190,28)" fg:x="276309" fg:w="1859"/><text x="90.9521%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.2714%" y="181" width="0.0226%" height="15" fill="rgb(216,196,12)" fg:x="278175" fg:w="69"/><text x="91.5643%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.2940%" y="181" width="0.0223%" height="15" fill="rgb(232,114,19)" fg:x="278244" fg:w="68"/><text x="91.5870%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.2714%" y="197" width="0.0764%" height="15" fill="rgb(240,60,14)" fg:x="278175" fg:w="233"/><text x="91.5643%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,137 instructions, 0.70%)</title><rect x="90.6568%" y="213" width="0.7012%" height="15" fill="rgb(250,108,9)" fg:x="276302" fg:w="2137"/><text x="90.9498%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.3580%" y="197" width="0.0226%" height="15" fill="rgb(227,228,21)" fg:x="278439" fg:w="69"/><text x="91.6509%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.3806%" y="197" width="0.0223%" height="15" fill="rgb(254,16,52)" fg:x="278508" fg:w="68"/><text x="91.6736%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.3580%" y="213" width="0.0764%" height="15" fill="rgb(222,58,2)" fg:x="278439" fg:w="233"/><text x="91.6509%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,408 instructions, 0.79%)</title><rect x="90.6545%" y="229" width="0.7901%" height="15" fill="rgb(253,68,14)" fg:x="276295" fg:w="2408"/><text x="90.9475%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.4446%" y="213" width="0.0226%" height="15" fill="rgb(226,96,17)" fg:x="278703" fg:w="69"/><text x="91.7376%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.4672%" y="213" width="0.0223%" height="15" fill="rgb(227,199,2)" fg:x="278772" fg:w="68"/><text x="91.7602%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.4446%" y="229" width="0.0764%" height="15" fill="rgb(228,227,48)" fg:x="278703" fg:w="233"/><text x="91.7376%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,679 instructions, 0.88%)</title><rect x="90.6522%" y="245" width="0.8790%" height="15" fill="rgb(249,183,0)" fg:x="276288" fg:w="2679"/><text x="90.9452%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.5312%" y="229" width="0.0226%" height="15" fill="rgb(250,89,38)" fg:x="278967" fg:w="69"/><text x="91.8242%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.5539%" y="229" width="0.0223%" height="15" fill="rgb(240,227,8)" fg:x="279036" fg:w="68"/><text x="91.8468%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.5312%" y="245" width="0.0764%" height="15" fill="rgb(242,197,35)" fg:x="278967" fg:w="233"/><text x="91.8242%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,950 instructions, 0.97%)</title><rect x="90.6499%" y="261" width="0.9679%" height="15" fill="rgb(224,37,41)" fg:x="276281" fg:w="2950"/><text x="90.9429%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.6178%" y="245" width="0.0226%" height="15" fill="rgb(236,127,7)" fg:x="279231" fg:w="69"/><text x="91.9108%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.6405%" y="245" width="0.0223%" height="15" fill="rgb(230,62,52)" fg:x="279300" fg:w="68"/><text x="91.9334%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.6178%" y="261" width="0.0764%" height="15" fill="rgb(235,114,23)" fg:x="279231" fg:w="233"/><text x="91.9108%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,214 instructions, 1.05%)</title><rect x="90.6499%" y="277" width="1.0545%" height="15" fill="rgb(211,55,40)" fg:x="276281" fg:w="3214"/><text x="90.9429%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.7068%" y="261" width="0.0226%" height="15" fill="rgb(228,123,1)" fg:x="279502" fg:w="69"/><text x="91.9997%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.7294%" y="261" width="0.0223%" height="15" fill="rgb(244,208,8)" fg:x="279571" fg:w="68"/><text x="92.0224%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.7068%" y="277" width="0.0764%" height="15" fill="rgb(237,118,14)" fg:x="279502" fg:w="233"/><text x="91.9997%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,492 instructions, 1.15%)</title><rect x="90.6476%" y="293" width="1.1458%" height="15" fill="rgb(219,170,13)" fg:x="276274" fg:w="3492"/><text x="90.9406%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.7934%" y="277" width="0.0226%" height="15" fill="rgb(212,39,43)" fg:x="279766" fg:w="69"/><text x="92.0863%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.8160%" y="277" width="0.0223%" height="15" fill="rgb(244,191,2)" fg:x="279835" fg:w="68"/><text x="92.1090%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.7934%" y="293" width="0.0764%" height="15" fill="rgb(219,201,46)" fg:x="279766" fg:w="233"/><text x="92.0863%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,763 instructions, 1.23%)</title><rect x="90.6453%" y="309" width="1.2347%" height="15" fill="rgb(218,82,7)" fg:x="276267" fg:w="3763"/><text x="90.9383%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.8800%" y="293" width="0.0226%" height="15" fill="rgb(208,192,8)" fg:x="280030" fg:w="69"/><text x="92.1730%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.9026%" y="293" width="0.0223%" height="15" fill="rgb(244,54,32)" fg:x="280099" fg:w="68"/><text x="92.1956%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.8800%" y="309" width="0.0764%" height="15" fill="rgb(240,43,52)" fg:x="280030" fg:w="233"/><text x="92.1730%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,027 instructions, 1.32%)</title><rect x="90.6453%" y="325" width="1.3213%" height="15" fill="rgb(233,134,29)" fg:x="276267" fg:w="4027"/><text x="90.9383%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.9689%" y="309" width="0.0226%" height="15" fill="rgb(236,128,10)" fg:x="280301" fg:w="69"/><text x="92.2619%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.9915%" y="309" width="0.0223%" height="15" fill="rgb(207,46,54)" fg:x="280370" fg:w="68"/><text x="92.2845%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.9689%" y="325" width="0.0764%" height="15" fill="rgb(248,140,35)" fg:x="280301" fg:w="233"/><text x="92.2619%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,305 instructions, 1.41%)</title><rect x="90.6430%" y="341" width="1.4125%" height="15" fill="rgb(241,103,35)" fg:x="276260" fg:w="4305"/><text x="90.9360%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="92.0555%" y="325" width="0.0226%" height="15" fill="rgb(223,19,48)" fg:x="280565" fg:w="69"/><text x="92.3485%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.0782%" y="325" width="0.0223%" height="15" fill="rgb(238,177,46)" fg:x="280634" fg:w="68"/><text x="92.3711%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="92.0555%" y="341" width="0.0764%" height="15" fill="rgb(213,102,15)" fg:x="280565" fg:w="233"/><text x="92.3485%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,576 instructions, 1.50%)</title><rect x="90.6407%" y="357" width="1.5014%" height="15" fill="rgb(254,135,52)" fg:x="276253" fg:w="4576"/><text x="90.9337%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="92.1421%" y="341" width="0.0226%" height="15" fill="rgb(240,59,6)" fg:x="280829" fg:w="69"/><text x="92.4351%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.1648%" y="341" width="0.0223%" height="15" fill="rgb(207,226,5)" fg:x="280898" fg:w="68"/><text x="92.4578%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="92.1421%" y="357" width="0.0764%" height="15" fill="rgb(208,167,17)" fg:x="280829" fg:w="233"/><text x="92.4351%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,840 instructions, 1.59%)</title><rect x="90.6407%" y="373" width="1.5880%" height="15" fill="rgb(254,94,10)" fg:x="276253" fg:w="4840"/><text x="90.9337%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (174 instructions, 0.06%)</title><rect x="92.2288%" y="373" width="0.0571%" height="15" fill="rgb(229,33,11)" fg:x="281093" fg:w="174"/><text x="92.5217%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.03%)</title><rect x="92.2859%" y="373" width="0.0308%" height="15" fill="rgb(249,145,48)" fg:x="281267" fg:w="94"/><text x="92.5788%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.01%)</title><rect x="92.3167%" y="341" width="0.0128%" height="15" fill="rgb(253,68,54)" fg:x="281361" fg:w="39"/><text x="92.6097%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="92.3295%" y="341" width="0.0269%" height="15" fill="rgb(223,27,42)" fg:x="281400" fg:w="82"/><text x="92.6225%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.3587%" y="309" width="0.0194%" height="15" fill="rgb(235,123,13)" fg:x="281489" fg:w="59"/><text x="92.6517%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="92.3781%" y="309" width="0.1237%" height="15" fill="rgb(244,154,7)" fg:x="281548" fg:w="377"/><text x="92.6710%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.5018%" y="309" width="0.0256%" height="15" fill="rgb(214,30,25)" fg:x="281925" fg:w="78"/><text x="92.7947%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.3587%" y="325" width="0.2517%" height="15" fill="rgb(252,189,13)" fg:x="281489" fg:w="767"/><text x="92.6517%" y="335.50"></text></g><g><title>candid::types::internal::env_add (985 instructions, 0.32%)</title><rect x="92.3564%" y="341" width="0.3232%" height="15" fill="rgb(234,27,40)" fg:x="281482" fg:w="985"/><text x="92.6494%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="92.6796%" y="341" width="0.0269%" height="15" fill="rgb(252,199,25)" fg:x="282467" fg:w="82"/><text x="92.9726%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="92.7065%" y="341" width="0.0269%" height="15" fill="rgb(234,207,20)" fg:x="282549" fg:w="82"/><text x="92.9995%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.7357%" y="309" width="0.0194%" height="15" fill="rgb(244,220,10)" fg:x="282638" fg:w="59"/><text x="93.0287%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="92.7551%" y="309" width="0.1237%" height="15" fill="rgb(247,68,23)" fg:x="282697" fg:w="377"/><text x="93.0480%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.8788%" y="309" width="0.0256%" height="15" fill="rgb(254,61,4)" fg:x="283074" fg:w="78"/><text x="93.1717%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.7357%" y="325" width="0.2517%" height="15" fill="rgb(245,208,35)" fg:x="282638" fg:w="767"/><text x="93.0287%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="92.9874%" y="325" width="0.2215%" height="15" fill="rgb(235,90,11)" fg:x="283405" fg:w="675"/><text x="93.2803%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="93.2088%" y="309" width="0.0292%" height="15" fill="rgb(239,139,43)" fg:x="284080" fg:w="89"/><text x="93.5018%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.04%)</title><rect x="93.2088%" y="325" width="0.0436%" height="15" fill="rgb(209,187,9)" fg:x="284080" fg:w="133"/><text x="93.5018%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,761 instructions, 0.58%)</title><rect x="92.7334%" y="341" width="0.5778%" height="15" fill="rgb(241,30,6)" fg:x="282631" fg:w="1761"/><text x="93.0264%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.3112%" y="293" width="0.0194%" height="15" fill="rgb(216,104,1)" fg:x="284392" fg:w="59"/><text x="93.6042%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.3306%" y="293" width="0.0538%" height="15" fill="rgb(238,55,39)" fg:x="284451" fg:w="164"/><text x="93.6235%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="93.3112%" y="309" width="0.0991%" height="15" fill="rgb(226,151,41)" fg:x="284392" fg:w="302"/><text x="93.6042%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.4828%" y="293" width="0.0194%" height="15" fill="rgb(228,73,40)" fg:x="284915" fg:w="59"/><text x="93.7758%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.5022%" y="293" width="0.0538%" height="15" fill="rgb(215,81,0)" fg:x="284974" fg:w="164"/><text x="93.7951%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="93.4828%" y="309" width="0.0991%" height="15" fill="rgb(209,52,39)" fg:x="284915" fg:w="302"/><text x="93.7758%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,046 instructions, 0.34%)</title><rect x="93.3112%" y="325" width="0.3432%" height="15" fill="rgb(221,127,5)" fg:x="284392" fg:w="1046"/><text x="93.6042%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,348 instructions, 0.44%)</title><rect x="93.3112%" y="341" width="0.4423%" height="15" fill="rgb(213,215,6)" fg:x="284392" fg:w="1348"/><text x="93.6042%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,530 instructions, 1.49%)</title><rect x="92.3167%" y="357" width="1.4863%" height="15" fill="rgb(214,118,13)" fg:x="281361" fg:w="4530"/><text x="92.6097%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="93.8030%" y="325" width="0.0269%" height="15" fill="rgb(207,205,41)" fg:x="285891" fg:w="82"/><text x="94.0960%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="93.8030%" y="341" width="0.0427%" height="15" fill="rgb(218,208,45)" fg:x="285891" fg:w="130"/><text x="94.0960%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (215 instructions, 0.07%)</title><rect x="93.8030%" y="357" width="0.0705%" height="15" fill="rgb(244,81,54)" fg:x="285891" fg:w="215"/><text x="94.0960%" y="367.50"></text></g><g><title>candid::types::internal::is_primitive (38 instructions, 0.01%)</title><rect x="93.8736%" y="341" width="0.0125%" height="15" fill="rgb(244,175,1)" fg:x="286106" fg:w="38"/><text x="94.1665%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="93.8860%" y="309" width="0.0269%" height="15" fill="rgb(232,128,28)" fg:x="286144" fg:w="82"/><text x="94.1790%" y="319.50"></text></g><g><title>candid::types::internal::unroll (178 instructions, 0.06%)</title><rect x="93.8860%" y="325" width="0.0584%" height="15" fill="rgb(234,83,13)" fg:x="286144" fg:w="178"/><text x="94.1790%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="93.9444%" y="325" width="0.0269%" height="15" fill="rgb(233,222,35)" fg:x="286322" fg:w="82"/><text x="94.2374%" y="335.50"></text></g><g><title>candid::types::internal::unroll (363 instructions, 0.12%)</title><rect x="93.8860%" y="341" width="0.1191%" height="15" fill="rgb(244,204,21)" fg:x="286144" fg:w="363"/><text x="94.1790%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.0051%" y="293" width="0.0194%" height="15" fill="rgb(225,121,40)" fg:x="286507" fg:w="59"/><text x="94.2981%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="94.0245%" y="293" width="0.0538%" height="15" fill="rgb(231,89,18)" fg:x="286566" fg:w="164"/><text x="94.3175%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="94.0051%" y="309" width="0.0991%" height="15" fill="rgb(205,41,50)" fg:x="286507" fg:w="302"/><text x="94.2981%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 0.17%)</title><rect x="94.0051%" y="325" width="0.1716%" height="15" fill="rgb(254,25,22)" fg:x="286507" fg:w="523"/><text x="94.2981%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.1767%" y="325" width="0.0269%" height="15" fill="rgb(208,44,21)" fg:x="287030" fg:w="82"/><text x="94.4697%" y="335.50"></text></g><g><title>memset (152 instructions, 0.05%)</title><rect x="94.2036%" y="325" width="0.0499%" height="15" fill="rgb(237,59,53)" fg:x="287112" fg:w="152"/><text x="94.4966%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,079 instructions, 0.35%)</title><rect x="94.0051%" y="341" width="0.3540%" height="15" fill="rgb(233,24,36)" fg:x="286507" fg:w="1079"/><text x="94.2981%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.3592%" y="309" width="0.0269%" height="15" fill="rgb(216,92,41)" fg:x="287586" fg:w="82"/><text x="94.6521%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="94.3592%" y="325" width="0.0427%" height="15" fill="rgb(225,158,49)" fg:x="287586" fg:w="130"/><text x="94.6521%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (215 instructions, 0.07%)</title><rect x="94.3592%" y="341" width="0.0705%" height="15" fill="rgb(244,11,16)" fg:x="287586" fg:w="215"/><text x="94.6521%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.4297%" y="293" width="0.0194%" height="15" fill="rgb(208,215,38)" fg:x="287801" fg:w="59"/><text x="94.7227%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (102 instructions, 0.03%)</title><rect x="94.4297%" y="309" width="0.0335%" height="15" fill="rgb(250,69,53)" fg:x="287801" fg:w="102"/><text x="94.7227%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (323 instructions, 0.11%)</title><rect x="94.4297%" y="325" width="0.1060%" height="15" fill="rgb(240,187,52)" fg:x="287801" fg:w="323"/><text x="94.7227%" y="335.50"></text></g><g><title>candid::types::internal::is_primitive (31 instructions, 0.01%)</title><rect x="94.5357%" y="325" width="0.0102%" height="15" fill="rgb(235,22,25)" fg:x="288124" fg:w="31"/><text x="94.8287%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (503 instructions, 0.17%)</title><rect x="94.4297%" y="341" width="0.1650%" height="15" fill="rgb(213,173,22)" fg:x="287801" fg:w="503"/><text x="94.7227%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.5948%" y="293" width="0.0269%" height="15" fill="rgb(218,47,0)" fg:x="288304" fg:w="82"/><text x="94.8877%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="94.5948%" y="309" width="0.0427%" height="15" fill="rgb(254,157,11)" fg:x="288304" fg:w="130"/><text x="94.8877%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.07%)</title><rect x="94.5948%" y="325" width="0.0696%" height="15" fill="rgb(233,154,6)" fg:x="288304" fg:w="212"/><text x="94.8877%" y="335.50"></text></g><g><title>leb128::write::signed (271 instructions, 0.09%)</title><rect x="94.5948%" y="341" width="0.0889%" height="15" fill="rgb(233,207,47)" fg:x="288304" fg:w="271"/><text x="94.8877%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (66 instructions, 0.02%)</title><rect x="94.6837%" y="341" width="0.0217%" height="15" fill="rgb(249,128,18)" fg:x="288575" fg:w="66"/><text x="94.9766%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="94.7053%" y="309" width="0.0292%" height="15" fill="rgb(211,27,42)" fg:x="288641" fg:w="89"/><text x="94.9983%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (133 instructions, 0.04%)</title><rect x="94.7053%" y="325" width="0.0436%" height="15" fill="rgb(240,163,26)" fg:x="288641" fg:w="133"/><text x="94.9983%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.03%)</title><rect x="94.7490%" y="325" width="0.0272%" height="15" fill="rgb(232,118,46)" fg:x="288774" fg:w="83"/><text x="95.0419%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (270 instructions, 0.09%)</title><rect x="94.7053%" y="341" width="0.0886%" height="15" fill="rgb(238,158,34)" fg:x="288641" fg:w="270"/><text x="94.9983%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (3,081 instructions, 1.01%)</title><rect x="93.8736%" y="357" width="1.0109%" height="15" fill="rgb(254,99,45)" fg:x="286106" fg:w="3081"/><text x="94.1665%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="94.8887%" y="325" width="0.0269%" height="15" fill="rgb(247,205,20)" fg:x="289200" fg:w="82"/><text x="95.1817%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="94.8887%" y="341" width="0.0427%" height="15" fill="rgb(240,20,41)" fg:x="289200" fg:w="130"/><text x="95.1817%" y="351.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="94.9583%" y="325" width="0.0387%" height="15" fill="rgb(231,22,43)" fg:x="289412" fg:w="118"/><text x="95.2513%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.05%)</title><rect x="94.9583%" y="341" width="0.0545%" height="15" fill="rgb(207,86,33)" fg:x="289412" fg:w="166"/><text x="95.2513%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (465 instructions, 0.15%)</title><rect x="94.8887%" y="357" width="0.1526%" height="15" fill="rgb(231,148,5)" fg:x="289200" fg:w="465"/><text x="95.1817%" y="367.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="95.0413%" y="357" width="0.1024%" height="15" fill="rgb(253,77,28)" fg:x="289665" fg:w="312"/><text x="95.3343%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.2100%" y="309" width="0.0194%" height="15" fill="rgb(253,227,9)" fg:x="290179" fg:w="59"/><text x="95.5029%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="95.2293%" y="309" width="0.1237%" height="15" fill="rgb(235,4,18)" fg:x="290238" fg:w="377"/><text x="95.5223%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="95.3530%" y="309" width="0.0256%" height="15" fill="rgb(205,206,45)" fg:x="290615" fg:w="78"/><text x="95.6460%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="95.2100%" y="325" width="0.2517%" height="15" fill="rgb(252,34,0)" fg:x="290179" fg:w="767"/><text x="95.5029%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="95.4616%" y="325" width="0.2215%" height="15" fill="rgb(213,56,7)" fg:x="290946" fg:w="675"/><text x="95.7546%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,618 instructions, 0.53%)</title><rect x="95.2077%" y="341" width="0.5309%" height="15" fill="rgb(227,74,29)" fg:x="290172" fg:w="1618"/><text x="95.5006%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,662 instructions, 0.55%)</title><rect x="95.2077%" y="357" width="0.5453%" height="15" fill="rgb(221,32,48)" fg:x="290172" fg:w="1662"/><text x="95.5006%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.7530%" y="309" width="0.0194%" height="15" fill="rgb(230,205,25)" fg:x="291834" fg:w="59"/><text x="96.0459%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="95.7723%" y="309" width="0.0538%" height="15" fill="rgb(215,110,9)" fg:x="291893" fg:w="164"/><text x="96.0653%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="95.7530%" y="325" width="0.0991%" height="15" fill="rgb(245,220,47)" fg:x="291834" fg:w="302"/><text x="96.0459%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 0.17%)</title><rect x="95.7530%" y="341" width="0.1716%" height="15" fill="rgb(224,117,5)" fg:x="291834" fg:w="523"/><text x="96.0459%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (626 instructions, 0.21%)</title><rect x="95.7530%" y="357" width="0.2054%" height="15" fill="rgb(242,208,25)" fg:x="291834" fg:w="626"/><text x="96.0459%" y="367.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="95.9626%" y="325" width="0.0387%" height="15" fill="rgb(226,12,37)" fg:x="292473" fg:w="118"/><text x="96.2556%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.05%)</title><rect x="95.9626%" y="341" width="0.0545%" height="15" fill="rgb(224,221,22)" fg:x="292473" fg:w="166"/><text x="96.2556%" y="351.50"></text></g><g><title>__rust_realloc (118 instructions, 0.04%)</title><rect x="96.0456%" y="325" width="0.0387%" height="15" fill="rgb(239,38,44)" fg:x="292726" fg:w="118"/><text x="96.3386%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (166 instructions, 0.05%)</title><rect x="96.0456%" y="341" width="0.0545%" height="15" fill="rgb(218,25,46)" fg:x="292726" fg:w="166"/><text x="96.3386%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (506 instructions, 0.17%)</title><rect x="95.9626%" y="357" width="0.1660%" height="15" fill="rgb(206,137,51)" fg:x="292473" fg:w="506"/><text x="96.2556%" y="367.50"></text></g><g><title>memcpy (4,124 instructions, 1.35%)</title><rect x="96.1287%" y="357" width="1.3531%" height="15" fill="rgb(233,174,3)" fg:x="292979" fg:w="4124"/><text x="96.4216%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (15,964 instructions, 5.24%)</title><rect x="92.3167%" y="373" width="5.2379%" height="15" fill="rgb(207,224,43)" fg:x="281361" fg:w="15964"/><text x="92.6097%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (236 instructions, 0.08%)</title><rect x="97.5546%" y="373" width="0.0774%" height="15" fill="rgb(230,46,27)" fg:x="297325" fg:w="236"/><text x="97.8476%" y="383.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.17%)</title><rect x="97.6320%" y="357" width="0.1700%" height="15" fill="rgb(251,215,32)" fg:x="297561" fg:w="518"/><text x="97.9250%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (115 instructions, 0.04%)</title><rect x="97.8020%" y="309" width="0.0377%" height="15" fill="rgb(244,219,19)" fg:x="298079" fg:w="115"/><text x="98.0950%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (163 instructions, 0.05%)</title><rect x="97.8020%" y="325" width="0.0535%" height="15" fill="rgb(242,125,36)" fg:x="298079" fg:w="163"/><text x="98.0950%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (245 instructions, 0.08%)</title><rect x="97.8020%" y="341" width="0.0804%" height="15" fill="rgb(251,211,12)" fg:x="298079" fg:w="245"/><text x="98.0950%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="97.8824%" y="341" width="0.0269%" height="15" fill="rgb(209,179,33)" fg:x="298324" fg:w="82"/><text x="98.1754%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9093%" y="341" width="0.0167%" height="15" fill="rgb(205,161,48)" fg:x="298406" fg:w="51"/><text x="98.2023%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9260%" y="341" width="0.0167%" height="15" fill="rgb(241,139,8)" fg:x="298457" fg:w="51"/><text x="98.2190%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="97.9428%" y="341" width="0.0197%" height="15" fill="rgb(246,159,53)" fg:x="298508" fg:w="60"/><text x="98.2357%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="97.9625%" y="293" width="0.0194%" height="15" fill="rgb(212,62,27)" fg:x="298568" fg:w="59"/><text x="98.2554%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="97.9818%" y="293" width="0.0538%" height="15" fill="rgb(216,168,18)" fg:x="298627" fg:w="164"/><text x="98.2748%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="97.9625%" y="309" width="0.0991%" height="15" fill="rgb(228,136,50)" fg:x="298568" fg:w="302"/><text x="98.2554%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 0.17%)</title><rect x="97.9625%" y="325" width="0.1716%" height="15" fill="rgb(237,19,45)" fg:x="298568" fg:w="523"/><text x="98.2554%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="98.1341%" y="293" width="0.0269%" height="15" fill="rgb(249,150,28)" fg:x="299091" fg:w="82"/><text x="98.4270%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (130 instructions, 0.04%)</title><rect x="98.1341%" y="309" width="0.0427%" height="15" fill="rgb(236,179,39)" fg:x="299091" fg:w="130"/><text x="98.4270%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (212 instructions, 0.07%)</title><rect x="98.1341%" y="325" width="0.0696%" height="15" fill="rgb(250,113,27)" fg:x="299091" fg:w="212"/><text x="98.4270%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="98.2669%" y="293" width="0.0194%" height="15" fill="rgb(223,13,14)" fg:x="299496" fg:w="59"/><text x="98.5599%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="98.2863%" y="293" width="0.0538%" height="15" fill="rgb(226,68,24)" fg:x="299555" fg:w="164"/><text x="98.5793%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (302 instructions, 0.10%)</title><rect x="98.2669%" y="309" width="0.0991%" height="15" fill="rgb(239,40,50)" fg:x="299496" fg:w="302"/><text x="98.5599%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (523 instructions, 0.17%)</title><rect x="98.2669%" y="325" width="0.1716%" height="15" fill="rgb(209,187,0)" fg:x="299496" fg:w="523"/><text x="98.5599%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,635 instructions, 0.54%)</title><rect x="97.9625%" y="341" width="0.5365%" height="15" fill="rgb(240,61,8)" fg:x="298568" fg:w="1635"/><text x="98.2554%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.4989%" y="341" width="0.0167%" height="15" fill="rgb(236,137,5)" fg:x="300203" fg:w="51"/><text x="98.7919%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.5156%" y="341" width="0.0197%" height="15" fill="rgb(247,214,21)" fg:x="300254" fg:w="60"/><text x="98.8086%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,647 instructions, 0.87%)</title><rect x="97.8020%" y="357" width="0.8685%" height="15" fill="rgb(244,115,25)" fg:x="298079" fg:w="2647"/><text x="98.0950%" y="367.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.17%)</title><rect x="98.6705%" y="357" width="0.1706%" height="15" fill="rgb(230,58,38)" fg:x="300726" fg:w="520"/><text x="98.9635%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,250 instructions, 0.41%)</title><rect x="98.8411%" y="357" width="0.4101%" height="15" fill="rgb(206,122,6)" fg:x="301246" fg:w="1250"/><text x="99.1341%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (5,032 instructions, 1.65%)</title><rect x="97.6320%" y="373" width="1.6510%" height="15" fill="rgb(217,135,53)" fg:x="297561" fg:w="5032"/><text x="97.9250%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="99.2831%" y="373" width="0.0758%" height="15" fill="rgb(225,120,8)" fg:x="302593" fg:w="231"/><text x="99.5761%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (129 instructions, 0.04%)</title><rect x="99.3631%" y="373" width="0.0423%" height="15" fill="rgb(226,3,30)" fg:x="302837" fg:w="129"/><text x="99.6561%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (204 instructions, 0.07%)</title><rect x="99.4163%" y="373" width="0.0669%" height="15" fill="rgb(214,159,38)" fg:x="302999" fg:w="204"/><text x="99.7093%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.03%)</title><rect x="99.4832%" y="373" width="0.0322%" height="15" fill="rgb(242,182,47)" fg:x="303203" fg:w="98"/><text x="99.7762%" y="383.50"></text></g><g><title>certified_map::__canister_method_witness::{{closure}} (304,167 instructions, 99.80%)</title><rect x="0.0719%" y="389" width="99.7995%" height="15" fill="rgb(245,202,26)" fg:x="219" fg:w="304167"/><text x="0.3648%" y="399.50">certified_map::__canister_method_witness::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="99.8763%" y="389" width="0.0764%" height="15" fill="rgb(226,163,3)" fg:x="304401" fg:w="233"/><text x="100.1693%" y="399.50"></text></g><g><title>all (304,778 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(219,4,4)" fg:x="0" fg:w="304778"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (304,778 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(223,85,4)" fg:x="0" fg:w="304778"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>