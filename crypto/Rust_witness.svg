<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="288528"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="0.0066%" y="389" width="0.0409%" height="15" fill="rgb(223,22,42)" fg:x="19" fg:w="118"/><text x="0.2996%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.02%)</title><rect x="0.0475%" y="389" width="0.0246%" height="15" fill="rgb(244,6,23)" fg:x="137" fg:w="71"/><text x="0.3405%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0721%" y="357" width="0.0284%" height="15" fill="rgb(240,221,42)" fg:x="208" fg:w="82"/><text x="0.3651%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.1005%" y="341" width="0.0239%" height="15" fill="rgb(222,74,7)" fg:x="290" fg:w="69"/><text x="0.3935%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.1244%" y="341" width="0.1407%" height="15" fill="rgb(227,191,38)" fg:x="359" fg:w="406"/><text x="0.4174%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.2651%" y="341" width="0.0284%" height="15" fill="rgb(227,89,34)" fg:x="765" fg:w="82"/><text x="0.5581%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.2936%" y="341" width="0.0187%" height="15" fill="rgb(215,153,25)" fg:x="847" fg:w="54"/><text x="0.5865%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3123%" y="341" width="0.0187%" height="15" fill="rgb(215,153,46)" fg:x="901" fg:w="54"/><text x="0.6052%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3310%" y="341" width="0.0187%" height="15" fill="rgb(242,38,52)" fg:x="955" fg:w="54"/><text x="0.6240%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3497%" y="341" width="0.0187%" height="15" fill="rgb(218,112,4)" fg:x="1009" fg:w="54"/><text x="0.6427%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.3684%" y="341" width="0.0239%" height="15" fill="rgb(231,210,31)" fg:x="1063" fg:w="69"/><text x="0.6614%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.3923%" y="341" width="0.0225%" height="15" fill="rgb(245,223,36)" fg:x="1132" fg:w="65"/><text x="0.6853%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.4149%" y="341" width="0.1407%" height="15" fill="rgb(246,41,2)" fg:x="1197" fg:w="406"/><text x="0.7078%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.5611%" y="325" width="0.0284%" height="15" fill="rgb(227,51,31)" fg:x="1619" fg:w="82"/><text x="0.8541%" y="335.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="0.5895%" y="293" width="0.0208%" height="15" fill="rgb(222,95,26)" fg:x="1701" fg:w="60"/><text x="0.8825%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="0.5895%" y="309" width="0.0295%" height="15" fill="rgb(224,190,1)" fg:x="1701" fg:w="85"/><text x="0.8825%" y="319.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="0.6221%" y="245" width="0.0104%" height="15" fill="rgb(209,90,42)" fg:x="1795" fg:w="30"/><text x="0.9151%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="0.6221%" y="261" width="0.0191%" height="15" fill="rgb(232,225,50)" fg:x="1795" fg:w="55"/><text x="0.9151%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="0.6190%" y="277" width="0.0409%" height="15" fill="rgb(239,89,47)" fg:x="1786" fg:w="118"/><text x="0.9120%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="0.6190%" y="293" width="0.0593%" height="15" fill="rgb(230,212,50)" fg:x="1786" fg:w="171"/><text x="0.9120%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="0.6190%" y="309" width="0.0610%" height="15" fill="rgb(252,1,27)" fg:x="1786" fg:w="176"/><text x="0.9120%" y="319.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="0.5895%" y="325" width="0.1289%" height="15" fill="rgb(237,179,41)" fg:x="1701" fg:w="372"/><text x="0.8825%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="0.5611%" y="341" width="0.2062%" height="15" fill="rgb(214,151,37)" fg:x="1619" fg:w="595"/><text x="0.8541%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.7673%" y="341" width="0.0284%" height="15" fill="rgb(211,74,11)" fg:x="2214" fg:w="82"/><text x="1.0603%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="0.7958%" y="341" width="0.0194%" height="15" fill="rgb(242,21,21)" fg:x="2296" fg:w="56"/><text x="1.0887%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="0.8152%" y="341" width="0.0218%" height="15" fill="rgb(226,106,43)" fg:x="2352" fg:w="63"/><text x="1.1081%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.8370%" y="341" width="0.0225%" height="15" fill="rgb(229,162,39)" fg:x="2415" fg:w="65"/><text x="1.1300%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.8595%" y="325" width="0.1407%" height="15" fill="rgb(228,159,25)" fg:x="2480" fg:w="406"/><text x="1.1525%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.0058%" y="309" width="0.0284%" height="15" fill="rgb(237,32,23)" fg:x="2902" fg:w="82"/><text x="1.2988%" y="319.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="1.0342%" y="277" width="0.0208%" height="15" fill="rgb(212,35,32)" fg:x="2984" fg:w="60"/><text x="1.3272%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="1.0342%" y="293" width="0.0295%" height="15" fill="rgb(215,199,1)" fg:x="2984" fg:w="85"/><text x="1.3272%" y="303.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="1.0668%" y="229" width="0.0104%" height="15" fill="rgb(215,67,13)" fg:x="3078" fg:w="30"/><text x="1.3598%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="1.0668%" y="245" width="0.0191%" height="15" fill="rgb(216,20,47)" fg:x="3078" fg:w="55"/><text x="1.3598%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="1.0637%" y="261" width="0.0409%" height="15" fill="rgb(249,183,48)" fg:x="3069" fg:w="118"/><text x="1.3566%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="1.0637%" y="277" width="0.0593%" height="15" fill="rgb(208,86,37)" fg:x="3069" fg:w="171"/><text x="1.3566%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="1.0637%" y="293" width="0.0610%" height="15" fill="rgb(251,192,7)" fg:x="3069" fg:w="176"/><text x="1.3566%" y="303.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="1.0342%" y="309" width="0.1289%" height="15" fill="rgb(234,196,3)" fg:x="2984" fg:w="372"/><text x="1.3272%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="1.0058%" y="325" width="0.2062%" height="15" fill="rgb(229,150,39)" fg:x="2902" fg:w="595"/><text x="1.2988%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="1.2120%" y="325" width="0.0284%" height="15" fill="rgb(226,19,29)" fg:x="3497" fg:w="82"/><text x="1.5050%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="1.2404%" y="325" width="0.0194%" height="15" fill="rgb(226,222,2)" fg:x="3579" fg:w="56"/><text x="1.5334%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,314 instructions, 0.46%)</title><rect x="0.8595%" y="341" width="0.4554%" height="15" fill="rgb(235,85,29)" fg:x="2480" fg:w="1314"/><text x="1.1525%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="1.3150%" y="341" width="0.0218%" height="15" fill="rgb(237,194,43)" fg:x="3794" fg:w="63"/><text x="1.6079%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3534%" y="341" width="0.0284%" height="15" fill="rgb(211,4,42)" fg:x="3905" fg:w="82"/><text x="1.6464%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3818%" y="341" width="0.0284%" height="15" fill="rgb(221,80,37)" fg:x="3987" fg:w="82"/><text x="1.6748%" y="351.50"></text></g><g><title>memcpy (399 instructions, 0.14%)</title><rect x="1.4110%" y="341" width="0.1383%" height="15" fill="rgb(222,47,31)" fg:x="4071" fg:w="399"/><text x="1.7039%" y="351.50"></text></g><g><title>memcpy (399 instructions, 0.14%)</title><rect x="1.5492%" y="341" width="0.1383%" height="15" fill="rgb(249,82,52)" fg:x="4470" fg:w="399"/><text x="1.8422%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,361 instructions, 1.86%)</title><rect x="0.1005%" y="357" width="1.8581%" height="15" fill="rgb(218,203,2)" fg:x="290" fg:w="5361"/><text x="0.3935%" y="367.50"></text></g><g><title>memcpy (354 instructions, 0.12%)</title><rect x="1.9586%" y="357" width="0.1227%" height="15" fill="rgb(210,175,14)" fg:x="5651" fg:w="354"/><text x="2.2515%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="2.0854%" y="309" width="0.0281%" height="15" fill="rgb(216,210,12)" fg:x="6017" fg:w="81"/><text x="2.3784%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.04%)</title><rect x="2.1228%" y="309" width="0.0350%" height="15" fill="rgb(229,120,18)" fg:x="6125" fg:w="101"/><text x="2.4158%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.08%)</title><rect x="2.0854%" y="325" width="0.0818%" height="15" fill="rgb(231,174,12)" fg:x="6017" fg:w="236"/><text x="2.3784%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (285 instructions, 0.10%)</title><rect x="2.0813%" y="341" width="0.0988%" height="15" fill="rgb(214,101,53)" fg:x="6005" fg:w="285"/><text x="2.3742%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (323 instructions, 0.11%)</title><rect x="2.0813%" y="357" width="0.1119%" height="15" fill="rgb(246,89,43)" fg:x="6005" fg:w="323"/><text x="2.3742%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="2.1932%" y="357" width="0.0194%" height="15" fill="rgb(222,9,51)" fg:x="6328" fg:w="56"/><text x="2.4862%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (6,316 instructions, 2.19%)</title><rect x="0.0721%" y="373" width="2.1890%" height="15" fill="rgb(252,221,9)" fg:x="208" fg:w="6316"/><text x="0.3651%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.2611%" y="341" width="0.0284%" height="15" fill="rgb(248,28,15)" fg:x="6524" fg:w="82"/><text x="2.5541%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="2.2611%" y="357" width="0.0385%" height="15" fill="rgb(213,54,52)" fg:x="6524" fg:w="111"/><text x="2.5541%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.06%)</title><rect x="2.2611%" y="373" width="0.0610%" height="15" fill="rgb(240,3,45)" fg:x="6524" fg:w="176"/><text x="2.5541%" y="383.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3499%" y="277" width="0.0128%" height="15" fill="rgb(239,138,24)" fg:x="6780" fg:w="37"/><text x="2.6428%" y="287.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3627%" y="261" width="0.0128%" height="15" fill="rgb(233,45,54)" fg:x="6817" fg:w="37"/><text x="2.6557%" y="271.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3755%" y="245" width="0.0128%" height="15" fill="rgb(220,131,2)" fg:x="6854" fg:w="37"/><text x="2.6685%" y="255.50"></text></g><g><title>memcmp (58 instructions, 0.02%)</title><rect x="2.3883%" y="229" width="0.0201%" height="15" fill="rgb(240,154,36)" fg:x="6891" fg:w="58"/><text x="2.6813%" y="239.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.4084%" y="213" width="0.0128%" height="15" fill="rgb(251,221,1)" fg:x="6949" fg:w="37"/><text x="2.7014%" y="223.50"></text></g><g><title>memcmp (152 instructions, 0.05%)</title><rect x="2.4213%" y="197" width="0.0527%" height="15" fill="rgb(225,217,1)" fg:x="6986" fg:w="152"/><text x="2.7142%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4739%" y="197" width="0.0284%" height="15" fill="rgb(241,105,49)" fg:x="7138" fg:w="82"/><text x="2.7669%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.5024%" y="181" width="0.0284%" height="15" fill="rgb(215,44,32)" fg:x="7220" fg:w="82"/><text x="2.7953%" y="191.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="2.5308%" y="181" width="0.1109%" height="15" fill="rgb(213,222,14)" fg:x="7302" fg:w="320"/><text x="2.8237%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.6417%" y="181" width="0.0284%" height="15" fill="rgb(207,99,52)" fg:x="7622" fg:w="82"/><text x="2.9347%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (772 instructions, 0.27%)</title><rect x="2.5024%" y="197" width="0.2676%" height="15" fill="rgb(214,208,52)" fg:x="7220" fg:w="772"/><text x="2.7953%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,174 instructions, 0.41%)</title><rect x="2.4213%" y="213" width="0.4069%" height="15" fill="rgb(244,169,0)" fg:x="6986" fg:w="1174"/><text x="2.7142%" y="223.50"></text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="2.8281%" y="197" width="0.0756%" height="15" fill="rgb(216,193,37)" fg:x="8160" fg:w="218"/><text x="3.1211%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="2.9037%" y="197" width="0.1629%" height="15" fill="rgb(212,158,10)" fg:x="8378" fg:w="470"/><text x="3.1967%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="3.0666%" y="197" width="0.0416%" height="15" fill="rgb(213,110,20)" fg:x="8848" fg:w="120"/><text x="3.3596%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="3.1082%" y="197" width="0.1629%" height="15" fill="rgb(226,5,42)" fg:x="8968" fg:w="470"/><text x="3.4012%" y="207.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="3.2711%" y="181" width="0.0575%" height="15" fill="rgb(211,93,8)" fg:x="9438" fg:w="166"/><text x="3.5641%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="3.3286%" y="181" width="1.7277%" height="15" fill="rgb(240,208,12)" fg:x="9604" fg:w="4985"/><text x="3.6216%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="3.2711%" y="197" width="1.8851%" height="15" fill="rgb(233,127,50)" fg:x="9438" fg:w="5439"/><text x="3.5641%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="2.8281%" y="213" width="2.3897%" height="15" fill="rgb(227,199,53)" fg:x="8160" fg:w="6895"/><text x="3.1211%" y="223.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="5.2179%" y="197" width="0.0756%" height="15" fill="rgb(235,199,10)" fg:x="15055" fg:w="218"/><text x="5.5108%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.2934%" y="197" width="0.1629%" height="15" fill="rgb(228,148,35)" fg:x="15273" fg:w="470"/><text x="5.5864%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="5.4563%" y="197" width="0.0416%" height="15" fill="rgb(217,87,19)" fg:x="15743" fg:w="120"/><text x="5.7493%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.4979%" y="197" width="0.1629%" height="15" fill="rgb(239,9,32)" fg:x="15863" fg:w="470"/><text x="5.7909%" y="207.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="5.6608%" y="181" width="0.0194%" height="15" fill="rgb(229,101,29)" fg:x="16333" fg:w="56"/><text x="5.9538%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="5.6802%" y="181" width="1.7277%" height="15" fill="rgb(208,143,26)" fg:x="16389" fg:w="4985"/><text x="5.9732%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="7.4079%" y="181" width="1.7277%" height="15" fill="rgb(214,10,2)" fg:x="21374" fg:w="4985"/><text x="7.7009%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="5.6608%" y="197" width="3.5872%" height="15" fill="rgb(254,203,30)" fg:x="16333" fg:w="10350"/><text x="5.9538%" y="207.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="5.2179%" y="213" width="4.1102%" height="15" fill="rgb(242,45,3)" fg:x="15055" fg:w="11859"/><text x="5.5108%" y="223.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="9.3280%" y="181" width="0.0756%" height="15" fill="rgb(209,146,51)" fg:x="26914" fg:w="218"/><text x="9.6210%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="9.4036%" y="181" width="0.1629%" height="15" fill="rgb(222,80,5)" fg:x="27132" fg:w="470"/><text x="9.6966%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="9.5665%" y="181" width="0.0832%" height="15" fill="rgb(252,80,35)" fg:x="27602" fg:w="240"/><text x="9.8595%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="9.6497%" y="181" width="1.7277%" height="15" fill="rgb(246,125,28)" fg:x="27842" fg:w="4985"/><text x="9.9426%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="11.3774%" y="181" width="0.0620%" height="15" fill="rgb(224,143,51)" fg:x="32827" fg:w="179"/><text x="11.6704%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="11.4394%" y="181" width="0.1629%" height="15" fill="rgb(205,24,17)" fg:x="33006" fg:w="470"/><text x="11.7324%" y="191.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="11.6023%" y="165" width="0.0610%" height="15" fill="rgb(253,128,30)" fg:x="33476" fg:w="176"/><text x="11.8953%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="11.6633%" y="165" width="1.7277%" height="15" fill="rgb(214,153,25)" fg:x="33652" fg:w="4985"/><text x="11.9563%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="11.6023%" y="181" width="1.8886%" height="15" fill="rgb(214,4,28)" fg:x="33476" fg:w="5449"/><text x="11.8953%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="9.3280%" y="197" width="4.2509%" height="15" fill="rgb(235,179,52)" fg:x="26914" fg:w="12265"/><text x="9.6210%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="13.5789%" y="197" width="0.0284%" height="15" fill="rgb(233,27,42)" fg:x="39179" fg:w="82"/><text x="13.8719%" y="207.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="13.6073%" y="197" width="0.1109%" height="15" fill="rgb(238,35,25)" fg:x="39261" fg:w="320"/><text x="13.9003%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="9.3280%" y="213" width="4.5060%" height="15" fill="rgb(227,44,31)" fg:x="26914" fg:w="13001"/><text x="9.6210%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,143 instructions, 11.49%)</title><rect x="2.4084%" y="229" width="11.4869%" height="15" fill="rgb(232,201,13)" fg:x="6949" fg:w="33143"/><text x="2.7014%" y="239.50">ic_certified_m..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="13.8954%" y="213" width="0.0756%" height="15" fill="rgb(224,172,52)" fg:x="40092" fg:w="218"/><text x="14.1883%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="13.9709%" y="213" width="0.1629%" height="15" fill="rgb(214,27,26)" fg:x="40310" fg:w="470"/><text x="14.2639%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="14.1338%" y="213" width="0.0416%" height="15" fill="rgb(210,185,52)" fg:x="40780" fg:w="120"/><text x="14.4268%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="14.1754%" y="213" width="0.1629%" height="15" fill="rgb(249,59,32)" fg:x="40900" fg:w="470"/><text x="14.4684%" y="223.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="14.3383%" y="197" width="0.0575%" height="15" fill="rgb(242,209,18)" fg:x="41370" fg:w="166"/><text x="14.6313%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="14.3958%" y="197" width="1.7277%" height="15" fill="rgb(229,0,18)" fg:x="41536" fg:w="4985"/><text x="14.6888%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="14.3383%" y="213" width="1.8851%" height="15" fill="rgb(217,138,29)" fg:x="41370" fg:w="5439"/><text x="14.6313%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="13.8954%" y="229" width="2.3897%" height="15" fill="rgb(215,72,42)" fg:x="40092" fg:w="6895"/><text x="14.1883%" y="239.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="16.2851%" y="213" width="0.0756%" height="15" fill="rgb(254,115,11)" fg:x="46987" fg:w="218"/><text x="16.5780%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.3606%" y="213" width="0.1629%" height="15" fill="rgb(205,133,39)" fg:x="47205" fg:w="470"/><text x="16.6536%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="16.5235%" y="213" width="0.0416%" height="15" fill="rgb(211,36,27)" fg:x="47675" fg:w="120"/><text x="16.8165%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.5651%" y="213" width="0.1629%" height="15" fill="rgb(221,48,10)" fg:x="47795" fg:w="470"/><text x="16.8581%" y="223.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="16.7280%" y="197" width="0.0194%" height="15" fill="rgb(230,172,50)" fg:x="48265" fg:w="56"/><text x="17.0210%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="16.7474%" y="197" width="1.7277%" height="15" fill="rgb(249,72,18)" fg:x="48321" fg:w="4985"/><text x="17.0404%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="18.4752%" y="197" width="1.7277%" height="15" fill="rgb(237,58,48)" fg:x="53306" fg:w="4985"/><text x="18.7681%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="16.7280%" y="213" width="3.5872%" height="15" fill="rgb(242,123,3)" fg:x="48265" fg:w="10350"/><text x="17.0210%" y="223.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="16.2851%" y="229" width="4.1102%" height="15" fill="rgb(232,111,32)" fg:x="46987" fg:w="11859"/><text x="16.5780%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.3952%" y="213" width="0.0284%" height="15" fill="rgb(229,108,3)" fg:x="58846" fg:w="82"/><text x="20.6882%" y="223.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="20.4237%" y="213" width="0.1109%" height="15" fill="rgb(222,158,10)" fg:x="58928" fg:w="320"/><text x="20.7166%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.5346%" y="213" width="0.0284%" height="15" fill="rgb(205,34,49)" fg:x="59248" fg:w="82"/><text x="20.8275%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="20.3952%" y="229" width="0.2703%" height="15" fill="rgb(232,21,14)" fg:x="58846" fg:w="780"/><text x="20.6882%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (52,911 instructions, 18.34%)</title><rect x="2.3883%" y="245" width="18.3383%" height="15" fill="rgb(229,127,44)" fg:x="6891" fg:w="52911"/><text x="2.6813%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="20.7266%" y="229" width="0.0756%" height="15" fill="rgb(232,171,4)" fg:x="59802" fg:w="218"/><text x="21.0196%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.8021%" y="229" width="0.1629%" height="15" fill="rgb(250,92,16)" fg:x="60020" fg:w="470"/><text x="21.0951%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="20.9650%" y="229" width="0.0416%" height="15" fill="rgb(230,103,38)" fg:x="60490" fg:w="120"/><text x="21.2580%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="21.0066%" y="229" width="0.1629%" height="15" fill="rgb(253,167,9)" fg:x="60610" fg:w="470"/><text x="21.2996%" y="239.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="21.1695%" y="213" width="0.0575%" height="15" fill="rgb(222,118,11)" fg:x="61080" fg:w="166"/><text x="21.4625%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="21.2271%" y="213" width="1.7277%" height="15" fill="rgb(240,202,0)" fg:x="61246" fg:w="4985"/><text x="21.5200%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="21.1695%" y="229" width="1.8851%" height="15" fill="rgb(236,124,4)" fg:x="61080" fg:w="5439"/><text x="21.4625%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="20.7266%" y="245" width="2.3897%" height="15" fill="rgb(244,128,18)" fg:x="59802" fg:w="6895"/><text x="21.0196%" y="255.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="23.1163%" y="229" width="0.0756%" height="15" fill="rgb(231,206,5)" fg:x="66697" fg:w="218"/><text x="23.4093%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.1919%" y="229" width="0.1629%" height="15" fill="rgb(237,111,8)" fg:x="66915" fg:w="470"/><text x="23.4848%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="23.3548%" y="229" width="0.0416%" height="15" fill="rgb(225,127,3)" fg:x="67385" fg:w="120"/><text x="23.6477%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.3963%" y="229" width="0.1629%" height="15" fill="rgb(222,85,48)" fg:x="67505" fg:w="470"/><text x="23.6893%" y="239.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="23.5592%" y="213" width="0.0194%" height="15" fill="rgb(221,108,37)" fg:x="67975" fg:w="56"/><text x="23.8522%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="23.5786%" y="213" width="1.7277%" height="15" fill="rgb(226,169,36)" fg:x="68031" fg:w="4985"/><text x="23.8716%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="25.3064%" y="213" width="1.7277%" height="15" fill="rgb(237,76,12)" fg:x="73016" fg:w="4985"/><text x="25.5994%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="23.5592%" y="229" width="3.5872%" height="15" fill="rgb(210,227,32)" fg:x="67975" fg:w="10350"/><text x="23.8522%" y="239.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="23.1163%" y="245" width="4.1102%" height="15" fill="rgb(214,117,20)" fg:x="66697" fg:w="11859"/><text x="23.4093%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.2265%" y="229" width="0.0284%" height="15" fill="rgb(234,119,41)" fg:x="78556" fg:w="82"/><text x="27.5194%" y="239.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="27.2549%" y="229" width="0.1109%" height="15" fill="rgb(230,130,47)" fg:x="78638" fg:w="320"/><text x="27.5479%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.3658%" y="229" width="0.0284%" height="15" fill="rgb(215,21,41)" fg:x="78958" fg:w="82"/><text x="27.6588%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="27.2265%" y="245" width="0.2703%" height="15" fill="rgb(226,26,53)" fg:x="78556" fg:w="780"/><text x="27.5194%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (72,658 instructions, 25.18%)</title><rect x="2.3755%" y="261" width="25.1823%" height="15" fill="rgb(221,92,23)" fg:x="6854" fg:w="72658"/><text x="2.6685%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="27.5578%" y="245" width="0.0756%" height="15" fill="rgb(213,156,21)" fg:x="79512" fg:w="218"/><text x="27.8508%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.6334%" y="245" width="0.1629%" height="15" fill="rgb(254,166,29)" fg:x="79730" fg:w="470"/><text x="27.9263%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="27.7963%" y="245" width="0.0416%" height="15" fill="rgb(213,71,1)" fg:x="80200" fg:w="120"/><text x="28.0892%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.8379%" y="245" width="0.1629%" height="15" fill="rgb(245,8,13)" fg:x="80320" fg:w="470"/><text x="28.1308%" y="255.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="28.0007%" y="229" width="0.0575%" height="15" fill="rgb(213,32,32)" fg:x="80790" fg:w="166"/><text x="28.2937%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="28.0583%" y="229" width="1.7277%" height="15" fill="rgb(251,86,50)" fg:x="80956" fg:w="4985"/><text x="28.3513%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="28.0007%" y="245" width="1.8851%" height="15" fill="rgb(252,92,41)" fg:x="80790" fg:w="5439"/><text x="28.2937%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="27.5578%" y="261" width="2.3897%" height="15" fill="rgb(234,70,35)" fg:x="79512" fg:w="6895"/><text x="27.8508%" y="271.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="29.9475%" y="245" width="0.0756%" height="15" fill="rgb(210,157,19)" fg:x="86407" fg:w="218"/><text x="30.2405%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.0231%" y="245" width="0.1629%" height="15" fill="rgb(206,20,45)" fg:x="86625" fg:w="470"/><text x="30.3161%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="30.1860%" y="245" width="0.0416%" height="15" fill="rgb(207,34,7)" fg:x="87095" fg:w="120"/><text x="30.4789%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.2276%" y="245" width="0.1629%" height="15" fill="rgb(253,151,14)" fg:x="87215" fg:w="470"/><text x="30.5205%" y="255.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="30.3905%" y="229" width="0.0194%" height="15" fill="rgb(252,1,18)" fg:x="87685" fg:w="56"/><text x="30.6834%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="30.4099%" y="229" width="1.7277%" height="15" fill="rgb(214,77,52)" fg:x="87741" fg:w="4985"/><text x="30.7028%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="32.1376%" y="229" width="1.7277%" height="15" fill="rgb(254,106,35)" fg:x="92726" fg:w="4985"/><text x="32.4306%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="30.3905%" y="245" width="3.5872%" height="15" fill="rgb(212,67,40)" fg:x="87685" fg:w="10350"/><text x="30.6834%" y="255.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="29.9475%" y="261" width="4.1102%" height="15" fill="rgb(228,76,23)" fg:x="86407" fg:w="11859"/><text x="30.2405%" y="271.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="34.0577%" y="229" width="0.0756%" height="15" fill="rgb(250,198,5)" fg:x="98266" fg:w="218"/><text x="34.3507%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="34.1333%" y="229" width="0.1629%" height="15" fill="rgb(209,20,25)" fg:x="98484" fg:w="470"/><text x="34.4262%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="34.2962%" y="229" width="0.0832%" height="15" fill="rgb(236,32,4)" fg:x="98954" fg:w="240"/><text x="34.5891%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="34.3793%" y="229" width="1.7277%" height="15" fill="rgb(215,31,6)" fg:x="99194" fg:w="4985"/><text x="34.6723%" y="239.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="36.1071%" y="229" width="0.0620%" height="15" fill="rgb(207,186,49)" fg:x="104179" fg:w="179"/><text x="36.4000%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="36.1691%" y="229" width="0.1629%" height="15" fill="rgb(211,212,49)" fg:x="104358" fg:w="470"/><text x="36.4621%" y="239.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="36.3320%" y="213" width="0.0610%" height="15" fill="rgb(229,51,41)" fg:x="104828" fg:w="176"/><text x="36.6250%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="36.3930%" y="213" width="1.7277%" height="15" fill="rgb(205,225,36)" fg:x="105004" fg:w="4985"/><text x="36.6860%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="36.3320%" y="229" width="1.8886%" height="15" fill="rgb(209,213,45)" fg:x="104828" fg:w="5449"/><text x="36.6250%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="34.0577%" y="245" width="4.2509%" height="15" fill="rgb(219,35,49)" fg:x="98266" fg:w="12265"/><text x="34.3507%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="38.3086%" y="245" width="0.0284%" height="15" fill="rgb(215,205,22)" fg:x="110531" fg:w="82"/><text x="38.6016%" y="255.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="38.3370%" y="245" width="0.1109%" height="15" fill="rgb(248,204,34)" fg:x="110613" fg:w="320"/><text x="38.6300%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="34.0577%" y="261" width="4.5060%" height="15" fill="rgb(219,223,31)" fg:x="98266" fg:w="13001"/><text x="34.3507%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (104,627 instructions, 36.26%)</title><rect x="2.3627%" y="277" width="36.2623%" height="15" fill="rgb(236,14,8)" fg:x="6817" fg:w="104627"/><text x="2.6557%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="38.6250%" y="261" width="0.0756%" height="15" fill="rgb(243,129,23)" fg:x="111444" fg:w="218"/><text x="38.9180%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.7006%" y="261" width="0.1629%" height="15" fill="rgb(205,204,5)" fg:x="111662" fg:w="470"/><text x="38.9935%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="38.8635%" y="261" width="0.0416%" height="15" fill="rgb(244,115,32)" fg:x="112132" fg:w="120"/><text x="39.1564%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.9051%" y="261" width="0.1629%" height="15" fill="rgb(229,123,14)" fg:x="112252" fg:w="470"/><text x="39.1980%" y="271.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="39.0680%" y="245" width="0.0575%" height="15" fill="rgb(250,85,1)" fg:x="112722" fg:w="166"/><text x="39.3609%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="39.1255%" y="245" width="1.7277%" height="15" fill="rgb(209,141,54)" fg:x="112888" fg:w="4985"/><text x="39.4185%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="39.0680%" y="261" width="1.8851%" height="15" fill="rgb(244,107,39)" fg:x="112722" fg:w="5439"/><text x="39.3609%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="38.6250%" y="277" width="2.3897%" height="15" fill="rgb(230,68,26)" fg:x="111444" fg:w="6895"/><text x="38.9180%" y="287.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="41.0147%" y="261" width="0.0756%" height="15" fill="rgb(220,178,33)" fg:x="118339" fg:w="218"/><text x="41.3077%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.0903%" y="261" width="0.1629%" height="15" fill="rgb(220,77,53)" fg:x="118557" fg:w="470"/><text x="41.3833%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="41.2532%" y="261" width="0.0416%" height="15" fill="rgb(224,108,19)" fg:x="119027" fg:w="120"/><text x="41.5462%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.2948%" y="261" width="0.1629%" height="15" fill="rgb(223,203,27)" fg:x="119147" fg:w="470"/><text x="41.5877%" y="271.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="41.4577%" y="245" width="0.0194%" height="15" fill="rgb(211,32,46)" fg:x="119617" fg:w="56"/><text x="41.7506%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="41.4771%" y="245" width="1.7277%" height="15" fill="rgb(240,101,27)" fg:x="119673" fg:w="4985"/><text x="41.7701%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="43.2048%" y="245" width="1.7277%" height="15" fill="rgb(217,210,11)" fg:x="124658" fg:w="4985"/><text x="43.4978%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="41.4577%" y="261" width="3.5872%" height="15" fill="rgb(236,130,21)" fg:x="119617" fg:w="10350"/><text x="41.7506%" y="271.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="41.0147%" y="277" width="4.1102%" height="15" fill="rgb(250,136,8)" fg:x="118339" fg:w="11859"/><text x="41.3077%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.1249%" y="261" width="0.0284%" height="15" fill="rgb(243,223,36)" fg:x="130198" fg:w="82"/><text x="45.4179%" y="271.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="45.1533%" y="261" width="0.1109%" height="15" fill="rgb(246,184,8)" fg:x="130280" fg:w="320"/><text x="45.4463%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.2642%" y="261" width="0.0284%" height="15" fill="rgb(222,158,36)" fg:x="130600" fg:w="82"/><text x="45.5572%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="45.1249%" y="277" width="0.2703%" height="15" fill="rgb(210,220,19)" fg:x="130198" fg:w="780"/><text x="45.4179%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (124,374 instructions, 43.11%)</title><rect x="2.3499%" y="293" width="43.1064%" height="15" fill="rgb(246,44,38)" fg:x="6780" fg:w="124374"/><text x="2.6428%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="45.4562%" y="277" width="0.0756%" height="15" fill="rgb(246,186,14)" fg:x="131154" fg:w="218"/><text x="45.7492%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.5318%" y="277" width="0.1629%" height="15" fill="rgb(233,193,20)" fg:x="131372" fg:w="470"/><text x="45.8248%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="45.6947%" y="277" width="0.0416%" height="15" fill="rgb(215,60,5)" fg:x="131842" fg:w="120"/><text x="45.9877%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.7363%" y="277" width="0.1629%" height="15" fill="rgb(207,128,10)" fg:x="131962" fg:w="470"/><text x="46.0293%" y="287.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="45.8992%" y="261" width="0.0575%" height="15" fill="rgb(238,84,54)" fg:x="132432" fg:w="166"/><text x="46.1922%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="45.9567%" y="261" width="1.7277%" height="15" fill="rgb(213,130,11)" fg:x="132598" fg:w="4985"/><text x="46.2497%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="45.8992%" y="277" width="1.8851%" height="15" fill="rgb(235,62,9)" fg:x="132432" fg:w="5439"/><text x="46.1922%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="45.4562%" y="293" width="2.3897%" height="15" fill="rgb(222,64,24)" fg:x="131154" fg:w="6895"/><text x="45.7492%" y="303.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="47.8460%" y="277" width="0.0756%" height="15" fill="rgb(238,193,42)" fg:x="138049" fg:w="218"/><text x="48.1389%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="47.9215%" y="277" width="0.1629%" height="15" fill="rgb(243,204,46)" fg:x="138267" fg:w="470"/><text x="48.2145%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="48.0844%" y="277" width="0.0416%" height="15" fill="rgb(243,196,11)" fg:x="138737" fg:w="120"/><text x="48.3774%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="48.1260%" y="277" width="0.1629%" height="15" fill="rgb(232,77,22)" fg:x="138857" fg:w="470"/><text x="48.4190%" y="287.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="48.2889%" y="261" width="0.0194%" height="15" fill="rgb(215,80,25)" fg:x="139327" fg:w="56"/><text x="48.5819%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="48.3083%" y="261" width="1.7277%" height="15" fill="rgb(210,173,7)" fg:x="139383" fg:w="4985"/><text x="48.6013%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="50.0360%" y="261" width="1.7277%" height="15" fill="rgb(207,101,10)" fg:x="144368" fg:w="4985"/><text x="50.3290%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="48.2889%" y="277" width="3.5872%" height="15" fill="rgb(246,57,48)" fg:x="139327" fg:w="10350"/><text x="48.5819%" y="287.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="47.8460%" y="293" width="4.1102%" height="15" fill="rgb(236,184,40)" fg:x="138049" fg:w="11859"/><text x="48.1389%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="51.9561%" y="277" width="0.0284%" height="15" fill="rgb(210,205,13)" fg:x="149908" fg:w="82"/><text x="52.2491%" y="287.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="51.9846%" y="277" width="0.1109%" height="15" fill="rgb(231,129,42)" fg:x="149990" fg:w="320"/><text x="52.2775%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="52.0955%" y="277" width="0.0284%" height="15" fill="rgb(220,229,54)" fg:x="150310" fg:w="82"/><text x="52.3884%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="51.9561%" y="293" width="0.2703%" height="15" fill="rgb(230,192,26)" fg:x="149908" fg:w="780"/><text x="52.2491%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (144,100 instructions, 49.94%)</title><rect x="2.3443%" y="309" width="49.9432%" height="15" fill="rgb(253,18,30)" fg:x="6764" fg:w="144100"/><text x="2.6373%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="52.2875%" y="293" width="0.0756%" height="15" fill="rgb(216,62,53)" fg:x="150864" fg:w="218"/><text x="52.5804%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.3630%" y="293" width="0.1629%" height="15" fill="rgb(230,79,29)" fg:x="151082" fg:w="470"/><text x="52.6560%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="52.5259%" y="293" width="0.0416%" height="15" fill="rgb(242,26,26)" fg:x="151552" fg:w="120"/><text x="52.8189%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.5675%" y="293" width="0.1629%" height="15" fill="rgb(227,125,21)" fg:x="151672" fg:w="470"/><text x="52.8605%" y="303.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="52.7304%" y="277" width="0.0575%" height="15" fill="rgb(229,93,26)" fg:x="152142" fg:w="166"/><text x="53.0234%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="52.7879%" y="277" width="1.7277%" height="15" fill="rgb(227,228,8)" fg:x="152308" fg:w="4985"/><text x="53.0809%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="52.7304%" y="293" width="1.8851%" height="15" fill="rgb(233,56,0)" fg:x="152142" fg:w="5439"/><text x="53.0234%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="52.2875%" y="309" width="2.3897%" height="15" fill="rgb(225,185,17)" fg:x="150864" fg:w="6895"/><text x="52.5804%" y="319.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="54.6772%" y="293" width="0.0756%" height="15" fill="rgb(238,202,30)" fg:x="157759" fg:w="218"/><text x="54.9702%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.7527%" y="293" width="0.1629%" height="15" fill="rgb(236,60,13)" fg:x="157977" fg:w="470"/><text x="55.0457%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="54.9156%" y="293" width="0.0416%" height="15" fill="rgb(244,92,0)" fg:x="158447" fg:w="120"/><text x="55.2086%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.9572%" y="293" width="0.1629%" height="15" fill="rgb(225,57,15)" fg:x="158567" fg:w="470"/><text x="55.2502%" y="303.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="55.1201%" y="277" width="0.0194%" height="15" fill="rgb(228,5,28)" fg:x="159037" fg:w="56"/><text x="55.4131%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="55.1395%" y="277" width="1.7277%" height="15" fill="rgb(252,34,51)" fg:x="159093" fg:w="4985"/><text x="55.4325%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="56.8673%" y="277" width="1.7277%" height="15" fill="rgb(235,58,7)" fg:x="164078" fg:w="4985"/><text x="57.1602%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="55.1201%" y="293" width="3.5872%" height="15" fill="rgb(250,132,20)" fg:x="159037" fg:w="10350"/><text x="55.4131%" y="303.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="54.6772%" y="309" width="4.1102%" height="15" fill="rgb(217,164,0)" fg:x="157759" fg:w="11859"/><text x="54.9702%" y="319.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="58.7874%" y="277" width="0.0756%" height="15" fill="rgb(208,220,35)" fg:x="169618" fg:w="218"/><text x="59.0803%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="58.8629%" y="277" width="0.1629%" height="15" fill="rgb(227,42,51)" fg:x="169836" fg:w="470"/><text x="59.1559%" y="287.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="59.0258%" y="277" width="0.0832%" height="15" fill="rgb(225,146,38)" fg:x="170306" fg:w="240"/><text x="59.3188%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="59.1090%" y="277" width="1.7277%" height="15" fill="rgb(252,108,37)" fg:x="170546" fg:w="4985"/><text x="59.4020%" y="287.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="60.8367%" y="277" width="0.0620%" height="15" fill="rgb(244,101,24)" fg:x="175531" fg:w="179"/><text x="61.1297%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="60.8988%" y="277" width="0.1629%" height="15" fill="rgb(213,161,50)" fg:x="175710" fg:w="470"/><text x="61.1917%" y="287.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="61.0617%" y="261" width="0.0610%" height="15" fill="rgb(248,159,19)" fg:x="176180" fg:w="176"/><text x="61.3546%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="61.1227%" y="261" width="1.7277%" height="15" fill="rgb(233,179,15)" fg:x="176356" fg:w="4985"/><text x="61.4156%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="61.0617%" y="277" width="1.8886%" height="15" fill="rgb(248,178,3)" fg:x="176180" fg:w="5449"/><text x="61.3546%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="58.7874%" y="293" width="4.2509%" height="15" fill="rgb(245,190,41)" fg:x="169618" fg:w="12265"/><text x="59.0803%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="63.0382%" y="293" width="0.0284%" height="15" fill="rgb(218,151,19)" fg:x="181883" fg:w="82"/><text x="63.3312%" y="303.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="63.0667%" y="293" width="0.1109%" height="15" fill="rgb(245,25,44)" fg:x="181965" fg:w="320"/><text x="63.3596%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="58.7874%" y="309" width="4.5060%" height="15" fill="rgb(235,172,47)" fg:x="169618" fg:w="13001"/><text x="59.0803%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (176,048 instructions, 61.02%)</title><rect x="2.3388%" y="325" width="61.0159%" height="15" fill="rgb(246,33,12)" fg:x="6748" fg:w="176048"/><text x="2.6317%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="63.3547%" y="309" width="0.0756%" height="15" fill="rgb(214,124,7)" fg:x="182796" fg:w="218"/><text x="63.6477%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.4302%" y="309" width="0.1629%" height="15" fill="rgb(246,186,18)" fg:x="183014" fg:w="470"/><text x="63.7232%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="63.5931%" y="309" width="0.0416%" height="15" fill="rgb(231,94,1)" fg:x="183484" fg:w="120"/><text x="63.8861%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.6347%" y="309" width="0.1629%" height="15" fill="rgb(208,33,48)" fg:x="183604" fg:w="470"/><text x="63.9277%" y="319.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="63.7976%" y="293" width="0.0575%" height="15" fill="rgb(208,195,44)" fg:x="184074" fg:w="166"/><text x="64.0906%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="63.8552%" y="293" width="1.7277%" height="15" fill="rgb(226,13,52)" fg:x="184240" fg:w="4985"/><text x="64.1481%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="63.7976%" y="309" width="1.8851%" height="15" fill="rgb(217,219,45)" fg:x="184074" fg:w="5439"/><text x="64.0906%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="63.3547%" y="325" width="2.3897%" height="15" fill="rgb(223,45,25)" fg:x="182796" fg:w="6895"/><text x="63.6477%" y="335.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="65.7444%" y="309" width="0.0756%" height="15" fill="rgb(241,163,0)" fg:x="189691" fg:w="218"/><text x="66.0374%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="65.8200%" y="309" width="0.1629%" height="15" fill="rgb(216,68,47)" fg:x="189909" fg:w="470"/><text x="66.1129%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="65.9829%" y="309" width="0.0416%" height="15" fill="rgb(236,119,45)" fg:x="190379" fg:w="120"/><text x="66.2758%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="66.0244%" y="309" width="0.1629%" height="15" fill="rgb(209,188,24)" fg:x="190499" fg:w="470"/><text x="66.3174%" y="319.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="66.1873%" y="293" width="0.0194%" height="15" fill="rgb(221,118,7)" fg:x="190969" fg:w="56"/><text x="66.4803%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="66.2067%" y="293" width="1.7277%" height="15" fill="rgb(213,148,43)" fg:x="191025" fg:w="4985"/><text x="66.4997%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="67.9345%" y="293" width="1.7277%" height="15" fill="rgb(231,21,43)" fg:x="196010" fg:w="4985"/><text x="68.2274%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="66.1873%" y="309" width="3.5872%" height="15" fill="rgb(232,213,43)" fg:x="190969" fg:w="10350"/><text x="66.4803%" y="319.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="65.7444%" y="325" width="4.1102%" height="15" fill="rgb(239,145,50)" fg:x="189691" fg:w="11859"/><text x="66.0374%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.8546%" y="309" width="0.0284%" height="15" fill="rgb(222,131,18)" fg:x="201550" fg:w="82"/><text x="70.1475%" y="319.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="69.8830%" y="309" width="0.1109%" height="15" fill="rgb(243,181,13)" fg:x="201632" fg:w="320"/><text x="70.1760%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.9939%" y="309" width="0.0284%" height="15" fill="rgb(212,74,41)" fg:x="201952" fg:w="82"/><text x="70.2869%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="69.8546%" y="325" width="0.2703%" height="15" fill="rgb(237,143,34)" fg:x="201550" fg:w="780"/><text x="70.1475%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (195,774 instructions, 67.85%)</title><rect x="2.3332%" y="341" width="67.8527%" height="15" fill="rgb(228,139,0)" fg:x="6732" fg:w="195774"/><text x="2.6262%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="70.1859%" y="325" width="0.0756%" height="15" fill="rgb(227,214,11)" fg:x="202506" fg:w="218"/><text x="70.4789%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.2615%" y="325" width="0.1629%" height="15" fill="rgb(228,118,39)" fg:x="202724" fg:w="470"/><text x="70.5544%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="70.4244%" y="325" width="0.0416%" height="15" fill="rgb(207,117,22)" fg:x="203194" fg:w="120"/><text x="70.7173%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.4660%" y="325" width="0.1629%" height="15" fill="rgb(225,91,8)" fg:x="203314" fg:w="470"/><text x="70.7589%" y="335.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="70.6288%" y="309" width="0.0575%" height="15" fill="rgb(230,219,48)" fg:x="203784" fg:w="166"/><text x="70.9218%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="70.6864%" y="309" width="1.7277%" height="15" fill="rgb(244,0,23)" fg:x="203950" fg:w="4985"/><text x="70.9793%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="70.6288%" y="325" width="1.8851%" height="15" fill="rgb(206,212,23)" fg:x="203784" fg:w="5439"/><text x="70.9218%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="70.1859%" y="341" width="2.3897%" height="15" fill="rgb(254,62,10)" fg:x="202506" fg:w="6895"/><text x="70.4789%" y="351.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="72.5756%" y="325" width="0.0756%" height="15" fill="rgb(236,58,8)" fg:x="209401" fg:w="218"/><text x="72.8686%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.6512%" y="325" width="0.1629%" height="15" fill="rgb(232,212,17)" fg:x="209619" fg:w="470"/><text x="72.9441%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="72.8141%" y="325" width="0.0416%" height="15" fill="rgb(206,132,9)" fg:x="210089" fg:w="120"/><text x="73.1070%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.8557%" y="325" width="0.1629%" height="15" fill="rgb(234,97,28)" fg:x="210209" fg:w="470"/><text x="73.1486%" y="335.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="73.0186%" y="309" width="0.0194%" height="15" fill="rgb(254,144,9)" fg:x="210679" fg:w="56"/><text x="73.3115%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="73.0380%" y="309" width="1.7277%" height="15" fill="rgb(244,204,43)" fg:x="210735" fg:w="4985"/><text x="73.3309%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="74.7657%" y="309" width="1.7277%" height="15" fill="rgb(248,177,16)" fg:x="215720" fg:w="4985"/><text x="75.0587%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="73.0186%" y="325" width="3.5872%" height="15" fill="rgb(219,110,15)" fg:x="210679" fg:w="10350"/><text x="73.3115%" y="335.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="72.5756%" y="341" width="4.1102%" height="15" fill="rgb(212,203,25)" fg:x="209401" fg:w="11859"/><text x="72.8686%" y="351.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="76.6858%" y="309" width="0.0756%" height="15" fill="rgb(205,50,1)" fg:x="221260" fg:w="218"/><text x="76.9788%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="76.7614%" y="309" width="0.1629%" height="15" fill="rgb(222,152,41)" fg:x="221478" fg:w="470"/><text x="77.0543%" y="319.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="76.9242%" y="309" width="0.0832%" height="15" fill="rgb(236,83,3)" fg:x="221948" fg:w="240"/><text x="77.2172%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="77.0074%" y="309" width="1.7277%" height="15" fill="rgb(214,30,54)" fg:x="222188" fg:w="4985"/><text x="77.3004%" y="319.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="78.7352%" y="309" width="0.0620%" height="15" fill="rgb(250,117,31)" fg:x="227173" fg:w="179"/><text x="79.0281%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="78.7972%" y="309" width="0.1629%" height="15" fill="rgb(228,77,14)" fg:x="227352" fg:w="470"/><text x="79.0902%" y="319.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="78.9601%" y="293" width="0.0610%" height="15" fill="rgb(241,3,28)" fg:x="227822" fg:w="176"/><text x="79.2531%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="79.0211%" y="293" width="1.7277%" height="15" fill="rgb(221,175,52)" fg:x="227998" fg:w="4985"/><text x="79.3141%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="78.9601%" y="309" width="1.8886%" height="15" fill="rgb(237,91,6)" fg:x="227822" fg:w="5449"/><text x="79.2531%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="76.6858%" y="325" width="4.2509%" height="15" fill="rgb(246,46,42)" fg:x="221260" fg:w="12265"/><text x="76.9788%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="80.9367%" y="325" width="0.0284%" height="15" fill="rgb(235,199,0)" fg:x="233525" fg:w="82"/><text x="81.2297%" y="335.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="80.9651%" y="325" width="0.1109%" height="15" fill="rgb(224,44,40)" fg:x="233607" fg:w="320"/><text x="81.2581%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="76.6858%" y="341" width="4.5060%" height="15" fill="rgb(209,24,35)" fg:x="221260" fg:w="13001"/><text x="76.9788%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (227,722 instructions, 78.93%)</title><rect x="2.3277%" y="357" width="78.9254%" height="15" fill="rgb(244,46,22)" fg:x="6716" fg:w="227722"/><text x="2.6206%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="81.2531%" y="341" width="0.0756%" height="15" fill="rgb(235,99,8)" fg:x="234438" fg:w="218"/><text x="81.5461%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.3287%" y="341" width="0.1629%" height="15" fill="rgb(218,127,36)" fg:x="234656" fg:w="470"/><text x="81.6216%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="81.4916%" y="341" width="0.0416%" height="15" fill="rgb(238,47,46)" fg:x="235126" fg:w="120"/><text x="81.7845%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.5332%" y="341" width="0.1629%" height="15" fill="rgb(233,65,17)" fg:x="235246" fg:w="470"/><text x="81.8261%" y="351.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="81.6961%" y="325" width="0.0575%" height="15" fill="rgb(239,22,33)" fg:x="235716" fg:w="166"/><text x="81.9890%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="81.7536%" y="325" width="1.7277%" height="15" fill="rgb(243,66,43)" fg:x="235882" fg:w="4985"/><text x="82.0466%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="81.6961%" y="341" width="1.8851%" height="15" fill="rgb(235,210,28)" fg:x="235716" fg:w="5439"/><text x="81.9890%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="81.2531%" y="357" width="2.3897%" height="15" fill="rgb(205,191,50)" fg:x="234438" fg:w="6895"/><text x="81.5461%" y="367.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="83.6428%" y="341" width="0.0756%" height="15" fill="rgb(251,217,19)" fg:x="241333" fg:w="218"/><text x="83.9358%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.7184%" y="341" width="0.1629%" height="15" fill="rgb(205,174,37)" fg:x="241551" fg:w="470"/><text x="84.0114%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="83.8813%" y="341" width="0.0416%" height="15" fill="rgb(212,158,42)" fg:x="242021" fg:w="120"/><text x="84.1743%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.9229%" y="341" width="0.1629%" height="15" fill="rgb(212,208,51)" fg:x="242141" fg:w="470"/><text x="84.2158%" y="351.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="84.0858%" y="325" width="0.0194%" height="15" fill="rgb(225,198,20)" fg:x="242611" fg:w="56"/><text x="84.3787%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="84.1052%" y="325" width="1.7277%" height="15" fill="rgb(247,41,44)" fg:x="242667" fg:w="4985"/><text x="84.3982%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="85.8329%" y="325" width="1.7277%" height="15" fill="rgb(228,33,41)" fg:x="247652" fg:w="4985"/><text x="86.1259%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="84.0858%" y="341" width="3.5872%" height="15" fill="rgb(215,47,52)" fg:x="242611" fg:w="10350"/><text x="84.3787%" y="351.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="83.6428%" y="357" width="4.1102%" height="15" fill="rgb(248,106,37)" fg:x="241333" fg:w="11859"/><text x="83.9358%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.7530%" y="341" width="0.0284%" height="15" fill="rgb(238,91,29)" fg:x="253192" fg:w="82"/><text x="88.0460%" y="351.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="87.7814%" y="341" width="0.1109%" height="15" fill="rgb(226,111,40)" fg:x="253274" fg:w="320"/><text x="88.0744%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.8923%" y="341" width="0.0284%" height="15" fill="rgb(229,159,36)" fg:x="253594" fg:w="82"/><text x="88.1853%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="87.7530%" y="357" width="0.2703%" height="15" fill="rgb(221,109,4)" fg:x="253192" fg:w="780"/><text x="88.0460%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (247,448 instructions, 85.76%)</title><rect x="2.3221%" y="373" width="85.7622%" height="15" fill="rgb(236,56,25)" fg:x="6700" fg:w="247448"/><text x="2.6151%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.0843%" y="277" width="0.0284%" height="15" fill="rgb(244,113,23)" fg:x="254148" fg:w="82"/><text x="88.3773%" y="287.50"></text></g><g><title>memcpy (195 instructions, 0.07%)</title><rect x="88.1128%" y="277" width="0.0676%" height="15" fill="rgb(249,132,2)" fg:x="254230" fg:w="195"/><text x="88.4057%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="88.1803%" y="277" width="0.0281%" height="15" fill="rgb(205,185,21)" fg:x="254425" fg:w="81"/><text x="88.4733%" y="287.50"></text></g><g><title>__rust_realloc (444 instructions, 0.15%)</title><rect x="88.0843%" y="293" width="0.1539%" height="15" fill="rgb(245,130,2)" fg:x="254148" fg:w="444"/><text x="88.3773%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.17%)</title><rect x="88.0843%" y="309" width="0.1660%" height="15" fill="rgb(246,71,26)" fg:x="254148" fg:w="479"/><text x="88.3773%" y="319.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.2757%" y="293" width="0.0277%" height="15" fill="rgb(234,194,6)" fg:x="254700" fg:w="80"/><text x="88.5686%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.2757%" y="309" width="0.0399%" height="15" fill="rgb(206,24,32)" fg:x="254700" fg:w="115"/><text x="88.5686%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (740 instructions, 0.26%)</title><rect x="88.0843%" y="325" width="0.2565%" height="15" fill="rgb(233,7,54)" fg:x="254148" fg:w="740"/><text x="88.3773%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.3408%" y="325" width="0.0773%" height="15" fill="rgb(252,46,1)" fg:x="254888" fg:w="223"/><text x="88.6338%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,042 instructions, 0.36%)</title><rect x="88.0843%" y="341" width="0.3611%" height="15" fill="rgb(216,113,53)" fg:x="254148" fg:w="1042"/><text x="88.3773%" y="351.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.4722%" y="309" width="0.0277%" height="15" fill="rgb(215,40,24)" fg:x="255267" fg:w="80"/><text x="88.7651%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.4722%" y="325" width="0.0399%" height="15" fill="rgb(233,222,8)" fg:x="255267" fg:w="115"/><text x="88.7651%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.4722%" y="341" width="0.0652%" height="15" fill="rgb(248,73,28)" fg:x="255267" fg:w="188"/><text x="88.7651%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.5373%" y="309" width="0.1019%" height="15" fill="rgb(247,126,28)" fg:x="255455" fg:w="294"/><text x="88.8303%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.5373%" y="325" width="0.1251%" height="15" fill="rgb(242,173,54)" fg:x="255455" fg:w="361"/><text x="88.8303%" y="335.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.6891%" y="277" width="0.0277%" height="15" fill="rgb(244,186,22)" fg:x="255893" fg:w="80"/><text x="88.9821%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.6891%" y="293" width="0.0399%" height="15" fill="rgb(231,187,4)" fg:x="255893" fg:w="115"/><text x="88.9821%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.6891%" y="309" width="0.0652%" height="15" fill="rgb(252,66,47)" fg:x="255893" fg:w="188"/><text x="88.9821%" y="319.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.7543%" y="277" width="0.1019%" height="15" fill="rgb(240,228,28)" fg:x="256081" fg:w="294"/><text x="89.0473%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.7543%" y="293" width="0.1251%" height="15" fill="rgb(237,63,43)" fg:x="256081" fg:w="361"/><text x="89.0473%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.9061%" y="261" width="0.0773%" height="15" fill="rgb(214,1,44)" fg:x="256519" fg:w="223"/><text x="89.1991%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="88.9061%" y="277" width="0.1005%" height="15" fill="rgb(212,2,46)" fg:x="256519" fg:w="290"/><text x="89.1991%" y="287.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.0333%" y="197" width="0.0277%" height="15" fill="rgb(213,142,5)" fg:x="256886" fg:w="80"/><text x="89.3263%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.0333%" y="213" width="0.0399%" height="15" fill="rgb(229,135,1)" fg:x="256886" fg:w="115"/><text x="89.3263%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.0333%" y="229" width="0.0652%" height="15" fill="rgb(252,98,38)" fg:x="256886" fg:w="188"/><text x="89.3263%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.0985%" y="229" width="0.0773%" height="15" fill="rgb(206,89,40)" fg:x="257074" fg:w="223"/><text x="89.3914%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (483 instructions, 0.17%)</title><rect x="89.0333%" y="245" width="0.1674%" height="15" fill="rgb(219,73,36)" fg:x="256886" fg:w="483"/><text x="89.3263%" y="255.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.2274%" y="213" width="0.1019%" height="15" fill="rgb(207,168,32)" fg:x="257446" fg:w="294"/><text x="89.5204%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.2274%" y="229" width="0.1251%" height="15" fill="rgb(215,113,21)" fg:x="257446" fg:w="361"/><text x="89.5204%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.3792%" y="197" width="0.0773%" height="15" fill="rgb(217,144,43)" fg:x="257884" fg:w="223"/><text x="89.6722%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.3792%" y="213" width="0.1005%" height="15" fill="rgb(249,48,50)" fg:x="257884" fg:w="290"/><text x="89.6722%" y="223.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.5064%" y="181" width="0.1019%" height="15" fill="rgb(242,1,26)" fg:x="258251" fg:w="294"/><text x="89.7994%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.5064%" y="197" width="0.1251%" height="15" fill="rgb(231,167,42)" fg:x="258251" fg:w="361"/><text x="89.7994%" y="207.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.6582%" y="117" width="0.0277%" height="15" fill="rgb(242,177,45)" fg:x="258689" fg:w="80"/><text x="89.9512%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.6582%" y="133" width="0.0399%" height="15" fill="rgb(232,121,42)" fg:x="258689" fg:w="115"/><text x="89.9512%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.6582%" y="149" width="0.0652%" height="15" fill="rgb(205,8,42)" fg:x="258689" fg:w="188"/><text x="89.9512%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.7234%" y="149" width="0.1019%" height="15" fill="rgb(238,199,24)" fg:x="258877" fg:w="294"/><text x="90.0163%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (556 instructions, 0.19%)</title><rect x="89.6582%" y="165" width="0.1927%" height="15" fill="rgb(228,112,2)" fg:x="258689" fg:w="556"/><text x="89.9512%" y="175.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.8776%" y="133" width="0.0773%" height="15" fill="rgb(215,115,33)" fg:x="259322" fg:w="223"/><text x="90.1706%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.8776%" y="149" width="0.1005%" height="15" fill="rgb(230,209,34)" fg:x="259322" fg:w="290"/><text x="90.1706%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="90.0048%" y="117" width="0.1019%" height="15" fill="rgb(246,76,12)" fg:x="259689" fg:w="294"/><text x="90.2978%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="90.0048%" y="133" width="0.1251%" height="15" fill="rgb(240,110,9)" fg:x="259689" fg:w="361"/><text x="90.2978%" y="143.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.1566%" y="101" width="0.0773%" height="15" fill="rgb(224,94,46)" fg:x="260127" fg:w="223"/><text x="90.4496%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.1566%" y="117" width="0.1005%" height="15" fill="rgb(247,150,22)" fg:x="260127" fg:w="290"/><text x="90.4496%" y="127.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.2838%" y="69" width="0.0773%" height="15" fill="rgb(249,85,13)" fg:x="260494" fg:w="223"/><text x="90.5768%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.2838%" y="85" width="0.1005%" height="15" fill="rgb(208,77,41)" fg:x="260494" fg:w="290"/><text x="90.5768%" y="95.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="90.4110%" y="53" width="0.0416%" height="15" fill="rgb(240,42,44)" fg:x="260861" fg:w="120"/><text x="90.7040%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (182 instructions, 0.06%)</title><rect x="90.4110%" y="69" width="0.0631%" height="15" fill="rgb(222,10,51)" fg:x="260861" fg:w="182"/><text x="90.7040%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="90.4741%" y="37" width="0.0104%" height="15" fill="rgb(208,146,53)" fg:x="261043" fg:w="30"/><text x="90.7670%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (92 instructions, 0.03%)</title><rect x="90.4741%" y="53" width="0.0319%" height="15" fill="rgb(236,162,23)" fg:x="261043" fg:w="92"/><text x="90.7670%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (178 instructions, 0.06%)</title><rect x="90.4741%" y="69" width="0.0617%" height="15" fill="rgb(218,66,21)" fg:x="261043" fg:w="178"/><text x="90.7670%" y="79.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.5676%" y="53" width="0.0773%" height="15" fill="rgb(233,6,47)" fg:x="261313" fg:w="223"/><text x="90.8606%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.5676%" y="69" width="0.1005%" height="15" fill="rgb(236,59,51)" fg:x="261313" fg:w="290"/><text x="90.8606%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (819 instructions, 0.28%)</title><rect x="90.4110%" y="85" width="0.2839%" height="15" fill="rgb(242,12,46)" fg:x="260861" fg:w="819"/><text x="90.7040%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,275 instructions, 0.44%)</title><rect x="90.2838%" y="101" width="0.4419%" height="15" fill="rgb(243,142,19)" fg:x="260494" fg:w="1275"/><text x="90.5768%" y="111.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.7565%" y="85" width="0.0773%" height="15" fill="rgb(217,28,17)" fg:x="261858" fg:w="223"/><text x="91.0495%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.7565%" y="101" width="0.1005%" height="15" fill="rgb(228,2,27)" fg:x="261858" fg:w="290"/><text x="91.0495%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,731 instructions, 0.60%)</title><rect x="90.2838%" y="117" width="0.5999%" height="15" fill="rgb(214,221,4)" fg:x="260494" fg:w="1731"/><text x="90.5768%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,187 instructions, 0.76%)</title><rect x="90.1566%" y="133" width="0.7580%" height="15" fill="rgb(224,69,26)" fg:x="260127" fg:w="2187"/><text x="90.4496%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,714 instructions, 0.94%)</title><rect x="90.0048%" y="149" width="0.9406%" height="15" fill="rgb(219,70,4)" fg:x="259689" fg:w="2714"/><text x="90.2978%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,170 instructions, 1.10%)</title><rect x="89.8776%" y="165" width="1.0987%" height="15" fill="rgb(218,157,39)" fg:x="259322" fg:w="3170"/><text x="90.1706%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,892 instructions, 1.35%)</title><rect x="89.6582%" y="181" width="1.3489%" height="15" fill="rgb(238,36,28)" fg:x="258689" fg:w="3892"/><text x="89.9512%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.0380%" y="165" width="0.0773%" height="15" fill="rgb(232,29,0)" fg:x="262670" fg:w="223"/><text x="91.3309%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.0380%" y="181" width="0.1005%" height="15" fill="rgb(243,138,46)" fg:x="262670" fg:w="290"/><text x="91.3309%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,348 instructions, 1.51%)</title><rect x="89.6582%" y="197" width="1.5070%" height="15" fill="rgb(232,186,41)" fg:x="258689" fg:w="4348"/><text x="89.9512%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,875 instructions, 1.69%)</title><rect x="89.5064%" y="213" width="1.6896%" height="15" fill="rgb(252,166,17)" fg:x="258251" fg:w="4875"/><text x="89.7994%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,331 instructions, 1.85%)</title><rect x="89.3792%" y="229" width="1.8477%" height="15" fill="rgb(228,179,12)" fg:x="257884" fg:w="5331"/><text x="89.6722%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,858 instructions, 2.03%)</title><rect x="89.2274%" y="245" width="2.0303%" height="15" fill="rgb(254,205,53)" fg:x="257446" fg:w="5858"/><text x="89.5204%" y="255.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,507 instructions, 2.26%)</title><rect x="89.0333%" y="261" width="2.2552%" height="15" fill="rgb(224,163,47)" fg:x="256886" fg:w="6507"/><text x="89.3263%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="91.3194%" y="213" width="0.0277%" height="15" fill="rgb(208,43,47)" fg:x="263482" fg:w="80"/><text x="91.6124%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="91.3194%" y="229" width="0.0399%" height="15" fill="rgb(224,198,38)" fg:x="263482" fg:w="115"/><text x="91.6124%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="91.3194%" y="245" width="0.0652%" height="15" fill="rgb(234,12,40)" fg:x="263482" fg:w="188"/><text x="91.6124%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.3845%" y="245" width="0.0773%" height="15" fill="rgb(237,212,39)" fg:x="263670" fg:w="223"/><text x="91.6775%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (485 instructions, 0.17%)</title><rect x="91.3194%" y="261" width="0.1681%" height="15" fill="rgb(253,2,33)" fg:x="263482" fg:w="485"/><text x="91.6124%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,158 instructions, 2.48%)</title><rect x="89.0333%" y="277" width="2.4809%" height="15" fill="rgb(251,29,16)" fg:x="256886" fg:w="7158"/><text x="89.3263%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,614 instructions, 2.64%)</title><rect x="88.9061%" y="293" width="2.6389%" height="15" fill="rgb(214,38,29)" fg:x="256519" fg:w="7614"/><text x="89.1991%" y="303.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,141 instructions, 2.82%)</title><rect x="88.7543%" y="309" width="2.8216%" height="15" fill="rgb(226,226,29)" fg:x="256081" fg:w="8141"/><text x="89.0473%" y="319.50">&lt;i..</text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.6084%" y="293" width="0.0773%" height="15" fill="rgb(236,79,42)" fg:x="264316" fg:w="223"/><text x="91.9014%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.6084%" y="309" width="0.1005%" height="15" fill="rgb(222,12,36)" fg:x="264316" fg:w="290"/><text x="91.9014%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,790 instructions, 3.05%)</title><rect x="88.6891%" y="325" width="3.0465%" height="15" fill="rgb(232,123,44)" fg:x="255893" fg:w="8790"/><text x="88.9821%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,317 instructions, 3.23%)</title><rect x="88.5373%" y="341" width="3.2291%" height="15" fill="rgb(234,93,50)" fg:x="255455" fg:w="9317"/><text x="88.8303%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,718 instructions, 3.71%)</title><rect x="88.0843%" y="357" width="3.7147%" height="15" fill="rgb(210,86,49)" fg:x="254148" fg:w="10718"/><text x="88.3773%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,807 instructions, 3.75%)</title><rect x="88.0843%" y="373" width="3.7456%" height="15" fill="rgb(224,91,54)" fg:x="254148" fg:w="10807"/><text x="88.3773%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8559%" y="69" width="0.0437%" height="15" fill="rgb(239,169,9)" fg:x="265030" fg:w="126"/><text x="92.1489%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (148 instructions, 0.05%)</title><rect x="91.8524%" y="85" width="0.0513%" height="15" fill="rgb(238,29,17)" fg:x="265020" fg:w="148"/><text x="92.1454%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9055%" y="85" width="0.0437%" height="15" fill="rgb(227,160,22)" fg:x="265173" fg:w="126"/><text x="92.1984%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (300 instructions, 0.10%)</title><rect x="91.8507%" y="101" width="0.1040%" height="15" fill="rgb(231,129,52)" fg:x="265015" fg:w="300"/><text x="92.1437%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9547%" y="101" width="0.0437%" height="15" fill="rgb(241,184,9)" fg:x="265315" fg:w="126"/><text x="92.2476%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (442 instructions, 0.15%)</title><rect x="91.8507%" y="117" width="0.1532%" height="15" fill="rgb(217,43,48)" fg:x="265015" fg:w="442"/><text x="92.1437%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0056%" y="101" width="0.0218%" height="15" fill="rgb(213,49,1)" fg:x="265462" fg:w="63"/><text x="92.2986%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.06%)</title><rect x="92.0056%" y="117" width="0.0575%" height="15" fill="rgb(223,79,39)" fg:x="265462" fg:w="166"/><text x="92.2986%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (634 instructions, 0.22%)</title><rect x="91.8490%" y="133" width="0.2197%" height="15" fill="rgb(228,227,46)" fg:x="265010" fg:w="634"/><text x="92.1419%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0687%" y="117" width="0.0191%" height="15" fill="rgb(245,89,41)" fg:x="265644" fg:w="55"/><text x="92.3617%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0878%" y="117" width="0.0218%" height="15" fill="rgb(253,83,21)" fg:x="265699" fg:w="63"/><text x="92.3807%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.0687%" y="133" width="0.0700%" height="15" fill="rgb(229,116,51)" fg:x="265644" fg:w="202"/><text x="92.3617%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (857 instructions, 0.30%)</title><rect x="91.8472%" y="149" width="0.2970%" height="15" fill="rgb(246,67,26)" fg:x="265005" fg:w="857"/><text x="92.1402%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1443%" y="133" width="0.0191%" height="15" fill="rgb(250,117,20)" fg:x="265862" fg:w="55"/><text x="92.4372%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1633%" y="133" width="0.0218%" height="15" fill="rgb(207,88,17)" fg:x="265917" fg:w="63"/><text x="92.4563%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.1443%" y="149" width="0.0700%" height="15" fill="rgb(212,98,36)" fg:x="265862" fg:w="202"/><text x="92.4372%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,080 instructions, 0.37%)</title><rect x="91.8455%" y="165" width="0.3743%" height="15" fill="rgb(221,72,6)" fg:x="265000" fg:w="1080"/><text x="92.1385%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2198%" y="149" width="0.0191%" height="15" fill="rgb(235,129,19)" fg:x="266080" fg:w="55"/><text x="92.5128%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.2389%" y="149" width="0.0218%" height="15" fill="rgb(237,200,6)" fg:x="266135" fg:w="63"/><text x="92.5319%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2198%" y="165" width="0.0700%" height="15" fill="rgb(239,69,54)" fg:x="266080" fg:w="202"/><text x="92.5128%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,303 instructions, 0.45%)</title><rect x="91.8438%" y="181" width="0.4516%" height="15" fill="rgb(214,68,45)" fg:x="264995" fg:w="1303"/><text x="92.1367%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2954%" y="165" width="0.0191%" height="15" fill="rgb(254,160,8)" fg:x="266298" fg:w="55"/><text x="92.5883%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3144%" y="165" width="0.0218%" height="15" fill="rgb(215,226,31)" fg:x="266353" fg:w="63"/><text x="92.6074%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2954%" y="181" width="0.0700%" height="15" fill="rgb(253,6,35)" fg:x="266298" fg:w="202"/><text x="92.5883%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,521 instructions, 0.53%)</title><rect x="91.8438%" y="197" width="0.5272%" height="15" fill="rgb(219,96,42)" fg:x="264995" fg:w="1521"/><text x="92.1367%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3727%" y="181" width="0.0191%" height="15" fill="rgb(207,170,13)" fg:x="266521" fg:w="55"/><text x="92.6656%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3917%" y="181" width="0.0218%" height="15" fill="rgb(239,101,5)" fg:x="266576" fg:w="63"/><text x="92.6847%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.3727%" y="197" width="0.0700%" height="15" fill="rgb(228,183,34)" fg:x="266521" fg:w="202"/><text x="92.6656%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,749 instructions, 0.61%)</title><rect x="91.8420%" y="213" width="0.6062%" height="15" fill="rgb(205,28,31)" fg:x="264990" fg:w="1749"/><text x="92.1350%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4482%" y="197" width="0.0191%" height="15" fill="rgb(214,118,50)" fg:x="266739" fg:w="55"/><text x="92.7412%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4673%" y="197" width="0.0218%" height="15" fill="rgb(213,108,51)" fg:x="266794" fg:w="63"/><text x="92.7603%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.4482%" y="213" width="0.0700%" height="15" fill="rgb(238,56,37)" fg:x="266739" fg:w="202"/><text x="92.7412%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,972 instructions, 0.68%)</title><rect x="91.8403%" y="229" width="0.6835%" height="15" fill="rgb(214,136,28)" fg:x="264985" fg:w="1972"/><text x="92.1333%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5238%" y="213" width="0.0191%" height="15" fill="rgb(221,201,54)" fg:x="266957" fg:w="55"/><text x="92.8167%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5428%" y="213" width="0.0218%" height="15" fill="rgb(228,216,39)" fg:x="267012" fg:w="63"/><text x="92.8358%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5238%" y="229" width="0.0700%" height="15" fill="rgb(207,229,49)" fg:x="266957" fg:w="202"/><text x="92.8167%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,195 instructions, 0.76%)</title><rect x="91.8386%" y="245" width="0.7608%" height="15" fill="rgb(224,23,43)" fg:x="264980" fg:w="2195"/><text x="92.1315%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5993%" y="229" width="0.0191%" height="15" fill="rgb(247,97,18)" fg:x="267175" fg:w="55"/><text x="92.8923%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6184%" y="229" width="0.0218%" height="15" fill="rgb(232,53,32)" fg:x="267230" fg:w="63"/><text x="92.9114%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5993%" y="245" width="0.0700%" height="15" fill="rgb(247,38,23)" fg:x="267175" fg:w="202"/><text x="92.8923%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,418 instructions, 0.84%)</title><rect x="91.8368%" y="261" width="0.8380%" height="15" fill="rgb(228,101,52)" fg:x="264975" fg:w="2418"/><text x="92.1298%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6749%" y="245" width="0.0191%" height="15" fill="rgb(231,45,36)" fg:x="267393" fg:w="55"/><text x="92.9679%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6939%" y="245" width="0.0218%" height="15" fill="rgb(221,183,50)" fg:x="267448" fg:w="63"/><text x="92.9869%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.6749%" y="261" width="0.0700%" height="15" fill="rgb(251,132,12)" fg:x="267393" fg:w="202"/><text x="92.9679%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,636 instructions, 0.91%)</title><rect x="91.8368%" y="277" width="0.9136%" height="15" fill="rgb(252,50,16)" fg:x="264975" fg:w="2636"/><text x="92.1298%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7522%" y="261" width="0.0191%" height="15" fill="rgb(224,60,15)" fg:x="267616" fg:w="55"/><text x="93.0451%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7712%" y="261" width="0.0218%" height="15" fill="rgb(254,2,34)" fg:x="267671" fg:w="63"/><text x="93.0642%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.7522%" y="277" width="0.0700%" height="15" fill="rgb(232,154,8)" fg:x="267616" fg:w="202"/><text x="93.0451%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,864 instructions, 0.99%)</title><rect x="91.8351%" y="293" width="0.9926%" height="15" fill="rgb(235,190,52)" fg:x="264970" fg:w="2864"/><text x="92.1281%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8277%" y="277" width="0.0191%" height="15" fill="rgb(213,218,38)" fg:x="267834" fg:w="55"/><text x="93.1207%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8468%" y="277" width="0.0218%" height="15" fill="rgb(237,50,37)" fg:x="267889" fg:w="63"/><text x="93.1398%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.8277%" y="293" width="0.0700%" height="15" fill="rgb(235,51,35)" fg:x="267834" fg:w="202"/><text x="93.1207%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,087 instructions, 1.07%)</title><rect x="91.8334%" y="309" width="1.0699%" height="15" fill="rgb(244,40,52)" fg:x="264965" fg:w="3087"/><text x="92.1263%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9033%" y="293" width="0.0191%" height="15" fill="rgb(217,225,45)" fg:x="268052" fg:w="55"/><text x="93.1963%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9224%" y="293" width="0.0218%" height="15" fill="rgb(247,191,36)" fg:x="268107" fg:w="63"/><text x="93.2153%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.9033%" y="309" width="0.0700%" height="15" fill="rgb(251,144,31)" fg:x="268052" fg:w="202"/><text x="93.1963%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,305 instructions, 1.15%)</title><rect x="91.8334%" y="325" width="1.1455%" height="15" fill="rgb(227,155,41)" fg:x="264965" fg:w="3305"/><text x="92.1263%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9806%" y="309" width="0.0191%" height="15" fill="rgb(236,121,36)" fg:x="268275" fg:w="55"/><text x="93.2735%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9996%" y="309" width="0.0218%" height="15" fill="rgb(221,128,28)" fg:x="268330" fg:w="63"/><text x="93.2926%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.9806%" y="325" width="0.0700%" height="15" fill="rgb(249,67,50)" fg:x="268275" fg:w="202"/><text x="93.2735%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,533 instructions, 1.22%)</title><rect x="91.8316%" y="341" width="1.2245%" height="15" fill="rgb(241,126,38)" fg:x="264960" fg:w="3533"/><text x="92.1246%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0561%" y="325" width="0.0191%" height="15" fill="rgb(239,33,14)" fg:x="268493" fg:w="55"/><text x="93.3491%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0752%" y="325" width="0.0218%" height="15" fill="rgb(207,221,54)" fg:x="268548" fg:w="63"/><text x="93.3682%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0561%" y="341" width="0.0700%" height="15" fill="rgb(242,138,43)" fg:x="268493" fg:w="202"/><text x="93.3491%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,756 instructions, 1.30%)</title><rect x="91.8299%" y="357" width="1.3018%" height="15" fill="rgb(231,118,19)" fg:x="264955" fg:w="3756"/><text x="92.1229%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.1317%" y="341" width="0.0191%" height="15" fill="rgb(214,128,54)" fg:x="268711" fg:w="55"/><text x="93.4247%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.1508%" y="341" width="0.0218%" height="15" fill="rgb(236,136,6)" fg:x="268766" fg:w="63"/><text x="93.4437%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.1317%" y="357" width="0.0700%" height="15" fill="rgb(247,30,38)" fg:x="268711" fg:w="202"/><text x="93.4247%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,974 instructions, 1.38%)</title><rect x="91.8299%" y="373" width="1.3773%" height="15" fill="rgb(249,189,40)" fg:x="264955" fg:w="3974"/><text x="92.1229%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.2072%" y="357" width="0.0191%" height="15" fill="rgb(247,179,7)" fg:x="268929" fg:w="55"/><text x="93.5002%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.06%)</title><rect x="93.2072%" y="373" width="0.0565%" height="15" fill="rgb(239,46,52)" fg:x="268929" fg:w="163"/><text x="93.5002%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (89 instructions, 0.03%)</title><rect x="93.2637%" y="373" width="0.0308%" height="15" fill="rgb(225,28,52)" fg:x="269092" fg:w="89"/><text x="93.5567%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.01%)</title><rect x="93.2946%" y="341" width="0.0135%" height="15" fill="rgb(217,208,44)" fg:x="269181" fg:w="39"/><text x="93.5876%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.3081%" y="341" width="0.0263%" height="15" fill="rgb(224,11,34)" fg:x="269220" fg:w="76"/><text x="93.6011%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.3362%" y="309" width="0.0184%" height="15" fill="rgb(205,134,17)" fg:x="269301" fg:w="53"/><text x="93.6291%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.3545%" y="309" width="0.1262%" height="15" fill="rgb(237,125,9)" fg:x="269354" fg:w="364"/><text x="93.6475%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.4807%" y="309" width="0.0250%" height="15" fill="rgb(208,139,47)" fg:x="269718" fg:w="72"/><text x="93.7737%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.3362%" y="325" width="0.2516%" height="15" fill="rgb(242,5,5)" fg:x="269301" fg:w="726"/><text x="93.6291%" y="335.50"></text></g><g><title>candid::types::internal::env_add (935 instructions, 0.32%)</title><rect x="93.3344%" y="341" width="0.3241%" height="15" fill="rgb(218,78,2)" fg:x="269296" fg:w="935"/><text x="93.6274%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6585%" y="341" width="0.0263%" height="15" fill="rgb(217,75,16)" fg:x="270231" fg:w="76"/><text x="93.9515%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6848%" y="341" width="0.0263%" height="15" fill="rgb(212,56,17)" fg:x="270307" fg:w="76"/><text x="93.9778%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.7129%" y="309" width="0.0184%" height="15" fill="rgb(228,61,29)" fg:x="270388" fg:w="53"/><text x="94.0059%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.7313%" y="309" width="0.1262%" height="15" fill="rgb(247,202,38)" fg:x="270441" fg:w="364"/><text x="94.0243%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.8574%" y="309" width="0.0250%" height="15" fill="rgb(211,216,43)" fg:x="270805" fg:w="72"/><text x="94.1504%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.7129%" y="325" width="0.2516%" height="15" fill="rgb(220,7,49)" fg:x="270388" fg:w="726"/><text x="94.0059%" y="335.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="93.9645%" y="325" width="0.2128%" height="15" fill="rgb(219,158,7)" fg:x="271114" fg:w="614"/><text x="94.2575%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="94.1773%" y="309" width="0.0281%" height="15" fill="rgb(206,127,9)" fg:x="271728" fg:w="81"/><text x="94.4703%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="94.1773%" y="325" width="0.0374%" height="15" fill="rgb(206,103,43)" fg:x="271728" fg:w="108"/><text x="94.4703%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,622 instructions, 0.56%)</title><rect x="93.7112%" y="341" width="0.5622%" height="15" fill="rgb(240,108,41)" fg:x="270383" fg:w="1622"/><text x="94.0042%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.2733%" y="293" width="0.0184%" height="15" fill="rgb(252,212,6)" fg:x="272005" fg:w="53"/><text x="94.5663%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.2917%" y="293" width="0.0534%" height="15" fill="rgb(248,105,31)" fg:x="272058" fg:w="154"/><text x="94.5847%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.2733%" y="309" width="0.0894%" height="15" fill="rgb(241,123,4)" fg:x="272005" fg:w="258"/><text x="94.5663%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.4373%" y="293" width="0.0184%" height="15" fill="rgb(223,74,37)" fg:x="272478" fg:w="53"/><text x="94.7303%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.4557%" y="293" width="0.0534%" height="15" fill="rgb(251,219,28)" fg:x="272531" fg:w="154"/><text x="94.7486%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.4373%" y="309" width="0.0894%" height="15" fill="rgb(218,36,31)" fg:x="272478" fg:w="258"/><text x="94.7303%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (946 instructions, 0.33%)</title><rect x="94.2733%" y="325" width="0.3279%" height="15" fill="rgb(229,40,15)" fg:x="272005" fg:w="946"/><text x="94.5663%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,219 instructions, 0.42%)</title><rect x="94.2733%" y="341" width="0.4225%" height="15" fill="rgb(208,138,37)" fg:x="272005" fg:w="1219"/><text x="94.5663%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,167 instructions, 1.44%)</title><rect x="93.2946%" y="357" width="1.4442%" height="15" fill="rgb(208,40,52)" fg:x="269181" fg:w="4167"/><text x="93.5876%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.7388%" y="325" width="0.0263%" height="15" fill="rgb(246,181,48)" fg:x="273348" fg:w="76"/><text x="95.0318%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="94.7388%" y="341" width="0.0381%" height="15" fill="rgb(253,178,36)" fg:x="273348" fg:w="110"/><text x="95.0318%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="94.7388%" y="357" width="0.0617%" height="15" fill="rgb(210,170,6)" fg:x="273348" fg:w="178"/><text x="95.0318%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.03%)</title><rect x="94.8088%" y="309" width="0.0270%" height="15" fill="rgb(243,62,22)" fg:x="273550" fg:w="78"/><text x="95.1018%" y="319.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.05%)</title><rect x="94.8088%" y="325" width="0.0530%" height="15" fill="rgb(213,145,26)" fg:x="273550" fg:w="153"/><text x="95.1018%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.8619%" y="325" width="0.0263%" height="15" fill="rgb(237,177,23)" fg:x="273703" fg:w="76"/><text x="95.1548%" y="335.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.11%)</title><rect x="94.8088%" y="341" width="0.1067%" height="15" fill="rgb(252,5,24)" fg:x="273550" fg:w="308"/><text x="95.1018%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.9156%" y="293" width="0.0184%" height="15" fill="rgb(230,108,54)" fg:x="273858" fg:w="53"/><text x="95.2085%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.9339%" y="293" width="0.0534%" height="15" fill="rgb(252,192,41)" fg:x="273911" fg:w="154"/><text x="95.2269%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="94.9156%" y="309" width="0.0894%" height="15" fill="rgb(218,125,20)" fg:x="273858" fg:w="258"/><text x="95.2085%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="94.9156%" y="325" width="0.1639%" height="15" fill="rgb(230,223,15)" fg:x="273858" fg:w="473"/><text x="95.2085%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.0795%" y="325" width="0.0263%" height="15" fill="rgb(239,99,47)" fg:x="274331" fg:w="76"/><text x="95.3725%" y="335.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="95.1058%" y="325" width="0.0471%" height="15" fill="rgb(222,214,23)" fg:x="274407" fg:w="136"/><text x="95.3988%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (989 instructions, 0.34%)</title><rect x="94.9156%" y="341" width="0.3428%" height="15" fill="rgb(250,98,43)" fg:x="273858" fg:w="989"/><text x="95.2085%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.2583%" y="309" width="0.0263%" height="15" fill="rgb(226,140,11)" fg:x="274847" fg:w="76"/><text x="95.5513%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.2583%" y="325" width="0.0381%" height="15" fill="rgb(239,2,22)" fg:x="274847" fg:w="110"/><text x="95.5513%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="95.2583%" y="341" width="0.0617%" height="15" fill="rgb(209,106,26)" fg:x="274847" fg:w="178"/><text x="95.5513%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="95.3200%" y="293" width="0.0184%" height="15" fill="rgb(209,135,11)" fg:x="275025" fg:w="53"/><text x="95.6130%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (78 instructions, 0.03%)</title><rect x="95.3200%" y="309" width="0.0270%" height="15" fill="rgb(241,58,6)" fg:x="275025" fg:w="78"/><text x="95.6130%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (293 instructions, 0.10%)</title><rect x="95.3200%" y="325" width="0.1015%" height="15" fill="rgb(214,78,1)" fg:x="275025" fg:w="293"/><text x="95.6130%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (438 instructions, 0.15%)</title><rect x="95.3200%" y="341" width="0.1518%" height="15" fill="rgb(229,135,33)" fg:x="275025" fg:w="438"/><text x="95.6130%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.4718%" y="293" width="0.0263%" height="15" fill="rgb(245,87,50)" fg:x="275463" fg:w="76"/><text x="95.7648%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.4718%" y="309" width="0.0381%" height="15" fill="rgb(222,222,8)" fg:x="275463" fg:w="110"/><text x="95.7648%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="95.4718%" y="325" width="0.0607%" height="15" fill="rgb(214,97,50)" fg:x="275463" fg:w="175"/><text x="95.7648%" y="335.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.08%)</title><rect x="95.4718%" y="341" width="0.0787%" height="15" fill="rgb(244,161,51)" fg:x="275463" fg:w="227"/><text x="95.7648%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (56 instructions, 0.02%)</title><rect x="95.5505%" y="341" width="0.0194%" height="15" fill="rgb(225,17,4)" fg:x="275690" fg:w="56"/><text x="95.8435%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="95.5699%" y="309" width="0.0281%" height="15" fill="rgb(238,10,13)" fg:x="275746" fg:w="81"/><text x="95.8629%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="95.5699%" y="325" width="0.0374%" height="15" fill="rgb(239,169,14)" fg:x="275746" fg:w="108"/><text x="95.8629%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.03%)</title><rect x="95.6074%" y="325" width="0.0270%" height="15" fill="rgb(213,105,25)" fg:x="275854" fg:w="78"/><text x="95.9003%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.08%)</title><rect x="95.5699%" y="341" width="0.0756%" height="15" fill="rgb(233,4,17)" fg:x="275746" fg:w="218"/><text x="95.8629%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,652 instructions, 0.92%)</title><rect x="94.8005%" y="357" width="0.9191%" height="15" fill="rgb(212,5,35)" fg:x="273526" fg:w="2652"/><text x="95.0935%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.7235%" y="309" width="0.0263%" height="15" fill="rgb(216,3,14)" fg:x="276189" fg:w="76"/><text x="96.0164%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.7235%" y="325" width="0.0381%" height="15" fill="rgb(240,105,33)" fg:x="276189" fg:w="110"/><text x="96.0164%" y="335.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="95.7841%" y="309" width="0.0350%" height="15" fill="rgb(216,73,0)" fg:x="276364" fg:w="101"/><text x="96.0771%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="95.7841%" y="325" width="0.0471%" height="15" fill="rgb(217,153,48)" fg:x="276364" fg:w="136"/><text x="96.0771%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.13%)</title><rect x="95.7235%" y="341" width="0.1331%" height="15" fill="rgb(218,180,8)" fg:x="276189" fg:w="384"/><text x="96.0164%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="95.8566%" y="341" width="0.1019%" height="15" fill="rgb(252,168,2)" fg:x="276573" fg:w="294"/><text x="96.1495%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (755 instructions, 0.26%)</title><rect x="95.7235%" y="357" width="0.2617%" height="15" fill="rgb(224,116,33)" fg:x="276189" fg:w="755"/><text x="96.0164%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.0195%" y="309" width="0.0184%" height="15" fill="rgb(229,205,17)" fg:x="277043" fg:w="53"/><text x="96.3124%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="96.0378%" y="309" width="0.1262%" height="15" fill="rgb(234,1,41)" fg:x="277096" fg:w="364"/><text x="96.3308%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="96.1640%" y="309" width="0.0250%" height="15" fill="rgb(244,185,8)" fg:x="277460" fg:w="72"/><text x="96.4569%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="96.0195%" y="325" width="0.2516%" height="15" fill="rgb(248,51,21)" fg:x="277043" fg:w="726"/><text x="96.3124%" y="335.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="96.2711%" y="325" width="0.2128%" height="15" fill="rgb(248,157,31)" fg:x="277769" fg:w="614"/><text x="96.5640%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,503 instructions, 0.52%)</title><rect x="96.0177%" y="341" width="0.5209%" height="15" fill="rgb(210,34,47)" fg:x="277038" fg:w="1503"/><text x="96.3107%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,535 instructions, 0.53%)</title><rect x="96.0177%" y="357" width="0.5320%" height="15" fill="rgb(227,139,53)" fg:x="277038" fg:w="1535"/><text x="96.3107%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.5497%" y="309" width="0.0184%" height="15" fill="rgb(232,211,37)" fg:x="278573" fg:w="53"/><text x="96.8427%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="96.5681%" y="309" width="0.0534%" height="15" fill="rgb(236,133,10)" fg:x="278626" fg:w="154"/><text x="96.8611%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="96.5497%" y="325" width="0.0894%" height="15" fill="rgb(243,202,25)" fg:x="278573" fg:w="258"/><text x="96.8427%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="96.5497%" y="341" width="0.1639%" height="15" fill="rgb(224,59,9)" fg:x="278573" fg:w="473"/><text x="96.8427%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (566 instructions, 0.20%)</title><rect x="96.5497%" y="357" width="0.1962%" height="15" fill="rgb(206,146,16)" fg:x="278573" fg:w="566"/><text x="96.8427%" y="367.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.7497%" y="309" width="0.0350%" height="15" fill="rgb(220,47,2)" fg:x="279150" fg:w="101"/><text x="97.0427%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.7497%" y="325" width="0.0471%" height="15" fill="rgb(225,124,51)" fg:x="279150" fg:w="136"/><text x="97.0427%" y="335.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.8221%" y="309" width="0.0350%" height="15" fill="rgb(241,220,50)" fg:x="279359" fg:w="101"/><text x="97.1151%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.8221%" y="325" width="0.0471%" height="15" fill="rgb(232,168,5)" fg:x="279359" fg:w="136"/><text x="97.1151%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (418 instructions, 0.14%)</title><rect x="96.7497%" y="341" width="0.1449%" height="15" fill="rgb(243,90,22)" fg:x="279150" fg:w="418"/><text x="97.0427%" y="351.50"></text></g><g><title>memcpy (3,941 instructions, 1.37%)</title><rect x="96.8946%" y="341" width="1.3659%" height="15" fill="rgb(223,153,32)" fg:x="279568" fg:w="3941"/><text x="97.1876%" y="351.50"></text></g><g><title>&lt;&amp;mut candid::ser::ValueSerializer as candid::types::Serializer&gt;::serialize_blob (4,475 instructions, 1.55%)</title><rect x="96.7497%" y="357" width="1.5510%" height="15" fill="rgb(243,124,20)" fg:x="279150" fg:w="4475"/><text x="97.0427%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (14,530 instructions, 5.04%)</title><rect x="93.2946%" y="373" width="5.0359%" height="15" fill="rgb(246,168,39)" fg:x="269181" fg:w="14530"/><text x="93.5876%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="98.3305%" y="373" width="0.0302%" height="15" fill="rgb(222,165,54)" fg:x="283711" fg:w="87"/><text x="98.6235%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.04%)</title><rect x="98.3606%" y="373" width="0.0416%" height="15" fill="rgb(251,142,27)" fg:x="283798" fg:w="120"/><text x="98.6536%" y="383.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.01%)</title><rect x="98.4022%" y="357" width="0.0111%" height="15" fill="rgb(207,168,50)" fg:x="283918" fg:w="32"/><text x="98.6952%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="98.4133%" y="309" width="0.0409%" height="15" fill="rgb(250,139,25)" fg:x="283950" fg:w="118"/><text x="98.7063%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.05%)</title><rect x="98.4133%" y="325" width="0.0527%" height="15" fill="rgb(214,194,48)" fg:x="283950" fg:w="152"/><text x="98.7063%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.08%)</title><rect x="98.4133%" y="341" width="0.0752%" height="15" fill="rgb(227,138,47)" fg:x="283950" fg:w="217"/><text x="98.7063%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.4885%" y="341" width="0.0263%" height="15" fill="rgb(250,162,5)" fg:x="284167" fg:w="76"/><text x="98.7815%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5149%" y="341" width="0.0156%" height="15" fill="rgb(229,74,25)" fg:x="284243" fg:w="45"/><text x="98.8078%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5305%" y="341" width="0.0156%" height="15" fill="rgb(221,124,34)" fg:x="284288" fg:w="45"/><text x="98.8234%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="98.5461%" y="341" width="0.0191%" height="15" fill="rgb(225,94,25)" fg:x="284333" fg:w="55"/><text x="98.8390%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.5651%" y="293" width="0.0184%" height="15" fill="rgb(210,100,12)" fg:x="284388" fg:w="53"/><text x="98.8581%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.5835%" y="293" width="0.0534%" height="15" fill="rgb(206,62,48)" fg:x="284441" fg:w="154"/><text x="98.8765%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="98.5651%" y="309" width="0.0894%" height="15" fill="rgb(222,181,9)" fg:x="284388" fg:w="258"/><text x="98.8581%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="98.5651%" y="325" width="0.1639%" height="15" fill="rgb(248,42,38)" fg:x="284388" fg:w="473"/><text x="98.8581%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.7291%" y="293" width="0.0263%" height="15" fill="rgb(213,40,6)" fg:x="284861" fg:w="76"/><text x="99.0220%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="98.7291%" y="309" width="0.0381%" height="15" fill="rgb(211,108,15)" fg:x="284861" fg:w="110"/><text x="99.0220%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="98.7291%" y="325" width="0.0607%" height="15" fill="rgb(249,62,9)" fg:x="284861" fg:w="175"/><text x="99.0220%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.8497%" y="293" width="0.0184%" height="15" fill="rgb(233,26,54)" fg:x="285209" fg:w="53"/><text x="99.1426%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.8680%" y="293" width="0.0534%" height="15" fill="rgb(210,175,26)" fg:x="285262" fg:w="154"/><text x="99.1610%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (258 instructions, 0.09%)</title><rect x="98.8497%" y="309" width="0.0894%" height="15" fill="rgb(210,43,33)" fg:x="285209" fg:w="258"/><text x="99.1426%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (473 instructions, 0.16%)</title><rect x="98.8497%" y="325" width="0.1639%" height="15" fill="rgb(224,46,17)" fg:x="285209" fg:w="473"/><text x="99.1426%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,462 instructions, 0.51%)</title><rect x="98.5651%" y="341" width="0.5067%" height="15" fill="rgb(254,24,38)" fg:x="284388" fg:w="1462"/><text x="98.8581%" y="351.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="99.0718%" y="341" width="0.0156%" height="15" fill="rgb(248,32,0)" fg:x="285850" fg:w="45"/><text x="99.3648%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="99.0874%" y="341" width="0.0191%" height="15" fill="rgb(224,37,41)" fg:x="285895" fg:w="55"/><text x="99.3804%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,336 instructions, 0.81%)</title><rect x="98.4133%" y="357" width="0.8096%" height="15" fill="rgb(252,70,22)" fg:x="283950" fg:w="2336"/><text x="98.7063%" y="367.50"></text></g><g><title>std::io::Write::write_all (34 instructions, 0.01%)</title><rect x="99.2230%" y="357" width="0.0118%" height="15" fill="rgb(241,123,50)" fg:x="286286" fg:w="34"/><text x="99.5159%" y="367.50"></text></g><g><title>std::io::Write::write_all (764 instructions, 0.26%)</title><rect x="99.2347%" y="357" width="0.2648%" height="15" fill="rgb(246,138,33)" fg:x="286320" fg:w="764"/><text x="99.5277%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (3,234 instructions, 1.12%)</title><rect x="98.4022%" y="373" width="1.1209%" height="15" fill="rgb(218,39,32)" fg:x="283918" fg:w="3234"/><text x="98.6952%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.5231%" y="373" width="0.0281%" height="15" fill="rgb(241,229,10)" fg:x="287152" fg:w="81"/><text x="99.8161%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.5512%" y="373" width="0.0426%" height="15" fill="rgb(212,160,10)" fg:x="287233" fg:w="123"/><text x="99.8441%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="99.5976%" y="373" width="0.0388%" height="15" fill="rgb(227,48,51)" fg:x="287367" fg:w="112"/><text x="99.8906%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.6458%" y="373" width="0.0281%" height="15" fill="rgb(238,159,21)" fg:x="287506" fg:w="81"/><text x="99.9388%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.03%)</title><rect x="99.6739%" y="373" width="0.0347%" height="15" fill="rgb(216,1,10)" fg:x="287587" fg:w="100"/><text x="99.9668%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="99.7085%" y="373" width="0.0302%" height="15" fill="rgb(209,228,25)" fg:x="287687" fg:w="87"/><text x="100.0015%" y="383.50"></text></g><g><title>certified_map::witness_6_::{{closure}} (288,003 instructions, 99.82%)</title><rect x="0.0721%" y="389" width="99.8180%" height="15" fill="rgb(234,160,10)" fg:x="208" fg:w="288003"/><text x="0.3651%" y="399.50">certified_map::witness_6_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.8943%" y="389" width="0.0281%" height="15" fill="rgb(212,66,25)" fg:x="288223" fg:w="81"/><text x="100.1873%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="99.9224%" y="389" width="0.0437%" height="15" fill="rgb(254,121,18)" fg:x="288304" fg:w="126"/><text x="100.2153%" y="399.50"></text></g><g><title>all (288,528 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(219,127,1)" fg:x="0" fg:w="288528"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (288,528 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(219,224,42)" fg:x="0" fg:w="288528"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>