<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="303897"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.04%)</title><rect x="0.0079%" y="389" width="0.0375%" height="15" fill="rgb(253,39,1)" fg:x="24" fg:w="114"/><text x="0.3009%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (81 instructions, 0.03%)</title><rect x="0.0454%" y="389" width="0.0267%" height="15" fill="rgb(251,206,50)" fg:x="138" fg:w="81"/><text x="0.3384%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.0721%" y="357" width="0.0299%" height="15" fill="rgb(239,162,11)" fg:x="219" fg:w="91"/><text x="0.3650%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.1020%" y="341" width="0.0270%" height="15" fill="rgb(234,164,6)" fg:x="310" fg:w="82"/><text x="0.3950%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.1290%" y="341" width="0.1458%" height="15" fill="rgb(238,112,10)" fg:x="392" fg:w="443"/><text x="0.4220%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.2748%" y="341" width="0.0313%" height="15" fill="rgb(232,78,29)" fg:x="835" fg:w="95"/><text x="0.5677%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3060%" y="341" width="0.0197%" height="15" fill="rgb(232,20,13)" fg:x="930" fg:w="60"/><text x="0.5990%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3258%" y="341" width="0.0197%" height="15" fill="rgb(222,175,9)" fg:x="990" fg:w="60"/><text x="0.6187%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3455%" y="341" width="0.0197%" height="15" fill="rgb(233,61,14)" fg:x="1050" fg:w="60"/><text x="0.6385%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (60 instructions, 0.02%)</title><rect x="0.3653%" y="341" width="0.0197%" height="15" fill="rgb(224,152,29)" fg:x="1110" fg:w="60"/><text x="0.6582%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (82 instructions, 0.03%)</title><rect x="0.3850%" y="341" width="0.0270%" height="15" fill="rgb(232,26,6)" fg:x="1170" fg:w="82"/><text x="0.6780%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.4120%" y="341" width="0.0230%" height="15" fill="rgb(210,116,11)" fg:x="1252" fg:w="70"/><text x="0.7050%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.4350%" y="341" width="0.1458%" height="15" fill="rgb(238,213,15)" fg:x="1322" fg:w="443"/><text x="0.7280%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="0.5870%" y="325" width="0.0299%" height="15" fill="rgb(236,177,32)" fg:x="1784" fg:w="91"/><text x="0.8800%" y="335.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="0.6170%" y="293" width="0.0220%" height="15" fill="rgb(230,36,43)" fg:x="1875" fg:w="67"/><text x="0.9100%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.03%)</title><rect x="0.6170%" y="309" width="0.0316%" height="15" fill="rgb(212,76,23)" fg:x="1875" fg:w="96"/><text x="0.9100%" y="319.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="0.6522%" y="245" width="0.0115%" height="15" fill="rgb(225,168,24)" fg:x="1982" fg:w="35"/><text x="0.9452%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.02%)</title><rect x="0.6522%" y="261" width="0.0211%" height="15" fill="rgb(206,40,44)" fg:x="1982" fg:w="64"/><text x="0.9452%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="0.6486%" y="277" width="0.0474%" height="15" fill="rgb(251,213,6)" fg:x="1971" fg:w="144"/><text x="0.9415%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="0.6486%" y="293" width="0.0688%" height="15" fill="rgb(220,7,47)" fg:x="1971" fg:w="209"/><text x="0.9415%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="0.6486%" y="309" width="0.0721%" height="15" fill="rgb(254,130,53)" fg:x="1971" fg:w="219"/><text x="0.9415%" y="319.50"></text></g><g><title>core::fmt::write (453 instructions, 0.15%)</title><rect x="0.6170%" y="325" width="0.1491%" height="15" fill="rgb(240,2,46)" fg:x="1875" fg:w="453"/><text x="0.9100%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 0.22%)</title><rect x="0.5870%" y="341" width="0.2244%" height="15" fill="rgb(252,144,40)" fg:x="1784" fg:w="682"/><text x="0.8800%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="0.8115%" y="341" width="0.0313%" height="15" fill="rgb(226,23,10)" fg:x="2466" fg:w="95"/><text x="1.1044%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="0.8427%" y="341" width="0.0207%" height="15" fill="rgb(212,204,35)" fg:x="2561" fg:w="63"/><text x="1.1357%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="0.8635%" y="341" width="0.0250%" height="15" fill="rgb(218,201,15)" fg:x="2624" fg:w="76"/><text x="1.1564%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (70 instructions, 0.02%)</title><rect x="0.8885%" y="341" width="0.0230%" height="15" fill="rgb(224,197,5)" fg:x="2700" fg:w="70"/><text x="1.1814%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (443 instructions, 0.15%)</title><rect x="0.9115%" y="325" width="0.1458%" height="15" fill="rgb(224,185,18)" fg:x="2770" fg:w="443"/><text x="1.2045%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.0635%" y="309" width="0.0299%" height="15" fill="rgb(251,71,45)" fg:x="3232" fg:w="91"/><text x="1.3565%" y="319.50"></text></g><g><title>memcpy (67 instructions, 0.02%)</title><rect x="1.0935%" y="277" width="0.0220%" height="15" fill="rgb(216,74,24)" fg:x="3323" fg:w="67"/><text x="1.3864%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (96 instructions, 0.03%)</title><rect x="1.0935%" y="293" width="0.0316%" height="15" fill="rgb(250,36,51)" fg:x="3323" fg:w="96"/><text x="1.3864%" y="303.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="1.1287%" y="229" width="0.0115%" height="15" fill="rgb(209,224,28)" fg:x="3430" fg:w="35"/><text x="1.4216%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str.12 (64 instructions, 0.02%)</title><rect x="1.1287%" y="245" width="0.0211%" height="15" fill="rgb(228,5,10)" fg:x="3430" fg:w="64"/><text x="1.4216%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (144 instructions, 0.05%)</title><rect x="1.1251%" y="261" width="0.0474%" height="15" fill="rgb(250,57,40)" fg:x="3419" fg:w="144"/><text x="1.4180%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (209 instructions, 0.07%)</title><rect x="1.1251%" y="277" width="0.0688%" height="15" fill="rgb(228,194,41)" fg:x="3419" fg:w="209"/><text x="1.4180%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (219 instructions, 0.07%)</title><rect x="1.1251%" y="293" width="0.0721%" height="15" fill="rgb(206,68,23)" fg:x="3419" fg:w="219"/><text x="1.4180%" y="303.50"></text></g><g><title>core::fmt::write (453 instructions, 0.15%)</title><rect x="1.0935%" y="309" width="0.1491%" height="15" fill="rgb(230,33,29)" fg:x="3323" fg:w="453"/><text x="1.3864%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (682 instructions, 0.22%)</title><rect x="1.0635%" y="325" width="0.2244%" height="15" fill="rgb(210,39,32)" fg:x="3232" fg:w="682"/><text x="1.3565%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (95 instructions, 0.03%)</title><rect x="1.2879%" y="325" width="0.0313%" height="15" fill="rgb(236,89,23)" fg:x="3914" fg:w="95"/><text x="1.5809%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="1.3192%" y="325" width="0.0207%" height="15" fill="rgb(218,52,52)" fg:x="4009" fg:w="63"/><text x="1.6122%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,491 instructions, 0.49%)</title><rect x="0.9115%" y="341" width="0.4906%" height="15" fill="rgb(235,154,5)" fg:x="2770" fg:w="1491"/><text x="1.2045%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (76 instructions, 0.03%)</title><rect x="1.4021%" y="341" width="0.0250%" height="15" fill="rgb(223,168,9)" fg:x="4261" fg:w="76"/><text x="1.6951%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4452%" y="341" width="0.0299%" height="15" fill="rgb(220,8,33)" fg:x="4392" fg:w="91"/><text x="1.7382%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="1.4752%" y="341" width="0.0299%" height="15" fill="rgb(216,176,3)" fg:x="4483" fg:w="91"/><text x="1.7681%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.5064%" y="341" width="0.1408%" height="15" fill="rgb(254,150,22)" fg:x="4578" fg:w="428"/><text x="1.7994%" y="351.50"></text></g><g><title>memcpy (428 instructions, 0.14%)</title><rect x="1.6473%" y="341" width="0.1408%" height="15" fill="rgb(231,61,53)" fg:x="5006" fg:w="428"/><text x="1.9402%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (6,138 instructions, 2.02%)</title><rect x="0.1020%" y="357" width="2.0198%" height="15" fill="rgb(249,177,41)" fg:x="310" fg:w="6138"/><text x="0.3950%" y="367.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="2.1218%" y="357" width="0.1250%" height="15" fill="rgb(221,122,7)" fg:x="6448" fg:w="380"/><text x="2.4147%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="2.2491%" y="309" width="0.0293%" height="15" fill="rgb(215,115,7)" fg:x="6835" fg:w="89"/><text x="2.5421%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (118 instructions, 0.04%)</title><rect x="2.2899%" y="309" width="0.0388%" height="15" fill="rgb(218,108,33)" fg:x="6959" fg:w="118"/><text x="2.5829%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (277 instructions, 0.09%)</title><rect x="2.2491%" y="325" width="0.0911%" height="15" fill="rgb(221,205,39)" fg:x="6835" fg:w="277"/><text x="2.5421%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (339 instructions, 0.11%)</title><rect x="2.2468%" y="341" width="0.1116%" height="15" fill="rgb(220,171,18)" fg:x="6828" fg:w="339"/><text x="2.5398%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (388 instructions, 0.13%)</title><rect x="2.2468%" y="357" width="0.1277%" height="15" fill="rgb(236,188,29)" fg:x="6828" fg:w="388"/><text x="2.5398%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (63 instructions, 0.02%)</title><rect x="2.3745%" y="357" width="0.0207%" height="15" fill="rgb(239,29,5)" fg:x="7216" fg:w="63"/><text x="2.6675%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (8,208 instructions, 2.70%)</title><rect x="0.0721%" y="373" width="2.7009%" height="15" fill="rgb(236,114,44)" fg:x="219" fg:w="8208"/><text x="0.3650%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="2.7730%" y="341" width="0.0299%" height="15" fill="rgb(239,214,48)" fg:x="8427" fg:w="91"/><text x="3.0659%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (128 instructions, 0.04%)</title><rect x="2.7730%" y="357" width="0.0421%" height="15" fill="rgb(241,56,8)" fg:x="8427" fg:w="128"/><text x="3.0659%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (210 instructions, 0.07%)</title><rect x="2.7730%" y="373" width="0.0691%" height="15" fill="rgb(228,201,0)" fg:x="8427" fg:w="210"/><text x="3.0659%" y="383.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.8733%" y="277" width="0.0138%" height="15" fill="rgb(226,219,34)" fg:x="8732" fg:w="42"/><text x="3.1663%" y="287.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.8872%" y="261" width="0.0138%" height="15" fill="rgb(209,204,54)" fg:x="8774" fg:w="42"/><text x="3.1801%" y="271.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9010%" y="245" width="0.0138%" height="15" fill="rgb(251,160,17)" fg:x="8816" fg:w="42"/><text x="3.1940%" y="255.50"></text></g><g><title>memcmp (65 instructions, 0.02%)</title><rect x="2.9148%" y="229" width="0.0214%" height="15" fill="rgb(235,15,25)" fg:x="8858" fg:w="65"/><text x="3.2078%" y="239.50"></text></g><g><title>memcmp (42 instructions, 0.01%)</title><rect x="2.9362%" y="213" width="0.0138%" height="15" fill="rgb(216,209,28)" fg:x="8923" fg:w="42"/><text x="3.2292%" y="223.50"></text></g><g><title>memcmp (169 instructions, 0.06%)</title><rect x="2.9500%" y="197" width="0.0556%" height="15" fill="rgb(248,123,21)" fg:x="8965" fg:w="169"/><text x="3.2430%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0056%" y="197" width="0.0299%" height="15" fill="rgb(226,138,44)" fg:x="9134" fg:w="91"/><text x="3.2986%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.0356%" y="181" width="0.0299%" height="15" fill="rgb(211,104,54)" fg:x="9225" fg:w="91"/><text x="3.3285%" y="191.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="3.0655%" y="181" width="0.1132%" height="15" fill="rgb(241,198,15)" fg:x="9316" fg:w="344"/><text x="3.3585%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="3.1787%" y="181" width="0.0299%" height="15" fill="rgb(227,155,54)" fg:x="9660" fg:w="91"/><text x="3.4717%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (843 instructions, 0.28%)</title><rect x="3.0356%" y="197" width="0.2774%" height="15" fill="rgb(225,131,31)" fg:x="9225" fg:w="843"/><text x="3.3285%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,291 instructions, 0.42%)</title><rect x="2.9500%" y="213" width="0.4248%" height="15" fill="rgb(242,40,17)" fg:x="8965" fg:w="1291"/><text x="3.2430%" y="223.50"></text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="3.3748%" y="181" width="0.0790%" height="15" fill="rgb(254,57,35)" fg:x="10256" fg:w="240"/><text x="3.6678%" y="191.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="3.4538%" y="181" width="0.0724%" height="15" fill="rgb(240,64,32)" fg:x="10496" fg:w="220"/><text x="3.7468%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.5262%" y="181" width="0.1658%" height="15" fill="rgb(251,136,26)" fg:x="10716" fg:w="504"/><text x="3.8192%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="3.3748%" y="197" width="0.3472%" height="15" fill="rgb(208,60,54)" fg:x="10256" fg:w="1055"/><text x="3.6678%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="3.7220%" y="197" width="0.0431%" height="15" fill="rgb(220,13,12)" fg:x="11311" fg:w="131"/><text x="4.0150%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="3.7651%" y="197" width="0.1658%" height="15" fill="rgb(213,149,1)" fg:x="11442" fg:w="504"/><text x="4.0581%" y="207.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="3.9309%" y="197" width="0.0602%" height="15" fill="rgb(212,191,39)" fg:x="11946" fg:w="183"/><text x="4.2239%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="3.9912%" y="197" width="1.6410%" height="15" fill="rgb(215,221,42)" fg:x="12129" fg:w="4987"/><text x="4.2841%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="3.3748%" y="213" width="2.3794%" height="15" fill="rgb(244,79,23)" fg:x="10256" fg:w="7231"/><text x="3.6678%" y="223.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="5.7543%" y="181" width="0.0790%" height="15" fill="rgb(247,17,29)" fg:x="17487" fg:w="240"/><text x="6.0472%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="5.8332%" y="181" width="0.0734%" height="15" fill="rgb(251,221,21)" fg:x="17727" fg:w="223"/><text x="6.1262%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="5.9066%" y="181" width="0.1658%" height="15" fill="rgb(207,202,34)" fg:x="17950" fg:w="504"/><text x="6.1996%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="5.7543%" y="197" width="0.3481%" height="15" fill="rgb(217,4,34)" fg:x="17487" fg:w="1058"/><text x="6.0472%" y="207.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="6.1024%" y="197" width="0.0431%" height="15" fill="rgb(253,17,16)" fg:x="18545" fg:w="131"/><text x="6.3954%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="6.1455%" y="197" width="0.1658%" height="15" fill="rgb(223,91,48)" fg:x="18676" fg:w="504"/><text x="6.4385%" y="207.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="6.3113%" y="197" width="0.0211%" height="15" fill="rgb(244,191,22)" fg:x="19180" fg:w="64"/><text x="6.6043%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="6.3324%" y="197" width="1.6410%" height="15" fill="rgb(211,107,14)" fg:x="19244" fg:w="4987"/><text x="6.6254%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="7.9734%" y="197" width="1.6410%" height="15" fill="rgb(232,81,23)" fg:x="24231" fg:w="4987"/><text x="8.2664%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="5.7543%" y="213" width="4.0112%" height="15" fill="rgb(237,126,14)" fg:x="17487" fg:w="12190"/><text x="6.0472%" y="223.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="9.7655%" y="165" width="0.0790%" height="15" fill="rgb(230,65,39)" fg:x="29677" fg:w="240"/><text x="10.0584%" y="175.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="9.8445%" y="165" width="0.0724%" height="15" fill="rgb(208,106,41)" fg:x="29917" fg:w="220"/><text x="10.1374%" y="175.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="9.9168%" y="165" width="0.1658%" height="15" fill="rgb(206,125,25)" fg:x="30137" fg:w="504"/><text x="10.2098%" y="175.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="9.7655%" y="181" width="0.3472%" height="15" fill="rgb(250,24,29)" fg:x="29677" fg:w="1055"/><text x="10.0584%" y="191.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="10.1126%" y="181" width="0.0852%" height="15" fill="rgb(226,49,32)" fg:x="30732" fg:w="259"/><text x="10.4056%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="10.1979%" y="181" width="1.6410%" height="15" fill="rgb(217,110,16)" fg:x="30991" fg:w="4987"/><text x="10.4908%" y="191.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="11.8389%" y="181" width="0.0461%" height="15" fill="rgb(252,16,53)" fg:x="35978" fg:w="140"/><text x="12.1318%" y="191.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="11.8849%" y="181" width="0.1658%" height="15" fill="rgb(238,163,11)" fg:x="36118" fg:w="504"/><text x="12.1779%" y="191.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="12.0508%" y="181" width="0.0638%" height="15" fill="rgb(206,210,1)" fg:x="36622" fg:w="194"/><text x="12.3438%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="12.1146%" y="181" width="1.6410%" height="15" fill="rgb(229,8,25)" fg:x="36816" fg:w="4987"/><text x="12.4076%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.14%)</title><rect x="9.7655%" y="197" width="4.1399%" height="15" fill="rgb(247,155,23)" fg:x="29677" fg:w="12581"/><text x="10.0584%" y="207.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="13.9054%" y="197" width="0.0299%" height="15" fill="rgb(207,26,7)" fg:x="42258" fg:w="91"/><text x="14.1983%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.26%)</title><rect x="9.7655%" y="213" width="4.2646%" height="15" fill="rgb(215,179,12)" fg:x="29677" fg:w="12960"/><text x="10.0584%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,919 instructions, 11.16%)</title><rect x="2.9362%" y="229" width="11.1613%" height="15" fill="rgb(238,208,11)" fg:x="8923" fg:w="33919"/><text x="3.2292%" y="239.50">ic_certified_m..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="14.0975%" y="197" width="0.0790%" height="15" fill="rgb(238,102,42)" fg:x="42842" fg:w="240"/><text x="14.3905%" y="207.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="14.1765%" y="197" width="0.0724%" height="15" fill="rgb(239,35,9)" fg:x="43082" fg:w="220"/><text x="14.4695%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.2489%" y="197" width="0.1658%" height="15" fill="rgb(244,182,30)" fg:x="43302" fg:w="504"/><text x="14.5419%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="14.0975%" y="213" width="0.3472%" height="15" fill="rgb(232,181,23)" fg:x="42842" fg:w="1055"/><text x="14.3905%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="14.4447%" y="213" width="0.0431%" height="15" fill="rgb(242,154,29)" fg:x="43897" fg:w="131"/><text x="14.7377%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="14.4878%" y="213" width="0.1658%" height="15" fill="rgb(219,23,2)" fg:x="44028" fg:w="504"/><text x="14.7808%" y="223.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="14.6536%" y="213" width="0.0602%" height="15" fill="rgb(234,94,43)" fg:x="44532" fg:w="183"/><text x="14.9466%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="14.7139%" y="213" width="1.6410%" height="15" fill="rgb(223,55,45)" fg:x="44715" fg:w="4987"/><text x="15.0068%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="14.0975%" y="229" width="2.3794%" height="15" fill="rgb(241,215,54)" fg:x="42842" fg:w="7231"/><text x="14.3905%" y="239.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="16.4770%" y="197" width="0.0790%" height="15" fill="rgb(247,63,53)" fg:x="50073" fg:w="240"/><text x="16.7699%" y="207.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="16.5559%" y="197" width="0.0734%" height="15" fill="rgb(220,166,7)" fg:x="50313" fg:w="223"/><text x="16.8489%" y="207.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.6293%" y="197" width="0.1658%" height="15" fill="rgb(248,53,45)" fg:x="50536" fg:w="504"/><text x="16.9223%" y="207.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="16.4770%" y="213" width="0.3481%" height="15" fill="rgb(224,207,20)" fg:x="50073" fg:w="1058"/><text x="16.7699%" y="223.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="16.8251%" y="213" width="0.0431%" height="15" fill="rgb(244,185,11)" fg:x="51131" fg:w="131"/><text x="17.1181%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="16.8682%" y="213" width="0.1658%" height="15" fill="rgb(230,13,42)" fg:x="51262" fg:w="504"/><text x="17.1612%" y="223.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="17.0341%" y="213" width="0.0211%" height="15" fill="rgb(243,191,18)" fg:x="51766" fg:w="64"/><text x="17.3270%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="17.0551%" y="213" width="1.6410%" height="15" fill="rgb(249,135,15)" fg:x="51830" fg:w="4987"/><text x="17.3481%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="18.6961%" y="213" width="1.6410%" height="15" fill="rgb(229,26,35)" fg:x="56817" fg:w="4987"/><text x="18.9891%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="16.4770%" y="229" width="4.0112%" height="15" fill="rgb(216,191,16)" fg:x="50073" fg:w="12190"/><text x="16.7699%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.4882%" y="213" width="0.0299%" height="15" fill="rgb(242,18,7)" fg:x="62263" fg:w="91"/><text x="20.7812%" y="223.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="20.5181%" y="213" width="0.1132%" height="15" fill="rgb(205,128,17)" fg:x="62354" fg:w="344"/><text x="20.8111%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="20.6313%" y="213" width="0.0299%" height="15" fill="rgb(229,199,44)" fg:x="62698" fg:w="91"/><text x="20.9243%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="20.4882%" y="229" width="0.2790%" height="15" fill="rgb(234,222,3)" fg:x="62263" fg:w="848"/><text x="20.7812%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (54,457 instructions, 17.92%)</title><rect x="2.9148%" y="245" width="17.9196%" height="15" fill="rgb(220,170,20)" fg:x="8858" fg:w="54457"/><text x="3.2078%" y="255.50">ic_certified_map::rbtre..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="20.8344%" y="213" width="0.0790%" height="15" fill="rgb(207,138,8)" fg:x="63315" fg:w="240"/><text x="21.1273%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="20.9133%" y="213" width="0.0724%" height="15" fill="rgb(244,130,36)" fg:x="63555" fg:w="220"/><text x="21.2063%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="20.9857%" y="213" width="0.1658%" height="15" fill="rgb(207,197,52)" fg:x="63775" fg:w="504"/><text x="21.2787%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="20.8344%" y="229" width="0.3472%" height="15" fill="rgb(206,9,21)" fg:x="63315" fg:w="1055"/><text x="21.1273%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="21.1815%" y="229" width="0.0431%" height="15" fill="rgb(250,15,47)" fg:x="64370" fg:w="131"/><text x="21.4745%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="21.2246%" y="229" width="0.1658%" height="15" fill="rgb(235,202,14)" fg:x="64501" fg:w="504"/><text x="21.5176%" y="239.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="21.3905%" y="229" width="0.0602%" height="15" fill="rgb(211,180,47)" fg:x="65005" fg:w="183"/><text x="21.6834%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="21.4507%" y="229" width="1.6410%" height="15" fill="rgb(209,61,11)" fg:x="65188" fg:w="4987"/><text x="21.7437%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="20.8344%" y="245" width="2.3794%" height="15" fill="rgb(243,197,29)" fg:x="63315" fg:w="7231"/><text x="21.1273%" y="255.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="23.2138%" y="213" width="0.0790%" height="15" fill="rgb(216,185,16)" fg:x="70546" fg:w="240"/><text x="23.5068%" y="223.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="23.2928%" y="213" width="0.0734%" height="15" fill="rgb(248,5,15)" fg:x="70786" fg:w="223"/><text x="23.5857%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.3661%" y="213" width="0.1658%" height="15" fill="rgb(240,39,41)" fg:x="71009" fg:w="504"/><text x="23.6591%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="23.2138%" y="229" width="0.3481%" height="15" fill="rgb(224,220,43)" fg:x="70546" fg:w="1058"/><text x="23.5068%" y="239.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="23.5619%" y="229" width="0.0431%" height="15" fill="rgb(215,21,24)" fg:x="71604" fg:w="131"/><text x="23.8549%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="23.6050%" y="229" width="0.1658%" height="15" fill="rgb(220,102,8)" fg:x="71735" fg:w="504"/><text x="23.8980%" y="239.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="23.7709%" y="229" width="0.0211%" height="15" fill="rgb(225,185,10)" fg:x="72239" fg:w="64"/><text x="24.0639%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="23.7919%" y="229" width="1.6410%" height="15" fill="rgb(212,108,24)" fg:x="72303" fg:w="4987"/><text x="24.0849%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="25.4330%" y="229" width="1.6410%" height="15" fill="rgb(237,27,0)" fg:x="77290" fg:w="4987"/><text x="25.7259%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="23.2138%" y="245" width="4.0112%" height="15" fill="rgb(212,106,38)" fg:x="70546" fg:w="12190"/><text x="23.5068%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.2250%" y="229" width="0.0299%" height="15" fill="rgb(210,125,30)" fg:x="82736" fg:w="91"/><text x="27.5180%" y="239.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="27.2550%" y="229" width="0.1132%" height="15" fill="rgb(215,219,1)" fg:x="82827" fg:w="344"/><text x="27.5479%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="27.3682%" y="229" width="0.0299%" height="15" fill="rgb(223,10,12)" fg:x="83171" fg:w="91"/><text x="27.6611%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="27.2250%" y="245" width="0.2790%" height="15" fill="rgb(245,40,34)" fg:x="82736" fg:w="848"/><text x="27.5180%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (74,972 instructions, 24.67%)</title><rect x="2.9010%" y="261" width="24.6702%" height="15" fill="rgb(211,185,19)" fg:x="8816" fg:w="74972"/><text x="3.1940%" y="271.50">ic_certified_map::rbtree::RbTree&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="27.5712%" y="229" width="0.0790%" height="15" fill="rgb(243,190,43)" fg:x="83788" fg:w="240"/><text x="27.8642%" y="239.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="27.6502%" y="229" width="0.0724%" height="15" fill="rgb(232,208,29)" fg:x="84028" fg:w="220"/><text x="27.9431%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.7226%" y="229" width="0.1658%" height="15" fill="rgb(234,134,27)" fg:x="84248" fg:w="504"/><text x="28.0155%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="27.5712%" y="245" width="0.3472%" height="15" fill="rgb(225,41,29)" fg:x="83788" fg:w="1055"/><text x="27.8642%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="27.9183%" y="245" width="0.0431%" height="15" fill="rgb(241,214,44)" fg:x="84843" fg:w="131"/><text x="28.2113%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="27.9614%" y="245" width="0.1658%" height="15" fill="rgb(205,219,41)" fg:x="84974" fg:w="504"/><text x="28.2544%" y="255.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="28.1273%" y="245" width="0.0602%" height="15" fill="rgb(226,15,26)" fg:x="85478" fg:w="183"/><text x="28.4203%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="28.1875%" y="245" width="1.6410%" height="15" fill="rgb(210,83,41)" fg:x="85661" fg:w="4987"/><text x="28.4805%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="27.5712%" y="261" width="2.3794%" height="15" fill="rgb(247,9,39)" fg:x="83788" fg:w="7231"/><text x="27.8642%" y="271.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="29.9506%" y="229" width="0.0790%" height="15" fill="rgb(209,37,30)" fg:x="91019" fg:w="240"/><text x="30.2436%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="30.0296%" y="229" width="0.0734%" height="15" fill="rgb(248,170,46)" fg:x="91259" fg:w="223"/><text x="30.3226%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.1030%" y="229" width="0.1658%" height="15" fill="rgb(237,129,44)" fg:x="91482" fg:w="504"/><text x="30.3959%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="29.9506%" y="245" width="0.3481%" height="15" fill="rgb(225,117,51)" fg:x="91019" fg:w="1058"/><text x="30.2436%" y="255.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="30.2988%" y="245" width="0.0431%" height="15" fill="rgb(212,165,2)" fg:x="92077" fg:w="131"/><text x="30.5917%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="30.3419%" y="245" width="0.1658%" height="15" fill="rgb(213,53,45)" fg:x="92208" fg:w="504"/><text x="30.6348%" y="255.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="30.5077%" y="245" width="0.0211%" height="15" fill="rgb(220,148,3)" fg:x="92712" fg:w="64"/><text x="30.8007%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="30.5288%" y="245" width="1.6410%" height="15" fill="rgb(228,37,29)" fg:x="92776" fg:w="4987"/><text x="30.8217%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="32.1698%" y="245" width="1.6410%" height="15" fill="rgb(209,76,29)" fg:x="97763" fg:w="4987"/><text x="32.4627%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="29.9506%" y="261" width="4.0112%" height="15" fill="rgb(215,90,5)" fg:x="91019" fg:w="12190"/><text x="30.2436%" y="271.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="33.9618%" y="213" width="0.0790%" height="15" fill="rgb(227,207,32)" fg:x="103209" fg:w="240"/><text x="34.2548%" y="223.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="34.0408%" y="213" width="0.0724%" height="15" fill="rgb(251,218,44)" fg:x="103449" fg:w="220"/><text x="34.3338%" y="223.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="34.1132%" y="213" width="0.1658%" height="15" fill="rgb(211,44,16)" fg:x="103669" fg:w="504"/><text x="34.4062%" y="223.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="33.9618%" y="229" width="0.3472%" height="15" fill="rgb(242,170,37)" fg:x="103209" fg:w="1055"/><text x="34.2548%" y="239.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="34.3090%" y="229" width="0.0852%" height="15" fill="rgb(205,181,22)" fg:x="104264" fg:w="259"/><text x="34.6020%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="34.3942%" y="229" width="1.6410%" height="15" fill="rgb(228,130,19)" fg:x="104523" fg:w="4987"/><text x="34.6872%" y="239.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="36.0352%" y="229" width="0.0461%" height="15" fill="rgb(228,9,15)" fg:x="109510" fg:w="140"/><text x="36.3282%" y="239.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="36.0813%" y="229" width="0.1658%" height="15" fill="rgb(219,66,48)" fg:x="109650" fg:w="504"/><text x="36.3743%" y="239.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="36.2471%" y="229" width="0.0638%" height="15" fill="rgb(234,203,10)" fg:x="110154" fg:w="194"/><text x="36.5401%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="36.3110%" y="229" width="1.6410%" height="15" fill="rgb(219,209,1)" fg:x="110348" fg:w="4987"/><text x="36.6040%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.14%)</title><rect x="33.9618%" y="245" width="4.1399%" height="15" fill="rgb(206,167,9)" fg:x="103209" fg:w="12581"/><text x="34.2548%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="38.1017%" y="245" width="0.0299%" height="15" fill="rgb(210,11,39)" fg:x="115790" fg:w="91"/><text x="38.3947%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.26%)</title><rect x="33.9618%" y="261" width="4.2646%" height="15" fill="rgb(251,90,47)" fg:x="103209" fg:w="12960"/><text x="34.2548%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (107,600 instructions, 35.41%)</title><rect x="2.8872%" y="277" width="35.4067%" height="15" fill="rgb(237,7,4)" fg:x="8774" fg:w="107600"/><text x="3.1801%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="38.2939%" y="245" width="0.0790%" height="15" fill="rgb(232,205,47)" fg:x="116374" fg:w="240"/><text x="38.5869%" y="255.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="38.3729%" y="245" width="0.0724%" height="15" fill="rgb(215,86,48)" fg:x="116614" fg:w="220"/><text x="38.6658%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.4453%" y="245" width="0.1658%" height="15" fill="rgb(232,14,47)" fg:x="116834" fg:w="504"/><text x="38.7382%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="38.2939%" y="261" width="0.3472%" height="15" fill="rgb(240,28,46)" fg:x="116374" fg:w="1055"/><text x="38.5869%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="38.6411%" y="261" width="0.0431%" height="15" fill="rgb(224,85,5)" fg:x="117429" fg:w="131"/><text x="38.9340%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="38.6842%" y="261" width="0.1658%" height="15" fill="rgb(219,34,25)" fg:x="117560" fg:w="504"/><text x="38.9771%" y="271.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="38.8500%" y="261" width="0.0602%" height="15" fill="rgb(247,137,45)" fg:x="118064" fg:w="183"/><text x="39.1430%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="38.9102%" y="261" width="1.6410%" height="15" fill="rgb(237,121,47)" fg:x="118247" fg:w="4987"/><text x="39.2032%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="38.2939%" y="277" width="2.3794%" height="15" fill="rgb(247,148,27)" fg:x="116374" fg:w="7231"/><text x="38.5869%" y="287.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="40.6733%" y="245" width="0.0790%" height="15" fill="rgb(220,44,0)" fg:x="123605" fg:w="240"/><text x="40.9663%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="40.7523%" y="245" width="0.0734%" height="15" fill="rgb(236,61,29)" fg:x="123845" fg:w="223"/><text x="41.0453%" y="255.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="40.8257%" y="245" width="0.1658%" height="15" fill="rgb(244,180,35)" fg:x="124068" fg:w="504"/><text x="41.1186%" y="255.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="40.6733%" y="261" width="0.3481%" height="15" fill="rgb(242,14,54)" fg:x="123605" fg:w="1058"/><text x="40.9663%" y="271.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="41.0215%" y="261" width="0.0431%" height="15" fill="rgb(206,24,45)" fg:x="124663" fg:w="131"/><text x="41.3144%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="41.0646%" y="261" width="0.1658%" height="15" fill="rgb(215,211,6)" fg:x="124794" fg:w="504"/><text x="41.3575%" y="271.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="41.2304%" y="261" width="0.0211%" height="15" fill="rgb(207,56,2)" fg:x="125298" fg:w="64"/><text x="41.5234%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="41.2515%" y="261" width="1.6410%" height="15" fill="rgb(220,135,9)" fg:x="125362" fg:w="4987"/><text x="41.5444%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="42.8925%" y="261" width="1.6410%" height="15" fill="rgb(214,145,52)" fg:x="130349" fg:w="4987"/><text x="43.1855%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="40.6733%" y="277" width="4.0112%" height="15" fill="rgb(241,83,53)" fg:x="123605" fg:w="12190"/><text x="40.9663%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.6845%" y="261" width="0.0299%" height="15" fill="rgb(222,66,13)" fg:x="135795" fg:w="91"/><text x="44.9775%" y="271.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="44.7145%" y="261" width="0.1132%" height="15" fill="rgb(239,164,54)" fg:x="135886" fg:w="344"/><text x="45.0075%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="44.8277%" y="261" width="0.0299%" height="15" fill="rgb(216,189,13)" fg:x="136230" fg:w="91"/><text x="45.1207%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="44.6845%" y="277" width="0.2790%" height="15" fill="rgb(228,212,51)" fg:x="135795" fg:w="848"/><text x="44.9775%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (128,115 instructions, 42.16%)</title><rect x="2.8733%" y="293" width="42.1574%" height="15" fill="rgb(207,190,21)" fg:x="8732" fg:w="128115"/><text x="3.1663%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_wi..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="45.0307%" y="261" width="0.0790%" height="15" fill="rgb(245,28,35)" fg:x="136847" fg:w="240"/><text x="45.3237%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="45.1097%" y="261" width="0.0724%" height="15" fill="rgb(239,23,40)" fg:x="137087" fg:w="220"/><text x="45.4027%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.1821%" y="261" width="0.1658%" height="15" fill="rgb(242,10,51)" fg:x="137307" fg:w="504"/><text x="45.4751%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="45.0307%" y="277" width="0.3472%" height="15" fill="rgb(207,186,5)" fg:x="136847" fg:w="1055"/><text x="45.3237%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="45.3779%" y="277" width="0.0431%" height="15" fill="rgb(242,21,16)" fg:x="137902" fg:w="131"/><text x="45.6708%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="45.4210%" y="277" width="0.1658%" height="15" fill="rgb(237,0,53)" fg:x="138033" fg:w="504"/><text x="45.7140%" y="287.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="45.5868%" y="277" width="0.0602%" height="15" fill="rgb(215,8,52)" fg:x="138537" fg:w="183"/><text x="45.8798%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="45.6470%" y="277" width="1.6410%" height="15" fill="rgb(248,62,44)" fg:x="138720" fg:w="4987"/><text x="45.9400%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="45.0307%" y="293" width="2.3794%" height="15" fill="rgb(224,83,15)" fg:x="136847" fg:w="7231"/><text x="45.3237%" y="303.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="47.4101%" y="261" width="0.0790%" height="15" fill="rgb(249,100,46)" fg:x="144078" fg:w="240"/><text x="47.7031%" y="271.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="47.4891%" y="261" width="0.0734%" height="15" fill="rgb(213,35,48)" fg:x="144318" fg:w="223"/><text x="47.7821%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.5625%" y="261" width="0.1658%" height="15" fill="rgb(251,2,13)" fg:x="144541" fg:w="504"/><text x="47.8555%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="47.4101%" y="277" width="0.3481%" height="15" fill="rgb(212,132,21)" fg:x="144078" fg:w="1058"/><text x="47.7031%" y="287.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="47.7583%" y="277" width="0.0431%" height="15" fill="rgb(247,17,21)" fg:x="145136" fg:w="131"/><text x="48.0513%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="47.8014%" y="277" width="0.1658%" height="15" fill="rgb(220,177,38)" fg:x="145267" fg:w="504"/><text x="48.0944%" y="287.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="47.9672%" y="277" width="0.0211%" height="15" fill="rgb(233,219,21)" fg:x="145771" fg:w="64"/><text x="48.2602%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="47.9883%" y="277" width="1.6410%" height="15" fill="rgb(246,17,7)" fg:x="145835" fg:w="4987"/><text x="48.2813%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="49.6293%" y="277" width="1.6410%" height="15" fill="rgb(212,4,22)" fg:x="150822" fg:w="4987"/><text x="49.9223%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="47.4101%" y="293" width="4.0112%" height="15" fill="rgb(243,85,21)" fg:x="144078" fg:w="12190"/><text x="47.7031%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.4214%" y="277" width="0.0299%" height="15" fill="rgb(232,218,2)" fg:x="156268" fg:w="91"/><text x="51.7143%" y="287.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="51.4513%" y="277" width="0.1132%" height="15" fill="rgb(253,168,47)" fg:x="156359" fg:w="344"/><text x="51.7443%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="51.5645%" y="277" width="0.0299%" height="15" fill="rgb(238,101,25)" fg:x="156703" fg:w="91"/><text x="51.8575%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="51.4214%" y="293" width="0.2790%" height="15" fill="rgb(251,86,12)" fg:x="156268" fg:w="848"/><text x="51.7143%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (148,607 instructions, 48.90%)</title><rect x="2.8671%" y="309" width="48.9004%" height="15" fill="rgb(241,112,44)" fg:x="8713" fg:w="148607"/><text x="3.1601%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go:..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="51.7675%" y="277" width="0.0790%" height="15" fill="rgb(224,28,25)" fg:x="157320" fg:w="240"/><text x="52.0605%" y="287.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="51.8465%" y="277" width="0.0724%" height="15" fill="rgb(209,201,1)" fg:x="157560" fg:w="220"/><text x="52.1395%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="51.9189%" y="277" width="0.1658%" height="15" fill="rgb(231,30,22)" fg:x="157780" fg:w="504"/><text x="52.2119%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="51.7675%" y="293" width="0.3472%" height="15" fill="rgb(247,96,31)" fg:x="157320" fg:w="1055"/><text x="52.0605%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="52.1147%" y="293" width="0.0431%" height="15" fill="rgb(251,100,12)" fg:x="158375" fg:w="131"/><text x="52.4077%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="52.1578%" y="293" width="0.1658%" height="15" fill="rgb(224,174,7)" fg:x="158506" fg:w="504"/><text x="52.4508%" y="303.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="52.3236%" y="293" width="0.0602%" height="15" fill="rgb(231,168,19)" fg:x="159010" fg:w="183"/><text x="52.6166%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="52.3839%" y="293" width="1.6410%" height="15" fill="rgb(226,85,5)" fg:x="159193" fg:w="4987"/><text x="52.6768%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="51.7675%" y="309" width="2.3794%" height="15" fill="rgb(210,215,5)" fg:x="157320" fg:w="7231"/><text x="52.0605%" y="319.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="54.1470%" y="277" width="0.0790%" height="15" fill="rgb(233,70,8)" fg:x="164551" fg:w="240"/><text x="54.4399%" y="287.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="54.2259%" y="277" width="0.0734%" height="15" fill="rgb(229,109,53)" fg:x="164791" fg:w="223"/><text x="54.5189%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.2993%" y="277" width="0.1658%" height="15" fill="rgb(213,125,35)" fg:x="165014" fg:w="504"/><text x="54.5923%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="54.1470%" y="293" width="0.3481%" height="15" fill="rgb(215,12,48)" fg:x="164551" fg:w="1058"/><text x="54.4399%" y="303.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="54.4951%" y="293" width="0.0431%" height="15" fill="rgb(207,12,38)" fg:x="165609" fg:w="131"/><text x="54.7881%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="54.5382%" y="293" width="0.1658%" height="15" fill="rgb(216,229,2)" fg:x="165740" fg:w="504"/><text x="54.8312%" y="303.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="54.7041%" y="293" width="0.0211%" height="15" fill="rgb(229,209,31)" fg:x="166244" fg:w="64"/><text x="54.9970%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="54.7251%" y="293" width="1.6410%" height="15" fill="rgb(239,57,22)" fg:x="166308" fg:w="4987"/><text x="55.0181%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="56.3661%" y="293" width="1.6410%" height="15" fill="rgb(239,119,54)" fg:x="171295" fg:w="4987"/><text x="56.6591%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="54.1470%" y="309" width="4.0112%" height="15" fill="rgb(231,80,45)" fg:x="164551" fg:w="12190"/><text x="54.4399%" y="319.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="58.1582%" y="261" width="0.0790%" height="15" fill="rgb(219,138,19)" fg:x="176741" fg:w="240"/><text x="58.4512%" y="271.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="58.2372%" y="261" width="0.0724%" height="15" fill="rgb(216,53,26)" fg:x="176981" fg:w="220"/><text x="58.5301%" y="271.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="58.3096%" y="261" width="0.1658%" height="15" fill="rgb(224,30,16)" fg:x="177201" fg:w="504"/><text x="58.6025%" y="271.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="58.1582%" y="277" width="0.3472%" height="15" fill="rgb(224,151,24)" fg:x="176741" fg:w="1055"/><text x="58.4512%" y="287.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="58.5053%" y="277" width="0.0852%" height="15" fill="rgb(236,75,7)" fg:x="177796" fg:w="259"/><text x="58.7983%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="58.5906%" y="277" width="1.6410%" height="15" fill="rgb(248,106,42)" fg:x="178055" fg:w="4987"/><text x="58.8835%" y="287.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="60.2316%" y="277" width="0.0461%" height="15" fill="rgb(222,217,11)" fg:x="183042" fg:w="140"/><text x="60.5246%" y="287.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="60.2777%" y="277" width="0.1658%" height="15" fill="rgb(234,143,31)" fg:x="183182" fg:w="504"/><text x="60.5706%" y="287.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="60.4435%" y="277" width="0.0638%" height="15" fill="rgb(237,148,28)" fg:x="183686" fg:w="194"/><text x="60.7365%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="60.5073%" y="277" width="1.6410%" height="15" fill="rgb(241,151,6)" fg:x="183880" fg:w="4987"/><text x="60.8003%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.14%)</title><rect x="58.1582%" y="293" width="4.1399%" height="15" fill="rgb(226,55,18)" fg:x="176741" fg:w="12581"/><text x="58.4512%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="62.2981%" y="293" width="0.0299%" height="15" fill="rgb(226,196,6)" fg:x="189322" fg:w="91"/><text x="62.5911%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.26%)</title><rect x="58.1582%" y="309" width="4.2646%" height="15" fill="rgb(251,228,11)" fg:x="176741" fg:w="12960"/><text x="58.4512%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (181,212 instructions, 59.63%)</title><rect x="2.8608%" y="325" width="59.6294%" height="15" fill="rgb(219,197,15)" fg:x="8694" fg:w="181212"/><text x="3.1538%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="62.4903%" y="293" width="0.0790%" height="15" fill="rgb(243,105,44)" fg:x="189906" fg:w="240"/><text x="62.7832%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="62.5692%" y="293" width="0.0724%" height="15" fill="rgb(205,183,40)" fg:x="190146" fg:w="220"/><text x="62.8622%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.6416%" y="293" width="0.1658%" height="15" fill="rgb(232,138,46)" fg:x="190366" fg:w="504"/><text x="62.9346%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="62.4903%" y="309" width="0.3472%" height="15" fill="rgb(234,161,14)" fg:x="189906" fg:w="1055"/><text x="62.7832%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="62.8374%" y="309" width="0.0431%" height="15" fill="rgb(238,211,18)" fg:x="190961" fg:w="131"/><text x="63.1304%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="62.8805%" y="309" width="0.1658%" height="15" fill="rgb(217,130,2)" fg:x="191092" fg:w="504"/><text x="63.1735%" y="319.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="63.0464%" y="309" width="0.0602%" height="15" fill="rgb(251,17,29)" fg:x="191596" fg:w="183"/><text x="63.3393%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="63.1066%" y="309" width="1.6410%" height="15" fill="rgb(243,18,0)" fg:x="191779" fg:w="4987"/><text x="63.3995%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="62.4903%" y="325" width="2.3794%" height="15" fill="rgb(227,220,45)" fg:x="189906" fg:w="7231"/><text x="62.7832%" y="335.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="64.8697%" y="293" width="0.0790%" height="15" fill="rgb(212,34,2)" fg:x="197137" fg:w="240"/><text x="65.1626%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="64.9487%" y="293" width="0.0734%" height="15" fill="rgb(236,23,8)" fg:x="197377" fg:w="223"/><text x="65.2416%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.0220%" y="293" width="0.1658%" height="15" fill="rgb(210,113,39)" fg:x="197600" fg:w="504"/><text x="65.3150%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="64.8697%" y="309" width="0.3481%" height="15" fill="rgb(243,123,48)" fg:x="197137" fg:w="1058"/><text x="65.1626%" y="319.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="65.2178%" y="309" width="0.0431%" height="15" fill="rgb(223,175,36)" fg:x="198195" fg:w="131"/><text x="65.5108%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="65.2609%" y="309" width="0.1658%" height="15" fill="rgb(226,100,30)" fg:x="198326" fg:w="504"/><text x="65.5539%" y="319.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="65.4268%" y="309" width="0.0211%" height="15" fill="rgb(221,225,39)" fg:x="198830" fg:w="64"/><text x="65.7197%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="65.4478%" y="309" width="1.6410%" height="15" fill="rgb(224,222,42)" fg:x="198894" fg:w="4987"/><text x="65.7408%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="67.0888%" y="309" width="1.6410%" height="15" fill="rgb(221,53,1)" fg:x="203881" fg:w="4987"/><text x="67.3818%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="64.8697%" y="325" width="4.0112%" height="15" fill="rgb(216,187,48)" fg:x="197137" fg:w="12190"/><text x="65.1626%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="68.8809%" y="309" width="0.0299%" height="15" fill="rgb(220,108,2)" fg:x="209327" fg:w="91"/><text x="69.1739%" y="319.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="68.9108%" y="309" width="0.1132%" height="15" fill="rgb(216,13,42)" fg:x="209418" fg:w="344"/><text x="69.2038%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="69.0240%" y="309" width="0.0299%" height="15" fill="rgb(205,14,29)" fg:x="209762" fg:w="91"/><text x="69.3170%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="68.8809%" y="325" width="0.2790%" height="15" fill="rgb(217,168,30)" fg:x="209327" fg:w="848"/><text x="69.1739%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (201,704 instructions, 66.37%)</title><rect x="2.8546%" y="341" width="66.3725%" height="15" fill="rgb(246,173,54)" fg:x="8675" fg:w="201704"/><text x="3.1476%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="69.2271%" y="309" width="0.0790%" height="15" fill="rgb(227,177,11)" fg:x="210379" fg:w="240"/><text x="69.5200%" y="319.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="69.3060%" y="309" width="0.0724%" height="15" fill="rgb(223,215,51)" fg:x="210619" fg:w="220"/><text x="69.5990%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.3784%" y="309" width="0.1658%" height="15" fill="rgb(253,4,17)" fg:x="210839" fg:w="504"/><text x="69.6714%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="69.2271%" y="325" width="0.3472%" height="15" fill="rgb(206,150,43)" fg:x="210379" fg:w="1055"/><text x="69.5200%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="69.5742%" y="325" width="0.0431%" height="15" fill="rgb(241,100,52)" fg:x="211434" fg:w="131"/><text x="69.8672%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="69.6173%" y="325" width="0.1658%" height="15" fill="rgb(234,120,21)" fg:x="211565" fg:w="504"/><text x="69.9103%" y="335.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="69.7832%" y="325" width="0.0602%" height="15" fill="rgb(231,60,11)" fg:x="212069" fg:w="183"/><text x="70.0762%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="69.8434%" y="325" width="1.6410%" height="15" fill="rgb(247,77,50)" fg:x="212252" fg:w="4987"/><text x="70.1364%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="69.2271%" y="341" width="2.3794%" height="15" fill="rgb(251,199,54)" fg:x="210379" fg:w="7231"/><text x="69.5200%" y="351.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="71.6065%" y="309" width="0.0790%" height="15" fill="rgb(212,120,38)" fg:x="217610" fg:w="240"/><text x="71.8995%" y="319.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="71.6855%" y="309" width="0.0734%" height="15" fill="rgb(250,161,37)" fg:x="217850" fg:w="223"/><text x="71.9784%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.7589%" y="309" width="0.1658%" height="15" fill="rgb(232,158,45)" fg:x="218073" fg:w="504"/><text x="72.0518%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="71.6065%" y="325" width="0.3481%" height="15" fill="rgb(233,114,2)" fg:x="217610" fg:w="1058"/><text x="71.8995%" y="335.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="71.9546%" y="325" width="0.0431%" height="15" fill="rgb(248,139,0)" fg:x="218668" fg:w="131"/><text x="72.2476%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="71.9977%" y="325" width="0.1658%" height="15" fill="rgb(222,164,18)" fg:x="218799" fg:w="504"/><text x="72.2907%" y="335.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="72.1636%" y="325" width="0.0211%" height="15" fill="rgb(221,140,42)" fg:x="219303" fg:w="64"/><text x="72.4566%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="72.1847%" y="325" width="1.6410%" height="15" fill="rgb(209,186,11)" fg:x="219367" fg:w="4987"/><text x="72.4776%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="73.8257%" y="325" width="1.6410%" height="15" fill="rgb(254,212,38)" fg:x="224354" fg:w="4987"/><text x="74.1186%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="71.6065%" y="341" width="4.0112%" height="15" fill="rgb(219,156,31)" fg:x="217610" fg:w="12190"/><text x="71.8995%" y="351.50">ic_..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="75.6177%" y="293" width="0.0790%" height="15" fill="rgb(222,148,42)" fg:x="229800" fg:w="240"/><text x="75.9107%" y="303.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="75.6967%" y="293" width="0.0724%" height="15" fill="rgb(225,65,5)" fg:x="230040" fg:w="220"/><text x="75.9897%" y="303.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="75.7691%" y="293" width="0.1658%" height="15" fill="rgb(235,28,12)" fg:x="230260" fg:w="504"/><text x="76.0621%" y="303.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="75.6177%" y="309" width="0.3472%" height="15" fill="rgb(245,58,4)" fg:x="229800" fg:w="1055"/><text x="75.9107%" y="319.50"></text></g><g><title>memcpy (259 instructions, 0.09%)</title><rect x="75.9649%" y="309" width="0.0852%" height="15" fill="rgb(235,118,5)" fg:x="230855" fg:w="259"/><text x="76.2579%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="76.0501%" y="309" width="1.6410%" height="15" fill="rgb(253,196,3)" fg:x="231114" fg:w="4987"/><text x="76.3431%" y="319.50"></text></g><g><title>memcpy (140 instructions, 0.05%)</title><rect x="77.6911%" y="309" width="0.0461%" height="15" fill="rgb(238,90,28)" fg:x="236101" fg:w="140"/><text x="77.9841%" y="319.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="77.7372%" y="309" width="0.1658%" height="15" fill="rgb(254,227,4)" fg:x="236241" fg:w="504"/><text x="78.0302%" y="319.50"></text></g><g><title>memset (194 instructions, 0.06%)</title><rect x="77.9030%" y="309" width="0.0638%" height="15" fill="rgb(237,114,35)" fg:x="236745" fg:w="194"/><text x="78.1960%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="77.9669%" y="309" width="1.6410%" height="15" fill="rgb(221,147,29)" fg:x="236939" fg:w="4987"/><text x="78.2598%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,581 instructions, 4.14%)</title><rect x="75.6177%" y="325" width="4.1399%" height="15" fill="rgb(216,201,17)" fg:x="229800" fg:w="12581"/><text x="75.9107%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="79.7576%" y="325" width="0.0299%" height="15" fill="rgb(251,46,50)" fg:x="242381" fg:w="91"/><text x="80.0506%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (12,960 instructions, 4.26%)</title><rect x="75.6177%" y="341" width="4.2646%" height="15" fill="rgb(216,143,48)" fg:x="229800" fg:w="12960"/><text x="75.9107%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (234,309 instructions, 77.10%)</title><rect x="2.8483%" y="357" width="77.1015%" height="15" fill="rgb(224,62,51)" fg:x="8656" fg:w="234309"/><text x="3.1413%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="79.9498%" y="325" width="0.0790%" height="15" fill="rgb(232,152,20)" fg:x="242965" fg:w="240"/><text x="80.2428%" y="335.50"></text></g><g><title>memcpy (220 instructions, 0.07%)</title><rect x="80.0288%" y="325" width="0.0724%" height="15" fill="rgb(233,194,7)" fg:x="243205" fg:w="220"/><text x="80.3217%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.1012%" y="325" width="0.1658%" height="15" fill="rgb(207,33,22)" fg:x="243425" fg:w="504"/><text x="80.3941%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,055 instructions, 0.35%)</title><rect x="79.9498%" y="341" width="0.3472%" height="15" fill="rgb(226,54,34)" fg:x="242965" fg:w="1055"/><text x="80.2428%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="80.2969%" y="341" width="0.0431%" height="15" fill="rgb(227,161,47)" fg:x="244020" fg:w="131"/><text x="80.5899%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="80.3400%" y="341" width="0.1658%" height="15" fill="rgb(218,58,37)" fg:x="244151" fg:w="504"/><text x="80.6330%" y="351.50"></text></g><g><title>memset (183 instructions, 0.06%)</title><rect x="80.5059%" y="341" width="0.0602%" height="15" fill="rgb(208,173,18)" fg:x="244655" fg:w="183"/><text x="80.7989%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="80.5661%" y="341" width="1.6410%" height="15" fill="rgb(230,159,11)" fg:x="244838" fg:w="4987"/><text x="80.8591%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (7,231 instructions, 2.38%)</title><rect x="79.9498%" y="357" width="2.3794%" height="15" fill="rgb(238,90,51)" fg:x="242965" fg:w="7231"/><text x="80.2428%" y="367.50">&lt;..</text></g><g><title>memset (240 instructions, 0.08%)</title><rect x="82.3292%" y="325" width="0.0790%" height="15" fill="rgb(225,97,36)" fg:x="250196" fg:w="240"/><text x="82.6222%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.07%)</title><rect x="82.4082%" y="325" width="0.0734%" height="15" fill="rgb(211,205,42)" fg:x="250436" fg:w="223"/><text x="82.7012%" y="335.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.4816%" y="325" width="0.1658%" height="15" fill="rgb(219,152,7)" fg:x="250659" fg:w="504"/><text x="82.7745%" y="335.50"></text></g><g><title>ic_certified_map::hashtree::domain_sep (1,058 instructions, 0.35%)</title><rect x="82.3292%" y="341" width="0.3481%" height="15" fill="rgb(222,79,10)" fg:x="250196" fg:w="1058"/><text x="82.6222%" y="351.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="82.6774%" y="341" width="0.0431%" height="15" fill="rgb(242,13,11)" fg:x="251254" fg:w="131"/><text x="82.9703%" y="351.50"></text></g><g><title>memcpy (504 instructions, 0.17%)</title><rect x="82.7205%" y="341" width="0.1658%" height="15" fill="rgb(231,143,41)" fg:x="251385" fg:w="504"/><text x="83.0134%" y="351.50"></text></g><g><title>memset (64 instructions, 0.02%)</title><rect x="82.8863%" y="341" width="0.0211%" height="15" fill="rgb(222,147,19)" fg:x="251889" fg:w="64"/><text x="83.1793%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="82.9074%" y="341" width="1.6410%" height="15" fill="rgb(235,5,39)" fg:x="251953" fg:w="4987"/><text x="83.2003%" y="351.50"></text></g><g><title>sha2::sha256::compress256 (4,987 instructions, 1.64%)</title><rect x="84.5484%" y="341" width="1.6410%" height="15" fill="rgb(246,155,51)" fg:x="256940" fg:w="4987"/><text x="84.8414%" y="351.50"></text></g><g><title>ic_certified_map::hashtree::labeled_hash (12,190 instructions, 4.01%)</title><rect x="82.3292%" y="357" width="4.0112%" height="15" fill="rgb(218,157,4)" fg:x="250196" fg:w="12190"/><text x="82.6222%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.3404%" y="341" width="0.0299%" height="15" fill="rgb(226,184,4)" fg:x="262386" fg:w="91"/><text x="86.6334%" y="351.50"></text></g><g><title>memcpy (344 instructions, 0.11%)</title><rect x="86.3704%" y="341" width="0.1132%" height="15" fill="rgb(210,103,26)" fg:x="262477" fg:w="344"/><text x="86.6634%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.4836%" y="341" width="0.0299%" height="15" fill="rgb(228,23,31)" fg:x="262821" fg:w="91"/><text x="86.7765%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (848 instructions, 0.28%)</title><rect x="86.3404%" y="357" width="0.2790%" height="15" fill="rgb(205,176,34)" fg:x="262386" fg:w="848"/><text x="86.6334%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (254,801 instructions, 83.84%)</title><rect x="2.8421%" y="373" width="83.8445%" height="15" fill="rgb(246,213,37)" fg:x="8637" fg:w="254801"/><text x="3.1351%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (91 instructions, 0.03%)</title><rect x="86.6866%" y="277" width="0.0299%" height="15" fill="rgb(213,52,45)" fg:x="263438" fg:w="91"/><text x="86.9796%" y="287.50"></text></g><g><title>memcpy (211 instructions, 0.07%)</title><rect x="86.7166%" y="277" width="0.0694%" height="15" fill="rgb(249,9,52)" fg:x="263529" fg:w="211"/><text x="87.0095%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="86.7860%" y="277" width="0.0293%" height="15" fill="rgb(205,97,16)" fg:x="263740" fg:w="89"/><text x="87.0790%" y="287.50"></text></g><g><title>__rust_realloc (498 instructions, 0.16%)</title><rect x="86.6866%" y="293" width="0.1639%" height="15" fill="rgb(214,11,46)" fg:x="263438" fg:w="498"/><text x="86.9796%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (543 instructions, 0.18%)</title><rect x="86.6866%" y="309" width="0.1787%" height="15" fill="rgb(221,66,18)" fg:x="263438" fg:w="543"/><text x="86.9796%" y="319.50"></text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="86.8939%" y="293" width="0.0286%" height="15" fill="rgb(213,49,1)" fg:x="264068" fg:w="87"/><text x="87.1869%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="86.8939%" y="309" width="0.0434%" height="15" fill="rgb(232,75,51)" fg:x="264068" fg:w="132"/><text x="87.1869%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (849 instructions, 0.28%)</title><rect x="86.6866%" y="325" width="0.2794%" height="15" fill="rgb(208,218,40)" fg:x="263438" fg:w="849"/><text x="86.9796%" y="335.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="86.9660%" y="325" width="0.0790%" height="15" fill="rgb(206,144,50)" fg:x="264287" fg:w="240"/><text x="87.2589%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,186 instructions, 0.39%)</title><rect x="86.6866%" y="341" width="0.3903%" height="15" fill="rgb(216,9,51)" fg:x="263438" fg:w="1186"/><text x="86.9796%" y="351.50"></text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="87.1062%" y="309" width="0.0286%" height="15" fill="rgb(226,6,53)" fg:x="264713" fg:w="87"/><text x="87.3991%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="87.1062%" y="325" width="0.0434%" height="15" fill="rgb(216,9,50)" fg:x="264713" fg:w="132"/><text x="87.3991%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.1062%" y="341" width="0.0721%" height="15" fill="rgb(214,101,31)" fg:x="264713" fg:w="219"/><text x="87.3991%" y="351.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.1782%" y="309" width="0.1027%" height="15" fill="rgb(247,85,17)" fg:x="264932" fg:w="312"/><text x="87.4712%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.1782%" y="325" width="0.1280%" height="15" fill="rgb(248,138,25)" fg:x="264932" fg:w="389"/><text x="87.4712%" y="335.50"></text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="87.3355%" y="277" width="0.0286%" height="15" fill="rgb(225,146,20)" fg:x="265410" fg:w="87"/><text x="87.6285%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="87.3355%" y="293" width="0.0434%" height="15" fill="rgb(224,184,17)" fg:x="265410" fg:w="132"/><text x="87.6285%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.3355%" y="309" width="0.0721%" height="15" fill="rgb(231,10,20)" fg:x="265410" fg:w="219"/><text x="87.6285%" y="319.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.4076%" y="277" width="0.1027%" height="15" fill="rgb(210,93,37)" fg:x="265629" fg:w="312"/><text x="87.7005%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.4076%" y="293" width="0.1280%" height="15" fill="rgb(226,84,42)" fg:x="265629" fg:w="389"/><text x="87.7005%" y="303.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.5649%" y="261" width="0.0790%" height="15" fill="rgb(253,192,7)" fg:x="266107" fg:w="240"/><text x="87.8578%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="87.5649%" y="277" width="0.1043%" height="15" fill="rgb(214,107,27)" fg:x="266107" fg:w="317"/><text x="87.8578%" y="287.50"></text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="87.6985%" y="197" width="0.0286%" height="15" fill="rgb(238,146,21)" fg:x="266513" fg:w="87"/><text x="87.9914%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="87.6985%" y="213" width="0.0434%" height="15" fill="rgb(209,136,30)" fg:x="266513" fg:w="132"/><text x="87.9914%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="87.6985%" y="229" width="0.0721%" height="15" fill="rgb(226,60,22)" fg:x="266513" fg:w="219"/><text x="87.9914%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="87.7705%" y="229" width="0.0790%" height="15" fill="rgb(243,92,26)" fg:x="266732" fg:w="240"/><text x="88.0635%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (545 instructions, 0.18%)</title><rect x="87.6985%" y="245" width="0.1793%" height="15" fill="rgb(211,85,33)" fg:x="266513" fg:w="545"/><text x="87.9914%" y="255.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="87.9071%" y="213" width="0.1027%" height="15" fill="rgb(243,187,44)" fg:x="267147" fg:w="312"/><text x="88.2001%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="87.9071%" y="229" width="0.1280%" height="15" fill="rgb(251,172,23)" fg:x="267147" fg:w="389"/><text x="88.2001%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.0644%" y="197" width="0.0790%" height="15" fill="rgb(254,162,50)" fg:x="267625" fg:w="240"/><text x="88.3573%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.0644%" y="213" width="0.1043%" height="15" fill="rgb(239,14,53)" fg:x="267625" fg:w="317"/><text x="88.3573%" y="223.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.1980%" y="181" width="0.1027%" height="15" fill="rgb(242,208,8)" fg:x="268031" fg:w="312"/><text x="88.4909%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.1980%" y="197" width="0.1280%" height="15" fill="rgb(225,61,41)" fg:x="268031" fg:w="389"/><text x="88.4909%" y="207.50"></text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="88.3553%" y="117" width="0.0286%" height="15" fill="rgb(219,154,6)" fg:x="268509" fg:w="87"/><text x="88.6482%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="88.3553%" y="133" width="0.0434%" height="15" fill="rgb(227,223,44)" fg:x="268509" fg:w="132"/><text x="88.6482%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="88.3553%" y="149" width="0.0721%" height="15" fill="rgb(220,188,6)" fg:x="268509" fg:w="219"/><text x="88.6482%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.4273%" y="149" width="0.1027%" height="15" fill="rgb(216,65,22)" fg:x="268728" fg:w="312"/><text x="88.7203%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (619 instructions, 0.20%)</title><rect x="88.3553%" y="165" width="0.2037%" height="15" fill="rgb(236,66,46)" fg:x="268509" fg:w="619"/><text x="88.6482%" y="175.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.5882%" y="133" width="0.0790%" height="15" fill="rgb(211,150,52)" fg:x="269217" fg:w="240"/><text x="88.8812%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.5882%" y="149" width="0.1043%" height="15" fill="rgb(253,89,19)" fg:x="269217" fg:w="317"/><text x="88.8812%" y="159.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="88.7218%" y="117" width="0.1027%" height="15" fill="rgb(245,4,1)" fg:x="269623" fg:w="312"/><text x="89.0148%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (389 instructions, 0.13%)</title><rect x="88.7218%" y="133" width="0.1280%" height="15" fill="rgb(230,109,16)" fg:x="269623" fg:w="389"/><text x="89.0148%" y="143.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="88.8791%" y="101" width="0.0790%" height="15" fill="rgb(213,7,47)" fg:x="270101" fg:w="240"/><text x="89.1721%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="88.8791%" y="117" width="0.1043%" height="15" fill="rgb(242,148,14)" fg:x="270101" fg:w="317"/><text x="89.1721%" y="127.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.0127%" y="69" width="0.0790%" height="15" fill="rgb(238,51,34)" fg:x="270507" fg:w="240"/><text x="89.3057%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.0127%" y="85" width="0.1043%" height="15" fill="rgb(222,49,22)" fg:x="270507" fg:w="317"/><text x="89.3057%" y="95.50"></text></g><g><title>memcpy (131 instructions, 0.04%)</title><rect x="89.1463%" y="53" width="0.0431%" height="15" fill="rgb(237,102,50)" fg:x="270913" fg:w="131"/><text x="89.4393%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (202 instructions, 0.07%)</title><rect x="89.1463%" y="69" width="0.0665%" height="15" fill="rgb(237,195,8)" fg:x="270913" fg:w="202"/><text x="89.4393%" y="79.50"></text></g><g><title>memcpy (35 instructions, 0.01%)</title><rect x="89.2128%" y="37" width="0.0115%" height="15" fill="rgb(245,60,18)" fg:x="271115" fg:w="35"/><text x="89.5058%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (106 instructions, 0.03%)</title><rect x="89.2128%" y="53" width="0.0349%" height="15" fill="rgb(253,74,32)" fg:x="271115" fg:w="106"/><text x="89.5058%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (204 instructions, 0.07%)</title><rect x="89.2128%" y="69" width="0.0671%" height="15" fill="rgb(240,91,39)" fg:x="271115" fg:w="204"/><text x="89.5058%" y="79.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.3158%" y="53" width="0.0790%" height="15" fill="rgb(221,162,34)" fg:x="271428" fg:w="240"/><text x="89.6088%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.3158%" y="69" width="0.1043%" height="15" fill="rgb(223,32,2)" fg:x="271428" fg:w="317"/><text x="89.6088%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (921 instructions, 0.30%)</title><rect x="89.1463%" y="85" width="0.3031%" height="15" fill="rgb(245,220,46)" fg:x="270913" fg:w="921"/><text x="89.4393%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,433 instructions, 0.47%)</title><rect x="89.0127%" y="101" width="0.4715%" height="15" fill="rgb(216,38,33)" fg:x="270507" fg:w="1433"/><text x="89.3057%" y="111.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.5191%" y="85" width="0.0790%" height="15" fill="rgb(210,123,14)" fg:x="272046" fg:w="240"/><text x="89.8121%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.5191%" y="101" width="0.1043%" height="15" fill="rgb(214,38,47)" fg:x="272046" fg:w="317"/><text x="89.8121%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,945 instructions, 0.64%)</title><rect x="89.0127%" y="117" width="0.6400%" height="15" fill="rgb(244,180,16)" fg:x="270507" fg:w="1945"/><text x="89.3057%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,457 instructions, 0.81%)</title><rect x="88.8791%" y="133" width="0.8085%" height="15" fill="rgb(252,21,32)" fg:x="270101" fg:w="2457"/><text x="89.1721%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,041 instructions, 1.00%)</title><rect x="88.7218%" y="149" width="1.0007%" height="15" fill="rgb(245,218,31)" fg:x="269623" fg:w="3041"/><text x="89.0148%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,553 instructions, 1.17%)</title><rect x="88.5882%" y="165" width="1.1691%" height="15" fill="rgb(247,81,18)" fg:x="269217" fg:w="3553"/><text x="88.8812%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,367 instructions, 1.44%)</title><rect x="88.3553%" y="181" width="1.4370%" height="15" fill="rgb(220,151,1)" fg:x="268509" fg:w="4367"/><text x="88.6482%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="89.8271%" y="165" width="0.0790%" height="15" fill="rgb(211,157,11)" fg:x="272982" fg:w="240"/><text x="90.1201%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="89.8271%" y="181" width="0.1043%" height="15" fill="rgb(239,46,30)" fg:x="272982" fg:w="317"/><text x="90.1201%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,879 instructions, 1.61%)</title><rect x="88.3553%" y="197" width="1.6055%" height="15" fill="rgb(236,144,43)" fg:x="268509" fg:w="4879"/><text x="88.6482%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,463 instructions, 1.80%)</title><rect x="88.1980%" y="213" width="1.7976%" height="15" fill="rgb(206,71,45)" fg:x="268031" fg:w="5463"/><text x="88.4909%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,975 instructions, 1.97%)</title><rect x="88.0644%" y="229" width="1.9661%" height="15" fill="rgb(240,85,31)" fg:x="267625" fg:w="5975"/><text x="88.3573%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,559 instructions, 2.16%)</title><rect x="87.9071%" y="245" width="2.1583%" height="15" fill="rgb(221,43,52)" fg:x="267147" fg:w="6559"/><text x="88.2001%" y="255.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,299 instructions, 2.40%)</title><rect x="87.6985%" y="261" width="2.4018%" height="15" fill="rgb(243,106,22)" fg:x="266513" fg:w="7299"/><text x="87.9914%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (87 instructions, 0.03%)</title><rect x="90.1351%" y="213" width="0.0286%" height="15" fill="rgb(209,138,38)" fg:x="273918" fg:w="87"/><text x="90.4281%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (132 instructions, 0.04%)</title><rect x="90.1351%" y="229" width="0.0434%" height="15" fill="rgb(216,63,40)" fg:x="273918" fg:w="132"/><text x="90.4281%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (219 instructions, 0.07%)</title><rect x="90.1351%" y="245" width="0.0721%" height="15" fill="rgb(206,115,21)" fg:x="273918" fg:w="219"/><text x="90.4281%" y="255.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.2072%" y="245" width="0.0790%" height="15" fill="rgb(235,53,44)" fg:x="274137" fg:w="240"/><text x="90.5002%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (547 instructions, 0.18%)</title><rect x="90.1351%" y="261" width="0.1800%" height="15" fill="rgb(244,160,14)" fg:x="273918" fg:w="547"/><text x="90.4281%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,041 instructions, 2.65%)</title><rect x="87.6985%" y="277" width="2.6460%" height="15" fill="rgb(223,16,19)" fg:x="266513" fg:w="8041"/><text x="87.9914%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,553 instructions, 2.81%)</title><rect x="87.5649%" y="293" width="2.8144%" height="15" fill="rgb(242,63,42)" fg:x="266107" fg:w="8553"/><text x="87.8578%" y="303.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,137 instructions, 3.01%)</title><rect x="87.4076%" y="309" width="3.0066%" height="15" fill="rgb(209,66,49)" fg:x="265629" fg:w="9137"/><text x="87.7005%" y="319.50">&lt;i..</text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="90.4520%" y="293" width="0.0790%" height="15" fill="rgb(207,126,46)" fg:x="274881" fg:w="240"/><text x="90.7450%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (317 instructions, 0.10%)</title><rect x="90.4520%" y="309" width="0.1043%" height="15" fill="rgb(218,160,41)" fg:x="274881" fg:w="317"/><text x="90.7450%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,877 instructions, 3.25%)</title><rect x="87.3355%" y="325" width="3.2501%" height="15" fill="rgb(234,125,46)" fg:x="265410" fg:w="9877"/><text x="87.6285%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,461 instructions, 3.44%)</title><rect x="87.1782%" y="341" width="3.4423%" height="15" fill="rgb(205,66,36)" fg:x="264932" fg:w="10461"/><text x="87.4712%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,070 instructions, 3.97%)</title><rect x="86.6866%" y="357" width="3.9717%" height="15" fill="rgb(220,135,16)" fg:x="263438" fg:w="12070"/><text x="86.9796%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (12,176 instructions, 4.01%)</title><rect x="86.6866%" y="373" width="4.0066%" height="15" fill="rgb(214,217,54)" fg:x="263438" fg:w="12176"/><text x="86.9796%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.7275%" y="69" width="0.0474%" height="15" fill="rgb(206,30,9)" fg:x="275718" fg:w="144"/><text x="91.0204%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (180 instructions, 0.06%)</title><rect x="90.7232%" y="85" width="0.0592%" height="15" fill="rgb(207,196,5)" fg:x="275705" fg:w="180"/><text x="91.0161%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.7847%" y="85" width="0.0474%" height="15" fill="rgb(227,116,12)" fg:x="275892" fg:w="144"/><text x="91.0777%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (369 instructions, 0.12%)</title><rect x="90.7209%" y="101" width="0.1214%" height="15" fill="rgb(235,227,13)" fg:x="275698" fg:w="369"/><text x="91.0138%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (144 instructions, 0.05%)</title><rect x="90.8423%" y="101" width="0.0474%" height="15" fill="rgb(238,212,29)" fg:x="276067" fg:w="144"/><text x="91.1353%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (544 instructions, 0.18%)</title><rect x="90.7209%" y="117" width="0.1790%" height="15" fill="rgb(230,152,17)" fg:x="275698" fg:w="544"/><text x="91.0138%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="90.9111%" y="101" width="0.0224%" height="15" fill="rgb(220,197,1)" fg:x="276276" fg:w="68"/><text x="91.2040%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (191 instructions, 0.06%)</title><rect x="90.9022%" y="117" width="0.0629%" height="15" fill="rgb(229,227,40)" fg:x="276249" fg:w="191"/><text x="91.1951%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (780 instructions, 0.26%)</title><rect x="90.7186%" y="133" width="0.2567%" height="15" fill="rgb(227,179,16)" fg:x="275691" fg:w="780"/><text x="91.0115%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="90.9752%" y="117" width="0.0227%" height="15" fill="rgb(246,116,44)" fg:x="276471" fg:w="69"/><text x="91.2682%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="90.9979%" y="117" width="0.0224%" height="15" fill="rgb(205,191,4)" fg:x="276540" fg:w="68"/><text x="91.2909%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="90.9752%" y="133" width="0.0767%" height="15" fill="rgb(245,69,19)" fg:x="276471" fg:w="233"/><text x="91.2682%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,051 instructions, 0.35%)</title><rect x="90.7163%" y="149" width="0.3458%" height="15" fill="rgb(230,29,26)" fg:x="275684" fg:w="1051"/><text x="91.0092%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.0621%" y="133" width="0.0227%" height="15" fill="rgb(239,192,26)" fg:x="276735" fg:w="69"/><text x="91.3551%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.0848%" y="133" width="0.0224%" height="15" fill="rgb(219,92,16)" fg:x="276804" fg:w="68"/><text x="91.3778%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.0621%" y="149" width="0.0767%" height="15" fill="rgb(246,147,43)" fg:x="276735" fg:w="233"/><text x="91.3551%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,322 instructions, 0.44%)</title><rect x="90.7140%" y="165" width="0.4350%" height="15" fill="rgb(222,147,11)" fg:x="275677" fg:w="1322"/><text x="91.0069%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.1490%" y="149" width="0.0227%" height="15" fill="rgb(243,71,8)" fg:x="276999" fg:w="69"/><text x="91.4419%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.1717%" y="149" width="0.0224%" height="15" fill="rgb(250,36,12)" fg:x="277068" fg:w="68"/><text x="91.4646%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.1490%" y="165" width="0.0767%" height="15" fill="rgb(207,168,14)" fg:x="276999" fg:w="233"/><text x="91.4419%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,593 instructions, 0.52%)</title><rect x="90.7117%" y="181" width="0.5242%" height="15" fill="rgb(254,210,51)" fg:x="275670" fg:w="1593"/><text x="91.0046%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.2358%" y="165" width="0.0227%" height="15" fill="rgb(236,152,38)" fg:x="277263" fg:w="69"/><text x="91.5288%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.2586%" y="165" width="0.0224%" height="15" fill="rgb(240,164,36)" fg:x="277332" fg:w="68"/><text x="91.5515%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.2358%" y="181" width="0.0767%" height="15" fill="rgb(210,171,36)" fg:x="277263" fg:w="233"/><text x="91.5288%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,857 instructions, 0.61%)</title><rect x="90.7117%" y="197" width="0.6111%" height="15" fill="rgb(254,156,34)" fg:x="275670" fg:w="1857"/><text x="91.0046%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.3250%" y="181" width="0.0227%" height="15" fill="rgb(216,204,23)" fg:x="277534" fg:w="69"/><text x="91.6180%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.3477%" y="181" width="0.0224%" height="15" fill="rgb(230,75,38)" fg:x="277603" fg:w="68"/><text x="91.6407%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.3250%" y="197" width="0.0767%" height="15" fill="rgb(248,197,25)" fg:x="277534" fg:w="233"/><text x="91.6180%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,135 instructions, 0.70%)</title><rect x="90.7094%" y="213" width="0.7025%" height="15" fill="rgb(234,121,26)" fg:x="275663" fg:w="2135"/><text x="91.0023%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.4119%" y="197" width="0.0227%" height="15" fill="rgb(220,41,36)" fg:x="277798" fg:w="69"/><text x="91.7049%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.4346%" y="197" width="0.0224%" height="15" fill="rgb(227,33,32)" fg:x="277867" fg:w="68"/><text x="91.7276%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.4119%" y="213" width="0.0767%" height="15" fill="rgb(208,214,54)" fg:x="277798" fg:w="233"/><text x="91.7049%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,406 instructions, 0.79%)</title><rect x="90.7070%" y="229" width="0.7917%" height="15" fill="rgb(205,37,38)" fg:x="275656" fg:w="2406"/><text x="91.0000%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.4988%" y="213" width="0.0227%" height="15" fill="rgb(252,2,0)" fg:x="278062" fg:w="69"/><text x="91.7917%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.5215%" y="213" width="0.0224%" height="15" fill="rgb(212,171,10)" fg:x="278131" fg:w="68"/><text x="91.8144%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.4988%" y="229" width="0.0767%" height="15" fill="rgb(239,35,46)" fg:x="278062" fg:w="233"/><text x="91.7917%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,677 instructions, 0.88%)</title><rect x="90.7047%" y="245" width="0.8809%" height="15" fill="rgb(209,34,42)" fg:x="275649" fg:w="2677"/><text x="90.9977%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.5856%" y="229" width="0.0227%" height="15" fill="rgb(237,9,4)" fg:x="278326" fg:w="69"/><text x="91.8786%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.6083%" y="229" width="0.0224%" height="15" fill="rgb(254,55,38)" fg:x="278395" fg:w="68"/><text x="91.9013%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.5856%" y="245" width="0.0767%" height="15" fill="rgb(222,95,29)" fg:x="278326" fg:w="233"/><text x="91.8786%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,948 instructions, 0.97%)</title><rect x="90.7024%" y="261" width="0.9701%" height="15" fill="rgb(241,218,37)" fg:x="275642" fg:w="2948"/><text x="90.9954%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.6725%" y="245" width="0.0227%" height="15" fill="rgb(225,89,28)" fg:x="278590" fg:w="69"/><text x="91.9655%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.6952%" y="245" width="0.0224%" height="15" fill="rgb(231,17,25)" fg:x="278659" fg:w="68"/><text x="91.9882%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.6725%" y="261" width="0.0767%" height="15" fill="rgb(206,216,48)" fg:x="278590" fg:w="233"/><text x="91.9655%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,212 instructions, 1.06%)</title><rect x="90.7024%" y="277" width="1.0569%" height="15" fill="rgb(247,190,28)" fg:x="275642" fg:w="3212"/><text x="90.9954%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.7617%" y="261" width="0.0227%" height="15" fill="rgb(216,196,12)" fg:x="278861" fg:w="69"/><text x="92.0547%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.7844%" y="261" width="0.0224%" height="15" fill="rgb(232,114,19)" fg:x="278930" fg:w="68"/><text x="92.0774%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.7617%" y="277" width="0.0767%" height="15" fill="rgb(240,60,14)" fg:x="278861" fg:w="233"/><text x="92.0547%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,490 instructions, 1.15%)</title><rect x="90.7001%" y="293" width="1.1484%" height="15" fill="rgb(250,108,9)" fg:x="275635" fg:w="3490"/><text x="90.9931%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.8486%" y="277" width="0.0227%" height="15" fill="rgb(227,228,21)" fg:x="279125" fg:w="69"/><text x="92.1415%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.8713%" y="277" width="0.0224%" height="15" fill="rgb(254,16,52)" fg:x="279194" fg:w="68"/><text x="92.1642%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.8486%" y="293" width="0.0767%" height="15" fill="rgb(222,58,2)" fg:x="279125" fg:w="233"/><text x="92.1415%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,761 instructions, 1.24%)</title><rect x="90.6978%" y="309" width="1.2376%" height="15" fill="rgb(253,68,14)" fg:x="275628" fg:w="3761"/><text x="90.9908%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="91.9354%" y="293" width="0.0227%" height="15" fill="rgb(226,96,17)" fg:x="279389" fg:w="69"/><text x="92.2284%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="91.9581%" y="293" width="0.0224%" height="15" fill="rgb(227,199,2)" fg:x="279458" fg:w="68"/><text x="92.2511%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="91.9354%" y="309" width="0.0767%" height="15" fill="rgb(228,227,48)" fg:x="279389" fg:w="233"/><text x="92.2284%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,025 instructions, 1.32%)</title><rect x="90.6978%" y="325" width="1.3245%" height="15" fill="rgb(249,183,0)" fg:x="275628" fg:w="4025"/><text x="90.9908%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="92.0246%" y="309" width="0.0227%" height="15" fill="rgb(250,89,38)" fg:x="279660" fg:w="69"/><text x="92.3176%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.0473%" y="309" width="0.0224%" height="15" fill="rgb(240,227,8)" fg:x="279729" fg:w="68"/><text x="92.3403%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="92.0246%" y="325" width="0.0767%" height="15" fill="rgb(242,197,35)" fg:x="279660" fg:w="233"/><text x="92.3176%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,303 instructions, 1.42%)</title><rect x="90.6955%" y="341" width="1.4159%" height="15" fill="rgb(224,37,41)" fg:x="275621" fg:w="4303"/><text x="90.9885%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="92.1115%" y="325" width="0.0227%" height="15" fill="rgb(236,127,7)" fg:x="279924" fg:w="69"/><text x="92.4044%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.1342%" y="325" width="0.0224%" height="15" fill="rgb(230,62,52)" fg:x="279993" fg:w="68"/><text x="92.4271%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="92.1115%" y="341" width="0.0767%" height="15" fill="rgb(235,114,23)" fg:x="279924" fg:w="233"/><text x="92.4044%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,574 instructions, 1.51%)</title><rect x="90.6932%" y="357" width="1.5051%" height="15" fill="rgb(211,55,40)" fg:x="275614" fg:w="4574"/><text x="90.9862%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_chunk (69 instructions, 0.02%)</title><rect x="92.1983%" y="341" width="0.0227%" height="15" fill="rgb(228,123,1)" fg:x="280188" fg:w="69"/><text x="92.4913%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (68 instructions, 0.02%)</title><rect x="92.2210%" y="341" width="0.0224%" height="15" fill="rgb(244,208,8)" fg:x="280257" fg:w="68"/><text x="92.5140%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="92.1983%" y="357" width="0.0767%" height="15" fill="rgb(237,118,14)" fg:x="280188" fg:w="233"/><text x="92.4913%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (4,838 instructions, 1.59%)</title><rect x="90.6932%" y="373" width="1.5920%" height="15" fill="rgb(219,170,13)" fg:x="275614" fg:w="4838"/><text x="90.9862%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (173 instructions, 0.06%)</title><rect x="92.2852%" y="373" width="0.0569%" height="15" fill="rgb(212,39,43)" fg:x="280452" fg:w="173"/><text x="92.5782%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (91 instructions, 0.03%)</title><rect x="92.3421%" y="373" width="0.0299%" height="15" fill="rgb(244,191,2)" fg:x="280625" fg:w="91"/><text x="92.6351%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 instructions, 0.01%)</title><rect x="92.3721%" y="341" width="0.0128%" height="15" fill="rgb(219,201,46)" fg:x="280716" fg:w="39"/><text x="92.6651%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.3849%" y="341" width="0.0273%" height="15" fill="rgb(218,82,7)" fg:x="280755" fg:w="83"/><text x="92.6779%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.4145%" y="309" width="0.0194%" height="15" fill="rgb(208,192,8)" fg:x="280845" fg:w="59"/><text x="92.7075%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="92.4339%" y="309" width="0.1241%" height="15" fill="rgb(244,54,32)" fg:x="280904" fg:w="377"/><text x="92.7269%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.5580%" y="309" width="0.0257%" height="15" fill="rgb(240,43,52)" fg:x="281281" fg:w="78"/><text x="92.8510%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.4145%" y="325" width="0.2524%" height="15" fill="rgb(233,134,29)" fg:x="280845" fg:w="767"/><text x="92.7075%" y="335.50"></text></g><g><title>candid::types::internal::env_add (986 instructions, 0.32%)</title><rect x="92.4122%" y="341" width="0.3245%" height="15" fill="rgb(236,128,10)" fg:x="280838" fg:w="986"/><text x="92.7052%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.7367%" y="341" width="0.0273%" height="15" fill="rgb(207,46,54)" fg:x="281824" fg:w="83"/><text x="93.0297%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="92.7640%" y="341" width="0.0273%" height="15" fill="rgb(248,140,35)" fg:x="281907" fg:w="83"/><text x="93.0570%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="92.7936%" y="309" width="0.0194%" height="15" fill="rgb(241,103,35)" fg:x="281997" fg:w="59"/><text x="93.0866%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="92.8130%" y="309" width="0.1241%" height="15" fill="rgb(223,19,48)" fg:x="282056" fg:w="377"/><text x="93.1060%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="92.9371%" y="309" width="0.0257%" height="15" fill="rgb(238,177,46)" fg:x="282433" fg:w="78"/><text x="93.2300%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="92.7936%" y="325" width="0.2524%" height="15" fill="rgb(213,102,15)" fg:x="281997" fg:w="767"/><text x="93.0866%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="93.0460%" y="325" width="0.2221%" height="15" fill="rgb(254,135,52)" fg:x="282764" fg:w="675"/><text x="93.3390%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="93.2681%" y="309" width="0.0293%" height="15" fill="rgb(240,59,6)" fg:x="283439" fg:w="89"/><text x="93.5611%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.04%)</title><rect x="93.2681%" y="325" width="0.0408%" height="15" fill="rgb(207,226,5)" fg:x="283439" fg:w="124"/><text x="93.5611%" y="335.50"></text></g><g><title>candid::types::internal::env_add (1,751 instructions, 0.58%)</title><rect x="92.7913%" y="341" width="0.5762%" height="15" fill="rgb(208,167,17)" fg:x="281990" fg:w="1751"/><text x="93.0843%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.3675%" y="293" width="0.0194%" height="15" fill="rgb(254,94,10)" fg:x="283741" fg:w="59"/><text x="93.6605%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.3869%" y="293" width="0.0540%" height="15" fill="rgb(229,33,11)" fg:x="283800" fg:w="164"/><text x="93.6799%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="93.3675%" y="309" width="0.0948%" height="15" fill="rgb(249,145,48)" fg:x="283741" fg:w="288"/><text x="93.6605%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="93.5356%" y="293" width="0.0194%" height="15" fill="rgb(253,68,54)" fg:x="284252" fg:w="59"/><text x="93.8286%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="93.5551%" y="293" width="0.0540%" height="15" fill="rgb(223,27,42)" fg:x="284311" fg:w="164"/><text x="93.8480%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="93.5356%" y="309" width="0.0948%" height="15" fill="rgb(235,123,13)" fg:x="284252" fg:w="288"/><text x="93.8286%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1,022 instructions, 0.34%)</title><rect x="93.3675%" y="325" width="0.3363%" height="15" fill="rgb(244,154,7)" fg:x="283741" fg:w="1022"/><text x="93.6605%" y="335.50"></text></g><g><title>candid::types::internal::env_id (1,319 instructions, 0.43%)</title><rect x="93.3675%" y="341" width="0.4340%" height="15" fill="rgb(214,30,25)" fg:x="283741" fg:w="1319"/><text x="93.6605%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (4,495 instructions, 1.48%)</title><rect x="92.3721%" y="357" width="1.4791%" height="15" fill="rgb(252,189,13)" fg:x="280716" fg:w="4495"/><text x="92.6651%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.8512%" y="325" width="0.0273%" height="15" fill="rgb(234,27,40)" fg:x="285211" fg:w="83"/><text x="94.1442%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="93.8512%" y="341" width="0.0415%" height="15" fill="rgb(252,199,25)" fg:x="285211" fg:w="126"/><text x="94.1442%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.07%)</title><rect x="93.8512%" y="357" width="0.0694%" height="15" fill="rgb(234,207,20)" fg:x="285211" fg:w="211"/><text x="94.1442%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.9305%" y="309" width="0.0273%" height="15" fill="rgb(244,220,10)" fg:x="285452" fg:w="83"/><text x="94.2235%" y="319.50"></text></g><g><title>candid::types::internal::unroll (171 instructions, 0.06%)</title><rect x="93.9305%" y="325" width="0.0563%" height="15" fill="rgb(247,68,23)" fg:x="285452" fg:w="171"/><text x="94.2235%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="93.9868%" y="325" width="0.0273%" height="15" fill="rgb(254,61,4)" fg:x="285623" fg:w="83"/><text x="94.2797%" y="335.50"></text></g><g><title>candid::types::internal::unroll (349 instructions, 0.11%)</title><rect x="93.9305%" y="341" width="0.1148%" height="15" fill="rgb(245,208,35)" fg:x="285452" fg:w="349"/><text x="94.2235%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.0454%" y="293" width="0.0194%" height="15" fill="rgb(235,90,11)" fg:x="285801" fg:w="59"/><text x="94.3383%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="94.0648%" y="293" width="0.0540%" height="15" fill="rgb(239,139,43)" fg:x="285860" fg:w="164"/><text x="94.3577%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="94.0454%" y="309" width="0.0948%" height="15" fill="rgb(209,187,9)" fg:x="285801" fg:w="288"/><text x="94.3383%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 0.17%)</title><rect x="94.0454%" y="325" width="0.1681%" height="15" fill="rgb(241,30,6)" fg:x="285801" fg:w="511"/><text x="94.3383%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.2135%" y="325" width="0.0273%" height="15" fill="rgb(216,104,1)" fg:x="286312" fg:w="83"/><text x="94.5065%" y="335.50"></text></g><g><title>memset (152 instructions, 0.05%)</title><rect x="94.2408%" y="325" width="0.0500%" height="15" fill="rgb(238,55,39)" fg:x="286395" fg:w="152"/><text x="94.5338%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1,066 instructions, 0.35%)</title><rect x="94.0454%" y="341" width="0.3508%" height="15" fill="rgb(226,151,41)" fg:x="285801" fg:w="1066"/><text x="94.3383%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.3961%" y="309" width="0.0273%" height="15" fill="rgb(228,73,40)" fg:x="286867" fg:w="83"/><text x="94.6891%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.3961%" y="325" width="0.0415%" height="15" fill="rgb(215,81,0)" fg:x="286867" fg:w="126"/><text x="94.6891%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (211 instructions, 0.07%)</title><rect x="94.3961%" y="341" width="0.0694%" height="15" fill="rgb(209,52,39)" fg:x="286867" fg:w="211"/><text x="94.6891%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="94.4656%" y="293" width="0.0194%" height="15" fill="rgb(221,127,5)" fg:x="287078" fg:w="59"/><text x="94.7585%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (93 instructions, 0.03%)</title><rect x="94.4656%" y="309" width="0.0306%" height="15" fill="rgb(213,215,6)" fg:x="287078" fg:w="93"/><text x="94.7585%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (316 instructions, 0.10%)</title><rect x="94.4656%" y="325" width="0.1040%" height="15" fill="rgb(214,118,13)" fg:x="287078" fg:w="316"/><text x="94.7585%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (489 instructions, 0.16%)</title><rect x="94.4656%" y="341" width="0.1609%" height="15" fill="rgb(207,205,41)" fg:x="287078" fg:w="489"/><text x="94.7585%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.6265%" y="293" width="0.0273%" height="15" fill="rgb(218,208,45)" fg:x="287567" fg:w="83"/><text x="94.9194%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.6265%" y="309" width="0.0415%" height="15" fill="rgb(244,81,54)" fg:x="287567" fg:w="126"/><text x="94.9194%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.07%)</title><rect x="94.6265%" y="325" width="0.0684%" height="15" fill="rgb(244,175,1)" fg:x="287567" fg:w="208"/><text x="94.9194%" y="335.50"></text></g><g><title>leb128::write::signed (267 instructions, 0.09%)</title><rect x="94.6265%" y="341" width="0.0879%" height="15" fill="rgb(232,128,28)" fg:x="287567" fg:w="267"/><text x="94.9194%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (62 instructions, 0.02%)</title><rect x="94.7143%" y="341" width="0.0204%" height="15" fill="rgb(234,83,13)" fg:x="287834" fg:w="62"/><text x="95.0073%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (89 instructions, 0.03%)</title><rect x="94.7347%" y="309" width="0.0293%" height="15" fill="rgb(233,222,35)" fg:x="287896" fg:w="89"/><text x="95.0277%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 instructions, 0.04%)</title><rect x="94.7347%" y="325" width="0.0408%" height="15" fill="rgb(244,204,21)" fg:x="287896" fg:w="124"/><text x="95.0277%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (83 instructions, 0.03%)</title><rect x="94.7755%" y="325" width="0.0273%" height="15" fill="rgb(225,121,40)" fg:x="288020" fg:w="83"/><text x="95.0685%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (252 instructions, 0.08%)</title><rect x="94.7347%" y="341" width="0.0829%" height="15" fill="rgb(231,89,18)" fg:x="287896" fg:w="252"/><text x="95.0277%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,994 instructions, 0.99%)</title><rect x="93.9206%" y="357" width="0.9852%" height="15" fill="rgb(205,41,50)" fg:x="285422" fg:w="2994"/><text x="94.2136%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="94.9101%" y="325" width="0.0273%" height="15" fill="rgb(254,25,22)" fg:x="288429" fg:w="83"/><text x="95.2031%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="94.9101%" y="341" width="0.0415%" height="15" fill="rgb(208,44,21)" fg:x="288429" fg:w="126"/><text x="95.2031%" y="351.50"></text></g><g><title>__rust_realloc (111 instructions, 0.04%)</title><rect x="94.9786%" y="325" width="0.0365%" height="15" fill="rgb(237,59,53)" fg:x="288637" fg:w="111"/><text x="95.2715%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.05%)</title><rect x="94.9786%" y="341" width="0.0513%" height="15" fill="rgb(233,24,36)" fg:x="288637" fg:w="156"/><text x="95.2715%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (451 instructions, 0.15%)</title><rect x="94.9101%" y="357" width="0.1484%" height="15" fill="rgb(216,92,41)" fg:x="288429" fg:w="451"/><text x="95.2031%" y="367.50"></text></g><g><title>memcpy (312 instructions, 0.10%)</title><rect x="95.0585%" y="357" width="0.1027%" height="15" fill="rgb(225,158,49)" fg:x="288880" fg:w="312"/><text x="95.3515%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.2277%" y="309" width="0.0194%" height="15" fill="rgb(244,11,16)" fg:x="289394" fg:w="59"/><text x="95.5206%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (377 instructions, 0.12%)</title><rect x="95.2471%" y="309" width="0.1241%" height="15" fill="rgb(208,215,38)" fg:x="289453" fg:w="377"/><text x="95.5400%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (78 instructions, 0.03%)</title><rect x="95.3711%" y="309" width="0.0257%" height="15" fill="rgb(250,69,53)" fg:x="289830" fg:w="78"/><text x="95.6641%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (767 instructions, 0.25%)</title><rect x="95.2277%" y="325" width="0.2524%" height="15" fill="rgb(240,187,52)" fg:x="289394" fg:w="767"/><text x="95.5206%" y="335.50"></text></g><g><title>memcmp (675 instructions, 0.22%)</title><rect x="95.4800%" y="325" width="0.2221%" height="15" fill="rgb(235,22,25)" fg:x="290161" fg:w="675"/><text x="95.7730%" y="335.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,618 instructions, 0.53%)</title><rect x="95.2254%" y="341" width="0.5324%" height="15" fill="rgb(213,173,22)" fg:x="289387" fg:w="1618"/><text x="95.5183%" y="351.50"></text></g><g><title>candid::types::CandidType::ty (1,662 instructions, 0.55%)</title><rect x="95.2254%" y="357" width="0.5469%" height="15" fill="rgb(218,47,0)" fg:x="289387" fg:w="1662"/><text x="95.5183%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="95.7723%" y="309" width="0.0194%" height="15" fill="rgb(254,157,11)" fg:x="291049" fg:w="59"/><text x="96.0652%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="95.7917%" y="309" width="0.0540%" height="15" fill="rgb(233,154,6)" fg:x="291108" fg:w="164"/><text x="96.0846%" y="319.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="95.7723%" y="325" width="0.0948%" height="15" fill="rgb(233,207,47)" fg:x="291049" fg:w="288"/><text x="96.0652%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 0.17%)</title><rect x="95.7723%" y="341" width="0.1681%" height="15" fill="rgb(249,128,18)" fg:x="291049" fg:w="511"/><text x="96.0652%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (615 instructions, 0.20%)</title><rect x="95.7723%" y="357" width="0.2024%" height="15" fill="rgb(211,27,42)" fg:x="291049" fg:w="615"/><text x="96.0652%" y="367.50"></text></g><g><title>__rust_realloc (111 instructions, 0.04%)</title><rect x="95.9789%" y="325" width="0.0365%" height="15" fill="rgb(240,163,26)" fg:x="291677" fg:w="111"/><text x="96.2719%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.05%)</title><rect x="95.9789%" y="341" width="0.0513%" height="15" fill="rgb(232,118,46)" fg:x="291677" fg:w="156"/><text x="96.2719%" y="351.50"></text></g><g><title>__rust_realloc (111 instructions, 0.04%)</title><rect x="96.0589%" y="325" width="0.0365%" height="15" fill="rgb(238,158,34)" fg:x="291920" fg:w="111"/><text x="96.3518%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 instructions, 0.05%)</title><rect x="96.0589%" y="341" width="0.0513%" height="15" fill="rgb(254,99,45)" fg:x="291920" fg:w="156"/><text x="96.3518%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (486 instructions, 0.16%)</title><rect x="95.9789%" y="357" width="0.1599%" height="15" fill="rgb(247,205,20)" fg:x="291677" fg:w="486"/><text x="96.2719%" y="367.50"></text></g><g><title>memcpy (4,124 instructions, 1.36%)</title><rect x="96.1388%" y="357" width="1.3570%" height="15" fill="rgb(240,20,41)" fg:x="292163" fg:w="4124"/><text x="96.4318%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (15,793 instructions, 5.20%)</title><rect x="92.3721%" y="373" width="5.1968%" height="15" fill="rgb(231,22,43)" fg:x="280716" fg:w="15793"/><text x="92.6651%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (236 instructions, 0.08%)</title><rect x="97.5689%" y="373" width="0.0777%" height="15" fill="rgb(207,86,33)" fg:x="296509" fg:w="236"/><text x="97.8619%" y="383.50"></text></g><g><title>std::io::Write::write_all (518 instructions, 0.17%)</title><rect x="97.6466%" y="357" width="0.1705%" height="15" fill="rgb(231,148,5)" fg:x="296745" fg:w="518"/><text x="97.9395%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (114 instructions, 0.04%)</title><rect x="97.8170%" y="309" width="0.0375%" height="15" fill="rgb(253,77,28)" fg:x="297263" fg:w="114"/><text x="98.1100%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (157 instructions, 0.05%)</title><rect x="97.8170%" y="325" width="0.0517%" height="15" fill="rgb(253,227,9)" fg:x="297263" fg:w="157"/><text x="98.1100%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (239 instructions, 0.08%)</title><rect x="97.8170%" y="341" width="0.0786%" height="15" fill="rgb(235,4,18)" fg:x="297263" fg:w="239"/><text x="98.1100%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="97.8957%" y="341" width="0.0273%" height="15" fill="rgb(205,206,45)" fg:x="297502" fg:w="83"/><text x="98.1886%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9230%" y="341" width="0.0168%" height="15" fill="rgb(252,34,0)" fg:x="297585" fg:w="51"/><text x="98.2159%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="97.9398%" y="341" width="0.0168%" height="15" fill="rgb(213,56,7)" fg:x="297636" fg:w="51"/><text x="98.2327%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="97.9565%" y="341" width="0.0197%" height="15" fill="rgb(227,74,29)" fg:x="297687" fg:w="60"/><text x="98.2495%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="97.9763%" y="293" width="0.0194%" height="15" fill="rgb(221,32,48)" fg:x="297747" fg:w="59"/><text x="98.2693%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="97.9957%" y="293" width="0.0540%" height="15" fill="rgb(230,205,25)" fg:x="297806" fg:w="164"/><text x="98.2887%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="97.9763%" y="309" width="0.0948%" height="15" fill="rgb(215,110,9)" fg:x="297747" fg:w="288"/><text x="98.2693%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 0.17%)</title><rect x="97.9763%" y="325" width="0.1681%" height="15" fill="rgb(245,220,47)" fg:x="297747" fg:w="511"/><text x="98.2693%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (83 instructions, 0.03%)</title><rect x="98.1444%" y="293" width="0.0273%" height="15" fill="rgb(224,117,5)" fg:x="298258" fg:w="83"/><text x="98.4374%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 instructions, 0.04%)</title><rect x="98.1444%" y="309" width="0.0415%" height="15" fill="rgb(242,208,25)" fg:x="298258" fg:w="126"/><text x="98.4374%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (208 instructions, 0.07%)</title><rect x="98.1444%" y="325" width="0.0684%" height="15" fill="rgb(226,12,37)" fg:x="298258" fg:w="208"/><text x="98.4374%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (59 instructions, 0.02%)</title><rect x="98.2751%" y="293" width="0.0194%" height="15" fill="rgb(224,221,22)" fg:x="298655" fg:w="59"/><text x="98.5680%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (164 instructions, 0.05%)</title><rect x="98.2945%" y="293" width="0.0540%" height="15" fill="rgb(239,38,44)" fg:x="298714" fg:w="164"/><text x="98.5875%" y="303.50"></text></g><g><title>&lt;candid::types::internal::TypeInner as core::hash::Hash&gt;::hash (288 instructions, 0.09%)</title><rect x="98.2751%" y="309" width="0.0948%" height="15" fill="rgb(218,25,46)" fg:x="298655" fg:w="288"/><text x="98.5680%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (511 instructions, 0.17%)</title><rect x="98.2751%" y="325" width="0.1681%" height="15" fill="rgb(206,137,51)" fg:x="298655" fg:w="511"/><text x="98.5680%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,599 instructions, 0.53%)</title><rect x="97.9763%" y="341" width="0.5262%" height="15" fill="rgb(233,174,3)" fg:x="297747" fg:w="1599"/><text x="98.2693%" y="351.50"></text></g><g><title>memcpy (51 instructions, 0.02%)</title><rect x="98.5025%" y="341" width="0.0168%" height="15" fill="rgb(207,224,43)" fg:x="299346" fg:w="51"/><text x="98.7954%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (60 instructions, 0.02%)</title><rect x="98.5192%" y="341" width="0.0197%" height="15" fill="rgb(230,46,27)" fg:x="299397" fg:w="60"/><text x="98.8122%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::serialize (2,598 instructions, 0.85%)</title><rect x="97.8170%" y="357" width="0.8549%" height="15" fill="rgb(251,215,32)" fg:x="297263" fg:w="2598"/><text x="98.1100%" y="367.50"></text></g><g><title>std::io::Write::write_all (520 instructions, 0.17%)</title><rect x="98.6719%" y="357" width="0.1711%" height="15" fill="rgb(244,219,19)" fg:x="299861" fg:w="520"/><text x="98.9649%" y="367.50"></text></g><g><title>std::io::Write::write_all (1,250 instructions, 0.41%)</title><rect x="98.8430%" y="357" width="0.4113%" height="15" fill="rgb(242,125,36)" fg:x="300381" fg:w="1250"/><text x="99.1360%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (4,979 instructions, 1.64%)</title><rect x="97.6466%" y="373" width="1.6384%" height="15" fill="rgb(251,211,12)" fg:x="296745" fg:w="4979"/><text x="97.9395%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (231 instructions, 0.08%)</title><rect x="99.2850%" y="373" width="0.0760%" height="15" fill="rgb(209,179,33)" fg:x="301724" fg:w="231"/><text x="99.5779%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (129 instructions, 0.04%)</title><rect x="99.3652%" y="373" width="0.0424%" height="15" fill="rgb(205,161,48)" fg:x="301968" fg:w="129"/><text x="99.6582%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (204 instructions, 0.07%)</title><rect x="99.4186%" y="373" width="0.0671%" height="15" fill="rgb(241,139,8)" fg:x="302130" fg:w="204"/><text x="99.7115%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (98 instructions, 0.03%)</title><rect x="99.4857%" y="373" width="0.0322%" height="15" fill="rgb(246,159,53)" fg:x="302334" fg:w="98"/><text x="99.7786%" y="383.50"></text></g><g><title>certified_map::__canister_method_witness::{{closure}} (303,286 instructions, 99.80%)</title><rect x="0.0721%" y="389" width="99.7989%" height="15" fill="rgb(212,62,27)" fg:x="219" fg:w="303286"/><text x="0.3650%" y="399.50">certified_map::__canister_method_witness::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (233 instructions, 0.08%)</title><rect x="99.8759%" y="389" width="0.0767%" height="15" fill="rgb(216,168,18)" fg:x="303520" fg:w="233"/><text x="100.1689%" y="399.50"></text></g><g><title>all (303,897 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(228,136,50)" fg:x="0" fg:w="303897"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (303,897 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(237,19,45)" fg:x="0" fg:w="303897"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>