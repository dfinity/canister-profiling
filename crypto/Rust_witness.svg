<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1024" height="470" onload="init(evt)" viewBox="0 0 1024 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="470" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Rust.witness()</text><text id="details" fill="rgb(0,0,0)" x="10" y="453.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1014" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1014" y="453.00"> </text><svg id="frames" x="10" width="1004" total_samples="288469"><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="0.0066%" y="389" width="0.0409%" height="15" fill="rgb(220,7,54)" fg:x="19" fg:w="118"/><text x="0.2996%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (71 instructions, 0.02%)</title><rect x="0.0475%" y="389" width="0.0246%" height="15" fill="rgb(238,227,21)" fg:x="137" fg:w="71"/><text x="0.3405%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.0721%" y="357" width="0.0284%" height="15" fill="rgb(237,29,31)" fg:x="208" fg:w="82"/><text x="0.3651%" y="367.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.1005%" y="341" width="0.0239%" height="15" fill="rgb(211,21,50)" fg:x="290" fg:w="69"/><text x="0.3935%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.1245%" y="341" width="0.1407%" height="15" fill="rgb(239,119,2)" fg:x="359" fg:w="406"/><text x="0.4174%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.2652%" y="341" width="0.0284%" height="15" fill="rgb(250,2,39)" fg:x="765" fg:w="82"/><text x="0.5582%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.2936%" y="341" width="0.0187%" height="15" fill="rgb(244,46,53)" fg:x="847" fg:w="54"/><text x="0.5866%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3123%" y="341" width="0.0187%" height="15" fill="rgb(209,21,19)" fg:x="901" fg:w="54"/><text x="0.6053%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3311%" y="341" width="0.0187%" height="15" fill="rgb(236,145,4)" fg:x="955" fg:w="54"/><text x="0.6240%" y="351.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for u8&gt;::read_options (54 instructions, 0.02%)</title><rect x="0.3498%" y="341" width="0.0187%" height="15" fill="rgb(220,133,36)" fg:x="1009" fg:w="54"/><text x="0.6427%" y="351.50"></text></g><g><title>binread::binary_template::write_start_struct (69 instructions, 0.02%)</title><rect x="0.3685%" y="341" width="0.0239%" height="15" fill="rgb(244,18,3)" fg:x="1063" fg:w="69"/><text x="0.6615%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.3924%" y="341" width="0.0225%" height="15" fill="rgb(232,171,48)" fg:x="1132" fg:w="65"/><text x="0.6854%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.4149%" y="341" width="0.1407%" height="15" fill="rgb(223,223,53)" fg:x="1197" fg:w="406"/><text x="0.7079%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="0.5612%" y="325" width="0.0284%" height="15" fill="rgb(246,92,13)" fg:x="1619" fg:w="82"/><text x="0.8542%" y="335.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="0.5897%" y="293" width="0.0208%" height="15" fill="rgb(229,171,10)" fg:x="1701" fg:w="60"/><text x="0.8826%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="0.5897%" y="309" width="0.0295%" height="15" fill="rgb(213,131,26)" fg:x="1701" fg:w="85"/><text x="0.8826%" y="319.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="0.6223%" y="245" width="0.0104%" height="15" fill="rgb(242,87,54)" fg:x="1795" fg:w="30"/><text x="0.9152%" y="255.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="0.6223%" y="261" width="0.0191%" height="15" fill="rgb(237,21,35)" fg:x="1795" fg:w="55"/><text x="0.9152%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="0.6191%" y="277" width="0.0409%" height="15" fill="rgb(253,13,47)" fg:x="1786" fg:w="118"/><text x="0.9121%" y="287.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="0.6191%" y="293" width="0.0593%" height="15" fill="rgb(215,122,49)" fg:x="1786" fg:w="171"/><text x="0.9121%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="0.6191%" y="309" width="0.0610%" height="15" fill="rgb(209,179,30)" fg:x="1786" fg:w="176"/><text x="0.9121%" y="319.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="0.5897%" y="325" width="0.1290%" height="15" fill="rgb(235,100,24)" fg:x="1701" fg:w="372"/><text x="0.8826%" y="335.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="0.5612%" y="341" width="0.2063%" height="15" fill="rgb(209,67,24)" fg:x="1619" fg:w="595"/><text x="0.8542%" y="351.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="0.7675%" y="341" width="0.0284%" height="15" fill="rgb(206,74,32)" fg:x="2214" fg:w="82"/><text x="1.0605%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="0.7959%" y="341" width="0.0194%" height="15" fill="rgb(212,45,25)" fg:x="2296" fg:w="56"/><text x="1.0889%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="0.8153%" y="341" width="0.0218%" height="15" fill="rgb(239,26,3)" fg:x="2352" fg:w="63"/><text x="1.1083%" y="351.50"></text></g><g><title>candid::binary_parser::read_leb (65 instructions, 0.02%)</title><rect x="0.8372%" y="341" width="0.0225%" height="15" fill="rgb(218,36,15)" fg:x="2415" fg:w="65"/><text x="1.1301%" y="351.50"></text></g><g><title>core::str::pattern::StrSearcher::new (406 instructions, 0.14%)</title><rect x="0.8597%" y="325" width="0.1407%" height="15" fill="rgb(206,108,24)" fg:x="2480" fg:w="406"/><text x="1.1527%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.0060%" y="309" width="0.0284%" height="15" fill="rgb(234,204,42)" fg:x="2902" fg:w="82"/><text x="1.2990%" y="319.50"></text></g><g><title>memcpy (60 instructions, 0.02%)</title><rect x="1.0344%" y="277" width="0.0208%" height="15" fill="rgb(229,2,11)" fg:x="2984" fg:w="60"/><text x="1.3274%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 instructions, 0.03%)</title><rect x="1.0344%" y="293" width="0.0295%" height="15" fill="rgb(221,20,48)" fg:x="2984" fg:w="85"/><text x="1.3274%" y="303.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="1.0670%" y="229" width="0.0104%" height="15" fill="rgb(244,164,10)" fg:x="3078" fg:w="30"/><text x="1.3600%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (55 instructions, 0.02%)</title><rect x="1.0670%" y="245" width="0.0191%" height="15" fill="rgb(243,229,2)" fg:x="3078" fg:w="55"/><text x="1.3600%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral (118 instructions, 0.04%)</title><rect x="1.0639%" y="261" width="0.0409%" height="15" fill="rgb(232,131,37)" fg:x="3069" fg:w="118"/><text x="1.3569%" y="271.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (171 instructions, 0.06%)</title><rect x="1.0639%" y="277" width="0.0593%" height="15" fill="rgb(217,156,11)" fg:x="3069" fg:w="171"/><text x="1.3569%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (176 instructions, 0.06%)</title><rect x="1.0639%" y="293" width="0.0610%" height="15" fill="rgb(239,99,48)" fg:x="3069" fg:w="176"/><text x="1.3569%" y="303.50"></text></g><g><title>core::fmt::write (372 instructions, 0.13%)</title><rect x="1.0344%" y="309" width="0.1290%" height="15" fill="rgb(231,209,9)" fg:x="2984" fg:w="372"/><text x="1.3274%" y="319.50"></text></g><g><title>alloc::fmt::format::format_inner (595 instructions, 0.21%)</title><rect x="1.0060%" y="325" width="0.2063%" height="15" fill="rgb(254,97,27)" fg:x="2902" fg:w="595"/><text x="1.2990%" y="335.50"></text></g><g><title>binread::binary_template::write_vec_named (82 instructions, 0.03%)</title><rect x="1.2123%" y="325" width="0.0284%" height="15" fill="rgb(223,151,38)" fg:x="3497" fg:w="82"/><text x="1.5052%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="1.2407%" y="325" width="0.0194%" height="15" fill="rgb(219,206,35)" fg:x="3579" fg:w="56"/><text x="1.5337%" y="335.50"></text></g><g><title>binread::binread_impls::&lt;impl binread::BinRead for alloc::vec::Vec&lt;B&gt;&gt;::read_options (1,314 instructions, 0.46%)</title><rect x="0.8597%" y="341" width="0.4555%" height="15" fill="rgb(216,130,31)" fg:x="2480" fg:w="1314"/><text x="1.1527%" y="351.50"></text></g><g><title>binread::binary_template::write_end_struct (63 instructions, 0.02%)</title><rect x="1.3152%" y="341" width="0.0218%" height="15" fill="rgb(251,97,34)" fg:x="3794" fg:w="63"/><text x="1.6082%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3537%" y="341" width="0.0284%" height="15" fill="rgb(246,159,47)" fg:x="3905" fg:w="82"/><text x="1.6467%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="1.3821%" y="341" width="0.0284%" height="15" fill="rgb(232,87,10)" fg:x="3987" fg:w="82"/><text x="1.6751%" y="351.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="1.4112%" y="341" width="0.1317%" height="15" fill="rgb(249,1,37)" fg:x="4071" fg:w="380"/><text x="1.7042%" y="351.50"></text></g><g><title>memcpy (380 instructions, 0.13%)</title><rect x="1.5430%" y="341" width="0.1317%" height="15" fill="rgb(239,135,14)" fg:x="4451" fg:w="380"/><text x="1.8359%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::new (5,312 instructions, 1.84%)</title><rect x="0.1005%" y="357" width="1.8414%" height="15" fill="rgb(253,116,46)" fg:x="290" fg:w="5312"/><text x="0.3935%" y="367.50"></text></g><g><title>memcpy (335 instructions, 0.12%)</title><rect x="1.9420%" y="357" width="0.1161%" height="15" fill="rgb(222,217,37)" fg:x="5602" fg:w="335"/><text x="2.2349%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="2.0623%" y="309" width="0.0281%" height="15" fill="rgb(252,96,8)" fg:x="5949" fg:w="81"/><text x="2.3552%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (101 instructions, 0.04%)</title><rect x="2.0997%" y="309" width="0.0350%" height="15" fill="rgb(254,103,41)" fg:x="6057" fg:w="101"/><text x="2.3927%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (236 instructions, 0.08%)</title><rect x="2.0623%" y="325" width="0.0818%" height="15" fill="rgb(218,213,19)" fg:x="5949" fg:w="236"/><text x="2.3552%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;candid::de::Deserializer&gt; (287 instructions, 0.10%)</title><rect x="2.0581%" y="341" width="0.0995%" height="15" fill="rgb(253,95,21)" fg:x="5937" fg:w="287"/><text x="2.3511%" y="351.50"></text></g><g><title>candid::de::IDLDeserialize::done (321 instructions, 0.11%)</title><rect x="2.0581%" y="357" width="0.1113%" height="15" fill="rgb(229,26,28)" fg:x="5937" fg:w="321"/><text x="2.3511%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (56 instructions, 0.02%)</title><rect x="2.1694%" y="357" width="0.0194%" height="15" fill="rgb(230,129,16)" fg:x="6258" fg:w="56"/><text x="2.4624%" y="367.50"></text></g><g><title>ic_cdk::api::call::arg_data (6,244 instructions, 2.16%)</title><rect x="0.0721%" y="373" width="2.1645%" height="15" fill="rgb(236,126,17)" fg:x="208" fg:w="6244"/><text x="0.3651%" y="383.50">i..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.2366%" y="341" width="0.0284%" height="15" fill="rgb(209,33,33)" fg:x="6452" fg:w="82"/><text x="2.5296%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 instructions, 0.04%)</title><rect x="2.2366%" y="357" width="0.0385%" height="15" fill="rgb(227,85,29)" fg:x="6452" fg:w="111"/><text x="2.5296%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (176 instructions, 0.06%)</title><rect x="2.2366%" y="373" width="0.0610%" height="15" fill="rgb(241,53,46)" fg:x="6452" fg:w="176"/><text x="2.5296%" y="383.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3254%" y="277" width="0.0128%" height="15" fill="rgb(228,167,53)" fg:x="6708" fg:w="37"/><text x="2.6183%" y="287.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3382%" y="261" width="0.0128%" height="15" fill="rgb(238,195,45)" fg:x="6745" fg:w="37"/><text x="2.6312%" y="271.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3510%" y="245" width="0.0128%" height="15" fill="rgb(252,124,45)" fg:x="6782" fg:w="37"/><text x="2.6440%" y="255.50"></text></g><g><title>memcmp (58 instructions, 0.02%)</title><rect x="2.3639%" y="229" width="0.0201%" height="15" fill="rgb(251,38,35)" fg:x="6819" fg:w="58"/><text x="2.6568%" y="239.50"></text></g><g><title>memcmp (37 instructions, 0.01%)</title><rect x="2.3840%" y="213" width="0.0128%" height="15" fill="rgb(227,33,2)" fg:x="6877" fg:w="37"/><text x="2.6769%" y="223.50"></text></g><g><title>memcmp (152 instructions, 0.05%)</title><rect x="2.3968%" y="197" width="0.0527%" height="15" fill="rgb(223,157,46)" fg:x="6914" fg:w="152"/><text x="2.6898%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4495%" y="197" width="0.0284%" height="15" fill="rgb(222,78,41)" fg:x="7066" fg:w="82"/><text x="2.7425%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.4779%" y="181" width="0.0284%" height="15" fill="rgb(248,176,11)" fg:x="7148" fg:w="82"/><text x="2.7709%" y="191.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="2.5063%" y="181" width="0.1109%" height="15" fill="rgb(241,221,18)" fg:x="7230" fg:w="320"/><text x="2.7993%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="2.6173%" y="181" width="0.0284%" height="15" fill="rgb(218,85,22)" fg:x="7550" fg:w="82"/><text x="2.9102%" y="191.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (772 instructions, 0.27%)</title><rect x="2.4779%" y="197" width="0.2676%" height="15" fill="rgb(222,223,7)" fg:x="7148" fg:w="772"/><text x="2.7709%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (1,174 instructions, 0.41%)</title><rect x="2.3968%" y="213" width="0.4070%" height="15" fill="rgb(254,59,39)" fg:x="6914" fg:w="1174"/><text x="2.6898%" y="223.50"></text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="2.8038%" y="197" width="0.0756%" height="15" fill="rgb(247,100,27)" fg:x="8088" fg:w="218"/><text x="3.0967%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="2.8793%" y="197" width="0.1629%" height="15" fill="rgb(237,207,10)" fg:x="8306" fg:w="470"/><text x="3.1723%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="3.0423%" y="197" width="0.0416%" height="15" fill="rgb(220,121,28)" fg:x="8776" fg:w="120"/><text x="3.3352%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="3.0839%" y="197" width="0.1629%" height="15" fill="rgb(213,223,20)" fg:x="8896" fg:w="470"/><text x="3.3768%" y="207.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="3.2468%" y="181" width="0.0575%" height="15" fill="rgb(205,121,27)" fg:x="9366" fg:w="166"/><text x="3.5398%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="3.3043%" y="181" width="1.7281%" height="15" fill="rgb(253,24,53)" fg:x="9532" fg:w="4985"/><text x="3.5973%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="3.2468%" y="197" width="1.8855%" height="15" fill="rgb(224,224,47)" fg:x="9366" fg:w="5439"/><text x="3.5398%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="2.8038%" y="213" width="2.3902%" height="15" fill="rgb(250,125,36)" fg:x="8088" fg:w="6895"/><text x="3.0967%" y="223.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="5.1940%" y="197" width="0.0756%" height="15" fill="rgb(240,144,38)" fg:x="14983" fg:w="218"/><text x="5.4869%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.2695%" y="197" width="0.1629%" height="15" fill="rgb(250,15,50)" fg:x="15201" fg:w="470"/><text x="5.5625%" y="207.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="5.4325%" y="197" width="0.0416%" height="15" fill="rgb(210,24,26)" fg:x="15671" fg:w="120"/><text x="5.7254%" y="207.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="5.4741%" y="197" width="0.1629%" height="15" fill="rgb(234,53,53)" fg:x="15791" fg:w="470"/><text x="5.7670%" y="207.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="5.6370%" y="181" width="0.0194%" height="15" fill="rgb(208,108,28)" fg:x="16261" fg:w="56"/><text x="5.9300%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="5.6564%" y="181" width="1.7281%" height="15" fill="rgb(227,143,7)" fg:x="16317" fg:w="4985"/><text x="5.9494%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="7.3845%" y="181" width="1.7281%" height="15" fill="rgb(238,189,38)" fg:x="21302" fg:w="4985"/><text x="7.6775%" y="191.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="5.6370%" y="197" width="3.5879%" height="15" fill="rgb(222,69,15)" fg:x="16261" fg:w="10350"/><text x="5.9300%" y="207.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="5.1940%" y="213" width="4.1110%" height="15" fill="rgb(213,169,7)" fg:x="14983" fg:w="11859"/><text x="5.4869%" y="223.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="9.3050%" y="181" width="0.0756%" height="15" fill="rgb(251,219,4)" fg:x="26842" fg:w="218"/><text x="9.5980%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="9.3806%" y="181" width="0.1629%" height="15" fill="rgb(241,55,40)" fg:x="27060" fg:w="470"/><text x="9.6735%" y="191.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="9.5435%" y="181" width="0.0832%" height="15" fill="rgb(243,57,30)" fg:x="27530" fg:w="240"/><text x="9.8365%" y="191.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="9.6267%" y="181" width="1.7281%" height="15" fill="rgb(234,50,30)" fg:x="27770" fg:w="4985"/><text x="9.9197%" y="191.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="11.3548%" y="181" width="0.0621%" height="15" fill="rgb(239,23,42)" fg:x="32755" fg:w="179"/><text x="11.6477%" y="191.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="11.4168%" y="181" width="0.1629%" height="15" fill="rgb(217,38,19)" fg:x="32934" fg:w="470"/><text x="11.7098%" y="191.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="11.5798%" y="165" width="0.0610%" height="15" fill="rgb(215,179,16)" fg:x="33404" fg:w="176"/><text x="11.8727%" y="175.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="11.6408%" y="165" width="1.7281%" height="15" fill="rgb(254,21,37)" fg:x="33580" fg:w="4985"/><text x="11.9337%" y="175.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="11.5798%" y="181" width="1.8889%" height="15" fill="rgb(219,207,48)" fg:x="33404" fg:w="5449"/><text x="11.8727%" y="191.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="9.3050%" y="197" width="4.2518%" height="15" fill="rgb(227,225,41)" fg:x="26842" fg:w="12265"/><text x="9.5980%" y="207.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="13.5567%" y="197" width="0.0284%" height="15" fill="rgb(223,130,1)" fg:x="39107" fg:w="82"/><text x="13.8497%" y="207.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="13.5852%" y="197" width="0.1109%" height="15" fill="rgb(249,54,42)" fg:x="39189" fg:w="320"/><text x="13.8781%" y="207.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="9.3050%" y="213" width="4.5069%" height="15" fill="rgb(248,69,25)" fg:x="26842" fg:w="13001"/><text x="9.5980%" y="223.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (33,143 instructions, 11.49%)</title><rect x="2.3840%" y="229" width="11.4893%" height="15" fill="rgb(234,21,32)" fg:x="6877" fg:w="33143"/><text x="2.6769%" y="239.50">ic_certified_m..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="13.8732%" y="213" width="0.0756%" height="15" fill="rgb(252,136,6)" fg:x="40020" fg:w="218"/><text x="14.1662%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="13.9488%" y="213" width="0.1629%" height="15" fill="rgb(245,87,12)" fg:x="40238" fg:w="470"/><text x="14.2418%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="14.1117%" y="213" width="0.0416%" height="15" fill="rgb(208,12,15)" fg:x="40708" fg:w="120"/><text x="14.4047%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="14.1533%" y="213" width="0.1629%" height="15" fill="rgb(250,98,2)" fg:x="40828" fg:w="470"/><text x="14.4463%" y="223.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="14.3163%" y="197" width="0.0575%" height="15" fill="rgb(205,213,15)" fg:x="41298" fg:w="166"/><text x="14.6092%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="14.3738%" y="197" width="1.7281%" height="15" fill="rgb(248,192,44)" fg:x="41464" fg:w="4985"/><text x="14.6668%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="14.3163%" y="213" width="1.8855%" height="15" fill="rgb(221,89,17)" fg:x="41298" fg:w="5439"/><text x="14.6092%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="13.8732%" y="229" width="2.3902%" height="15" fill="rgb(209,55,3)" fg:x="40020" fg:w="6895"/><text x="14.1662%" y="239.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="16.2634%" y="213" width="0.0756%" height="15" fill="rgb(247,23,45)" fg:x="46915" fg:w="218"/><text x="16.5564%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.3390%" y="213" width="0.1629%" height="15" fill="rgb(235,152,23)" fg:x="47133" fg:w="470"/><text x="16.6320%" y="223.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="16.5019%" y="213" width="0.0416%" height="15" fill="rgb(244,63,13)" fg:x="47603" fg:w="120"/><text x="16.7949%" y="223.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="16.5435%" y="213" width="0.1629%" height="15" fill="rgb(227,30,37)" fg:x="47723" fg:w="470"/><text x="16.8365%" y="223.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="16.7065%" y="197" width="0.0194%" height="15" fill="rgb(224,49,42)" fg:x="48193" fg:w="56"/><text x="16.9994%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="16.7259%" y="197" width="1.7281%" height="15" fill="rgb(218,129,5)" fg:x="48249" fg:w="4985"/><text x="17.0189%" y="207.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="18.4540%" y="197" width="1.7281%" height="15" fill="rgb(240,199,54)" fg:x="53234" fg:w="4985"/><text x="18.7469%" y="207.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="16.7065%" y="213" width="3.5879%" height="15" fill="rgb(234,31,13)" fg:x="48193" fg:w="10350"/><text x="16.9994%" y="223.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="16.2634%" y="229" width="4.1110%" height="15" fill="rgb(219,73,54)" fg:x="46915" fg:w="11859"/><text x="16.5564%" y="239.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.3745%" y="213" width="0.0284%" height="15" fill="rgb(251,162,10)" fg:x="58774" fg:w="82"/><text x="20.6674%" y="223.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="20.4029%" y="213" width="0.1109%" height="15" fill="rgb(240,138,47)" fg:x="58856" fg:w="320"/><text x="20.6959%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="20.5138%" y="213" width="0.0284%" height="15" fill="rgb(216,138,26)" fg:x="59176" fg:w="82"/><text x="20.8068%" y="223.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="20.3745%" y="229" width="0.2704%" height="15" fill="rgb(243,17,35)" fg:x="58774" fg:w="780"/><text x="20.6674%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (52,911 instructions, 18.34%)</title><rect x="2.3639%" y="245" width="18.3420%" height="15" fill="rgb(241,60,18)" fg:x="6819" fg:w="52911"/><text x="2.6568%" y="255.50">ic_certified_map::rbtree..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="20.7059%" y="229" width="0.0756%" height="15" fill="rgb(234,2,44)" fg:x="59730" fg:w="218"/><text x="20.9988%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.7814%" y="229" width="0.1629%" height="15" fill="rgb(225,225,33)" fg:x="59948" fg:w="470"/><text x="21.0744%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="20.9444%" y="229" width="0.0416%" height="15" fill="rgb(234,50,31)" fg:x="60418" fg:w="120"/><text x="21.2373%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="20.9860%" y="229" width="0.1629%" height="15" fill="rgb(249,6,25)" fg:x="60538" fg:w="470"/><text x="21.2789%" y="239.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="21.1489%" y="213" width="0.0575%" height="15" fill="rgb(241,5,17)" fg:x="61008" fg:w="166"/><text x="21.4419%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="21.2064%" y="213" width="1.7281%" height="15" fill="rgb(207,116,10)" fg:x="61174" fg:w="4985"/><text x="21.4994%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="21.1489%" y="229" width="1.8855%" height="15" fill="rgb(222,128,18)" fg:x="61008" fg:w="5439"/><text x="21.4419%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="20.7059%" y="245" width="2.3902%" height="15" fill="rgb(229,109,25)" fg:x="59730" fg:w="6895"/><text x="20.9988%" y="255.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="23.0961%" y="229" width="0.0756%" height="15" fill="rgb(222,102,25)" fg:x="66625" fg:w="218"/><text x="23.3890%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.1716%" y="229" width="0.1629%" height="15" fill="rgb(239,211,5)" fg:x="66843" fg:w="470"/><text x="23.4646%" y="239.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="23.3346%" y="229" width="0.0416%" height="15" fill="rgb(223,136,26)" fg:x="67313" fg:w="120"/><text x="23.6275%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="23.3762%" y="229" width="0.1629%" height="15" fill="rgb(227,30,15)" fg:x="67433" fg:w="470"/><text x="23.6691%" y="239.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="23.5391%" y="213" width="0.0194%" height="15" fill="rgb(247,76,4)" fg:x="67903" fg:w="56"/><text x="23.8321%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="23.5585%" y="213" width="1.7281%" height="15" fill="rgb(245,38,48)" fg:x="67959" fg:w="4985"/><text x="23.8515%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="25.2866%" y="213" width="1.7281%" height="15" fill="rgb(210,220,14)" fg:x="72944" fg:w="4985"/><text x="25.5796%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="23.5391%" y="229" width="3.5879%" height="15" fill="rgb(224,60,51)" fg:x="67903" fg:w="10350"/><text x="23.8321%" y="239.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="23.0961%" y="245" width="4.1110%" height="15" fill="rgb(212,133,49)" fg:x="66625" fg:w="11859"/><text x="23.3890%" y="255.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.2071%" y="229" width="0.0284%" height="15" fill="rgb(231,39,22)" fg:x="78484" fg:w="82"/><text x="27.5001%" y="239.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="27.2355%" y="229" width="0.1109%" height="15" fill="rgb(236,173,22)" fg:x="78566" fg:w="320"/><text x="27.5285%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="27.3464%" y="229" width="0.0284%" height="15" fill="rgb(210,70,0)" fg:x="78886" fg:w="82"/><text x="27.6394%" y="239.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="27.2071%" y="245" width="0.2704%" height="15" fill="rgb(215,170,11)" fg:x="78484" fg:w="780"/><text x="27.5001%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (72,658 instructions, 25.19%)</title><rect x="2.3510%" y="261" width="25.1875%" height="15" fill="rgb(220,154,28)" fg:x="6782" fg:w="72658"/><text x="2.6440%" y="271.50">ic_certified_map::rbtree::RbTree&lt;K..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="27.5385%" y="245" width="0.0756%" height="15" fill="rgb(240,160,41)" fg:x="79440" fg:w="218"/><text x="27.8315%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.6141%" y="245" width="0.1629%" height="15" fill="rgb(243,215,41)" fg:x="79658" fg:w="470"/><text x="27.9070%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="27.7770%" y="245" width="0.0416%" height="15" fill="rgb(214,208,31)" fg:x="80128" fg:w="120"/><text x="28.0700%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="27.8186%" y="245" width="0.1629%" height="15" fill="rgb(247,57,22)" fg:x="80248" fg:w="470"/><text x="28.1116%" y="255.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="27.9815%" y="229" width="0.0575%" height="15" fill="rgb(228,73,52)" fg:x="80718" fg:w="166"/><text x="28.2745%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="28.0391%" y="229" width="1.7281%" height="15" fill="rgb(252,60,9)" fg:x="80884" fg:w="4985"/><text x="28.3320%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="27.9815%" y="245" width="1.8855%" height="15" fill="rgb(233,9,51)" fg:x="80718" fg:w="5439"/><text x="28.2745%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="27.5385%" y="261" width="2.3902%" height="15" fill="rgb(223,67,14)" fg:x="79440" fg:w="6895"/><text x="27.8315%" y="271.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="29.9287%" y="245" width="0.0756%" height="15" fill="rgb(222,86,2)" fg:x="86335" fg:w="218"/><text x="30.2217%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.0043%" y="245" width="0.1629%" height="15" fill="rgb(243,58,54)" fg:x="86553" fg:w="470"/><text x="30.2972%" y="255.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="30.1672%" y="245" width="0.0416%" height="15" fill="rgb(210,200,39)" fg:x="87023" fg:w="120"/><text x="30.4602%" y="255.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="30.2088%" y="245" width="0.1629%" height="15" fill="rgb(238,135,9)" fg:x="87143" fg:w="470"/><text x="30.5018%" y="255.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="30.3717%" y="229" width="0.0194%" height="15" fill="rgb(232,179,7)" fg:x="87613" fg:w="56"/><text x="30.6647%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="30.3911%" y="229" width="1.7281%" height="15" fill="rgb(245,65,41)" fg:x="87669" fg:w="4985"/><text x="30.6841%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="32.1192%" y="229" width="1.7281%" height="15" fill="rgb(227,43,8)" fg:x="92654" fg:w="4985"/><text x="32.4122%" y="239.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="30.3717%" y="245" width="3.5879%" height="15" fill="rgb(235,91,14)" fg:x="87613" fg:w="10350"/><text x="30.6647%" y="255.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="29.9287%" y="261" width="4.1110%" height="15" fill="rgb(235,219,31)" fg:x="86335" fg:w="11859"/><text x="30.2217%" y="271.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="34.0397%" y="229" width="0.0756%" height="15" fill="rgb(227,121,25)" fg:x="98194" fg:w="218"/><text x="34.3327%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="34.1153%" y="229" width="0.1629%" height="15" fill="rgb(254,129,24)" fg:x="98412" fg:w="470"/><text x="34.4082%" y="239.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="34.2782%" y="229" width="0.0832%" height="15" fill="rgb(226,144,49)" fg:x="98882" fg:w="240"/><text x="34.5712%" y="239.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="34.3614%" y="229" width="1.7281%" height="15" fill="rgb(214,187,32)" fg:x="99122" fg:w="4985"/><text x="34.6544%" y="239.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="36.0895%" y="229" width="0.0621%" height="15" fill="rgb(243,129,46)" fg:x="104107" fg:w="179"/><text x="36.3825%" y="239.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="36.1515%" y="229" width="0.1629%" height="15" fill="rgb(221,185,35)" fg:x="104286" fg:w="470"/><text x="36.4445%" y="239.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="36.3145%" y="213" width="0.0610%" height="15" fill="rgb(205,0,32)" fg:x="104756" fg:w="176"/><text x="36.6074%" y="223.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="36.3755%" y="213" width="1.7281%" height="15" fill="rgb(229,179,12)" fg:x="104932" fg:w="4985"/><text x="36.6685%" y="223.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="36.3145%" y="229" width="1.8889%" height="15" fill="rgb(252,107,19)" fg:x="104756" fg:w="5449"/><text x="36.6074%" y="239.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="34.0397%" y="245" width="4.2518%" height="15" fill="rgb(220,95,27)" fg:x="98194" fg:w="12265"/><text x="34.3327%" y="255.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="38.2915%" y="245" width="0.0284%" height="15" fill="rgb(240,113,40)" fg:x="110459" fg:w="82"/><text x="38.5844%" y="255.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="38.3199%" y="245" width="0.1109%" height="15" fill="rgb(208,4,43)" fg:x="110541" fg:w="320"/><text x="38.6129%" y="255.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="34.0397%" y="261" width="4.5069%" height="15" fill="rgb(247,189,30)" fg:x="98194" fg:w="13001"/><text x="34.3327%" y="271.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (104,627 instructions, 36.27%)</title><rect x="2.3382%" y="277" width="36.2698%" height="15" fill="rgb(231,157,17)" fg:x="6745" fg:w="104627"/><text x="2.6312%" y="287.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="38.6080%" y="261" width="0.0756%" height="15" fill="rgb(224,139,6)" fg:x="111372" fg:w="218"/><text x="38.9009%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.6835%" y="261" width="0.1629%" height="15" fill="rgb(223,83,16)" fg:x="111590" fg:w="470"/><text x="38.9765%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="38.8465%" y="261" width="0.0416%" height="15" fill="rgb(232,211,20)" fg:x="112060" fg:w="120"/><text x="39.1394%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="38.8881%" y="261" width="0.1629%" height="15" fill="rgb(225,203,35)" fg:x="112180" fg:w="470"/><text x="39.1810%" y="271.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="39.0510%" y="245" width="0.0575%" height="15" fill="rgb(215,211,44)" fg:x="112650" fg:w="166"/><text x="39.3440%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="39.1085%" y="245" width="1.7281%" height="15" fill="rgb(248,213,26)" fg:x="112816" fg:w="4985"/><text x="39.4015%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="39.0510%" y="261" width="1.8855%" height="15" fill="rgb(214,23,52)" fg:x="112650" fg:w="5439"/><text x="39.3440%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="38.6080%" y="277" width="2.3902%" height="15" fill="rgb(225,173,50)" fg:x="111372" fg:w="6895"/><text x="38.9009%" y="287.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="40.9982%" y="261" width="0.0756%" height="15" fill="rgb(206,150,22)" fg:x="118267" fg:w="218"/><text x="41.2911%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.0737%" y="261" width="0.1629%" height="15" fill="rgb(239,64,23)" fg:x="118485" fg:w="470"/><text x="41.3667%" y="271.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="41.2367%" y="261" width="0.0416%" height="15" fill="rgb(242,50,38)" fg:x="118955" fg:w="120"/><text x="41.5296%" y="271.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="41.2783%" y="261" width="0.1629%" height="15" fill="rgb(217,91,15)" fg:x="119075" fg:w="470"/><text x="41.5712%" y="271.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="41.4412%" y="245" width="0.0194%" height="15" fill="rgb(230,172,6)" fg:x="119545" fg:w="56"/><text x="41.7342%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="41.4606%" y="245" width="1.7281%" height="15" fill="rgb(221,98,26)" fg:x="119601" fg:w="4985"/><text x="41.7536%" y="255.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="43.1887%" y="245" width="1.7281%" height="15" fill="rgb(227,210,45)" fg:x="124586" fg:w="4985"/><text x="43.4817%" y="255.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="41.4412%" y="261" width="3.5879%" height="15" fill="rgb(206,8,30)" fg:x="119545" fg:w="10350"/><text x="41.7342%" y="271.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="40.9982%" y="277" width="4.1110%" height="15" fill="rgb(241,219,17)" fg:x="118267" fg:w="11859"/><text x="41.2911%" y="287.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.1092%" y="261" width="0.0284%" height="15" fill="rgb(247,121,29)" fg:x="130126" fg:w="82"/><text x="45.4021%" y="271.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="45.1376%" y="261" width="0.1109%" height="15" fill="rgb(219,169,49)" fg:x="130208" fg:w="320"/><text x="45.4306%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="45.2485%" y="261" width="0.0284%" height="15" fill="rgb(253,49,49)" fg:x="130528" fg:w="82"/><text x="45.5415%" y="271.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="45.1092%" y="277" width="0.2704%" height="15" fill="rgb(217,178,3)" fg:x="130126" fg:w="780"/><text x="45.4021%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (124,374 instructions, 43.12%)</title><rect x="2.3254%" y="293" width="43.1152%" height="15" fill="rgb(234,73,37)" fg:x="6708" fg:w="124374"/><text x="2.6183%" y="303.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witn..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="45.4406%" y="277" width="0.0756%" height="15" fill="rgb(250,98,22)" fg:x="131082" fg:w="218"/><text x="45.7336%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.5162%" y="277" width="0.1629%" height="15" fill="rgb(220,108,37)" fg:x="131300" fg:w="470"/><text x="45.8091%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="45.6791%" y="277" width="0.0416%" height="15" fill="rgb(225,168,10)" fg:x="131770" fg:w="120"/><text x="45.9721%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="45.7207%" y="277" width="0.1629%" height="15" fill="rgb(247,215,21)" fg:x="131890" fg:w="470"/><text x="46.0137%" y="287.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="45.8836%" y="261" width="0.0575%" height="15" fill="rgb(253,189,31)" fg:x="132360" fg:w="166"/><text x="46.1766%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="45.9412%" y="261" width="1.7281%" height="15" fill="rgb(241,54,22)" fg:x="132526" fg:w="4985"/><text x="46.2341%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="45.8836%" y="277" width="1.8855%" height="15" fill="rgb(211,87,4)" fg:x="132360" fg:w="5439"/><text x="46.1766%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="45.4406%" y="293" width="2.3902%" height="15" fill="rgb(245,112,24)" fg:x="131082" fg:w="6895"/><text x="45.7336%" y="303.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="47.8308%" y="277" width="0.0756%" height="15" fill="rgb(235,190,41)" fg:x="137977" fg:w="218"/><text x="48.1238%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="47.9064%" y="277" width="0.1629%" height="15" fill="rgb(214,89,8)" fg:x="138195" fg:w="470"/><text x="48.1993%" y="287.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="48.0693%" y="277" width="0.0416%" height="15" fill="rgb(249,155,35)" fg:x="138665" fg:w="120"/><text x="48.3623%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="48.1109%" y="277" width="0.1629%" height="15" fill="rgb(249,88,26)" fg:x="138785" fg:w="470"/><text x="48.4039%" y="287.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="48.2738%" y="261" width="0.0194%" height="15" fill="rgb(232,56,8)" fg:x="139255" fg:w="56"/><text x="48.5668%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="48.2932%" y="261" width="1.7281%" height="15" fill="rgb(240,95,3)" fg:x="139311" fg:w="4985"/><text x="48.5862%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="50.0213%" y="261" width="1.7281%" height="15" fill="rgb(222,44,28)" fg:x="144296" fg:w="4985"/><text x="50.3143%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="48.2738%" y="277" width="3.5879%" height="15" fill="rgb(234,16,30)" fg:x="139255" fg:w="10350"/><text x="48.5668%" y="287.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="47.8308%" y="293" width="4.1110%" height="15" fill="rgb(223,26,17)" fg:x="137977" fg:w="11859"/><text x="48.1238%" y="303.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="51.9418%" y="277" width="0.0284%" height="15" fill="rgb(239,187,47)" fg:x="149836" fg:w="82"/><text x="52.2348%" y="287.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="51.9702%" y="277" width="0.1109%" height="15" fill="rgb(247,102,50)" fg:x="149918" fg:w="320"/><text x="52.2632%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="52.0812%" y="277" width="0.0284%" height="15" fill="rgb(231,216,22)" fg:x="150238" fg:w="82"/><text x="52.3741%" y="287.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="51.9418%" y="293" width="0.2704%" height="15" fill="rgb(216,201,26)" fg:x="149836" fg:w="780"/><text x="52.2348%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (144,100 instructions, 49.95%)</title><rect x="2.3198%" y="309" width="49.9534%" height="15" fill="rgb(214,186,23)" fg:x="6692" fg:w="144100"/><text x="2.6128%" y="319.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="52.2732%" y="293" width="0.0756%" height="15" fill="rgb(235,184,4)" fg:x="150792" fg:w="218"/><text x="52.5662%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.3488%" y="293" width="0.1629%" height="15" fill="rgb(244,46,17)" fg:x="151010" fg:w="470"/><text x="52.6417%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="52.5117%" y="293" width="0.0416%" height="15" fill="rgb(248,74,46)" fg:x="151480" fg:w="120"/><text x="52.8047%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="52.5533%" y="293" width="0.1629%" height="15" fill="rgb(243,79,5)" fg:x="151600" fg:w="470"/><text x="52.8463%" y="303.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="52.7162%" y="277" width="0.0575%" height="15" fill="rgb(213,148,1)" fg:x="152070" fg:w="166"/><text x="53.0092%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="52.7738%" y="277" width="1.7281%" height="15" fill="rgb(221,30,0)" fg:x="152236" fg:w="4985"/><text x="53.0668%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="52.7162%" y="293" width="1.8855%" height="15" fill="rgb(207,85,29)" fg:x="152070" fg:w="5439"/><text x="53.0092%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="52.2732%" y="309" width="2.3902%" height="15" fill="rgb(239,31,46)" fg:x="150792" fg:w="6895"/><text x="52.5662%" y="319.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="54.6634%" y="293" width="0.0756%" height="15" fill="rgb(219,6,1)" fg:x="157687" fg:w="218"/><text x="54.9564%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.7390%" y="293" width="0.1629%" height="15" fill="rgb(229,90,29)" fg:x="157905" fg:w="470"/><text x="55.0320%" y="303.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="54.9019%" y="293" width="0.0416%" height="15" fill="rgb(242,201,42)" fg:x="158375" fg:w="120"/><text x="55.1949%" y="303.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="54.9435%" y="293" width="0.1629%" height="15" fill="rgb(243,80,54)" fg:x="158495" fg:w="470"/><text x="55.2365%" y="303.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="55.1064%" y="277" width="0.0194%" height="15" fill="rgb(223,166,15)" fg:x="158965" fg:w="56"/><text x="55.3994%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="55.1259%" y="277" width="1.7281%" height="15" fill="rgb(238,78,27)" fg:x="159021" fg:w="4985"/><text x="55.4188%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="56.8539%" y="277" width="1.7281%" height="15" fill="rgb(235,28,43)" fg:x="164006" fg:w="4985"/><text x="57.1469%" y="287.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="55.1064%" y="293" width="3.5879%" height="15" fill="rgb(240,210,28)" fg:x="158965" fg:w="10350"/><text x="55.3994%" y="303.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="54.6634%" y="309" width="4.1110%" height="15" fill="rgb(253,6,46)" fg:x="157687" fg:w="11859"/><text x="54.9564%" y="319.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="58.7744%" y="277" width="0.0756%" height="15" fill="rgb(250,159,47)" fg:x="169546" fg:w="218"/><text x="59.0674%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="58.8500%" y="277" width="0.1629%" height="15" fill="rgb(216,139,2)" fg:x="169764" fg:w="470"/><text x="59.1430%" y="287.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="59.0129%" y="277" width="0.0832%" height="15" fill="rgb(221,124,44)" fg:x="170234" fg:w="240"/><text x="59.3059%" y="287.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="59.0961%" y="277" width="1.7281%" height="15" fill="rgb(205,37,22)" fg:x="170474" fg:w="4985"/><text x="59.3891%" y="287.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="60.8242%" y="277" width="0.0621%" height="15" fill="rgb(250,55,8)" fg:x="175459" fg:w="179"/><text x="61.1172%" y="287.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="60.8863%" y="277" width="0.1629%" height="15" fill="rgb(215,83,48)" fg:x="175638" fg:w="470"/><text x="61.1792%" y="287.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="61.0492%" y="261" width="0.0610%" height="15" fill="rgb(253,2,32)" fg:x="176108" fg:w="176"/><text x="61.3422%" y="271.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="61.1102%" y="261" width="1.7281%" height="15" fill="rgb(236,67,28)" fg:x="176284" fg:w="4985"/><text x="61.4032%" y="271.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="61.0492%" y="277" width="1.8889%" height="15" fill="rgb(252,55,15)" fg:x="176108" fg:w="5449"/><text x="61.3422%" y="287.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="58.7744%" y="293" width="4.2518%" height="15" fill="rgb(243,173,17)" fg:x="169546" fg:w="12265"/><text x="59.0674%" y="303.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="63.0262%" y="293" width="0.0284%" height="15" fill="rgb(215,212,13)" fg:x="181811" fg:w="82"/><text x="63.3192%" y="303.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="63.0546%" y="293" width="0.1109%" height="15" fill="rgb(253,176,6)" fg:x="181893" fg:w="320"/><text x="63.3476%" y="303.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="58.7744%" y="309" width="4.5069%" height="15" fill="rgb(236,105,26)" fg:x="169546" fg:w="13001"/><text x="59.0674%" y="319.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (176,048 instructions, 61.03%)</title><rect x="2.3143%" y="325" width="61.0284%" height="15" fill="rgb(239,226,32)" fg:x="6676" fg:w="176048"/><text x="2.6073%" y="335.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="63.3427%" y="309" width="0.0756%" height="15" fill="rgb(236,104,51)" fg:x="182724" fg:w="218"/><text x="63.6357%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.4183%" y="309" width="0.1629%" height="15" fill="rgb(220,172,33)" fg:x="182942" fg:w="470"/><text x="63.7112%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="63.5812%" y="309" width="0.0416%" height="15" fill="rgb(224,182,25)" fg:x="183412" fg:w="120"/><text x="63.8742%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="63.6228%" y="309" width="0.1629%" height="15" fill="rgb(236,184,24)" fg:x="183532" fg:w="470"/><text x="63.9157%" y="319.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="63.7857%" y="293" width="0.0575%" height="15" fill="rgb(241,221,14)" fg:x="184002" fg:w="166"/><text x="64.0787%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="63.8433%" y="293" width="1.7281%" height="15" fill="rgb(227,146,5)" fg:x="184168" fg:w="4985"/><text x="64.1362%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="63.7857%" y="309" width="1.8855%" height="15" fill="rgb(214,15,23)" fg:x="184002" fg:w="5439"/><text x="64.0787%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="63.3427%" y="325" width="2.3902%" height="15" fill="rgb(233,157,31)" fg:x="182724" fg:w="6895"/><text x="63.6357%" y="335.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="65.7329%" y="309" width="0.0756%" height="15" fill="rgb(211,27,52)" fg:x="189619" fg:w="218"/><text x="66.0259%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="65.8085%" y="309" width="0.1629%" height="15" fill="rgb(212,223,15)" fg:x="189837" fg:w="470"/><text x="66.1014%" y="319.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="65.9714%" y="309" width="0.0416%" height="15" fill="rgb(254,211,0)" fg:x="190307" fg:w="120"/><text x="66.2644%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="66.0130%" y="309" width="0.1629%" height="15" fill="rgb(205,43,38)" fg:x="190427" fg:w="470"/><text x="66.3060%" y="319.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="66.1759%" y="293" width="0.0194%" height="15" fill="rgb(242,206,46)" fg:x="190897" fg:w="56"/><text x="66.4689%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="66.1953%" y="293" width="1.7281%" height="15" fill="rgb(220,221,12)" fg:x="190953" fg:w="4985"/><text x="66.4883%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="67.9234%" y="293" width="1.7281%" height="15" fill="rgb(217,156,35)" fg:x="195938" fg:w="4985"/><text x="68.2164%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="66.1759%" y="309" width="3.5879%" height="15" fill="rgb(207,181,49)" fg:x="190897" fg:w="10350"/><text x="66.4689%" y="319.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="65.7329%" y="325" width="4.1110%" height="15" fill="rgb(235,103,47)" fg:x="189619" fg:w="11859"/><text x="66.0259%" y="335.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.8439%" y="309" width="0.0284%" height="15" fill="rgb(222,63,28)" fg:x="201478" fg:w="82"/><text x="70.1369%" y="319.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="69.8723%" y="309" width="0.1109%" height="15" fill="rgb(244,137,21)" fg:x="201560" fg:w="320"/><text x="70.1653%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="69.9833%" y="309" width="0.0284%" height="15" fill="rgb(228,35,27)" fg:x="201880" fg:w="82"/><text x="70.2762%" y="319.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="69.8439%" y="325" width="0.2704%" height="15" fill="rgb(226,191,41)" fg:x="201478" fg:w="780"/><text x="70.1369%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (195,774 instructions, 67.87%)</title><rect x="2.3087%" y="341" width="67.8666%" height="15" fill="rgb(210,154,3)" fg:x="6660" fg:w="195774"/><text x="2.6017%" y="351.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="70.1753%" y="325" width="0.0756%" height="15" fill="rgb(216,60,49)" fg:x="202434" fg:w="218"/><text x="70.4683%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.2509%" y="325" width="0.1629%" height="15" fill="rgb(226,17,20)" fg:x="202652" fg:w="470"/><text x="70.5438%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="70.4138%" y="325" width="0.0416%" height="15" fill="rgb(206,115,35)" fg:x="203122" fg:w="120"/><text x="70.7068%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="70.4554%" y="325" width="0.1629%" height="15" fill="rgb(227,88,1)" fg:x="203242" fg:w="470"/><text x="70.7484%" y="335.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="70.6183%" y="309" width="0.0575%" height="15" fill="rgb(230,222,24)" fg:x="203712" fg:w="166"/><text x="70.9113%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="70.6759%" y="309" width="1.7281%" height="15" fill="rgb(214,124,32)" fg:x="203878" fg:w="4985"/><text x="70.9688%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="70.6183%" y="325" width="1.8855%" height="15" fill="rgb(240,41,36)" fg:x="203712" fg:w="5439"/><text x="70.9113%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="70.1753%" y="341" width="2.3902%" height="15" fill="rgb(221,17,52)" fg:x="202434" fg:w="6895"/><text x="70.4683%" y="351.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="72.5655%" y="325" width="0.0756%" height="15" fill="rgb(252,70,16)" fg:x="209329" fg:w="218"/><text x="72.8585%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.6411%" y="325" width="0.1629%" height="15" fill="rgb(250,177,4)" fg:x="209547" fg:w="470"/><text x="72.9340%" y="335.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="72.8040%" y="325" width="0.0416%" height="15" fill="rgb(240,188,47)" fg:x="210017" fg:w="120"/><text x="73.0970%" y="335.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="72.8456%" y="325" width="0.1629%" height="15" fill="rgb(215,92,12)" fg:x="210137" fg:w="470"/><text x="73.1386%" y="335.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="73.0085%" y="309" width="0.0194%" height="15" fill="rgb(242,110,29)" fg:x="210607" fg:w="56"/><text x="73.3015%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="73.0280%" y="309" width="1.7281%" height="15" fill="rgb(208,211,26)" fg:x="210663" fg:w="4985"/><text x="73.3209%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="74.7560%" y="309" width="1.7281%" height="15" fill="rgb(244,147,6)" fg:x="215648" fg:w="4985"/><text x="75.0490%" y="319.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="73.0085%" y="325" width="3.5879%" height="15" fill="rgb(211,130,42)" fg:x="210607" fg:w="10350"/><text x="73.3015%" y="335.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="72.5655%" y="341" width="4.1110%" height="15" fill="rgb(220,63,1)" fg:x="209329" fg:w="11859"/><text x="72.8585%" y="351.50">ic_..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="76.6765%" y="309" width="0.0756%" height="15" fill="rgb(241,212,30)" fg:x="221188" fg:w="218"/><text x="76.9695%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="76.7521%" y="309" width="0.1629%" height="15" fill="rgb(233,153,17)" fg:x="221406" fg:w="470"/><text x="77.0451%" y="319.50"></text></g><g><title>memcpy (240 instructions, 0.08%)</title><rect x="76.9150%" y="309" width="0.0832%" height="15" fill="rgb(236,3,10)" fg:x="221876" fg:w="240"/><text x="77.2080%" y="319.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="76.9982%" y="309" width="1.7281%" height="15" fill="rgb(232,41,21)" fg:x="222116" fg:w="4985"/><text x="77.2912%" y="319.50"></text></g><g><title>memcpy (179 instructions, 0.06%)</title><rect x="78.7263%" y="309" width="0.0621%" height="15" fill="rgb(206,63,51)" fg:x="227101" fg:w="179"/><text x="79.0193%" y="319.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="78.7884%" y="309" width="0.1629%" height="15" fill="rgb(250,214,3)" fg:x="227280" fg:w="470"/><text x="79.0813%" y="319.50"></text></g><g><title>memset (176 instructions, 0.06%)</title><rect x="78.9513%" y="293" width="0.0610%" height="15" fill="rgb(254,89,27)" fg:x="227750" fg:w="176"/><text x="79.2443%" y="303.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="79.0123%" y="293" width="1.7281%" height="15" fill="rgb(249,41,14)" fg:x="227926" fg:w="4985"/><text x="79.3053%" y="303.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,449 instructions, 1.89%)</title><rect x="78.9513%" y="309" width="1.8889%" height="15" fill="rgb(221,196,51)" fg:x="227750" fg:w="5449"/><text x="79.2443%" y="319.50"></text></g><g><title>ic_certified_map::hashtree::fork_hash (12,265 instructions, 4.25%)</title><rect x="76.6765%" y="325" width="4.2518%" height="15" fill="rgb(214,116,26)" fg:x="221188" fg:w="12265"/><text x="76.9695%" y="335.50">ic_c..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="80.9283%" y="325" width="0.0284%" height="15" fill="rgb(236,67,7)" fg:x="233453" fg:w="82"/><text x="81.2212%" y="335.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="80.9567%" y="325" width="0.1109%" height="15" fill="rgb(253,179,32)" fg:x="233535" fg:w="320"/><text x="81.2497%" y="335.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (13,001 instructions, 4.51%)</title><rect x="76.6765%" y="341" width="4.5069%" height="15" fill="rgb(218,33,15)" fg:x="221188" fg:w="13001"/><text x="76.9695%" y="351.50">ic_c..</text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (227,722 instructions, 78.94%)</title><rect x="2.3032%" y="357" width="78.9416%" height="15" fill="rgb(217,202,41)" fg:x="6644" fg:w="227722"/><text x="2.5962%" y="367.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="81.2448%" y="341" width="0.0756%" height="15" fill="rgb(234,133,5)" fg:x="234366" fg:w="218"/><text x="81.5377%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.3203%" y="341" width="0.1629%" height="15" fill="rgb(240,47,40)" fg:x="234584" fg:w="470"/><text x="81.6133%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="81.4833%" y="341" width="0.0416%" height="15" fill="rgb(234,166,26)" fg:x="235054" fg:w="120"/><text x="81.7762%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="81.5249%" y="341" width="0.1629%" height="15" fill="rgb(244,125,51)" fg:x="235174" fg:w="470"/><text x="81.8178%" y="351.50"></text></g><g><title>memset (166 instructions, 0.06%)</title><rect x="81.6878%" y="325" width="0.0575%" height="15" fill="rgb(229,171,11)" fg:x="235644" fg:w="166"/><text x="81.9808%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="81.7454%" y="325" width="1.7281%" height="15" fill="rgb(224,38,45)" fg:x="235810" fg:w="4985"/><text x="82.0383%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (5,439 instructions, 1.89%)</title><rect x="81.6878%" y="341" width="1.8855%" height="15" fill="rgb(237,27,7)" fg:x="235644" fg:w="5439"/><text x="81.9808%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;u8&gt; as ic_certified_map::rbtree::AsHashTree&gt;::root_hash (6,895 instructions, 2.39%)</title><rect x="81.2448%" y="357" width="2.3902%" height="15" fill="rgb(216,52,7)" fg:x="234366" fg:w="6895"/><text x="81.5377%" y="367.50">&lt;..</text></g><g><title>memset (218 instructions, 0.08%)</title><rect x="83.6350%" y="341" width="0.0756%" height="15" fill="rgb(243,11,11)" fg:x="241261" fg:w="218"/><text x="83.9280%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.7106%" y="341" width="0.1629%" height="15" fill="rgb(253,167,20)" fg:x="241479" fg:w="470"/><text x="84.0035%" y="351.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="83.8735%" y="341" width="0.0416%" height="15" fill="rgb(215,207,5)" fg:x="241949" fg:w="120"/><text x="84.1665%" y="351.50"></text></g><g><title>memcpy (470 instructions, 0.16%)</title><rect x="83.9151%" y="341" width="0.1629%" height="15" fill="rgb(252,127,31)" fg:x="242069" fg:w="470"/><text x="84.2081%" y="351.50"></text></g><g><title>memset (56 instructions, 0.02%)</title><rect x="84.0780%" y="325" width="0.0194%" height="15" fill="rgb(209,106,27)" fg:x="242539" fg:w="56"/><text x="84.3710%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="84.0974%" y="325" width="1.7281%" height="15" fill="rgb(214,220,18)" fg:x="242595" fg:w="4985"/><text x="84.3904%" y="335.50"></text></g><g><title>sha2::sha256::compress256 (4,985 instructions, 1.73%)</title><rect x="85.8255%" y="325" width="1.7281%" height="15" fill="rgb(237,89,12)" fg:x="247580" fg:w="4985"/><text x="86.1185%" y="335.50"></text></g><g><title>&lt;digest::core_api::ct_variable::CtVariableCoreWrapper&lt;T,OutSize,O&gt; as digest::core_api::FixedOutputCore&gt;::finalize_fixed_core (10,350 instructions, 3.59%)</title><rect x="84.0780%" y="341" width="3.5879%" height="15" fill="rgb(209,167,36)" fg:x="242539" fg:w="10350"/><text x="84.3710%" y="351.50">&lt;di..</text></g><g><title>ic_certified_map::hashtree::labeled_hash (11,859 instructions, 4.11%)</title><rect x="83.6350%" y="357" width="4.1110%" height="15" fill="rgb(243,45,22)" fg:x="241261" fg:w="11859"/><text x="83.9280%" y="367.50">ic_..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.7460%" y="341" width="0.0284%" height="15" fill="rgb(239,2,46)" fg:x="253120" fg:w="82"/><text x="88.0390%" y="351.50"></text></g><g><title>memcpy (320 instructions, 0.11%)</title><rect x="87.7744%" y="341" width="0.1109%" height="15" fill="rgb(241,101,0)" fg:x="253202" fg:w="320"/><text x="88.0674%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="87.8854%" y="341" width="0.0284%" height="15" fill="rgb(244,34,31)" fg:x="253522" fg:w="82"/><text x="88.1783%" y="351.50"></text></g><g><title>ic_certified_map::rbtree::three_way_fork (780 instructions, 0.27%)</title><rect x="87.7460%" y="357" width="0.2704%" height="15" fill="rgb(248,23,22)" fg:x="253120" fg:w="780"/><text x="88.0390%" y="367.50"></text></g><g><title>ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}} (247,448 instructions, 85.78%)</title><rect x="2.2976%" y="373" width="85.7798%" height="15" fill="rgb(218,27,48)" fg:x="6628" fg:w="247448"/><text x="2.5906%" y="383.50">ic_certified_map::rbtree::RbTree&lt;K,V&gt;::lookup_and_build_witness::go::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (82 instructions, 0.03%)</title><rect x="88.0774%" y="277" width="0.0284%" height="15" fill="rgb(232,78,1)" fg:x="254076" fg:w="82"/><text x="88.3704%" y="287.50"></text></g><g><title>memcpy (195 instructions, 0.07%)</title><rect x="88.1058%" y="277" width="0.0676%" height="15" fill="rgb(233,169,12)" fg:x="254158" fg:w="195"/><text x="88.3988%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="88.1734%" y="277" width="0.0281%" height="15" fill="rgb(225,222,54)" fg:x="254353" fg:w="81"/><text x="88.4664%" y="287.50"></text></g><g><title>__rust_realloc (444 instructions, 0.15%)</title><rect x="88.0774%" y="293" width="0.1539%" height="15" fill="rgb(245,126,29)" fg:x="254076" fg:w="444"/><text x="88.3704%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (479 instructions, 0.17%)</title><rect x="88.0774%" y="309" width="0.1660%" height="15" fill="rgb(241,63,48)" fg:x="254076" fg:w="479"/><text x="88.3704%" y="319.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.2688%" y="293" width="0.0277%" height="15" fill="rgb(235,126,38)" fg:x="254628" fg:w="80"/><text x="88.5617%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.2688%" y="309" width="0.0399%" height="15" fill="rgb(232,96,49)" fg:x="254628" fg:w="115"/><text x="88.5617%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (740 instructions, 0.26%)</title><rect x="88.0774%" y="325" width="0.2565%" height="15" fill="rgb(211,146,40)" fg:x="254076" fg:w="740"/><text x="88.3704%" y="335.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.3339%" y="325" width="0.0773%" height="15" fill="rgb(247,93,44)" fg:x="254816" fg:w="223"/><text x="88.6269%" y="335.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (1,042 instructions, 0.36%)</title><rect x="88.0774%" y="341" width="0.3612%" height="15" fill="rgb(251,41,49)" fg:x="254076" fg:w="1042"/><text x="88.3704%" y="351.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.4653%" y="309" width="0.0277%" height="15" fill="rgb(218,155,12)" fg:x="255195" fg:w="80"/><text x="88.7583%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.4653%" y="325" width="0.0399%" height="15" fill="rgb(221,161,30)" fg:x="255195" fg:w="115"/><text x="88.7583%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.4653%" y="341" width="0.0652%" height="15" fill="rgb(221,179,11)" fg:x="255195" fg:w="188"/><text x="88.7583%" y="351.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.5305%" y="309" width="0.1019%" height="15" fill="rgb(224,170,48)" fg:x="255383" fg:w="294"/><text x="88.8235%" y="319.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.5305%" y="325" width="0.1251%" height="15" fill="rgb(223,117,5)" fg:x="255383" fg:w="361"/><text x="88.8235%" y="335.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="88.6823%" y="277" width="0.0277%" height="15" fill="rgb(209,52,20)" fg:x="255821" fg:w="80"/><text x="88.9753%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="88.6823%" y="293" width="0.0399%" height="15" fill="rgb(209,19,41)" fg:x="255821" fg:w="115"/><text x="88.9753%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="88.6823%" y="309" width="0.0652%" height="15" fill="rgb(210,177,12)" fg:x="255821" fg:w="188"/><text x="88.9753%" y="319.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="88.7475%" y="277" width="0.1019%" height="15" fill="rgb(211,159,37)" fg:x="256009" fg:w="294"/><text x="89.0405%" y="287.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="88.7475%" y="293" width="0.1251%" height="15" fill="rgb(209,20,2)" fg:x="256009" fg:w="361"/><text x="89.0405%" y="303.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="88.8993%" y="261" width="0.0773%" height="15" fill="rgb(244,3,46)" fg:x="256447" fg:w="223"/><text x="89.1923%" y="271.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="88.8993%" y="277" width="0.1005%" height="15" fill="rgb(220,94,38)" fg:x="256447" fg:w="290"/><text x="89.1923%" y="287.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.0266%" y="197" width="0.0277%" height="15" fill="rgb(253,14,31)" fg:x="256814" fg:w="80"/><text x="89.3195%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.0266%" y="213" width="0.0399%" height="15" fill="rgb(234,176,13)" fg:x="256814" fg:w="115"/><text x="89.3195%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.0266%" y="229" width="0.0652%" height="15" fill="rgb(218,62,25)" fg:x="256814" fg:w="188"/><text x="89.3195%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.0917%" y="229" width="0.0773%" height="15" fill="rgb(216,124,40)" fg:x="257002" fg:w="223"/><text x="89.3847%" y="239.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (483 instructions, 0.17%)</title><rect x="89.0266%" y="245" width="0.1674%" height="15" fill="rgb(228,170,12)" fg:x="256814" fg:w="483"/><text x="89.3195%" y="255.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.2207%" y="213" width="0.1019%" height="15" fill="rgb(231,226,5)" fg:x="257374" fg:w="294"/><text x="89.5136%" y="223.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.2207%" y="229" width="0.1251%" height="15" fill="rgb(237,122,22)" fg:x="257374" fg:w="361"/><text x="89.5136%" y="239.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.3725%" y="197" width="0.0773%" height="15" fill="rgb(209,185,25)" fg:x="257812" fg:w="223"/><text x="89.6655%" y="207.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.3725%" y="213" width="0.1005%" height="15" fill="rgb(228,200,32)" fg:x="257812" fg:w="290"/><text x="89.6655%" y="223.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.4997%" y="181" width="0.1019%" height="15" fill="rgb(217,140,10)" fg:x="258179" fg:w="294"/><text x="89.7927%" y="191.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.4997%" y="197" width="0.1251%" height="15" fill="rgb(253,17,24)" fg:x="258179" fg:w="361"/><text x="89.7927%" y="207.50"></text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="89.6516%" y="117" width="0.0277%" height="15" fill="rgb(212,61,6)" fg:x="258617" fg:w="80"/><text x="89.9445%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="89.6516%" y="133" width="0.0399%" height="15" fill="rgb(205,14,25)" fg:x="258617" fg:w="115"/><text x="89.9445%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="89.6516%" y="149" width="0.0652%" height="15" fill="rgb(232,69,41)" fg:x="258617" fg:w="188"/><text x="89.9445%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.7167%" y="149" width="0.1019%" height="15" fill="rgb(241,106,47)" fg:x="258805" fg:w="294"/><text x="90.0097%" y="159.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (556 instructions, 0.19%)</title><rect x="89.6516%" y="165" width="0.1927%" height="15" fill="rgb(210,213,53)" fg:x="258617" fg:w="556"/><text x="89.9445%" y="175.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="89.8710%" y="133" width="0.0773%" height="15" fill="rgb(253,175,27)" fg:x="259250" fg:w="223"/><text x="90.1640%" y="143.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="89.8710%" y="149" width="0.1005%" height="15" fill="rgb(211,171,24)" fg:x="259250" fg:w="290"/><text x="90.1640%" y="159.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="89.9982%" y="117" width="0.1019%" height="15" fill="rgb(229,80,7)" fg:x="259617" fg:w="294"/><text x="90.2912%" y="127.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (361 instructions, 0.13%)</title><rect x="89.9982%" y="133" width="0.1251%" height="15" fill="rgb(212,46,39)" fg:x="259617" fg:w="361"/><text x="90.2912%" y="143.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.1501%" y="101" width="0.0773%" height="15" fill="rgb(240,80,45)" fg:x="260055" fg:w="223"/><text x="90.4430%" y="111.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.1501%" y="117" width="0.1005%" height="15" fill="rgb(253,177,40)" fg:x="260055" fg:w="290"/><text x="90.4430%" y="127.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.2773%" y="69" width="0.0773%" height="15" fill="rgb(249,200,15)" fg:x="260422" fg:w="223"/><text x="90.5703%" y="79.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.2773%" y="85" width="0.1005%" height="15" fill="rgb(217,78,26)" fg:x="260422" fg:w="290"/><text x="90.5703%" y="95.50"></text></g><g><title>memcpy (120 instructions, 0.04%)</title><rect x="90.4045%" y="53" width="0.0416%" height="15" fill="rgb(254,151,32)" fg:x="260789" fg:w="120"/><text x="90.6975%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (182 instructions, 0.06%)</title><rect x="90.4045%" y="69" width="0.0631%" height="15" fill="rgb(226,165,27)" fg:x="260789" fg:w="182"/><text x="90.6975%" y="79.50"></text></g><g><title>memcpy (30 instructions, 0.01%)</title><rect x="90.4676%" y="37" width="0.0104%" height="15" fill="rgb(250,206,4)" fg:x="260971" fg:w="30"/><text x="90.7606%" y="47.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (92 instructions, 0.03%)</title><rect x="90.4676%" y="53" width="0.0319%" height="15" fill="rgb(231,229,27)" fg:x="260971" fg:w="92"/><text x="90.7606%" y="63.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (178 instructions, 0.06%)</title><rect x="90.4676%" y="69" width="0.0617%" height="15" fill="rgb(239,217,8)" fg:x="260971" fg:w="178"/><text x="90.7606%" y="79.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.5612%" y="53" width="0.0773%" height="15" fill="rgb(225,204,27)" fg:x="261241" fg:w="223"/><text x="90.8542%" y="63.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.5612%" y="69" width="0.1005%" height="15" fill="rgb(230,56,32)" fg:x="261241" fg:w="290"/><text x="90.8542%" y="79.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (819 instructions, 0.28%)</title><rect x="90.4045%" y="85" width="0.2839%" height="15" fill="rgb(222,56,27)" fg:x="260789" fg:w="819"/><text x="90.6975%" y="95.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,275 instructions, 0.44%)</title><rect x="90.2773%" y="101" width="0.4420%" height="15" fill="rgb(253,108,27)" fg:x="260422" fg:w="1275"/><text x="90.5703%" y="111.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="90.7501%" y="85" width="0.0773%" height="15" fill="rgb(212,87,36)" fg:x="261786" fg:w="223"/><text x="91.0431%" y="95.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="90.7501%" y="101" width="0.1005%" height="15" fill="rgb(247,82,36)" fg:x="261786" fg:w="290"/><text x="91.0431%" y="111.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (1,731 instructions, 0.60%)</title><rect x="90.2773%" y="117" width="0.6001%" height="15" fill="rgb(222,143,9)" fg:x="260422" fg:w="1731"/><text x="90.5703%" y="127.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,187 instructions, 0.76%)</title><rect x="90.1501%" y="133" width="0.7581%" height="15" fill="rgb(238,162,48)" fg:x="260055" fg:w="2187"/><text x="90.4430%" y="143.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (2,714 instructions, 0.94%)</title><rect x="89.9982%" y="149" width="0.9408%" height="15" fill="rgb(221,59,43)" fg:x="259617" fg:w="2714"/><text x="90.2912%" y="159.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,170 instructions, 1.10%)</title><rect x="89.8710%" y="165" width="1.0989%" height="15" fill="rgb(205,166,41)" fg:x="259250" fg:w="3170"/><text x="90.1640%" y="175.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (3,892 instructions, 1.35%)</title><rect x="89.6516%" y="181" width="1.3492%" height="15" fill="rgb(241,186,40)" fg:x="258617" fg:w="3892"/><text x="89.9445%" y="191.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.0316%" y="165" width="0.0773%" height="15" fill="rgb(216,119,35)" fg:x="262598" fg:w="223"/><text x="91.3246%" y="175.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.0316%" y="181" width="0.1005%" height="15" fill="rgb(208,68,38)" fg:x="262598" fg:w="290"/><text x="91.3246%" y="191.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,348 instructions, 1.51%)</title><rect x="89.6516%" y="197" width="1.5073%" height="15" fill="rgb(217,113,1)" fg:x="258617" fg:w="4348"/><text x="89.9445%" y="207.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (4,875 instructions, 1.69%)</title><rect x="89.4997%" y="213" width="1.6900%" height="15" fill="rgb(242,153,3)" fg:x="258179" fg:w="4875"/><text x="89.7927%" y="223.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,331 instructions, 1.85%)</title><rect x="89.3725%" y="229" width="1.8480%" height="15" fill="rgb(229,76,35)" fg:x="257812" fg:w="5331"/><text x="89.6655%" y="239.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (5,858 instructions, 2.03%)</title><rect x="89.2207%" y="245" width="2.0307%" height="15" fill="rgb(229,125,34)" fg:x="257374" fg:w="5858"/><text x="89.5136%" y="255.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (6,507 instructions, 2.26%)</title><rect x="89.0266%" y="261" width="2.2557%" height="15" fill="rgb(238,179,36)" fg:x="256814" fg:w="6507"/><text x="89.3195%" y="271.50">&lt;..</text></g><g><title>__rust_realloc (80 instructions, 0.03%)</title><rect x="91.3131%" y="213" width="0.0277%" height="15" fill="rgb(244,183,19)" fg:x="263410" fg:w="80"/><text x="91.6061%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (115 instructions, 0.04%)</title><rect x="91.3131%" y="229" width="0.0399%" height="15" fill="rgb(216,85,49)" fg:x="263410" fg:w="115"/><text x="91.6061%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 instructions, 0.07%)</title><rect x="91.3131%" y="245" width="0.0652%" height="15" fill="rgb(208,161,47)" fg:x="263410" fg:w="188"/><text x="91.6061%" y="255.50"></text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.3783%" y="245" width="0.0773%" height="15" fill="rgb(233,210,18)" fg:x="263598" fg:w="223"/><text x="91.6712%" y="255.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (485 instructions, 0.17%)</title><rect x="91.3131%" y="261" width="0.1681%" height="15" fill="rgb(205,104,42)" fg:x="263410" fg:w="485"/><text x="91.6061%" y="271.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,158 instructions, 2.48%)</title><rect x="89.0266%" y="277" width="2.4814%" height="15" fill="rgb(248,90,43)" fg:x="256814" fg:w="7158"/><text x="89.3195%" y="287.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (7,614 instructions, 2.64%)</title><rect x="88.8993%" y="293" width="2.6395%" height="15" fill="rgb(206,198,11)" fg:x="256447" fg:w="7614"/><text x="89.1923%" y="303.50">&lt;..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,141 instructions, 2.82%)</title><rect x="88.7475%" y="309" width="2.8221%" height="15" fill="rgb(239,165,27)" fg:x="256009" fg:w="8141"/><text x="89.0405%" y="319.50">&lt;i..</text></g><g><title>memcpy (223 instructions, 0.08%)</title><rect x="91.6022%" y="293" width="0.0773%" height="15" fill="rgb(246,44,32)" fg:x="264244" fg:w="223"/><text x="91.8952%" y="303.50"></text></g><g><title>&lt;serde_bytes::bytes::Bytes as serde::ser::Serialize&gt;::serialize (290 instructions, 0.10%)</title><rect x="91.6022%" y="309" width="0.1005%" height="15" fill="rgb(252,65,42)" fg:x="264244" fg:w="290"/><text x="91.8952%" y="319.50"></text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (8,790 instructions, 3.05%)</title><rect x="88.6823%" y="325" width="3.0471%" height="15" fill="rgb(246,197,18)" fg:x="255821" fg:w="8790"/><text x="88.9753%" y="335.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (9,317 instructions, 3.23%)</title><rect x="88.5305%" y="341" width="3.2298%" height="15" fill="rgb(216,192,4)" fg:x="255383" fg:w="9317"/><text x="88.8235%" y="351.50">&lt;i..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,718 instructions, 3.72%)</title><rect x="88.0774%" y="357" width="3.7155%" height="15" fill="rgb(208,117,10)" fg:x="254076" fg:w="10718"/><text x="88.3704%" y="367.50">&lt;ic..</text></g><g><title>&lt;ic_certified_map::hashtree::HashTree as serde::ser::Serialize&gt;::serialize (10,807 instructions, 3.75%)</title><rect x="88.0774%" y="373" width="3.7463%" height="15" fill="rgb(240,61,47)" fg:x="254076" fg:w="10807"/><text x="88.3704%" y="383.50">&lt;ic..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8497%" y="69" width="0.0437%" height="15" fill="rgb(228,178,21)" fg:x="264958" fg:w="126"/><text x="92.1427%" y="79.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (148 instructions, 0.05%)</title><rect x="91.8463%" y="85" width="0.0513%" height="15" fill="rgb(219,96,54)" fg:x="264948" fg:w="148"/><text x="92.1392%" y="95.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.8993%" y="85" width="0.0437%" height="15" fill="rgb(250,177,24)" fg:x="265101" fg:w="126"/><text x="92.1923%" y="95.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (300 instructions, 0.10%)</title><rect x="91.8445%" y="101" width="0.1040%" height="15" fill="rgb(242,154,46)" fg:x="264943" fg:w="300"/><text x="92.1375%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="91.9485%" y="101" width="0.0437%" height="15" fill="rgb(226,176,29)" fg:x="265243" fg:w="126"/><text x="92.2415%" y="111.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (442 instructions, 0.15%)</title><rect x="91.8445%" y="117" width="0.1532%" height="15" fill="rgb(226,29,2)" fg:x="264943" fg:w="442"/><text x="92.1375%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="91.9995%" y="101" width="0.0218%" height="15" fill="rgb(237,104,14)" fg:x="265390" fg:w="63"/><text x="92.2925%" y="111.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (166 instructions, 0.06%)</title><rect x="91.9995%" y="117" width="0.0575%" height="15" fill="rgb(245,207,31)" fg:x="265390" fg:w="166"/><text x="92.2925%" y="127.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (634 instructions, 0.22%)</title><rect x="91.8428%" y="133" width="0.2198%" height="15" fill="rgb(229,211,45)" fg:x="264938" fg:w="634"/><text x="92.1358%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.0626%" y="117" width="0.0191%" height="15" fill="rgb(229,113,15)" fg:x="265572" fg:w="55"/><text x="92.3555%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.0816%" y="117" width="0.0218%" height="15" fill="rgb(237,147,15)" fg:x="265627" fg:w="63"/><text x="92.3746%" y="127.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.0626%" y="133" width="0.0700%" height="15" fill="rgb(244,120,12)" fg:x="265572" fg:w="202"/><text x="92.3555%" y="143.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (857 instructions, 0.30%)</title><rect x="91.8411%" y="149" width="0.2971%" height="15" fill="rgb(205,120,12)" fg:x="264933" fg:w="857"/><text x="92.1340%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.1382%" y="133" width="0.0191%" height="15" fill="rgb(231,26,45)" fg:x="265790" fg:w="55"/><text x="92.4311%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.1572%" y="133" width="0.0218%" height="15" fill="rgb(246,98,1)" fg:x="265845" fg:w="63"/><text x="92.4502%" y="143.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.1382%" y="149" width="0.0700%" height="15" fill="rgb(207,68,45)" fg:x="265790" fg:w="202"/><text x="92.4311%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,080 instructions, 0.37%)</title><rect x="91.8393%" y="165" width="0.3744%" height="15" fill="rgb(231,27,38)" fg:x="264928" fg:w="1080"/><text x="92.1323%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2137%" y="149" width="0.0191%" height="15" fill="rgb(214,223,3)" fg:x="266008" fg:w="55"/><text x="92.5067%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.2328%" y="149" width="0.0218%" height="15" fill="rgb(228,195,46)" fg:x="266063" fg:w="63"/><text x="92.5258%" y="159.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2137%" y="165" width="0.0700%" height="15" fill="rgb(231,100,42)" fg:x="266008" fg:w="202"/><text x="92.5067%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,303 instructions, 0.45%)</title><rect x="91.8376%" y="181" width="0.4517%" height="15" fill="rgb(236,53,4)" fg:x="264923" fg:w="1303"/><text x="92.1306%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.2893%" y="165" width="0.0191%" height="15" fill="rgb(230,152,12)" fg:x="266226" fg:w="55"/><text x="92.5823%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3084%" y="165" width="0.0218%" height="15" fill="rgb(226,101,19)" fg:x="266281" fg:w="63"/><text x="92.6013%" y="175.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.2893%" y="181" width="0.0700%" height="15" fill="rgb(250,149,32)" fg:x="266226" fg:w="202"/><text x="92.5823%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,521 instructions, 0.53%)</title><rect x="91.8376%" y="197" width="0.5273%" height="15" fill="rgb(232,178,12)" fg:x="264923" fg:w="1521"/><text x="92.1306%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.3666%" y="181" width="0.0191%" height="15" fill="rgb(246,151,17)" fg:x="266449" fg:w="55"/><text x="92.6596%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.3857%" y="181" width="0.0218%" height="15" fill="rgb(252,17,51)" fg:x="266504" fg:w="63"/><text x="92.6786%" y="191.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.3666%" y="197" width="0.0700%" height="15" fill="rgb(250,207,23)" fg:x="266449" fg:w="202"/><text x="92.6596%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,749 instructions, 0.61%)</title><rect x="91.8359%" y="213" width="0.6063%" height="15" fill="rgb(205,27,5)" fg:x="264918" fg:w="1749"/><text x="92.1288%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.4422%" y="197" width="0.0191%" height="15" fill="rgb(224,32,19)" fg:x="266667" fg:w="55"/><text x="92.7351%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.4612%" y="197" width="0.0218%" height="15" fill="rgb(247,214,40)" fg:x="266722" fg:w="63"/><text x="92.7542%" y="207.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.4422%" y="213" width="0.0700%" height="15" fill="rgb(239,199,17)" fg:x="266667" fg:w="202"/><text x="92.7351%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (1,972 instructions, 0.68%)</title><rect x="91.8341%" y="229" width="0.6836%" height="15" fill="rgb(251,159,9)" fg:x="264913" fg:w="1972"/><text x="92.1271%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5177%" y="213" width="0.0191%" height="15" fill="rgb(225,78,32)" fg:x="266885" fg:w="55"/><text x="92.8107%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.5368%" y="213" width="0.0218%" height="15" fill="rgb(206,97,47)" fg:x="266940" fg:w="63"/><text x="92.8298%" y="223.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5177%" y="229" width="0.0700%" height="15" fill="rgb(227,107,4)" fg:x="266885" fg:w="202"/><text x="92.8107%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,195 instructions, 0.76%)</title><rect x="91.8324%" y="245" width="0.7609%" height="15" fill="rgb(241,146,50)" fg:x="264908" fg:w="2195"/><text x="92.1254%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.5933%" y="229" width="0.0191%" height="15" fill="rgb(232,92,30)" fg:x="267103" fg:w="55"/><text x="92.8863%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6124%" y="229" width="0.0218%" height="15" fill="rgb(222,0,40)" fg:x="267158" fg:w="63"/><text x="92.9053%" y="239.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.5933%" y="245" width="0.0700%" height="15" fill="rgb(219,54,33)" fg:x="267103" fg:w="202"/><text x="92.8863%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,418 instructions, 0.84%)</title><rect x="91.8307%" y="261" width="0.8382%" height="15" fill="rgb(226,209,28)" fg:x="264903" fg:w="2418"/><text x="92.1236%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.6689%" y="245" width="0.0191%" height="15" fill="rgb(254,205,35)" fg:x="267321" fg:w="55"/><text x="92.9619%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.6879%" y="245" width="0.0218%" height="15" fill="rgb(230,159,3)" fg:x="267376" fg:w="63"/><text x="92.9809%" y="255.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.6689%" y="261" width="0.0700%" height="15" fill="rgb(232,190,24)" fg:x="267321" fg:w="202"/><text x="92.9619%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,636 instructions, 0.91%)</title><rect x="91.8307%" y="277" width="0.9138%" height="15" fill="rgb(217,227,44)" fg:x="264903" fg:w="2636"/><text x="92.1236%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.7462%" y="261" width="0.0191%" height="15" fill="rgb(236,211,1)" fg:x="267544" fg:w="55"/><text x="93.0392%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.7653%" y="261" width="0.0218%" height="15" fill="rgb(250,127,46)" fg:x="267599" fg:w="63"/><text x="93.0582%" y="271.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.7462%" y="277" width="0.0700%" height="15" fill="rgb(229,213,6)" fg:x="267544" fg:w="202"/><text x="93.0392%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (2,864 instructions, 0.99%)</title><rect x="91.8289%" y="293" width="0.9928%" height="15" fill="rgb(237,15,36)" fg:x="264898" fg:w="2864"/><text x="92.1219%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8218%" y="277" width="0.0191%" height="15" fill="rgb(213,131,41)" fg:x="267762" fg:w="55"/><text x="93.1147%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.8408%" y="277" width="0.0218%" height="15" fill="rgb(225,82,44)" fg:x="267817" fg:w="63"/><text x="93.1338%" y="287.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.8218%" y="293" width="0.0700%" height="15" fill="rgb(249,42,11)" fg:x="267762" fg:w="202"/><text x="93.1147%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,087 instructions, 1.07%)</title><rect x="91.8272%" y="309" width="1.0701%" height="15" fill="rgb(253,11,29)" fg:x="264893" fg:w="3087"/><text x="92.1202%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.8973%" y="293" width="0.0191%" height="15" fill="rgb(206,8,54)" fg:x="267980" fg:w="55"/><text x="93.1903%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9164%" y="293" width="0.0218%" height="15" fill="rgb(222,186,2)" fg:x="268035" fg:w="63"/><text x="93.2094%" y="303.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.8973%" y="309" width="0.0700%" height="15" fill="rgb(221,206,53)" fg:x="267980" fg:w="202"/><text x="93.1903%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,305 instructions, 1.15%)</title><rect x="91.8272%" y="325" width="1.1457%" height="15" fill="rgb(230,150,21)" fg:x="264893" fg:w="3305"/><text x="92.1202%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="92.9746%" y="309" width="0.0191%" height="15" fill="rgb(253,202,10)" fg:x="268203" fg:w="55"/><text x="93.2676%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="92.9937%" y="309" width="0.0218%" height="15" fill="rgb(238,109,40)" fg:x="268258" fg:w="63"/><text x="93.2867%" y="319.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="92.9746%" y="325" width="0.0700%" height="15" fill="rgb(247,120,22)" fg:x="268203" fg:w="202"/><text x="93.2676%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,533 instructions, 1.22%)</title><rect x="91.8255%" y="341" width="1.2247%" height="15" fill="rgb(207,43,30)" fg:x="264888" fg:w="3533"/><text x="92.1184%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.0502%" y="325" width="0.0191%" height="15" fill="rgb(213,211,24)" fg:x="268421" fg:w="55"/><text x="93.3432%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.0693%" y="325" width="0.0218%" height="15" fill="rgb(239,73,39)" fg:x="268476" fg:w="63"/><text x="93.3622%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.0502%" y="341" width="0.0700%" height="15" fill="rgb(245,182,19)" fg:x="268421" fg:w="202"/><text x="93.3432%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,756 instructions, 1.30%)</title><rect x="91.8237%" y="357" width="1.3020%" height="15" fill="rgb(247,143,26)" fg:x="264883" fg:w="3756"/><text x="92.1167%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.1258%" y="341" width="0.0191%" height="15" fill="rgb(228,191,23)" fg:x="268639" fg:w="55"/><text x="93.4187%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::insert_large_chunk (63 instructions, 0.02%)</title><rect x="93.1448%" y="341" width="0.0218%" height="15" fill="rgb(253,165,31)" fg:x="268694" fg:w="63"/><text x="93.4378%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (202 instructions, 0.07%)</title><rect x="93.1258%" y="357" width="0.0700%" height="15" fill="rgb(234,138,20)" fg:x="268639" fg:w="202"/><text x="93.4187%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;ic_certified_map::hashtree::HashTree&gt; (3,974 instructions, 1.38%)</title><rect x="91.8237%" y="373" width="1.3776%" height="15" fill="rgb(218,191,29)" fg:x="264883" fg:w="3974"/><text x="92.1167%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::unlink_large_chunk (55 instructions, 0.02%)</title><rect x="93.2013%" y="357" width="0.0191%" height="15" fill="rgb(221,157,19)" fg:x="268857" fg:w="55"/><text x="93.4943%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (163 instructions, 0.06%)</title><rect x="93.2013%" y="373" width="0.0565%" height="15" fill="rgb(237,26,42)" fg:x="268857" fg:w="163"/><text x="93.4943%" y="383.50"></text></g><g><title>candid::ser::IDLBuilder::new (94 instructions, 0.03%)</title><rect x="93.2579%" y="373" width="0.0326%" height="15" fill="rgb(220,163,24)" fg:x="269020" fg:w="94"/><text x="93.5508%" y="383.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (50 instructions, 0.02%)</title><rect x="93.2904%" y="357" width="0.0173%" height="15" fill="rgb(242,115,20)" fg:x="269114" fg:w="50"/><text x="93.5834%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.3078%" y="357" width="0.0263%" height="15" fill="rgb(210,206,9)" fg:x="269164" fg:w="76"/><text x="93.6007%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.3383%" y="325" width="0.0184%" height="15" fill="rgb(208,71,17)" fg:x="269252" fg:w="53"/><text x="93.6312%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.3567%" y="325" width="0.1262%" height="15" fill="rgb(233,7,5)" fg:x="269305" fg:w="364"/><text x="93.6496%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.4828%" y="325" width="0.0250%" height="15" fill="rgb(207,92,33)" fg:x="269669" fg:w="72"/><text x="93.7758%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.3383%" y="341" width="0.2517%" height="15" fill="rgb(218,87,9)" fg:x="269252" fg:w="726"/><text x="93.6312%" y="351.50"></text></g><g><title>candid::types::internal::env_add (958 instructions, 0.33%)</title><rect x="93.3341%" y="357" width="0.3321%" height="15" fill="rgb(219,47,37)" fg:x="269240" fg:w="958"/><text x="93.6271%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6662%" y="357" width="0.0263%" height="15" fill="rgb(221,152,34)" fg:x="270198" fg:w="76"/><text x="93.9592%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="93.6926%" y="357" width="0.0263%" height="15" fill="rgb(235,176,21)" fg:x="270274" fg:w="76"/><text x="93.9855%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="93.7231%" y="325" width="0.0184%" height="15" fill="rgb(232,212,21)" fg:x="270362" fg:w="53"/><text x="94.0160%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="93.7414%" y="325" width="0.1262%" height="15" fill="rgb(245,82,39)" fg:x="270415" fg:w="364"/><text x="94.0344%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="93.8676%" y="325" width="0.0250%" height="15" fill="rgb(241,52,51)" fg:x="270779" fg:w="72"/><text x="94.1606%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="93.7231%" y="341" width="0.2517%" height="15" fill="rgb(219,91,24)" fg:x="270362" fg:w="726"/><text x="94.0160%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="93.9747%" y="341" width="0.2128%" height="15" fill="rgb(241,142,12)" fg:x="271088" fg:w="614"/><text x="94.2677%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="94.1876%" y="325" width="0.0281%" height="15" fill="rgb(230,27,9)" fg:x="271702" fg:w="81"/><text x="94.4806%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="94.1876%" y="341" width="0.0374%" height="15" fill="rgb(249,181,32)" fg:x="271702" fg:w="108"/><text x="94.4806%" y="351.50"></text></g><g><title>candid::types::internal::env_add (1,644 instructions, 0.57%)</title><rect x="93.7189%" y="357" width="0.5699%" height="15" fill="rgb(230,107,3)" fg:x="270350" fg:w="1644"/><text x="94.0119%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.2888%" y="309" width="0.0184%" height="15" fill="rgb(246,204,14)" fg:x="271994" fg:w="53"/><text x="94.5818%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.3072%" y="309" width="0.0534%" height="15" fill="rgb(213,192,47)" fg:x="272047" fg:w="154"/><text x="94.6002%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.2888%" y="325" width="0.0884%" height="15" fill="rgb(240,44,36)" fg:x="271994" fg:w="255"/><text x="94.5818%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.4511%" y="309" width="0.0184%" height="15" fill="rgb(244,209,38)" fg:x="272462" fg:w="53"/><text x="94.7440%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.4694%" y="309" width="0.0534%" height="15" fill="rgb(219,34,37)" fg:x="272515" fg:w="154"/><text x="94.7624%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.4511%" y="325" width="0.0884%" height="15" fill="rgb(210,28,6)" fg:x="272462" fg:w="255"/><text x="94.7440%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (936 instructions, 0.32%)</title><rect x="94.2888%" y="341" width="0.3245%" height="15" fill="rgb(244,110,52)" fg:x="271994" fg:w="936"/><text x="94.5818%" y="351.50"></text></g><g><title>candid::types::internal::env_id (1,270 instructions, 0.44%)</title><rect x="94.2888%" y="357" width="0.4403%" height="15" fill="rgb(254,124,47)" fg:x="271994" fg:w="1270"/><text x="94.5818%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.7291%" y="325" width="0.0263%" height="15" fill="rgb(254,110,13)" fg:x="273264" fg:w="76"/><text x="95.0220%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="94.7291%" y="341" width="0.0381%" height="15" fill="rgb(252,57,21)" fg:x="273264" fg:w="110"/><text x="95.0220%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="94.7291%" y="357" width="0.0617%" height="15" fill="rgb(242,60,45)" fg:x="273264" fg:w="178"/><text x="95.0220%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (78 instructions, 0.03%)</title><rect x="94.7991%" y="309" width="0.0270%" height="15" fill="rgb(234,49,30)" fg:x="273466" fg:w="78"/><text x="95.0921%" y="319.50"></text></g><g><title>candid::types::internal::unroll (153 instructions, 0.05%)</title><rect x="94.7991%" y="325" width="0.0530%" height="15" fill="rgb(218,98,6)" fg:x="273466" fg:w="153"/><text x="95.0921%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="94.8521%" y="325" width="0.0263%" height="15" fill="rgb(220,174,29)" fg:x="273619" fg:w="76"/><text x="95.1451%" y="335.50"></text></g><g><title>candid::types::internal::unroll (308 instructions, 0.11%)</title><rect x="94.7991%" y="341" width="0.1068%" height="15" fill="rgb(236,163,23)" fg:x="273466" fg:w="308"/><text x="95.0921%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="94.9059%" y="293" width="0.0184%" height="15" fill="rgb(242,114,45)" fg:x="273774" fg:w="53"/><text x="95.1988%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="94.9242%" y="293" width="0.0534%" height="15" fill="rgb(232,10,53)" fg:x="273827" fg:w="154"/><text x="95.2172%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="94.9059%" y="309" width="0.0884%" height="15" fill="rgb(245,108,29)" fg:x="273774" fg:w="255"/><text x="95.1988%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="94.9059%" y="325" width="0.1622%" height="15" fill="rgb(240,89,53)" fg:x="273774" fg:w="468"/><text x="95.1988%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.0681%" y="325" width="0.0263%" height="15" fill="rgb(226,60,45)" fg:x="274242" fg:w="76"/><text x="95.3611%" y="335.50"></text></g><g><title>memset (136 instructions, 0.05%)</title><rect x="95.0944%" y="325" width="0.0471%" height="15" fill="rgb(230,41,44)" fg:x="274318" fg:w="136"/><text x="95.3874%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (986 instructions, 0.34%)</title><rect x="94.9059%" y="341" width="0.3418%" height="15" fill="rgb(230,26,20)" fg:x="273774" fg:w="986"/><text x="95.1988%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.2477%" y="309" width="0.0263%" height="15" fill="rgb(237,170,32)" fg:x="274760" fg:w="76"/><text x="95.5406%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.2477%" y="325" width="0.0381%" height="15" fill="rgb(212,35,42)" fg:x="274760" fg:w="110"/><text x="95.5406%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (178 instructions, 0.06%)</title><rect x="95.2477%" y="341" width="0.0617%" height="15" fill="rgb(227,31,34)" fg:x="274760" fg:w="178"/><text x="95.5406%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="95.3094%" y="293" width="0.0184%" height="15" fill="rgb(216,19,18)" fg:x="274938" fg:w="53"/><text x="95.6023%" y="303.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (79 instructions, 0.03%)</title><rect x="95.3094%" y="309" width="0.0274%" height="15" fill="rgb(211,133,42)" fg:x="274938" fg:w="79"/><text x="95.6023%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (292 instructions, 0.10%)</title><rect x="95.3094%" y="325" width="0.1012%" height="15" fill="rgb(244,66,13)" fg:x="274938" fg:w="292"/><text x="95.6023%" y="335.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (437 instructions, 0.15%)</title><rect x="95.3094%" y="341" width="0.1515%" height="15" fill="rgb(218,185,50)" fg:x="274938" fg:w="437"/><text x="95.6023%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.4609%" y="293" width="0.0263%" height="15" fill="rgb(219,149,13)" fg:x="275375" fg:w="76"/><text x="95.7538%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.4609%" y="309" width="0.0381%" height="15" fill="rgb(221,125,0)" fg:x="275375" fg:w="110"/><text x="95.7538%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="95.4609%" y="325" width="0.0607%" height="15" fill="rgb(247,126,27)" fg:x="275375" fg:w="175"/><text x="95.7538%" y="335.50"></text></g><g><title>leb128::write::signed (227 instructions, 0.08%)</title><rect x="95.4609%" y="341" width="0.0787%" height="15" fill="rgb(250,138,30)" fg:x="275375" fg:w="227"/><text x="95.7538%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (50 instructions, 0.02%)</title><rect x="95.5396%" y="341" width="0.0173%" height="15" fill="rgb(230,151,9)" fg:x="275602" fg:w="50"/><text x="95.8325%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="95.5569%" y="309" width="0.0281%" height="15" fill="rgb(233,80,38)" fg:x="275652" fg:w="81"/><text x="95.8499%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (108 instructions, 0.04%)</title><rect x="95.5569%" y="325" width="0.0374%" height="15" fill="rgb(232,68,43)" fg:x="275652" fg:w="108"/><text x="95.8499%" y="335.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (78 instructions, 0.03%)</title><rect x="95.5943%" y="325" width="0.0270%" height="15" fill="rgb(254,5,50)" fg:x="275760" fg:w="78"/><text x="95.8873%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (218 instructions, 0.08%)</title><rect x="95.5569%" y="341" width="0.0756%" height="15" fill="rgb(225,45,5)" fg:x="275652" fg:w="218"/><text x="95.8499%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (2,642 instructions, 0.92%)</title><rect x="94.7908%" y="357" width="0.9159%" height="15" fill="rgb(239,22,3)" fg:x="273442" fg:w="2642"/><text x="95.0837%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="95.7105%" y="325" width="0.0263%" height="15" fill="rgb(243,129,0)" fg:x="276095" fg:w="76"/><text x="96.0034%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="95.7105%" y="341" width="0.0381%" height="15" fill="rgb(223,164,0)" fg:x="276095" fg:w="110"/><text x="96.0034%" y="351.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="95.7711%" y="325" width="0.0350%" height="15" fill="rgb(221,46,29)" fg:x="276270" fg:w="101"/><text x="96.0641%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="95.7711%" y="341" width="0.0471%" height="15" fill="rgb(205,97,47)" fg:x="276270" fg:w="136"/><text x="96.0641%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (384 instructions, 0.13%)</title><rect x="95.7105%" y="357" width="0.1331%" height="15" fill="rgb(249,14,8)" fg:x="276095" fg:w="384"/><text x="96.0034%" y="367.50"></text></g><g><title>memcpy (294 instructions, 0.10%)</title><rect x="95.8436%" y="357" width="0.1019%" height="15" fill="rgb(216,77,3)" fg:x="276479" fg:w="294"/><text x="96.1365%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.0436%" y="325" width="0.0184%" height="15" fill="rgb(206,168,54)" fg:x="277056" fg:w="53"/><text x="96.3366%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (364 instructions, 0.13%)</title><rect x="96.0620%" y="325" width="0.1262%" height="15" fill="rgb(236,3,41)" fg:x="277109" fg:w="364"/><text x="96.3549%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (72 instructions, 0.02%)</title><rect x="96.1882%" y="325" width="0.0250%" height="15" fill="rgb(231,132,24)" fg:x="277473" fg:w="72"/><text x="96.4811%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (726 instructions, 0.25%)</title><rect x="96.0436%" y="341" width="0.2517%" height="15" fill="rgb(227,221,40)" fg:x="277056" fg:w="726"/><text x="96.3366%" y="351.50"></text></g><g><title>memcmp (614 instructions, 0.21%)</title><rect x="96.2953%" y="341" width="0.2128%" height="15" fill="rgb(233,151,11)" fg:x="277782" fg:w="614"/><text x="96.5882%" y="351.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,512 instructions, 0.52%)</title><rect x="96.0394%" y="357" width="0.5241%" height="15" fill="rgb(247,81,35)" fg:x="277044" fg:w="1512"/><text x="96.3324%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="96.5636%" y="309" width="0.0184%" height="15" fill="rgb(243,128,48)" fg:x="278556" fg:w="53"/><text x="96.8566%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="96.5820%" y="309" width="0.0534%" height="15" fill="rgb(253,16,10)" fg:x="278609" fg:w="154"/><text x="96.8749%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="96.5636%" y="325" width="0.0884%" height="15" fill="rgb(228,67,27)" fg:x="278556" fg:w="255"/><text x="96.8566%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="96.5636%" y="341" width="0.1622%" height="15" fill="rgb(231,105,25)" fg:x="278556" fg:w="468"/><text x="96.8566%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::build_type (561 instructions, 0.19%)</title><rect x="96.5636%" y="357" width="0.1945%" height="15" fill="rgb(213,166,47)" fg:x="278556" fg:w="561"/><text x="96.8566%" y="367.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.7619%" y="325" width="0.0350%" height="15" fill="rgb(209,27,10)" fg:x="279128" fg:w="101"/><text x="97.0548%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.7619%" y="341" width="0.0471%" height="15" fill="rgb(241,44,30)" fg:x="279128" fg:w="136"/><text x="97.0548%" y="351.50"></text></g><g><title>__rust_realloc (101 instructions, 0.04%)</title><rect x="96.8343%" y="325" width="0.0350%" height="15" fill="rgb(223,216,15)" fg:x="279337" fg:w="101"/><text x="97.1273%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (136 instructions, 0.05%)</title><rect x="96.8343%" y="341" width="0.0471%" height="15" fill="rgb(227,14,7)" fg:x="279337" fg:w="136"/><text x="97.1273%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (418 instructions, 0.14%)</title><rect x="96.7619%" y="357" width="0.1449%" height="15" fill="rgb(237,14,5)" fg:x="279128" fg:w="418"/><text x="97.0548%" y="367.50"></text></g><g><title>memcpy (3,941 instructions, 1.37%)</title><rect x="96.9068%" y="357" width="1.3662%" height="15" fill="rgb(232,14,36)" fg:x="279546" fg:w="3941"/><text x="97.1997%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::arg (14,580 instructions, 5.05%)</title><rect x="93.2904%" y="373" width="5.0543%" height="15" fill="rgb(234,0,38)" fg:x="269114" fg:w="14580"/><text x="93.5834%" y="383.50">candi..</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="98.3447%" y="373" width="0.0302%" height="15" fill="rgb(207,170,14)" fg:x="283694" fg:w="87"/><text x="98.6377%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (120 instructions, 0.04%)</title><rect x="98.3749%" y="373" width="0.0416%" height="15" fill="rgb(252,45,13)" fg:x="283781" fg:w="120"/><text x="98.6678%" y="383.50"></text></g><g><title>std::io::Write::write_all (32 instructions, 0.01%)</title><rect x="98.4165%" y="357" width="0.0111%" height="15" fill="rgb(213,142,7)" fg:x="283901" fg:w="32"/><text x="98.7094%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (118 instructions, 0.04%)</title><rect x="98.4276%" y="325" width="0.0409%" height="15" fill="rgb(216,157,23)" fg:x="283933" fg:w="118"/><text x="98.7205%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (152 instructions, 0.05%)</title><rect x="98.4276%" y="341" width="0.0527%" height="15" fill="rgb(212,145,33)" fg:x="283933" fg:w="152"/><text x="98.7205%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (217 instructions, 0.08%)</title><rect x="98.4276%" y="357" width="0.0752%" height="15" fill="rgb(233,26,13)" fg:x="283933" fg:w="217"/><text x="98.7205%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.5028%" y="357" width="0.0263%" height="15" fill="rgb(219,196,19)" fg:x="284150" fg:w="76"/><text x="98.7958%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5291%" y="357" width="0.0156%" height="15" fill="rgb(246,56,21)" fg:x="284226" fg:w="45"/><text x="98.8221%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="98.5447%" y="357" width="0.0156%" height="15" fill="rgb(222,28,53)" fg:x="284271" fg:w="45"/><text x="98.8377%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="98.5603%" y="357" width="0.0191%" height="15" fill="rgb(224,5,27)" fg:x="284316" fg:w="55"/><text x="98.8533%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.5794%" y="309" width="0.0184%" height="15" fill="rgb(220,153,33)" fg:x="284371" fg:w="53"/><text x="98.8724%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.5978%" y="309" width="0.0534%" height="15" fill="rgb(226,58,19)" fg:x="284424" fg:w="154"/><text x="98.8907%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="98.5794%" y="325" width="0.0884%" height="15" fill="rgb(239,112,23)" fg:x="284371" fg:w="255"/><text x="98.8724%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="98.5794%" y="341" width="0.1622%" height="15" fill="rgb(251,213,20)" fg:x="284371" fg:w="468"/><text x="98.8724%" y="351.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::malloc (76 instructions, 0.03%)</title><rect x="98.7416%" y="309" width="0.0263%" height="15" fill="rgb(215,181,21)" fg:x="284839" fg:w="76"/><text x="99.0346%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (110 instructions, 0.04%)</title><rect x="98.7416%" y="325" width="0.0381%" height="15" fill="rgb(240,8,35)" fg:x="284839" fg:w="110"/><text x="99.0346%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (175 instructions, 0.06%)</title><rect x="98.7416%" y="341" width="0.0607%" height="15" fill="rgb(232,203,3)" fg:x="284839" fg:w="175"/><text x="99.0346%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 instructions, 0.02%)</title><rect x="98.8602%" y="309" width="0.0184%" height="15" fill="rgb(214,202,43)" fg:x="285181" fg:w="53"/><text x="99.1532%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (154 instructions, 0.05%)</title><rect x="98.8786%" y="309" width="0.0534%" height="15" fill="rgb(254,35,11)" fg:x="285234" fg:w="154"/><text x="99.1715%" y="319.50"></text></g><g><title>&lt;candid::types::internal::Type as core::hash::Hash&gt;::hash (255 instructions, 0.09%)</title><rect x="98.8602%" y="325" width="0.0884%" height="15" fill="rgb(239,173,13)" fg:x="285181" fg:w="255"/><text x="99.1532%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (468 instructions, 0.16%)</title><rect x="98.8602%" y="341" width="0.1622%" height="15" fill="rgb(220,141,0)" fg:x="285181" fg:w="468"/><text x="99.1532%" y="351.50"></text></g><g><title>candid::ser::TypeSerialize::encode (1,440 instructions, 0.50%)</title><rect x="98.5794%" y="357" width="0.4992%" height="15" fill="rgb(210,98,12)" fg:x="284371" fg:w="1440"/><text x="98.8724%" y="367.50"></text></g><g><title>memcpy (45 instructions, 0.02%)</title><rect x="99.0786%" y="357" width="0.0156%" height="15" fill="rgb(254,153,22)" fg:x="285811" fg:w="45"/><text x="99.3716%" y="367.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (55 instructions, 0.02%)</title><rect x="99.0942%" y="357" width="0.0191%" height="15" fill="rgb(247,223,17)" fg:x="285856" fg:w="55"/><text x="99.3872%" y="367.50"></text></g><g><title>std::io::Write::write_all (34 instructions, 0.01%)</title><rect x="99.1132%" y="357" width="0.0118%" height="15" fill="rgb(246,56,7)" fg:x="285911" fg:w="34"/><text x="99.4062%" y="367.50"></text></g><g><title>std::io::Write::write_all (764 instructions, 0.26%)</title><rect x="99.1250%" y="357" width="0.2648%" height="15" fill="rgb(240,226,12)" fg:x="285945" fg:w="764"/><text x="99.4180%" y="367.50"></text></g><g><title>candid::ser::IDLBuilder::serialize (3,190 instructions, 1.11%)</title><rect x="98.4165%" y="373" width="1.1058%" height="15" fill="rgb(205,87,46)" fg:x="283901" fg:w="3190"/><text x="98.7094%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.5223%" y="373" width="0.0281%" height="15" fill="rgb(245,214,51)" fg:x="287091" fg:w="81"/><text x="99.8153%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (123 instructions, 0.04%)</title><rect x="99.5504%" y="373" width="0.0426%" height="15" fill="rgb(223,172,33)" fg:x="287172" fg:w="123"/><text x="99.8434%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (112 instructions, 0.04%)</title><rect x="99.5968%" y="373" width="0.0388%" height="15" fill="rgb(227,203,34)" fg:x="287306" fg:w="112"/><text x="99.8898%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.6450%" y="373" width="0.0281%" height="15" fill="rgb(248,143,44)" fg:x="287445" fg:w="81"/><text x="99.9380%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (100 instructions, 0.03%)</title><rect x="99.6731%" y="373" width="0.0347%" height="15" fill="rgb(226,162,5)" fg:x="287526" fg:w="100"/><text x="99.9661%" y="383.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (87 instructions, 0.03%)</title><rect x="99.7078%" y="373" width="0.0302%" height="15" fill="rgb(211,143,1)" fg:x="287626" fg:w="87"/><text x="100.0007%" y="383.50"></text></g><g><title>certified_map::witness_3_::{{closure}} (287,944 instructions, 99.82%)</title><rect x="0.0721%" y="389" width="99.8180%" height="15" fill="rgb(224,96,15)" fg:x="208" fg:w="287944"/><text x="0.3651%" y="399.50">certified_map::witness_3_::{{closure}}</text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (81 instructions, 0.03%)</title><rect x="99.8943%" y="389" width="0.0281%" height="15" fill="rgb(222,4,38)" fg:x="288164" fg:w="81"/><text x="100.1872%" y="399.50"></text></g><g><title>dlmalloc::dlmalloc::Dlmalloc&lt;A&gt;::free (126 instructions, 0.04%)</title><rect x="99.9223%" y="389" width="0.0437%" height="15" fill="rgb(253,228,15)" fg:x="288245" fg:w="126"/><text x="100.2153%" y="399.50"></text></g><g><title>all (288,469 instructions, 100%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(242,194,12)" fg:x="0" fg:w="288469"/><text x="0.2930%" y="431.50"></text></g><g><title>canister_update witness (288,469 instructions, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(214,177,31)" fg:x="0" fg:w="288469"/><text x="0.2930%" y="415.50">canister_update witness</text></g></svg></svg>